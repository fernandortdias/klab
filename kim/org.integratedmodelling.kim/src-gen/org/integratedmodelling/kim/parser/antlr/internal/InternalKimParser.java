package org.integratedmodelling.kim.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.IUnorderedGroupHelper.UnorderedGroupState;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.integratedmodelling.kim.services.KimGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalKimParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_LOWERCASE_ID", "RULE_UPPERCASE_ID", "RULE_STRING", "RULE_SEPARATOR", "RULE_EXPR", "RULE_CAMELCASE_ID", "RULE_INT", "RULE_LOWERCASE_DASHID", "RULE_ID", "RULE_UPPERCASE_PATH", "RULE_BACKCASE_ID", "RULE_ANNOTATION_ID", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER", "';'", "'void'", "'project'", "'private'", "'define'", "'as'", "'each'", "','", "'true'", "'false'", "'observing'", "'using'", "'classified'", "'discretized'", "'into'", "'according'", "'to'", "'lookup'", "'('", "'?'", "'*'", "')'", "'metadata'", "'otherwise'", "'if'", "'unless'", "'inclusive'", "'exclusive'", "'in'", "'unknown'", "'{{'", "'}}'", "'|'", "'#'", "'aggregated'", "'over'", "'on'", "'definition'", "'instantiation'", "'termination'", "'context'", "'related'", "'set'", "'integrate'", "'do'", "'then'", "'finally'", "'move'", "'away'", "'for'", "'model'", "'learn'", "'number'", "'object'", "'text'", "'boolean'", "'>'", "'>='", "'<='", "'<'", "'where'", "'=='", "'='", "'only'", "'without'", "'!='", "'plus'", "'minus'", "'times'", "'by'", "'namespace'", "'scenario'", "'worldview'", "'language'", "'imports'", "'covering'", "'domain'", "'root'", "'disjoint'", "'with'", "'version'", "'resolve'", "'from'", "'outside'", "'parameters'", "'urn:klab:'", "':'", "'&'", "'/'", "'.'", "'observe'", "'extends'", "'children'", "'any'", "'per'", "'optional'", "'required'", "'named'", "'all'", "'down'", "'total'", "'averaged'", "'summed'", "'of'", "'caused'", "'adjacent'", "'contained'", "'containing'", "'causing'", "'during'", "'within'", "'linking'", "'${'", "'#{'", "'inherent'", "'compresent'", "'container'", "'purpose'", "'causant'", "'cooccurrent'", "'}'", "'not'", "'no'", "'identified'", "'presence'", "'count'", "'distance'", "'probability'", "'assessment'", "'change'", "'rate'", "'changed'", "'uncertainty'", "'magnitude'", "'level'", "'type'", "'observability'", "'proportion'", "'percentage'", "'ratio'", "'monetary'", "'value'", "'occurrence'", "'identity'", "'or'", "'and'", "'follows'", "'deliberative'", "'interactive'", "'reactive'", "'agent'", "'relationship'", "'abstract'", "'deniable'", "'subjective'", "'rescaling'", "'is'", "'equals'", "'core'", "'nothing'", "'exposes'", "'exposing'", "'defines'", "'authority'", "'requires'", "'describes'", "'increases'", "'decreases'", "'marks'", "'classifies'", "'discretizes'", "'inherits'", "'has'", "'role'", "'targeting'", "'confers'", "'part'", "'constituent'", "'consists'", "'creates'", "'applies'", "'links'", "'inverse'", "'affects'", "'implies'", "'uses'", "'exactly'", "'at'", "'least'", "'most'", "'more'", "'contains'", "'between'", "'attribute'", "'realm'", "'extent'", "'{'", "'?='", "'quality'", "'class'", "'quantity'", "'configuration'", "'bond'", "'ordering'", "'amount'", "'length'", "'mass'", "'volume'", "'weight'", "'money'", "'duration'", "'area'", "'acceleration'", "'energy'", "'entropy'", "'priority'", "'electric-potential'", "'charge'", "'resistance'", "'resistivity'", "'pressure'", "'angle'", "'velocity'", "'temperature'", "'viscosity'", "'thing'", "'process'", "'event'", "'functional'", "'structural'", "'@'", "'+'", "'-'", "'l'", "'e'", "'E'", "'AD'", "'CE'", "'BC'", "'^'"
    };
    public static final int T__144=144;
    public static final int T__143=143;
    public static final int T__146=146;
    public static final int T__50=50;
    public static final int T__145=145;
    public static final int T__140=140;
    public static final int RULE_BACKCASE_ID=14;
    public static final int T__142=142;
    public static final int T__141=141;
    public static final int T__59=59;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__137=137;
    public static final int T__258=258;
    public static final int T__52=52;
    public static final int T__136=136;
    public static final int T__257=257;
    public static final int T__53=53;
    public static final int T__139=139;
    public static final int T__54=54;
    public static final int T__138=138;
    public static final int T__259=259;
    public static final int T__133=133;
    public static final int T__254=254;
    public static final int T__132=132;
    public static final int T__253=253;
    public static final int T__60=60;
    public static final int T__135=135;
    public static final int T__256=256;
    public static final int T__61=61;
    public static final int T__134=134;
    public static final int T__255=255;
    public static final int T__250=250;
    public static final int RULE_ID=12;
    public static final int T__131=131;
    public static final int T__252=252;
    public static final int T__130=130;
    public static final int T__251=251;
    public static final int RULE_INT=10;
    public static final int T__66=66;
    public static final int T__67=67;
    public static final int T__129=129;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__62=62;
    public static final int T__126=126;
    public static final int T__247=247;
    public static final int T__63=63;
    public static final int T__125=125;
    public static final int T__246=246;
    public static final int T__64=64;
    public static final int T__128=128;
    public static final int T__249=249;
    public static final int T__65=65;
    public static final int T__127=127;
    public static final int T__248=248;
    public static final int T__166=166;
    public static final int T__165=165;
    public static final int T__168=168;
    public static final int T__167=167;
    public static final int T__162=162;
    public static final int T__161=161;
    public static final int T__164=164;
    public static final int T__163=163;
    public static final int T__160=160;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__159=159;
    public static final int T__30=30;
    public static final int T__158=158;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int T__155=155;
    public static final int T__154=154;
    public static final int T__157=157;
    public static final int T__156=156;
    public static final int T__151=151;
    public static final int T__150=150;
    public static final int T__153=153;
    public static final int T__152=152;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int T__46=46;
    public static final int RULE_EXPR=8;
    public static final int T__47=47;
    public static final int T__40=40;
    public static final int T__148=148;
    public static final int T__41=41;
    public static final int T__147=147;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__149=149;
    public static final int T__100=100;
    public static final int T__221=221;
    public static final int T__220=220;
    public static final int T__102=102;
    public static final int T__223=223;
    public static final int T__101=101;
    public static final int T__222=222;
    public static final int T__218=218;
    public static final int T__217=217;
    public static final int T__219=219;
    public static final int T__214=214;
    public static final int T__213=213;
    public static final int T__216=216;
    public static final int T__215=215;
    public static final int T__210=210;
    public static final int T__212=212;
    public static final int T__211=211;
    public static final int RULE_CAMELCASE_ID=9;
    public static final int T__26=26;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int T__29=29;
    public static final int T__22=22;
    public static final int T__207=207;
    public static final int T__23=23;
    public static final int T__206=206;
    public static final int T__24=24;
    public static final int T__209=209;
    public static final int T__25=25;
    public static final int T__208=208;
    public static final int T__203=203;
    public static final int T__202=202;
    public static final int T__20=20;
    public static final int T__205=205;
    public static final int T__21=21;
    public static final int T__204=204;
    public static final int T__122=122;
    public static final int T__243=243;
    public static final int T__121=121;
    public static final int T__242=242;
    public static final int T__124=124;
    public static final int T__245=245;
    public static final int T__123=123;
    public static final int T__244=244;
    public static final int T__120=120;
    public static final int T__241=241;
    public static final int T__240=240;
    public static final int RULE_SEPARATOR=7;
    public static final int RULE_SL_COMMENT=17;
    public static final int T__119=119;
    public static final int T__118=118;
    public static final int T__239=239;
    public static final int T__115=115;
    public static final int T__236=236;
    public static final int EOF=-1;
    public static final int T__114=114;
    public static final int T__235=235;
    public static final int T__117=117;
    public static final int T__238=238;
    public static final int T__116=116;
    public static final int T__237=237;
    public static final int T__111=111;
    public static final int T__232=232;
    public static final int T__110=110;
    public static final int T__231=231;
    public static final int T__113=113;
    public static final int T__234=234;
    public static final int T__112=112;
    public static final int T__233=233;
    public static final int T__230=230;
    public static final int RULE_ANNOTATION_ID=15;
    public static final int T__108=108;
    public static final int T__229=229;
    public static final int T__107=107;
    public static final int T__228=228;
    public static final int T__109=109;
    public static final int T__104=104;
    public static final int T__225=225;
    public static final int T__103=103;
    public static final int T__224=224;
    public static final int T__106=106;
    public static final int T__227=227;
    public static final int T__105=105;
    public static final int T__226=226;
    public static final int RULE_UPPERCASE_ID=5;
    public static final int RULE_ML_COMMENT=16;
    public static final int T__201=201;
    public static final int T__200=200;
    public static final int RULE_UPPERCASE_PATH=13;
    public static final int T__91=91;
    public static final int T__188=188;
    public static final int T__92=92;
    public static final int T__187=187;
    public static final int T__93=93;
    public static final int T__94=94;
    public static final int T__189=189;
    public static final int T__184=184;
    public static final int T__183=183;
    public static final int T__186=186;
    public static final int T__90=90;
    public static final int T__185=185;
    public static final int T__180=180;
    public static final int T__182=182;
    public static final int T__181=181;
    public static final int T__99=99;
    public static final int T__95=95;
    public static final int T__96=96;
    public static final int T__97=97;
    public static final int T__98=98;
    public static final int T__177=177;
    public static final int T__176=176;
    public static final int T__179=179;
    public static final int T__178=178;
    public static final int T__173=173;
    public static final int T__172=172;
    public static final int RULE_LOWERCASE_DASHID=11;
    public static final int T__175=175;
    public static final int T__174=174;
    public static final int T__171=171;
    public static final int T__170=170;
    public static final int T__169=169;
    public static final int T__70=70;
    public static final int T__71=71;
    public static final int T__72=72;
    public static final int RULE_STRING=6;
    public static final int T__77=77;
    public static final int T__78=78;
    public static final int T__79=79;
    public static final int T__73=73;
    public static final int T__74=74;
    public static final int T__75=75;
    public static final int T__76=76;
    public static final int T__80=80;
    public static final int T__199=199;
    public static final int T__81=81;
    public static final int T__198=198;
    public static final int T__82=82;
    public static final int T__83=83;
    public static final int T__195=195;
    public static final int T__194=194;
    public static final int RULE_WS=18;
    public static final int T__197=197;
    public static final int T__196=196;
    public static final int T__191=191;
    public static final int T__190=190;
    public static final int T__193=193;
    public static final int T__192=192;
    public static final int RULE_ANY_OTHER=19;
    public static final int RULE_LOWERCASE_ID=4;
    public static final int T__88=88;
    public static final int T__89=89;
    public static final int T__84=84;
    public static final int T__85=85;
    public static final int T__86=86;
    public static final int T__87=87;

    // delegates
    // delegators


        public InternalKimParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalKimParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalKimParser.tokenNames; }
    public String getGrammarFileName() { return "InternalKim.g"; }



    /*
      This grammar contains a lot of empty actions to work around a bug in ANTLR.
      Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
    */

     	private KimGrammarAccess grammarAccess;

        public InternalKimParser(TokenStream input, KimGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }

        @Override
        protected String getFirstRuleName() {
        	return "Model";
       	}

       	@Override
       	protected KimGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}




    // $ANTLR start "entryRuleModel"
    // InternalKim.g:73:1: entryRuleModel returns [EObject current=null] : iv_ruleModel= ruleModel EOF ;
    public final EObject entryRuleModel() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleModel = null;


        try {
            // InternalKim.g:73:46: (iv_ruleModel= ruleModel EOF )
            // InternalKim.g:74:2: iv_ruleModel= ruleModel EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getModelRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleModel=ruleModel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleModel; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleModel"


    // $ANTLR start "ruleModel"
    // InternalKim.g:80:1: ruleModel returns [EObject current=null] : ( ( (lv_observable_0_0= ruleObservableSemantics ) ) | ( ( (lv_namespace_1_0= ruleNamespace ) )? ( (lv_statements_2_0= ruleStatement ) )* ) ) ;
    public final EObject ruleModel() throws RecognitionException {
        EObject current = null;

        EObject lv_observable_0_0 = null;

        EObject lv_namespace_1_0 = null;

        EObject lv_statements_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:86:2: ( ( ( (lv_observable_0_0= ruleObservableSemantics ) ) | ( ( (lv_namespace_1_0= ruleNamespace ) )? ( (lv_statements_2_0= ruleStatement ) )* ) ) )
            // InternalKim.g:87:2: ( ( (lv_observable_0_0= ruleObservableSemantics ) ) | ( ( (lv_namespace_1_0= ruleNamespace ) )? ( (lv_statements_2_0= ruleStatement ) )* ) )
            {
            // InternalKim.g:87:2: ( ( (lv_observable_0_0= ruleObservableSemantics ) ) | ( ( (lv_namespace_1_0= ruleNamespace ) )? ( (lv_statements_2_0= ruleStatement ) )* ) )
            int alt3=2;
            switch ( input.LA(1) ) {
            case RULE_LOWERCASE_ID:
            case RULE_UPPERCASE_ID:
            case RULE_STRING:
            case RULE_EXPR:
            case RULE_CAMELCASE_ID:
            case RULE_INT:
            case RULE_LOWERCASE_DASHID:
            case RULE_ID:
            case RULE_UPPERCASE_PATH:
            case 27:
            case 28:
            case 29:
            case 38:
            case 49:
            case 50:
            case 113:
            case 132:
            case 133:
            case 141:
            case 142:
            case 144:
            case 145:
            case 146:
            case 147:
            case 148:
            case 149:
            case 151:
            case 152:
            case 153:
            case 154:
            case 155:
            case 156:
            case 157:
            case 158:
            case 159:
            case 160:
            case 161:
            case 162:
            case 216:
            case 251:
            case 252:
                {
                alt3=1;
                }
                break;
            case 163:
                {
                switch ( input.LA(2) ) {
                case RULE_ANNOTATION_ID:
                case 97:
                case 172:
                    {
                    alt3=2;
                    }
                    break;
                case RULE_CAMELCASE_ID:
                    {
                    int LA3_4 = input.LA(3);

                    if ( (LA3_4==89) ) {
                        alt3=1;
                    }
                    else if ( ((LA3_4>=RULE_LOWERCASE_ID && LA3_4<=RULE_STRING)||LA3_4==RULE_LOWERCASE_DASHID||LA3_4==RULE_BACKCASE_ID||LA3_4==20||LA3_4==42||LA3_4==117||LA3_4==143||(LA3_4>=176 && LA3_4<=177)||(LA3_4>=180 && LA3_4<=182)||(LA3_4>=184 && LA3_4<=192)||(LA3_4>=195 && LA3_4<=205)||LA3_4==211) ) {
                        alt3=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 3, 4, input);

                        throw nvae;
                    }
                    }
                    break;
                case RULE_UPPERCASE_ID:
                case RULE_STRING:
                case RULE_INT:
                case RULE_ID:
                    {
                    alt3=1;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 3, 2, input);

                    throw nvae;
                }

                }
                break;
            case EOF:
            case RULE_ANNOTATION_ID:
            case 21:
            case 22:
            case 23:
            case 24:
            case 70:
            case 71:
            case 72:
            case 73:
            case 74:
            case 75:
            case 90:
            case 91:
            case 92:
            case 96:
            case 110:
            case 167:
            case 168:
            case 169:
            case 170:
            case 171:
            case 172:
            case 173:
            case 174:
            case 175:
            case 193:
            case 213:
            case 214:
            case 215:
            case 218:
            case 219:
            case 220:
            case 221:
            case 222:
            case 223:
            case 224:
            case 225:
            case 226:
            case 227:
            case 228:
            case 229:
            case 230:
            case 231:
            case 232:
            case 233:
            case 234:
            case 235:
            case 236:
            case 237:
            case 238:
            case 239:
            case 240:
            case 241:
            case 242:
            case 243:
            case 244:
            case 245:
            case 246:
            case 247:
            case 248:
            case 249:
                {
                alt3=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;
            }

            switch (alt3) {
                case 1 :
                    // InternalKim.g:88:3: ( (lv_observable_0_0= ruleObservableSemantics ) )
                    {
                    // InternalKim.g:88:3: ( (lv_observable_0_0= ruleObservableSemantics ) )
                    // InternalKim.g:89:4: (lv_observable_0_0= ruleObservableSemantics )
                    {
                    // InternalKim.g:89:4: (lv_observable_0_0= ruleObservableSemantics )
                    // InternalKim.g:90:5: lv_observable_0_0= ruleObservableSemantics
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getModelAccess().getObservableObservableSemanticsParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_observable_0_0=ruleObservableSemantics();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getModelRule());
                      					}
                      					set(
                      						current,
                      						"observable",
                      						lv_observable_0_0,
                      						"org.integratedmodelling.kim.Kim.ObservableSemantics");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:108:3: ( ( (lv_namespace_1_0= ruleNamespace ) )? ( (lv_statements_2_0= ruleStatement ) )* )
                    {
                    // InternalKim.g:108:3: ( ( (lv_namespace_1_0= ruleNamespace ) )? ( (lv_statements_2_0= ruleStatement ) )* )
                    // InternalKim.g:109:4: ( (lv_namespace_1_0= ruleNamespace ) )? ( (lv_statements_2_0= ruleStatement ) )*
                    {
                    // InternalKim.g:109:4: ( (lv_namespace_1_0= ruleNamespace ) )?
                    int alt1=2;
                    alt1 = dfa1.predict(input);
                    switch (alt1) {
                        case 1 :
                            // InternalKim.g:110:5: (lv_namespace_1_0= ruleNamespace )
                            {
                            // InternalKim.g:110:5: (lv_namespace_1_0= ruleNamespace )
                            // InternalKim.g:111:6: lv_namespace_1_0= ruleNamespace
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getModelAccess().getNamespaceNamespaceParserRuleCall_1_0_0());
                              					
                            }
                            pushFollow(FOLLOW_3);
                            lv_namespace_1_0=ruleNamespace();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getModelRule());
                              						}
                              						set(
                              							current,
                              							"namespace",
                              							lv_namespace_1_0,
                              							"org.integratedmodelling.kim.Kim.Namespace");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalKim.g:128:4: ( (lv_statements_2_0= ruleStatement ) )*
                    loop2:
                    do {
                        int alt2=2;
                        int LA2_0 = input.LA(1);

                        if ( (LA2_0==RULE_ANNOTATION_ID||(LA2_0>=21 && LA2_0<=24)||(LA2_0>=70 && LA2_0<=75)||LA2_0==96||LA2_0==110||LA2_0==163||(LA2_0>=167 && LA2_0<=175)||LA2_0==193||(LA2_0>=213 && LA2_0<=215)||(LA2_0>=218 && LA2_0<=249)) ) {
                            alt2=1;
                        }


                        switch (alt2) {
                    	case 1 :
                    	    // InternalKim.g:129:5: (lv_statements_2_0= ruleStatement )
                    	    {
                    	    // InternalKim.g:129:5: (lv_statements_2_0= ruleStatement )
                    	    // InternalKim.g:130:6: lv_statements_2_0= ruleStatement
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getModelAccess().getStatementsStatementParserRuleCall_1_1_0());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_3);
                    	    lv_statements_2_0=ruleStatement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getModelRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"statements",
                    	      							lv_statements_2_0,
                    	      							"org.integratedmodelling.kim.Kim.Statement");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop2;
                        }
                    } while (true);


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleModel"


    // $ANTLR start "entryRuleStatement"
    // InternalKim.g:152:1: entryRuleStatement returns [EObject current=null] : iv_ruleStatement= ruleStatement EOF ;
    public final EObject entryRuleStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStatement = null;


        try {
            // InternalKim.g:152:50: (iv_ruleStatement= ruleStatement EOF )
            // InternalKim.g:153:2: iv_ruleStatement= ruleStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStatement=ruleStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStatement"


    // $ANTLR start "ruleStatement"
    // InternalKim.g:159:1: ruleStatement returns [EObject current=null] : ( ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' ) | ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' ) | ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' ) | ( ( (lv_defineStatement_6_0= ruleDefineStatement ) ) otherlv_7= ';' ) | ( ( (lv_observeStatement_8_0= ruleObserveStatement ) ) otherlv_9= ';' ) ) ;
    public final EObject ruleStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        EObject lv_conceptStatement_0_0 = null;

        EObject lv_modelStatement_2_0 = null;

        EObject lv_upperOntologyStatement_4_0 = null;

        EObject lv_defineStatement_6_0 = null;

        EObject lv_observeStatement_8_0 = null;



        	enterRule();

        try {
            // InternalKim.g:165:2: ( ( ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' ) | ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' ) | ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' ) | ( ( (lv_defineStatement_6_0= ruleDefineStatement ) ) otherlv_7= ';' ) | ( ( (lv_observeStatement_8_0= ruleObserveStatement ) ) otherlv_9= ';' ) ) )
            // InternalKim.g:166:2: ( ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' ) | ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' ) | ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' ) | ( ( (lv_defineStatement_6_0= ruleDefineStatement ) ) otherlv_7= ';' ) | ( ( (lv_observeStatement_8_0= ruleObserveStatement ) ) otherlv_9= ';' ) )
            {
            // InternalKim.g:166:2: ( ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' ) | ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' ) | ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' ) | ( ( (lv_defineStatement_6_0= ruleDefineStatement ) ) otherlv_7= ';' ) | ( ( (lv_observeStatement_8_0= ruleObserveStatement ) ) otherlv_9= ';' ) )
            int alt4=5;
            alt4 = dfa4.predict(input);
            switch (alt4) {
                case 1 :
                    // InternalKim.g:167:3: ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' )
                    {
                    // InternalKim.g:167:3: ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' )
                    // InternalKim.g:168:4: ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';'
                    {
                    // InternalKim.g:168:4: ( (lv_conceptStatement_0_0= ruleConceptStatement ) )
                    // InternalKim.g:169:5: (lv_conceptStatement_0_0= ruleConceptStatement )
                    {
                    // InternalKim.g:169:5: (lv_conceptStatement_0_0= ruleConceptStatement )
                    // InternalKim.g:170:6: lv_conceptStatement_0_0= ruleConceptStatement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStatementAccess().getConceptStatementConceptStatementParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_4);
                    lv_conceptStatement_0_0=ruleConceptStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStatementRule());
                      						}
                      						set(
                      							current,
                      							"conceptStatement",
                      							lv_conceptStatement_0_0,
                      							"org.integratedmodelling.kim.Kim.ConceptStatement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,20,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getStatementAccess().getSemicolonKeyword_0_1());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:193:3: ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' )
                    {
                    // InternalKim.g:193:3: ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' )
                    // InternalKim.g:194:4: ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';'
                    {
                    // InternalKim.g:194:4: ( (lv_modelStatement_2_0= ruleModelStatement ) )
                    // InternalKim.g:195:5: (lv_modelStatement_2_0= ruleModelStatement )
                    {
                    // InternalKim.g:195:5: (lv_modelStatement_2_0= ruleModelStatement )
                    // InternalKim.g:196:6: lv_modelStatement_2_0= ruleModelStatement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStatementAccess().getModelStatementModelStatementParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_4);
                    lv_modelStatement_2_0=ruleModelStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStatementRule());
                      						}
                      						set(
                      							current,
                      							"modelStatement",
                      							lv_modelStatement_2_0,
                      							"org.integratedmodelling.kim.Kim.ModelStatement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,20,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getStatementAccess().getSemicolonKeyword_1_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:219:3: ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' )
                    {
                    // InternalKim.g:219:3: ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' )
                    // InternalKim.g:220:4: ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';'
                    {
                    // InternalKim.g:220:4: ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) )
                    // InternalKim.g:221:5: (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition )
                    {
                    // InternalKim.g:221:5: (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition )
                    // InternalKim.g:222:6: lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStatementAccess().getUpperOntologyStatementUpperOntologyDefinitionParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_4);
                    lv_upperOntologyStatement_4_0=ruleUpperOntologyDefinition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStatementRule());
                      						}
                      						set(
                      							current,
                      							"upperOntologyStatement",
                      							lv_upperOntologyStatement_4_0,
                      							"org.integratedmodelling.kim.Kim.UpperOntologyDefinition");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,20,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getStatementAccess().getSemicolonKeyword_2_1());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:245:3: ( ( (lv_defineStatement_6_0= ruleDefineStatement ) ) otherlv_7= ';' )
                    {
                    // InternalKim.g:245:3: ( ( (lv_defineStatement_6_0= ruleDefineStatement ) ) otherlv_7= ';' )
                    // InternalKim.g:246:4: ( (lv_defineStatement_6_0= ruleDefineStatement ) ) otherlv_7= ';'
                    {
                    // InternalKim.g:246:4: ( (lv_defineStatement_6_0= ruleDefineStatement ) )
                    // InternalKim.g:247:5: (lv_defineStatement_6_0= ruleDefineStatement )
                    {
                    // InternalKim.g:247:5: (lv_defineStatement_6_0= ruleDefineStatement )
                    // InternalKim.g:248:6: lv_defineStatement_6_0= ruleDefineStatement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStatementAccess().getDefineStatementDefineStatementParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_4);
                    lv_defineStatement_6_0=ruleDefineStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStatementRule());
                      						}
                      						set(
                      							current,
                      							"defineStatement",
                      							lv_defineStatement_6_0,
                      							"org.integratedmodelling.kim.Kim.DefineStatement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_7=(Token)match(input,20,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getStatementAccess().getSemicolonKeyword_3_1());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:271:3: ( ( (lv_observeStatement_8_0= ruleObserveStatement ) ) otherlv_9= ';' )
                    {
                    // InternalKim.g:271:3: ( ( (lv_observeStatement_8_0= ruleObserveStatement ) ) otherlv_9= ';' )
                    // InternalKim.g:272:4: ( (lv_observeStatement_8_0= ruleObserveStatement ) ) otherlv_9= ';'
                    {
                    // InternalKim.g:272:4: ( (lv_observeStatement_8_0= ruleObserveStatement ) )
                    // InternalKim.g:273:5: (lv_observeStatement_8_0= ruleObserveStatement )
                    {
                    // InternalKim.g:273:5: (lv_observeStatement_8_0= ruleObserveStatement )
                    // InternalKim.g:274:6: lv_observeStatement_8_0= ruleObserveStatement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStatementAccess().getObserveStatementObserveStatementParserRuleCall_4_0_0());
                      					
                    }
                    pushFollow(FOLLOW_4);
                    lv_observeStatement_8_0=ruleObserveStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStatementRule());
                      						}
                      						set(
                      							current,
                      							"observeStatement",
                      							lv_observeStatement_8_0,
                      							"org.integratedmodelling.kim.Kim.ObserveStatement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_9=(Token)match(input,20,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getStatementAccess().getSemicolonKeyword_4_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStatement"


    // $ANTLR start "entryRuleModelStatement"
    // InternalKim.g:300:1: entryRuleModelStatement returns [EObject current=null] : iv_ruleModelStatement= ruleModelStatement EOF ;
    public final EObject entryRuleModelStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleModelStatement = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getModelStatementAccess().getUnorderedGroup_1()
        	);

        try {
            // InternalKim.g:304:2: (iv_ruleModelStatement= ruleModelStatement EOF )
            // InternalKim.g:305:2: iv_ruleModelStatement= ruleModelStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getModelStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleModelStatement=ruleModelStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleModelStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleModelStatement"


    // $ANTLR start "ruleModelStatement"
    // InternalKim.g:314:1: ruleModelStatement returns [EObject current=null] : ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? ( ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )* ) ) )? ( (lv_model_6_0= ruleMODEL_TYPE ) ) ( (lv_body_7_0= ruleModelBodyStatement ) ) ) ;
    public final EObject ruleModelStatement() throws RecognitionException {
        EObject current = null;

        Token lv_inactive_3_0=null;
        Token lv_projectPrivate_4_0=null;
        Token lv_private_5_0=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_annotations_1_0 = null;

        AntlrDatatypeRuleToken lv_model_6_0 = null;

        EObject lv_body_7_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getModelStatementAccess().getUnorderedGroup_1()
        	);

        try {
            // InternalKim.g:323:2: ( ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? ( ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )* ) ) )? ( (lv_model_6_0= ruleMODEL_TYPE ) ) ( (lv_body_7_0= ruleModelBodyStatement ) ) ) )
            // InternalKim.g:324:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? ( ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )* ) ) )? ( (lv_model_6_0= ruleMODEL_TYPE ) ) ( (lv_body_7_0= ruleModelBodyStatement ) ) )
            {
            // InternalKim.g:324:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? ( ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )* ) ) )? ( (lv_model_6_0= ruleMODEL_TYPE ) ) ( (lv_body_7_0= ruleModelBodyStatement ) ) )
            // InternalKim.g:325:3: ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? ( ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )* ) ) )? ( (lv_model_6_0= ruleMODEL_TYPE ) ) ( (lv_body_7_0= ruleModelBodyStatement ) )
            {
            // InternalKim.g:325:3: ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )?
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==RULE_ANNOTATION_ID) ) {
                alt6=1;
            }
            switch (alt6) {
                case 1 :
                    // InternalKim.g:326:4: ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )*
                    {
                    // InternalKim.g:326:4: ( (lv_annotations_0_0= ruleAnnotation ) )
                    // InternalKim.g:327:5: (lv_annotations_0_0= ruleAnnotation )
                    {
                    // InternalKim.g:327:5: (lv_annotations_0_0= ruleAnnotation )
                    // InternalKim.g:328:6: lv_annotations_0_0= ruleAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getModelStatementAccess().getAnnotationsAnnotationParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_5);
                    lv_annotations_0_0=ruleAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getModelStatementRule());
                      						}
                      						add(
                      							current,
                      							"annotations",
                      							lv_annotations_0_0,
                      							"org.integratedmodelling.kim.Kim.Annotation");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:345:4: ( (lv_annotations_1_0= ruleAnnotation ) )*
                    loop5:
                    do {
                        int alt5=2;
                        int LA5_0 = input.LA(1);

                        if ( (LA5_0==RULE_ANNOTATION_ID) ) {
                            alt5=1;
                        }


                        switch (alt5) {
                    	case 1 :
                    	    // InternalKim.g:346:5: (lv_annotations_1_0= ruleAnnotation )
                    	    {
                    	    // InternalKim.g:346:5: (lv_annotations_1_0= ruleAnnotation )
                    	    // InternalKim.g:347:6: lv_annotations_1_0= ruleAnnotation
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getModelStatementAccess().getAnnotationsAnnotationParserRuleCall_0_1_0());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_5);
                    	    lv_annotations_1_0=ruleAnnotation();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getModelStatementRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"annotations",
                    	      							lv_annotations_1_0,
                    	      							"org.integratedmodelling.kim.Kim.Annotation");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop5;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalKim.g:365:3: ( ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )* ) ) )?
            int alt9=2;
            switch ( input.LA(1) ) {
                case 21:
                case 22:
                case 23:
                    {
                    alt9=1;
                    }
                    break;
                case 70:
                    {
                    int LA9_2 = input.LA(2);

                    if ( (synpred13_InternalKim()) ) {
                        alt9=1;
                    }
                    }
                    break;
                case 71:
                    {
                    int LA9_3 = input.LA(2);

                    if ( (synpred13_InternalKim()) ) {
                        alt9=1;
                    }
                    }
                    break;
                case 72:
                    {
                    int LA9_4 = input.LA(2);

                    if ( (synpred13_InternalKim()) ) {
                        alt9=1;
                    }
                    }
                    break;
                case 73:
                    {
                    int LA9_5 = input.LA(2);

                    if ( (synpred13_InternalKim()) ) {
                        alt9=1;
                    }
                    }
                    break;
                case 74:
                    {
                    int LA9_6 = input.LA(2);

                    if ( (synpred13_InternalKim()) ) {
                        alt9=1;
                    }
                    }
                    break;
                case 75:
                    {
                    int LA9_7 = input.LA(2);

                    if ( (synpred13_InternalKim()) ) {
                        alt9=1;
                    }
                    }
                    break;
            }

            switch (alt9) {
                case 1 :
                    // InternalKim.g:366:4: ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )* ) )
                    {
                    // InternalKim.g:366:4: ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )* ) )
                    // InternalKim.g:367:5: ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )* )
                    {
                    getUnorderedGroupHelper().enter(grammarAccess.getModelStatementAccess().getUnorderedGroup_1());
                    // InternalKim.g:370:5: ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )* )
                    // InternalKim.g:371:6: ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )*
                    {
                    // InternalKim.g:371:6: ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )*
                    loop8:
                    do {
                        int alt8=3;
                        int LA8_0 = input.LA(1);

                        if ( LA8_0 == 21 && getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0) ) {
                            alt8=1;
                        }
                        else if ( LA8_0 == 22 && getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1) ) {
                            alt8=2;
                        }
                        else if ( LA8_0 == 23 && getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1) ) {
                            alt8=2;
                        }


                        switch (alt8) {
                    	case 1 :
                    	    // InternalKim.g:372:4: ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) )
                    	    {
                    	    // InternalKim.g:372:4: ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) )
                    	    // InternalKim.g:373:5: {...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleModelStatement", "getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0)");
                    	    }
                    	    // InternalKim.g:373:111: ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) )
                    	    // InternalKim.g:374:6: ({...}? => ( (lv_inactive_3_0= 'void' ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0);
                    	    // InternalKim.g:377:9: ({...}? => ( (lv_inactive_3_0= 'void' ) ) )
                    	    // InternalKim.g:377:10: {...}? => ( (lv_inactive_3_0= 'void' ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleModelStatement", "true");
                    	    }
                    	    // InternalKim.g:377:19: ( (lv_inactive_3_0= 'void' ) )
                    	    // InternalKim.g:377:20: (lv_inactive_3_0= 'void' )
                    	    {
                    	    // InternalKim.g:377:20: (lv_inactive_3_0= 'void' )
                    	    // InternalKim.g:378:10: lv_inactive_3_0= 'void'
                    	    {
                    	    lv_inactive_3_0=(Token)match(input,21,FOLLOW_6); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      										newLeafNode(lv_inactive_3_0, grammarAccess.getModelStatementAccess().getInactiveVoidKeyword_1_0_0());
                    	      									
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      										if (current==null) {
                    	      											current = createModelElement(grammarAccess.getModelStatementRule());
                    	      										}
                    	      										setWithLastConsumed(current, "inactive", true, "void");
                    	      									
                    	    }

                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getModelStatementAccess().getUnorderedGroup_1());

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalKim.g:395:4: ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) )
                    	    {
                    	    // InternalKim.g:395:4: ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) )
                    	    // InternalKim.g:396:5: {...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleModelStatement", "getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1)");
                    	    }
                    	    // InternalKim.g:396:111: ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) )
                    	    // InternalKim.g:397:6: ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1);
                    	    // InternalKim.g:400:9: ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) )
                    	    // InternalKim.g:400:10: {...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleModelStatement", "true");
                    	    }
                    	    // InternalKim.g:400:19: ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) )
                    	    // InternalKim.g:400:20: ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) )
                    	    {
                    	    // InternalKim.g:400:20: ( (lv_projectPrivate_4_0= 'project' ) )?
                    	    int alt7=2;
                    	    int LA7_0 = input.LA(1);

                    	    if ( (LA7_0==22) ) {
                    	        alt7=1;
                    	    }
                    	    switch (alt7) {
                    	        case 1 :
                    	            // InternalKim.g:401:10: (lv_projectPrivate_4_0= 'project' )
                    	            {
                    	            // InternalKim.g:401:10: (lv_projectPrivate_4_0= 'project' )
                    	            // InternalKim.g:402:11: lv_projectPrivate_4_0= 'project'
                    	            {
                    	            lv_projectPrivate_4_0=(Token)match(input,22,FOLLOW_7); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              											newLeafNode(lv_projectPrivate_4_0, grammarAccess.getModelStatementAccess().getProjectPrivateProjectKeyword_1_1_0_0());
                    	              										
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              											if (current==null) {
                    	              												current = createModelElement(grammarAccess.getModelStatementRule());
                    	              											}
                    	              											setWithLastConsumed(current, "projectPrivate", true, "project");
                    	              										
                    	            }

                    	            }


                    	            }
                    	            break;

                    	    }

                    	    // InternalKim.g:414:9: ( (lv_private_5_0= 'private' ) )
                    	    // InternalKim.g:415:10: (lv_private_5_0= 'private' )
                    	    {
                    	    // InternalKim.g:415:10: (lv_private_5_0= 'private' )
                    	    // InternalKim.g:416:11: lv_private_5_0= 'private'
                    	    {
                    	    lv_private_5_0=(Token)match(input,23,FOLLOW_6); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      											newLeafNode(lv_private_5_0, grammarAccess.getModelStatementAccess().getPrivatePrivateKeyword_1_1_1_0());
                    	      										
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      											if (current==null) {
                    	      												current = createModelElement(grammarAccess.getModelStatementRule());
                    	      											}
                    	      											setWithLastConsumed(current, "private", true, "private");
                    	      										
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getModelStatementAccess().getUnorderedGroup_1());

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop8;
                        }
                    } while (true);


                    }


                    }

                    getUnorderedGroupHelper().leave(grammarAccess.getModelStatementAccess().getUnorderedGroup_1());

                    }
                    break;

            }

            // InternalKim.g:441:3: ( (lv_model_6_0= ruleMODEL_TYPE ) )
            // InternalKim.g:442:4: (lv_model_6_0= ruleMODEL_TYPE )
            {
            // InternalKim.g:442:4: (lv_model_6_0= ruleMODEL_TYPE )
            // InternalKim.g:443:5: lv_model_6_0= ruleMODEL_TYPE
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getModelStatementAccess().getModelMODEL_TYPEParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_8);
            lv_model_6_0=ruleMODEL_TYPE();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getModelStatementRule());
              					}
              					set(
              						current,
              						"model",
              						lv_model_6_0,
              						"org.integratedmodelling.kim.Kim.MODEL_TYPE");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:460:3: ( (lv_body_7_0= ruleModelBodyStatement ) )
            // InternalKim.g:461:4: (lv_body_7_0= ruleModelBodyStatement )
            {
            // InternalKim.g:461:4: (lv_body_7_0= ruleModelBodyStatement )
            // InternalKim.g:462:5: lv_body_7_0= ruleModelBodyStatement
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getModelStatementAccess().getBodyModelBodyStatementParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_body_7_0=ruleModelBodyStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getModelStatementRule());
              					}
              					set(
              						current,
              						"body",
              						lv_body_7_0,
              						"org.integratedmodelling.kim.Kim.ModelBodyStatement");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleModelStatement"


    // $ANTLR start "entryRuleDefineStatement"
    // InternalKim.g:486:1: entryRuleDefineStatement returns [EObject current=null] : iv_ruleDefineStatement= ruleDefineStatement EOF ;
    public final EObject entryRuleDefineStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDefineStatement = null;


        try {
            // InternalKim.g:486:56: (iv_ruleDefineStatement= ruleDefineStatement EOF )
            // InternalKim.g:487:2: iv_ruleDefineStatement= ruleDefineStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDefineStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDefineStatement=ruleDefineStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDefineStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDefineStatement"


    // $ANTLR start "ruleDefineStatement"
    // InternalKim.g:493:1: ruleDefineStatement returns [EObject current=null] : ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? otherlv_2= 'define' ( (lv_defineBody_3_0= ruleDefinitionBody ) ) ) ;
    public final EObject ruleDefineStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_annotations_1_0 = null;

        EObject lv_defineBody_3_0 = null;



        	enterRule();

        try {
            // InternalKim.g:499:2: ( ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? otherlv_2= 'define' ( (lv_defineBody_3_0= ruleDefinitionBody ) ) ) )
            // InternalKim.g:500:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? otherlv_2= 'define' ( (lv_defineBody_3_0= ruleDefinitionBody ) ) )
            {
            // InternalKim.g:500:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? otherlv_2= 'define' ( (lv_defineBody_3_0= ruleDefinitionBody ) ) )
            // InternalKim.g:501:3: ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? otherlv_2= 'define' ( (lv_defineBody_3_0= ruleDefinitionBody ) )
            {
            // InternalKim.g:501:3: ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )?
            int alt11=2;
            int LA11_0 = input.LA(1);

            if ( (LA11_0==RULE_ANNOTATION_ID) ) {
                alt11=1;
            }
            switch (alt11) {
                case 1 :
                    // InternalKim.g:502:4: ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )*
                    {
                    // InternalKim.g:502:4: ( (lv_annotations_0_0= ruleAnnotation ) )
                    // InternalKim.g:503:5: (lv_annotations_0_0= ruleAnnotation )
                    {
                    // InternalKim.g:503:5: (lv_annotations_0_0= ruleAnnotation )
                    // InternalKim.g:504:6: lv_annotations_0_0= ruleAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDefineStatementAccess().getAnnotationsAnnotationParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_9);
                    lv_annotations_0_0=ruleAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDefineStatementRule());
                      						}
                      						add(
                      							current,
                      							"annotations",
                      							lv_annotations_0_0,
                      							"org.integratedmodelling.kim.Kim.Annotation");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:521:4: ( (lv_annotations_1_0= ruleAnnotation ) )*
                    loop10:
                    do {
                        int alt10=2;
                        int LA10_0 = input.LA(1);

                        if ( (LA10_0==RULE_ANNOTATION_ID) ) {
                            alt10=1;
                        }


                        switch (alt10) {
                    	case 1 :
                    	    // InternalKim.g:522:5: (lv_annotations_1_0= ruleAnnotation )
                    	    {
                    	    // InternalKim.g:522:5: (lv_annotations_1_0= ruleAnnotation )
                    	    // InternalKim.g:523:6: lv_annotations_1_0= ruleAnnotation
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getDefineStatementAccess().getAnnotationsAnnotationParserRuleCall_0_1_0());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_9);
                    	    lv_annotations_1_0=ruleAnnotation();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getDefineStatementRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"annotations",
                    	      							lv_annotations_1_0,
                    	      							"org.integratedmodelling.kim.Kim.Annotation");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop10;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_2=(Token)match(input,24,FOLLOW_10); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getDefineStatementAccess().getDefineKeyword_1());
              		
            }
            // InternalKim.g:545:3: ( (lv_defineBody_3_0= ruleDefinitionBody ) )
            // InternalKim.g:546:4: (lv_defineBody_3_0= ruleDefinitionBody )
            {
            // InternalKim.g:546:4: (lv_defineBody_3_0= ruleDefinitionBody )
            // InternalKim.g:547:5: lv_defineBody_3_0= ruleDefinitionBody
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDefineStatementAccess().getDefineBodyDefinitionBodyParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_defineBody_3_0=ruleDefinitionBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDefineStatementRule());
              					}
              					set(
              						current,
              						"defineBody",
              						lv_defineBody_3_0,
              						"org.integratedmodelling.kim.Kim.DefinitionBody");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDefineStatement"


    // $ANTLR start "entryRuleDefinitionBody"
    // InternalKim.g:568:1: entryRuleDefinitionBody returns [EObject current=null] : iv_ruleDefinitionBody= ruleDefinitionBody EOF ;
    public final EObject entryRuleDefinitionBody() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDefinitionBody = null;


        try {
            // InternalKim.g:568:55: (iv_ruleDefinitionBody= ruleDefinitionBody EOF )
            // InternalKim.g:569:2: iv_ruleDefinitionBody= ruleDefinitionBody EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDefinitionBodyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDefinitionBody=ruleDefinitionBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDefinitionBody; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDefinitionBody"


    // $ANTLR start "ruleDefinitionBody"
    // InternalKim.g:575:1: ruleDefinitionBody returns [EObject current=null] : ( ( (lv_defineClass_0_0= RULE_LOWERCASE_ID ) )? ( ( (lv_name_1_1= RULE_UPPERCASE_ID | lv_name_1_2= RULE_LOWERCASE_ID ) ) ) otherlv_2= 'as' ( (lv_value_3_0= ruleValue ) ) ) ;
    public final EObject ruleDefinitionBody() throws RecognitionException {
        EObject current = null;

        Token lv_defineClass_0_0=null;
        Token lv_name_1_1=null;
        Token lv_name_1_2=null;
        Token otherlv_2=null;
        EObject lv_value_3_0 = null;



        	enterRule();

        try {
            // InternalKim.g:581:2: ( ( ( (lv_defineClass_0_0= RULE_LOWERCASE_ID ) )? ( ( (lv_name_1_1= RULE_UPPERCASE_ID | lv_name_1_2= RULE_LOWERCASE_ID ) ) ) otherlv_2= 'as' ( (lv_value_3_0= ruleValue ) ) ) )
            // InternalKim.g:582:2: ( ( (lv_defineClass_0_0= RULE_LOWERCASE_ID ) )? ( ( (lv_name_1_1= RULE_UPPERCASE_ID | lv_name_1_2= RULE_LOWERCASE_ID ) ) ) otherlv_2= 'as' ( (lv_value_3_0= ruleValue ) ) )
            {
            // InternalKim.g:582:2: ( ( (lv_defineClass_0_0= RULE_LOWERCASE_ID ) )? ( ( (lv_name_1_1= RULE_UPPERCASE_ID | lv_name_1_2= RULE_LOWERCASE_ID ) ) ) otherlv_2= 'as' ( (lv_value_3_0= ruleValue ) ) )
            // InternalKim.g:583:3: ( (lv_defineClass_0_0= RULE_LOWERCASE_ID ) )? ( ( (lv_name_1_1= RULE_UPPERCASE_ID | lv_name_1_2= RULE_LOWERCASE_ID ) ) ) otherlv_2= 'as' ( (lv_value_3_0= ruleValue ) )
            {
            // InternalKim.g:583:3: ( (lv_defineClass_0_0= RULE_LOWERCASE_ID ) )?
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==RULE_LOWERCASE_ID) ) {
                int LA12_1 = input.LA(2);

                if ( ((LA12_1>=RULE_LOWERCASE_ID && LA12_1<=RULE_UPPERCASE_ID)) ) {
                    alt12=1;
                }
            }
            switch (alt12) {
                case 1 :
                    // InternalKim.g:584:4: (lv_defineClass_0_0= RULE_LOWERCASE_ID )
                    {
                    // InternalKim.g:584:4: (lv_defineClass_0_0= RULE_LOWERCASE_ID )
                    // InternalKim.g:585:5: lv_defineClass_0_0= RULE_LOWERCASE_ID
                    {
                    lv_defineClass_0_0=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_defineClass_0_0, grammarAccess.getDefinitionBodyAccess().getDefineClassLOWERCASE_IDTerminalRuleCall_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getDefinitionBodyRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"defineClass",
                      						lv_defineClass_0_0,
                      						"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:601:3: ( ( (lv_name_1_1= RULE_UPPERCASE_ID | lv_name_1_2= RULE_LOWERCASE_ID ) ) )
            // InternalKim.g:602:4: ( (lv_name_1_1= RULE_UPPERCASE_ID | lv_name_1_2= RULE_LOWERCASE_ID ) )
            {
            // InternalKim.g:602:4: ( (lv_name_1_1= RULE_UPPERCASE_ID | lv_name_1_2= RULE_LOWERCASE_ID ) )
            // InternalKim.g:603:5: (lv_name_1_1= RULE_UPPERCASE_ID | lv_name_1_2= RULE_LOWERCASE_ID )
            {
            // InternalKim.g:603:5: (lv_name_1_1= RULE_UPPERCASE_ID | lv_name_1_2= RULE_LOWERCASE_ID )
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( (LA13_0==RULE_UPPERCASE_ID) ) {
                alt13=1;
            }
            else if ( (LA13_0==RULE_LOWERCASE_ID) ) {
                alt13=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 13, 0, input);

                throw nvae;
            }
            switch (alt13) {
                case 1 :
                    // InternalKim.g:604:6: lv_name_1_1= RULE_UPPERCASE_ID
                    {
                    lv_name_1_1=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_1_1, grammarAccess.getDefinitionBodyAccess().getNameUPPERCASE_IDTerminalRuleCall_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDefinitionBodyRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"name",
                      							lv_name_1_1,
                      							"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                      					
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:619:6: lv_name_1_2= RULE_LOWERCASE_ID
                    {
                    lv_name_1_2=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_1_2, grammarAccess.getDefinitionBodyAccess().getNameLOWERCASE_IDTerminalRuleCall_1_0_1());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDefinitionBodyRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"name",
                      							lv_name_1_2,
                      							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                      					
                    }

                    }
                    break;

            }


            }


            }

            otherlv_2=(Token)match(input,25,FOLLOW_12); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getDefinitionBodyAccess().getAsKeyword_2());
              		
            }
            // InternalKim.g:640:3: ( (lv_value_3_0= ruleValue ) )
            // InternalKim.g:641:4: (lv_value_3_0= ruleValue )
            {
            // InternalKim.g:641:4: (lv_value_3_0= ruleValue )
            // InternalKim.g:642:5: lv_value_3_0= ruleValue
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDefinitionBodyAccess().getValueValueParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_value_3_0=ruleValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDefinitionBodyRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_3_0,
              						"org.integratedmodelling.kim.Kim.Value");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDefinitionBody"


    // $ANTLR start "entryRuleModelBodyStatement"
    // InternalKim.g:663:1: entryRuleModelBodyStatement returns [EObject current=null] : iv_ruleModelBodyStatement= ruleModelBodyStatement EOF ;
    public final EObject entryRuleModelBodyStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleModelBodyStatement = null;


        try {
            // InternalKim.g:663:59: (iv_ruleModelBodyStatement= ruleModelBodyStatement EOF )
            // InternalKim.g:664:2: iv_ruleModelBodyStatement= ruleModelBodyStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getModelBodyStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleModelBodyStatement=ruleModelBodyStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleModelBodyStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleModelBodyStatement"


    // $ANTLR start "ruleModelBodyStatement"
    // InternalKim.g:670:1: ruleModelBodyStatement returns [EObject current=null] : ( ( (lv_instantiator_0_0= 'each' ) )? ( ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_number_4_0= ruleNumber ) ) | ( (lv_concept_5_0= ruleConceptDeclaration ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) ) otherlv_7= 'as' )? ( ( (lv_name_8_0= RULE_LOWERCASE_ID ) ) | ( ( (lv_observables_9_0= ruleAnnotatedObservableSemantics ) ) (otherlv_10= ',' ( (lv_observables_11_0= ruleAnnotatedObservableSemantics ) ) )* ) ) ( (lv_docstring_12_0= RULE_STRING ) )? (otherlv_13= 'observing' ( (lv_dependencies_14_0= ruleDependency ) ) (otherlv_15= ',' ( (lv_dependencies_16_0= ruleDependency ) ) )* )? (otherlv_17= 'using' ( (lv_contextualizers_18_0= ruleValueExecution ) ) (otherlv_19= ',' ( (lv_contextualizers_20_0= ruleValueExecution ) ) )* )? ( (otherlv_21= 'classified' | ( (lv_discretization_22_0= 'discretized' ) ) ) ( (otherlv_23= 'into' ( (lv_classification_24_0= ruleClassification ) ) ) | (otherlv_25= 'according' otherlv_26= 'to' ( (lv_classificationProperty_27_0= rulePropertyId ) ) ) ) )? (otherlv_28= 'lookup' (otherlv_29= '(' ( ( (lv_lookupTableArgs_30_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_30_2= '?' | lv_lookupTableArgs_30_3= '*' ) ) ) (otherlv_31= ',' ( ( (lv_lookupTableArgs_32_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_32_2= '?' | lv_lookupTableArgs_32_3= '*' ) ) ) )* otherlv_33= ')' )? otherlv_34= 'into' ( ( (lv_lookupTable_35_0= ruleTable ) ) | ( (lv_lookupTableId_36_0= RULE_UPPERCASE_ID ) ) ) )? ( (lv_actions_37_0= ruleActionSpecification ) )* (otherlv_38= 'metadata' ( (lv_metadata_39_0= ruleMap ) ) )? ) ;
    public final EObject ruleModelBodyStatement() throws RecognitionException {
        EObject current = null;

        Token lv_instantiator_0_0=null;
        Token otherlv_2=null;
        Token lv_boolean_6_1=null;
        Token lv_boolean_6_2=null;
        Token otherlv_7=null;
        Token lv_name_8_0=null;
        Token otherlv_10=null;
        Token lv_docstring_12_0=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token lv_discretization_22_0=null;
        Token otherlv_23=null;
        Token otherlv_25=null;
        Token otherlv_26=null;
        Token otherlv_28=null;
        Token otherlv_29=null;
        Token lv_lookupTableArgs_30_1=null;
        Token lv_lookupTableArgs_30_2=null;
        Token lv_lookupTableArgs_30_3=null;
        Token otherlv_31=null;
        Token lv_lookupTableArgs_32_1=null;
        Token lv_lookupTableArgs_32_2=null;
        Token lv_lookupTableArgs_32_3=null;
        Token otherlv_33=null;
        Token otherlv_34=null;
        Token lv_lookupTableId_36_0=null;
        Token otherlv_38=null;
        EObject lv_urns_1_0 = null;

        EObject lv_urns_3_0 = null;

        EObject lv_number_4_0 = null;

        EObject lv_concept_5_0 = null;

        EObject lv_observables_9_0 = null;

        EObject lv_observables_11_0 = null;

        EObject lv_dependencies_14_0 = null;

        EObject lv_dependencies_16_0 = null;

        EObject lv_contextualizers_18_0 = null;

        EObject lv_contextualizers_20_0 = null;

        EObject lv_classification_24_0 = null;

        AntlrDatatypeRuleToken lv_classificationProperty_27_0 = null;

        EObject lv_lookupTable_35_0 = null;

        EObject lv_actions_37_0 = null;

        EObject lv_metadata_39_0 = null;



        	enterRule();

        try {
            // InternalKim.g:676:2: ( ( ( (lv_instantiator_0_0= 'each' ) )? ( ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_number_4_0= ruleNumber ) ) | ( (lv_concept_5_0= ruleConceptDeclaration ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) ) otherlv_7= 'as' )? ( ( (lv_name_8_0= RULE_LOWERCASE_ID ) ) | ( ( (lv_observables_9_0= ruleAnnotatedObservableSemantics ) ) (otherlv_10= ',' ( (lv_observables_11_0= ruleAnnotatedObservableSemantics ) ) )* ) ) ( (lv_docstring_12_0= RULE_STRING ) )? (otherlv_13= 'observing' ( (lv_dependencies_14_0= ruleDependency ) ) (otherlv_15= ',' ( (lv_dependencies_16_0= ruleDependency ) ) )* )? (otherlv_17= 'using' ( (lv_contextualizers_18_0= ruleValueExecution ) ) (otherlv_19= ',' ( (lv_contextualizers_20_0= ruleValueExecution ) ) )* )? ( (otherlv_21= 'classified' | ( (lv_discretization_22_0= 'discretized' ) ) ) ( (otherlv_23= 'into' ( (lv_classification_24_0= ruleClassification ) ) ) | (otherlv_25= 'according' otherlv_26= 'to' ( (lv_classificationProperty_27_0= rulePropertyId ) ) ) ) )? (otherlv_28= 'lookup' (otherlv_29= '(' ( ( (lv_lookupTableArgs_30_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_30_2= '?' | lv_lookupTableArgs_30_3= '*' ) ) ) (otherlv_31= ',' ( ( (lv_lookupTableArgs_32_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_32_2= '?' | lv_lookupTableArgs_32_3= '*' ) ) ) )* otherlv_33= ')' )? otherlv_34= 'into' ( ( (lv_lookupTable_35_0= ruleTable ) ) | ( (lv_lookupTableId_36_0= RULE_UPPERCASE_ID ) ) ) )? ( (lv_actions_37_0= ruleActionSpecification ) )* (otherlv_38= 'metadata' ( (lv_metadata_39_0= ruleMap ) ) )? ) )
            // InternalKim.g:677:2: ( ( (lv_instantiator_0_0= 'each' ) )? ( ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_number_4_0= ruleNumber ) ) | ( (lv_concept_5_0= ruleConceptDeclaration ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) ) otherlv_7= 'as' )? ( ( (lv_name_8_0= RULE_LOWERCASE_ID ) ) | ( ( (lv_observables_9_0= ruleAnnotatedObservableSemantics ) ) (otherlv_10= ',' ( (lv_observables_11_0= ruleAnnotatedObservableSemantics ) ) )* ) ) ( (lv_docstring_12_0= RULE_STRING ) )? (otherlv_13= 'observing' ( (lv_dependencies_14_0= ruleDependency ) ) (otherlv_15= ',' ( (lv_dependencies_16_0= ruleDependency ) ) )* )? (otherlv_17= 'using' ( (lv_contextualizers_18_0= ruleValueExecution ) ) (otherlv_19= ',' ( (lv_contextualizers_20_0= ruleValueExecution ) ) )* )? ( (otherlv_21= 'classified' | ( (lv_discretization_22_0= 'discretized' ) ) ) ( (otherlv_23= 'into' ( (lv_classification_24_0= ruleClassification ) ) ) | (otherlv_25= 'according' otherlv_26= 'to' ( (lv_classificationProperty_27_0= rulePropertyId ) ) ) ) )? (otherlv_28= 'lookup' (otherlv_29= '(' ( ( (lv_lookupTableArgs_30_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_30_2= '?' | lv_lookupTableArgs_30_3= '*' ) ) ) (otherlv_31= ',' ( ( (lv_lookupTableArgs_32_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_32_2= '?' | lv_lookupTableArgs_32_3= '*' ) ) ) )* otherlv_33= ')' )? otherlv_34= 'into' ( ( (lv_lookupTable_35_0= ruleTable ) ) | ( (lv_lookupTableId_36_0= RULE_UPPERCASE_ID ) ) ) )? ( (lv_actions_37_0= ruleActionSpecification ) )* (otherlv_38= 'metadata' ( (lv_metadata_39_0= ruleMap ) ) )? )
            {
            // InternalKim.g:677:2: ( ( (lv_instantiator_0_0= 'each' ) )? ( ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_number_4_0= ruleNumber ) ) | ( (lv_concept_5_0= ruleConceptDeclaration ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) ) otherlv_7= 'as' )? ( ( (lv_name_8_0= RULE_LOWERCASE_ID ) ) | ( ( (lv_observables_9_0= ruleAnnotatedObservableSemantics ) ) (otherlv_10= ',' ( (lv_observables_11_0= ruleAnnotatedObservableSemantics ) ) )* ) ) ( (lv_docstring_12_0= RULE_STRING ) )? (otherlv_13= 'observing' ( (lv_dependencies_14_0= ruleDependency ) ) (otherlv_15= ',' ( (lv_dependencies_16_0= ruleDependency ) ) )* )? (otherlv_17= 'using' ( (lv_contextualizers_18_0= ruleValueExecution ) ) (otherlv_19= ',' ( (lv_contextualizers_20_0= ruleValueExecution ) ) )* )? ( (otherlv_21= 'classified' | ( (lv_discretization_22_0= 'discretized' ) ) ) ( (otherlv_23= 'into' ( (lv_classification_24_0= ruleClassification ) ) ) | (otherlv_25= 'according' otherlv_26= 'to' ( (lv_classificationProperty_27_0= rulePropertyId ) ) ) ) )? (otherlv_28= 'lookup' (otherlv_29= '(' ( ( (lv_lookupTableArgs_30_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_30_2= '?' | lv_lookupTableArgs_30_3= '*' ) ) ) (otherlv_31= ',' ( ( (lv_lookupTableArgs_32_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_32_2= '?' | lv_lookupTableArgs_32_3= '*' ) ) ) )* otherlv_33= ')' )? otherlv_34= 'into' ( ( (lv_lookupTable_35_0= ruleTable ) ) | ( (lv_lookupTableId_36_0= RULE_UPPERCASE_ID ) ) ) )? ( (lv_actions_37_0= ruleActionSpecification ) )* (otherlv_38= 'metadata' ( (lv_metadata_39_0= ruleMap ) ) )? )
            // InternalKim.g:678:3: ( (lv_instantiator_0_0= 'each' ) )? ( ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_number_4_0= ruleNumber ) ) | ( (lv_concept_5_0= ruleConceptDeclaration ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) ) otherlv_7= 'as' )? ( ( (lv_name_8_0= RULE_LOWERCASE_ID ) ) | ( ( (lv_observables_9_0= ruleAnnotatedObservableSemantics ) ) (otherlv_10= ',' ( (lv_observables_11_0= ruleAnnotatedObservableSemantics ) ) )* ) ) ( (lv_docstring_12_0= RULE_STRING ) )? (otherlv_13= 'observing' ( (lv_dependencies_14_0= ruleDependency ) ) (otherlv_15= ',' ( (lv_dependencies_16_0= ruleDependency ) ) )* )? (otherlv_17= 'using' ( (lv_contextualizers_18_0= ruleValueExecution ) ) (otherlv_19= ',' ( (lv_contextualizers_20_0= ruleValueExecution ) ) )* )? ( (otherlv_21= 'classified' | ( (lv_discretization_22_0= 'discretized' ) ) ) ( (otherlv_23= 'into' ( (lv_classification_24_0= ruleClassification ) ) ) | (otherlv_25= 'according' otherlv_26= 'to' ( (lv_classificationProperty_27_0= rulePropertyId ) ) ) ) )? (otherlv_28= 'lookup' (otherlv_29= '(' ( ( (lv_lookupTableArgs_30_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_30_2= '?' | lv_lookupTableArgs_30_3= '*' ) ) ) (otherlv_31= ',' ( ( (lv_lookupTableArgs_32_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_32_2= '?' | lv_lookupTableArgs_32_3= '*' ) ) ) )* otherlv_33= ')' )? otherlv_34= 'into' ( ( (lv_lookupTable_35_0= ruleTable ) ) | ( (lv_lookupTableId_36_0= RULE_UPPERCASE_ID ) ) ) )? ( (lv_actions_37_0= ruleActionSpecification ) )* (otherlv_38= 'metadata' ( (lv_metadata_39_0= ruleMap ) ) )?
            {
            // InternalKim.g:678:3: ( (lv_instantiator_0_0= 'each' ) )?
            int alt14=2;
            int LA14_0 = input.LA(1);

            if ( (LA14_0==26) ) {
                alt14=1;
            }
            switch (alt14) {
                case 1 :
                    // InternalKim.g:679:4: (lv_instantiator_0_0= 'each' )
                    {
                    // InternalKim.g:679:4: (lv_instantiator_0_0= 'each' )
                    // InternalKim.g:680:5: lv_instantiator_0_0= 'each'
                    {
                    lv_instantiator_0_0=(Token)match(input,26,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_instantiator_0_0, grammarAccess.getModelBodyStatementAccess().getInstantiatorEachKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getModelBodyStatementRule());
                      					}
                      					setWithLastConsumed(current, "instantiator", true, "each");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:692:3: ( ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_number_4_0= ruleNumber ) ) | ( (lv_concept_5_0= ruleConceptDeclaration ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) ) otherlv_7= 'as' )?
            int alt18=2;
            alt18 = dfa18.predict(input);
            switch (alt18) {
                case 1 :
                    // InternalKim.g:693:4: ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_number_4_0= ruleNumber ) ) | ( (lv_concept_5_0= ruleConceptDeclaration ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) ) otherlv_7= 'as'
                    {
                    // InternalKim.g:693:4: ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_number_4_0= ruleNumber ) ) | ( (lv_concept_5_0= ruleConceptDeclaration ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) )
                    int alt17=4;
                    alt17 = dfa17.predict(input);
                    switch (alt17) {
                        case 1 :
                            // InternalKim.g:694:5: ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* )
                            {
                            // InternalKim.g:694:5: ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* )
                            // InternalKim.g:695:6: ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )*
                            {
                            // InternalKim.g:695:6: ( (lv_urns_1_0= ruleUrn ) )
                            // InternalKim.g:696:7: (lv_urns_1_0= ruleUrn )
                            {
                            // InternalKim.g:696:7: (lv_urns_1_0= ruleUrn )
                            // InternalKim.g:697:8: lv_urns_1_0= ruleUrn
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getModelBodyStatementAccess().getUrnsUrnParserRuleCall_1_0_0_0_0());
                              							
                            }
                            pushFollow(FOLLOW_13);
                            lv_urns_1_0=ruleUrn();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                              								}
                              								add(
                              									current,
                              									"urns",
                              									lv_urns_1_0,
                              									"org.integratedmodelling.kim.Kim.Urn");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalKim.g:714:6: (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )*
                            loop15:
                            do {
                                int alt15=2;
                                int LA15_0 = input.LA(1);

                                if ( (LA15_0==27) ) {
                                    alt15=1;
                                }


                                switch (alt15) {
                            	case 1 :
                            	    // InternalKim.g:715:7: otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) )
                            	    {
                            	    otherlv_2=(Token)match(input,27,FOLLOW_14); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_2, grammarAccess.getModelBodyStatementAccess().getCommaKeyword_1_0_0_1_0());
                            	      						
                            	    }
                            	    // InternalKim.g:719:7: ( (lv_urns_3_0= ruleUrn ) )
                            	    // InternalKim.g:720:8: (lv_urns_3_0= ruleUrn )
                            	    {
                            	    // InternalKim.g:720:8: (lv_urns_3_0= ruleUrn )
                            	    // InternalKim.g:721:9: lv_urns_3_0= ruleUrn
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getModelBodyStatementAccess().getUrnsUrnParserRuleCall_1_0_0_1_1_0());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_13);
                            	    lv_urns_3_0=ruleUrn();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"urns",
                            	      										lv_urns_3_0,
                            	      										"org.integratedmodelling.kim.Kim.Urn");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop15;
                                }
                            } while (true);


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:741:5: ( (lv_number_4_0= ruleNumber ) )
                            {
                            // InternalKim.g:741:5: ( (lv_number_4_0= ruleNumber ) )
                            // InternalKim.g:742:6: (lv_number_4_0= ruleNumber )
                            {
                            // InternalKim.g:742:6: (lv_number_4_0= ruleNumber )
                            // InternalKim.g:743:7: lv_number_4_0= ruleNumber
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getNumberNumberParserRuleCall_1_0_1_0());
                              						
                            }
                            pushFollow(FOLLOW_11);
                            lv_number_4_0=ruleNumber();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                              							}
                              							set(
                              								current,
                              								"number",
                              								lv_number_4_0,
                              								"org.integratedmodelling.kim.Kim.Number");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 3 :
                            // InternalKim.g:761:5: ( (lv_concept_5_0= ruleConceptDeclaration ) )
                            {
                            // InternalKim.g:761:5: ( (lv_concept_5_0= ruleConceptDeclaration ) )
                            // InternalKim.g:762:6: (lv_concept_5_0= ruleConceptDeclaration )
                            {
                            // InternalKim.g:762:6: (lv_concept_5_0= ruleConceptDeclaration )
                            // InternalKim.g:763:7: lv_concept_5_0= ruleConceptDeclaration
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getConceptConceptDeclarationParserRuleCall_1_0_2_0());
                              						
                            }
                            pushFollow(FOLLOW_11);
                            lv_concept_5_0=ruleConceptDeclaration();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                              							}
                              							set(
                              								current,
                              								"concept",
                              								lv_concept_5_0,
                              								"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 4 :
                            // InternalKim.g:781:5: ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) )
                            {
                            // InternalKim.g:781:5: ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) )
                            // InternalKim.g:782:6: ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) )
                            {
                            // InternalKim.g:782:6: ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) )
                            // InternalKim.g:783:7: (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' )
                            {
                            // InternalKim.g:783:7: (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' )
                            int alt16=2;
                            int LA16_0 = input.LA(1);

                            if ( (LA16_0==28) ) {
                                alt16=1;
                            }
                            else if ( (LA16_0==29) ) {
                                alt16=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 16, 0, input);

                                throw nvae;
                            }
                            switch (alt16) {
                                case 1 :
                                    // InternalKim.g:784:8: lv_boolean_6_1= 'true'
                                    {
                                    lv_boolean_6_1=(Token)match(input,28,FOLLOW_11); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_boolean_6_1, grammarAccess.getModelBodyStatementAccess().getBooleanTrueKeyword_1_0_3_0_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getModelBodyStatementRule());
                                      								}
                                      								setWithLastConsumed(current, "boolean", lv_boolean_6_1, null);
                                      							
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:795:8: lv_boolean_6_2= 'false'
                                    {
                                    lv_boolean_6_2=(Token)match(input,29,FOLLOW_11); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_boolean_6_2, grammarAccess.getModelBodyStatementAccess().getBooleanFalseKeyword_1_0_3_0_1());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getModelBodyStatementRule());
                                      								}
                                      								setWithLastConsumed(current, "boolean", lv_boolean_6_2, null);
                                      							
                                    }

                                    }
                                    break;

                            }


                            }


                            }


                            }
                            break;

                    }

                    otherlv_7=(Token)match(input,25,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getModelBodyStatementAccess().getAsKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:814:3: ( ( (lv_name_8_0= RULE_LOWERCASE_ID ) ) | ( ( (lv_observables_9_0= ruleAnnotatedObservableSemantics ) ) (otherlv_10= ',' ( (lv_observables_11_0= ruleAnnotatedObservableSemantics ) ) )* ) )
            int alt20=2;
            int LA20_0 = input.LA(1);

            if ( (LA20_0==RULE_LOWERCASE_ID) ) {
                int LA20_1 = input.LA(2);

                if ( (LA20_1==EOF||LA20_1==RULE_STRING||LA20_1==20||(LA20_1>=30 && LA20_1<=33)||LA20_1==37||LA20_1==42||(LA20_1>=54 && LA20_1<=56)||(LA20_1>=62 && LA20_1<=67)) ) {
                    alt20=1;
                }
                else if ( (LA20_1==25||LA20_1==38||LA20_1==106||LA20_1==109) ) {
                    alt20=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 20, 1, input);

                    throw nvae;
                }
            }
            else if ( ((LA20_0>=RULE_UPPERCASE_ID && LA20_0<=RULE_STRING)||(LA20_0>=RULE_EXPR && LA20_0<=RULE_UPPERCASE_PATH)||LA20_0==RULE_ANNOTATION_ID||(LA20_0>=27 && LA20_0<=29)||LA20_0==38||(LA20_0>=49 && LA20_0<=50)||LA20_0==113||(LA20_0>=132 && LA20_0<=133)||(LA20_0>=141 && LA20_0<=142)||(LA20_0>=144 && LA20_0<=149)||(LA20_0>=151 && LA20_0<=163)||LA20_0==216||(LA20_0>=251 && LA20_0<=252)) ) {
                alt20=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 20, 0, input);

                throw nvae;
            }
            switch (alt20) {
                case 1 :
                    // InternalKim.g:815:4: ( (lv_name_8_0= RULE_LOWERCASE_ID ) )
                    {
                    // InternalKim.g:815:4: ( (lv_name_8_0= RULE_LOWERCASE_ID ) )
                    // InternalKim.g:816:5: (lv_name_8_0= RULE_LOWERCASE_ID )
                    {
                    // InternalKim.g:816:5: (lv_name_8_0= RULE_LOWERCASE_ID )
                    // InternalKim.g:817:6: lv_name_8_0= RULE_LOWERCASE_ID
                    {
                    lv_name_8_0=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_8_0, grammarAccess.getModelBodyStatementAccess().getNameLOWERCASE_IDTerminalRuleCall_2_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getModelBodyStatementRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"name",
                      							lv_name_8_0,
                      							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:834:4: ( ( (lv_observables_9_0= ruleAnnotatedObservableSemantics ) ) (otherlv_10= ',' ( (lv_observables_11_0= ruleAnnotatedObservableSemantics ) ) )* )
                    {
                    // InternalKim.g:834:4: ( ( (lv_observables_9_0= ruleAnnotatedObservableSemantics ) ) (otherlv_10= ',' ( (lv_observables_11_0= ruleAnnotatedObservableSemantics ) ) )* )
                    // InternalKim.g:835:5: ( (lv_observables_9_0= ruleAnnotatedObservableSemantics ) ) (otherlv_10= ',' ( (lv_observables_11_0= ruleAnnotatedObservableSemantics ) ) )*
                    {
                    // InternalKim.g:835:5: ( (lv_observables_9_0= ruleAnnotatedObservableSemantics ) )
                    // InternalKim.g:836:6: (lv_observables_9_0= ruleAnnotatedObservableSemantics )
                    {
                    // InternalKim.g:836:6: (lv_observables_9_0= ruleAnnotatedObservableSemantics )
                    // InternalKim.g:837:7: lv_observables_9_0= ruleAnnotatedObservableSemantics
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getObservablesAnnotatedObservableSemanticsParserRuleCall_2_1_0_0());
                      						
                    }
                    pushFollow(FOLLOW_16);
                    lv_observables_9_0=ruleAnnotatedObservableSemantics();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                      							}
                      							add(
                      								current,
                      								"observables",
                      								lv_observables_9_0,
                      								"org.integratedmodelling.kim.Kim.AnnotatedObservableSemantics");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalKim.g:854:5: (otherlv_10= ',' ( (lv_observables_11_0= ruleAnnotatedObservableSemantics ) ) )*
                    loop19:
                    do {
                        int alt19=2;
                        int LA19_0 = input.LA(1);

                        if ( (LA19_0==27) ) {
                            alt19=1;
                        }


                        switch (alt19) {
                    	case 1 :
                    	    // InternalKim.g:855:6: otherlv_10= ',' ( (lv_observables_11_0= ruleAnnotatedObservableSemantics ) )
                    	    {
                    	    otherlv_10=(Token)match(input,27,FOLLOW_8); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_10, grammarAccess.getModelBodyStatementAccess().getCommaKeyword_2_1_1_0());
                    	      					
                    	    }
                    	    // InternalKim.g:859:6: ( (lv_observables_11_0= ruleAnnotatedObservableSemantics ) )
                    	    // InternalKim.g:860:7: (lv_observables_11_0= ruleAnnotatedObservableSemantics )
                    	    {
                    	    // InternalKim.g:860:7: (lv_observables_11_0= ruleAnnotatedObservableSemantics )
                    	    // InternalKim.g:861:8: lv_observables_11_0= ruleAnnotatedObservableSemantics
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getModelBodyStatementAccess().getObservablesAnnotatedObservableSemanticsParserRuleCall_2_1_1_1_0());
                    	      							
                    	    }
                    	    pushFollow(FOLLOW_16);
                    	    lv_observables_11_0=ruleAnnotatedObservableSemantics();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"observables",
                    	      									lv_observables_11_0,
                    	      									"org.integratedmodelling.kim.Kim.AnnotatedObservableSemantics");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop19;
                        }
                    } while (true);


                    }


                    }
                    break;

            }

            // InternalKim.g:881:3: ( (lv_docstring_12_0= RULE_STRING ) )?
            int alt21=2;
            int LA21_0 = input.LA(1);

            if ( (LA21_0==RULE_STRING) ) {
                alt21=1;
            }
            switch (alt21) {
                case 1 :
                    // InternalKim.g:882:4: (lv_docstring_12_0= RULE_STRING )
                    {
                    // InternalKim.g:882:4: (lv_docstring_12_0= RULE_STRING )
                    // InternalKim.g:883:5: lv_docstring_12_0= RULE_STRING
                    {
                    lv_docstring_12_0=(Token)match(input,RULE_STRING,FOLLOW_17); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_docstring_12_0, grammarAccess.getModelBodyStatementAccess().getDocstringSTRINGTerminalRuleCall_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getModelBodyStatementRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"docstring",
                      						lv_docstring_12_0,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:899:3: (otherlv_13= 'observing' ( (lv_dependencies_14_0= ruleDependency ) ) (otherlv_15= ',' ( (lv_dependencies_16_0= ruleDependency ) ) )* )?
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==30) ) {
                alt23=1;
            }
            switch (alt23) {
                case 1 :
                    // InternalKim.g:900:4: otherlv_13= 'observing' ( (lv_dependencies_14_0= ruleDependency ) ) (otherlv_15= ',' ( (lv_dependencies_16_0= ruleDependency ) ) )*
                    {
                    otherlv_13=(Token)match(input,30,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getModelBodyStatementAccess().getObservingKeyword_4_0());
                      			
                    }
                    // InternalKim.g:904:4: ( (lv_dependencies_14_0= ruleDependency ) )
                    // InternalKim.g:905:5: (lv_dependencies_14_0= ruleDependency )
                    {
                    // InternalKim.g:905:5: (lv_dependencies_14_0= ruleDependency )
                    // InternalKim.g:906:6: lv_dependencies_14_0= ruleDependency
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getModelBodyStatementAccess().getDependenciesDependencyParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_19);
                    lv_dependencies_14_0=ruleDependency();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                      						}
                      						add(
                      							current,
                      							"dependencies",
                      							lv_dependencies_14_0,
                      							"org.integratedmodelling.kim.Kim.Dependency");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:923:4: (otherlv_15= ',' ( (lv_dependencies_16_0= ruleDependency ) ) )*
                    loop22:
                    do {
                        int alt22=2;
                        int LA22_0 = input.LA(1);

                        if ( (LA22_0==27) ) {
                            alt22=1;
                        }


                        switch (alt22) {
                    	case 1 :
                    	    // InternalKim.g:924:5: otherlv_15= ',' ( (lv_dependencies_16_0= ruleDependency ) )
                    	    {
                    	    otherlv_15=(Token)match(input,27,FOLLOW_18); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_15, grammarAccess.getModelBodyStatementAccess().getCommaKeyword_4_2_0());
                    	      				
                    	    }
                    	    // InternalKim.g:928:5: ( (lv_dependencies_16_0= ruleDependency ) )
                    	    // InternalKim.g:929:6: (lv_dependencies_16_0= ruleDependency )
                    	    {
                    	    // InternalKim.g:929:6: (lv_dependencies_16_0= ruleDependency )
                    	    // InternalKim.g:930:7: lv_dependencies_16_0= ruleDependency
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getDependenciesDependencyParserRuleCall_4_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_19);
                    	    lv_dependencies_16_0=ruleDependency();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"dependencies",
                    	      								lv_dependencies_16_0,
                    	      								"org.integratedmodelling.kim.Kim.Dependency");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop22;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalKim.g:949:3: (otherlv_17= 'using' ( (lv_contextualizers_18_0= ruleValueExecution ) ) (otherlv_19= ',' ( (lv_contextualizers_20_0= ruleValueExecution ) ) )* )?
            int alt25=2;
            int LA25_0 = input.LA(1);

            if ( (LA25_0==31) ) {
                alt25=1;
            }
            switch (alt25) {
                case 1 :
                    // InternalKim.g:950:4: otherlv_17= 'using' ( (lv_contextualizers_18_0= ruleValueExecution ) ) (otherlv_19= ',' ( (lv_contextualizers_20_0= ruleValueExecution ) ) )*
                    {
                    otherlv_17=(Token)match(input,31,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_17, grammarAccess.getModelBodyStatementAccess().getUsingKeyword_5_0());
                      			
                    }
                    // InternalKim.g:954:4: ( (lv_contextualizers_18_0= ruleValueExecution ) )
                    // InternalKim.g:955:5: (lv_contextualizers_18_0= ruleValueExecution )
                    {
                    // InternalKim.g:955:5: (lv_contextualizers_18_0= ruleValueExecution )
                    // InternalKim.g:956:6: lv_contextualizers_18_0= ruleValueExecution
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getModelBodyStatementAccess().getContextualizersValueExecutionParserRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FOLLOW_21);
                    lv_contextualizers_18_0=ruleValueExecution();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                      						}
                      						add(
                      							current,
                      							"contextualizers",
                      							lv_contextualizers_18_0,
                      							"org.integratedmodelling.kim.Kim.ValueExecution");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:973:4: (otherlv_19= ',' ( (lv_contextualizers_20_0= ruleValueExecution ) ) )*
                    loop24:
                    do {
                        int alt24=2;
                        int LA24_0 = input.LA(1);

                        if ( (LA24_0==27) ) {
                            alt24=1;
                        }


                        switch (alt24) {
                    	case 1 :
                    	    // InternalKim.g:974:5: otherlv_19= ',' ( (lv_contextualizers_20_0= ruleValueExecution ) )
                    	    {
                    	    otherlv_19=(Token)match(input,27,FOLLOW_20); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_19, grammarAccess.getModelBodyStatementAccess().getCommaKeyword_5_2_0());
                    	      				
                    	    }
                    	    // InternalKim.g:978:5: ( (lv_contextualizers_20_0= ruleValueExecution ) )
                    	    // InternalKim.g:979:6: (lv_contextualizers_20_0= ruleValueExecution )
                    	    {
                    	    // InternalKim.g:979:6: (lv_contextualizers_20_0= ruleValueExecution )
                    	    // InternalKim.g:980:7: lv_contextualizers_20_0= ruleValueExecution
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getContextualizersValueExecutionParserRuleCall_5_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_21);
                    	    lv_contextualizers_20_0=ruleValueExecution();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"contextualizers",
                    	      								lv_contextualizers_20_0,
                    	      								"org.integratedmodelling.kim.Kim.ValueExecution");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop24;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalKim.g:999:3: ( (otherlv_21= 'classified' | ( (lv_discretization_22_0= 'discretized' ) ) ) ( (otherlv_23= 'into' ( (lv_classification_24_0= ruleClassification ) ) ) | (otherlv_25= 'according' otherlv_26= 'to' ( (lv_classificationProperty_27_0= rulePropertyId ) ) ) ) )?
            int alt28=2;
            int LA28_0 = input.LA(1);

            if ( ((LA28_0>=32 && LA28_0<=33)) ) {
                alt28=1;
            }
            switch (alt28) {
                case 1 :
                    // InternalKim.g:1000:4: (otherlv_21= 'classified' | ( (lv_discretization_22_0= 'discretized' ) ) ) ( (otherlv_23= 'into' ( (lv_classification_24_0= ruleClassification ) ) ) | (otherlv_25= 'according' otherlv_26= 'to' ( (lv_classificationProperty_27_0= rulePropertyId ) ) ) )
                    {
                    // InternalKim.g:1000:4: (otherlv_21= 'classified' | ( (lv_discretization_22_0= 'discretized' ) ) )
                    int alt26=2;
                    int LA26_0 = input.LA(1);

                    if ( (LA26_0==32) ) {
                        alt26=1;
                    }
                    else if ( (LA26_0==33) ) {
                        alt26=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 26, 0, input);

                        throw nvae;
                    }
                    switch (alt26) {
                        case 1 :
                            // InternalKim.g:1001:5: otherlv_21= 'classified'
                            {
                            otherlv_21=(Token)match(input,32,FOLLOW_22); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_21, grammarAccess.getModelBodyStatementAccess().getClassifiedKeyword_6_0_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:1006:5: ( (lv_discretization_22_0= 'discretized' ) )
                            {
                            // InternalKim.g:1006:5: ( (lv_discretization_22_0= 'discretized' ) )
                            // InternalKim.g:1007:6: (lv_discretization_22_0= 'discretized' )
                            {
                            // InternalKim.g:1007:6: (lv_discretization_22_0= 'discretized' )
                            // InternalKim.g:1008:7: lv_discretization_22_0= 'discretized'
                            {
                            lv_discretization_22_0=(Token)match(input,33,FOLLOW_22); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_discretization_22_0, grammarAccess.getModelBodyStatementAccess().getDiscretizationDiscretizedKeyword_6_0_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getModelBodyStatementRule());
                              							}
                              							setWithLastConsumed(current, "discretization", true, "discretized");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:1021:4: ( (otherlv_23= 'into' ( (lv_classification_24_0= ruleClassification ) ) ) | (otherlv_25= 'according' otherlv_26= 'to' ( (lv_classificationProperty_27_0= rulePropertyId ) ) ) )
                    int alt27=2;
                    int LA27_0 = input.LA(1);

                    if ( (LA27_0==34) ) {
                        alt27=1;
                    }
                    else if ( (LA27_0==35) ) {
                        alt27=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 27, 0, input);

                        throw nvae;
                    }
                    switch (alt27) {
                        case 1 :
                            // InternalKim.g:1022:5: (otherlv_23= 'into' ( (lv_classification_24_0= ruleClassification ) ) )
                            {
                            // InternalKim.g:1022:5: (otherlv_23= 'into' ( (lv_classification_24_0= ruleClassification ) ) )
                            // InternalKim.g:1023:6: otherlv_23= 'into' ( (lv_classification_24_0= ruleClassification ) )
                            {
                            otherlv_23=(Token)match(input,34,FOLLOW_23); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_23, grammarAccess.getModelBodyStatementAccess().getIntoKeyword_6_1_0_0());
                              					
                            }
                            // InternalKim.g:1027:6: ( (lv_classification_24_0= ruleClassification ) )
                            // InternalKim.g:1028:7: (lv_classification_24_0= ruleClassification )
                            {
                            // InternalKim.g:1028:7: (lv_classification_24_0= ruleClassification )
                            // InternalKim.g:1029:8: lv_classification_24_0= ruleClassification
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getModelBodyStatementAccess().getClassificationClassificationParserRuleCall_6_1_0_1_0());
                              							
                            }
                            pushFollow(FOLLOW_24);
                            lv_classification_24_0=ruleClassification();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                              								}
                              								set(
                              									current,
                              									"classification",
                              									lv_classification_24_0,
                              									"org.integratedmodelling.kim.Kim.Classification");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:1048:5: (otherlv_25= 'according' otherlv_26= 'to' ( (lv_classificationProperty_27_0= rulePropertyId ) ) )
                            {
                            // InternalKim.g:1048:5: (otherlv_25= 'according' otherlv_26= 'to' ( (lv_classificationProperty_27_0= rulePropertyId ) ) )
                            // InternalKim.g:1049:6: otherlv_25= 'according' otherlv_26= 'to' ( (lv_classificationProperty_27_0= rulePropertyId ) )
                            {
                            otherlv_25=(Token)match(input,35,FOLLOW_25); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_25, grammarAccess.getModelBodyStatementAccess().getAccordingKeyword_6_1_1_0());
                              					
                            }
                            otherlv_26=(Token)match(input,36,FOLLOW_26); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_26, grammarAccess.getModelBodyStatementAccess().getToKeyword_6_1_1_1());
                              					
                            }
                            // InternalKim.g:1057:6: ( (lv_classificationProperty_27_0= rulePropertyId ) )
                            // InternalKim.g:1058:7: (lv_classificationProperty_27_0= rulePropertyId )
                            {
                            // InternalKim.g:1058:7: (lv_classificationProperty_27_0= rulePropertyId )
                            // InternalKim.g:1059:8: lv_classificationProperty_27_0= rulePropertyId
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getModelBodyStatementAccess().getClassificationPropertyPropertyIdParserRuleCall_6_1_1_2_0());
                              							
                            }
                            pushFollow(FOLLOW_24);
                            lv_classificationProperty_27_0=rulePropertyId();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                              								}
                              								set(
                              									current,
                              									"classificationProperty",
                              									lv_classificationProperty_27_0,
                              									"org.integratedmodelling.kim.Kim.PropertyId");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // InternalKim.g:1079:3: (otherlv_28= 'lookup' (otherlv_29= '(' ( ( (lv_lookupTableArgs_30_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_30_2= '?' | lv_lookupTableArgs_30_3= '*' ) ) ) (otherlv_31= ',' ( ( (lv_lookupTableArgs_32_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_32_2= '?' | lv_lookupTableArgs_32_3= '*' ) ) ) )* otherlv_33= ')' )? otherlv_34= 'into' ( ( (lv_lookupTable_35_0= ruleTable ) ) | ( (lv_lookupTableId_36_0= RULE_UPPERCASE_ID ) ) ) )?
            int alt34=2;
            int LA34_0 = input.LA(1);

            if ( (LA34_0==37) ) {
                alt34=1;
            }
            switch (alt34) {
                case 1 :
                    // InternalKim.g:1080:4: otherlv_28= 'lookup' (otherlv_29= '(' ( ( (lv_lookupTableArgs_30_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_30_2= '?' | lv_lookupTableArgs_30_3= '*' ) ) ) (otherlv_31= ',' ( ( (lv_lookupTableArgs_32_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_32_2= '?' | lv_lookupTableArgs_32_3= '*' ) ) ) )* otherlv_33= ')' )? otherlv_34= 'into' ( ( (lv_lookupTable_35_0= ruleTable ) ) | ( (lv_lookupTableId_36_0= RULE_UPPERCASE_ID ) ) )
                    {
                    otherlv_28=(Token)match(input,37,FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_28, grammarAccess.getModelBodyStatementAccess().getLookupKeyword_7_0());
                      			
                    }
                    // InternalKim.g:1084:4: (otherlv_29= '(' ( ( (lv_lookupTableArgs_30_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_30_2= '?' | lv_lookupTableArgs_30_3= '*' ) ) ) (otherlv_31= ',' ( ( (lv_lookupTableArgs_32_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_32_2= '?' | lv_lookupTableArgs_32_3= '*' ) ) ) )* otherlv_33= ')' )?
                    int alt32=2;
                    int LA32_0 = input.LA(1);

                    if ( (LA32_0==38) ) {
                        alt32=1;
                    }
                    switch (alt32) {
                        case 1 :
                            // InternalKim.g:1085:5: otherlv_29= '(' ( ( (lv_lookupTableArgs_30_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_30_2= '?' | lv_lookupTableArgs_30_3= '*' ) ) ) (otherlv_31= ',' ( ( (lv_lookupTableArgs_32_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_32_2= '?' | lv_lookupTableArgs_32_3= '*' ) ) ) )* otherlv_33= ')'
                            {
                            otherlv_29=(Token)match(input,38,FOLLOW_28); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_29, grammarAccess.getModelBodyStatementAccess().getLeftParenthesisKeyword_7_1_0());
                              				
                            }
                            // InternalKim.g:1089:5: ( ( (lv_lookupTableArgs_30_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_30_2= '?' | lv_lookupTableArgs_30_3= '*' ) ) )
                            // InternalKim.g:1090:6: ( (lv_lookupTableArgs_30_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_30_2= '?' | lv_lookupTableArgs_30_3= '*' ) )
                            {
                            // InternalKim.g:1090:6: ( (lv_lookupTableArgs_30_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_30_2= '?' | lv_lookupTableArgs_30_3= '*' ) )
                            // InternalKim.g:1091:7: (lv_lookupTableArgs_30_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_30_2= '?' | lv_lookupTableArgs_30_3= '*' )
                            {
                            // InternalKim.g:1091:7: (lv_lookupTableArgs_30_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_30_2= '?' | lv_lookupTableArgs_30_3= '*' )
                            int alt29=3;
                            switch ( input.LA(1) ) {
                            case RULE_LOWERCASE_ID:
                                {
                                alt29=1;
                                }
                                break;
                            case 39:
                                {
                                alt29=2;
                                }
                                break;
                            case 40:
                                {
                                alt29=3;
                                }
                                break;
                            default:
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 29, 0, input);

                                throw nvae;
                            }

                            switch (alt29) {
                                case 1 :
                                    // InternalKim.g:1092:8: lv_lookupTableArgs_30_1= RULE_LOWERCASE_ID
                                    {
                                    lv_lookupTableArgs_30_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_29); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_lookupTableArgs_30_1, grammarAccess.getModelBodyStatementAccess().getLookupTableArgsLOWERCASE_IDTerminalRuleCall_7_1_1_0_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getModelBodyStatementRule());
                                      								}
                                      								addWithLastConsumed(
                                      									current,
                                      									"lookupTableArgs",
                                      									lv_lookupTableArgs_30_1,
                                      									"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                                      							
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:1107:8: lv_lookupTableArgs_30_2= '?'
                                    {
                                    lv_lookupTableArgs_30_2=(Token)match(input,39,FOLLOW_29); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_lookupTableArgs_30_2, grammarAccess.getModelBodyStatementAccess().getLookupTableArgsQuestionMarkKeyword_7_1_1_0_1());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getModelBodyStatementRule());
                                      								}
                                      								addWithLastConsumed(current, "lookupTableArgs", lv_lookupTableArgs_30_2, null);
                                      							
                                    }

                                    }
                                    break;
                                case 3 :
                                    // InternalKim.g:1118:8: lv_lookupTableArgs_30_3= '*'
                                    {
                                    lv_lookupTableArgs_30_3=(Token)match(input,40,FOLLOW_29); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_lookupTableArgs_30_3, grammarAccess.getModelBodyStatementAccess().getLookupTableArgsAsteriskKeyword_7_1_1_0_2());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getModelBodyStatementRule());
                                      								}
                                      								addWithLastConsumed(current, "lookupTableArgs", lv_lookupTableArgs_30_3, null);
                                      							
                                    }

                                    }
                                    break;

                            }


                            }


                            }

                            // InternalKim.g:1131:5: (otherlv_31= ',' ( ( (lv_lookupTableArgs_32_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_32_2= '?' | lv_lookupTableArgs_32_3= '*' ) ) ) )*
                            loop31:
                            do {
                                int alt31=2;
                                int LA31_0 = input.LA(1);

                                if ( (LA31_0==27) ) {
                                    alt31=1;
                                }


                                switch (alt31) {
                            	case 1 :
                            	    // InternalKim.g:1132:6: otherlv_31= ',' ( ( (lv_lookupTableArgs_32_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_32_2= '?' | lv_lookupTableArgs_32_3= '*' ) ) )
                            	    {
                            	    otherlv_31=(Token)match(input,27,FOLLOW_28); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      						newLeafNode(otherlv_31, grammarAccess.getModelBodyStatementAccess().getCommaKeyword_7_1_2_0());
                            	      					
                            	    }
                            	    // InternalKim.g:1136:6: ( ( (lv_lookupTableArgs_32_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_32_2= '?' | lv_lookupTableArgs_32_3= '*' ) ) )
                            	    // InternalKim.g:1137:7: ( (lv_lookupTableArgs_32_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_32_2= '?' | lv_lookupTableArgs_32_3= '*' ) )
                            	    {
                            	    // InternalKim.g:1137:7: ( (lv_lookupTableArgs_32_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_32_2= '?' | lv_lookupTableArgs_32_3= '*' ) )
                            	    // InternalKim.g:1138:8: (lv_lookupTableArgs_32_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_32_2= '?' | lv_lookupTableArgs_32_3= '*' )
                            	    {
                            	    // InternalKim.g:1138:8: (lv_lookupTableArgs_32_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_32_2= '?' | lv_lookupTableArgs_32_3= '*' )
                            	    int alt30=3;
                            	    switch ( input.LA(1) ) {
                            	    case RULE_LOWERCASE_ID:
                            	        {
                            	        alt30=1;
                            	        }
                            	        break;
                            	    case 39:
                            	        {
                            	        alt30=2;
                            	        }
                            	        break;
                            	    case 40:
                            	        {
                            	        alt30=3;
                            	        }
                            	        break;
                            	    default:
                            	        if (state.backtracking>0) {state.failed=true; return current;}
                            	        NoViableAltException nvae =
                            	            new NoViableAltException("", 30, 0, input);

                            	        throw nvae;
                            	    }

                            	    switch (alt30) {
                            	        case 1 :
                            	            // InternalKim.g:1139:9: lv_lookupTableArgs_32_1= RULE_LOWERCASE_ID
                            	            {
                            	            lv_lookupTableArgs_32_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_29); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              									newLeafNode(lv_lookupTableArgs_32_1, grammarAccess.getModelBodyStatementAccess().getLookupTableArgsLOWERCASE_IDTerminalRuleCall_7_1_2_1_0_0());
                            	              								
                            	            }
                            	            if ( state.backtracking==0 ) {

                            	              									if (current==null) {
                            	              										current = createModelElement(grammarAccess.getModelBodyStatementRule());
                            	              									}
                            	              									addWithLastConsumed(
                            	              										current,
                            	              										"lookupTableArgs",
                            	              										lv_lookupTableArgs_32_1,
                            	              										"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                            	              								
                            	            }

                            	            }
                            	            break;
                            	        case 2 :
                            	            // InternalKim.g:1154:9: lv_lookupTableArgs_32_2= '?'
                            	            {
                            	            lv_lookupTableArgs_32_2=(Token)match(input,39,FOLLOW_29); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              									newLeafNode(lv_lookupTableArgs_32_2, grammarAccess.getModelBodyStatementAccess().getLookupTableArgsQuestionMarkKeyword_7_1_2_1_0_1());
                            	              								
                            	            }
                            	            if ( state.backtracking==0 ) {

                            	              									if (current==null) {
                            	              										current = createModelElement(grammarAccess.getModelBodyStatementRule());
                            	              									}
                            	              									addWithLastConsumed(current, "lookupTableArgs", lv_lookupTableArgs_32_2, null);
                            	              								
                            	            }

                            	            }
                            	            break;
                            	        case 3 :
                            	            // InternalKim.g:1165:9: lv_lookupTableArgs_32_3= '*'
                            	            {
                            	            lv_lookupTableArgs_32_3=(Token)match(input,40,FOLLOW_29); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              									newLeafNode(lv_lookupTableArgs_32_3, grammarAccess.getModelBodyStatementAccess().getLookupTableArgsAsteriskKeyword_7_1_2_1_0_2());
                            	              								
                            	            }
                            	            if ( state.backtracking==0 ) {

                            	              									if (current==null) {
                            	              										current = createModelElement(grammarAccess.getModelBodyStatementRule());
                            	              									}
                            	              									addWithLastConsumed(current, "lookupTableArgs", lv_lookupTableArgs_32_3, null);
                            	              								
                            	            }

                            	            }
                            	            break;

                            	    }


                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop31;
                                }
                            } while (true);

                            otherlv_33=(Token)match(input,41,FOLLOW_30); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_33, grammarAccess.getModelBodyStatementAccess().getRightParenthesisKeyword_7_1_3());
                              				
                            }

                            }
                            break;

                    }

                    otherlv_34=(Token)match(input,34,FOLLOW_31); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_34, grammarAccess.getModelBodyStatementAccess().getIntoKeyword_7_2());
                      			
                    }
                    // InternalKim.g:1188:4: ( ( (lv_lookupTable_35_0= ruleTable ) ) | ( (lv_lookupTableId_36_0= RULE_UPPERCASE_ID ) ) )
                    int alt33=2;
                    int LA33_0 = input.LA(1);

                    if ( (LA33_0==RULE_LOWERCASE_ID||LA33_0==RULE_STRING||(LA33_0>=RULE_EXPR && LA33_0<=RULE_LOWERCASE_DASHID)||LA33_0==RULE_UPPERCASE_PATH||(LA33_0>=28 && LA33_0<=29)||LA33_0==38||LA33_0==40||(LA33_0>=48 && LA33_0<=49)||LA33_0==53||(LA33_0>=76 && LA33_0<=79)||LA33_0==82||LA33_0==85||(LA33_0>=132 && LA33_0<=133)||(LA33_0>=141 && LA33_0<=142)||(LA33_0>=144 && LA33_0<=149)||(LA33_0>=151 && LA33_0<=163)||(LA33_0>=251 && LA33_0<=252)) ) {
                        alt33=1;
                    }
                    else if ( (LA33_0==RULE_UPPERCASE_ID) ) {
                        int LA33_2 = input.LA(2);

                        if ( (LA33_2==106||LA33_2==109) ) {
                            alt33=1;
                        }
                        else if ( (LA33_2==EOF||LA33_2==20||LA33_2==42||(LA33_2>=54 && LA33_2<=56)||(LA33_2>=62 && LA33_2<=67)) ) {
                            alt33=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 33, 2, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 33, 0, input);

                        throw nvae;
                    }
                    switch (alt33) {
                        case 1 :
                            // InternalKim.g:1189:5: ( (lv_lookupTable_35_0= ruleTable ) )
                            {
                            // InternalKim.g:1189:5: ( (lv_lookupTable_35_0= ruleTable ) )
                            // InternalKim.g:1190:6: (lv_lookupTable_35_0= ruleTable )
                            {
                            // InternalKim.g:1190:6: (lv_lookupTable_35_0= ruleTable )
                            // InternalKim.g:1191:7: lv_lookupTable_35_0= ruleTable
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getLookupTableTableParserRuleCall_7_3_0_0());
                              						
                            }
                            pushFollow(FOLLOW_32);
                            lv_lookupTable_35_0=ruleTable();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                              							}
                              							set(
                              								current,
                              								"lookupTable",
                              								lv_lookupTable_35_0,
                              								"org.integratedmodelling.kim.Kim.Table");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:1209:5: ( (lv_lookupTableId_36_0= RULE_UPPERCASE_ID ) )
                            {
                            // InternalKim.g:1209:5: ( (lv_lookupTableId_36_0= RULE_UPPERCASE_ID ) )
                            // InternalKim.g:1210:6: (lv_lookupTableId_36_0= RULE_UPPERCASE_ID )
                            {
                            // InternalKim.g:1210:6: (lv_lookupTableId_36_0= RULE_UPPERCASE_ID )
                            // InternalKim.g:1211:7: lv_lookupTableId_36_0= RULE_UPPERCASE_ID
                            {
                            lv_lookupTableId_36_0=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_32); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_lookupTableId_36_0, grammarAccess.getModelBodyStatementAccess().getLookupTableIdUPPERCASE_IDTerminalRuleCall_7_3_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getModelBodyStatementRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"lookupTableId",
                              								lv_lookupTableId_36_0,
                              								"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // InternalKim.g:1229:3: ( (lv_actions_37_0= ruleActionSpecification ) )*
            loop35:
            do {
                int alt35=2;
                int LA35_0 = input.LA(1);

                if ( ((LA35_0>=54 && LA35_0<=56)||(LA35_0>=62 && LA35_0<=67)) ) {
                    alt35=1;
                }


                switch (alt35) {
            	case 1 :
            	    // InternalKim.g:1230:4: (lv_actions_37_0= ruleActionSpecification )
            	    {
            	    // InternalKim.g:1230:4: (lv_actions_37_0= ruleActionSpecification )
            	    // InternalKim.g:1231:5: lv_actions_37_0= ruleActionSpecification
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getModelBodyStatementAccess().getActionsActionSpecificationParserRuleCall_8_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_32);
            	    lv_actions_37_0=ruleActionSpecification();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
            	      					}
            	      					add(
            	      						current,
            	      						"actions",
            	      						lv_actions_37_0,
            	      						"org.integratedmodelling.kim.Kim.ActionSpecification");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop35;
                }
            } while (true);

            // InternalKim.g:1248:3: (otherlv_38= 'metadata' ( (lv_metadata_39_0= ruleMap ) ) )?
            int alt36=2;
            int LA36_0 = input.LA(1);

            if ( (LA36_0==42) ) {
                alt36=1;
            }
            switch (alt36) {
                case 1 :
                    // InternalKim.g:1249:4: otherlv_38= 'metadata' ( (lv_metadata_39_0= ruleMap ) )
                    {
                    otherlv_38=(Token)match(input,42,FOLLOW_33); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_38, grammarAccess.getModelBodyStatementAccess().getMetadataKeyword_9_0());
                      			
                    }
                    // InternalKim.g:1253:4: ( (lv_metadata_39_0= ruleMap ) )
                    // InternalKim.g:1254:5: (lv_metadata_39_0= ruleMap )
                    {
                    // InternalKim.g:1254:5: (lv_metadata_39_0= ruleMap )
                    // InternalKim.g:1255:6: lv_metadata_39_0= ruleMap
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getModelBodyStatementAccess().getMetadataMapParserRuleCall_9_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_metadata_39_0=ruleMap();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                      						}
                      						set(
                      							current,
                      							"metadata",
                      							lv_metadata_39_0,
                      							"org.integratedmodelling.kim.Kim.Map");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleModelBodyStatement"


    // $ANTLR start "entryRuleClassification"
    // InternalKim.g:1277:1: entryRuleClassification returns [EObject current=null] : iv_ruleClassification= ruleClassification EOF ;
    public final EObject entryRuleClassification() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleClassification = null;


        try {
            // InternalKim.g:1277:55: (iv_ruleClassification= ruleClassification EOF )
            // InternalKim.g:1278:2: iv_ruleClassification= ruleClassification EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getClassificationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleClassification=ruleClassification();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleClassification; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleClassification"


    // $ANTLR start "ruleClassification"
    // InternalKim.g:1284:1: ruleClassification returns [EObject current=null] : ( ( (lv_classifiers_0_0= ruleClassifier ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_classifiers_2_0= ruleClassifier ) ) )* ) ;
    public final EObject ruleClassification() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_classifiers_0_0 = null;

        EObject lv_classifiers_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:1290:2: ( ( ( (lv_classifiers_0_0= ruleClassifier ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_classifiers_2_0= ruleClassifier ) ) )* ) )
            // InternalKim.g:1291:2: ( ( (lv_classifiers_0_0= ruleClassifier ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_classifiers_2_0= ruleClassifier ) ) )* )
            {
            // InternalKim.g:1291:2: ( ( (lv_classifiers_0_0= ruleClassifier ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_classifiers_2_0= ruleClassifier ) ) )* )
            // InternalKim.g:1292:3: ( (lv_classifiers_0_0= ruleClassifier ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_classifiers_2_0= ruleClassifier ) ) )*
            {
            // InternalKim.g:1292:3: ( (lv_classifiers_0_0= ruleClassifier ) )
            // InternalKim.g:1293:4: (lv_classifiers_0_0= ruleClassifier )
            {
            // InternalKim.g:1293:4: (lv_classifiers_0_0= ruleClassifier )
            // InternalKim.g:1294:5: lv_classifiers_0_0= ruleClassifier
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getClassificationAccess().getClassifiersClassifierParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_34);
            lv_classifiers_0_0=ruleClassifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getClassificationRule());
              					}
              					add(
              						current,
              						"classifiers",
              						lv_classifiers_0_0,
              						"org.integratedmodelling.kim.Kim.Classifier");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:1311:3: ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_classifiers_2_0= ruleClassifier ) ) )*
            loop37:
            do {
                int alt37=2;
                int LA37_0 = input.LA(1);

                if ( (LA37_0==27) ) {
                    alt37=1;
                }


                switch (alt37) {
            	case 1 :
            	    // InternalKim.g:1312:4: ( ( ',' )=>otherlv_1= ',' ) ( (lv_classifiers_2_0= ruleClassifier ) )
            	    {
            	    // InternalKim.g:1312:4: ( ( ',' )=>otherlv_1= ',' )
            	    // InternalKim.g:1313:5: ( ',' )=>otherlv_1= ','
            	    {
            	    otherlv_1=(Token)match(input,27,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					newLeafNode(otherlv_1, grammarAccess.getClassificationAccess().getCommaKeyword_1_0());
            	      				
            	    }

            	    }

            	    // InternalKim.g:1319:4: ( (lv_classifiers_2_0= ruleClassifier ) )
            	    // InternalKim.g:1320:5: (lv_classifiers_2_0= ruleClassifier )
            	    {
            	    // InternalKim.g:1320:5: (lv_classifiers_2_0= ruleClassifier )
            	    // InternalKim.g:1321:6: lv_classifiers_2_0= ruleClassifier
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getClassificationAccess().getClassifiersClassifierParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_34);
            	    lv_classifiers_2_0=ruleClassifier();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getClassificationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"classifiers",
            	      							lv_classifiers_2_0,
            	      							"org.integratedmodelling.kim.Kim.Classifier");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop37;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassification"


    // $ANTLR start "entryRuleClassifier"
    // InternalKim.g:1343:1: entryRuleClassifier returns [EObject current=null] : iv_ruleClassifier= ruleClassifier EOF ;
    public final EObject entryRuleClassifier() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleClassifier = null;


        try {
            // InternalKim.g:1343:51: (iv_ruleClassifier= ruleClassifier EOF )
            // InternalKim.g:1344:2: iv_ruleClassifier= ruleClassifier EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getClassifierRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleClassifier=ruleClassifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleClassifier; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleClassifier"


    // $ANTLR start "ruleClassifier"
    // InternalKim.g:1350:1: ruleClassifier returns [EObject current=null] : ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) ( ( (lv_otherwise_1_0= 'otherwise' ) ) | ( (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) ) ( (lv_classifier_4_0= ruleClassifierRHS ) ) ) )? ) ;
    public final EObject ruleClassifier() throws RecognitionException {
        EObject current = null;

        Token lv_otherwise_1_0=null;
        Token otherlv_2=null;
        Token lv_negated_3_0=null;
        EObject lv_declaration_0_0 = null;

        EObject lv_classifier_4_0 = null;



        	enterRule();

        try {
            // InternalKim.g:1356:2: ( ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) ( ( (lv_otherwise_1_0= 'otherwise' ) ) | ( (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) ) ( (lv_classifier_4_0= ruleClassifierRHS ) ) ) )? ) )
            // InternalKim.g:1357:2: ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) ( ( (lv_otherwise_1_0= 'otherwise' ) ) | ( (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) ) ( (lv_classifier_4_0= ruleClassifierRHS ) ) ) )? )
            {
            // InternalKim.g:1357:2: ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) ( ( (lv_otherwise_1_0= 'otherwise' ) ) | ( (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) ) ( (lv_classifier_4_0= ruleClassifierRHS ) ) ) )? )
            // InternalKim.g:1358:3: ( (lv_declaration_0_0= ruleConceptDeclaration ) ) ( ( (lv_otherwise_1_0= 'otherwise' ) ) | ( (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) ) ( (lv_classifier_4_0= ruleClassifierRHS ) ) ) )?
            {
            // InternalKim.g:1358:3: ( (lv_declaration_0_0= ruleConceptDeclaration ) )
            // InternalKim.g:1359:4: (lv_declaration_0_0= ruleConceptDeclaration )
            {
            // InternalKim.g:1359:4: (lv_declaration_0_0= ruleConceptDeclaration )
            // InternalKim.g:1360:5: lv_declaration_0_0= ruleConceptDeclaration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getClassifierAccess().getDeclarationConceptDeclarationParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_35);
            lv_declaration_0_0=ruleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getClassifierRule());
              					}
              					set(
              						current,
              						"declaration",
              						lv_declaration_0_0,
              						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:1377:3: ( ( (lv_otherwise_1_0= 'otherwise' ) ) | ( (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) ) ( (lv_classifier_4_0= ruleClassifierRHS ) ) ) )?
            int alt39=3;
            int LA39_0 = input.LA(1);

            if ( (LA39_0==43) ) {
                alt39=1;
            }
            else if ( ((LA39_0>=44 && LA39_0<=45)) ) {
                alt39=2;
            }
            switch (alt39) {
                case 1 :
                    // InternalKim.g:1378:4: ( (lv_otherwise_1_0= 'otherwise' ) )
                    {
                    // InternalKim.g:1378:4: ( (lv_otherwise_1_0= 'otherwise' ) )
                    // InternalKim.g:1379:5: (lv_otherwise_1_0= 'otherwise' )
                    {
                    // InternalKim.g:1379:5: (lv_otherwise_1_0= 'otherwise' )
                    // InternalKim.g:1380:6: lv_otherwise_1_0= 'otherwise'
                    {
                    lv_otherwise_1_0=(Token)match(input,43,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_otherwise_1_0, grammarAccess.getClassifierAccess().getOtherwiseOtherwiseKeyword_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getClassifierRule());
                      						}
                      						setWithLastConsumed(current, "otherwise", true, "otherwise");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:1393:4: ( (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) ) ( (lv_classifier_4_0= ruleClassifierRHS ) ) )
                    {
                    // InternalKim.g:1393:4: ( (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) ) ( (lv_classifier_4_0= ruleClassifierRHS ) ) )
                    // InternalKim.g:1394:5: (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) ) ( (lv_classifier_4_0= ruleClassifierRHS ) )
                    {
                    // InternalKim.g:1394:5: (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) )
                    int alt38=2;
                    int LA38_0 = input.LA(1);

                    if ( (LA38_0==44) ) {
                        alt38=1;
                    }
                    else if ( (LA38_0==45) ) {
                        alt38=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 38, 0, input);

                        throw nvae;
                    }
                    switch (alt38) {
                        case 1 :
                            // InternalKim.g:1395:6: otherlv_2= 'if'
                            {
                            otherlv_2=(Token)match(input,44,FOLLOW_36); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_2, grammarAccess.getClassifierAccess().getIfKeyword_1_1_0_0());
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:1400:6: ( (lv_negated_3_0= 'unless' ) )
                            {
                            // InternalKim.g:1400:6: ( (lv_negated_3_0= 'unless' ) )
                            // InternalKim.g:1401:7: (lv_negated_3_0= 'unless' )
                            {
                            // InternalKim.g:1401:7: (lv_negated_3_0= 'unless' )
                            // InternalKim.g:1402:8: lv_negated_3_0= 'unless'
                            {
                            lv_negated_3_0=(Token)match(input,45,FOLLOW_36); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_negated_3_0, grammarAccess.getClassifierAccess().getNegatedUnlessKeyword_1_1_0_1_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getClassifierRule());
                              								}
                              								setWithLastConsumed(current, "negated", true, "unless");
                              							
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:1415:5: ( (lv_classifier_4_0= ruleClassifierRHS ) )
                    // InternalKim.g:1416:6: (lv_classifier_4_0= ruleClassifierRHS )
                    {
                    // InternalKim.g:1416:6: (lv_classifier_4_0= ruleClassifierRHS )
                    // InternalKim.g:1417:7: lv_classifier_4_0= ruleClassifierRHS
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getClassifierAccess().getClassifierClassifierRHSParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    lv_classifier_4_0=ruleClassifierRHS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getClassifierRule());
                      							}
                      							set(
                      								current,
                      								"classifier",
                      								lv_classifier_4_0,
                      								"org.integratedmodelling.kim.Kim.ClassifierRHS");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassifier"


    // $ANTLR start "entryRuleClassifierRHS"
    // InternalKim.g:1440:1: entryRuleClassifierRHS returns [EObject current=null] : iv_ruleClassifierRHS= ruleClassifierRHS EOF ;
    public final EObject entryRuleClassifierRHS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleClassifierRHS = null;


        try {
            // InternalKim.g:1440:54: (iv_ruleClassifierRHS= ruleClassifierRHS EOF )
            // InternalKim.g:1441:2: iv_ruleClassifierRHS= ruleClassifierRHS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getClassifierRHSRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleClassifierRHS=ruleClassifierRHS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleClassifierRHS; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleClassifierRHS"


    // $ANTLR start "ruleClassifierRHS"
    // InternalKim.g:1447:1: ruleClassifierRHS returns [EObject current=null] : ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' ) | ( ( (lv_op_19_0= ruleREL_OPERATOR ) ) ( (lv_expression_20_0= ruleNumber ) ) ) | ( (lv_nodata_21_0= 'unknown' ) ) | ( (lv_star_22_0= '*' ) ) ) ;
    public final EObject ruleClassifierRHS() throws RecognitionException {
        EObject current = null;

        Token lv_boolean_0_0=null;
        Token lv_boolean_1_0=null;
        Token lv_leftLimit_3_0=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token lv_rightLimit_7_0=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token lv_string_12_0=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token lv_nodata_21_0=null;
        Token lv_star_22_0=null;
        EObject lv_int0_2_0 = null;

        EObject lv_int1_6_0 = null;

        EObject lv_num_9_0 = null;

        EObject lv_set_11_0 = null;

        EObject lv_concept_13_0 = null;

        EObject lv_toResolve_15_0 = null;

        EObject lv_toResolve_17_0 = null;

        EObject lv_op_19_0 = null;

        EObject lv_expression_20_0 = null;



        	enterRule();

        try {
            // InternalKim.g:1453:2: ( ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' ) | ( ( (lv_op_19_0= ruleREL_OPERATOR ) ) ( (lv_expression_20_0= ruleNumber ) ) ) | ( (lv_nodata_21_0= 'unknown' ) ) | ( (lv_star_22_0= '*' ) ) ) )
            // InternalKim.g:1454:2: ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' ) | ( ( (lv_op_19_0= ruleREL_OPERATOR ) ) ( (lv_expression_20_0= ruleNumber ) ) ) | ( (lv_nodata_21_0= 'unknown' ) ) | ( (lv_star_22_0= '*' ) ) )
            {
            // InternalKim.g:1454:2: ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' ) | ( ( (lv_op_19_0= ruleREL_OPERATOR ) ) ( (lv_expression_20_0= ruleNumber ) ) ) | ( (lv_nodata_21_0= 'unknown' ) ) | ( (lv_star_22_0= '*' ) ) )
            int alt44=10;
            alt44 = dfa44.predict(input);
            switch (alt44) {
                case 1 :
                    // InternalKim.g:1455:3: ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) )
                    {
                    // InternalKim.g:1455:3: ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) )
                    int alt40=2;
                    int LA40_0 = input.LA(1);

                    if ( (LA40_0==28) ) {
                        alt40=1;
                    }
                    else if ( (LA40_0==29) ) {
                        alt40=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 40, 0, input);

                        throw nvae;
                    }
                    switch (alt40) {
                        case 1 :
                            // InternalKim.g:1456:4: ( (lv_boolean_0_0= 'true' ) )
                            {
                            // InternalKim.g:1456:4: ( (lv_boolean_0_0= 'true' ) )
                            // InternalKim.g:1457:5: (lv_boolean_0_0= 'true' )
                            {
                            // InternalKim.g:1457:5: (lv_boolean_0_0= 'true' )
                            // InternalKim.g:1458:6: lv_boolean_0_0= 'true'
                            {
                            lv_boolean_0_0=(Token)match(input,28,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_0_0, grammarAccess.getClassifierRHSAccess().getBooleanTrueKeyword_0_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getClassifierRHSRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_0_0, "true");
                              					
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:1471:4: ( (lv_boolean_1_0= 'false' ) )
                            {
                            // InternalKim.g:1471:4: ( (lv_boolean_1_0= 'false' ) )
                            // InternalKim.g:1472:5: (lv_boolean_1_0= 'false' )
                            {
                            // InternalKim.g:1472:5: (lv_boolean_1_0= 'false' )
                            // InternalKim.g:1473:6: lv_boolean_1_0= 'false'
                            {
                            lv_boolean_1_0=(Token)match(input,29,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_1_0, grammarAccess.getClassifierRHSAccess().getBooleanFalseKeyword_0_1_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getClassifierRHSRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_1_0, "false");
                              					
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:1487:3: ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? )
                    {
                    // InternalKim.g:1487:3: ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? )
                    // InternalKim.g:1488:4: ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )?
                    {
                    // InternalKim.g:1488:4: ( (lv_int0_2_0= ruleNumber ) )
                    // InternalKim.g:1489:5: (lv_int0_2_0= ruleNumber )
                    {
                    // InternalKim.g:1489:5: (lv_int0_2_0= ruleNumber )
                    // InternalKim.g:1490:6: lv_int0_2_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSAccess().getInt0NumberParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_37);
                    lv_int0_2_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
                      						}
                      						set(
                      							current,
                      							"int0",
                      							lv_int0_2_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:1507:4: ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )?
                    int alt41=3;
                    int LA41_0 = input.LA(1);

                    if ( (LA41_0==46) ) {
                        alt41=1;
                    }
                    else if ( (LA41_0==47) ) {
                        alt41=2;
                    }
                    switch (alt41) {
                        case 1 :
                            // InternalKim.g:1508:5: ( (lv_leftLimit_3_0= 'inclusive' ) )
                            {
                            // InternalKim.g:1508:5: ( (lv_leftLimit_3_0= 'inclusive' ) )
                            // InternalKim.g:1509:6: (lv_leftLimit_3_0= 'inclusive' )
                            {
                            // InternalKim.g:1509:6: (lv_leftLimit_3_0= 'inclusive' )
                            // InternalKim.g:1510:7: lv_leftLimit_3_0= 'inclusive'
                            {
                            lv_leftLimit_3_0=(Token)match(input,46,FOLLOW_25); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_leftLimit_3_0, grammarAccess.getClassifierRHSAccess().getLeftLimitInclusiveKeyword_1_1_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getClassifierRHSRule());
                              							}
                              							setWithLastConsumed(current, "leftLimit", lv_leftLimit_3_0, "inclusive");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:1523:5: otherlv_4= 'exclusive'
                            {
                            otherlv_4=(Token)match(input,47,FOLLOW_25); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_4, grammarAccess.getClassifierRHSAccess().getExclusiveKeyword_1_1_1());
                              				
                            }

                            }
                            break;

                    }

                    // InternalKim.g:1528:4: ( ( 'to' )=>otherlv_5= 'to' )
                    // InternalKim.g:1529:5: ( 'to' )=>otherlv_5= 'to'
                    {
                    otherlv_5=(Token)match(input,36,FOLLOW_38); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getClassifierRHSAccess().getToKeyword_1_2());
                      				
                    }

                    }

                    // InternalKim.g:1535:4: ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) )
                    // InternalKim.g:1536:5: ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber )
                    {
                    // InternalKim.g:1540:5: (lv_int1_6_0= ruleNumber )
                    // InternalKim.g:1541:6: lv_int1_6_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSAccess().getInt1NumberParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FOLLOW_39);
                    lv_int1_6_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
                      						}
                      						set(
                      							current,
                      							"int1",
                      							lv_int1_6_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:1558:4: ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )?
                    int alt42=3;
                    int LA42_0 = input.LA(1);

                    if ( (LA42_0==46) ) {
                        alt42=1;
                    }
                    else if ( (LA42_0==47) ) {
                        alt42=2;
                    }
                    switch (alt42) {
                        case 1 :
                            // InternalKim.g:1559:5: ( (lv_rightLimit_7_0= 'inclusive' ) )
                            {
                            // InternalKim.g:1559:5: ( (lv_rightLimit_7_0= 'inclusive' ) )
                            // InternalKim.g:1560:6: (lv_rightLimit_7_0= 'inclusive' )
                            {
                            // InternalKim.g:1560:6: (lv_rightLimit_7_0= 'inclusive' )
                            // InternalKim.g:1561:7: lv_rightLimit_7_0= 'inclusive'
                            {
                            lv_rightLimit_7_0=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_rightLimit_7_0, grammarAccess.getClassifierRHSAccess().getRightLimitInclusiveKeyword_1_4_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getClassifierRHSRule());
                              							}
                              							setWithLastConsumed(current, "rightLimit", lv_rightLimit_7_0, "inclusive");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:1574:5: otherlv_8= 'exclusive'
                            {
                            otherlv_8=(Token)match(input,47,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_8, grammarAccess.getClassifierRHSAccess().getExclusiveKeyword_1_4_1());
                              				
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:1581:3: ( (lv_num_9_0= ruleNumber ) )
                    {
                    // InternalKim.g:1581:3: ( (lv_num_9_0= ruleNumber ) )
                    // InternalKim.g:1582:4: (lv_num_9_0= ruleNumber )
                    {
                    // InternalKim.g:1582:4: (lv_num_9_0= ruleNumber )
                    // InternalKim.g:1583:5: lv_num_9_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getClassifierRHSAccess().getNumNumberParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_num_9_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
                      					}
                      					set(
                      						current,
                      						"num",
                      						lv_num_9_0,
                      						"org.integratedmodelling.kim.Kim.Number");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:1601:3: (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) )
                    {
                    // InternalKim.g:1601:3: (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) )
                    // InternalKim.g:1602:4: otherlv_10= 'in' ( (lv_set_11_0= ruleList ) )
                    {
                    otherlv_10=(Token)match(input,48,FOLLOW_40); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getClassifierRHSAccess().getInKeyword_3_0());
                      			
                    }
                    // InternalKim.g:1606:4: ( (lv_set_11_0= ruleList ) )
                    // InternalKim.g:1607:5: (lv_set_11_0= ruleList )
                    {
                    // InternalKim.g:1607:5: (lv_set_11_0= ruleList )
                    // InternalKim.g:1608:6: lv_set_11_0= ruleList
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSAccess().getSetListParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_set_11_0=ruleList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
                      						}
                      						set(
                      							current,
                      							"set",
                      							lv_set_11_0,
                      							"org.integratedmodelling.kim.Kim.List");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:1627:3: ( (lv_string_12_0= RULE_STRING ) )
                    {
                    // InternalKim.g:1627:3: ( (lv_string_12_0= RULE_STRING ) )
                    // InternalKim.g:1628:4: (lv_string_12_0= RULE_STRING )
                    {
                    // InternalKim.g:1628:4: (lv_string_12_0= RULE_STRING )
                    // InternalKim.g:1629:5: lv_string_12_0= RULE_STRING
                    {
                    lv_string_12_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_string_12_0, grammarAccess.getClassifierRHSAccess().getStringSTRINGTerminalRuleCall_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassifierRHSRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"string",
                      						lv_string_12_0,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:1646:3: ( (lv_concept_13_0= ruleConceptDeclaration ) )
                    {
                    // InternalKim.g:1646:3: ( (lv_concept_13_0= ruleConceptDeclaration ) )
                    // InternalKim.g:1647:4: (lv_concept_13_0= ruleConceptDeclaration )
                    {
                    // InternalKim.g:1647:4: (lv_concept_13_0= ruleConceptDeclaration )
                    // InternalKim.g:1648:5: lv_concept_13_0= ruleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getClassifierRHSAccess().getConceptConceptDeclarationParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_13_0=ruleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
                      					}
                      					set(
                      						current,
                      						"concept",
                      						lv_concept_13_0,
                      						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalKim.g:1666:3: (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' )
                    {
                    // InternalKim.g:1666:3: (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' )
                    // InternalKim.g:1667:4: otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')'
                    {
                    otherlv_14=(Token)match(input,38,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_14, grammarAccess.getClassifierRHSAccess().getLeftParenthesisKeyword_6_0());
                      			
                    }
                    // InternalKim.g:1671:4: ( (lv_toResolve_15_0= ruleConceptDeclaration ) )
                    // InternalKim.g:1672:5: (lv_toResolve_15_0= ruleConceptDeclaration )
                    {
                    // InternalKim.g:1672:5: (lv_toResolve_15_0= ruleConceptDeclaration )
                    // InternalKim.g:1673:6: lv_toResolve_15_0= ruleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSAccess().getToResolveConceptDeclarationParserRuleCall_6_1_0());
                      					
                    }
                    pushFollow(FOLLOW_29);
                    lv_toResolve_15_0=ruleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
                      						}
                      						add(
                      							current,
                      							"toResolve",
                      							lv_toResolve_15_0,
                      							"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:1690:4: ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )*
                    loop43:
                    do {
                        int alt43=2;
                        int LA43_0 = input.LA(1);

                        if ( (LA43_0==27) ) {
                            alt43=1;
                        }


                        switch (alt43) {
                    	case 1 :
                    	    // InternalKim.g:1691:5: ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) )
                    	    {
                    	    // InternalKim.g:1691:5: ( ( ',' )=>otherlv_16= ',' )
                    	    // InternalKim.g:1692:6: ( ',' )=>otherlv_16= ','
                    	    {
                    	    otherlv_16=(Token)match(input,27,FOLLOW_23); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_16, grammarAccess.getClassifierRHSAccess().getCommaKeyword_6_2_0());
                    	      					
                    	    }

                    	    }

                    	    // InternalKim.g:1698:5: ( (lv_toResolve_17_0= ruleConceptDeclaration ) )
                    	    // InternalKim.g:1699:6: (lv_toResolve_17_0= ruleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:1699:6: (lv_toResolve_17_0= ruleConceptDeclaration )
                    	    // InternalKim.g:1700:7: lv_toResolve_17_0= ruleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getClassifierRHSAccess().getToResolveConceptDeclarationParserRuleCall_6_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_29);
                    	    lv_toResolve_17_0=ruleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"toResolve",
                    	      								lv_toResolve_17_0,
                    	      								"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop43;
                        }
                    } while (true);

                    otherlv_18=(Token)match(input,41,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_18, grammarAccess.getClassifierRHSAccess().getRightParenthesisKeyword_6_3());
                      			
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalKim.g:1724:3: ( ( (lv_op_19_0= ruleREL_OPERATOR ) ) ( (lv_expression_20_0= ruleNumber ) ) )
                    {
                    // InternalKim.g:1724:3: ( ( (lv_op_19_0= ruleREL_OPERATOR ) ) ( (lv_expression_20_0= ruleNumber ) ) )
                    // InternalKim.g:1725:4: ( (lv_op_19_0= ruleREL_OPERATOR ) ) ( (lv_expression_20_0= ruleNumber ) )
                    {
                    // InternalKim.g:1725:4: ( (lv_op_19_0= ruleREL_OPERATOR ) )
                    // InternalKim.g:1726:5: (lv_op_19_0= ruleREL_OPERATOR )
                    {
                    // InternalKim.g:1726:5: (lv_op_19_0= ruleREL_OPERATOR )
                    // InternalKim.g:1727:6: lv_op_19_0= ruleREL_OPERATOR
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSAccess().getOpREL_OPERATORParserRuleCall_7_0_0());
                      					
                    }
                    pushFollow(FOLLOW_38);
                    lv_op_19_0=ruleREL_OPERATOR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
                      						}
                      						set(
                      							current,
                      							"op",
                      							lv_op_19_0,
                      							"org.integratedmodelling.kim.Kim.REL_OPERATOR");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:1744:4: ( (lv_expression_20_0= ruleNumber ) )
                    // InternalKim.g:1745:5: (lv_expression_20_0= ruleNumber )
                    {
                    // InternalKim.g:1745:5: (lv_expression_20_0= ruleNumber )
                    // InternalKim.g:1746:6: lv_expression_20_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSAccess().getExpressionNumberParserRuleCall_7_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_20_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_20_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 9 :
                    // InternalKim.g:1765:3: ( (lv_nodata_21_0= 'unknown' ) )
                    {
                    // InternalKim.g:1765:3: ( (lv_nodata_21_0= 'unknown' ) )
                    // InternalKim.g:1766:4: (lv_nodata_21_0= 'unknown' )
                    {
                    // InternalKim.g:1766:4: (lv_nodata_21_0= 'unknown' )
                    // InternalKim.g:1767:5: lv_nodata_21_0= 'unknown'
                    {
                    lv_nodata_21_0=(Token)match(input,49,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_nodata_21_0, grammarAccess.getClassifierRHSAccess().getNodataUnknownKeyword_8_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassifierRHSRule());
                      					}
                      					setWithLastConsumed(current, "nodata", lv_nodata_21_0, "unknown");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 10 :
                    // InternalKim.g:1780:3: ( (lv_star_22_0= '*' ) )
                    {
                    // InternalKim.g:1780:3: ( (lv_star_22_0= '*' ) )
                    // InternalKim.g:1781:4: (lv_star_22_0= '*' )
                    {
                    // InternalKim.g:1781:4: (lv_star_22_0= '*' )
                    // InternalKim.g:1782:5: lv_star_22_0= '*'
                    {
                    lv_star_22_0=(Token)match(input,40,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_star_22_0, grammarAccess.getClassifierRHSAccess().getStarAsteriskKeyword_9_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassifierRHSRule());
                      					}
                      					setWithLastConsumed(current, "star", true, "*");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassifierRHS"


    // $ANTLR start "entryRuleClassifierRHSWithIdNoSet"
    // InternalKim.g:1798:1: entryRuleClassifierRHSWithIdNoSet returns [EObject current=null] : iv_ruleClassifierRHSWithIdNoSet= ruleClassifierRHSWithIdNoSet EOF ;
    public final EObject entryRuleClassifierRHSWithIdNoSet() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleClassifierRHSWithIdNoSet = null;


        try {
            // InternalKim.g:1798:65: (iv_ruleClassifierRHSWithIdNoSet= ruleClassifierRHSWithIdNoSet EOF )
            // InternalKim.g:1799:2: iv_ruleClassifierRHSWithIdNoSet= ruleClassifierRHSWithIdNoSet EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getClassifierRHSWithIdNoSetRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleClassifierRHSWithIdNoSet=ruleClassifierRHSWithIdNoSet();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleClassifierRHSWithIdNoSet; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleClassifierRHSWithIdNoSet"


    // $ANTLR start "ruleClassifierRHSWithIdNoSet"
    // InternalKim.g:1805:1: ruleClassifierRHSWithIdNoSet returns [EObject current=null] : ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | ( (lv_string_10_0= RULE_STRING ) ) | ( (lv_concept_11_0= ruleConceptDeclaration ) ) | ( ( (lv_id_12_1= RULE_LOWERCASE_ID | lv_id_12_2= rulePropertyId ) ) ) | ( ( (lv_op_13_0= ruleREL_OPERATOR ) ) ( (lv_expression_14_0= ruleNumber ) ) ) | ( (lv_nodata_15_0= 'unknown' ) ) | ( (lv_star_16_0= '*' ) ) ) ;
    public final EObject ruleClassifierRHSWithIdNoSet() throws RecognitionException {
        EObject current = null;

        Token lv_boolean_0_0=null;
        Token lv_boolean_1_0=null;
        Token lv_leftLimit_3_0=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token lv_rightLimit_7_0=null;
        Token otherlv_8=null;
        Token lv_string_10_0=null;
        Token lv_id_12_1=null;
        Token lv_nodata_15_0=null;
        Token lv_star_16_0=null;
        EObject lv_int0_2_0 = null;

        EObject lv_int1_6_0 = null;

        EObject lv_num_9_0 = null;

        EObject lv_concept_11_0 = null;

        AntlrDatatypeRuleToken lv_id_12_2 = null;

        EObject lv_op_13_0 = null;

        EObject lv_expression_14_0 = null;



        	enterRule();

        try {
            // InternalKim.g:1811:2: ( ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | ( (lv_string_10_0= RULE_STRING ) ) | ( (lv_concept_11_0= ruleConceptDeclaration ) ) | ( ( (lv_id_12_1= RULE_LOWERCASE_ID | lv_id_12_2= rulePropertyId ) ) ) | ( ( (lv_op_13_0= ruleREL_OPERATOR ) ) ( (lv_expression_14_0= ruleNumber ) ) ) | ( (lv_nodata_15_0= 'unknown' ) ) | ( (lv_star_16_0= '*' ) ) ) )
            // InternalKim.g:1812:2: ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | ( (lv_string_10_0= RULE_STRING ) ) | ( (lv_concept_11_0= ruleConceptDeclaration ) ) | ( ( (lv_id_12_1= RULE_LOWERCASE_ID | lv_id_12_2= rulePropertyId ) ) ) | ( ( (lv_op_13_0= ruleREL_OPERATOR ) ) ( (lv_expression_14_0= ruleNumber ) ) ) | ( (lv_nodata_15_0= 'unknown' ) ) | ( (lv_star_16_0= '*' ) ) )
            {
            // InternalKim.g:1812:2: ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | ( (lv_string_10_0= RULE_STRING ) ) | ( (lv_concept_11_0= ruleConceptDeclaration ) ) | ( ( (lv_id_12_1= RULE_LOWERCASE_ID | lv_id_12_2= rulePropertyId ) ) ) | ( ( (lv_op_13_0= ruleREL_OPERATOR ) ) ( (lv_expression_14_0= ruleNumber ) ) ) | ( (lv_nodata_15_0= 'unknown' ) ) | ( (lv_star_16_0= '*' ) ) )
            int alt49=9;
            alt49 = dfa49.predict(input);
            switch (alt49) {
                case 1 :
                    // InternalKim.g:1813:3: ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) )
                    {
                    // InternalKim.g:1813:3: ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) )
                    int alt45=2;
                    int LA45_0 = input.LA(1);

                    if ( (LA45_0==28) ) {
                        alt45=1;
                    }
                    else if ( (LA45_0==29) ) {
                        alt45=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 45, 0, input);

                        throw nvae;
                    }
                    switch (alt45) {
                        case 1 :
                            // InternalKim.g:1814:4: ( (lv_boolean_0_0= 'true' ) )
                            {
                            // InternalKim.g:1814:4: ( (lv_boolean_0_0= 'true' ) )
                            // InternalKim.g:1815:5: (lv_boolean_0_0= 'true' )
                            {
                            // InternalKim.g:1815:5: (lv_boolean_0_0= 'true' )
                            // InternalKim.g:1816:6: lv_boolean_0_0= 'true'
                            {
                            lv_boolean_0_0=(Token)match(input,28,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_0_0, grammarAccess.getClassifierRHSWithIdNoSetAccess().getBooleanTrueKeyword_0_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getClassifierRHSWithIdNoSetRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_0_0, "true");
                              					
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:1829:4: ( (lv_boolean_1_0= 'false' ) )
                            {
                            // InternalKim.g:1829:4: ( (lv_boolean_1_0= 'false' ) )
                            // InternalKim.g:1830:5: (lv_boolean_1_0= 'false' )
                            {
                            // InternalKim.g:1830:5: (lv_boolean_1_0= 'false' )
                            // InternalKim.g:1831:6: lv_boolean_1_0= 'false'
                            {
                            lv_boolean_1_0=(Token)match(input,29,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_1_0, grammarAccess.getClassifierRHSWithIdNoSetAccess().getBooleanFalseKeyword_0_1_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getClassifierRHSWithIdNoSetRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_1_0, "false");
                              					
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:1845:3: ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? )
                    {
                    // InternalKim.g:1845:3: ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? )
                    // InternalKim.g:1846:4: ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )?
                    {
                    // InternalKim.g:1846:4: ( (lv_int0_2_0= ruleNumber ) )
                    // InternalKim.g:1847:5: (lv_int0_2_0= ruleNumber )
                    {
                    // InternalKim.g:1847:5: (lv_int0_2_0= ruleNumber )
                    // InternalKim.g:1848:6: lv_int0_2_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSWithIdNoSetAccess().getInt0NumberParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_37);
                    lv_int0_2_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSWithIdNoSetRule());
                      						}
                      						set(
                      							current,
                      							"int0",
                      							lv_int0_2_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:1865:4: ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )?
                    int alt46=3;
                    int LA46_0 = input.LA(1);

                    if ( (LA46_0==46) ) {
                        alt46=1;
                    }
                    else if ( (LA46_0==47) ) {
                        alt46=2;
                    }
                    switch (alt46) {
                        case 1 :
                            // InternalKim.g:1866:5: ( (lv_leftLimit_3_0= 'inclusive' ) )
                            {
                            // InternalKim.g:1866:5: ( (lv_leftLimit_3_0= 'inclusive' ) )
                            // InternalKim.g:1867:6: (lv_leftLimit_3_0= 'inclusive' )
                            {
                            // InternalKim.g:1867:6: (lv_leftLimit_3_0= 'inclusive' )
                            // InternalKim.g:1868:7: lv_leftLimit_3_0= 'inclusive'
                            {
                            lv_leftLimit_3_0=(Token)match(input,46,FOLLOW_25); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_leftLimit_3_0, grammarAccess.getClassifierRHSWithIdNoSetAccess().getLeftLimitInclusiveKeyword_1_1_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getClassifierRHSWithIdNoSetRule());
                              							}
                              							setWithLastConsumed(current, "leftLimit", lv_leftLimit_3_0, "inclusive");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:1881:5: otherlv_4= 'exclusive'
                            {
                            otherlv_4=(Token)match(input,47,FOLLOW_25); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_4, grammarAccess.getClassifierRHSWithIdNoSetAccess().getExclusiveKeyword_1_1_1());
                              				
                            }

                            }
                            break;

                    }

                    // InternalKim.g:1886:4: ( ( 'to' )=>otherlv_5= 'to' )
                    // InternalKim.g:1887:5: ( 'to' )=>otherlv_5= 'to'
                    {
                    otherlv_5=(Token)match(input,36,FOLLOW_38); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getClassifierRHSWithIdNoSetAccess().getToKeyword_1_2());
                      				
                    }

                    }

                    // InternalKim.g:1893:4: ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) )
                    // InternalKim.g:1894:5: ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber )
                    {
                    // InternalKim.g:1898:5: (lv_int1_6_0= ruleNumber )
                    // InternalKim.g:1899:6: lv_int1_6_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSWithIdNoSetAccess().getInt1NumberParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FOLLOW_39);
                    lv_int1_6_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSWithIdNoSetRule());
                      						}
                      						set(
                      							current,
                      							"int1",
                      							lv_int1_6_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:1916:4: ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )?
                    int alt47=3;
                    int LA47_0 = input.LA(1);

                    if ( (LA47_0==46) ) {
                        alt47=1;
                    }
                    else if ( (LA47_0==47) ) {
                        alt47=2;
                    }
                    switch (alt47) {
                        case 1 :
                            // InternalKim.g:1917:5: ( (lv_rightLimit_7_0= 'inclusive' ) )
                            {
                            // InternalKim.g:1917:5: ( (lv_rightLimit_7_0= 'inclusive' ) )
                            // InternalKim.g:1918:6: (lv_rightLimit_7_0= 'inclusive' )
                            {
                            // InternalKim.g:1918:6: (lv_rightLimit_7_0= 'inclusive' )
                            // InternalKim.g:1919:7: lv_rightLimit_7_0= 'inclusive'
                            {
                            lv_rightLimit_7_0=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_rightLimit_7_0, grammarAccess.getClassifierRHSWithIdNoSetAccess().getRightLimitInclusiveKeyword_1_4_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getClassifierRHSWithIdNoSetRule());
                              							}
                              							setWithLastConsumed(current, "rightLimit", lv_rightLimit_7_0, "inclusive");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:1932:5: otherlv_8= 'exclusive'
                            {
                            otherlv_8=(Token)match(input,47,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_8, grammarAccess.getClassifierRHSWithIdNoSetAccess().getExclusiveKeyword_1_4_1());
                              				
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:1939:3: ( (lv_num_9_0= ruleNumber ) )
                    {
                    // InternalKim.g:1939:3: ( (lv_num_9_0= ruleNumber ) )
                    // InternalKim.g:1940:4: (lv_num_9_0= ruleNumber )
                    {
                    // InternalKim.g:1940:4: (lv_num_9_0= ruleNumber )
                    // InternalKim.g:1941:5: lv_num_9_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getClassifierRHSWithIdNoSetAccess().getNumNumberParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_num_9_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getClassifierRHSWithIdNoSetRule());
                      					}
                      					set(
                      						current,
                      						"num",
                      						lv_num_9_0,
                      						"org.integratedmodelling.kim.Kim.Number");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:1959:3: ( (lv_string_10_0= RULE_STRING ) )
                    {
                    // InternalKim.g:1959:3: ( (lv_string_10_0= RULE_STRING ) )
                    // InternalKim.g:1960:4: (lv_string_10_0= RULE_STRING )
                    {
                    // InternalKim.g:1960:4: (lv_string_10_0= RULE_STRING )
                    // InternalKim.g:1961:5: lv_string_10_0= RULE_STRING
                    {
                    lv_string_10_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_string_10_0, grammarAccess.getClassifierRHSWithIdNoSetAccess().getStringSTRINGTerminalRuleCall_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassifierRHSWithIdNoSetRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"string",
                      						lv_string_10_0,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:1978:3: ( (lv_concept_11_0= ruleConceptDeclaration ) )
                    {
                    // InternalKim.g:1978:3: ( (lv_concept_11_0= ruleConceptDeclaration ) )
                    // InternalKim.g:1979:4: (lv_concept_11_0= ruleConceptDeclaration )
                    {
                    // InternalKim.g:1979:4: (lv_concept_11_0= ruleConceptDeclaration )
                    // InternalKim.g:1980:5: lv_concept_11_0= ruleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getClassifierRHSWithIdNoSetAccess().getConceptConceptDeclarationParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_11_0=ruleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getClassifierRHSWithIdNoSetRule());
                      					}
                      					set(
                      						current,
                      						"concept",
                      						lv_concept_11_0,
                      						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:1998:3: ( ( (lv_id_12_1= RULE_LOWERCASE_ID | lv_id_12_2= rulePropertyId ) ) )
                    {
                    // InternalKim.g:1998:3: ( ( (lv_id_12_1= RULE_LOWERCASE_ID | lv_id_12_2= rulePropertyId ) ) )
                    // InternalKim.g:1999:4: ( (lv_id_12_1= RULE_LOWERCASE_ID | lv_id_12_2= rulePropertyId ) )
                    {
                    // InternalKim.g:1999:4: ( (lv_id_12_1= RULE_LOWERCASE_ID | lv_id_12_2= rulePropertyId ) )
                    // InternalKim.g:2000:5: (lv_id_12_1= RULE_LOWERCASE_ID | lv_id_12_2= rulePropertyId )
                    {
                    // InternalKim.g:2000:5: (lv_id_12_1= RULE_LOWERCASE_ID | lv_id_12_2= rulePropertyId )
                    int alt48=2;
                    alt48 = dfa48.predict(input);
                    switch (alt48) {
                        case 1 :
                            // InternalKim.g:2001:6: lv_id_12_1= RULE_LOWERCASE_ID
                            {
                            lv_id_12_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_12_1, grammarAccess.getClassifierRHSWithIdNoSetAccess().getIdLOWERCASE_IDTerminalRuleCall_5_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getClassifierRHSWithIdNoSetRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_12_1,
                              							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:2016:6: lv_id_12_2= rulePropertyId
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getClassifierRHSWithIdNoSetAccess().getIdPropertyIdParserRuleCall_5_0_1());
                              					
                            }
                            pushFollow(FOLLOW_2);
                            lv_id_12_2=rulePropertyId();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getClassifierRHSWithIdNoSetRule());
                              						}
                              						set(
                              							current,
                              							"id",
                              							lv_id_12_2,
                              							"org.integratedmodelling.kim.Kim.PropertyId");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalKim.g:2035:3: ( ( (lv_op_13_0= ruleREL_OPERATOR ) ) ( (lv_expression_14_0= ruleNumber ) ) )
                    {
                    // InternalKim.g:2035:3: ( ( (lv_op_13_0= ruleREL_OPERATOR ) ) ( (lv_expression_14_0= ruleNumber ) ) )
                    // InternalKim.g:2036:4: ( (lv_op_13_0= ruleREL_OPERATOR ) ) ( (lv_expression_14_0= ruleNumber ) )
                    {
                    // InternalKim.g:2036:4: ( (lv_op_13_0= ruleREL_OPERATOR ) )
                    // InternalKim.g:2037:5: (lv_op_13_0= ruleREL_OPERATOR )
                    {
                    // InternalKim.g:2037:5: (lv_op_13_0= ruleREL_OPERATOR )
                    // InternalKim.g:2038:6: lv_op_13_0= ruleREL_OPERATOR
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSWithIdNoSetAccess().getOpREL_OPERATORParserRuleCall_6_0_0());
                      					
                    }
                    pushFollow(FOLLOW_38);
                    lv_op_13_0=ruleREL_OPERATOR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSWithIdNoSetRule());
                      						}
                      						set(
                      							current,
                      							"op",
                      							lv_op_13_0,
                      							"org.integratedmodelling.kim.Kim.REL_OPERATOR");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:2055:4: ( (lv_expression_14_0= ruleNumber ) )
                    // InternalKim.g:2056:5: (lv_expression_14_0= ruleNumber )
                    {
                    // InternalKim.g:2056:5: (lv_expression_14_0= ruleNumber )
                    // InternalKim.g:2057:6: lv_expression_14_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSWithIdNoSetAccess().getExpressionNumberParserRuleCall_6_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_14_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSWithIdNoSetRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_14_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalKim.g:2076:3: ( (lv_nodata_15_0= 'unknown' ) )
                    {
                    // InternalKim.g:2076:3: ( (lv_nodata_15_0= 'unknown' ) )
                    // InternalKim.g:2077:4: (lv_nodata_15_0= 'unknown' )
                    {
                    // InternalKim.g:2077:4: (lv_nodata_15_0= 'unknown' )
                    // InternalKim.g:2078:5: lv_nodata_15_0= 'unknown'
                    {
                    lv_nodata_15_0=(Token)match(input,49,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_nodata_15_0, grammarAccess.getClassifierRHSWithIdNoSetAccess().getNodataUnknownKeyword_7_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassifierRHSWithIdNoSetRule());
                      					}
                      					setWithLastConsumed(current, "nodata", lv_nodata_15_0, "unknown");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 9 :
                    // InternalKim.g:2091:3: ( (lv_star_16_0= '*' ) )
                    {
                    // InternalKim.g:2091:3: ( (lv_star_16_0= '*' ) )
                    // InternalKim.g:2092:4: (lv_star_16_0= '*' )
                    {
                    // InternalKim.g:2092:4: (lv_star_16_0= '*' )
                    // InternalKim.g:2093:5: lv_star_16_0= '*'
                    {
                    lv_star_16_0=(Token)match(input,40,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_star_16_0, grammarAccess.getClassifierRHSWithIdNoSetAccess().getStarAsteriskKeyword_8_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassifierRHSWithIdNoSetRule());
                      					}
                      					setWithLastConsumed(current, "star", true, "*");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassifierRHSWithIdNoSet"


    // $ANTLR start "entryRuleUrn"
    // InternalKim.g:2109:1: entryRuleUrn returns [EObject current=null] : iv_ruleUrn= ruleUrn EOF ;
    public final EObject entryRuleUrn() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUrn = null;


        try {
            // InternalKim.g:2109:44: (iv_ruleUrn= ruleUrn EOF )
            // InternalKim.g:2110:2: iv_ruleUrn= ruleUrn EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUrnRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUrn=ruleUrn();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUrn; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUrn"


    // $ANTLR start "ruleUrn"
    // InternalKim.g:2116:1: ruleUrn returns [EObject current=null] : ( ( ( (lv_name_0_1= rulePathName | lv_name_0_2= ruleUrnId | lv_name_0_3= ruleLocalFilePath ) ) ) | ( (lv_strings_1_0= RULE_STRING ) )+ ) ;
    public final EObject ruleUrn() throws RecognitionException {
        EObject current = null;

        Token lv_strings_1_0=null;
        AntlrDatatypeRuleToken lv_name_0_1 = null;

        AntlrDatatypeRuleToken lv_name_0_2 = null;

        AntlrDatatypeRuleToken lv_name_0_3 = null;



        	enterRule();

        try {
            // InternalKim.g:2122:2: ( ( ( ( (lv_name_0_1= rulePathName | lv_name_0_2= ruleUrnId | lv_name_0_3= ruleLocalFilePath ) ) ) | ( (lv_strings_1_0= RULE_STRING ) )+ ) )
            // InternalKim.g:2123:2: ( ( ( (lv_name_0_1= rulePathName | lv_name_0_2= ruleUrnId | lv_name_0_3= ruleLocalFilePath ) ) ) | ( (lv_strings_1_0= RULE_STRING ) )+ )
            {
            // InternalKim.g:2123:2: ( ( ( (lv_name_0_1= rulePathName | lv_name_0_2= ruleUrnId | lv_name_0_3= ruleLocalFilePath ) ) ) | ( (lv_strings_1_0= RULE_STRING ) )+ )
            int alt52=2;
            int LA52_0 = input.LA(1);

            if ( ((LA52_0>=RULE_LOWERCASE_ID && LA52_0<=RULE_UPPERCASE_ID)||LA52_0==RULE_CAMELCASE_ID||LA52_0==RULE_LOWERCASE_DASHID||LA52_0==105) ) {
                alt52=1;
            }
            else if ( (LA52_0==RULE_STRING) ) {
                alt52=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 52, 0, input);

                throw nvae;
            }
            switch (alt52) {
                case 1 :
                    // InternalKim.g:2124:3: ( ( (lv_name_0_1= rulePathName | lv_name_0_2= ruleUrnId | lv_name_0_3= ruleLocalFilePath ) ) )
                    {
                    // InternalKim.g:2124:3: ( ( (lv_name_0_1= rulePathName | lv_name_0_2= ruleUrnId | lv_name_0_3= ruleLocalFilePath ) ) )
                    // InternalKim.g:2125:4: ( (lv_name_0_1= rulePathName | lv_name_0_2= ruleUrnId | lv_name_0_3= ruleLocalFilePath ) )
                    {
                    // InternalKim.g:2125:4: ( (lv_name_0_1= rulePathName | lv_name_0_2= ruleUrnId | lv_name_0_3= ruleLocalFilePath ) )
                    // InternalKim.g:2126:5: (lv_name_0_1= rulePathName | lv_name_0_2= ruleUrnId | lv_name_0_3= ruleLocalFilePath )
                    {
                    // InternalKim.g:2126:5: (lv_name_0_1= rulePathName | lv_name_0_2= ruleUrnId | lv_name_0_3= ruleLocalFilePath )
                    int alt50=3;
                    alt50 = dfa50.predict(input);
                    switch (alt50) {
                        case 1 :
                            // InternalKim.g:2127:6: lv_name_0_1= rulePathName
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getUrnAccess().getNamePathNameParserRuleCall_0_0_0());
                              					
                            }
                            pushFollow(FOLLOW_2);
                            lv_name_0_1=rulePathName();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getUrnRule());
                              						}
                              						set(
                              							current,
                              							"name",
                              							lv_name_0_1,
                              							"org.integratedmodelling.kim.Kim.PathName");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:2143:6: lv_name_0_2= ruleUrnId
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getUrnAccess().getNameUrnIdParserRuleCall_0_0_1());
                              					
                            }
                            pushFollow(FOLLOW_2);
                            lv_name_0_2=ruleUrnId();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getUrnRule());
                              						}
                              						set(
                              							current,
                              							"name",
                              							lv_name_0_2,
                              							"org.integratedmodelling.kim.Kim.UrnId");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }
                            break;
                        case 3 :
                            // InternalKim.g:2159:6: lv_name_0_3= ruleLocalFilePath
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getUrnAccess().getNameLocalFilePathParserRuleCall_0_0_2());
                              					
                            }
                            pushFollow(FOLLOW_2);
                            lv_name_0_3=ruleLocalFilePath();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getUrnRule());
                              						}
                              						set(
                              							current,
                              							"name",
                              							lv_name_0_3,
                              							"org.integratedmodelling.kim.Kim.LocalFilePath");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:2178:3: ( (lv_strings_1_0= RULE_STRING ) )+
                    {
                    // InternalKim.g:2178:3: ( (lv_strings_1_0= RULE_STRING ) )+
                    int cnt51=0;
                    loop51:
                    do {
                        int alt51=2;
                        int LA51_0 = input.LA(1);

                        if ( (LA51_0==RULE_STRING) ) {
                            alt51=1;
                        }


                        switch (alt51) {
                    	case 1 :
                    	    // InternalKim.g:2179:4: (lv_strings_1_0= RULE_STRING )
                    	    {
                    	    // InternalKim.g:2179:4: (lv_strings_1_0= RULE_STRING )
                    	    // InternalKim.g:2180:5: lv_strings_1_0= RULE_STRING
                    	    {
                    	    lv_strings_1_0=(Token)match(input,RULE_STRING,FOLLOW_41); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(lv_strings_1_0, grammarAccess.getUrnAccess().getStringsSTRINGTerminalRuleCall_1_0());
                    	      				
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      					if (current==null) {
                    	      						current = createModelElement(grammarAccess.getUrnRule());
                    	      					}
                    	      					addWithLastConsumed(
                    	      						current,
                    	      						"strings",
                    	      						lv_strings_1_0,
                    	      						"org.eclipse.xtext.common.Terminals.STRING");
                    	      				
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt51 >= 1 ) break loop51;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(51, input);
                                throw eee;
                        }
                        cnt51++;
                    } while (true);


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUrn"


    // $ANTLR start "entryRuleLookupTable"
    // InternalKim.g:2200:1: entryRuleLookupTable returns [EObject current=null] : iv_ruleLookupTable= ruleLookupTable EOF ;
    public final EObject entryRuleLookupTable() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLookupTable = null;


        try {
            // InternalKim.g:2200:52: (iv_ruleLookupTable= ruleLookupTable EOF )
            // InternalKim.g:2201:2: iv_ruleLookupTable= ruleLookupTable EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLookupTableRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLookupTable=ruleLookupTable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLookupTable; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLookupTable"


    // $ANTLR start "ruleLookupTable"
    // InternalKim.g:2207:1: ruleLookupTable returns [EObject current=null] : ( () otherlv_1= '{{' ( (lv_table_2_0= ruleTable ) )? otherlv_3= '}}' ) ;
    public final EObject ruleLookupTable() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_table_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:2213:2: ( ( () otherlv_1= '{{' ( (lv_table_2_0= ruleTable ) )? otherlv_3= '}}' ) )
            // InternalKim.g:2214:2: ( () otherlv_1= '{{' ( (lv_table_2_0= ruleTable ) )? otherlv_3= '}}' )
            {
            // InternalKim.g:2214:2: ( () otherlv_1= '{{' ( (lv_table_2_0= ruleTable ) )? otherlv_3= '}}' )
            // InternalKim.g:2215:3: () otherlv_1= '{{' ( (lv_table_2_0= ruleTable ) )? otherlv_3= '}}'
            {
            // InternalKim.g:2215:3: ()
            // InternalKim.g:2216:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getLookupTableAccess().getLookupTableAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,50,FOLLOW_42); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getLookupTableAccess().getLeftCurlyBracketLeftCurlyBracketKeyword_1());
              		
            }
            // InternalKim.g:2229:3: ( (lv_table_2_0= ruleTable ) )?
            int alt53=2;
            int LA53_0 = input.LA(1);

            if ( ((LA53_0>=RULE_LOWERCASE_ID && LA53_0<=RULE_STRING)||(LA53_0>=RULE_EXPR && LA53_0<=RULE_LOWERCASE_DASHID)||LA53_0==RULE_UPPERCASE_PATH||(LA53_0>=28 && LA53_0<=29)||LA53_0==38||LA53_0==40||(LA53_0>=48 && LA53_0<=49)||LA53_0==53||(LA53_0>=76 && LA53_0<=79)||LA53_0==82||LA53_0==85||(LA53_0>=132 && LA53_0<=133)||(LA53_0>=141 && LA53_0<=142)||(LA53_0>=144 && LA53_0<=149)||(LA53_0>=151 && LA53_0<=163)||(LA53_0>=251 && LA53_0<=252)) ) {
                alt53=1;
            }
            switch (alt53) {
                case 1 :
                    // InternalKim.g:2230:4: (lv_table_2_0= ruleTable )
                    {
                    // InternalKim.g:2230:4: (lv_table_2_0= ruleTable )
                    // InternalKim.g:2231:5: lv_table_2_0= ruleTable
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLookupTableAccess().getTableTableParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_43);
                    lv_table_2_0=ruleTable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLookupTableRule());
                      					}
                      					set(
                      						current,
                      						"table",
                      						lv_table_2_0,
                      						"org.integratedmodelling.kim.Kim.Table");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_3=(Token)match(input,51,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getLookupTableAccess().getRightCurlyBracketRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLookupTable"


    // $ANTLR start "entryRuleTable"
    // InternalKim.g:2256:1: entryRuleTable returns [EObject current=null] : iv_ruleTable= ruleTable EOF ;
    public final EObject entryRuleTable() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTable = null;


        try {
            // InternalKim.g:2256:46: (iv_ruleTable= ruleTable EOF )
            // InternalKim.g:2257:2: iv_ruleTable= ruleTable EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTableRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTable=ruleTable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTable; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTable"


    // $ANTLR start "ruleTable"
    // InternalKim.g:2263:1: ruleTable returns [EObject current=null] : ( ( ( (lv_headers_0_0= ruleHeaderRow ) ) this_SEPARATOR_1= RULE_SEPARATOR )? ( (lv_rows_2_0= ruleTableRow ) ) (otherlv_3= ',' ( (lv_rows_4_0= ruleTableRow ) ) )* ) ;
    public final EObject ruleTable() throws RecognitionException {
        EObject current = null;

        Token this_SEPARATOR_1=null;
        Token otherlv_3=null;
        EObject lv_headers_0_0 = null;

        EObject lv_rows_2_0 = null;

        EObject lv_rows_4_0 = null;



        	enterRule();

        try {
            // InternalKim.g:2269:2: ( ( ( ( (lv_headers_0_0= ruleHeaderRow ) ) this_SEPARATOR_1= RULE_SEPARATOR )? ( (lv_rows_2_0= ruleTableRow ) ) (otherlv_3= ',' ( (lv_rows_4_0= ruleTableRow ) ) )* ) )
            // InternalKim.g:2270:2: ( ( ( (lv_headers_0_0= ruleHeaderRow ) ) this_SEPARATOR_1= RULE_SEPARATOR )? ( (lv_rows_2_0= ruleTableRow ) ) (otherlv_3= ',' ( (lv_rows_4_0= ruleTableRow ) ) )* )
            {
            // InternalKim.g:2270:2: ( ( ( (lv_headers_0_0= ruleHeaderRow ) ) this_SEPARATOR_1= RULE_SEPARATOR )? ( (lv_rows_2_0= ruleTableRow ) ) (otherlv_3= ',' ( (lv_rows_4_0= ruleTableRow ) ) )* )
            // InternalKim.g:2271:3: ( ( (lv_headers_0_0= ruleHeaderRow ) ) this_SEPARATOR_1= RULE_SEPARATOR )? ( (lv_rows_2_0= ruleTableRow ) ) (otherlv_3= ',' ( (lv_rows_4_0= ruleTableRow ) ) )*
            {
            // InternalKim.g:2271:3: ( ( (lv_headers_0_0= ruleHeaderRow ) ) this_SEPARATOR_1= RULE_SEPARATOR )?
            int alt54=2;
            alt54 = dfa54.predict(input);
            switch (alt54) {
                case 1 :
                    // InternalKim.g:2272:4: ( (lv_headers_0_0= ruleHeaderRow ) ) this_SEPARATOR_1= RULE_SEPARATOR
                    {
                    // InternalKim.g:2272:4: ( (lv_headers_0_0= ruleHeaderRow ) )
                    // InternalKim.g:2273:5: (lv_headers_0_0= ruleHeaderRow )
                    {
                    // InternalKim.g:2273:5: (lv_headers_0_0= ruleHeaderRow )
                    // InternalKim.g:2274:6: lv_headers_0_0= ruleHeaderRow
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTableAccess().getHeadersHeaderRowParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_44);
                    lv_headers_0_0=ruleHeaderRow();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTableRule());
                      						}
                      						set(
                      							current,
                      							"headers",
                      							lv_headers_0_0,
                      							"org.integratedmodelling.kim.Kim.HeaderRow");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    this_SEPARATOR_1=(Token)match(input,RULE_SEPARATOR,FOLLOW_31); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_SEPARATOR_1, grammarAccess.getTableAccess().getSEPARATORTerminalRuleCall_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:2296:3: ( (lv_rows_2_0= ruleTableRow ) )
            // InternalKim.g:2297:4: (lv_rows_2_0= ruleTableRow )
            {
            // InternalKim.g:2297:4: (lv_rows_2_0= ruleTableRow )
            // InternalKim.g:2298:5: lv_rows_2_0= ruleTableRow
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTableAccess().getRowsTableRowParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_34);
            lv_rows_2_0=ruleTableRow();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTableRule());
              					}
              					add(
              						current,
              						"rows",
              						lv_rows_2_0,
              						"org.integratedmodelling.kim.Kim.TableRow");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:2315:3: (otherlv_3= ',' ( (lv_rows_4_0= ruleTableRow ) ) )*
            loop55:
            do {
                int alt55=2;
                int LA55_0 = input.LA(1);

                if ( (LA55_0==27) ) {
                    alt55=1;
                }


                switch (alt55) {
            	case 1 :
            	    // InternalKim.g:2316:4: otherlv_3= ',' ( (lv_rows_4_0= ruleTableRow ) )
            	    {
            	    otherlv_3=(Token)match(input,27,FOLLOW_31); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getTableAccess().getCommaKeyword_2_0());
            	      			
            	    }
            	    // InternalKim.g:2320:4: ( (lv_rows_4_0= ruleTableRow ) )
            	    // InternalKim.g:2321:5: (lv_rows_4_0= ruleTableRow )
            	    {
            	    // InternalKim.g:2321:5: (lv_rows_4_0= ruleTableRow )
            	    // InternalKim.g:2322:6: lv_rows_4_0= ruleTableRow
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getTableAccess().getRowsTableRowParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_34);
            	    lv_rows_4_0=ruleTableRow();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getTableRule());
            	      						}
            	      						add(
            	      							current,
            	      							"rows",
            	      							lv_rows_4_0,
            	      							"org.integratedmodelling.kim.Kim.TableRow");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop55;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTable"


    // $ANTLR start "entryRuleHeaderRow"
    // InternalKim.g:2344:1: entryRuleHeaderRow returns [EObject current=null] : iv_ruleHeaderRow= ruleHeaderRow EOF ;
    public final EObject entryRuleHeaderRow() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleHeaderRow = null;


        try {
            // InternalKim.g:2344:50: (iv_ruleHeaderRow= ruleHeaderRow EOF )
            // InternalKim.g:2345:2: iv_ruleHeaderRow= ruleHeaderRow EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getHeaderRowRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleHeaderRow=ruleHeaderRow();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleHeaderRow; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleHeaderRow"


    // $ANTLR start "ruleHeaderRow"
    // InternalKim.g:2351:1: ruleHeaderRow returns [EObject current=null] : ( ( ( (lv_elements_0_1= RULE_LOWERCASE_ID | lv_elements_0_2= RULE_STRING ) ) ) (otherlv_1= '|' ( ( (lv_elements_2_1= RULE_LOWERCASE_ID | lv_elements_2_2= RULE_STRING ) ) ) )* ) ;
    public final EObject ruleHeaderRow() throws RecognitionException {
        EObject current = null;

        Token lv_elements_0_1=null;
        Token lv_elements_0_2=null;
        Token otherlv_1=null;
        Token lv_elements_2_1=null;
        Token lv_elements_2_2=null;


        	enterRule();

        try {
            // InternalKim.g:2357:2: ( ( ( ( (lv_elements_0_1= RULE_LOWERCASE_ID | lv_elements_0_2= RULE_STRING ) ) ) (otherlv_1= '|' ( ( (lv_elements_2_1= RULE_LOWERCASE_ID | lv_elements_2_2= RULE_STRING ) ) ) )* ) )
            // InternalKim.g:2358:2: ( ( ( (lv_elements_0_1= RULE_LOWERCASE_ID | lv_elements_0_2= RULE_STRING ) ) ) (otherlv_1= '|' ( ( (lv_elements_2_1= RULE_LOWERCASE_ID | lv_elements_2_2= RULE_STRING ) ) ) )* )
            {
            // InternalKim.g:2358:2: ( ( ( (lv_elements_0_1= RULE_LOWERCASE_ID | lv_elements_0_2= RULE_STRING ) ) ) (otherlv_1= '|' ( ( (lv_elements_2_1= RULE_LOWERCASE_ID | lv_elements_2_2= RULE_STRING ) ) ) )* )
            // InternalKim.g:2359:3: ( ( (lv_elements_0_1= RULE_LOWERCASE_ID | lv_elements_0_2= RULE_STRING ) ) ) (otherlv_1= '|' ( ( (lv_elements_2_1= RULE_LOWERCASE_ID | lv_elements_2_2= RULE_STRING ) ) ) )*
            {
            // InternalKim.g:2359:3: ( ( (lv_elements_0_1= RULE_LOWERCASE_ID | lv_elements_0_2= RULE_STRING ) ) )
            // InternalKim.g:2360:4: ( (lv_elements_0_1= RULE_LOWERCASE_ID | lv_elements_0_2= RULE_STRING ) )
            {
            // InternalKim.g:2360:4: ( (lv_elements_0_1= RULE_LOWERCASE_ID | lv_elements_0_2= RULE_STRING ) )
            // InternalKim.g:2361:5: (lv_elements_0_1= RULE_LOWERCASE_ID | lv_elements_0_2= RULE_STRING )
            {
            // InternalKim.g:2361:5: (lv_elements_0_1= RULE_LOWERCASE_ID | lv_elements_0_2= RULE_STRING )
            int alt56=2;
            int LA56_0 = input.LA(1);

            if ( (LA56_0==RULE_LOWERCASE_ID) ) {
                alt56=1;
            }
            else if ( (LA56_0==RULE_STRING) ) {
                alt56=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 56, 0, input);

                throw nvae;
            }
            switch (alt56) {
                case 1 :
                    // InternalKim.g:2362:6: lv_elements_0_1= RULE_LOWERCASE_ID
                    {
                    lv_elements_0_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_45); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_elements_0_1, grammarAccess.getHeaderRowAccess().getElementsLOWERCASE_IDTerminalRuleCall_0_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getHeaderRowRule());
                      						}
                      						addWithLastConsumed(
                      							current,
                      							"elements",
                      							lv_elements_0_1,
                      							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                      					
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:2377:6: lv_elements_0_2= RULE_STRING
                    {
                    lv_elements_0_2=(Token)match(input,RULE_STRING,FOLLOW_45); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_elements_0_2, grammarAccess.getHeaderRowAccess().getElementsSTRINGTerminalRuleCall_0_0_1());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getHeaderRowRule());
                      						}
                      						addWithLastConsumed(
                      							current,
                      							"elements",
                      							lv_elements_0_2,
                      							"org.eclipse.xtext.common.Terminals.STRING");
                      					
                    }

                    }
                    break;

            }


            }


            }

            // InternalKim.g:2394:3: (otherlv_1= '|' ( ( (lv_elements_2_1= RULE_LOWERCASE_ID | lv_elements_2_2= RULE_STRING ) ) ) )*
            loop58:
            do {
                int alt58=2;
                int LA58_0 = input.LA(1);

                if ( (LA58_0==52) ) {
                    alt58=1;
                }


                switch (alt58) {
            	case 1 :
            	    // InternalKim.g:2395:4: otherlv_1= '|' ( ( (lv_elements_2_1= RULE_LOWERCASE_ID | lv_elements_2_2= RULE_STRING ) ) )
            	    {
            	    otherlv_1=(Token)match(input,52,FOLLOW_46); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getHeaderRowAccess().getVerticalLineKeyword_1_0());
            	      			
            	    }
            	    // InternalKim.g:2399:4: ( ( (lv_elements_2_1= RULE_LOWERCASE_ID | lv_elements_2_2= RULE_STRING ) ) )
            	    // InternalKim.g:2400:5: ( (lv_elements_2_1= RULE_LOWERCASE_ID | lv_elements_2_2= RULE_STRING ) )
            	    {
            	    // InternalKim.g:2400:5: ( (lv_elements_2_1= RULE_LOWERCASE_ID | lv_elements_2_2= RULE_STRING ) )
            	    // InternalKim.g:2401:6: (lv_elements_2_1= RULE_LOWERCASE_ID | lv_elements_2_2= RULE_STRING )
            	    {
            	    // InternalKim.g:2401:6: (lv_elements_2_1= RULE_LOWERCASE_ID | lv_elements_2_2= RULE_STRING )
            	    int alt57=2;
            	    int LA57_0 = input.LA(1);

            	    if ( (LA57_0==RULE_LOWERCASE_ID) ) {
            	        alt57=1;
            	    }
            	    else if ( (LA57_0==RULE_STRING) ) {
            	        alt57=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 57, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt57) {
            	        case 1 :
            	            // InternalKim.g:2402:7: lv_elements_2_1= RULE_LOWERCASE_ID
            	            {
            	            lv_elements_2_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_45); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							newLeafNode(lv_elements_2_1, grammarAccess.getHeaderRowAccess().getElementsLOWERCASE_IDTerminalRuleCall_1_1_0_0());
            	              						
            	            }
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElement(grammarAccess.getHeaderRowRule());
            	              							}
            	              							addWithLastConsumed(
            	              								current,
            	              								"elements",
            	              								lv_elements_2_1,
            	              								"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
            	              						
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:2417:7: lv_elements_2_2= RULE_STRING
            	            {
            	            lv_elements_2_2=(Token)match(input,RULE_STRING,FOLLOW_45); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							newLeafNode(lv_elements_2_2, grammarAccess.getHeaderRowAccess().getElementsSTRINGTerminalRuleCall_1_1_0_1());
            	              						
            	            }
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElement(grammarAccess.getHeaderRowRule());
            	              							}
            	              							addWithLastConsumed(
            	              								current,
            	              								"elements",
            	              								lv_elements_2_2,
            	              								"org.eclipse.xtext.common.Terminals.STRING");
            	              						
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop58;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleHeaderRow"


    // $ANTLR start "entryRuleTableRow"
    // InternalKim.g:2439:1: entryRuleTableRow returns [EObject current=null] : iv_ruleTableRow= ruleTableRow EOF ;
    public final EObject entryRuleTableRow() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTableRow = null;


        try {
            // InternalKim.g:2439:49: (iv_ruleTableRow= ruleTableRow EOF )
            // InternalKim.g:2440:2: iv_ruleTableRow= ruleTableRow EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTableRowRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTableRow=ruleTableRow();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTableRow; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTableRow"


    // $ANTLR start "ruleTableRow"
    // InternalKim.g:2446:1: ruleTableRow returns [EObject current=null] : ( ( (lv_elements_0_0= ruleTableClassifier ) ) (otherlv_1= '|' ( (lv_elements_2_0= ruleTableClassifier ) ) )* ) ;
    public final EObject ruleTableRow() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_elements_0_0 = null;

        EObject lv_elements_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:2452:2: ( ( ( (lv_elements_0_0= ruleTableClassifier ) ) (otherlv_1= '|' ( (lv_elements_2_0= ruleTableClassifier ) ) )* ) )
            // InternalKim.g:2453:2: ( ( (lv_elements_0_0= ruleTableClassifier ) ) (otherlv_1= '|' ( (lv_elements_2_0= ruleTableClassifier ) ) )* )
            {
            // InternalKim.g:2453:2: ( ( (lv_elements_0_0= ruleTableClassifier ) ) (otherlv_1= '|' ( (lv_elements_2_0= ruleTableClassifier ) ) )* )
            // InternalKim.g:2454:3: ( (lv_elements_0_0= ruleTableClassifier ) ) (otherlv_1= '|' ( (lv_elements_2_0= ruleTableClassifier ) ) )*
            {
            // InternalKim.g:2454:3: ( (lv_elements_0_0= ruleTableClassifier ) )
            // InternalKim.g:2455:4: (lv_elements_0_0= ruleTableClassifier )
            {
            // InternalKim.g:2455:4: (lv_elements_0_0= ruleTableClassifier )
            // InternalKim.g:2456:5: lv_elements_0_0= ruleTableClassifier
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTableRowAccess().getElementsTableClassifierParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_45);
            lv_elements_0_0=ruleTableClassifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTableRowRule());
              					}
              					add(
              						current,
              						"elements",
              						lv_elements_0_0,
              						"org.integratedmodelling.kim.Kim.TableClassifier");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:2473:3: (otherlv_1= '|' ( (lv_elements_2_0= ruleTableClassifier ) ) )*
            loop59:
            do {
                int alt59=2;
                int LA59_0 = input.LA(1);

                if ( (LA59_0==52) ) {
                    alt59=1;
                }


                switch (alt59) {
            	case 1 :
            	    // InternalKim.g:2474:4: otherlv_1= '|' ( (lv_elements_2_0= ruleTableClassifier ) )
            	    {
            	    otherlv_1=(Token)match(input,52,FOLLOW_31); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getTableRowAccess().getVerticalLineKeyword_1_0());
            	      			
            	    }
            	    // InternalKim.g:2478:4: ( (lv_elements_2_0= ruleTableClassifier ) )
            	    // InternalKim.g:2479:5: (lv_elements_2_0= ruleTableClassifier )
            	    {
            	    // InternalKim.g:2479:5: (lv_elements_2_0= ruleTableClassifier )
            	    // InternalKim.g:2480:6: lv_elements_2_0= ruleTableClassifier
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getTableRowAccess().getElementsTableClassifierParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_45);
            	    lv_elements_2_0=ruleTableClassifier();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getTableRowRule());
            	      						}
            	      						add(
            	      							current,
            	      							"elements",
            	      							lv_elements_2_0,
            	      							"org.integratedmodelling.kim.Kim.TableClassifier");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop59;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTableRow"


    // $ANTLR start "entryRuleTableClassifier"
    // InternalKim.g:2502:1: entryRuleTableClassifier returns [EObject current=null] : iv_ruleTableClassifier= ruleTableClassifier EOF ;
    public final EObject entryRuleTableClassifier() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTableClassifier = null;


        try {
            // InternalKim.g:2502:56: (iv_ruleTableClassifier= ruleTableClassifier EOF )
            // InternalKim.g:2503:2: iv_ruleTableClassifier= ruleTableClassifier EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTableClassifierRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTableClassifier=ruleTableClassifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTableClassifier; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTableClassifier"


    // $ANTLR start "ruleTableClassifier"
    // InternalKim.g:2509:1: ruleTableClassifier returns [EObject current=null] : ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | ( (lv_quantity_10_0= ruleQuantity ) ) | ( (lv_date_11_0= ruleDate ) ) | (otherlv_12= 'in' ( (lv_set_13_0= ruleList ) ) ) | ( (lv_string_14_0= RULE_STRING ) ) | ( (lv_concept_15_0= ruleConceptDeclaration ) ) | ( ( (lv_op_16_0= ruleREL_OPERATOR ) ) ( (lv_expression_17_0= ruleNumber ) ) ) | ( (lv_expr_18_0= RULE_EXPR ) ) | ( (lv_nodata_19_0= 'unknown' ) ) | ( (lv_star_20_0= '*' ) ) | ( (lv_anything_21_0= '#' ) ) ) ;
    public final EObject ruleTableClassifier() throws RecognitionException {
        EObject current = null;

        Token lv_boolean_0_0=null;
        Token lv_boolean_1_0=null;
        Token lv_leftLimit_3_0=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token lv_rightLimit_7_0=null;
        Token otherlv_8=null;
        Token otherlv_12=null;
        Token lv_string_14_0=null;
        Token lv_expr_18_0=null;
        Token lv_nodata_19_0=null;
        Token lv_star_20_0=null;
        Token lv_anything_21_0=null;
        EObject lv_int0_2_0 = null;

        EObject lv_int1_6_0 = null;

        EObject lv_num_9_0 = null;

        EObject lv_quantity_10_0 = null;

        EObject lv_date_11_0 = null;

        EObject lv_set_13_0 = null;

        EObject lv_concept_15_0 = null;

        EObject lv_op_16_0 = null;

        EObject lv_expression_17_0 = null;



        	enterRule();

        try {
            // InternalKim.g:2515:2: ( ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | ( (lv_quantity_10_0= ruleQuantity ) ) | ( (lv_date_11_0= ruleDate ) ) | (otherlv_12= 'in' ( (lv_set_13_0= ruleList ) ) ) | ( (lv_string_14_0= RULE_STRING ) ) | ( (lv_concept_15_0= ruleConceptDeclaration ) ) | ( ( (lv_op_16_0= ruleREL_OPERATOR ) ) ( (lv_expression_17_0= ruleNumber ) ) ) | ( (lv_expr_18_0= RULE_EXPR ) ) | ( (lv_nodata_19_0= 'unknown' ) ) | ( (lv_star_20_0= '*' ) ) | ( (lv_anything_21_0= '#' ) ) ) )
            // InternalKim.g:2516:2: ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | ( (lv_quantity_10_0= ruleQuantity ) ) | ( (lv_date_11_0= ruleDate ) ) | (otherlv_12= 'in' ( (lv_set_13_0= ruleList ) ) ) | ( (lv_string_14_0= RULE_STRING ) ) | ( (lv_concept_15_0= ruleConceptDeclaration ) ) | ( ( (lv_op_16_0= ruleREL_OPERATOR ) ) ( (lv_expression_17_0= ruleNumber ) ) ) | ( (lv_expr_18_0= RULE_EXPR ) ) | ( (lv_nodata_19_0= 'unknown' ) ) | ( (lv_star_20_0= '*' ) ) | ( (lv_anything_21_0= '#' ) ) )
            {
            // InternalKim.g:2516:2: ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | ( (lv_quantity_10_0= ruleQuantity ) ) | ( (lv_date_11_0= ruleDate ) ) | (otherlv_12= 'in' ( (lv_set_13_0= ruleList ) ) ) | ( (lv_string_14_0= RULE_STRING ) ) | ( (lv_concept_15_0= ruleConceptDeclaration ) ) | ( ( (lv_op_16_0= ruleREL_OPERATOR ) ) ( (lv_expression_17_0= ruleNumber ) ) ) | ( (lv_expr_18_0= RULE_EXPR ) ) | ( (lv_nodata_19_0= 'unknown' ) ) | ( (lv_star_20_0= '*' ) ) | ( (lv_anything_21_0= '#' ) ) )
            int alt63=13;
            alt63 = dfa63.predict(input);
            switch (alt63) {
                case 1 :
                    // InternalKim.g:2517:3: ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) )
                    {
                    // InternalKim.g:2517:3: ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) )
                    int alt60=2;
                    int LA60_0 = input.LA(1);

                    if ( (LA60_0==28) ) {
                        alt60=1;
                    }
                    else if ( (LA60_0==29) ) {
                        alt60=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 60, 0, input);

                        throw nvae;
                    }
                    switch (alt60) {
                        case 1 :
                            // InternalKim.g:2518:4: ( (lv_boolean_0_0= 'true' ) )
                            {
                            // InternalKim.g:2518:4: ( (lv_boolean_0_0= 'true' ) )
                            // InternalKim.g:2519:5: (lv_boolean_0_0= 'true' )
                            {
                            // InternalKim.g:2519:5: (lv_boolean_0_0= 'true' )
                            // InternalKim.g:2520:6: lv_boolean_0_0= 'true'
                            {
                            lv_boolean_0_0=(Token)match(input,28,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_0_0, grammarAccess.getTableClassifierAccess().getBooleanTrueKeyword_0_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getTableClassifierRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_0_0, "true");
                              					
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:2533:4: ( (lv_boolean_1_0= 'false' ) )
                            {
                            // InternalKim.g:2533:4: ( (lv_boolean_1_0= 'false' ) )
                            // InternalKim.g:2534:5: (lv_boolean_1_0= 'false' )
                            {
                            // InternalKim.g:2534:5: (lv_boolean_1_0= 'false' )
                            // InternalKim.g:2535:6: lv_boolean_1_0= 'false'
                            {
                            lv_boolean_1_0=(Token)match(input,29,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_1_0, grammarAccess.getTableClassifierAccess().getBooleanFalseKeyword_0_1_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getTableClassifierRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_1_0, "false");
                              					
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:2549:3: ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? )
                    {
                    // InternalKim.g:2549:3: ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? )
                    // InternalKim.g:2550:4: ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )?
                    {
                    // InternalKim.g:2550:4: ( (lv_int0_2_0= ruleNumber ) )
                    // InternalKim.g:2551:5: (lv_int0_2_0= ruleNumber )
                    {
                    // InternalKim.g:2551:5: (lv_int0_2_0= ruleNumber )
                    // InternalKim.g:2552:6: lv_int0_2_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTableClassifierAccess().getInt0NumberParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_37);
                    lv_int0_2_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTableClassifierRule());
                      						}
                      						set(
                      							current,
                      							"int0",
                      							lv_int0_2_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:2569:4: ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )?
                    int alt61=3;
                    int LA61_0 = input.LA(1);

                    if ( (LA61_0==46) ) {
                        alt61=1;
                    }
                    else if ( (LA61_0==47) ) {
                        alt61=2;
                    }
                    switch (alt61) {
                        case 1 :
                            // InternalKim.g:2570:5: ( (lv_leftLimit_3_0= 'inclusive' ) )
                            {
                            // InternalKim.g:2570:5: ( (lv_leftLimit_3_0= 'inclusive' ) )
                            // InternalKim.g:2571:6: (lv_leftLimit_3_0= 'inclusive' )
                            {
                            // InternalKim.g:2571:6: (lv_leftLimit_3_0= 'inclusive' )
                            // InternalKim.g:2572:7: lv_leftLimit_3_0= 'inclusive'
                            {
                            lv_leftLimit_3_0=(Token)match(input,46,FOLLOW_25); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_leftLimit_3_0, grammarAccess.getTableClassifierAccess().getLeftLimitInclusiveKeyword_1_1_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getTableClassifierRule());
                              							}
                              							setWithLastConsumed(current, "leftLimit", lv_leftLimit_3_0, "inclusive");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:2585:5: otherlv_4= 'exclusive'
                            {
                            otherlv_4=(Token)match(input,47,FOLLOW_25); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_4, grammarAccess.getTableClassifierAccess().getExclusiveKeyword_1_1_1());
                              				
                            }

                            }
                            break;

                    }

                    // InternalKim.g:2590:4: ( ( 'to' )=>otherlv_5= 'to' )
                    // InternalKim.g:2591:5: ( 'to' )=>otherlv_5= 'to'
                    {
                    otherlv_5=(Token)match(input,36,FOLLOW_38); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getTableClassifierAccess().getToKeyword_1_2());
                      				
                    }

                    }

                    // InternalKim.g:2597:4: ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) )
                    // InternalKim.g:2598:5: ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber )
                    {
                    // InternalKim.g:2602:5: (lv_int1_6_0= ruleNumber )
                    // InternalKim.g:2603:6: lv_int1_6_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTableClassifierAccess().getInt1NumberParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FOLLOW_39);
                    lv_int1_6_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTableClassifierRule());
                      						}
                      						set(
                      							current,
                      							"int1",
                      							lv_int1_6_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:2620:4: ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )?
                    int alt62=3;
                    int LA62_0 = input.LA(1);

                    if ( (LA62_0==46) ) {
                        alt62=1;
                    }
                    else if ( (LA62_0==47) ) {
                        alt62=2;
                    }
                    switch (alt62) {
                        case 1 :
                            // InternalKim.g:2621:5: ( (lv_rightLimit_7_0= 'inclusive' ) )
                            {
                            // InternalKim.g:2621:5: ( (lv_rightLimit_7_0= 'inclusive' ) )
                            // InternalKim.g:2622:6: (lv_rightLimit_7_0= 'inclusive' )
                            {
                            // InternalKim.g:2622:6: (lv_rightLimit_7_0= 'inclusive' )
                            // InternalKim.g:2623:7: lv_rightLimit_7_0= 'inclusive'
                            {
                            lv_rightLimit_7_0=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_rightLimit_7_0, grammarAccess.getTableClassifierAccess().getRightLimitInclusiveKeyword_1_4_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getTableClassifierRule());
                              							}
                              							setWithLastConsumed(current, "rightLimit", lv_rightLimit_7_0, "inclusive");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:2636:5: otherlv_8= 'exclusive'
                            {
                            otherlv_8=(Token)match(input,47,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_8, grammarAccess.getTableClassifierAccess().getExclusiveKeyword_1_4_1());
                              				
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:2643:3: ( (lv_num_9_0= ruleNumber ) )
                    {
                    // InternalKim.g:2643:3: ( (lv_num_9_0= ruleNumber ) )
                    // InternalKim.g:2644:4: (lv_num_9_0= ruleNumber )
                    {
                    // InternalKim.g:2644:4: (lv_num_9_0= ruleNumber )
                    // InternalKim.g:2645:5: lv_num_9_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTableClassifierAccess().getNumNumberParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_num_9_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTableClassifierRule());
                      					}
                      					set(
                      						current,
                      						"num",
                      						lv_num_9_0,
                      						"org.integratedmodelling.kim.Kim.Number");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:2663:3: ( (lv_quantity_10_0= ruleQuantity ) )
                    {
                    // InternalKim.g:2663:3: ( (lv_quantity_10_0= ruleQuantity ) )
                    // InternalKim.g:2664:4: (lv_quantity_10_0= ruleQuantity )
                    {
                    // InternalKim.g:2664:4: (lv_quantity_10_0= ruleQuantity )
                    // InternalKim.g:2665:5: lv_quantity_10_0= ruleQuantity
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTableClassifierAccess().getQuantityQuantityParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_quantity_10_0=ruleQuantity();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTableClassifierRule());
                      					}
                      					set(
                      						current,
                      						"quantity",
                      						lv_quantity_10_0,
                      						"org.integratedmodelling.kim.Kim.Quantity");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:2683:3: ( (lv_date_11_0= ruleDate ) )
                    {
                    // InternalKim.g:2683:3: ( (lv_date_11_0= ruleDate ) )
                    // InternalKim.g:2684:4: (lv_date_11_0= ruleDate )
                    {
                    // InternalKim.g:2684:4: (lv_date_11_0= ruleDate )
                    // InternalKim.g:2685:5: lv_date_11_0= ruleDate
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTableClassifierAccess().getDateDateParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_date_11_0=ruleDate();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTableClassifierRule());
                      					}
                      					set(
                      						current,
                      						"date",
                      						lv_date_11_0,
                      						"org.integratedmodelling.kim.Kim.Date");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:2703:3: (otherlv_12= 'in' ( (lv_set_13_0= ruleList ) ) )
                    {
                    // InternalKim.g:2703:3: (otherlv_12= 'in' ( (lv_set_13_0= ruleList ) ) )
                    // InternalKim.g:2704:4: otherlv_12= 'in' ( (lv_set_13_0= ruleList ) )
                    {
                    otherlv_12=(Token)match(input,48,FOLLOW_40); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getTableClassifierAccess().getInKeyword_5_0());
                      			
                    }
                    // InternalKim.g:2708:4: ( (lv_set_13_0= ruleList ) )
                    // InternalKim.g:2709:5: (lv_set_13_0= ruleList )
                    {
                    // InternalKim.g:2709:5: (lv_set_13_0= ruleList )
                    // InternalKim.g:2710:6: lv_set_13_0= ruleList
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTableClassifierAccess().getSetListParserRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_set_13_0=ruleList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTableClassifierRule());
                      						}
                      						set(
                      							current,
                      							"set",
                      							lv_set_13_0,
                      							"org.integratedmodelling.kim.Kim.List");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalKim.g:2729:3: ( (lv_string_14_0= RULE_STRING ) )
                    {
                    // InternalKim.g:2729:3: ( (lv_string_14_0= RULE_STRING ) )
                    // InternalKim.g:2730:4: (lv_string_14_0= RULE_STRING )
                    {
                    // InternalKim.g:2730:4: (lv_string_14_0= RULE_STRING )
                    // InternalKim.g:2731:5: lv_string_14_0= RULE_STRING
                    {
                    lv_string_14_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_string_14_0, grammarAccess.getTableClassifierAccess().getStringSTRINGTerminalRuleCall_6_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getTableClassifierRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"string",
                      						lv_string_14_0,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalKim.g:2748:3: ( (lv_concept_15_0= ruleConceptDeclaration ) )
                    {
                    // InternalKim.g:2748:3: ( (lv_concept_15_0= ruleConceptDeclaration ) )
                    // InternalKim.g:2749:4: (lv_concept_15_0= ruleConceptDeclaration )
                    {
                    // InternalKim.g:2749:4: (lv_concept_15_0= ruleConceptDeclaration )
                    // InternalKim.g:2750:5: lv_concept_15_0= ruleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTableClassifierAccess().getConceptConceptDeclarationParserRuleCall_7_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_15_0=ruleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTableClassifierRule());
                      					}
                      					set(
                      						current,
                      						"concept",
                      						lv_concept_15_0,
                      						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 9 :
                    // InternalKim.g:2768:3: ( ( (lv_op_16_0= ruleREL_OPERATOR ) ) ( (lv_expression_17_0= ruleNumber ) ) )
                    {
                    // InternalKim.g:2768:3: ( ( (lv_op_16_0= ruleREL_OPERATOR ) ) ( (lv_expression_17_0= ruleNumber ) ) )
                    // InternalKim.g:2769:4: ( (lv_op_16_0= ruleREL_OPERATOR ) ) ( (lv_expression_17_0= ruleNumber ) )
                    {
                    // InternalKim.g:2769:4: ( (lv_op_16_0= ruleREL_OPERATOR ) )
                    // InternalKim.g:2770:5: (lv_op_16_0= ruleREL_OPERATOR )
                    {
                    // InternalKim.g:2770:5: (lv_op_16_0= ruleREL_OPERATOR )
                    // InternalKim.g:2771:6: lv_op_16_0= ruleREL_OPERATOR
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTableClassifierAccess().getOpREL_OPERATORParserRuleCall_8_0_0());
                      					
                    }
                    pushFollow(FOLLOW_38);
                    lv_op_16_0=ruleREL_OPERATOR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTableClassifierRule());
                      						}
                      						set(
                      							current,
                      							"op",
                      							lv_op_16_0,
                      							"org.integratedmodelling.kim.Kim.REL_OPERATOR");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:2788:4: ( (lv_expression_17_0= ruleNumber ) )
                    // InternalKim.g:2789:5: (lv_expression_17_0= ruleNumber )
                    {
                    // InternalKim.g:2789:5: (lv_expression_17_0= ruleNumber )
                    // InternalKim.g:2790:6: lv_expression_17_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTableClassifierAccess().getExpressionNumberParserRuleCall_8_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_17_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTableClassifierRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_17_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 10 :
                    // InternalKim.g:2809:3: ( (lv_expr_18_0= RULE_EXPR ) )
                    {
                    // InternalKim.g:2809:3: ( (lv_expr_18_0= RULE_EXPR ) )
                    // InternalKim.g:2810:4: (lv_expr_18_0= RULE_EXPR )
                    {
                    // InternalKim.g:2810:4: (lv_expr_18_0= RULE_EXPR )
                    // InternalKim.g:2811:5: lv_expr_18_0= RULE_EXPR
                    {
                    lv_expr_18_0=(Token)match(input,RULE_EXPR,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_expr_18_0, grammarAccess.getTableClassifierAccess().getExprEXPRTerminalRuleCall_9_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getTableClassifierRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"expr",
                      						lv_expr_18_0,
                      						"org.integratedmodelling.kim.Kim.EXPR");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 11 :
                    // InternalKim.g:2828:3: ( (lv_nodata_19_0= 'unknown' ) )
                    {
                    // InternalKim.g:2828:3: ( (lv_nodata_19_0= 'unknown' ) )
                    // InternalKim.g:2829:4: (lv_nodata_19_0= 'unknown' )
                    {
                    // InternalKim.g:2829:4: (lv_nodata_19_0= 'unknown' )
                    // InternalKim.g:2830:5: lv_nodata_19_0= 'unknown'
                    {
                    lv_nodata_19_0=(Token)match(input,49,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_nodata_19_0, grammarAccess.getTableClassifierAccess().getNodataUnknownKeyword_10_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getTableClassifierRule());
                      					}
                      					setWithLastConsumed(current, "nodata", lv_nodata_19_0, "unknown");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 12 :
                    // InternalKim.g:2843:3: ( (lv_star_20_0= '*' ) )
                    {
                    // InternalKim.g:2843:3: ( (lv_star_20_0= '*' ) )
                    // InternalKim.g:2844:4: (lv_star_20_0= '*' )
                    {
                    // InternalKim.g:2844:4: (lv_star_20_0= '*' )
                    // InternalKim.g:2845:5: lv_star_20_0= '*'
                    {
                    lv_star_20_0=(Token)match(input,40,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_star_20_0, grammarAccess.getTableClassifierAccess().getStarAsteriskKeyword_11_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getTableClassifierRule());
                      					}
                      					setWithLastConsumed(current, "star", true, "*");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 13 :
                    // InternalKim.g:2858:3: ( (lv_anything_21_0= '#' ) )
                    {
                    // InternalKim.g:2858:3: ( (lv_anything_21_0= '#' ) )
                    // InternalKim.g:2859:4: (lv_anything_21_0= '#' )
                    {
                    // InternalKim.g:2859:4: (lv_anything_21_0= '#' )
                    // InternalKim.g:2860:5: lv_anything_21_0= '#'
                    {
                    lv_anything_21_0=(Token)match(input,53,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_anything_21_0, grammarAccess.getTableClassifierAccess().getAnythingNumberSignKeyword_12_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getTableClassifierRule());
                      					}
                      					setWithLastConsumed(current, "anything", true, "#");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTableClassifier"


    // $ANTLR start "entryRuleActionSpecification"
    // InternalKim.g:2876:1: entryRuleActionSpecification returns [EObject current=null] : iv_ruleActionSpecification= ruleActionSpecification EOF ;
    public final EObject entryRuleActionSpecification() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleActionSpecification = null;


        try {
            // InternalKim.g:2876:60: (iv_ruleActionSpecification= ruleActionSpecification EOF )
            // InternalKim.g:2877:2: iv_ruleActionSpecification= ruleActionSpecification EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getActionSpecificationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleActionSpecification=ruleActionSpecification();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleActionSpecification; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleActionSpecification"


    // $ANTLR start "ruleActionSpecification"
    // InternalKim.g:2883:1: ruleActionSpecification returns [EObject current=null] : ( ( ( (lv_integrated_0_0= 'aggregated' ) )? ( (lv_over_1_0= 'over' ) ) ( (lv_domain_2_0= ruleFunctionOrID ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_domain_4_0= ruleFunctionOrID ) ) )* ( ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )* )? ) | ( ( ( (lv_trigger_8_0= 'on' ) ) ( ( (lv_initialization_9_0= 'definition' ) ) | ( (lv_instantiation_10_0= 'instantiation' ) ) | ( (lv_termination_11_0= 'termination' ) ) | ( ( (lv_event_12_0= ruleConceptDeclaration ) ) (otherlv_13= 'in' ( ( (lv_anyContextEvent_14_0= 'context' ) ) | ( (lv_relatedEventContext_15_0= 'related' ) ) ) ( (lv_eventContext_16_0= ruleConceptDeclaration ) ) )? ) ) ( (lv_parameters_17_0= ruleList ) )? )? ( (lv_actions_18_0= ruleAction ) ) ( ( ( ',' )=>otherlv_19= ',' ) ( (lv_actions_20_0= ruleAction ) ) )* ) ) ;
    public final EObject ruleActionSpecification() throws RecognitionException {
        EObject current = null;

        Token lv_integrated_0_0=null;
        Token lv_over_1_0=null;
        Token otherlv_3=null;
        Token otherlv_6=null;
        Token lv_trigger_8_0=null;
        Token lv_initialization_9_0=null;
        Token lv_instantiation_10_0=null;
        Token lv_termination_11_0=null;
        Token otherlv_13=null;
        Token lv_anyContextEvent_14_0=null;
        Token lv_relatedEventContext_15_0=null;
        Token otherlv_19=null;
        EObject lv_domain_2_0 = null;

        EObject lv_domain_4_0 = null;

        EObject lv_actions_5_0 = null;

        EObject lv_actions_7_0 = null;

        EObject lv_event_12_0 = null;

        EObject lv_eventContext_16_0 = null;

        EObject lv_parameters_17_0 = null;

        EObject lv_actions_18_0 = null;

        EObject lv_actions_20_0 = null;



        	enterRule();

        try {
            // InternalKim.g:2889:2: ( ( ( ( (lv_integrated_0_0= 'aggregated' ) )? ( (lv_over_1_0= 'over' ) ) ( (lv_domain_2_0= ruleFunctionOrID ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_domain_4_0= ruleFunctionOrID ) ) )* ( ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )* )? ) | ( ( ( (lv_trigger_8_0= 'on' ) ) ( ( (lv_initialization_9_0= 'definition' ) ) | ( (lv_instantiation_10_0= 'instantiation' ) ) | ( (lv_termination_11_0= 'termination' ) ) | ( ( (lv_event_12_0= ruleConceptDeclaration ) ) (otherlv_13= 'in' ( ( (lv_anyContextEvent_14_0= 'context' ) ) | ( (lv_relatedEventContext_15_0= 'related' ) ) ) ( (lv_eventContext_16_0= ruleConceptDeclaration ) ) )? ) ) ( (lv_parameters_17_0= ruleList ) )? )? ( (lv_actions_18_0= ruleAction ) ) ( ( ( ',' )=>otherlv_19= ',' ) ( (lv_actions_20_0= ruleAction ) ) )* ) ) )
            // InternalKim.g:2890:2: ( ( ( (lv_integrated_0_0= 'aggregated' ) )? ( (lv_over_1_0= 'over' ) ) ( (lv_domain_2_0= ruleFunctionOrID ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_domain_4_0= ruleFunctionOrID ) ) )* ( ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )* )? ) | ( ( ( (lv_trigger_8_0= 'on' ) ) ( ( (lv_initialization_9_0= 'definition' ) ) | ( (lv_instantiation_10_0= 'instantiation' ) ) | ( (lv_termination_11_0= 'termination' ) ) | ( ( (lv_event_12_0= ruleConceptDeclaration ) ) (otherlv_13= 'in' ( ( (lv_anyContextEvent_14_0= 'context' ) ) | ( (lv_relatedEventContext_15_0= 'related' ) ) ) ( (lv_eventContext_16_0= ruleConceptDeclaration ) ) )? ) ) ( (lv_parameters_17_0= ruleList ) )? )? ( (lv_actions_18_0= ruleAction ) ) ( ( ( ',' )=>otherlv_19= ',' ) ( (lv_actions_20_0= ruleAction ) ) )* ) )
            {
            // InternalKim.g:2890:2: ( ( ( (lv_integrated_0_0= 'aggregated' ) )? ( (lv_over_1_0= 'over' ) ) ( (lv_domain_2_0= ruleFunctionOrID ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_domain_4_0= ruleFunctionOrID ) ) )* ( ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )* )? ) | ( ( ( (lv_trigger_8_0= 'on' ) ) ( ( (lv_initialization_9_0= 'definition' ) ) | ( (lv_instantiation_10_0= 'instantiation' ) ) | ( (lv_termination_11_0= 'termination' ) ) | ( ( (lv_event_12_0= ruleConceptDeclaration ) ) (otherlv_13= 'in' ( ( (lv_anyContextEvent_14_0= 'context' ) ) | ( (lv_relatedEventContext_15_0= 'related' ) ) ) ( (lv_eventContext_16_0= ruleConceptDeclaration ) ) )? ) ) ( (lv_parameters_17_0= ruleList ) )? )? ( (lv_actions_18_0= ruleAction ) ) ( ( ( ',' )=>otherlv_19= ',' ) ( (lv_actions_20_0= ruleAction ) ) )* ) )
            int alt74=2;
            int LA74_0 = input.LA(1);

            if ( ((LA74_0>=54 && LA74_0<=55)) ) {
                alt74=1;
            }
            else if ( (LA74_0==56||(LA74_0>=62 && LA74_0<=67)) ) {
                alt74=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 74, 0, input);

                throw nvae;
            }
            switch (alt74) {
                case 1 :
                    // InternalKim.g:2891:3: ( ( (lv_integrated_0_0= 'aggregated' ) )? ( (lv_over_1_0= 'over' ) ) ( (lv_domain_2_0= ruleFunctionOrID ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_domain_4_0= ruleFunctionOrID ) ) )* ( ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )* )? )
                    {
                    // InternalKim.g:2891:3: ( ( (lv_integrated_0_0= 'aggregated' ) )? ( (lv_over_1_0= 'over' ) ) ( (lv_domain_2_0= ruleFunctionOrID ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_domain_4_0= ruleFunctionOrID ) ) )* ( ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )* )? )
                    // InternalKim.g:2892:4: ( (lv_integrated_0_0= 'aggregated' ) )? ( (lv_over_1_0= 'over' ) ) ( (lv_domain_2_0= ruleFunctionOrID ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_domain_4_0= ruleFunctionOrID ) ) )* ( ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )* )?
                    {
                    // InternalKim.g:2892:4: ( (lv_integrated_0_0= 'aggregated' ) )?
                    int alt64=2;
                    int LA64_0 = input.LA(1);

                    if ( (LA64_0==54) ) {
                        alt64=1;
                    }
                    switch (alt64) {
                        case 1 :
                            // InternalKim.g:2893:5: (lv_integrated_0_0= 'aggregated' )
                            {
                            // InternalKim.g:2893:5: (lv_integrated_0_0= 'aggregated' )
                            // InternalKim.g:2894:6: lv_integrated_0_0= 'aggregated'
                            {
                            lv_integrated_0_0=(Token)match(input,54,FOLLOW_47); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_integrated_0_0, grammarAccess.getActionSpecificationAccess().getIntegratedAggregatedKeyword_0_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getActionSpecificationRule());
                              						}
                              						setWithLastConsumed(current, "integrated", true, "aggregated");
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalKim.g:2906:4: ( (lv_over_1_0= 'over' ) )
                    // InternalKim.g:2907:5: (lv_over_1_0= 'over' )
                    {
                    // InternalKim.g:2907:5: (lv_over_1_0= 'over' )
                    // InternalKim.g:2908:6: lv_over_1_0= 'over'
                    {
                    lv_over_1_0=(Token)match(input,55,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_over_1_0, grammarAccess.getActionSpecificationAccess().getOverOverKeyword_0_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getActionSpecificationRule());
                      						}
                      						setWithLastConsumed(current, "over", true, "over");
                      					
                    }

                    }


                    }

                    // InternalKim.g:2920:4: ( (lv_domain_2_0= ruleFunctionOrID ) )
                    // InternalKim.g:2921:5: (lv_domain_2_0= ruleFunctionOrID )
                    {
                    // InternalKim.g:2921:5: (lv_domain_2_0= ruleFunctionOrID )
                    // InternalKim.g:2922:6: lv_domain_2_0= ruleFunctionOrID
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getActionSpecificationAccess().getDomainFunctionOrIDParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_48);
                    lv_domain_2_0=ruleFunctionOrID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
                      						}
                      						add(
                      							current,
                      							"domain",
                      							lv_domain_2_0,
                      							"org.integratedmodelling.kim.Kim.FunctionOrID");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:2939:4: ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_domain_4_0= ruleFunctionOrID ) ) )*
                    loop65:
                    do {
                        int alt65=2;
                        int LA65_0 = input.LA(1);

                        if ( (LA65_0==27) ) {
                            alt65=1;
                        }


                        switch (alt65) {
                    	case 1 :
                    	    // InternalKim.g:2940:5: ( ( ',' )=>otherlv_3= ',' ) ( (lv_domain_4_0= ruleFunctionOrID ) )
                    	    {
                    	    // InternalKim.g:2940:5: ( ( ',' )=>otherlv_3= ',' )
                    	    // InternalKim.g:2941:6: ( ',' )=>otherlv_3= ','
                    	    {
                    	    otherlv_3=(Token)match(input,27,FOLLOW_26); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_3, grammarAccess.getActionSpecificationAccess().getCommaKeyword_0_3_0());
                    	      					
                    	    }

                    	    }

                    	    // InternalKim.g:2947:5: ( (lv_domain_4_0= ruleFunctionOrID ) )
                    	    // InternalKim.g:2948:6: (lv_domain_4_0= ruleFunctionOrID )
                    	    {
                    	    // InternalKim.g:2948:6: (lv_domain_4_0= ruleFunctionOrID )
                    	    // InternalKim.g:2949:7: lv_domain_4_0= ruleFunctionOrID
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getActionSpecificationAccess().getDomainFunctionOrIDParserRuleCall_0_3_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_48);
                    	    lv_domain_4_0=ruleFunctionOrID();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"domain",
                    	      								lv_domain_4_0,
                    	      								"org.integratedmodelling.kim.Kim.FunctionOrID");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop65;
                        }
                    } while (true);

                    // InternalKim.g:2967:4: ( ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )* )?
                    int alt67=2;
                    alt67 = dfa67.predict(input);
                    switch (alt67) {
                        case 1 :
                            // InternalKim.g:2968:5: ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )*
                            {
                            // InternalKim.g:2968:5: ( (lv_actions_5_0= ruleAction ) )
                            // InternalKim.g:2969:6: (lv_actions_5_0= ruleAction )
                            {
                            // InternalKim.g:2969:6: (lv_actions_5_0= ruleAction )
                            // InternalKim.g:2970:7: lv_actions_5_0= ruleAction
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getActionSpecificationAccess().getActionsActionParserRuleCall_0_4_0_0());
                              						
                            }
                            pushFollow(FOLLOW_34);
                            lv_actions_5_0=ruleAction();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
                              							}
                              							add(
                              								current,
                              								"actions",
                              								lv_actions_5_0,
                              								"org.integratedmodelling.kim.Kim.Action");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            // InternalKim.g:2987:5: ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )*
                            loop66:
                            do {
                                int alt66=2;
                                int LA66_0 = input.LA(1);

                                if ( (LA66_0==27) ) {
                                    alt66=1;
                                }


                                switch (alt66) {
                            	case 1 :
                            	    // InternalKim.g:2988:6: ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) )
                            	    {
                            	    // InternalKim.g:2988:6: ( ( ',' )=>otherlv_6= ',' )
                            	    // InternalKim.g:2989:7: ( ',' )=>otherlv_6= ','
                            	    {
                            	    otherlv_6=(Token)match(input,27,FOLLOW_49); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_6, grammarAccess.getActionSpecificationAccess().getCommaKeyword_0_4_1_0());
                            	      						
                            	    }

                            	    }

                            	    // InternalKim.g:2995:6: ( (lv_actions_7_0= ruleAction ) )
                            	    // InternalKim.g:2996:7: (lv_actions_7_0= ruleAction )
                            	    {
                            	    // InternalKim.g:2996:7: (lv_actions_7_0= ruleAction )
                            	    // InternalKim.g:2997:8: lv_actions_7_0= ruleAction
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getActionSpecificationAccess().getActionsActionParserRuleCall_0_4_1_1_0());
                            	      							
                            	    }
                            	    pushFollow(FOLLOW_34);
                            	    lv_actions_7_0=ruleAction();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"actions",
                            	      									lv_actions_7_0,
                            	      									"org.integratedmodelling.kim.Kim.Action");
                            	      								afterParserOrEnumRuleCall();
                            	      							
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop66;
                                }
                            } while (true);


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:3018:3: ( ( ( (lv_trigger_8_0= 'on' ) ) ( ( (lv_initialization_9_0= 'definition' ) ) | ( (lv_instantiation_10_0= 'instantiation' ) ) | ( (lv_termination_11_0= 'termination' ) ) | ( ( (lv_event_12_0= ruleConceptDeclaration ) ) (otherlv_13= 'in' ( ( (lv_anyContextEvent_14_0= 'context' ) ) | ( (lv_relatedEventContext_15_0= 'related' ) ) ) ( (lv_eventContext_16_0= ruleConceptDeclaration ) ) )? ) ) ( (lv_parameters_17_0= ruleList ) )? )? ( (lv_actions_18_0= ruleAction ) ) ( ( ( ',' )=>otherlv_19= ',' ) ( (lv_actions_20_0= ruleAction ) ) )* )
                    {
                    // InternalKim.g:3018:3: ( ( ( (lv_trigger_8_0= 'on' ) ) ( ( (lv_initialization_9_0= 'definition' ) ) | ( (lv_instantiation_10_0= 'instantiation' ) ) | ( (lv_termination_11_0= 'termination' ) ) | ( ( (lv_event_12_0= ruleConceptDeclaration ) ) (otherlv_13= 'in' ( ( (lv_anyContextEvent_14_0= 'context' ) ) | ( (lv_relatedEventContext_15_0= 'related' ) ) ) ( (lv_eventContext_16_0= ruleConceptDeclaration ) ) )? ) ) ( (lv_parameters_17_0= ruleList ) )? )? ( (lv_actions_18_0= ruleAction ) ) ( ( ( ',' )=>otherlv_19= ',' ) ( (lv_actions_20_0= ruleAction ) ) )* )
                    // InternalKim.g:3019:4: ( ( (lv_trigger_8_0= 'on' ) ) ( ( (lv_initialization_9_0= 'definition' ) ) | ( (lv_instantiation_10_0= 'instantiation' ) ) | ( (lv_termination_11_0= 'termination' ) ) | ( ( (lv_event_12_0= ruleConceptDeclaration ) ) (otherlv_13= 'in' ( ( (lv_anyContextEvent_14_0= 'context' ) ) | ( (lv_relatedEventContext_15_0= 'related' ) ) ) ( (lv_eventContext_16_0= ruleConceptDeclaration ) ) )? ) ) ( (lv_parameters_17_0= ruleList ) )? )? ( (lv_actions_18_0= ruleAction ) ) ( ( ( ',' )=>otherlv_19= ',' ) ( (lv_actions_20_0= ruleAction ) ) )*
                    {
                    // InternalKim.g:3019:4: ( ( (lv_trigger_8_0= 'on' ) ) ( ( (lv_initialization_9_0= 'definition' ) ) | ( (lv_instantiation_10_0= 'instantiation' ) ) | ( (lv_termination_11_0= 'termination' ) ) | ( ( (lv_event_12_0= ruleConceptDeclaration ) ) (otherlv_13= 'in' ( ( (lv_anyContextEvent_14_0= 'context' ) ) | ( (lv_relatedEventContext_15_0= 'related' ) ) ) ( (lv_eventContext_16_0= ruleConceptDeclaration ) ) )? ) ) ( (lv_parameters_17_0= ruleList ) )? )?
                    int alt72=2;
                    int LA72_0 = input.LA(1);

                    if ( (LA72_0==56) ) {
                        alt72=1;
                    }
                    switch (alt72) {
                        case 1 :
                            // InternalKim.g:3020:5: ( (lv_trigger_8_0= 'on' ) ) ( ( (lv_initialization_9_0= 'definition' ) ) | ( (lv_instantiation_10_0= 'instantiation' ) ) | ( (lv_termination_11_0= 'termination' ) ) | ( ( (lv_event_12_0= ruleConceptDeclaration ) ) (otherlv_13= 'in' ( ( (lv_anyContextEvent_14_0= 'context' ) ) | ( (lv_relatedEventContext_15_0= 'related' ) ) ) ( (lv_eventContext_16_0= ruleConceptDeclaration ) ) )? ) ) ( (lv_parameters_17_0= ruleList ) )?
                            {
                            // InternalKim.g:3020:5: ( (lv_trigger_8_0= 'on' ) )
                            // InternalKim.g:3021:6: (lv_trigger_8_0= 'on' )
                            {
                            // InternalKim.g:3021:6: (lv_trigger_8_0= 'on' )
                            // InternalKim.g:3022:7: lv_trigger_8_0= 'on'
                            {
                            lv_trigger_8_0=(Token)match(input,56,FOLLOW_50); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_trigger_8_0, grammarAccess.getActionSpecificationAccess().getTriggerOnKeyword_1_0_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getActionSpecificationRule());
                              							}
                              							setWithLastConsumed(current, "trigger", true, "on");
                              						
                            }

                            }


                            }

                            // InternalKim.g:3034:5: ( ( (lv_initialization_9_0= 'definition' ) ) | ( (lv_instantiation_10_0= 'instantiation' ) ) | ( (lv_termination_11_0= 'termination' ) ) | ( ( (lv_event_12_0= ruleConceptDeclaration ) ) (otherlv_13= 'in' ( ( (lv_anyContextEvent_14_0= 'context' ) ) | ( (lv_relatedEventContext_15_0= 'related' ) ) ) ( (lv_eventContext_16_0= ruleConceptDeclaration ) ) )? ) )
                            int alt70=4;
                            switch ( input.LA(1) ) {
                            case 57:
                                {
                                alt70=1;
                                }
                                break;
                            case 58:
                                {
                                alt70=2;
                                }
                                break;
                            case 59:
                                {
                                alt70=3;
                                }
                                break;
                            case RULE_LOWERCASE_ID:
                            case RULE_UPPERCASE_ID:
                            case RULE_CAMELCASE_ID:
                            case RULE_LOWERCASE_DASHID:
                            case RULE_UPPERCASE_PATH:
                            case 38:
                            case 132:
                            case 133:
                            case 141:
                            case 142:
                            case 144:
                            case 145:
                            case 146:
                            case 147:
                            case 148:
                            case 149:
                            case 151:
                            case 152:
                            case 153:
                            case 154:
                            case 155:
                            case 156:
                            case 157:
                            case 158:
                            case 159:
                            case 160:
                            case 161:
                            case 162:
                            case 163:
                                {
                                alt70=4;
                                }
                                break;
                            default:
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 70, 0, input);

                                throw nvae;
                            }

                            switch (alt70) {
                                case 1 :
                                    // InternalKim.g:3035:6: ( (lv_initialization_9_0= 'definition' ) )
                                    {
                                    // InternalKim.g:3035:6: ( (lv_initialization_9_0= 'definition' ) )
                                    // InternalKim.g:3036:7: (lv_initialization_9_0= 'definition' )
                                    {
                                    // InternalKim.g:3036:7: (lv_initialization_9_0= 'definition' )
                                    // InternalKim.g:3037:8: lv_initialization_9_0= 'definition'
                                    {
                                    lv_initialization_9_0=(Token)match(input,57,FOLLOW_51); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_initialization_9_0, grammarAccess.getActionSpecificationAccess().getInitializationDefinitionKeyword_1_0_1_0_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getActionSpecificationRule());
                                      								}
                                      								setWithLastConsumed(current, "initialization", true, "definition");
                                      							
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:3050:6: ( (lv_instantiation_10_0= 'instantiation' ) )
                                    {
                                    // InternalKim.g:3050:6: ( (lv_instantiation_10_0= 'instantiation' ) )
                                    // InternalKim.g:3051:7: (lv_instantiation_10_0= 'instantiation' )
                                    {
                                    // InternalKim.g:3051:7: (lv_instantiation_10_0= 'instantiation' )
                                    // InternalKim.g:3052:8: lv_instantiation_10_0= 'instantiation'
                                    {
                                    lv_instantiation_10_0=(Token)match(input,58,FOLLOW_51); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_instantiation_10_0, grammarAccess.getActionSpecificationAccess().getInstantiationInstantiationKeyword_1_0_1_1_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getActionSpecificationRule());
                                      								}
                                      								setWithLastConsumed(current, "instantiation", true, "instantiation");
                                      							
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 3 :
                                    // InternalKim.g:3065:6: ( (lv_termination_11_0= 'termination' ) )
                                    {
                                    // InternalKim.g:3065:6: ( (lv_termination_11_0= 'termination' ) )
                                    // InternalKim.g:3066:7: (lv_termination_11_0= 'termination' )
                                    {
                                    // InternalKim.g:3066:7: (lv_termination_11_0= 'termination' )
                                    // InternalKim.g:3067:8: lv_termination_11_0= 'termination'
                                    {
                                    lv_termination_11_0=(Token)match(input,59,FOLLOW_51); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_termination_11_0, grammarAccess.getActionSpecificationAccess().getTerminationTerminationKeyword_1_0_1_2_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getActionSpecificationRule());
                                      								}
                                      								setWithLastConsumed(current, "termination", true, "termination");
                                      							
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 4 :
                                    // InternalKim.g:3080:6: ( ( (lv_event_12_0= ruleConceptDeclaration ) ) (otherlv_13= 'in' ( ( (lv_anyContextEvent_14_0= 'context' ) ) | ( (lv_relatedEventContext_15_0= 'related' ) ) ) ( (lv_eventContext_16_0= ruleConceptDeclaration ) ) )? )
                                    {
                                    // InternalKim.g:3080:6: ( ( (lv_event_12_0= ruleConceptDeclaration ) ) (otherlv_13= 'in' ( ( (lv_anyContextEvent_14_0= 'context' ) ) | ( (lv_relatedEventContext_15_0= 'related' ) ) ) ( (lv_eventContext_16_0= ruleConceptDeclaration ) ) )? )
                                    // InternalKim.g:3081:7: ( (lv_event_12_0= ruleConceptDeclaration ) ) (otherlv_13= 'in' ( ( (lv_anyContextEvent_14_0= 'context' ) ) | ( (lv_relatedEventContext_15_0= 'related' ) ) ) ( (lv_eventContext_16_0= ruleConceptDeclaration ) ) )?
                                    {
                                    // InternalKim.g:3081:7: ( (lv_event_12_0= ruleConceptDeclaration ) )
                                    // InternalKim.g:3082:8: (lv_event_12_0= ruleConceptDeclaration )
                                    {
                                    // InternalKim.g:3082:8: (lv_event_12_0= ruleConceptDeclaration )
                                    // InternalKim.g:3083:9: lv_event_12_0= ruleConceptDeclaration
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getActionSpecificationAccess().getEventConceptDeclarationParserRuleCall_1_0_1_3_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_52);
                                    lv_event_12_0=ruleConceptDeclaration();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
                                      									}
                                      									set(
                                      										current,
                                      										"event",
                                      										lv_event_12_0,
                                      										"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }

                                    // InternalKim.g:3100:7: (otherlv_13= 'in' ( ( (lv_anyContextEvent_14_0= 'context' ) ) | ( (lv_relatedEventContext_15_0= 'related' ) ) ) ( (lv_eventContext_16_0= ruleConceptDeclaration ) ) )?
                                    int alt69=2;
                                    int LA69_0 = input.LA(1);

                                    if ( (LA69_0==48) ) {
                                        alt69=1;
                                    }
                                    switch (alt69) {
                                        case 1 :
                                            // InternalKim.g:3101:8: otherlv_13= 'in' ( ( (lv_anyContextEvent_14_0= 'context' ) ) | ( (lv_relatedEventContext_15_0= 'related' ) ) ) ( (lv_eventContext_16_0= ruleConceptDeclaration ) )
                                            {
                                            otherlv_13=(Token)match(input,48,FOLLOW_53); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              								newLeafNode(otherlv_13, grammarAccess.getActionSpecificationAccess().getInKeyword_1_0_1_3_1_0());
                                              							
                                            }
                                            // InternalKim.g:3105:8: ( ( (lv_anyContextEvent_14_0= 'context' ) ) | ( (lv_relatedEventContext_15_0= 'related' ) ) )
                                            int alt68=2;
                                            int LA68_0 = input.LA(1);

                                            if ( (LA68_0==60) ) {
                                                alt68=1;
                                            }
                                            else if ( (LA68_0==61) ) {
                                                alt68=2;
                                            }
                                            else {
                                                if (state.backtracking>0) {state.failed=true; return current;}
                                                NoViableAltException nvae =
                                                    new NoViableAltException("", 68, 0, input);

                                                throw nvae;
                                            }
                                            switch (alt68) {
                                                case 1 :
                                                    // InternalKim.g:3106:9: ( (lv_anyContextEvent_14_0= 'context' ) )
                                                    {
                                                    // InternalKim.g:3106:9: ( (lv_anyContextEvent_14_0= 'context' ) )
                                                    // InternalKim.g:3107:10: (lv_anyContextEvent_14_0= 'context' )
                                                    {
                                                    // InternalKim.g:3107:10: (lv_anyContextEvent_14_0= 'context' )
                                                    // InternalKim.g:3108:11: lv_anyContextEvent_14_0= 'context'
                                                    {
                                                    lv_anyContextEvent_14_0=(Token)match(input,60,FOLLOW_23); if (state.failed) return current;
                                                    if ( state.backtracking==0 ) {

                                                      											newLeafNode(lv_anyContextEvent_14_0, grammarAccess.getActionSpecificationAccess().getAnyContextEventContextKeyword_1_0_1_3_1_1_0_0());
                                                      										
                                                    }
                                                    if ( state.backtracking==0 ) {

                                                      											if (current==null) {
                                                      												current = createModelElement(grammarAccess.getActionSpecificationRule());
                                                      											}
                                                      											setWithLastConsumed(current, "anyContextEvent", true, "context");
                                                      										
                                                    }

                                                    }


                                                    }


                                                    }
                                                    break;
                                                case 2 :
                                                    // InternalKim.g:3121:9: ( (lv_relatedEventContext_15_0= 'related' ) )
                                                    {
                                                    // InternalKim.g:3121:9: ( (lv_relatedEventContext_15_0= 'related' ) )
                                                    // InternalKim.g:3122:10: (lv_relatedEventContext_15_0= 'related' )
                                                    {
                                                    // InternalKim.g:3122:10: (lv_relatedEventContext_15_0= 'related' )
                                                    // InternalKim.g:3123:11: lv_relatedEventContext_15_0= 'related'
                                                    {
                                                    lv_relatedEventContext_15_0=(Token)match(input,61,FOLLOW_23); if (state.failed) return current;
                                                    if ( state.backtracking==0 ) {

                                                      											newLeafNode(lv_relatedEventContext_15_0, grammarAccess.getActionSpecificationAccess().getRelatedEventContextRelatedKeyword_1_0_1_3_1_1_1_0());
                                                      										
                                                    }
                                                    if ( state.backtracking==0 ) {

                                                      											if (current==null) {
                                                      												current = createModelElement(grammarAccess.getActionSpecificationRule());
                                                      											}
                                                      											setWithLastConsumed(current, "relatedEventContext", true, "related");
                                                      										
                                                    }

                                                    }


                                                    }


                                                    }
                                                    break;

                                            }

                                            // InternalKim.g:3136:8: ( (lv_eventContext_16_0= ruleConceptDeclaration ) )
                                            // InternalKim.g:3137:9: (lv_eventContext_16_0= ruleConceptDeclaration )
                                            {
                                            // InternalKim.g:3137:9: (lv_eventContext_16_0= ruleConceptDeclaration )
                                            // InternalKim.g:3138:10: lv_eventContext_16_0= ruleConceptDeclaration
                                            {
                                            if ( state.backtracking==0 ) {

                                              										newCompositeNode(grammarAccess.getActionSpecificationAccess().getEventContextConceptDeclarationParserRuleCall_1_0_1_3_1_2_0());
                                              									
                                            }
                                            pushFollow(FOLLOW_51);
                                            lv_eventContext_16_0=ruleConceptDeclaration();

                                            state._fsp--;
                                            if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              										if (current==null) {
                                              											current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
                                              										}
                                              										set(
                                              											current,
                                              											"eventContext",
                                              											lv_eventContext_16_0,
                                              											"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                                              										afterParserOrEnumRuleCall();
                                              									
                                            }

                                            }


                                            }


                                            }
                                            break;

                                    }


                                    }


                                    }
                                    break;

                            }

                            // InternalKim.g:3158:5: ( (lv_parameters_17_0= ruleList ) )?
                            int alt71=2;
                            int LA71_0 = input.LA(1);

                            if ( (LA71_0==38) ) {
                                alt71=1;
                            }
                            switch (alt71) {
                                case 1 :
                                    // InternalKim.g:3159:6: (lv_parameters_17_0= ruleList )
                                    {
                                    // InternalKim.g:3159:6: (lv_parameters_17_0= ruleList )
                                    // InternalKim.g:3160:7: lv_parameters_17_0= ruleList
                                    {
                                    if ( state.backtracking==0 ) {

                                      							newCompositeNode(grammarAccess.getActionSpecificationAccess().getParametersListParserRuleCall_1_0_2_0());
                                      						
                                    }
                                    pushFollow(FOLLOW_49);
                                    lv_parameters_17_0=ruleList();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							if (current==null) {
                                      								current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
                                      							}
                                      							set(
                                      								current,
                                      								"parameters",
                                      								lv_parameters_17_0,
                                      								"org.integratedmodelling.kim.Kim.List");
                                      							afterParserOrEnumRuleCall();
                                      						
                                    }

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }

                    // InternalKim.g:3178:4: ( (lv_actions_18_0= ruleAction ) )
                    // InternalKim.g:3179:5: (lv_actions_18_0= ruleAction )
                    {
                    // InternalKim.g:3179:5: (lv_actions_18_0= ruleAction )
                    // InternalKim.g:3180:6: lv_actions_18_0= ruleAction
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getActionSpecificationAccess().getActionsActionParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_34);
                    lv_actions_18_0=ruleAction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
                      						}
                      						add(
                      							current,
                      							"actions",
                      							lv_actions_18_0,
                      							"org.integratedmodelling.kim.Kim.Action");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:3197:4: ( ( ( ',' )=>otherlv_19= ',' ) ( (lv_actions_20_0= ruleAction ) ) )*
                    loop73:
                    do {
                        int alt73=2;
                        int LA73_0 = input.LA(1);

                        if ( (LA73_0==27) ) {
                            alt73=1;
                        }


                        switch (alt73) {
                    	case 1 :
                    	    // InternalKim.g:3198:5: ( ( ',' )=>otherlv_19= ',' ) ( (lv_actions_20_0= ruleAction ) )
                    	    {
                    	    // InternalKim.g:3198:5: ( ( ',' )=>otherlv_19= ',' )
                    	    // InternalKim.g:3199:6: ( ',' )=>otherlv_19= ','
                    	    {
                    	    otherlv_19=(Token)match(input,27,FOLLOW_49); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_19, grammarAccess.getActionSpecificationAccess().getCommaKeyword_1_2_0());
                    	      					
                    	    }

                    	    }

                    	    // InternalKim.g:3205:5: ( (lv_actions_20_0= ruleAction ) )
                    	    // InternalKim.g:3206:6: (lv_actions_20_0= ruleAction )
                    	    {
                    	    // InternalKim.g:3206:6: (lv_actions_20_0= ruleAction )
                    	    // InternalKim.g:3207:7: lv_actions_20_0= ruleAction
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getActionSpecificationAccess().getActionsActionParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_34);
                    	    lv_actions_20_0=ruleAction();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"actions",
                    	      								lv_actions_20_0,
                    	      								"org.integratedmodelling.kim.Kim.Action");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop73;
                        }
                    } while (true);


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleActionSpecification"


    // $ANTLR start "entryRuleFunctionOrID"
    // InternalKim.g:3230:1: entryRuleFunctionOrID returns [EObject current=null] : iv_ruleFunctionOrID= ruleFunctionOrID EOF ;
    public final EObject entryRuleFunctionOrID() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionOrID = null;


        try {
            // InternalKim.g:3230:53: (iv_ruleFunctionOrID= ruleFunctionOrID EOF )
            // InternalKim.g:3231:2: iv_ruleFunctionOrID= ruleFunctionOrID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionOrIDRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunctionOrID=ruleFunctionOrID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionOrID; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionOrID"


    // $ANTLR start "ruleFunctionOrID"
    // InternalKim.g:3237:1: ruleFunctionOrID returns [EObject current=null] : ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId ) ) ) ) ;
    public final EObject ruleFunctionOrID() throws RecognitionException {
        EObject current = null;

        Token lv_functionId_1_1=null;
        EObject lv_function_0_0 = null;

        AntlrDatatypeRuleToken lv_functionId_1_2 = null;



        	enterRule();

        try {
            // InternalKim.g:3243:2: ( ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId ) ) ) ) )
            // InternalKim.g:3244:2: ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId ) ) ) )
            {
            // InternalKim.g:3244:2: ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId ) ) ) )
            int alt76=2;
            switch ( input.LA(1) ) {
            case RULE_LOWERCASE_ID:
                {
                int LA76_1 = input.LA(2);

                if ( (synpred130_InternalKim()) ) {
                    alt76=1;
                }
                else if ( (true) ) {
                    alt76=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 1, input);

                    throw nvae;
                }
                }
                break;
            case RULE_UPPERCASE_ID:
                {
                int LA76_2 = input.LA(2);

                if ( (synpred130_InternalKim()) ) {
                    alt76=1;
                }
                else if ( (true) ) {
                    alt76=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 2, input);

                    throw nvae;
                }
                }
                break;
            case RULE_LOWERCASE_DASHID:
                {
                int LA76_3 = input.LA(2);

                if ( (synpred130_InternalKim()) ) {
                    alt76=1;
                }
                else if ( (true) ) {
                    alt76=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 3, input);

                    throw nvae;
                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 76, 0, input);

                throw nvae;
            }

            switch (alt76) {
                case 1 :
                    // InternalKim.g:3245:3: ( (lv_function_0_0= ruleFunction ) )
                    {
                    // InternalKim.g:3245:3: ( (lv_function_0_0= ruleFunction ) )
                    // InternalKim.g:3246:4: (lv_function_0_0= ruleFunction )
                    {
                    // InternalKim.g:3246:4: (lv_function_0_0= ruleFunction )
                    // InternalKim.g:3247:5: lv_function_0_0= ruleFunction
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getFunctionOrIDAccess().getFunctionFunctionParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_function_0_0=ruleFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getFunctionOrIDRule());
                      					}
                      					set(
                      						current,
                      						"function",
                      						lv_function_0_0,
                      						"org.integratedmodelling.kim.Kim.Function");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:3265:3: ( ( (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId ) ) )
                    {
                    // InternalKim.g:3265:3: ( ( (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId ) ) )
                    // InternalKim.g:3266:4: ( (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId ) )
                    {
                    // InternalKim.g:3266:4: ( (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId ) )
                    // InternalKim.g:3267:5: (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId )
                    {
                    // InternalKim.g:3267:5: (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId )
                    int alt75=2;
                    int LA75_0 = input.LA(1);

                    if ( (LA75_0==RULE_LOWERCASE_ID) ) {
                        int LA75_1 = input.LA(2);

                        if ( (LA75_1==EOF||(LA75_1>=RULE_LOWERCASE_ID && LA75_1<=RULE_STRING)||LA75_1==RULE_CAMELCASE_ID||LA75_1==RULE_LOWERCASE_DASHID||LA75_1==RULE_UPPERCASE_PATH||LA75_1==20||LA75_1==27||LA75_1==31||LA75_1==38||(LA75_1>=41 && LA75_1<=42)||(LA75_1>=54 && LA75_1<=56)||(LA75_1>=62 && LA75_1<=67)||LA75_1==105||(LA75_1>=132 && LA75_1<=133)||(LA75_1>=141 && LA75_1<=142)||(LA75_1>=144 && LA75_1<=149)||(LA75_1>=151 && LA75_1<=163)) ) {
                            alt75=1;
                        }
                        else if ( (LA75_1==106||LA75_1==109) ) {
                            alt75=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 75, 1, input);

                            throw nvae;
                        }
                    }
                    else if ( (LA75_0==RULE_UPPERCASE_ID||LA75_0==RULE_LOWERCASE_DASHID) ) {
                        alt75=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 75, 0, input);

                        throw nvae;
                    }
                    switch (alt75) {
                        case 1 :
                            // InternalKim.g:3268:6: lv_functionId_1_1= RULE_LOWERCASE_ID
                            {
                            lv_functionId_1_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_functionId_1_1, grammarAccess.getFunctionOrIDAccess().getFunctionIdLOWERCASE_IDTerminalRuleCall_1_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getFunctionOrIDRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"functionId",
                              							lv_functionId_1_1,
                              							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:3283:6: lv_functionId_1_2= ruleNamespaceId
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getFunctionOrIDAccess().getFunctionIdNamespaceIdParserRuleCall_1_0_1());
                              					
                            }
                            pushFollow(FOLLOW_2);
                            lv_functionId_1_2=ruleNamespaceId();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getFunctionOrIDRule());
                              						}
                              						set(
                              							current,
                              							"functionId",
                              							lv_functionId_1_2,
                              							"org.integratedmodelling.kim.Kim.NamespaceId");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionOrID"


    // $ANTLR start "entryRuleAction"
    // InternalKim.g:3305:1: entryRuleAction returns [EObject current=null] : iv_ruleAction= ruleAction EOF ;
    public final EObject entryRuleAction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAction = null;


        try {
            // InternalKim.g:3305:47: (iv_ruleAction= ruleAction EOF )
            // InternalKim.g:3306:2: iv_ruleAction= ruleAction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getActionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAction=ruleAction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAction"


    // $ANTLR start "ruleAction"
    // InternalKim.g:3312:1: ruleAction returns [EObject current=null] : ( ( ( (lv_set_0_0= 'set' ) ) ( (lv_assignments_1_0= ruleValueAssignment ) ) (otherlv_2= ',' ( (lv_assignments_3_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_4= 'if' | ( (lv_conditionNegative_5_0= 'unless' ) ) ) ) ( (lv_condition_6_0= ruleValue ) ) )? ) | ( ( (lv_integrate_7_0= 'integrate' ) ) ( (lv_assignments_8_0= ruleValueAssignment ) ) (otherlv_9= ',' ( (lv_assignments_10_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_11= 'if' | ( (lv_conditionNegative_12_0= 'unless' ) ) ) ) ( (lv_condition_13_0= ruleValue ) ) )? ) | ( ( ( (lv_do_14_1= 'do' | lv_do_14_2= 'then' | lv_do_14_3= 'finally' ) ) ) ( (lv_executed_15_0= ruleValueExecution ) ) (otherlv_16= ',' ( (lv_executed_17_0= ruleValueExecution ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_18= 'if' | ( (lv_conditionNegative_19_0= 'unless' ) ) ) ) ( (lv_condition_20_0= ruleValue ) ) )? ) | ( ( (lv_move_21_0= 'move' ) ) ( ( (lv_where_22_0= ruleValue ) ) | ( (lv_away_23_0= 'away' ) ) ) ( ( ( ruleValue ) )=> (lv_condition_24_0= ruleValue ) )? ) ) ;
    public final EObject ruleAction() throws RecognitionException {
        EObject current = null;

        Token lv_set_0_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token lv_conditionNegative_5_0=null;
        Token lv_integrate_7_0=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token lv_conditionNegative_12_0=null;
        Token lv_do_14_1=null;
        Token lv_do_14_2=null;
        Token lv_do_14_3=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token lv_conditionNegative_19_0=null;
        Token lv_move_21_0=null;
        Token lv_away_23_0=null;
        EObject lv_assignments_1_0 = null;

        EObject lv_assignments_3_0 = null;

        EObject lv_condition_6_0 = null;

        EObject lv_assignments_8_0 = null;

        EObject lv_assignments_10_0 = null;

        EObject lv_condition_13_0 = null;

        EObject lv_executed_15_0 = null;

        EObject lv_executed_17_0 = null;

        EObject lv_condition_20_0 = null;

        EObject lv_where_22_0 = null;

        EObject lv_condition_24_0 = null;



        	enterRule();

        try {
            // InternalKim.g:3318:2: ( ( ( ( (lv_set_0_0= 'set' ) ) ( (lv_assignments_1_0= ruleValueAssignment ) ) (otherlv_2= ',' ( (lv_assignments_3_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_4= 'if' | ( (lv_conditionNegative_5_0= 'unless' ) ) ) ) ( (lv_condition_6_0= ruleValue ) ) )? ) | ( ( (lv_integrate_7_0= 'integrate' ) ) ( (lv_assignments_8_0= ruleValueAssignment ) ) (otherlv_9= ',' ( (lv_assignments_10_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_11= 'if' | ( (lv_conditionNegative_12_0= 'unless' ) ) ) ) ( (lv_condition_13_0= ruleValue ) ) )? ) | ( ( ( (lv_do_14_1= 'do' | lv_do_14_2= 'then' | lv_do_14_3= 'finally' ) ) ) ( (lv_executed_15_0= ruleValueExecution ) ) (otherlv_16= ',' ( (lv_executed_17_0= ruleValueExecution ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_18= 'if' | ( (lv_conditionNegative_19_0= 'unless' ) ) ) ) ( (lv_condition_20_0= ruleValue ) ) )? ) | ( ( (lv_move_21_0= 'move' ) ) ( ( (lv_where_22_0= ruleValue ) ) | ( (lv_away_23_0= 'away' ) ) ) ( ( ( ruleValue ) )=> (lv_condition_24_0= ruleValue ) )? ) ) )
            // InternalKim.g:3319:2: ( ( ( (lv_set_0_0= 'set' ) ) ( (lv_assignments_1_0= ruleValueAssignment ) ) (otherlv_2= ',' ( (lv_assignments_3_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_4= 'if' | ( (lv_conditionNegative_5_0= 'unless' ) ) ) ) ( (lv_condition_6_0= ruleValue ) ) )? ) | ( ( (lv_integrate_7_0= 'integrate' ) ) ( (lv_assignments_8_0= ruleValueAssignment ) ) (otherlv_9= ',' ( (lv_assignments_10_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_11= 'if' | ( (lv_conditionNegative_12_0= 'unless' ) ) ) ) ( (lv_condition_13_0= ruleValue ) ) )? ) | ( ( ( (lv_do_14_1= 'do' | lv_do_14_2= 'then' | lv_do_14_3= 'finally' ) ) ) ( (lv_executed_15_0= ruleValueExecution ) ) (otherlv_16= ',' ( (lv_executed_17_0= ruleValueExecution ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_18= 'if' | ( (lv_conditionNegative_19_0= 'unless' ) ) ) ) ( (lv_condition_20_0= ruleValue ) ) )? ) | ( ( (lv_move_21_0= 'move' ) ) ( ( (lv_where_22_0= ruleValue ) ) | ( (lv_away_23_0= 'away' ) ) ) ( ( ( ruleValue ) )=> (lv_condition_24_0= ruleValue ) )? ) )
            {
            // InternalKim.g:3319:2: ( ( ( (lv_set_0_0= 'set' ) ) ( (lv_assignments_1_0= ruleValueAssignment ) ) (otherlv_2= ',' ( (lv_assignments_3_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_4= 'if' | ( (lv_conditionNegative_5_0= 'unless' ) ) ) ) ( (lv_condition_6_0= ruleValue ) ) )? ) | ( ( (lv_integrate_7_0= 'integrate' ) ) ( (lv_assignments_8_0= ruleValueAssignment ) ) (otherlv_9= ',' ( (lv_assignments_10_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_11= 'if' | ( (lv_conditionNegative_12_0= 'unless' ) ) ) ) ( (lv_condition_13_0= ruleValue ) ) )? ) | ( ( ( (lv_do_14_1= 'do' | lv_do_14_2= 'then' | lv_do_14_3= 'finally' ) ) ) ( (lv_executed_15_0= ruleValueExecution ) ) (otherlv_16= ',' ( (lv_executed_17_0= ruleValueExecution ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_18= 'if' | ( (lv_conditionNegative_19_0= 'unless' ) ) ) ) ( (lv_condition_20_0= ruleValue ) ) )? ) | ( ( (lv_move_21_0= 'move' ) ) ( ( (lv_where_22_0= ruleValue ) ) | ( (lv_away_23_0= 'away' ) ) ) ( ( ( ruleValue ) )=> (lv_condition_24_0= ruleValue ) )? ) )
            int alt89=4;
            switch ( input.LA(1) ) {
            case 62:
                {
                alt89=1;
                }
                break;
            case 63:
                {
                alt89=2;
                }
                break;
            case 64:
            case 65:
            case 66:
                {
                alt89=3;
                }
                break;
            case 67:
                {
                alt89=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 89, 0, input);

                throw nvae;
            }

            switch (alt89) {
                case 1 :
                    // InternalKim.g:3320:3: ( ( (lv_set_0_0= 'set' ) ) ( (lv_assignments_1_0= ruleValueAssignment ) ) (otherlv_2= ',' ( (lv_assignments_3_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_4= 'if' | ( (lv_conditionNegative_5_0= 'unless' ) ) ) ) ( (lv_condition_6_0= ruleValue ) ) )? )
                    {
                    // InternalKim.g:3320:3: ( ( (lv_set_0_0= 'set' ) ) ( (lv_assignments_1_0= ruleValueAssignment ) ) (otherlv_2= ',' ( (lv_assignments_3_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_4= 'if' | ( (lv_conditionNegative_5_0= 'unless' ) ) ) ) ( (lv_condition_6_0= ruleValue ) ) )? )
                    // InternalKim.g:3321:4: ( (lv_set_0_0= 'set' ) ) ( (lv_assignments_1_0= ruleValueAssignment ) ) (otherlv_2= ',' ( (lv_assignments_3_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_4= 'if' | ( (lv_conditionNegative_5_0= 'unless' ) ) ) ) ( (lv_condition_6_0= ruleValue ) ) )?
                    {
                    // InternalKim.g:3321:4: ( (lv_set_0_0= 'set' ) )
                    // InternalKim.g:3322:5: (lv_set_0_0= 'set' )
                    {
                    // InternalKim.g:3322:5: (lv_set_0_0= 'set' )
                    // InternalKim.g:3323:6: lv_set_0_0= 'set'
                    {
                    lv_set_0_0=(Token)match(input,62,FOLLOW_54); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_set_0_0, grammarAccess.getActionAccess().getSetSetKeyword_0_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getActionRule());
                      						}
                      						setWithLastConsumed(current, "set", true, "set");
                      					
                    }

                    }


                    }

                    // InternalKim.g:3335:4: ( (lv_assignments_1_0= ruleValueAssignment ) )
                    // InternalKim.g:3336:5: (lv_assignments_1_0= ruleValueAssignment )
                    {
                    // InternalKim.g:3336:5: (lv_assignments_1_0= ruleValueAssignment )
                    // InternalKim.g:3337:6: lv_assignments_1_0= ruleValueAssignment
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getActionAccess().getAssignmentsValueAssignmentParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_55);
                    lv_assignments_1_0=ruleValueAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getActionRule());
                      						}
                      						add(
                      							current,
                      							"assignments",
                      							lv_assignments_1_0,
                      							"org.integratedmodelling.kim.Kim.ValueAssignment");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:3354:4: (otherlv_2= ',' ( (lv_assignments_3_0= ruleValueAssignment ) ) )*
                    loop77:
                    do {
                        int alt77=2;
                        int LA77_0 = input.LA(1);

                        if ( (LA77_0==27) ) {
                            int LA77_2 = input.LA(2);

                            if ( ((LA77_2>=RULE_LOWERCASE_ID && LA77_2<=RULE_STRING)||(LA77_2>=RULE_EXPR && LA77_2<=RULE_ID)||(LA77_2>=27 && LA77_2<=29)||LA77_2==36||LA77_2==38||LA77_2==49||(LA77_2>=251 && LA77_2<=252)) ) {
                                alt77=1;
                            }


                        }


                        switch (alt77) {
                    	case 1 :
                    	    // InternalKim.g:3355:5: otherlv_2= ',' ( (lv_assignments_3_0= ruleValueAssignment ) )
                    	    {
                    	    otherlv_2=(Token)match(input,27,FOLLOW_54); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_2, grammarAccess.getActionAccess().getCommaKeyword_0_2_0());
                    	      				
                    	    }
                    	    // InternalKim.g:3359:5: ( (lv_assignments_3_0= ruleValueAssignment ) )
                    	    // InternalKim.g:3360:6: (lv_assignments_3_0= ruleValueAssignment )
                    	    {
                    	    // InternalKim.g:3360:6: (lv_assignments_3_0= ruleValueAssignment )
                    	    // InternalKim.g:3361:7: lv_assignments_3_0= ruleValueAssignment
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getActionAccess().getAssignmentsValueAssignmentParserRuleCall_0_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_55);
                    	    lv_assignments_3_0=ruleValueAssignment();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getActionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"assignments",
                    	      								lv_assignments_3_0,
                    	      								"org.integratedmodelling.kim.Kim.ValueAssignment");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop77;
                        }
                    } while (true);

                    // InternalKim.g:3379:4: ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_4= 'if' | ( (lv_conditionNegative_5_0= 'unless' ) ) ) ) ( (lv_condition_6_0= ruleValue ) ) )?
                    int alt79=2;
                    int LA79_0 = input.LA(1);

                    if ( ((LA79_0>=44 && LA79_0<=45)) ) {
                        alt79=1;
                    }
                    switch (alt79) {
                        case 1 :
                            // InternalKim.g:3380:5: ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_4= 'if' | ( (lv_conditionNegative_5_0= 'unless' ) ) ) ) ( (lv_condition_6_0= ruleValue ) )
                            {
                            // InternalKim.g:3380:5: ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_4= 'if' | ( (lv_conditionNegative_5_0= 'unless' ) ) ) )
                            // InternalKim.g:3381:6: ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_4= 'if' | ( (lv_conditionNegative_5_0= 'unless' ) ) )
                            {
                            // InternalKim.g:3391:6: (otherlv_4= 'if' | ( (lv_conditionNegative_5_0= 'unless' ) ) )
                            int alt78=2;
                            int LA78_0 = input.LA(1);

                            if ( (LA78_0==44) ) {
                                alt78=1;
                            }
                            else if ( (LA78_0==45) ) {
                                alt78=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 78, 0, input);

                                throw nvae;
                            }
                            switch (alt78) {
                                case 1 :
                                    // InternalKim.g:3392:7: otherlv_4= 'if'
                                    {
                                    otherlv_4=(Token)match(input,44,FOLLOW_12); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(otherlv_4, grammarAccess.getActionAccess().getIfKeyword_0_3_0_0_0());
                                      						
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:3397:7: ( (lv_conditionNegative_5_0= 'unless' ) )
                                    {
                                    // InternalKim.g:3397:7: ( (lv_conditionNegative_5_0= 'unless' ) )
                                    // InternalKim.g:3398:8: (lv_conditionNegative_5_0= 'unless' )
                                    {
                                    // InternalKim.g:3398:8: (lv_conditionNegative_5_0= 'unless' )
                                    // InternalKim.g:3399:9: lv_conditionNegative_5_0= 'unless'
                                    {
                                    lv_conditionNegative_5_0=(Token)match(input,45,FOLLOW_12); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_conditionNegative_5_0, grammarAccess.getActionAccess().getConditionNegativeUnlessKeyword_0_3_0_0_1_0());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getActionRule());
                                      									}
                                      									setWithLastConsumed(current, "conditionNegative", true, "unless");
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }

                            // InternalKim.g:3413:5: ( (lv_condition_6_0= ruleValue ) )
                            // InternalKim.g:3414:6: (lv_condition_6_0= ruleValue )
                            {
                            // InternalKim.g:3414:6: (lv_condition_6_0= ruleValue )
                            // InternalKim.g:3415:7: lv_condition_6_0= ruleValue
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getActionAccess().getConditionValueParserRuleCall_0_3_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_condition_6_0=ruleValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getActionRule());
                              							}
                              							set(
                              								current,
                              								"condition",
                              								lv_condition_6_0,
                              								"org.integratedmodelling.kim.Kim.Value");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:3435:3: ( ( (lv_integrate_7_0= 'integrate' ) ) ( (lv_assignments_8_0= ruleValueAssignment ) ) (otherlv_9= ',' ( (lv_assignments_10_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_11= 'if' | ( (lv_conditionNegative_12_0= 'unless' ) ) ) ) ( (lv_condition_13_0= ruleValue ) ) )? )
                    {
                    // InternalKim.g:3435:3: ( ( (lv_integrate_7_0= 'integrate' ) ) ( (lv_assignments_8_0= ruleValueAssignment ) ) (otherlv_9= ',' ( (lv_assignments_10_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_11= 'if' | ( (lv_conditionNegative_12_0= 'unless' ) ) ) ) ( (lv_condition_13_0= ruleValue ) ) )? )
                    // InternalKim.g:3436:4: ( (lv_integrate_7_0= 'integrate' ) ) ( (lv_assignments_8_0= ruleValueAssignment ) ) (otherlv_9= ',' ( (lv_assignments_10_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_11= 'if' | ( (lv_conditionNegative_12_0= 'unless' ) ) ) ) ( (lv_condition_13_0= ruleValue ) ) )?
                    {
                    // InternalKim.g:3436:4: ( (lv_integrate_7_0= 'integrate' ) )
                    // InternalKim.g:3437:5: (lv_integrate_7_0= 'integrate' )
                    {
                    // InternalKim.g:3437:5: (lv_integrate_7_0= 'integrate' )
                    // InternalKim.g:3438:6: lv_integrate_7_0= 'integrate'
                    {
                    lv_integrate_7_0=(Token)match(input,63,FOLLOW_54); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_integrate_7_0, grammarAccess.getActionAccess().getIntegrateIntegrateKeyword_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getActionRule());
                      						}
                      						setWithLastConsumed(current, "integrate", true, "integrate");
                      					
                    }

                    }


                    }

                    // InternalKim.g:3450:4: ( (lv_assignments_8_0= ruleValueAssignment ) )
                    // InternalKim.g:3451:5: (lv_assignments_8_0= ruleValueAssignment )
                    {
                    // InternalKim.g:3451:5: (lv_assignments_8_0= ruleValueAssignment )
                    // InternalKim.g:3452:6: lv_assignments_8_0= ruleValueAssignment
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getActionAccess().getAssignmentsValueAssignmentParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_55);
                    lv_assignments_8_0=ruleValueAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getActionRule());
                      						}
                      						add(
                      							current,
                      							"assignments",
                      							lv_assignments_8_0,
                      							"org.integratedmodelling.kim.Kim.ValueAssignment");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:3469:4: (otherlv_9= ',' ( (lv_assignments_10_0= ruleValueAssignment ) ) )*
                    loop80:
                    do {
                        int alt80=2;
                        int LA80_0 = input.LA(1);

                        if ( (LA80_0==27) ) {
                            int LA80_2 = input.LA(2);

                            if ( ((LA80_2>=RULE_LOWERCASE_ID && LA80_2<=RULE_STRING)||(LA80_2>=RULE_EXPR && LA80_2<=RULE_ID)||(LA80_2>=27 && LA80_2<=29)||LA80_2==36||LA80_2==38||LA80_2==49||(LA80_2>=251 && LA80_2<=252)) ) {
                                alt80=1;
                            }


                        }


                        switch (alt80) {
                    	case 1 :
                    	    // InternalKim.g:3470:5: otherlv_9= ',' ( (lv_assignments_10_0= ruleValueAssignment ) )
                    	    {
                    	    otherlv_9=(Token)match(input,27,FOLLOW_54); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_9, grammarAccess.getActionAccess().getCommaKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalKim.g:3474:5: ( (lv_assignments_10_0= ruleValueAssignment ) )
                    	    // InternalKim.g:3475:6: (lv_assignments_10_0= ruleValueAssignment )
                    	    {
                    	    // InternalKim.g:3475:6: (lv_assignments_10_0= ruleValueAssignment )
                    	    // InternalKim.g:3476:7: lv_assignments_10_0= ruleValueAssignment
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getActionAccess().getAssignmentsValueAssignmentParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_55);
                    	    lv_assignments_10_0=ruleValueAssignment();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getActionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"assignments",
                    	      								lv_assignments_10_0,
                    	      								"org.integratedmodelling.kim.Kim.ValueAssignment");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop80;
                        }
                    } while (true);

                    // InternalKim.g:3494:4: ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_11= 'if' | ( (lv_conditionNegative_12_0= 'unless' ) ) ) ) ( (lv_condition_13_0= ruleValue ) ) )?
                    int alt82=2;
                    int LA82_0 = input.LA(1);

                    if ( ((LA82_0>=44 && LA82_0<=45)) ) {
                        alt82=1;
                    }
                    switch (alt82) {
                        case 1 :
                            // InternalKim.g:3495:5: ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_11= 'if' | ( (lv_conditionNegative_12_0= 'unless' ) ) ) ) ( (lv_condition_13_0= ruleValue ) )
                            {
                            // InternalKim.g:3495:5: ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_11= 'if' | ( (lv_conditionNegative_12_0= 'unless' ) ) ) )
                            // InternalKim.g:3496:6: ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_11= 'if' | ( (lv_conditionNegative_12_0= 'unless' ) ) )
                            {
                            // InternalKim.g:3506:6: (otherlv_11= 'if' | ( (lv_conditionNegative_12_0= 'unless' ) ) )
                            int alt81=2;
                            int LA81_0 = input.LA(1);

                            if ( (LA81_0==44) ) {
                                alt81=1;
                            }
                            else if ( (LA81_0==45) ) {
                                alt81=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 81, 0, input);

                                throw nvae;
                            }
                            switch (alt81) {
                                case 1 :
                                    // InternalKim.g:3507:7: otherlv_11= 'if'
                                    {
                                    otherlv_11=(Token)match(input,44,FOLLOW_12); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(otherlv_11, grammarAccess.getActionAccess().getIfKeyword_1_3_0_0_0());
                                      						
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:3512:7: ( (lv_conditionNegative_12_0= 'unless' ) )
                                    {
                                    // InternalKim.g:3512:7: ( (lv_conditionNegative_12_0= 'unless' ) )
                                    // InternalKim.g:3513:8: (lv_conditionNegative_12_0= 'unless' )
                                    {
                                    // InternalKim.g:3513:8: (lv_conditionNegative_12_0= 'unless' )
                                    // InternalKim.g:3514:9: lv_conditionNegative_12_0= 'unless'
                                    {
                                    lv_conditionNegative_12_0=(Token)match(input,45,FOLLOW_12); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_conditionNegative_12_0, grammarAccess.getActionAccess().getConditionNegativeUnlessKeyword_1_3_0_0_1_0());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getActionRule());
                                      									}
                                      									setWithLastConsumed(current, "conditionNegative", true, "unless");
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }

                            // InternalKim.g:3528:5: ( (lv_condition_13_0= ruleValue ) )
                            // InternalKim.g:3529:6: (lv_condition_13_0= ruleValue )
                            {
                            // InternalKim.g:3529:6: (lv_condition_13_0= ruleValue )
                            // InternalKim.g:3530:7: lv_condition_13_0= ruleValue
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getActionAccess().getConditionValueParserRuleCall_1_3_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_condition_13_0=ruleValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getActionRule());
                              							}
                              							set(
                              								current,
                              								"condition",
                              								lv_condition_13_0,
                              								"org.integratedmodelling.kim.Kim.Value");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:3550:3: ( ( ( (lv_do_14_1= 'do' | lv_do_14_2= 'then' | lv_do_14_3= 'finally' ) ) ) ( (lv_executed_15_0= ruleValueExecution ) ) (otherlv_16= ',' ( (lv_executed_17_0= ruleValueExecution ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_18= 'if' | ( (lv_conditionNegative_19_0= 'unless' ) ) ) ) ( (lv_condition_20_0= ruleValue ) ) )? )
                    {
                    // InternalKim.g:3550:3: ( ( ( (lv_do_14_1= 'do' | lv_do_14_2= 'then' | lv_do_14_3= 'finally' ) ) ) ( (lv_executed_15_0= ruleValueExecution ) ) (otherlv_16= ',' ( (lv_executed_17_0= ruleValueExecution ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_18= 'if' | ( (lv_conditionNegative_19_0= 'unless' ) ) ) ) ( (lv_condition_20_0= ruleValue ) ) )? )
                    // InternalKim.g:3551:4: ( ( (lv_do_14_1= 'do' | lv_do_14_2= 'then' | lv_do_14_3= 'finally' ) ) ) ( (lv_executed_15_0= ruleValueExecution ) ) (otherlv_16= ',' ( (lv_executed_17_0= ruleValueExecution ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_18= 'if' | ( (lv_conditionNegative_19_0= 'unless' ) ) ) ) ( (lv_condition_20_0= ruleValue ) ) )?
                    {
                    // InternalKim.g:3551:4: ( ( (lv_do_14_1= 'do' | lv_do_14_2= 'then' | lv_do_14_3= 'finally' ) ) )
                    // InternalKim.g:3552:5: ( (lv_do_14_1= 'do' | lv_do_14_2= 'then' | lv_do_14_3= 'finally' ) )
                    {
                    // InternalKim.g:3552:5: ( (lv_do_14_1= 'do' | lv_do_14_2= 'then' | lv_do_14_3= 'finally' ) )
                    // InternalKim.g:3553:6: (lv_do_14_1= 'do' | lv_do_14_2= 'then' | lv_do_14_3= 'finally' )
                    {
                    // InternalKim.g:3553:6: (lv_do_14_1= 'do' | lv_do_14_2= 'then' | lv_do_14_3= 'finally' )
                    int alt83=3;
                    switch ( input.LA(1) ) {
                    case 64:
                        {
                        alt83=1;
                        }
                        break;
                    case 65:
                        {
                        alt83=2;
                        }
                        break;
                    case 66:
                        {
                        alt83=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 83, 0, input);

                        throw nvae;
                    }

                    switch (alt83) {
                        case 1 :
                            // InternalKim.g:3554:7: lv_do_14_1= 'do'
                            {
                            lv_do_14_1=(Token)match(input,64,FOLLOW_20); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_do_14_1, grammarAccess.getActionAccess().getDoDoKeyword_2_0_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getActionRule());
                              							}
                              							setWithLastConsumed(current, "do", true, null);
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:3565:7: lv_do_14_2= 'then'
                            {
                            lv_do_14_2=(Token)match(input,65,FOLLOW_20); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_do_14_2, grammarAccess.getActionAccess().getDoThenKeyword_2_0_0_1());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getActionRule());
                              							}
                              							setWithLastConsumed(current, "do", true, null);
                              						
                            }

                            }
                            break;
                        case 3 :
                            // InternalKim.g:3576:7: lv_do_14_3= 'finally'
                            {
                            lv_do_14_3=(Token)match(input,66,FOLLOW_20); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_do_14_3, grammarAccess.getActionAccess().getDoFinallyKeyword_2_0_0_2());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getActionRule());
                              							}
                              							setWithLastConsumed(current, "do", true, null);
                              						
                            }

                            }
                            break;

                    }


                    }


                    }

                    // InternalKim.g:3589:4: ( (lv_executed_15_0= ruleValueExecution ) )
                    // InternalKim.g:3590:5: (lv_executed_15_0= ruleValueExecution )
                    {
                    // InternalKim.g:3590:5: (lv_executed_15_0= ruleValueExecution )
                    // InternalKim.g:3591:6: lv_executed_15_0= ruleValueExecution
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getActionAccess().getExecutedValueExecutionParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_55);
                    lv_executed_15_0=ruleValueExecution();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getActionRule());
                      						}
                      						add(
                      							current,
                      							"executed",
                      							lv_executed_15_0,
                      							"org.integratedmodelling.kim.Kim.ValueExecution");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:3608:4: (otherlv_16= ',' ( (lv_executed_17_0= ruleValueExecution ) ) )*
                    loop84:
                    do {
                        int alt84=2;
                        int LA84_0 = input.LA(1);

                        if ( (LA84_0==27) ) {
                            int LA84_2 = input.LA(2);

                            if ( ((LA84_2>=RULE_LOWERCASE_ID && LA84_2<=RULE_STRING)||LA84_2==RULE_EXPR||LA84_2==RULE_LOWERCASE_DASHID||LA84_2==105) ) {
                                alt84=1;
                            }


                        }


                        switch (alt84) {
                    	case 1 :
                    	    // InternalKim.g:3609:5: otherlv_16= ',' ( (lv_executed_17_0= ruleValueExecution ) )
                    	    {
                    	    otherlv_16=(Token)match(input,27,FOLLOW_20); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_16, grammarAccess.getActionAccess().getCommaKeyword_2_2_0());
                    	      				
                    	    }
                    	    // InternalKim.g:3613:5: ( (lv_executed_17_0= ruleValueExecution ) )
                    	    // InternalKim.g:3614:6: (lv_executed_17_0= ruleValueExecution )
                    	    {
                    	    // InternalKim.g:3614:6: (lv_executed_17_0= ruleValueExecution )
                    	    // InternalKim.g:3615:7: lv_executed_17_0= ruleValueExecution
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getActionAccess().getExecutedValueExecutionParserRuleCall_2_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_55);
                    	    lv_executed_17_0=ruleValueExecution();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getActionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"executed",
                    	      								lv_executed_17_0,
                    	      								"org.integratedmodelling.kim.Kim.ValueExecution");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop84;
                        }
                    } while (true);

                    // InternalKim.g:3633:4: ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_18= 'if' | ( (lv_conditionNegative_19_0= 'unless' ) ) ) ) ( (lv_condition_20_0= ruleValue ) ) )?
                    int alt86=2;
                    int LA86_0 = input.LA(1);

                    if ( ((LA86_0>=44 && LA86_0<=45)) ) {
                        alt86=1;
                    }
                    switch (alt86) {
                        case 1 :
                            // InternalKim.g:3634:5: ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_18= 'if' | ( (lv_conditionNegative_19_0= 'unless' ) ) ) ) ( (lv_condition_20_0= ruleValue ) )
                            {
                            // InternalKim.g:3634:5: ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_18= 'if' | ( (lv_conditionNegative_19_0= 'unless' ) ) ) )
                            // InternalKim.g:3635:6: ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_18= 'if' | ( (lv_conditionNegative_19_0= 'unless' ) ) )
                            {
                            // InternalKim.g:3645:6: (otherlv_18= 'if' | ( (lv_conditionNegative_19_0= 'unless' ) ) )
                            int alt85=2;
                            int LA85_0 = input.LA(1);

                            if ( (LA85_0==44) ) {
                                alt85=1;
                            }
                            else if ( (LA85_0==45) ) {
                                alt85=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 85, 0, input);

                                throw nvae;
                            }
                            switch (alt85) {
                                case 1 :
                                    // InternalKim.g:3646:7: otherlv_18= 'if'
                                    {
                                    otherlv_18=(Token)match(input,44,FOLLOW_12); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(otherlv_18, grammarAccess.getActionAccess().getIfKeyword_2_3_0_0_0());
                                      						
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:3651:7: ( (lv_conditionNegative_19_0= 'unless' ) )
                                    {
                                    // InternalKim.g:3651:7: ( (lv_conditionNegative_19_0= 'unless' ) )
                                    // InternalKim.g:3652:8: (lv_conditionNegative_19_0= 'unless' )
                                    {
                                    // InternalKim.g:3652:8: (lv_conditionNegative_19_0= 'unless' )
                                    // InternalKim.g:3653:9: lv_conditionNegative_19_0= 'unless'
                                    {
                                    lv_conditionNegative_19_0=(Token)match(input,45,FOLLOW_12); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_conditionNegative_19_0, grammarAccess.getActionAccess().getConditionNegativeUnlessKeyword_2_3_0_0_1_0());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getActionRule());
                                      									}
                                      									setWithLastConsumed(current, "conditionNegative", true, "unless");
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }

                            // InternalKim.g:3667:5: ( (lv_condition_20_0= ruleValue ) )
                            // InternalKim.g:3668:6: (lv_condition_20_0= ruleValue )
                            {
                            // InternalKim.g:3668:6: (lv_condition_20_0= ruleValue )
                            // InternalKim.g:3669:7: lv_condition_20_0= ruleValue
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getActionAccess().getConditionValueParserRuleCall_2_3_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_condition_20_0=ruleValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getActionRule());
                              							}
                              							set(
                              								current,
                              								"condition",
                              								lv_condition_20_0,
                              								"org.integratedmodelling.kim.Kim.Value");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:3689:3: ( ( (lv_move_21_0= 'move' ) ) ( ( (lv_where_22_0= ruleValue ) ) | ( (lv_away_23_0= 'away' ) ) ) ( ( ( ruleValue ) )=> (lv_condition_24_0= ruleValue ) )? )
                    {
                    // InternalKim.g:3689:3: ( ( (lv_move_21_0= 'move' ) ) ( ( (lv_where_22_0= ruleValue ) ) | ( (lv_away_23_0= 'away' ) ) ) ( ( ( ruleValue ) )=> (lv_condition_24_0= ruleValue ) )? )
                    // InternalKim.g:3690:4: ( (lv_move_21_0= 'move' ) ) ( ( (lv_where_22_0= ruleValue ) ) | ( (lv_away_23_0= 'away' ) ) ) ( ( ( ruleValue ) )=> (lv_condition_24_0= ruleValue ) )?
                    {
                    // InternalKim.g:3690:4: ( (lv_move_21_0= 'move' ) )
                    // InternalKim.g:3691:5: (lv_move_21_0= 'move' )
                    {
                    // InternalKim.g:3691:5: (lv_move_21_0= 'move' )
                    // InternalKim.g:3692:6: lv_move_21_0= 'move'
                    {
                    lv_move_21_0=(Token)match(input,67,FOLLOW_56); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_move_21_0, grammarAccess.getActionAccess().getMoveMoveKeyword_3_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getActionRule());
                      						}
                      						setWithLastConsumed(current, "move", true, "move");
                      					
                    }

                    }


                    }

                    // InternalKim.g:3704:4: ( ( (lv_where_22_0= ruleValue ) ) | ( (lv_away_23_0= 'away' ) ) )
                    int alt87=2;
                    int LA87_0 = input.LA(1);

                    if ( ((LA87_0>=RULE_LOWERCASE_ID && LA87_0<=RULE_STRING)||(LA87_0>=RULE_EXPR && LA87_0<=RULE_ID)||(LA87_0>=27 && LA87_0<=29)||LA87_0==38||(LA87_0>=49 && LA87_0<=50)||LA87_0==216||(LA87_0>=251 && LA87_0<=252)) ) {
                        alt87=1;
                    }
                    else if ( (LA87_0==68) ) {
                        alt87=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 87, 0, input);

                        throw nvae;
                    }
                    switch (alt87) {
                        case 1 :
                            // InternalKim.g:3705:5: ( (lv_where_22_0= ruleValue ) )
                            {
                            // InternalKim.g:3705:5: ( (lv_where_22_0= ruleValue ) )
                            // InternalKim.g:3706:6: (lv_where_22_0= ruleValue )
                            {
                            // InternalKim.g:3706:6: (lv_where_22_0= ruleValue )
                            // InternalKim.g:3707:7: lv_where_22_0= ruleValue
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getActionAccess().getWhereValueParserRuleCall_3_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_57);
                            lv_where_22_0=ruleValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getActionRule());
                              							}
                              							set(
                              								current,
                              								"where",
                              								lv_where_22_0,
                              								"org.integratedmodelling.kim.Kim.Value");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:3725:5: ( (lv_away_23_0= 'away' ) )
                            {
                            // InternalKim.g:3725:5: ( (lv_away_23_0= 'away' ) )
                            // InternalKim.g:3726:6: (lv_away_23_0= 'away' )
                            {
                            // InternalKim.g:3726:6: (lv_away_23_0= 'away' )
                            // InternalKim.g:3727:7: lv_away_23_0= 'away'
                            {
                            lv_away_23_0=(Token)match(input,68,FOLLOW_57); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_away_23_0, grammarAccess.getActionAccess().getAwayAwayKeyword_3_1_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getActionRule());
                              							}
                              							setWithLastConsumed(current, "away", true, "away");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:3740:4: ( ( ( ruleValue ) )=> (lv_condition_24_0= ruleValue ) )?
                    int alt88=2;
                    alt88 = dfa88.predict(input);
                    switch (alt88) {
                        case 1 :
                            // InternalKim.g:3741:5: ( ( ruleValue ) )=> (lv_condition_24_0= ruleValue )
                            {
                            // InternalKim.g:3745:5: (lv_condition_24_0= ruleValue )
                            // InternalKim.g:3746:6: lv_condition_24_0= ruleValue
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getActionAccess().getConditionValueParserRuleCall_3_2_0());
                              					
                            }
                            pushFollow(FOLLOW_2);
                            lv_condition_24_0=ruleValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getActionRule());
                              						}
                              						set(
                              							current,
                              							"condition",
                              							lv_condition_24_0,
                              							"org.integratedmodelling.kim.Kim.Value");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAction"


    // $ANTLR start "entryRuleValueAssignment"
    // InternalKim.g:3768:1: entryRuleValueAssignment returns [EObject current=null] : iv_ruleValueAssignment= ruleValueAssignment EOF ;
    public final EObject entryRuleValueAssignment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValueAssignment = null;


        try {
            // InternalKim.g:3768:56: (iv_ruleValueAssignment= ruleValueAssignment EOF )
            // InternalKim.g:3769:2: iv_ruleValueAssignment= ruleValueAssignment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValueAssignmentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleValueAssignment=ruleValueAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValueAssignment; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValueAssignment"


    // $ANTLR start "ruleValueAssignment"
    // InternalKim.g:3775:1: ruleValueAssignment returns [EObject current=null] : ( ( ( (lv_target_0_0= RULE_LOWERCASE_ID ) )? otherlv_1= 'to' )? ( (lv_assignedValue_2_0= ruleComputableValue ) ) ) ;
    public final EObject ruleValueAssignment() throws RecognitionException {
        EObject current = null;

        Token lv_target_0_0=null;
        Token otherlv_1=null;
        EObject lv_assignedValue_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:3781:2: ( ( ( ( (lv_target_0_0= RULE_LOWERCASE_ID ) )? otherlv_1= 'to' )? ( (lv_assignedValue_2_0= ruleComputableValue ) ) ) )
            // InternalKim.g:3782:2: ( ( ( (lv_target_0_0= RULE_LOWERCASE_ID ) )? otherlv_1= 'to' )? ( (lv_assignedValue_2_0= ruleComputableValue ) ) )
            {
            // InternalKim.g:3782:2: ( ( ( (lv_target_0_0= RULE_LOWERCASE_ID ) )? otherlv_1= 'to' )? ( (lv_assignedValue_2_0= ruleComputableValue ) ) )
            // InternalKim.g:3783:3: ( ( (lv_target_0_0= RULE_LOWERCASE_ID ) )? otherlv_1= 'to' )? ( (lv_assignedValue_2_0= ruleComputableValue ) )
            {
            // InternalKim.g:3783:3: ( ( (lv_target_0_0= RULE_LOWERCASE_ID ) )? otherlv_1= 'to' )?
            int alt91=2;
            int LA91_0 = input.LA(1);

            if ( (LA91_0==RULE_LOWERCASE_ID) ) {
                int LA91_1 = input.LA(2);

                if ( (LA91_1==36) ) {
                    alt91=1;
                }
            }
            else if ( (LA91_0==36) ) {
                alt91=1;
            }
            switch (alt91) {
                case 1 :
                    // InternalKim.g:3784:4: ( (lv_target_0_0= RULE_LOWERCASE_ID ) )? otherlv_1= 'to'
                    {
                    // InternalKim.g:3784:4: ( (lv_target_0_0= RULE_LOWERCASE_ID ) )?
                    int alt90=2;
                    int LA90_0 = input.LA(1);

                    if ( (LA90_0==RULE_LOWERCASE_ID) ) {
                        alt90=1;
                    }
                    switch (alt90) {
                        case 1 :
                            // InternalKim.g:3785:5: (lv_target_0_0= RULE_LOWERCASE_ID )
                            {
                            // InternalKim.g:3785:5: (lv_target_0_0= RULE_LOWERCASE_ID )
                            // InternalKim.g:3786:6: lv_target_0_0= RULE_LOWERCASE_ID
                            {
                            lv_target_0_0=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_25); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_target_0_0, grammarAccess.getValueAssignmentAccess().getTargetLOWERCASE_IDTerminalRuleCall_0_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getValueAssignmentRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"target",
                              							lv_target_0_0,
                              							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                              					
                            }

                            }


                            }
                            break;

                    }

                    otherlv_1=(Token)match(input,36,FOLLOW_54); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getValueAssignmentAccess().getToKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:3807:3: ( (lv_assignedValue_2_0= ruleComputableValue ) )
            // InternalKim.g:3808:4: (lv_assignedValue_2_0= ruleComputableValue )
            {
            // InternalKim.g:3808:4: (lv_assignedValue_2_0= ruleComputableValue )
            // InternalKim.g:3809:5: lv_assignedValue_2_0= ruleComputableValue
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getValueAssignmentAccess().getAssignedValueComputableValueParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_assignedValue_2_0=ruleComputableValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getValueAssignmentRule());
              					}
              					set(
              						current,
              						"assignedValue",
              						lv_assignedValue_2_0,
              						"org.integratedmodelling.kim.Kim.ComputableValue");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValueAssignment"


    // $ANTLR start "entryRuleComputableValue"
    // InternalKim.g:3830:1: entryRuleComputableValue returns [EObject current=null] : iv_ruleComputableValue= ruleComputableValue EOF ;
    public final EObject entryRuleComputableValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleComputableValue = null;


        try {
            // InternalKim.g:3830:56: (iv_ruleComputableValue= ruleComputableValue EOF )
            // InternalKim.g:3831:2: iv_ruleComputableValue= ruleComputableValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getComputableValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleComputableValue=ruleComputableValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleComputableValue; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleComputableValue"


    // $ANTLR start "ruleComputableValue"
    // InternalKim.g:3837:1: ruleComputableValue returns [EObject current=null] : ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_6_0= ruleList ) ) | ( (lv_null_7_0= 'unknown' ) ) ) ;
    public final EObject ruleComputableValue() throws RecognitionException {
        EObject current = null;

        Token lv_expr_2_0=null;
        Token otherlv_3=null;
        Token lv_language_4_1=null;
        Token lv_language_4_2=null;
        Token lv_language_4_3=null;
        Token lv_id_5_1=null;
        Token lv_id_5_2=null;
        Token lv_id_5_3=null;
        Token lv_null_7_0=null;
        EObject lv_literal_0_0 = null;

        EObject lv_function_1_0 = null;

        EObject lv_list_6_0 = null;



        	enterRule();

        try {
            // InternalKim.g:3843:2: ( ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_6_0= ruleList ) ) | ( (lv_null_7_0= 'unknown' ) ) ) )
            // InternalKim.g:3844:2: ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_6_0= ruleList ) ) | ( (lv_null_7_0= 'unknown' ) ) )
            {
            // InternalKim.g:3844:2: ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_6_0= ruleList ) ) | ( (lv_null_7_0= 'unknown' ) ) )
            int alt95=6;
            alt95 = dfa95.predict(input);
            switch (alt95) {
                case 1 :
                    // InternalKim.g:3845:3: ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) )
                    {
                    // InternalKim.g:3845:3: ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) )
                    // InternalKim.g:3846:4: (lv_literal_0_0= ruleLiteralOrIdOrComma )
                    {
                    // InternalKim.g:3846:4: (lv_literal_0_0= ruleLiteralOrIdOrComma )
                    // InternalKim.g:3847:5: lv_literal_0_0= ruleLiteralOrIdOrComma
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getComputableValueAccess().getLiteralLiteralOrIdOrCommaParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_literal_0_0=ruleLiteralOrIdOrComma();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getComputableValueRule());
                      					}
                      					set(
                      						current,
                      						"literal",
                      						lv_literal_0_0,
                      						"org.integratedmodelling.kim.Kim.LiteralOrIdOrComma");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:3865:3: ( (lv_function_1_0= ruleFunction ) )
                    {
                    // InternalKim.g:3865:3: ( (lv_function_1_0= ruleFunction ) )
                    // InternalKim.g:3866:4: (lv_function_1_0= ruleFunction )
                    {
                    // InternalKim.g:3866:4: (lv_function_1_0= ruleFunction )
                    // InternalKim.g:3867:5: lv_function_1_0= ruleFunction
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getComputableValueAccess().getFunctionFunctionParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_function_1_0=ruleFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getComputableValueRule());
                      					}
                      					set(
                      						current,
                      						"function",
                      						lv_function_1_0,
                      						"org.integratedmodelling.kim.Kim.Function");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:3885:3: ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) ) )? )
                    {
                    // InternalKim.g:3885:3: ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) ) )? )
                    // InternalKim.g:3886:4: ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) ) )?
                    {
                    // InternalKim.g:3886:4: ( (lv_expr_2_0= RULE_EXPR ) )
                    // InternalKim.g:3887:5: (lv_expr_2_0= RULE_EXPR )
                    {
                    // InternalKim.g:3887:5: (lv_expr_2_0= RULE_EXPR )
                    // InternalKim.g:3888:6: lv_expr_2_0= RULE_EXPR
                    {
                    lv_expr_2_0=(Token)match(input,RULE_EXPR,FOLLOW_58); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_expr_2_0, grammarAccess.getComputableValueAccess().getExprEXPRTerminalRuleCall_2_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getComputableValueRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"expr",
                      							lv_expr_2_0,
                      							"org.integratedmodelling.kim.Kim.EXPR");
                      					
                    }

                    }


                    }

                    // InternalKim.g:3904:4: (otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) ) )?
                    int alt93=2;
                    int LA93_0 = input.LA(1);

                    if ( (LA93_0==48) ) {
                        alt93=1;
                    }
                    switch (alt93) {
                        case 1 :
                            // InternalKim.g:3905:5: otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) )
                            {
                            otherlv_3=(Token)match(input,48,FOLLOW_59); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_3, grammarAccess.getComputableValueAccess().getInKeyword_2_1_0());
                              				
                            }
                            // InternalKim.g:3909:5: ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) )
                            // InternalKim.g:3910:6: ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) )
                            {
                            // InternalKim.g:3910:6: ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) )
                            // InternalKim.g:3911:7: (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID )
                            {
                            // InternalKim.g:3911:7: (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID )
                            int alt92=3;
                            switch ( input.LA(1) ) {
                            case RULE_LOWERCASE_ID:
                                {
                                alt92=1;
                                }
                                break;
                            case RULE_UPPERCASE_ID:
                                {
                                alt92=2;
                                }
                                break;
                            case RULE_CAMELCASE_ID:
                                {
                                alt92=3;
                                }
                                break;
                            default:
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 92, 0, input);

                                throw nvae;
                            }

                            switch (alt92) {
                                case 1 :
                                    // InternalKim.g:3912:8: lv_language_4_1= RULE_LOWERCASE_ID
                                    {
                                    lv_language_4_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_language_4_1, grammarAccess.getComputableValueAccess().getLanguageLOWERCASE_IDTerminalRuleCall_2_1_1_0_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getComputableValueRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"language",
                                      									lv_language_4_1,
                                      									"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                                      							
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:3927:8: lv_language_4_2= RULE_UPPERCASE_ID
                                    {
                                    lv_language_4_2=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_language_4_2, grammarAccess.getComputableValueAccess().getLanguageUPPERCASE_IDTerminalRuleCall_2_1_1_0_1());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getComputableValueRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"language",
                                      									lv_language_4_2,
                                      									"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                                      							
                                    }

                                    }
                                    break;
                                case 3 :
                                    // InternalKim.g:3942:8: lv_language_4_3= RULE_CAMELCASE_ID
                                    {
                                    lv_language_4_3=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_language_4_3, grammarAccess.getComputableValueAccess().getLanguageCAMELCASE_IDTerminalRuleCall_2_1_1_0_2());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getComputableValueRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"language",
                                      									lv_language_4_3,
                                      									"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                                      							
                                    }

                                    }
                                    break;

                            }


                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:3962:3: ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) )
                    {
                    // InternalKim.g:3962:3: ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) )
                    // InternalKim.g:3963:4: ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) )
                    {
                    // InternalKim.g:3963:4: ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) )
                    // InternalKim.g:3964:5: (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID )
                    {
                    // InternalKim.g:3964:5: (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID )
                    int alt94=3;
                    switch ( input.LA(1) ) {
                    case RULE_LOWERCASE_ID:
                        {
                        alt94=1;
                        }
                        break;
                    case RULE_UPPERCASE_ID:
                        {
                        alt94=2;
                        }
                        break;
                    case RULE_CAMELCASE_ID:
                        {
                        alt94=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 94, 0, input);

                        throw nvae;
                    }

                    switch (alt94) {
                        case 1 :
                            // InternalKim.g:3965:6: lv_id_5_1= RULE_LOWERCASE_ID
                            {
                            lv_id_5_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_5_1, grammarAccess.getComputableValueAccess().getIdLOWERCASE_IDTerminalRuleCall_3_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getComputableValueRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_5_1,
                              							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:3980:6: lv_id_5_2= RULE_UPPERCASE_ID
                            {
                            lv_id_5_2=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_5_2, grammarAccess.getComputableValueAccess().getIdUPPERCASE_IDTerminalRuleCall_3_0_1());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getComputableValueRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_5_2,
                              							"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 3 :
                            // InternalKim.g:3995:6: lv_id_5_3= RULE_CAMELCASE_ID
                            {
                            lv_id_5_3=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_5_3, grammarAccess.getComputableValueAccess().getIdCAMELCASE_IDTerminalRuleCall_3_0_2());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getComputableValueRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_5_3,
                              							"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:4013:3: ( (lv_list_6_0= ruleList ) )
                    {
                    // InternalKim.g:4013:3: ( (lv_list_6_0= ruleList ) )
                    // InternalKim.g:4014:4: (lv_list_6_0= ruleList )
                    {
                    // InternalKim.g:4014:4: (lv_list_6_0= ruleList )
                    // InternalKim.g:4015:5: lv_list_6_0= ruleList
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getComputableValueAccess().getListListParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_list_6_0=ruleList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getComputableValueRule());
                      					}
                      					set(
                      						current,
                      						"list",
                      						lv_list_6_0,
                      						"org.integratedmodelling.kim.Kim.List");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:4033:3: ( (lv_null_7_0= 'unknown' ) )
                    {
                    // InternalKim.g:4033:3: ( (lv_null_7_0= 'unknown' ) )
                    // InternalKim.g:4034:4: (lv_null_7_0= 'unknown' )
                    {
                    // InternalKim.g:4034:4: (lv_null_7_0= 'unknown' )
                    // InternalKim.g:4035:5: lv_null_7_0= 'unknown'
                    {
                    lv_null_7_0=(Token)match(input,49,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_null_7_0, grammarAccess.getComputableValueAccess().getNullUnknownKeyword_5_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getComputableValueRule());
                      					}
                      					setWithLastConsumed(current, "null", true, "unknown");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleComputableValue"


    // $ANTLR start "entryRuleValueExecution"
    // InternalKim.g:4051:1: entryRuleValueExecution returns [EObject current=null] : iv_ruleValueExecution= ruleValueExecution EOF ;
    public final EObject entryRuleValueExecution() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValueExecution = null;


        try {
            // InternalKim.g:4051:55: (iv_ruleValueExecution= ruleValueExecution EOF )
            // InternalKim.g:4052:2: iv_ruleValueExecution= ruleValueExecution EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValueExecutionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleValueExecution=ruleValueExecution();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValueExecution; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValueExecution"


    // $ANTLR start "ruleValueExecution"
    // InternalKim.g:4058:1: ruleValueExecution returns [EObject current=null] : ( ( (lv_execValue_0_0= ruleExecutableValue ) ) (otherlv_1= 'for' ( (lv_target_2_0= RULE_LOWERCASE_ID ) ) )? ) ;
    public final EObject ruleValueExecution() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_target_2_0=null;
        EObject lv_execValue_0_0 = null;



        	enterRule();

        try {
            // InternalKim.g:4064:2: ( ( ( (lv_execValue_0_0= ruleExecutableValue ) ) (otherlv_1= 'for' ( (lv_target_2_0= RULE_LOWERCASE_ID ) ) )? ) )
            // InternalKim.g:4065:2: ( ( (lv_execValue_0_0= ruleExecutableValue ) ) (otherlv_1= 'for' ( (lv_target_2_0= RULE_LOWERCASE_ID ) ) )? )
            {
            // InternalKim.g:4065:2: ( ( (lv_execValue_0_0= ruleExecutableValue ) ) (otherlv_1= 'for' ( (lv_target_2_0= RULE_LOWERCASE_ID ) ) )? )
            // InternalKim.g:4066:3: ( (lv_execValue_0_0= ruleExecutableValue ) ) (otherlv_1= 'for' ( (lv_target_2_0= RULE_LOWERCASE_ID ) ) )?
            {
            // InternalKim.g:4066:3: ( (lv_execValue_0_0= ruleExecutableValue ) )
            // InternalKim.g:4067:4: (lv_execValue_0_0= ruleExecutableValue )
            {
            // InternalKim.g:4067:4: (lv_execValue_0_0= ruleExecutableValue )
            // InternalKim.g:4068:5: lv_execValue_0_0= ruleExecutableValue
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getValueExecutionAccess().getExecValueExecutableValueParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_60);
            lv_execValue_0_0=ruleExecutableValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getValueExecutionRule());
              					}
              					set(
              						current,
              						"execValue",
              						lv_execValue_0_0,
              						"org.integratedmodelling.kim.Kim.ExecutableValue");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:4085:3: (otherlv_1= 'for' ( (lv_target_2_0= RULE_LOWERCASE_ID ) ) )?
            int alt96=2;
            int LA96_0 = input.LA(1);

            if ( (LA96_0==69) ) {
                alt96=1;
            }
            switch (alt96) {
                case 1 :
                    // InternalKim.g:4086:4: otherlv_1= 'for' ( (lv_target_2_0= RULE_LOWERCASE_ID ) )
                    {
                    otherlv_1=(Token)match(input,69,FOLLOW_61); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getValueExecutionAccess().getForKeyword_1_0());
                      			
                    }
                    // InternalKim.g:4090:4: ( (lv_target_2_0= RULE_LOWERCASE_ID ) )
                    // InternalKim.g:4091:5: (lv_target_2_0= RULE_LOWERCASE_ID )
                    {
                    // InternalKim.g:4091:5: (lv_target_2_0= RULE_LOWERCASE_ID )
                    // InternalKim.g:4092:6: lv_target_2_0= RULE_LOWERCASE_ID
                    {
                    lv_target_2_0=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_target_2_0, grammarAccess.getValueExecutionAccess().getTargetLOWERCASE_IDTerminalRuleCall_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getValueExecutionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"target",
                      							lv_target_2_0,
                      							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValueExecution"


    // $ANTLR start "entryRuleExecutableValue"
    // InternalKim.g:4113:1: entryRuleExecutableValue returns [EObject current=null] : iv_ruleExecutableValue= ruleExecutableValue EOF ;
    public final EObject entryRuleExecutableValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExecutableValue = null;


        try {
            // InternalKim.g:4113:56: (iv_ruleExecutableValue= ruleExecutableValue EOF )
            // InternalKim.g:4114:2: iv_ruleExecutableValue= ruleExecutableValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExecutableValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExecutableValue=ruleExecutableValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExecutableValue; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExecutableValue"


    // $ANTLR start "ruleExecutableValue"
    // InternalKim.g:4120:1: ruleExecutableValue returns [EObject current=null] : ( ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_expr_1_0= RULE_EXPR ) ) (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( ( (lv_urn_4_1= ruleUrnId | lv_urn_4_2= RULE_STRING ) ) ) ) ( (otherlv_5= 'if' | ( (lv_conditionNegated_6_0= 'unless' ) ) ) ( (lv_condition_7_0= ruleValue ) ) )? ) ;
    public final EObject ruleExecutableValue() throws RecognitionException {
        EObject current = null;

        Token lv_expr_1_0=null;
        Token otherlv_2=null;
        Token lv_language_3_1=null;
        Token lv_language_3_2=null;
        Token lv_language_3_3=null;
        Token lv_urn_4_2=null;
        Token otherlv_5=null;
        Token lv_conditionNegated_6_0=null;
        EObject lv_function_0_0 = null;

        AntlrDatatypeRuleToken lv_urn_4_1 = null;

        EObject lv_condition_7_0 = null;



        	enterRule();

        try {
            // InternalKim.g:4126:2: ( ( ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_expr_1_0= RULE_EXPR ) ) (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( ( (lv_urn_4_1= ruleUrnId | lv_urn_4_2= RULE_STRING ) ) ) ) ( (otherlv_5= 'if' | ( (lv_conditionNegated_6_0= 'unless' ) ) ) ( (lv_condition_7_0= ruleValue ) ) )? ) )
            // InternalKim.g:4127:2: ( ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_expr_1_0= RULE_EXPR ) ) (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( ( (lv_urn_4_1= ruleUrnId | lv_urn_4_2= RULE_STRING ) ) ) ) ( (otherlv_5= 'if' | ( (lv_conditionNegated_6_0= 'unless' ) ) ) ( (lv_condition_7_0= ruleValue ) ) )? )
            {
            // InternalKim.g:4127:2: ( ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_expr_1_0= RULE_EXPR ) ) (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( ( (lv_urn_4_1= ruleUrnId | lv_urn_4_2= RULE_STRING ) ) ) ) ( (otherlv_5= 'if' | ( (lv_conditionNegated_6_0= 'unless' ) ) ) ( (lv_condition_7_0= ruleValue ) ) )? )
            // InternalKim.g:4128:3: ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_expr_1_0= RULE_EXPR ) ) (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( ( (lv_urn_4_1= ruleUrnId | lv_urn_4_2= RULE_STRING ) ) ) ) ( (otherlv_5= 'if' | ( (lv_conditionNegated_6_0= 'unless' ) ) ) ( (lv_condition_7_0= ruleValue ) ) )?
            {
            // InternalKim.g:4128:3: ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_expr_1_0= RULE_EXPR ) ) (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( ( (lv_urn_4_1= ruleUrnId | lv_urn_4_2= RULE_STRING ) ) ) )
            int alt100=3;
            alt100 = dfa100.predict(input);
            switch (alt100) {
                case 1 :
                    // InternalKim.g:4129:4: ( (lv_function_0_0= ruleFunction ) )
                    {
                    // InternalKim.g:4129:4: ( (lv_function_0_0= ruleFunction ) )
                    // InternalKim.g:4130:5: (lv_function_0_0= ruleFunction )
                    {
                    // InternalKim.g:4130:5: (lv_function_0_0= ruleFunction )
                    // InternalKim.g:4131:6: lv_function_0_0= ruleFunction
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExecutableValueAccess().getFunctionFunctionParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_62);
                    lv_function_0_0=ruleFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExecutableValueRule());
                      						}
                      						set(
                      							current,
                      							"function",
                      							lv_function_0_0,
                      							"org.integratedmodelling.kim.Kim.Function");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:4149:4: ( ( (lv_expr_1_0= RULE_EXPR ) ) (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )? )
                    {
                    // InternalKim.g:4149:4: ( ( (lv_expr_1_0= RULE_EXPR ) ) (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )? )
                    // InternalKim.g:4150:5: ( (lv_expr_1_0= RULE_EXPR ) ) (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )?
                    {
                    // InternalKim.g:4150:5: ( (lv_expr_1_0= RULE_EXPR ) )
                    // InternalKim.g:4151:6: (lv_expr_1_0= RULE_EXPR )
                    {
                    // InternalKim.g:4151:6: (lv_expr_1_0= RULE_EXPR )
                    // InternalKim.g:4152:7: lv_expr_1_0= RULE_EXPR
                    {
                    lv_expr_1_0=(Token)match(input,RULE_EXPR,FOLLOW_63); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_expr_1_0, grammarAccess.getExecutableValueAccess().getExprEXPRTerminalRuleCall_0_1_0_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getExecutableValueRule());
                      							}
                      							setWithLastConsumed(
                      								current,
                      								"expr",
                      								lv_expr_1_0,
                      								"org.integratedmodelling.kim.Kim.EXPR");
                      						
                    }

                    }


                    }

                    // InternalKim.g:4168:5: (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )?
                    int alt98=2;
                    int LA98_0 = input.LA(1);

                    if ( (LA98_0==48) ) {
                        alt98=1;
                    }
                    switch (alt98) {
                        case 1 :
                            // InternalKim.g:4169:6: otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) )
                            {
                            otherlv_2=(Token)match(input,48,FOLLOW_59); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_2, grammarAccess.getExecutableValueAccess().getInKeyword_0_1_1_0());
                              					
                            }
                            // InternalKim.g:4173:6: ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) )
                            // InternalKim.g:4174:7: ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) )
                            {
                            // InternalKim.g:4174:7: ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) )
                            // InternalKim.g:4175:8: (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID )
                            {
                            // InternalKim.g:4175:8: (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID )
                            int alt97=3;
                            switch ( input.LA(1) ) {
                            case RULE_LOWERCASE_ID:
                                {
                                alt97=1;
                                }
                                break;
                            case RULE_UPPERCASE_ID:
                                {
                                alt97=2;
                                }
                                break;
                            case RULE_CAMELCASE_ID:
                                {
                                alt97=3;
                                }
                                break;
                            default:
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 97, 0, input);

                                throw nvae;
                            }

                            switch (alt97) {
                                case 1 :
                                    // InternalKim.g:4176:9: lv_language_3_1= RULE_LOWERCASE_ID
                                    {
                                    lv_language_3_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_62); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_language_3_1, grammarAccess.getExecutableValueAccess().getLanguageLOWERCASE_IDTerminalRuleCall_0_1_1_1_0_0());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getExecutableValueRule());
                                      									}
                                      									setWithLastConsumed(
                                      										current,
                                      										"language",
                                      										lv_language_3_1,
                                      										"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                                      								
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:4191:9: lv_language_3_2= RULE_UPPERCASE_ID
                                    {
                                    lv_language_3_2=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_62); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_language_3_2, grammarAccess.getExecutableValueAccess().getLanguageUPPERCASE_IDTerminalRuleCall_0_1_1_1_0_1());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getExecutableValueRule());
                                      									}
                                      									setWithLastConsumed(
                                      										current,
                                      										"language",
                                      										lv_language_3_2,
                                      										"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                                      								
                                    }

                                    }
                                    break;
                                case 3 :
                                    // InternalKim.g:4206:9: lv_language_3_3= RULE_CAMELCASE_ID
                                    {
                                    lv_language_3_3=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_62); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_language_3_3, grammarAccess.getExecutableValueAccess().getLanguageCAMELCASE_IDTerminalRuleCall_0_1_1_1_0_2());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getExecutableValueRule());
                                      									}
                                      									setWithLastConsumed(
                                      										current,
                                      										"language",
                                      										lv_language_3_3,
                                      										"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                                      								
                                    }

                                    }
                                    break;

                            }


                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:4226:4: ( ( (lv_urn_4_1= ruleUrnId | lv_urn_4_2= RULE_STRING ) ) )
                    {
                    // InternalKim.g:4226:4: ( ( (lv_urn_4_1= ruleUrnId | lv_urn_4_2= RULE_STRING ) ) )
                    // InternalKim.g:4227:5: ( (lv_urn_4_1= ruleUrnId | lv_urn_4_2= RULE_STRING ) )
                    {
                    // InternalKim.g:4227:5: ( (lv_urn_4_1= ruleUrnId | lv_urn_4_2= RULE_STRING ) )
                    // InternalKim.g:4228:6: (lv_urn_4_1= ruleUrnId | lv_urn_4_2= RULE_STRING )
                    {
                    // InternalKim.g:4228:6: (lv_urn_4_1= ruleUrnId | lv_urn_4_2= RULE_STRING )
                    int alt99=2;
                    int LA99_0 = input.LA(1);

                    if ( ((LA99_0>=RULE_LOWERCASE_ID && LA99_0<=RULE_UPPERCASE_ID)||LA99_0==RULE_LOWERCASE_DASHID||LA99_0==105) ) {
                        alt99=1;
                    }
                    else if ( (LA99_0==RULE_STRING) ) {
                        alt99=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 99, 0, input);

                        throw nvae;
                    }
                    switch (alt99) {
                        case 1 :
                            // InternalKim.g:4229:7: lv_urn_4_1= ruleUrnId
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getExecutableValueAccess().getUrnUrnIdParserRuleCall_0_2_0_0());
                              						
                            }
                            pushFollow(FOLLOW_62);
                            lv_urn_4_1=ruleUrnId();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getExecutableValueRule());
                              							}
                              							set(
                              								current,
                              								"urn",
                              								lv_urn_4_1,
                              								"org.integratedmodelling.kim.Kim.UrnId");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:4245:7: lv_urn_4_2= RULE_STRING
                            {
                            lv_urn_4_2=(Token)match(input,RULE_STRING,FOLLOW_62); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_urn_4_2, grammarAccess.getExecutableValueAccess().getUrnSTRINGTerminalRuleCall_0_2_0_1());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getExecutableValueRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"urn",
                              								lv_urn_4_2,
                              								"org.eclipse.xtext.common.Terminals.STRING");
                              						
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;

            }

            // InternalKim.g:4263:3: ( (otherlv_5= 'if' | ( (lv_conditionNegated_6_0= 'unless' ) ) ) ( (lv_condition_7_0= ruleValue ) ) )?
            int alt102=2;
            alt102 = dfa102.predict(input);
            switch (alt102) {
                case 1 :
                    // InternalKim.g:4264:4: (otherlv_5= 'if' | ( (lv_conditionNegated_6_0= 'unless' ) ) ) ( (lv_condition_7_0= ruleValue ) )
                    {
                    // InternalKim.g:4264:4: (otherlv_5= 'if' | ( (lv_conditionNegated_6_0= 'unless' ) ) )
                    int alt101=2;
                    int LA101_0 = input.LA(1);

                    if ( (LA101_0==44) ) {
                        alt101=1;
                    }
                    else if ( (LA101_0==45) ) {
                        alt101=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 101, 0, input);

                        throw nvae;
                    }
                    switch (alt101) {
                        case 1 :
                            // InternalKim.g:4265:5: otherlv_5= 'if'
                            {
                            otherlv_5=(Token)match(input,44,FOLLOW_12); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_5, grammarAccess.getExecutableValueAccess().getIfKeyword_1_0_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:4270:5: ( (lv_conditionNegated_6_0= 'unless' ) )
                            {
                            // InternalKim.g:4270:5: ( (lv_conditionNegated_6_0= 'unless' ) )
                            // InternalKim.g:4271:6: (lv_conditionNegated_6_0= 'unless' )
                            {
                            // InternalKim.g:4271:6: (lv_conditionNegated_6_0= 'unless' )
                            // InternalKim.g:4272:7: lv_conditionNegated_6_0= 'unless'
                            {
                            lv_conditionNegated_6_0=(Token)match(input,45,FOLLOW_12); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_conditionNegated_6_0, grammarAccess.getExecutableValueAccess().getConditionNegatedUnlessKeyword_1_0_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getExecutableValueRule());
                              							}
                              							setWithLastConsumed(current, "conditionNegated", true, "unless");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:4285:4: ( (lv_condition_7_0= ruleValue ) )
                    // InternalKim.g:4286:5: (lv_condition_7_0= ruleValue )
                    {
                    // InternalKim.g:4286:5: (lv_condition_7_0= ruleValue )
                    // InternalKim.g:4287:6: lv_condition_7_0= ruleValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExecutableValueAccess().getConditionValueParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_condition_7_0=ruleValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExecutableValueRule());
                      						}
                      						set(
                      							current,
                      							"condition",
                      							lv_condition_7_0,
                      							"org.integratedmodelling.kim.Kim.Value");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExecutableValue"


    // $ANTLR start "entryRuleMODEL_TYPE"
    // InternalKim.g:4309:1: entryRuleMODEL_TYPE returns [String current=null] : iv_ruleMODEL_TYPE= ruleMODEL_TYPE EOF ;
    public final String entryRuleMODEL_TYPE() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleMODEL_TYPE = null;


        try {
            // InternalKim.g:4309:50: (iv_ruleMODEL_TYPE= ruleMODEL_TYPE EOF )
            // InternalKim.g:4310:2: iv_ruleMODEL_TYPE= ruleMODEL_TYPE EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMODEL_TYPERule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMODEL_TYPE=ruleMODEL_TYPE();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMODEL_TYPE.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMODEL_TYPE"


    // $ANTLR start "ruleMODEL_TYPE"
    // InternalKim.g:4316:1: ruleMODEL_TYPE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'model' | kw= 'learn' | kw= 'number' | kw= 'object' | kw= 'text' | kw= 'boolean' ) ;
    public final AntlrDatatypeRuleToken ruleMODEL_TYPE() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKim.g:4322:2: ( (kw= 'model' | kw= 'learn' | kw= 'number' | kw= 'object' | kw= 'text' | kw= 'boolean' ) )
            // InternalKim.g:4323:2: (kw= 'model' | kw= 'learn' | kw= 'number' | kw= 'object' | kw= 'text' | kw= 'boolean' )
            {
            // InternalKim.g:4323:2: (kw= 'model' | kw= 'learn' | kw= 'number' | kw= 'object' | kw= 'text' | kw= 'boolean' )
            int alt103=6;
            switch ( input.LA(1) ) {
            case 70:
                {
                alt103=1;
                }
                break;
            case 71:
                {
                alt103=2;
                }
                break;
            case 72:
                {
                alt103=3;
                }
                break;
            case 73:
                {
                alt103=4;
                }
                break;
            case 74:
                {
                alt103=5;
                }
                break;
            case 75:
                {
                alt103=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 103, 0, input);

                throw nvae;
            }

            switch (alt103) {
                case 1 :
                    // InternalKim.g:4324:3: kw= 'model'
                    {
                    kw=(Token)match(input,70,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMODEL_TYPEAccess().getModelKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:4330:3: kw= 'learn'
                    {
                    kw=(Token)match(input,71,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMODEL_TYPEAccess().getLearnKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:4336:3: kw= 'number'
                    {
                    kw=(Token)match(input,72,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMODEL_TYPEAccess().getNumberKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKim.g:4342:3: kw= 'object'
                    {
                    kw=(Token)match(input,73,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMODEL_TYPEAccess().getObjectKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalKim.g:4348:3: kw= 'text'
                    {
                    kw=(Token)match(input,74,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMODEL_TYPEAccess().getTextKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalKim.g:4354:3: kw= 'boolean'
                    {
                    kw=(Token)match(input,75,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMODEL_TYPEAccess().getBooleanKeyword_5());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMODEL_TYPE"


    // $ANTLR start "entryRuleVALUE_OPERATOR"
    // InternalKim.g:4363:1: entryRuleVALUE_OPERATOR returns [String current=null] : iv_ruleVALUE_OPERATOR= ruleVALUE_OPERATOR EOF ;
    public final String entryRuleVALUE_OPERATOR() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleVALUE_OPERATOR = null;


        try {
            // InternalKim.g:4363:54: (iv_ruleVALUE_OPERATOR= ruleVALUE_OPERATOR EOF )
            // InternalKim.g:4364:2: iv_ruleVALUE_OPERATOR= ruleVALUE_OPERATOR EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVALUE_OPERATORRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleVALUE_OPERATOR=ruleVALUE_OPERATOR();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVALUE_OPERATOR.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVALUE_OPERATOR"


    // $ANTLR start "ruleVALUE_OPERATOR"
    // InternalKim.g:4370:1: ruleVALUE_OPERATOR returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '>' | kw= '>=' | kw= '<=' | kw= '<' | kw= 'where' | kw= '==' | kw= '=' | kw= 'only' | kw= 'without' | kw= '!=' | kw= 'plus' | kw= 'minus' | kw= 'times' | kw= 'over' | kw= 'by' ) ;
    public final AntlrDatatypeRuleToken ruleVALUE_OPERATOR() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKim.g:4376:2: ( (kw= '>' | kw= '>=' | kw= '<=' | kw= '<' | kw= 'where' | kw= '==' | kw= '=' | kw= 'only' | kw= 'without' | kw= '!=' | kw= 'plus' | kw= 'minus' | kw= 'times' | kw= 'over' | kw= 'by' ) )
            // InternalKim.g:4377:2: (kw= '>' | kw= '>=' | kw= '<=' | kw= '<' | kw= 'where' | kw= '==' | kw= '=' | kw= 'only' | kw= 'without' | kw= '!=' | kw= 'plus' | kw= 'minus' | kw= 'times' | kw= 'over' | kw= 'by' )
            {
            // InternalKim.g:4377:2: (kw= '>' | kw= '>=' | kw= '<=' | kw= '<' | kw= 'where' | kw= '==' | kw= '=' | kw= 'only' | kw= 'without' | kw= '!=' | kw= 'plus' | kw= 'minus' | kw= 'times' | kw= 'over' | kw= 'by' )
            int alt104=15;
            switch ( input.LA(1) ) {
            case 76:
                {
                alt104=1;
                }
                break;
            case 77:
                {
                alt104=2;
                }
                break;
            case 78:
                {
                alt104=3;
                }
                break;
            case 79:
                {
                alt104=4;
                }
                break;
            case 80:
                {
                alt104=5;
                }
                break;
            case 81:
                {
                alt104=6;
                }
                break;
            case 82:
                {
                alt104=7;
                }
                break;
            case 83:
                {
                alt104=8;
                }
                break;
            case 84:
                {
                alt104=9;
                }
                break;
            case 85:
                {
                alt104=10;
                }
                break;
            case 86:
                {
                alt104=11;
                }
                break;
            case 87:
                {
                alt104=12;
                }
                break;
            case 88:
                {
                alt104=13;
                }
                break;
            case 55:
                {
                alt104=14;
                }
                break;
            case 89:
                {
                alt104=15;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 104, 0, input);

                throw nvae;
            }

            switch (alt104) {
                case 1 :
                    // InternalKim.g:4378:3: kw= '>'
                    {
                    kw=(Token)match(input,76,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getGreaterThanSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:4384:3: kw= '>='
                    {
                    kw=(Token)match(input,77,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getGreaterThanSignEqualsSignKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:4390:3: kw= '<='
                    {
                    kw=(Token)match(input,78,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getLessThanSignEqualsSignKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKim.g:4396:3: kw= '<'
                    {
                    kw=(Token)match(input,79,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getLessThanSignKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalKim.g:4402:3: kw= 'where'
                    {
                    kw=(Token)match(input,80,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getWhereKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalKim.g:4408:3: kw= '=='
                    {
                    kw=(Token)match(input,81,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getEqualsSignEqualsSignKeyword_5());
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalKim.g:4414:3: kw= '='
                    {
                    kw=(Token)match(input,82,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getEqualsSignKeyword_6());
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalKim.g:4420:3: kw= 'only'
                    {
                    kw=(Token)match(input,83,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getOnlyKeyword_7());
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalKim.g:4426:3: kw= 'without'
                    {
                    kw=(Token)match(input,84,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getWithoutKeyword_8());
                      		
                    }

                    }
                    break;
                case 10 :
                    // InternalKim.g:4432:3: kw= '!='
                    {
                    kw=(Token)match(input,85,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getExclamationMarkEqualsSignKeyword_9());
                      		
                    }

                    }
                    break;
                case 11 :
                    // InternalKim.g:4438:3: kw= 'plus'
                    {
                    kw=(Token)match(input,86,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getPlusKeyword_10());
                      		
                    }

                    }
                    break;
                case 12 :
                    // InternalKim.g:4444:3: kw= 'minus'
                    {
                    kw=(Token)match(input,87,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getMinusKeyword_11());
                      		
                    }

                    }
                    break;
                case 13 :
                    // InternalKim.g:4450:3: kw= 'times'
                    {
                    kw=(Token)match(input,88,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getTimesKeyword_12());
                      		
                    }

                    }
                    break;
                case 14 :
                    // InternalKim.g:4456:3: kw= 'over'
                    {
                    kw=(Token)match(input,55,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getOverKeyword_13());
                      		
                    }

                    }
                    break;
                case 15 :
                    // InternalKim.g:4462:3: kw= 'by'
                    {
                    kw=(Token)match(input,89,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getByKeyword_14());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVALUE_OPERATOR"


    // $ANTLR start "entryRuleNamespace"
    // InternalKim.g:4471:1: entryRuleNamespace returns [EObject current=null] : iv_ruleNamespace= ruleNamespace EOF ;
    public final EObject entryRuleNamespace() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNamespace = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 
        	grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 
        	grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7()
        	);

        try {
            // InternalKim.g:4477:2: (iv_ruleNamespace= ruleNamespace EOF )
            // InternalKim.g:4478:2: iv_ruleNamespace= ruleNamespace EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNamespaceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNamespace=ruleNamespace();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNamespace; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleNamespace"


    // $ANTLR start "ruleNamespace"
    // InternalKim.g:4487:1: ruleNamespace returns [EObject current=null] : ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? ( ( ( ( ({...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) ) ) )* ) ) ) (otherlv_6= 'namespace' | ( (lv_scenario_7_0= 'scenario' ) ) | ( (lv_worldviewBound_8_0= 'worldview' ) ) ) ( (lv_name_9_0= rulePathName ) ) ( (lv_docstring_10_0= RULE_STRING ) )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* ) ) ) (otherlv_46= 'parameters' ( (lv_parameters_47_0= ruleMap ) ) )? (otherlv_48= 'metadata' ( (lv_metadata_49_0= ruleMap ) ) )? otherlv_50= ';' ) ;
    public final EObject ruleNamespace() throws RecognitionException {
        EObject current = null;

        Token lv_projectPrivate_3_0=null;
        Token lv_private_4_0=null;
        Token lv_inactive_5_0=null;
        Token otherlv_6=null;
        Token lv_scenario_7_0=null;
        Token lv_worldviewBound_8_0=null;
        Token lv_docstring_10_0=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token lv_language_14_0=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token otherlv_23=null;
        Token otherlv_25=null;
        Token otherlv_27=null;
        Token otherlv_28=null;
        Token lv_rootDomain_29_0=null;
        Token otherlv_31=null;
        Token otherlv_32=null;
        Token otherlv_34=null;
        Token otherlv_36=null;
        Token otherlv_39=null;
        Token otherlv_40=null;
        Token otherlv_42=null;
        Token otherlv_44=null;
        Token otherlv_46=null;
        Token otherlv_48=null;
        Token otherlv_50=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_annotations_1_0 = null;

        AntlrDatatypeRuleToken lv_name_9_0 = null;

        EObject lv_imported_16_0 = null;

        EObject lv_imported_18_0 = null;

        EObject lv_owlImports_20_0 = null;

        EObject lv_owlImports_22_0 = null;

        EObject lv_coverage_24_0 = null;

        EObject lv_coverage_26_0 = null;

        EObject lv_domainConcept_30_0 = null;

        AntlrDatatypeRuleToken lv_disjointNamespaces_33_0 = null;

        AntlrDatatypeRuleToken lv_disjointNamespaces_35_0 = null;

        AntlrDatatypeRuleToken lv_version_37_0 = null;

        AntlrDatatypeRuleToken lv_lookupNamespace_41_0 = null;

        AntlrDatatypeRuleToken lv_blacklistNamespace_43_0 = null;

        EObject lv_weights_45_0 = null;

        EObject lv_parameters_47_0 = null;

        EObject lv_metadata_49_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 
        	grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 
        	grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7()
        	);

        try {
            // InternalKim.g:4498:2: ( ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? ( ( ( ( ({...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) ) ) )* ) ) ) (otherlv_6= 'namespace' | ( (lv_scenario_7_0= 'scenario' ) ) | ( (lv_worldviewBound_8_0= 'worldview' ) ) ) ( (lv_name_9_0= rulePathName ) ) ( (lv_docstring_10_0= RULE_STRING ) )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* ) ) ) (otherlv_46= 'parameters' ( (lv_parameters_47_0= ruleMap ) ) )? (otherlv_48= 'metadata' ( (lv_metadata_49_0= ruleMap ) ) )? otherlv_50= ';' ) )
            // InternalKim.g:4499:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? ( ( ( ( ({...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) ) ) )* ) ) ) (otherlv_6= 'namespace' | ( (lv_scenario_7_0= 'scenario' ) ) | ( (lv_worldviewBound_8_0= 'worldview' ) ) ) ( (lv_name_9_0= rulePathName ) ) ( (lv_docstring_10_0= RULE_STRING ) )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* ) ) ) (otherlv_46= 'parameters' ( (lv_parameters_47_0= ruleMap ) ) )? (otherlv_48= 'metadata' ( (lv_metadata_49_0= ruleMap ) ) )? otherlv_50= ';' )
            {
            // InternalKim.g:4499:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? ( ( ( ( ({...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) ) ) )* ) ) ) (otherlv_6= 'namespace' | ( (lv_scenario_7_0= 'scenario' ) ) | ( (lv_worldviewBound_8_0= 'worldview' ) ) ) ( (lv_name_9_0= rulePathName ) ) ( (lv_docstring_10_0= RULE_STRING ) )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* ) ) ) (otherlv_46= 'parameters' ( (lv_parameters_47_0= ruleMap ) ) )? (otherlv_48= 'metadata' ( (lv_metadata_49_0= ruleMap ) ) )? otherlv_50= ';' )
            // InternalKim.g:4500:3: ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? ( ( ( ( ({...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) ) ) )* ) ) ) (otherlv_6= 'namespace' | ( (lv_scenario_7_0= 'scenario' ) ) | ( (lv_worldviewBound_8_0= 'worldview' ) ) ) ( (lv_name_9_0= rulePathName ) ) ( (lv_docstring_10_0= RULE_STRING ) )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* ) ) ) (otherlv_46= 'parameters' ( (lv_parameters_47_0= ruleMap ) ) )? (otherlv_48= 'metadata' ( (lv_metadata_49_0= ruleMap ) ) )? otherlv_50= ';'
            {
            // InternalKim.g:4500:3: ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )?
            int alt106=2;
            int LA106_0 = input.LA(1);

            if ( (LA106_0==RULE_ANNOTATION_ID) ) {
                alt106=1;
            }
            switch (alt106) {
                case 1 :
                    // InternalKim.g:4501:4: ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )*
                    {
                    // InternalKim.g:4501:4: ( (lv_annotations_0_0= ruleAnnotation ) )
                    // InternalKim.g:4502:5: (lv_annotations_0_0= ruleAnnotation )
                    {
                    // InternalKim.g:4502:5: (lv_annotations_0_0= ruleAnnotation )
                    // InternalKim.g:4503:6: lv_annotations_0_0= ruleAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNamespaceAccess().getAnnotationsAnnotationParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_64);
                    lv_annotations_0_0=ruleAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNamespaceRule());
                      						}
                      						add(
                      							current,
                      							"annotations",
                      							lv_annotations_0_0,
                      							"org.integratedmodelling.kim.Kim.Annotation");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:4520:4: ( (lv_annotations_1_0= ruleAnnotation ) )*
                    loop105:
                    do {
                        int alt105=2;
                        int LA105_0 = input.LA(1);

                        if ( (LA105_0==RULE_ANNOTATION_ID) ) {
                            alt105=1;
                        }


                        switch (alt105) {
                    	case 1 :
                    	    // InternalKim.g:4521:5: (lv_annotations_1_0= ruleAnnotation )
                    	    {
                    	    // InternalKim.g:4521:5: (lv_annotations_1_0= ruleAnnotation )
                    	    // InternalKim.g:4522:6: lv_annotations_1_0= ruleAnnotation
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getNamespaceAccess().getAnnotationsAnnotationParserRuleCall_0_1_0());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_64);
                    	    lv_annotations_1_0=ruleAnnotation();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getNamespaceRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"annotations",
                    	      							lv_annotations_1_0,
                    	      							"org.integratedmodelling.kim.Kim.Annotation");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop105;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalKim.g:4540:3: ( ( ( ( ({...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) ) ) )* ) ) )
            // InternalKim.g:4541:4: ( ( ( ({...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) ) ) )* ) )
            {
            // InternalKim.g:4541:4: ( ( ( ({...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) ) ) )* ) )
            // InternalKim.g:4542:5: ( ( ({...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getNamespaceAccess().getUnorderedGroup_1());
            // InternalKim.g:4545:5: ( ( ({...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) ) ) )* )
            // InternalKim.g:4546:6: ( ({...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) ) ) )*
            {
            // InternalKim.g:4546:6: ( ({...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) ) ) )*
            loop108:
            do {
                int alt108=3;
                int LA108_0 = input.LA(1);

                if ( LA108_0 == 22 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 0) ) {
                    alt108=1;
                }
                else if ( LA108_0 == 23 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 0) ) {
                    alt108=1;
                }
                else if ( LA108_0 == 21 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 1) ) {
                    alt108=2;
                }


                switch (alt108) {
            	case 1 :
            	    // InternalKim.g:4547:4: ({...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) ) )
            	    {
            	    // InternalKim.g:4547:4: ({...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) ) )
            	    // InternalKim.g:4548:5: {...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 0)");
            	    }
            	    // InternalKim.g:4548:106: ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) )
            	    // InternalKim.g:4549:6: ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 0);
            	    // InternalKim.g:4552:9: ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) )
            	    // InternalKim.g:4552:10: {...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:4552:19: ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) )
            	    // InternalKim.g:4552:20: ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) )
            	    {
            	    // InternalKim.g:4552:20: ( (lv_projectPrivate_3_0= 'project' ) )?
            	    int alt107=2;
            	    int LA107_0 = input.LA(1);

            	    if ( (LA107_0==22) ) {
            	        alt107=1;
            	    }
            	    switch (alt107) {
            	        case 1 :
            	            // InternalKim.g:4553:10: (lv_projectPrivate_3_0= 'project' )
            	            {
            	            // InternalKim.g:4553:10: (lv_projectPrivate_3_0= 'project' )
            	            // InternalKim.g:4554:11: lv_projectPrivate_3_0= 'project'
            	            {
            	            lv_projectPrivate_3_0=(Token)match(input,22,FOLLOW_7); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(lv_projectPrivate_3_0, grammarAccess.getNamespaceAccess().getProjectPrivateProjectKeyword_1_0_0_0());
            	              										
            	            }
            	            if ( state.backtracking==0 ) {

            	              											if (current==null) {
            	              												current = createModelElement(grammarAccess.getNamespaceRule());
            	              											}
            	              											setWithLastConsumed(current, "projectPrivate", true, "project");
            	              										
            	            }

            	            }


            	            }
            	            break;

            	    }

            	    // InternalKim.g:4566:9: ( (lv_private_4_0= 'private' ) )
            	    // InternalKim.g:4567:10: (lv_private_4_0= 'private' )
            	    {
            	    // InternalKim.g:4567:10: (lv_private_4_0= 'private' )
            	    // InternalKim.g:4568:11: lv_private_4_0= 'private'
            	    {
            	    lv_private_4_0=(Token)match(input,23,FOLLOW_65); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_private_4_0, grammarAccess.getNamespaceAccess().getPrivatePrivateKeyword_1_0_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getNamespaceRule());
            	      											}
            	      											setWithLastConsumed(current, "private", true, "private");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKim.g:4586:4: ({...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) ) )
            	    {
            	    // InternalKim.g:4586:4: ({...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) ) )
            	    // InternalKim.g:4587:5: {...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 1)");
            	    }
            	    // InternalKim.g:4587:106: ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) )
            	    // InternalKim.g:4588:6: ({...}? => ( (lv_inactive_5_0= 'void' ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 1);
            	    // InternalKim.g:4591:9: ({...}? => ( (lv_inactive_5_0= 'void' ) ) )
            	    // InternalKim.g:4591:10: {...}? => ( (lv_inactive_5_0= 'void' ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:4591:19: ( (lv_inactive_5_0= 'void' ) )
            	    // InternalKim.g:4591:20: (lv_inactive_5_0= 'void' )
            	    {
            	    // InternalKim.g:4591:20: (lv_inactive_5_0= 'void' )
            	    // InternalKim.g:4592:10: lv_inactive_5_0= 'void'
            	    {
            	    lv_inactive_5_0=(Token)match(input,21,FOLLOW_65); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(lv_inactive_5_0, grammarAccess.getNamespaceAccess().getInactiveVoidKeyword_1_1_0());
            	      									
            	    }
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElement(grammarAccess.getNamespaceRule());
            	      										}
            	      										setWithLastConsumed(current, "inactive", true, "void");
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop108;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getNamespaceAccess().getUnorderedGroup_1());

            }

            // InternalKim.g:4616:3: (otherlv_6= 'namespace' | ( (lv_scenario_7_0= 'scenario' ) ) | ( (lv_worldviewBound_8_0= 'worldview' ) ) )
            int alt109=3;
            switch ( input.LA(1) ) {
            case 90:
                {
                alt109=1;
                }
                break;
            case 91:
                {
                alt109=2;
                }
                break;
            case 92:
                {
                alt109=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 109, 0, input);

                throw nvae;
            }

            switch (alt109) {
                case 1 :
                    // InternalKim.g:4617:4: otherlv_6= 'namespace'
                    {
                    otherlv_6=(Token)match(input,90,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getNamespaceAccess().getNamespaceKeyword_2_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:4622:4: ( (lv_scenario_7_0= 'scenario' ) )
                    {
                    // InternalKim.g:4622:4: ( (lv_scenario_7_0= 'scenario' ) )
                    // InternalKim.g:4623:5: (lv_scenario_7_0= 'scenario' )
                    {
                    // InternalKim.g:4623:5: (lv_scenario_7_0= 'scenario' )
                    // InternalKim.g:4624:6: lv_scenario_7_0= 'scenario'
                    {
                    lv_scenario_7_0=(Token)match(input,91,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_scenario_7_0, grammarAccess.getNamespaceAccess().getScenarioScenarioKeyword_2_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getNamespaceRule());
                      						}
                      						setWithLastConsumed(current, "scenario", true, "scenario");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:4637:4: ( (lv_worldviewBound_8_0= 'worldview' ) )
                    {
                    // InternalKim.g:4637:4: ( (lv_worldviewBound_8_0= 'worldview' ) )
                    // InternalKim.g:4638:5: (lv_worldviewBound_8_0= 'worldview' )
                    {
                    // InternalKim.g:4638:5: (lv_worldviewBound_8_0= 'worldview' )
                    // InternalKim.g:4639:6: lv_worldviewBound_8_0= 'worldview'
                    {
                    lv_worldviewBound_8_0=(Token)match(input,92,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_worldviewBound_8_0, grammarAccess.getNamespaceAccess().getWorldviewBoundWorldviewKeyword_2_2_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getNamespaceRule());
                      						}
                      						setWithLastConsumed(current, "worldviewBound", true, "worldview");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalKim.g:4652:3: ( (lv_name_9_0= rulePathName ) )
            // InternalKim.g:4653:4: (lv_name_9_0= rulePathName )
            {
            // InternalKim.g:4653:4: (lv_name_9_0= rulePathName )
            // InternalKim.g:4654:5: lv_name_9_0= rulePathName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getNamespaceAccess().getNamePathNameParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_66);
            lv_name_9_0=rulePathName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getNamespaceRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_9_0,
              						"org.integratedmodelling.kim.Kim.PathName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:4671:3: ( (lv_docstring_10_0= RULE_STRING ) )?
            int alt110=2;
            int LA110_0 = input.LA(1);

            if ( (LA110_0==RULE_STRING) ) {
                alt110=1;
            }
            switch (alt110) {
                case 1 :
                    // InternalKim.g:4672:4: (lv_docstring_10_0= RULE_STRING )
                    {
                    // InternalKim.g:4672:4: (lv_docstring_10_0= RULE_STRING )
                    // InternalKim.g:4673:5: lv_docstring_10_0= RULE_STRING
                    {
                    lv_docstring_10_0=(Token)match(input,RULE_STRING,FOLLOW_67); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_docstring_10_0, grammarAccess.getNamespaceAccess().getDocstringSTRINGTerminalRuleCall_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getNamespaceRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"docstring",
                      						lv_docstring_10_0,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:4689:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* ) ) )
            // InternalKim.g:4690:4: ( ( ( ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* ) )
            {
            // InternalKim.g:4690:4: ( ( ( ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* ) )
            // InternalKim.g:4691:5: ( ( ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());
            // InternalKim.g:4694:5: ( ( ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* )
            // InternalKim.g:4695:6: ( ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )*
            {
            // InternalKim.g:4695:6: ( ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )*
            loop120:
            do {
                int alt120=9;
                alt120 = dfa120.predict(input);
                switch (alt120) {
            	case 1 :
            	    // InternalKim.g:4696:4: ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) )
            	    {
            	    // InternalKim.g:4696:4: ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) )
            	    // InternalKim.g:4697:5: {...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 0)");
            	    }
            	    // InternalKim.g:4697:106: ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) )
            	    // InternalKim.g:4698:6: ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 0);
            	    // InternalKim.g:4701:9: ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) )
            	    // InternalKim.g:4701:10: {...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:4701:19: (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) )
            	    // InternalKim.g:4701:20: otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) )
            	    {
            	    otherlv_12=(Token)match(input,31,FOLLOW_68); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_12, grammarAccess.getNamespaceAccess().getUsingKeyword_5_0_0());
            	      								
            	    }
            	    otherlv_13=(Token)match(input,93,FOLLOW_69); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_13, grammarAccess.getNamespaceAccess().getLanguageKeyword_5_0_1());
            	      								
            	    }
            	    // InternalKim.g:4709:9: ( (lv_language_14_0= RULE_UPPERCASE_ID ) )
            	    // InternalKim.g:4710:10: (lv_language_14_0= RULE_UPPERCASE_ID )
            	    {
            	    // InternalKim.g:4710:10: (lv_language_14_0= RULE_UPPERCASE_ID )
            	    // InternalKim.g:4711:11: lv_language_14_0= RULE_UPPERCASE_ID
            	    {
            	    lv_language_14_0=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_67); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_language_14_0, grammarAccess.getNamespaceAccess().getLanguageUPPERCASE_IDTerminalRuleCall_5_0_2_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getNamespaceRule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"language",
            	      												lv_language_14_0,
            	      												"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKim.g:4733:4: ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:4733:4: ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) )
            	    // InternalKim.g:4734:5: {...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 1)");
            	    }
            	    // InternalKim.g:4734:106: ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) )
            	    // InternalKim.g:4735:6: ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 1);
            	    // InternalKim.g:4738:9: ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) )
            	    // InternalKim.g:4738:10: {...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:4738:19: (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* )
            	    // InternalKim.g:4738:20: otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )*
            	    {
            	    otherlv_15=(Token)match(input,31,FOLLOW_70); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_15, grammarAccess.getNamespaceAccess().getUsingKeyword_5_1_0());
            	      								
            	    }
            	    // InternalKim.g:4742:9: ( (lv_imported_16_0= ruleImport ) )
            	    // InternalKim.g:4743:10: (lv_imported_16_0= ruleImport )
            	    {
            	    // InternalKim.g:4743:10: (lv_imported_16_0= ruleImport )
            	    // InternalKim.g:4744:11: lv_imported_16_0= ruleImport
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getNamespaceAccess().getImportedImportParserRuleCall_5_1_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_71);
            	    lv_imported_16_0=ruleImport();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	      											}
            	      											add(
            	      												current,
            	      												"imported",
            	      												lv_imported_16_0,
            	      												"org.integratedmodelling.kim.Kim.Import");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:4761:9: ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )*
            	    loop111:
            	    do {
            	        int alt111=2;
            	        int LA111_0 = input.LA(1);

            	        if ( (LA111_0==27) ) {
            	            alt111=1;
            	        }


            	        switch (alt111) {
            	    	case 1 :
            	    	    // InternalKim.g:4762:10: ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) )
            	    	    {
            	    	    // InternalKim.g:4762:10: ( ( ',' )=>otherlv_17= ',' )
            	    	    // InternalKim.g:4763:11: ( ',' )=>otherlv_17= ','
            	    	    {
            	    	    otherlv_17=(Token)match(input,27,FOLLOW_70); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      											newLeafNode(otherlv_17, grammarAccess.getNamespaceAccess().getCommaKeyword_5_1_2_0());
            	    	      										
            	    	    }

            	    	    }

            	    	    // InternalKim.g:4769:10: ( (lv_imported_18_0= ruleImport ) )
            	    	    // InternalKim.g:4770:11: (lv_imported_18_0= ruleImport )
            	    	    {
            	    	    // InternalKim.g:4770:11: (lv_imported_18_0= ruleImport )
            	    	    // InternalKim.g:4771:12: lv_imported_18_0= ruleImport
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getNamespaceAccess().getImportedImportParserRuleCall_5_1_2_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_71);
            	    	    lv_imported_18_0=ruleImport();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"imported",
            	    	      													lv_imported_18_0,
            	    	      													"org.integratedmodelling.kim.Kim.Import");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop111;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalKim.g:4795:4: ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:4795:4: ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) )
            	    // InternalKim.g:4796:5: {...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 2)");
            	    }
            	    // InternalKim.g:4796:106: ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) )
            	    // InternalKim.g:4797:6: ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 2);
            	    // InternalKim.g:4800:9: ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) )
            	    // InternalKim.g:4800:10: {...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:4800:19: (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* )
            	    // InternalKim.g:4800:20: otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )*
            	    {
            	    otherlv_19=(Token)match(input,94,FOLLOW_72); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_19, grammarAccess.getNamespaceAccess().getImportsKeyword_5_2_0());
            	      								
            	    }
            	    // InternalKim.g:4804:9: ( (lv_owlImports_20_0= ruleOwlImport ) )
            	    // InternalKim.g:4805:10: (lv_owlImports_20_0= ruleOwlImport )
            	    {
            	    // InternalKim.g:4805:10: (lv_owlImports_20_0= ruleOwlImport )
            	    // InternalKim.g:4806:11: lv_owlImports_20_0= ruleOwlImport
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getNamespaceAccess().getOwlImportsOwlImportParserRuleCall_5_2_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_71);
            	    lv_owlImports_20_0=ruleOwlImport();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	      											}
            	      											add(
            	      												current,
            	      												"owlImports",
            	      												lv_owlImports_20_0,
            	      												"org.integratedmodelling.kim.Kim.OwlImport");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:4823:9: (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )*
            	    loop112:
            	    do {
            	        int alt112=2;
            	        int LA112_0 = input.LA(1);

            	        if ( (LA112_0==27) ) {
            	            alt112=1;
            	        }


            	        switch (alt112) {
            	    	case 1 :
            	    	    // InternalKim.g:4824:10: otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) )
            	    	    {
            	    	    otherlv_21=(Token)match(input,27,FOLLOW_72); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_21, grammarAccess.getNamespaceAccess().getCommaKeyword_5_2_2_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:4828:10: ( (lv_owlImports_22_0= ruleOwlImport ) )
            	    	    // InternalKim.g:4829:11: (lv_owlImports_22_0= ruleOwlImport )
            	    	    {
            	    	    // InternalKim.g:4829:11: (lv_owlImports_22_0= ruleOwlImport )
            	    	    // InternalKim.g:4830:12: lv_owlImports_22_0= ruleOwlImport
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getNamespaceAccess().getOwlImportsOwlImportParserRuleCall_5_2_2_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_71);
            	    	    lv_owlImports_22_0=ruleOwlImport();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"owlImports",
            	    	      													lv_owlImports_22_0,
            	    	      													"org.integratedmodelling.kim.Kim.OwlImport");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop112;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalKim.g:4854:4: ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:4854:4: ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) )
            	    // InternalKim.g:4855:5: {...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 3)");
            	    }
            	    // InternalKim.g:4855:106: ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) )
            	    // InternalKim.g:4856:6: ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 3);
            	    // InternalKim.g:4859:9: ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) )
            	    // InternalKim.g:4859:10: {...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:4859:19: (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* )
            	    // InternalKim.g:4859:20: otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )*
            	    {
            	    otherlv_23=(Token)match(input,95,FOLLOW_26); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_23, grammarAccess.getNamespaceAccess().getCoveringKeyword_5_3_0());
            	      								
            	    }
            	    // InternalKim.g:4863:9: ( (lv_coverage_24_0= ruleFunction ) )
            	    // InternalKim.g:4864:10: (lv_coverage_24_0= ruleFunction )
            	    {
            	    // InternalKim.g:4864:10: (lv_coverage_24_0= ruleFunction )
            	    // InternalKim.g:4865:11: lv_coverage_24_0= ruleFunction
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getNamespaceAccess().getCoverageFunctionParserRuleCall_5_3_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_71);
            	    lv_coverage_24_0=ruleFunction();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	      											}
            	      											add(
            	      												current,
            	      												"coverage",
            	      												lv_coverage_24_0,
            	      												"org.integratedmodelling.kim.Kim.Function");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:4882:9: ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )*
            	    loop113:
            	    do {
            	        int alt113=2;
            	        int LA113_0 = input.LA(1);

            	        if ( (LA113_0==27) ) {
            	            alt113=1;
            	        }


            	        switch (alt113) {
            	    	case 1 :
            	    	    // InternalKim.g:4883:10: ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) )
            	    	    {
            	    	    // InternalKim.g:4883:10: ( ( ',' )=>otherlv_25= ',' )
            	    	    // InternalKim.g:4884:11: ( ',' )=>otherlv_25= ','
            	    	    {
            	    	    otherlv_25=(Token)match(input,27,FOLLOW_26); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      											newLeafNode(otherlv_25, grammarAccess.getNamespaceAccess().getCommaKeyword_5_3_2_0());
            	    	      										
            	    	    }

            	    	    }

            	    	    // InternalKim.g:4890:10: ( (lv_coverage_26_0= ruleFunction ) )
            	    	    // InternalKim.g:4891:11: (lv_coverage_26_0= ruleFunction )
            	    	    {
            	    	    // InternalKim.g:4891:11: (lv_coverage_26_0= ruleFunction )
            	    	    // InternalKim.g:4892:12: lv_coverage_26_0= ruleFunction
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getNamespaceAccess().getCoverageFunctionParserRuleCall_5_3_2_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_71);
            	    	    lv_coverage_26_0=ruleFunction();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"coverage",
            	    	      													lv_coverage_26_0,
            	    	      													"org.integratedmodelling.kim.Kim.Function");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop113;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalKim.g:4916:4: ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) )
            	    {
            	    // InternalKim.g:4916:4: ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) )
            	    // InternalKim.g:4917:5: {...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 4) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 4)");
            	    }
            	    // InternalKim.g:4917:106: ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) )
            	    // InternalKim.g:4918:6: ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 4);
            	    // InternalKim.g:4921:9: ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) )
            	    // InternalKim.g:4921:10: {...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:4921:19: (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) )
            	    // InternalKim.g:4921:20: otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) )
            	    {
            	    otherlv_27=(Token)match(input,48,FOLLOW_73); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_27, grammarAccess.getNamespaceAccess().getInKeyword_5_4_0());
            	      								
            	    }
            	    otherlv_28=(Token)match(input,96,FOLLOW_74); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_28, grammarAccess.getNamespaceAccess().getDomainKeyword_5_4_1());
            	      								
            	    }
            	    // InternalKim.g:4929:9: ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) )
            	    int alt114=2;
            	    int LA114_0 = input.LA(1);

            	    if ( (LA114_0==97) ) {
            	        alt114=1;
            	    }
            	    else if ( ((LA114_0>=RULE_LOWERCASE_ID && LA114_0<=RULE_UPPERCASE_ID)||LA114_0==RULE_CAMELCASE_ID||LA114_0==RULE_LOWERCASE_DASHID||LA114_0==RULE_UPPERCASE_PATH||LA114_0==38||(LA114_0>=132 && LA114_0<=133)||(LA114_0>=141 && LA114_0<=142)||(LA114_0>=144 && LA114_0<=149)||(LA114_0>=151 && LA114_0<=163)) ) {
            	        alt114=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 114, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt114) {
            	        case 1 :
            	            // InternalKim.g:4930:10: ( (lv_rootDomain_29_0= 'root' ) )
            	            {
            	            // InternalKim.g:4930:10: ( (lv_rootDomain_29_0= 'root' ) )
            	            // InternalKim.g:4931:11: (lv_rootDomain_29_0= 'root' )
            	            {
            	            // InternalKim.g:4931:11: (lv_rootDomain_29_0= 'root' )
            	            // InternalKim.g:4932:12: lv_rootDomain_29_0= 'root'
            	            {
            	            lv_rootDomain_29_0=(Token)match(input,97,FOLLOW_67); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_rootDomain_29_0, grammarAccess.getNamespaceAccess().getRootDomainRootKeyword_5_4_2_0_0());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getNamespaceRule());
            	              												}
            	              												setWithLastConsumed(current, "rootDomain", true, "root");
            	              											
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:4945:10: ( (lv_domainConcept_30_0= ruleConcept ) )
            	            {
            	            // InternalKim.g:4945:10: ( (lv_domainConcept_30_0= ruleConcept ) )
            	            // InternalKim.g:4946:11: (lv_domainConcept_30_0= ruleConcept )
            	            {
            	            // InternalKim.g:4946:11: (lv_domainConcept_30_0= ruleConcept )
            	            // InternalKim.g:4947:12: lv_domainConcept_30_0= ruleConcept
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getNamespaceAccess().getDomainConceptConceptParserRuleCall_5_4_2_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_67);
            	            lv_domainConcept_30_0=ruleConcept();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	              												}
            	              												set(
            	              													current,
            	              													"domainConcept",
            	              													lv_domainConcept_30_0,
            	              													"org.integratedmodelling.kim.Kim.Concept");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalKim.g:4971:4: ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) ) ) ) )
            	    {
            	    // InternalKim.g:4971:4: ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) ) ) ) )
            	    // InternalKim.g:4972:5: {...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 5) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 5)");
            	    }
            	    // InternalKim.g:4972:106: ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) ) ) )
            	    // InternalKim.g:4973:6: ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 5);
            	    // InternalKim.g:4976:9: ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) ) )
            	    // InternalKim.g:4976:10: {...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:4976:19: (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) )
            	    // InternalKim.g:4976:20: otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* )
            	    {
            	    otherlv_31=(Token)match(input,98,FOLLOW_75); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_31, grammarAccess.getNamespaceAccess().getDisjointKeyword_5_5_0());
            	      								
            	    }
            	    otherlv_32=(Token)match(input,99,FOLLOW_26); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_32, grammarAccess.getNamespaceAccess().getWithKeyword_5_5_1());
            	      								
            	    }
            	    // InternalKim.g:4984:9: ( (lv_disjointNamespaces_33_0= rulePathName ) )
            	    // InternalKim.g:4985:10: (lv_disjointNamespaces_33_0= rulePathName )
            	    {
            	    // InternalKim.g:4985:10: (lv_disjointNamespaces_33_0= rulePathName )
            	    // InternalKim.g:4986:11: lv_disjointNamespaces_33_0= rulePathName
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getNamespaceAccess().getDisjointNamespacesPathNameParserRuleCall_5_5_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_76);
            	    lv_disjointNamespaces_33_0=rulePathName();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	      											}
            	      											add(
            	      												current,
            	      												"disjointNamespaces",
            	      												lv_disjointNamespaces_33_0,
            	      												"org.integratedmodelling.kim.Kim.PathName");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:5003:9: (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* )
            	    // InternalKim.g:5004:10: otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )*
            	    {
            	    otherlv_34=(Token)match(input,27,FOLLOW_77); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(otherlv_34, grammarAccess.getNamespaceAccess().getCommaKeyword_5_5_3_0());
            	      									
            	    }
            	    // InternalKim.g:5008:10: ( (lv_disjointNamespaces_35_0= rulePathName ) )*
            	    loop115:
            	    do {
            	        int alt115=2;
            	        int LA115_0 = input.LA(1);

            	        if ( ((LA115_0>=RULE_LOWERCASE_ID && LA115_0<=RULE_UPPERCASE_ID)||LA115_0==RULE_LOWERCASE_DASHID) ) {
            	            alt115=1;
            	        }


            	        switch (alt115) {
            	    	case 1 :
            	    	    // InternalKim.g:5009:11: (lv_disjointNamespaces_35_0= rulePathName )
            	    	    {
            	    	    // InternalKim.g:5009:11: (lv_disjointNamespaces_35_0= rulePathName )
            	    	    // InternalKim.g:5010:12: lv_disjointNamespaces_35_0= rulePathName
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getNamespaceAccess().getDisjointNamespacesPathNameParserRuleCall_5_5_3_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_77);
            	    	    lv_disjointNamespaces_35_0=rulePathName();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"disjointNamespaces",
            	    	      													lv_disjointNamespaces_35_0,
            	    	      													"org.integratedmodelling.kim.Kim.PathName");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop115;
            	        }
            	    } while (true);


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 7 :
            	    // InternalKim.g:5034:4: ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) )
            	    {
            	    // InternalKim.g:5034:4: ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) )
            	    // InternalKim.g:5035:5: {...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 6) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 6)");
            	    }
            	    // InternalKim.g:5035:106: ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) )
            	    // InternalKim.g:5036:6: ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 6);
            	    // InternalKim.g:5039:9: ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) )
            	    // InternalKim.g:5039:10: {...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:5039:19: (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) )
            	    // InternalKim.g:5039:20: otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) )
            	    {
            	    otherlv_36=(Token)match(input,100,FOLLOW_78); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_36, grammarAccess.getNamespaceAccess().getVersionKeyword_5_6_0());
            	      								
            	    }
            	    // InternalKim.g:5043:9: ( (lv_version_37_0= ruleVersionNumber ) )
            	    // InternalKim.g:5044:10: (lv_version_37_0= ruleVersionNumber )
            	    {
            	    // InternalKim.g:5044:10: (lv_version_37_0= ruleVersionNumber )
            	    // InternalKim.g:5045:11: lv_version_37_0= ruleVersionNumber
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getNamespaceAccess().getVersionVersionNumberParserRuleCall_5_6_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_67);
            	    lv_version_37_0=ruleVersionNumber();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	      											}
            	      											set(
            	      												current,
            	      												"version",
            	      												lv_version_37_0,
            	      												"org.integratedmodelling.kim.Kim.VersionNumber");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 8 :
            	    // InternalKim.g:5068:4: ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) ) ) ) )
            	    {
            	    // InternalKim.g:5068:4: ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) ) ) ) )
            	    // InternalKim.g:5069:5: {...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 7) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 7)");
            	    }
            	    // InternalKim.g:5069:106: ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) ) ) )
            	    // InternalKim.g:5070:6: ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 7);
            	    // InternalKim.g:5073:9: ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) ) )
            	    // InternalKim.g:5073:10: {...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:5073:19: ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) )
            	    // InternalKim.g:5073:20: ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) )
            	    {
            	    // InternalKim.g:5073:20: ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) )
            	    // InternalKim.g:5074:10: ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?)
            	    {
            	    getUnorderedGroupHelper().enter(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7());
            	    // InternalKim.g:5077:10: ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?)
            	    // InternalKim.g:5078:11: ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?
            	    {
            	    // InternalKim.g:5078:11: ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+
            	    int cnt119=0;
            	    loop119:
            	    do {
            	        int alt119=4;
            	        switch ( input.LA(1) ) {
            	        case 31:
            	            {
            	            int LA119_2 = input.LA(2);

            	            if ( synpred221_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 2) ) {
            	                alt119=3;
            	            }


            	            }
            	            break;
            	        case 101:
            	            {
            	            int LA119_3 = input.LA(2);

            	            if ( synpred218_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 0) ) {
            	                alt119=1;
            	            }


            	            }
            	            break;
            	        case 103:
            	            {
            	            int LA119_4 = input.LA(2);

            	            if ( synpred220_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 1) ) {
            	                alt119=2;
            	            }


            	            }
            	            break;

            	        }

            	        switch (alt119) {
            	    	case 1 :
            	    	    // InternalKim.g:5079:9: ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) )
            	    	    {
            	    	    // InternalKim.g:5079:9: ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) )
            	    	    // InternalKim.g:5080:10: {...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) )
            	    	    {
            	    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 0) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 0)");
            	    	    }
            	    	    // InternalKim.g:5080:113: ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) )
            	    	    // InternalKim.g:5081:11: ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) )
            	    	    {
            	    	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 0);
            	    	    // InternalKim.g:5084:14: ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) )
            	    	    // InternalKim.g:5084:15: {...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? )
            	    	    {
            	    	    if ( !((true)) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    	    }
            	    	    // InternalKim.g:5084:24: (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? )
            	    	    // InternalKim.g:5084:25: otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )?
            	    	    {
            	    	    otherlv_39=(Token)match(input,101,FOLLOW_79); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      														newLeafNode(otherlv_39, grammarAccess.getNamespaceAccess().getResolveKeyword_5_7_0_0());
            	    	      													
            	    	    }
            	    	    // InternalKim.g:5088:14: (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )?
            	    	    int alt117=2;
            	    	    int LA117_0 = input.LA(1);

            	    	    if ( (LA117_0==102) ) {
            	    	        alt117=1;
            	    	    }
            	    	    switch (alt117) {
            	    	        case 1 :
            	    	            // InternalKim.g:5089:15: otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )*
            	    	            {
            	    	            otherlv_40=(Token)match(input,102,FOLLOW_77); if (state.failed) return current;
            	    	            if ( state.backtracking==0 ) {

            	    	              															newLeafNode(otherlv_40, grammarAccess.getNamespaceAccess().getFromKeyword_5_7_0_1_0());
            	    	              														
            	    	            }
            	    	            // InternalKim.g:5093:15: ( (lv_lookupNamespace_41_0= rulePathName ) )*
            	    	            loop116:
            	    	            do {
            	    	                int alt116=2;
            	    	                int LA116_0 = input.LA(1);

            	    	                if ( ((LA116_0>=RULE_LOWERCASE_ID && LA116_0<=RULE_UPPERCASE_ID)||LA116_0==RULE_LOWERCASE_DASHID) ) {
            	    	                    alt116=1;
            	    	                }


            	    	                switch (alt116) {
            	    	            	case 1 :
            	    	            	    // InternalKim.g:5094:16: (lv_lookupNamespace_41_0= rulePathName )
            	    	            	    {
            	    	            	    // InternalKim.g:5094:16: (lv_lookupNamespace_41_0= rulePathName )
            	    	            	    // InternalKim.g:5095:17: lv_lookupNamespace_41_0= rulePathName
            	    	            	    {
            	    	            	    if ( state.backtracking==0 ) {

            	    	            	      																	newCompositeNode(grammarAccess.getNamespaceAccess().getLookupNamespacePathNameParserRuleCall_5_7_0_1_1_0());
            	    	            	      																
            	    	            	    }
            	    	            	    pushFollow(FOLLOW_77);
            	    	            	    lv_lookupNamespace_41_0=rulePathName();

            	    	            	    state._fsp--;
            	    	            	    if (state.failed) return current;
            	    	            	    if ( state.backtracking==0 ) {

            	    	            	      																	if (current==null) {
            	    	            	      																		current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	    	            	      																	}
            	    	            	      																	add(
            	    	            	      																		current,
            	    	            	      																		"lookupNamespace",
            	    	            	      																		lv_lookupNamespace_41_0,
            	    	            	      																		"org.integratedmodelling.kim.Kim.PathName");
            	    	            	      																	afterParserOrEnumRuleCall();
            	    	            	      																
            	    	            	    }

            	    	            	    }


            	    	            	    }
            	    	            	    break;

            	    	            	default :
            	    	            	    break loop116;
            	    	                }
            	    	            } while (true);


            	    	            }
            	    	            break;

            	    	    }


            	    	    }


            	    	    }

            	    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7());

            	    	    }


            	    	    }


            	    	    }
            	    	    break;
            	    	case 2 :
            	    	    // InternalKim.g:5119:9: ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) )
            	    	    {
            	    	    // InternalKim.g:5119:9: ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) )
            	    	    // InternalKim.g:5120:10: {...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) )
            	    	    {
            	    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 1) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 1)");
            	    	    }
            	    	    // InternalKim.g:5120:113: ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) )
            	    	    // InternalKim.g:5121:11: ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) )
            	    	    {
            	    	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 1);
            	    	    // InternalKim.g:5124:14: ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) )
            	    	    // InternalKim.g:5124:15: {...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* )
            	    	    {
            	    	    if ( !((true)) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    	    }
            	    	    // InternalKim.g:5124:24: (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* )
            	    	    // InternalKim.g:5124:25: otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )*
            	    	    {
            	    	    otherlv_42=(Token)match(input,103,FOLLOW_77); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      														newLeafNode(otherlv_42, grammarAccess.getNamespaceAccess().getOutsideKeyword_5_7_1_0());
            	    	      													
            	    	    }
            	    	    // InternalKim.g:5128:14: ( (lv_blacklistNamespace_43_0= rulePathName ) )*
            	    	    loop118:
            	    	    do {
            	    	        int alt118=2;
            	    	        int LA118_0 = input.LA(1);

            	    	        if ( ((LA118_0>=RULE_LOWERCASE_ID && LA118_0<=RULE_UPPERCASE_ID)||LA118_0==RULE_LOWERCASE_DASHID) ) {
            	    	            alt118=1;
            	    	        }


            	    	        switch (alt118) {
            	    	    	case 1 :
            	    	    	    // InternalKim.g:5129:15: (lv_blacklistNamespace_43_0= rulePathName )
            	    	    	    {
            	    	    	    // InternalKim.g:5129:15: (lv_blacklistNamespace_43_0= rulePathName )
            	    	    	    // InternalKim.g:5130:16: lv_blacklistNamespace_43_0= rulePathName
            	    	    	    {
            	    	    	    if ( state.backtracking==0 ) {

            	    	    	      																newCompositeNode(grammarAccess.getNamespaceAccess().getBlacklistNamespacePathNameParserRuleCall_5_7_1_1_0());
            	    	    	      															
            	    	    	    }
            	    	    	    pushFollow(FOLLOW_77);
            	    	    	    lv_blacklistNamespace_43_0=rulePathName();

            	    	    	    state._fsp--;
            	    	    	    if (state.failed) return current;
            	    	    	    if ( state.backtracking==0 ) {

            	    	    	      																if (current==null) {
            	    	    	      																	current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	    	    	      																}
            	    	    	      																add(
            	    	    	      																	current,
            	    	    	      																	"blacklistNamespace",
            	    	    	      																	lv_blacklistNamespace_43_0,
            	    	    	      																	"org.integratedmodelling.kim.Kim.PathName");
            	    	    	      																afterParserOrEnumRuleCall();
            	    	    	      															
            	    	    	    }

            	    	    	    }


            	    	    	    }
            	    	    	    break;

            	    	    	default :
            	    	    	    break loop118;
            	    	        }
            	    	    } while (true);


            	    	    }


            	    	    }

            	    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7());

            	    	    }


            	    	    }


            	    	    }
            	    	    break;
            	    	case 3 :
            	    	    // InternalKim.g:5153:9: ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) )
            	    	    {
            	    	    // InternalKim.g:5153:9: ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) )
            	    	    // InternalKim.g:5154:10: {...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) )
            	    	    {
            	    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 2) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 2)");
            	    	    }
            	    	    // InternalKim.g:5154:113: ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) )
            	    	    // InternalKim.g:5155:11: ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) )
            	    	    {
            	    	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 2);
            	    	    // InternalKim.g:5158:14: ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) )
            	    	    // InternalKim.g:5158:15: {...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) )
            	    	    {
            	    	    if ( !((true)) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    	    }
            	    	    // InternalKim.g:5158:24: (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) )
            	    	    // InternalKim.g:5158:25: otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) )
            	    	    {
            	    	    otherlv_44=(Token)match(input,31,FOLLOW_33); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      														newLeafNode(otherlv_44, grammarAccess.getNamespaceAccess().getUsingKeyword_5_7_2_0());
            	    	      													
            	    	    }
            	    	    // InternalKim.g:5162:14: ( (lv_weights_45_0= ruleMap ) )
            	    	    // InternalKim.g:5163:15: (lv_weights_45_0= ruleMap )
            	    	    {
            	    	    // InternalKim.g:5163:15: (lv_weights_45_0= ruleMap )
            	    	    // InternalKim.g:5164:16: lv_weights_45_0= ruleMap
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      																newCompositeNode(grammarAccess.getNamespaceAccess().getWeightsMapParserRuleCall_5_7_2_1_0());
            	    	      															
            	    	    }
            	    	    pushFollow(FOLLOW_67);
            	    	    lv_weights_45_0=ruleMap();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      																if (current==null) {
            	    	      																	current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	    	      																}
            	    	      																set(
            	    	      																	current,
            	    	      																	"weights",
            	    	      																	lv_weights_45_0,
            	    	      																	"org.integratedmodelling.kim.Kim.Map");
            	    	      																afterParserOrEnumRuleCall();
            	    	      															
            	    	    }

            	    	    }


            	    	    }


            	    	    }


            	    	    }

            	    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7());

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt119 >= 1 ) break loop119;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(119, input);
            	                throw eee;
            	        }
            	        cnt119++;
            	    } while (true);

            	    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7()) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canLeave(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7())");
            	    }

            	    }


            	    }

            	    getUnorderedGroupHelper().leave(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7());

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop120;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());

            }

            // InternalKim.g:5207:3: (otherlv_46= 'parameters' ( (lv_parameters_47_0= ruleMap ) ) )?
            int alt121=2;
            int LA121_0 = input.LA(1);

            if ( (LA121_0==104) ) {
                alt121=1;
            }
            switch (alt121) {
                case 1 :
                    // InternalKim.g:5208:4: otherlv_46= 'parameters' ( (lv_parameters_47_0= ruleMap ) )
                    {
                    otherlv_46=(Token)match(input,104,FOLLOW_33); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_46, grammarAccess.getNamespaceAccess().getParametersKeyword_6_0());
                      			
                    }
                    // InternalKim.g:5212:4: ( (lv_parameters_47_0= ruleMap ) )
                    // InternalKim.g:5213:5: (lv_parameters_47_0= ruleMap )
                    {
                    // InternalKim.g:5213:5: (lv_parameters_47_0= ruleMap )
                    // InternalKim.g:5214:6: lv_parameters_47_0= ruleMap
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNamespaceAccess().getParametersMapParserRuleCall_6_1_0());
                      					
                    }
                    pushFollow(FOLLOW_80);
                    lv_parameters_47_0=ruleMap();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNamespaceRule());
                      						}
                      						set(
                      							current,
                      							"parameters",
                      							lv_parameters_47_0,
                      							"org.integratedmodelling.kim.Kim.Map");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalKim.g:5232:3: (otherlv_48= 'metadata' ( (lv_metadata_49_0= ruleMap ) ) )?
            int alt122=2;
            int LA122_0 = input.LA(1);

            if ( (LA122_0==42) ) {
                alt122=1;
            }
            switch (alt122) {
                case 1 :
                    // InternalKim.g:5233:4: otherlv_48= 'metadata' ( (lv_metadata_49_0= ruleMap ) )
                    {
                    otherlv_48=(Token)match(input,42,FOLLOW_33); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_48, grammarAccess.getNamespaceAccess().getMetadataKeyword_7_0());
                      			
                    }
                    // InternalKim.g:5237:4: ( (lv_metadata_49_0= ruleMap ) )
                    // InternalKim.g:5238:5: (lv_metadata_49_0= ruleMap )
                    {
                    // InternalKim.g:5238:5: (lv_metadata_49_0= ruleMap )
                    // InternalKim.g:5239:6: lv_metadata_49_0= ruleMap
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNamespaceAccess().getMetadataMapParserRuleCall_7_1_0());
                      					
                    }
                    pushFollow(FOLLOW_4);
                    lv_metadata_49_0=ruleMap();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNamespaceRule());
                      						}
                      						set(
                      							current,
                      							"metadata",
                      							lv_metadata_49_0,
                      							"org.integratedmodelling.kim.Kim.Map");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_50=(Token)match(input,20,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_50, grammarAccess.getNamespaceAccess().getSemicolonKeyword_8());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleNamespace"


    // $ANTLR start "entryRuleOwlImport"
    // InternalKim.g:5268:1: entryRuleOwlImport returns [EObject current=null] : iv_ruleOwlImport= ruleOwlImport EOF ;
    public final EObject entryRuleOwlImport() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOwlImport = null;


        try {
            // InternalKim.g:5268:50: (iv_ruleOwlImport= ruleOwlImport EOF )
            // InternalKim.g:5269:2: iv_ruleOwlImport= ruleOwlImport EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOwlImportRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOwlImport=ruleOwlImport();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOwlImport; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOwlImport"


    // $ANTLR start "ruleOwlImport"
    // InternalKim.g:5275:1: ruleOwlImport returns [EObject current=null] : ( ( (lv_name_0_0= RULE_STRING ) ) (otherlv_1= 'as' ( (lv_prefix_2_0= RULE_LOWERCASE_ID ) ) ) ) ;
    public final EObject ruleOwlImport() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        Token lv_prefix_2_0=null;


        	enterRule();

        try {
            // InternalKim.g:5281:2: ( ( ( (lv_name_0_0= RULE_STRING ) ) (otherlv_1= 'as' ( (lv_prefix_2_0= RULE_LOWERCASE_ID ) ) ) ) )
            // InternalKim.g:5282:2: ( ( (lv_name_0_0= RULE_STRING ) ) (otherlv_1= 'as' ( (lv_prefix_2_0= RULE_LOWERCASE_ID ) ) ) )
            {
            // InternalKim.g:5282:2: ( ( (lv_name_0_0= RULE_STRING ) ) (otherlv_1= 'as' ( (lv_prefix_2_0= RULE_LOWERCASE_ID ) ) ) )
            // InternalKim.g:5283:3: ( (lv_name_0_0= RULE_STRING ) ) (otherlv_1= 'as' ( (lv_prefix_2_0= RULE_LOWERCASE_ID ) ) )
            {
            // InternalKim.g:5283:3: ( (lv_name_0_0= RULE_STRING ) )
            // InternalKim.g:5284:4: (lv_name_0_0= RULE_STRING )
            {
            // InternalKim.g:5284:4: (lv_name_0_0= RULE_STRING )
            // InternalKim.g:5285:5: lv_name_0_0= RULE_STRING
            {
            lv_name_0_0=(Token)match(input,RULE_STRING,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_0_0, grammarAccess.getOwlImportAccess().getNameSTRINGTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getOwlImportRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_0_0,
              						"org.eclipse.xtext.common.Terminals.STRING");
              				
            }

            }


            }

            // InternalKim.g:5301:3: (otherlv_1= 'as' ( (lv_prefix_2_0= RULE_LOWERCASE_ID ) ) )
            // InternalKim.g:5302:4: otherlv_1= 'as' ( (lv_prefix_2_0= RULE_LOWERCASE_ID ) )
            {
            otherlv_1=(Token)match(input,25,FOLLOW_61); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_1, grammarAccess.getOwlImportAccess().getAsKeyword_1_0());
              			
            }
            // InternalKim.g:5306:4: ( (lv_prefix_2_0= RULE_LOWERCASE_ID ) )
            // InternalKim.g:5307:5: (lv_prefix_2_0= RULE_LOWERCASE_ID )
            {
            // InternalKim.g:5307:5: (lv_prefix_2_0= RULE_LOWERCASE_ID )
            // InternalKim.g:5308:6: lv_prefix_2_0= RULE_LOWERCASE_ID
            {
            lv_prefix_2_0=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              						newLeafNode(lv_prefix_2_0, grammarAccess.getOwlImportAccess().getPrefixLOWERCASE_IDTerminalRuleCall_1_1_0());
              					
            }
            if ( state.backtracking==0 ) {

              						if (current==null) {
              							current = createModelElement(grammarAccess.getOwlImportRule());
              						}
              						setWithLastConsumed(
              							current,
              							"prefix",
              							lv_prefix_2_0,
              							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
              					
            }

            }


            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOwlImport"


    // $ANTLR start "entryRuleImport"
    // InternalKim.g:5329:1: entryRuleImport returns [EObject current=null] : iv_ruleImport= ruleImport EOF ;
    public final EObject entryRuleImport() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleImport = null;


        try {
            // InternalKim.g:5329:47: (iv_ruleImport= ruleImport EOF )
            // InternalKim.g:5330:2: iv_ruleImport= ruleImport EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImportRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleImport=ruleImport();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImport; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleImport"


    // $ANTLR start "ruleImport"
    // InternalKim.g:5336:1: ruleImport returns [EObject current=null] : ( ( ( ( (lv_imports_0_0= ruleList ) ) | ( (lv_star_1_0= '*' ) ) ) otherlv_2= 'from' )? ( (lv_name_3_0= rulePathName ) ) ) ;
    public final EObject ruleImport() throws RecognitionException {
        EObject current = null;

        Token lv_star_1_0=null;
        Token otherlv_2=null;
        EObject lv_imports_0_0 = null;

        AntlrDatatypeRuleToken lv_name_3_0 = null;



        	enterRule();

        try {
            // InternalKim.g:5342:2: ( ( ( ( ( (lv_imports_0_0= ruleList ) ) | ( (lv_star_1_0= '*' ) ) ) otherlv_2= 'from' )? ( (lv_name_3_0= rulePathName ) ) ) )
            // InternalKim.g:5343:2: ( ( ( ( (lv_imports_0_0= ruleList ) ) | ( (lv_star_1_0= '*' ) ) ) otherlv_2= 'from' )? ( (lv_name_3_0= rulePathName ) ) )
            {
            // InternalKim.g:5343:2: ( ( ( ( (lv_imports_0_0= ruleList ) ) | ( (lv_star_1_0= '*' ) ) ) otherlv_2= 'from' )? ( (lv_name_3_0= rulePathName ) ) )
            // InternalKim.g:5344:3: ( ( ( (lv_imports_0_0= ruleList ) ) | ( (lv_star_1_0= '*' ) ) ) otherlv_2= 'from' )? ( (lv_name_3_0= rulePathName ) )
            {
            // InternalKim.g:5344:3: ( ( ( (lv_imports_0_0= ruleList ) ) | ( (lv_star_1_0= '*' ) ) ) otherlv_2= 'from' )?
            int alt124=2;
            int LA124_0 = input.LA(1);

            if ( (LA124_0==38||LA124_0==40) ) {
                alt124=1;
            }
            switch (alt124) {
                case 1 :
                    // InternalKim.g:5345:4: ( ( (lv_imports_0_0= ruleList ) ) | ( (lv_star_1_0= '*' ) ) ) otherlv_2= 'from'
                    {
                    // InternalKim.g:5345:4: ( ( (lv_imports_0_0= ruleList ) ) | ( (lv_star_1_0= '*' ) ) )
                    int alt123=2;
                    int LA123_0 = input.LA(1);

                    if ( (LA123_0==38) ) {
                        alt123=1;
                    }
                    else if ( (LA123_0==40) ) {
                        alt123=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 123, 0, input);

                        throw nvae;
                    }
                    switch (alt123) {
                        case 1 :
                            // InternalKim.g:5346:5: ( (lv_imports_0_0= ruleList ) )
                            {
                            // InternalKim.g:5346:5: ( (lv_imports_0_0= ruleList ) )
                            // InternalKim.g:5347:6: (lv_imports_0_0= ruleList )
                            {
                            // InternalKim.g:5347:6: (lv_imports_0_0= ruleList )
                            // InternalKim.g:5348:7: lv_imports_0_0= ruleList
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getImportAccess().getImportsListParserRuleCall_0_0_0_0());
                              						
                            }
                            pushFollow(FOLLOW_81);
                            lv_imports_0_0=ruleList();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getImportRule());
                              							}
                              							set(
                              								current,
                              								"imports",
                              								lv_imports_0_0,
                              								"org.integratedmodelling.kim.Kim.List");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:5366:5: ( (lv_star_1_0= '*' ) )
                            {
                            // InternalKim.g:5366:5: ( (lv_star_1_0= '*' ) )
                            // InternalKim.g:5367:6: (lv_star_1_0= '*' )
                            {
                            // InternalKim.g:5367:6: (lv_star_1_0= '*' )
                            // InternalKim.g:5368:7: lv_star_1_0= '*'
                            {
                            lv_star_1_0=(Token)match(input,40,FOLLOW_81); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_star_1_0, grammarAccess.getImportAccess().getStarAsteriskKeyword_0_0_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getImportRule());
                              							}
                              							setWithLastConsumed(current, "star", true, "*");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    otherlv_2=(Token)match(input,102,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getImportAccess().getFromKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:5386:3: ( (lv_name_3_0= rulePathName ) )
            // InternalKim.g:5387:4: (lv_name_3_0= rulePathName )
            {
            // InternalKim.g:5387:4: (lv_name_3_0= rulePathName )
            // InternalKim.g:5388:5: lv_name_3_0= rulePathName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getImportAccess().getNamePathNameParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_name_3_0=rulePathName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getImportRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_3_0,
              						"org.integratedmodelling.kim.Kim.PathName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImport"


    // $ANTLR start "entryRuleUrnId"
    // InternalKim.g:5409:1: entryRuleUrnId returns [String current=null] : iv_ruleUrnId= ruleUrnId EOF ;
    public final String entryRuleUrnId() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleUrnId = null;


        try {
            // InternalKim.g:5409:45: (iv_ruleUrnId= ruleUrnId EOF )
            // InternalKim.g:5410:2: iv_ruleUrnId= ruleUrnId EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUrnIdRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUrnId=ruleUrnId();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUrnId.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUrnId"


    // $ANTLR start "ruleUrnId"
    // InternalKim.g:5416:1: ruleUrnId returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (kw= 'urn:klab:' )? this_PathName_1= rulePathName kw= ':' this_PathName_3= rulePathName kw= ':' this_PathName_5= rulePathName kw= ':' (this_Path_7= rulePath | this_INT_8= RULE_INT ) (kw= ':' this_VersionNumber_10= ruleVersionNumber )? (kw= '#' (this_Path_12= rulePath | this_UrnKvp_13= ruleUrnKvp ) (kw= '&' (this_Path_15= rulePath | this_UrnKvp_16= ruleUrnKvp ) )* )? ) ;
    public final AntlrDatatypeRuleToken ruleUrnId() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_INT_8=null;
        AntlrDatatypeRuleToken this_PathName_1 = null;

        AntlrDatatypeRuleToken this_PathName_3 = null;

        AntlrDatatypeRuleToken this_PathName_5 = null;

        AntlrDatatypeRuleToken this_Path_7 = null;

        AntlrDatatypeRuleToken this_VersionNumber_10 = null;

        AntlrDatatypeRuleToken this_Path_12 = null;

        AntlrDatatypeRuleToken this_UrnKvp_13 = null;

        AntlrDatatypeRuleToken this_Path_15 = null;

        AntlrDatatypeRuleToken this_UrnKvp_16 = null;



        	enterRule();

        try {
            // InternalKim.g:5422:2: ( ( (kw= 'urn:klab:' )? this_PathName_1= rulePathName kw= ':' this_PathName_3= rulePathName kw= ':' this_PathName_5= rulePathName kw= ':' (this_Path_7= rulePath | this_INT_8= RULE_INT ) (kw= ':' this_VersionNumber_10= ruleVersionNumber )? (kw= '#' (this_Path_12= rulePath | this_UrnKvp_13= ruleUrnKvp ) (kw= '&' (this_Path_15= rulePath | this_UrnKvp_16= ruleUrnKvp ) )* )? ) )
            // InternalKim.g:5423:2: ( (kw= 'urn:klab:' )? this_PathName_1= rulePathName kw= ':' this_PathName_3= rulePathName kw= ':' this_PathName_5= rulePathName kw= ':' (this_Path_7= rulePath | this_INT_8= RULE_INT ) (kw= ':' this_VersionNumber_10= ruleVersionNumber )? (kw= '#' (this_Path_12= rulePath | this_UrnKvp_13= ruleUrnKvp ) (kw= '&' (this_Path_15= rulePath | this_UrnKvp_16= ruleUrnKvp ) )* )? )
            {
            // InternalKim.g:5423:2: ( (kw= 'urn:klab:' )? this_PathName_1= rulePathName kw= ':' this_PathName_3= rulePathName kw= ':' this_PathName_5= rulePathName kw= ':' (this_Path_7= rulePath | this_INT_8= RULE_INT ) (kw= ':' this_VersionNumber_10= ruleVersionNumber )? (kw= '#' (this_Path_12= rulePath | this_UrnKvp_13= ruleUrnKvp ) (kw= '&' (this_Path_15= rulePath | this_UrnKvp_16= ruleUrnKvp ) )* )? )
            // InternalKim.g:5424:3: (kw= 'urn:klab:' )? this_PathName_1= rulePathName kw= ':' this_PathName_3= rulePathName kw= ':' this_PathName_5= rulePathName kw= ':' (this_Path_7= rulePath | this_INT_8= RULE_INT ) (kw= ':' this_VersionNumber_10= ruleVersionNumber )? (kw= '#' (this_Path_12= rulePath | this_UrnKvp_13= ruleUrnKvp ) (kw= '&' (this_Path_15= rulePath | this_UrnKvp_16= ruleUrnKvp ) )* )?
            {
            // InternalKim.g:5424:3: (kw= 'urn:klab:' )?
            int alt125=2;
            int LA125_0 = input.LA(1);

            if ( (LA125_0==105) ) {
                alt125=1;
            }
            switch (alt125) {
                case 1 :
                    // InternalKim.g:5425:4: kw= 'urn:klab:'
                    {
                    kw=(Token)match(input,105,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getUrnIdAccess().getUrnKlabKeyword_0());
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getUrnIdAccess().getPathNameParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_82);
            this_PathName_1=rulePathName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_PathName_1);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            kw=(Token)match(input,106,FOLLOW_26); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getUrnIdAccess().getColonKeyword_2());
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getUrnIdAccess().getPathNameParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_82);
            this_PathName_3=rulePathName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_PathName_3);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            kw=(Token)match(input,106,FOLLOW_26); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getUrnIdAccess().getColonKeyword_4());
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getUrnIdAccess().getPathNameParserRuleCall_5());
              		
            }
            pushFollow(FOLLOW_82);
            this_PathName_5=rulePathName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_PathName_5);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            kw=(Token)match(input,106,FOLLOW_83); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getUrnIdAccess().getColonKeyword_6());
              		
            }
            // InternalKim.g:5476:3: (this_Path_7= rulePath | this_INT_8= RULE_INT )
            int alt126=2;
            int LA126_0 = input.LA(1);

            if ( ((LA126_0>=RULE_LOWERCASE_ID && LA126_0<=RULE_UPPERCASE_ID)||LA126_0==RULE_LOWERCASE_DASHID) ) {
                alt126=1;
            }
            else if ( (LA126_0==RULE_INT) ) {
                alt126=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 126, 0, input);

                throw nvae;
            }
            switch (alt126) {
                case 1 :
                    // InternalKim.g:5477:4: this_Path_7= rulePath
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getUrnIdAccess().getPathParserRuleCall_7_0());
                      			
                    }
                    pushFollow(FOLLOW_84);
                    this_Path_7=rulePath();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_Path_7);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:5488:4: this_INT_8= RULE_INT
                    {
                    this_INT_8=(Token)match(input,RULE_INT,FOLLOW_84); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_INT_8);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_INT_8, grammarAccess.getUrnIdAccess().getINTTerminalRuleCall_7_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:5496:3: (kw= ':' this_VersionNumber_10= ruleVersionNumber )?
            int alt127=2;
            int LA127_0 = input.LA(1);

            if ( (LA127_0==106) ) {
                alt127=1;
            }
            switch (alt127) {
                case 1 :
                    // InternalKim.g:5497:4: kw= ':' this_VersionNumber_10= ruleVersionNumber
                    {
                    kw=(Token)match(input,106,FOLLOW_78); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getUrnIdAccess().getColonKeyword_8_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getUrnIdAccess().getVersionNumberParserRuleCall_8_1());
                      			
                    }
                    pushFollow(FOLLOW_85);
                    this_VersionNumber_10=ruleVersionNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_VersionNumber_10);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:5513:3: (kw= '#' (this_Path_12= rulePath | this_UrnKvp_13= ruleUrnKvp ) (kw= '&' (this_Path_15= rulePath | this_UrnKvp_16= ruleUrnKvp ) )* )?
            int alt131=2;
            int LA131_0 = input.LA(1);

            if ( (LA131_0==53) ) {
                alt131=1;
            }
            switch (alt131) {
                case 1 :
                    // InternalKim.g:5514:4: kw= '#' (this_Path_12= rulePath | this_UrnKvp_13= ruleUrnKvp ) (kw= '&' (this_Path_15= rulePath | this_UrnKvp_16= ruleUrnKvp ) )*
                    {
                    kw=(Token)match(input,53,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getUrnIdAccess().getNumberSignKeyword_9_0());
                      			
                    }
                    // InternalKim.g:5519:4: (this_Path_12= rulePath | this_UrnKvp_13= ruleUrnKvp )
                    int alt128=2;
                    alt128 = dfa128.predict(input);
                    switch (alt128) {
                        case 1 :
                            // InternalKim.g:5520:5: this_Path_12= rulePath
                            {
                            if ( state.backtracking==0 ) {

                              					newCompositeNode(grammarAccess.getUrnIdAccess().getPathParserRuleCall_9_1_0());
                              				
                            }
                            pushFollow(FOLLOW_86);
                            this_Path_12=rulePath();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_Path_12);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:5531:5: this_UrnKvp_13= ruleUrnKvp
                            {
                            if ( state.backtracking==0 ) {

                              					newCompositeNode(grammarAccess.getUrnIdAccess().getUrnKvpParserRuleCall_9_1_1());
                              				
                            }
                            pushFollow(FOLLOW_86);
                            this_UrnKvp_13=ruleUrnKvp();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_UrnKvp_13);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }

                    // InternalKim.g:5542:4: (kw= '&' (this_Path_15= rulePath | this_UrnKvp_16= ruleUrnKvp ) )*
                    loop130:
                    do {
                        int alt130=2;
                        int LA130_0 = input.LA(1);

                        if ( (LA130_0==107) ) {
                            alt130=1;
                        }


                        switch (alt130) {
                    	case 1 :
                    	    // InternalKim.g:5543:5: kw= '&' (this_Path_15= rulePath | this_UrnKvp_16= ruleUrnKvp )
                    	    {
                    	    kw=(Token)match(input,107,FOLLOW_26); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					current.merge(kw);
                    	      					newLeafNode(kw, grammarAccess.getUrnIdAccess().getAmpersandKeyword_9_2_0());
                    	      				
                    	    }
                    	    // InternalKim.g:5548:5: (this_Path_15= rulePath | this_UrnKvp_16= ruleUrnKvp )
                    	    int alt129=2;
                    	    alt129 = dfa129.predict(input);
                    	    switch (alt129) {
                    	        case 1 :
                    	            // InternalKim.g:5549:6: this_Path_15= rulePath
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              						newCompositeNode(grammarAccess.getUrnIdAccess().getPathParserRuleCall_9_2_1_0());
                    	              					
                    	            }
                    	            pushFollow(FOLLOW_86);
                    	            this_Path_15=rulePath();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              						current.merge(this_Path_15);
                    	              					
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              						afterParserOrEnumRuleCall();
                    	              					
                    	            }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // InternalKim.g:5560:6: this_UrnKvp_16= ruleUrnKvp
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              						newCompositeNode(grammarAccess.getUrnIdAccess().getUrnKvpParserRuleCall_9_2_1_1());
                    	              					
                    	            }
                    	            pushFollow(FOLLOW_86);
                    	            this_UrnKvp_16=ruleUrnKvp();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              						current.merge(this_UrnKvp_16);
                    	              					
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              						afterParserOrEnumRuleCall();
                    	              					
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop130;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUrnId"


    // $ANTLR start "entryRuleUrnKvp"
    // InternalKim.g:5577:1: entryRuleUrnKvp returns [String current=null] : iv_ruleUrnKvp= ruleUrnKvp EOF ;
    public final String entryRuleUrnKvp() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleUrnKvp = null;


        try {
            // InternalKim.g:5577:46: (iv_ruleUrnKvp= ruleUrnKvp EOF )
            // InternalKim.g:5578:2: iv_ruleUrnKvp= ruleUrnKvp EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUrnKvpRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUrnKvp=ruleUrnKvp();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUrnKvp.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUrnKvp"


    // $ANTLR start "ruleUrnKvp"
    // InternalKim.g:5584:1: ruleUrnKvp returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_PathName_0= rulePathName kw= '=' (this_Path_2= rulePath | this_INT_3= RULE_INT ) ) ;
    public final AntlrDatatypeRuleToken ruleUrnKvp() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_INT_3=null;
        AntlrDatatypeRuleToken this_PathName_0 = null;

        AntlrDatatypeRuleToken this_Path_2 = null;



        	enterRule();

        try {
            // InternalKim.g:5590:2: ( (this_PathName_0= rulePathName kw= '=' (this_Path_2= rulePath | this_INT_3= RULE_INT ) ) )
            // InternalKim.g:5591:2: (this_PathName_0= rulePathName kw= '=' (this_Path_2= rulePath | this_INT_3= RULE_INT ) )
            {
            // InternalKim.g:5591:2: (this_PathName_0= rulePathName kw= '=' (this_Path_2= rulePath | this_INT_3= RULE_INT ) )
            // InternalKim.g:5592:3: this_PathName_0= rulePathName kw= '=' (this_Path_2= rulePath | this_INT_3= RULE_INT )
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getUrnKvpAccess().getPathNameParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_87);
            this_PathName_0=rulePathName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_PathName_0);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            kw=(Token)match(input,82,FOLLOW_83); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getUrnKvpAccess().getEqualsSignKeyword_1());
              		
            }
            // InternalKim.g:5607:3: (this_Path_2= rulePath | this_INT_3= RULE_INT )
            int alt132=2;
            int LA132_0 = input.LA(1);

            if ( ((LA132_0>=RULE_LOWERCASE_ID && LA132_0<=RULE_UPPERCASE_ID)||LA132_0==RULE_LOWERCASE_DASHID) ) {
                alt132=1;
            }
            else if ( (LA132_0==RULE_INT) ) {
                alt132=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 132, 0, input);

                throw nvae;
            }
            switch (alt132) {
                case 1 :
                    // InternalKim.g:5608:4: this_Path_2= rulePath
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getUrnKvpAccess().getPathParserRuleCall_2_0());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_Path_2=rulePath();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_Path_2);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:5619:4: this_INT_3= RULE_INT
                    {
                    this_INT_3=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_INT_3);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_INT_3, grammarAccess.getUrnKvpAccess().getINTTerminalRuleCall_2_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUrnKvp"


    // $ANTLR start "entryRuleLocalFilePath"
    // InternalKim.g:5631:1: entryRuleLocalFilePath returns [String current=null] : iv_ruleLocalFilePath= ruleLocalFilePath EOF ;
    public final String entryRuleLocalFilePath() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleLocalFilePath = null;


        try {
            // InternalKim.g:5631:53: (iv_ruleLocalFilePath= ruleLocalFilePath EOF )
            // InternalKim.g:5632:2: iv_ruleLocalFilePath= ruleLocalFilePath EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLocalFilePathRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLocalFilePath=ruleLocalFilePath();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLocalFilePath.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLocalFilePath"


    // $ANTLR start "ruleLocalFilePath"
    // InternalKim.g:5638:1: ruleLocalFilePath returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (this_CAMELCASE_ID_0= RULE_CAMELCASE_ID | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) (kw= '/' (this_CAMELCASE_ID_4= RULE_CAMELCASE_ID | this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID ) )* (kw= '.' this_LOWERCASE_ID_8= RULE_LOWERCASE_ID )? (kw= '#' this_LOWERCASE_ID_10= RULE_LOWERCASE_ID )? ) ;
    public final AntlrDatatypeRuleToken ruleLocalFilePath() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_CAMELCASE_ID_0=null;
        Token this_LOWERCASE_ID_1=null;
        Token this_LOWERCASE_DASHID_2=null;
        Token kw=null;
        Token this_CAMELCASE_ID_4=null;
        Token this_LOWERCASE_ID_5=null;
        Token this_LOWERCASE_DASHID_6=null;
        Token this_LOWERCASE_ID_8=null;
        Token this_LOWERCASE_ID_10=null;


        	enterRule();

        try {
            // InternalKim.g:5644:2: ( ( (this_CAMELCASE_ID_0= RULE_CAMELCASE_ID | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) (kw= '/' (this_CAMELCASE_ID_4= RULE_CAMELCASE_ID | this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID ) )* (kw= '.' this_LOWERCASE_ID_8= RULE_LOWERCASE_ID )? (kw= '#' this_LOWERCASE_ID_10= RULE_LOWERCASE_ID )? ) )
            // InternalKim.g:5645:2: ( (this_CAMELCASE_ID_0= RULE_CAMELCASE_ID | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) (kw= '/' (this_CAMELCASE_ID_4= RULE_CAMELCASE_ID | this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID ) )* (kw= '.' this_LOWERCASE_ID_8= RULE_LOWERCASE_ID )? (kw= '#' this_LOWERCASE_ID_10= RULE_LOWERCASE_ID )? )
            {
            // InternalKim.g:5645:2: ( (this_CAMELCASE_ID_0= RULE_CAMELCASE_ID | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) (kw= '/' (this_CAMELCASE_ID_4= RULE_CAMELCASE_ID | this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID ) )* (kw= '.' this_LOWERCASE_ID_8= RULE_LOWERCASE_ID )? (kw= '#' this_LOWERCASE_ID_10= RULE_LOWERCASE_ID )? )
            // InternalKim.g:5646:3: (this_CAMELCASE_ID_0= RULE_CAMELCASE_ID | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) (kw= '/' (this_CAMELCASE_ID_4= RULE_CAMELCASE_ID | this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID ) )* (kw= '.' this_LOWERCASE_ID_8= RULE_LOWERCASE_ID )? (kw= '#' this_LOWERCASE_ID_10= RULE_LOWERCASE_ID )?
            {
            // InternalKim.g:5646:3: (this_CAMELCASE_ID_0= RULE_CAMELCASE_ID | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID )
            int alt133=3;
            switch ( input.LA(1) ) {
            case RULE_CAMELCASE_ID:
                {
                alt133=1;
                }
                break;
            case RULE_LOWERCASE_ID:
                {
                alt133=2;
                }
                break;
            case RULE_LOWERCASE_DASHID:
                {
                alt133=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 133, 0, input);

                throw nvae;
            }

            switch (alt133) {
                case 1 :
                    // InternalKim.g:5647:4: this_CAMELCASE_ID_0= RULE_CAMELCASE_ID
                    {
                    this_CAMELCASE_ID_0=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_88); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_CAMELCASE_ID_0);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_CAMELCASE_ID_0, grammarAccess.getLocalFilePathAccess().getCAMELCASE_IDTerminalRuleCall_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:5655:4: this_LOWERCASE_ID_1= RULE_LOWERCASE_ID
                    {
                    this_LOWERCASE_ID_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_88); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_ID_1);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_ID_1, grammarAccess.getLocalFilePathAccess().getLOWERCASE_IDTerminalRuleCall_0_1());
                      			
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:5663:4: this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID
                    {
                    this_LOWERCASE_DASHID_2=(Token)match(input,RULE_LOWERCASE_DASHID,FOLLOW_88); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_DASHID_2);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_DASHID_2, grammarAccess.getLocalFilePathAccess().getLOWERCASE_DASHIDTerminalRuleCall_0_2());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:5671:3: (kw= '/' (this_CAMELCASE_ID_4= RULE_CAMELCASE_ID | this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID ) )*
            loop135:
            do {
                int alt135=2;
                int LA135_0 = input.LA(1);

                if ( (LA135_0==108) ) {
                    alt135=1;
                }


                switch (alt135) {
            	case 1 :
            	    // InternalKim.g:5672:4: kw= '/' (this_CAMELCASE_ID_4= RULE_CAMELCASE_ID | this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID )
            	    {
            	    kw=(Token)match(input,108,FOLLOW_89); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(kw);
            	      				newLeafNode(kw, grammarAccess.getLocalFilePathAccess().getSolidusKeyword_1_0());
            	      			
            	    }
            	    // InternalKim.g:5677:4: (this_CAMELCASE_ID_4= RULE_CAMELCASE_ID | this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID )
            	    int alt134=3;
            	    switch ( input.LA(1) ) {
            	    case RULE_CAMELCASE_ID:
            	        {
            	        alt134=1;
            	        }
            	        break;
            	    case RULE_LOWERCASE_ID:
            	        {
            	        alt134=2;
            	        }
            	        break;
            	    case RULE_LOWERCASE_DASHID:
            	        {
            	        alt134=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 134, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt134) {
            	        case 1 :
            	            // InternalKim.g:5678:5: this_CAMELCASE_ID_4= RULE_CAMELCASE_ID
            	            {
            	            this_CAMELCASE_ID_4=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_88); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(this_CAMELCASE_ID_4);
            	              				
            	            }
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(this_CAMELCASE_ID_4, grammarAccess.getLocalFilePathAccess().getCAMELCASE_IDTerminalRuleCall_1_1_0());
            	              				
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:5686:5: this_LOWERCASE_ID_5= RULE_LOWERCASE_ID
            	            {
            	            this_LOWERCASE_ID_5=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_88); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(this_LOWERCASE_ID_5);
            	              				
            	            }
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(this_LOWERCASE_ID_5, grammarAccess.getLocalFilePathAccess().getLOWERCASE_IDTerminalRuleCall_1_1_1());
            	              				
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // InternalKim.g:5694:5: this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID
            	            {
            	            this_LOWERCASE_DASHID_6=(Token)match(input,RULE_LOWERCASE_DASHID,FOLLOW_88); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(this_LOWERCASE_DASHID_6);
            	              				
            	            }
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(this_LOWERCASE_DASHID_6, grammarAccess.getLocalFilePathAccess().getLOWERCASE_DASHIDTerminalRuleCall_1_1_2());
            	              				
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop135;
                }
            } while (true);

            // InternalKim.g:5703:3: (kw= '.' this_LOWERCASE_ID_8= RULE_LOWERCASE_ID )?
            int alt136=2;
            int LA136_0 = input.LA(1);

            if ( (LA136_0==109) ) {
                alt136=1;
            }
            switch (alt136) {
                case 1 :
                    // InternalKim.g:5704:4: kw= '.' this_LOWERCASE_ID_8= RULE_LOWERCASE_ID
                    {
                    kw=(Token)match(input,109,FOLLOW_61); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getLocalFilePathAccess().getFullStopKeyword_2_0());
                      			
                    }
                    this_LOWERCASE_ID_8=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_85); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_ID_8);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_ID_8, grammarAccess.getLocalFilePathAccess().getLOWERCASE_IDTerminalRuleCall_2_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:5717:3: (kw= '#' this_LOWERCASE_ID_10= RULE_LOWERCASE_ID )?
            int alt137=2;
            int LA137_0 = input.LA(1);

            if ( (LA137_0==53) ) {
                alt137=1;
            }
            switch (alt137) {
                case 1 :
                    // InternalKim.g:5718:4: kw= '#' this_LOWERCASE_ID_10= RULE_LOWERCASE_ID
                    {
                    kw=(Token)match(input,53,FOLLOW_61); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getLocalFilePathAccess().getNumberSignKeyword_3_0());
                      			
                    }
                    this_LOWERCASE_ID_10=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_ID_10);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_ID_10, grammarAccess.getLocalFilePathAccess().getLOWERCASE_IDTerminalRuleCall_3_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLocalFilePath"


    // $ANTLR start "entryRuleObserveStatement"
    // InternalKim.g:5735:1: entryRuleObserveStatement returns [EObject current=null] : iv_ruleObserveStatement= ruleObserveStatement EOF ;
    public final EObject entryRuleObserveStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleObserveStatement = null;


        try {
            // InternalKim.g:5735:57: (iv_ruleObserveStatement= ruleObserveStatement EOF )
            // InternalKim.g:5736:2: iv_ruleObserveStatement= ruleObserveStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getObserveStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleObserveStatement=ruleObserveStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleObserveStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleObserveStatement"


    // $ANTLR start "ruleObserveStatement"
    // InternalKim.g:5742:1: ruleObserveStatement returns [EObject current=null] : ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? otherlv_2= 'observe' ( (lv_body_3_0= ruleObserveStatementBody ) ) ) ;
    public final EObject ruleObserveStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_annotations_1_0 = null;

        EObject lv_body_3_0 = null;



        	enterRule();

        try {
            // InternalKim.g:5748:2: ( ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? otherlv_2= 'observe' ( (lv_body_3_0= ruleObserveStatementBody ) ) ) )
            // InternalKim.g:5749:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? otherlv_2= 'observe' ( (lv_body_3_0= ruleObserveStatementBody ) ) )
            {
            // InternalKim.g:5749:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? otherlv_2= 'observe' ( (lv_body_3_0= ruleObserveStatementBody ) ) )
            // InternalKim.g:5750:3: ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? otherlv_2= 'observe' ( (lv_body_3_0= ruleObserveStatementBody ) )
            {
            // InternalKim.g:5750:3: ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )?
            int alt139=2;
            int LA139_0 = input.LA(1);

            if ( (LA139_0==RULE_ANNOTATION_ID) ) {
                alt139=1;
            }
            switch (alt139) {
                case 1 :
                    // InternalKim.g:5751:4: ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )*
                    {
                    // InternalKim.g:5751:4: ( (lv_annotations_0_0= ruleAnnotation ) )
                    // InternalKim.g:5752:5: (lv_annotations_0_0= ruleAnnotation )
                    {
                    // InternalKim.g:5752:5: (lv_annotations_0_0= ruleAnnotation )
                    // InternalKim.g:5753:6: lv_annotations_0_0= ruleAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getObserveStatementAccess().getAnnotationsAnnotationParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_90);
                    lv_annotations_0_0=ruleAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getObserveStatementRule());
                      						}
                      						add(
                      							current,
                      							"annotations",
                      							lv_annotations_0_0,
                      							"org.integratedmodelling.kim.Kim.Annotation");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:5770:4: ( (lv_annotations_1_0= ruleAnnotation ) )*
                    loop138:
                    do {
                        int alt138=2;
                        int LA138_0 = input.LA(1);

                        if ( (LA138_0==RULE_ANNOTATION_ID) ) {
                            alt138=1;
                        }


                        switch (alt138) {
                    	case 1 :
                    	    // InternalKim.g:5771:5: (lv_annotations_1_0= ruleAnnotation )
                    	    {
                    	    // InternalKim.g:5771:5: (lv_annotations_1_0= ruleAnnotation )
                    	    // InternalKim.g:5772:6: lv_annotations_1_0= ruleAnnotation
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getObserveStatementAccess().getAnnotationsAnnotationParserRuleCall_0_1_0());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_90);
                    	    lv_annotations_1_0=ruleAnnotation();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getObserveStatementRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"annotations",
                    	      							lv_annotations_1_0,
                    	      							"org.integratedmodelling.kim.Kim.Annotation");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop138;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_2=(Token)match(input,110,FOLLOW_91); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getObserveStatementAccess().getObserveKeyword_1());
              		
            }
            // InternalKim.g:5794:3: ( (lv_body_3_0= ruleObserveStatementBody ) )
            // InternalKim.g:5795:4: (lv_body_3_0= ruleObserveStatementBody )
            {
            // InternalKim.g:5795:4: (lv_body_3_0= ruleObserveStatementBody )
            // InternalKim.g:5796:5: lv_body_3_0= ruleObserveStatementBody
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getObserveStatementAccess().getBodyObserveStatementBodyParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_body_3_0=ruleObserveStatementBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getObserveStatementRule());
              					}
              					set(
              						current,
              						"body",
              						lv_body_3_0,
              						"org.integratedmodelling.kim.Kim.ObserveStatementBody");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleObserveStatement"


    // $ANTLR start "entryRuleObserveStatementBody"
    // InternalKim.g:5817:1: entryRuleObserveStatementBody returns [EObject current=null] : iv_ruleObserveStatementBody= ruleObserveStatementBody EOF ;
    public final EObject entryRuleObserveStatementBody() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleObserveStatementBody = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 
        	grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4()
        	);

        try {
            // InternalKim.g:5822:2: (iv_ruleObserveStatementBody= ruleObserveStatementBody EOF )
            // InternalKim.g:5823:2: iv_ruleObserveStatementBody= ruleObserveStatementBody EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getObserveStatementBodyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleObserveStatementBody=ruleObserveStatementBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleObserveStatementBody; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleObserveStatementBody"


    // $ANTLR start "ruleObserveStatementBody"
    // InternalKim.g:5832:1: ruleObserveStatementBody returns [EObject current=null] : ( ( ( ( ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) ) ;
    public final EObject ruleObserveStatementBody() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_docstring_4_0=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token otherlv_23=null;
        Token otherlv_25=null;
        EObject lv_urn_1_0 = null;

        EObject lv_concept_3_0 = null;

        AntlrDatatypeRuleToken lv_parents_6_0 = null;

        AntlrDatatypeRuleToken lv_parents_8_0 = null;

        EObject lv_states_11_0 = null;

        EObject lv_states_13_0 = null;

        EObject lv_observations_16_0 = null;

        EObject lv_observations_20_0 = null;

        EObject lv_actions_22_0 = null;

        EObject lv_accessor_24_0 = null;

        EObject lv_metadata_26_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 
        	grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4()
        	);

        try {
            // InternalKim.g:5842:2: ( ( ( ( ( ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) ) )
            // InternalKim.g:5843:2: ( ( ( ( ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) )
            {
            // InternalKim.g:5843:2: ( ( ( ( ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) )
            // InternalKim.g:5844:3: ( ( ( ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) ) ) ) ) ) )+ {...}?) )
            {
            // InternalKim.g:5844:3: ( ( ( ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) ) ) ) ) ) )+ {...}?) )
            // InternalKim.g:5845:4: ( ( ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) ) ) ) ) ) )+ {...}?)
            {
            getUnorderedGroupHelper().enter(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup());
            // InternalKim.g:5848:4: ( ( ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) ) ) ) ) ) )+ {...}?)
            // InternalKim.g:5849:5: ( ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) ) ) ) ) ) )+ {...}?
            {
            // InternalKim.g:5849:5: ( ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) ) ) ) ) ) )+
            int cnt149=0;
            loop149:
            do {
                int alt149=4;
                alt149 = dfa149.predict(input);
                switch (alt149) {
            	case 1 :
            	    // InternalKim.g:5850:3: ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) ) )
            	    {
            	    // InternalKim.g:5850:3: ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) ) )
            	    // InternalKim.g:5851:4: {...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObserveStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0)");
            	    }
            	    // InternalKim.g:5851:114: ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) )
            	    // InternalKim.g:5852:5: ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0);
            	    // InternalKim.g:5855:8: ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) )
            	    // InternalKim.g:5855:9: {...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObserveStatementBody", "true");
            	    }
            	    // InternalKim.g:5855:18: ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* )
            	    // InternalKim.g:5855:19: ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )*
            	    {
            	    // InternalKim.g:5855:19: ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )?
            	    int alt140=2;
            	    alt140 = dfa140.predict(input);
            	    switch (alt140) {
            	        case 1 :
            	            // InternalKim.g:5856:9: ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as'
            	            {
            	            // InternalKim.g:5856:9: ( (lv_urn_1_0= ruleUrn ) )
            	            // InternalKim.g:5857:10: (lv_urn_1_0= ruleUrn )
            	            {
            	            // InternalKim.g:5857:10: (lv_urn_1_0= ruleUrn )
            	            // InternalKim.g:5858:11: lv_urn_1_0= ruleUrn
            	            {
            	            if ( state.backtracking==0 ) {

            	              											newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getUrnUrnParserRuleCall_0_0_0_0());
            	              										
            	            }
            	            pushFollow(FOLLOW_11);
            	            lv_urn_1_0=ruleUrn();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											if (current==null) {
            	              												current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	              											}
            	              											set(
            	              												current,
            	              												"urn",
            	              												lv_urn_1_0,
            	              												"org.integratedmodelling.kim.Kim.Urn");
            	              											afterParserOrEnumRuleCall();
            	              										
            	            }

            	            }


            	            }

            	            otherlv_2=(Token)match(input,25,FOLLOW_92); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(otherlv_2, grammarAccess.getObserveStatementBodyAccess().getAsKeyword_0_0_1());
            	              								
            	            }

            	            }
            	            break;

            	    }

            	    // InternalKim.g:5880:8: ( (lv_concept_3_0= ruleNamedObservableSemantics ) )
            	    // InternalKim.g:5881:9: (lv_concept_3_0= ruleNamedObservableSemantics )
            	    {
            	    // InternalKim.g:5881:9: (lv_concept_3_0= ruleNamedObservableSemantics )
            	    // InternalKim.g:5882:10: lv_concept_3_0= ruleNamedObservableSemantics
            	    {
            	    if ( state.backtracking==0 ) {

            	      										newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getConceptNamedObservableSemanticsParserRuleCall_0_1_0());
            	      									
            	    }
            	    pushFollow(FOLLOW_93);
            	    lv_concept_3_0=ruleNamedObservableSemantics();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	      										}
            	      										set(
            	      											current,
            	      											"concept",
            	      											lv_concept_3_0,
            	      											"org.integratedmodelling.kim.Kim.NamedObservableSemantics");
            	      										afterParserOrEnumRuleCall();
            	      									
            	    }

            	    }


            	    }

            	    // InternalKim.g:5899:8: ( (lv_docstring_4_0= RULE_STRING ) )?
            	    int alt141=2;
            	    int LA141_0 = input.LA(1);

            	    if ( (LA141_0==RULE_STRING) ) {
            	        int LA141_1 = input.LA(2);

            	        if ( (synpred245_InternalKim()) ) {
            	            alt141=1;
            	        }
            	    }
            	    switch (alt141) {
            	        case 1 :
            	            // InternalKim.g:5900:9: (lv_docstring_4_0= RULE_STRING )
            	            {
            	            // InternalKim.g:5900:9: (lv_docstring_4_0= RULE_STRING )
            	            // InternalKim.g:5901:10: lv_docstring_4_0= RULE_STRING
            	            {
            	            lv_docstring_4_0=(Token)match(input,RULE_STRING,FOLLOW_93); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(lv_docstring_4_0, grammarAccess.getObserveStatementBodyAccess().getDocstringSTRINGTerminalRuleCall_0_2_0());
            	              									
            	            }
            	            if ( state.backtracking==0 ) {

            	              										if (current==null) {
            	              											current = createModelElement(grammarAccess.getObserveStatementBodyRule());
            	              										}
            	              										setWithLastConsumed(
            	              											current,
            	              											"docstring",
            	              											lv_docstring_4_0,
            	              											"org.eclipse.xtext.common.Terminals.STRING");
            	              									
            	            }

            	            }


            	            }
            	            break;

            	    }

            	    // InternalKim.g:5917:8: (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )?
            	    int alt143=2;
            	    int LA143_0 = input.LA(1);

            	    if ( (LA143_0==111) ) {
            	        alt143=1;
            	    }
            	    switch (alt143) {
            	        case 1 :
            	            // InternalKim.g:5918:9: otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )*
            	            {
            	            otherlv_5=(Token)match(input,111,FOLLOW_26); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(otherlv_5, grammarAccess.getObserveStatementBodyAccess().getExtendsKeyword_0_3_0());
            	              								
            	            }
            	            // InternalKim.g:5922:9: ( (lv_parents_6_0= rulePathName ) )
            	            // InternalKim.g:5923:10: (lv_parents_6_0= rulePathName )
            	            {
            	            // InternalKim.g:5923:10: (lv_parents_6_0= rulePathName )
            	            // InternalKim.g:5924:11: lv_parents_6_0= rulePathName
            	            {
            	            if ( state.backtracking==0 ) {

            	              											newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getParentsPathNameParserRuleCall_0_3_1_0());
            	              										
            	            }
            	            pushFollow(FOLLOW_94);
            	            lv_parents_6_0=rulePathName();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											if (current==null) {
            	              												current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	              											}
            	              											add(
            	              												current,
            	              												"parents",
            	              												lv_parents_6_0,
            	              												"org.integratedmodelling.kim.Kim.PathName");
            	              											afterParserOrEnumRuleCall();
            	              										
            	            }

            	            }


            	            }

            	            // InternalKim.g:5941:9: (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )*
            	            loop142:
            	            do {
            	                int alt142=2;
            	                int LA142_0 = input.LA(1);

            	                if ( (LA142_0==27) ) {
            	                    alt142=1;
            	                }


            	                switch (alt142) {
            	            	case 1 :
            	            	    // InternalKim.g:5942:10: otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) )
            	            	    {
            	            	    otherlv_7=(Token)match(input,27,FOLLOW_26); if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      										newLeafNode(otherlv_7, grammarAccess.getObserveStatementBodyAccess().getCommaKeyword_0_3_2_0());
            	            	      									
            	            	    }
            	            	    // InternalKim.g:5946:10: ( (lv_parents_8_0= rulePathName ) )
            	            	    // InternalKim.g:5947:11: (lv_parents_8_0= rulePathName )
            	            	    {
            	            	    // InternalKim.g:5947:11: (lv_parents_8_0= rulePathName )
            	            	    // InternalKim.g:5948:12: lv_parents_8_0= rulePathName
            	            	    {
            	            	    if ( state.backtracking==0 ) {

            	            	      												newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getParentsPathNameParserRuleCall_0_3_2_1_0());
            	            	      											
            	            	    }
            	            	    pushFollow(FOLLOW_94);
            	            	    lv_parents_8_0=rulePathName();

            	            	    state._fsp--;
            	            	    if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      												if (current==null) {
            	            	      													current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	            	      												}
            	            	      												add(
            	            	      													current,
            	            	      													"parents",
            	            	      													lv_parents_8_0,
            	            	      													"org.integratedmodelling.kim.Kim.PathName");
            	            	      												afterParserOrEnumRuleCall();
            	            	      											
            	            	    }

            	            	    }


            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop142;
            	                }
            	            } while (true);


            	            }
            	            break;

            	    }

            	    // InternalKim.g:5967:8: ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) )
            	    // InternalKim.g:5968:9: ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) )
            	    {
            	    // InternalKim.g:5968:9: ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) )
            	    // InternalKim.g:5969:10: ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* )
            	    {
            	    getUnorderedGroupHelper().enter(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4());
            	    // InternalKim.g:5972:10: ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* )
            	    // InternalKim.g:5973:11: ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )*
            	    {
            	    // InternalKim.g:5973:11: ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )*
            	    loop146:
            	    do {
            	        int alt146=3;
            	        int LA146_0 = input.LA(1);

            	        if ( LA146_0 == 30 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 0) ) {
            	            alt146=1;
            	        }
            	        else if ( LA146_0 == 112 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 1) ) {
            	            alt146=2;
            	        }


            	        switch (alt146) {
            	    	case 1 :
            	    	    // InternalKim.g:5974:9: ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) )
            	    	    {
            	    	    // InternalKim.g:5974:9: ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) )
            	    	    // InternalKim.g:5975:10: {...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) )
            	    	    {
            	    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 0) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleObserveStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 0)");
            	    	    }
            	    	    // InternalKim.g:5975:124: ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) )
            	    	    // InternalKim.g:5976:11: ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) )
            	    	    {
            	    	    getUnorderedGroupHelper().select(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 0);
            	    	    // InternalKim.g:5979:14: ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) )
            	    	    // InternalKim.g:5979:15: {...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )
            	    	    {
            	    	    if ( !((true)) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleObserveStatementBody", "true");
            	    	    }
            	    	    // InternalKim.g:5979:24: (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )
            	    	    // InternalKim.g:5979:25: otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )*
            	    	    {
            	    	    otherlv_10=(Token)match(input,30,FOLLOW_95); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      														newLeafNode(otherlv_10, grammarAccess.getObserveStatementBodyAccess().getObservingKeyword_0_4_0_0());
            	    	      													
            	    	    }
            	    	    // InternalKim.g:5983:14: ( (lv_states_11_0= ruleObservableSemantics ) )
            	    	    // InternalKim.g:5984:15: (lv_states_11_0= ruleObservableSemantics )
            	    	    {
            	    	    // InternalKim.g:5984:15: (lv_states_11_0= ruleObservableSemantics )
            	    	    // InternalKim.g:5985:16: lv_states_11_0= ruleObservableSemantics
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      																newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getStatesObservableSemanticsParserRuleCall_0_4_0_1_0());
            	    	      															
            	    	    }
            	    	    pushFollow(FOLLOW_94);
            	    	    lv_states_11_0=ruleObservableSemantics();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      																if (current==null) {
            	    	      																	current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	    	      																}
            	    	      																add(
            	    	      																	current,
            	    	      																	"states",
            	    	      																	lv_states_11_0,
            	    	      																	"org.integratedmodelling.kim.Kim.ObservableSemantics");
            	    	      																afterParserOrEnumRuleCall();
            	    	      															
            	    	    }

            	    	    }


            	    	    }

            	    	    // InternalKim.g:6002:14: (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )*
            	    	    loop144:
            	    	    do {
            	    	        int alt144=2;
            	    	        int LA144_0 = input.LA(1);

            	    	        if ( (LA144_0==27) ) {
            	    	            alt144=1;
            	    	        }


            	    	        switch (alt144) {
            	    	    	case 1 :
            	    	    	    // InternalKim.g:6003:15: otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) )
            	    	    	    {
            	    	    	    otherlv_12=(Token)match(input,27,FOLLOW_95); if (state.failed) return current;
            	    	    	    if ( state.backtracking==0 ) {

            	    	    	      															newLeafNode(otherlv_12, grammarAccess.getObserveStatementBodyAccess().getCommaKeyword_0_4_0_2_0());
            	    	    	      														
            	    	    	    }
            	    	    	    // InternalKim.g:6007:15: ( (lv_states_13_0= ruleObservableSemantics ) )
            	    	    	    // InternalKim.g:6008:16: (lv_states_13_0= ruleObservableSemantics )
            	    	    	    {
            	    	    	    // InternalKim.g:6008:16: (lv_states_13_0= ruleObservableSemantics )
            	    	    	    // InternalKim.g:6009:17: lv_states_13_0= ruleObservableSemantics
            	    	    	    {
            	    	    	    if ( state.backtracking==0 ) {

            	    	    	      																	newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getStatesObservableSemanticsParserRuleCall_0_4_0_2_1_0());
            	    	    	      																
            	    	    	    }
            	    	    	    pushFollow(FOLLOW_94);
            	    	    	    lv_states_13_0=ruleObservableSemantics();

            	    	    	    state._fsp--;
            	    	    	    if (state.failed) return current;
            	    	    	    if ( state.backtracking==0 ) {

            	    	    	      																	if (current==null) {
            	    	    	      																		current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	    	    	      																	}
            	    	    	      																	add(
            	    	    	      																		current,
            	    	    	      																		"states",
            	    	    	      																		lv_states_13_0,
            	    	    	      																		"org.integratedmodelling.kim.Kim.ObservableSemantics");
            	    	    	      																	afterParserOrEnumRuleCall();
            	    	    	      																
            	    	    	    }

            	    	    	    }


            	    	    	    }


            	    	    	    }
            	    	    	    break;

            	    	    	default :
            	    	    	    break loop144;
            	    	        }
            	    	    } while (true);


            	    	    }


            	    	    }

            	    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4());

            	    	    }


            	    	    }


            	    	    }
            	    	    break;
            	    	case 2 :
            	    	    // InternalKim.g:6033:9: ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) )
            	    	    {
            	    	    // InternalKim.g:6033:9: ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) )
            	    	    // InternalKim.g:6034:10: {...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) )
            	    	    {
            	    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 1) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleObserveStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 1)");
            	    	    }
            	    	    // InternalKim.g:6034:124: ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) )
            	    	    // InternalKim.g:6035:11: ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) )
            	    	    {
            	    	    getUnorderedGroupHelper().select(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 1);
            	    	    // InternalKim.g:6038:14: ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) )
            	    	    // InternalKim.g:6038:15: {...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* )
            	    	    {
            	    	    if ( !((true)) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleObserveStatementBody", "true");
            	    	    }
            	    	    // InternalKim.g:6038:24: (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* )
            	    	    // InternalKim.g:6038:25: otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )*
            	    	    {
            	    	    otherlv_14=(Token)match(input,112,FOLLOW_40); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      														newLeafNode(otherlv_14, grammarAccess.getObserveStatementBodyAccess().getChildrenKeyword_0_4_1_0());
            	    	      													
            	    	    }
            	    	    // InternalKim.g:6042:14: (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' )
            	    	    // InternalKim.g:6043:15: otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')'
            	    	    {
            	    	    otherlv_15=(Token)match(input,38,FOLLOW_91); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      															newLeafNode(otherlv_15, grammarAccess.getObserveStatementBodyAccess().getLeftParenthesisKeyword_0_4_1_1_0());
            	    	      														
            	    	    }
            	    	    // InternalKim.g:6047:15: ( (lv_observations_16_0= ruleObserveStatementBody ) )
            	    	    // InternalKim.g:6048:16: (lv_observations_16_0= ruleObserveStatementBody )
            	    	    {
            	    	    // InternalKim.g:6048:16: (lv_observations_16_0= ruleObserveStatementBody )
            	    	    // InternalKim.g:6049:17: lv_observations_16_0= ruleObserveStatementBody
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      																	newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getObservationsObserveStatementBodyParserRuleCall_0_4_1_1_1_0());
            	    	      																
            	    	    }
            	    	    pushFollow(FOLLOW_96);
            	    	    lv_observations_16_0=ruleObserveStatementBody();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      																	if (current==null) {
            	    	      																		current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	    	      																	}
            	    	      																	add(
            	    	      																		current,
            	    	      																		"observations",
            	    	      																		lv_observations_16_0,
            	    	      																		"org.integratedmodelling.kim.Kim.ObserveStatementBody");
            	    	      																	afterParserOrEnumRuleCall();
            	    	      																
            	    	    }

            	    	    }


            	    	    }

            	    	    otherlv_17=(Token)match(input,41,FOLLOW_94); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      															newLeafNode(otherlv_17, grammarAccess.getObserveStatementBodyAccess().getRightParenthesisKeyword_0_4_1_1_2());
            	    	      														
            	    	    }

            	    	    }

            	    	    // InternalKim.g:6071:14: (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )*
            	    	    loop145:
            	    	    do {
            	    	        int alt145=2;
            	    	        int LA145_0 = input.LA(1);

            	    	        if ( (LA145_0==27) ) {
            	    	            alt145=1;
            	    	        }


            	    	        switch (alt145) {
            	    	    	case 1 :
            	    	    	    // InternalKim.g:6072:15: otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')'
            	    	    	    {
            	    	    	    otherlv_18=(Token)match(input,27,FOLLOW_40); if (state.failed) return current;
            	    	    	    if ( state.backtracking==0 ) {

            	    	    	      															newLeafNode(otherlv_18, grammarAccess.getObserveStatementBodyAccess().getCommaKeyword_0_4_1_2_0());
            	    	    	      														
            	    	    	    }
            	    	    	    otherlv_19=(Token)match(input,38,FOLLOW_91); if (state.failed) return current;
            	    	    	    if ( state.backtracking==0 ) {

            	    	    	      															newLeafNode(otherlv_19, grammarAccess.getObserveStatementBodyAccess().getLeftParenthesisKeyword_0_4_1_2_1());
            	    	    	      														
            	    	    	    }
            	    	    	    // InternalKim.g:6080:15: ( (lv_observations_20_0= ruleObserveStatementBody ) )
            	    	    	    // InternalKim.g:6081:16: (lv_observations_20_0= ruleObserveStatementBody )
            	    	    	    {
            	    	    	    // InternalKim.g:6081:16: (lv_observations_20_0= ruleObserveStatementBody )
            	    	    	    // InternalKim.g:6082:17: lv_observations_20_0= ruleObserveStatementBody
            	    	    	    {
            	    	    	    if ( state.backtracking==0 ) {

            	    	    	      																	newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getObservationsObserveStatementBodyParserRuleCall_0_4_1_2_2_0());
            	    	    	      																
            	    	    	    }
            	    	    	    pushFollow(FOLLOW_96);
            	    	    	    lv_observations_20_0=ruleObserveStatementBody();

            	    	    	    state._fsp--;
            	    	    	    if (state.failed) return current;
            	    	    	    if ( state.backtracking==0 ) {

            	    	    	      																	if (current==null) {
            	    	    	      																		current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	    	    	      																	}
            	    	    	      																	add(
            	    	    	      																		current,
            	    	    	      																		"observations",
            	    	    	      																		lv_observations_20_0,
            	    	    	      																		"org.integratedmodelling.kim.Kim.ObserveStatementBody");
            	    	    	      																	afterParserOrEnumRuleCall();
            	    	    	      																
            	    	    	    }

            	    	    	    }


            	    	    	    }

            	    	    	    otherlv_21=(Token)match(input,41,FOLLOW_94); if (state.failed) return current;
            	    	    	    if ( state.backtracking==0 ) {

            	    	    	      															newLeafNode(otherlv_21, grammarAccess.getObserveStatementBodyAccess().getRightParenthesisKeyword_0_4_1_2_3());
            	    	    	      														
            	    	    	    }

            	    	    	    }
            	    	    	    break;

            	    	    	default :
            	    	    	    break loop145;
            	    	        }
            	    	    } while (true);


            	    	    }


            	    	    }

            	    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4());

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop146;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().leave(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4());

            	    }

            	    // InternalKim.g:6117:8: ( (lv_actions_22_0= ruleActionSpecification ) )*
            	    loop147:
            	    do {
            	        int alt147=2;
            	        int LA147_0 = input.LA(1);

            	        if ( ((LA147_0>=54 && LA147_0<=56)||(LA147_0>=62 && LA147_0<=67)) ) {
            	            alt147=1;
            	        }


            	        switch (alt147) {
            	    	case 1 :
            	    	    // InternalKim.g:6118:9: (lv_actions_22_0= ruleActionSpecification )
            	    	    {
            	    	    // InternalKim.g:6118:9: (lv_actions_22_0= ruleActionSpecification )
            	    	    // InternalKim.g:6119:10: lv_actions_22_0= ruleActionSpecification
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      										newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getActionsActionSpecificationParserRuleCall_0_5_0());
            	    	      									
            	    	    }
            	    	    pushFollow(FOLLOW_97);
            	    	    lv_actions_22_0=ruleActionSpecification();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										if (current==null) {
            	    	      											current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	    	      										}
            	    	      										add(
            	    	      											current,
            	    	      											"actions",
            	    	      											lv_actions_22_0,
            	    	      											"org.integratedmodelling.kim.Kim.ActionSpecification");
            	    	      										afterParserOrEnumRuleCall();
            	    	      									
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop147;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKim.g:6142:3: ({...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) ) )
            	    {
            	    // InternalKim.g:6142:3: ({...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) ) )
            	    // InternalKim.g:6143:4: {...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObserveStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1)");
            	    }
            	    // InternalKim.g:6143:114: ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) )
            	    // InternalKim.g:6144:5: ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1);
            	    // InternalKim.g:6147:8: ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) )
            	    // InternalKim.g:6147:9: {...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObserveStatementBody", "true");
            	    }
            	    // InternalKim.g:6147:18: (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? )
            	    // InternalKim.g:6147:19: otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )?
            	    {
            	    otherlv_23=(Token)match(input,31,FOLLOW_98); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								newLeafNode(otherlv_23, grammarAccess.getObserveStatementBodyAccess().getUsingKeyword_1_0());
            	      							
            	    }
            	    // InternalKim.g:6151:8: ( (lv_accessor_24_0= ruleFunction ) )?
            	    int alt148=2;
            	    alt148 = dfa148.predict(input);
            	    switch (alt148) {
            	        case 1 :
            	            // InternalKim.g:6152:9: (lv_accessor_24_0= ruleFunction )
            	            {
            	            // InternalKim.g:6152:9: (lv_accessor_24_0= ruleFunction )
            	            // InternalKim.g:6153:10: lv_accessor_24_0= ruleFunction
            	            {
            	            if ( state.backtracking==0 ) {

            	              										newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getAccessorFunctionParserRuleCall_1_1_0());
            	              									
            	            }
            	            pushFollow(FOLLOW_98);
            	            lv_accessor_24_0=ruleFunction();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										if (current==null) {
            	              											current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	              										}
            	              										set(
            	              											current,
            	              											"accessor",
            	              											lv_accessor_24_0,
            	              											"org.integratedmodelling.kim.Kim.Function");
            	              										afterParserOrEnumRuleCall();
            	              									
            	            }

            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalKim.g:6176:3: ({...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) ) ) ) ) )
            	    {
            	    // InternalKim.g:6176:3: ({...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) ) ) ) ) )
            	    // InternalKim.g:6177:4: {...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObserveStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 2)");
            	    }
            	    // InternalKim.g:6177:114: ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) ) ) ) )
            	    // InternalKim.g:6178:5: ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 2);
            	    // InternalKim.g:6181:8: ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) ) ) )
            	    // InternalKim.g:6181:9: {...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObserveStatementBody", "true");
            	    }
            	    // InternalKim.g:6181:18: (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) ) )
            	    // InternalKim.g:6181:19: otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) )
            	    {
            	    otherlv_25=(Token)match(input,42,FOLLOW_33); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								newLeafNode(otherlv_25, grammarAccess.getObserveStatementBodyAccess().getMetadataKeyword_2_0());
            	      							
            	    }
            	    // InternalKim.g:6185:8: ( (lv_metadata_26_0= ruleMap ) )
            	    // InternalKim.g:6186:9: (lv_metadata_26_0= ruleMap )
            	    {
            	    // InternalKim.g:6186:9: (lv_metadata_26_0= ruleMap )
            	    // InternalKim.g:6187:10: lv_metadata_26_0= ruleMap
            	    {
            	    if ( state.backtracking==0 ) {

            	      										newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getMetadataMapParserRuleCall_2_1_0());
            	      									
            	    }
            	    pushFollow(FOLLOW_98);
            	    lv_metadata_26_0=ruleMap();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	      										}
            	      										set(
            	      											current,
            	      											"metadata",
            	      											lv_metadata_26_0,
            	      											"org.integratedmodelling.kim.Kim.Map");
            	      										afterParserOrEnumRuleCall();
            	      									
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt149 >= 1 ) break loop149;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(149, input);
                        throw eee;
                }
                cnt149++;
            } while (true);

            if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup()) ) {
                if (state.backtracking>0) {state.failed=true; return current;}
                throw new FailedPredicateException(input, "ruleObserveStatementBody", "getUnorderedGroupHelper().canLeave(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup())");
            }

            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup());

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleObserveStatementBody"


    // $ANTLR start "entryRuleObservableSemantics"
    // InternalKim.g:6224:1: entryRuleObservableSemantics returns [EObject current=null] : iv_ruleObservableSemantics= ruleObservableSemantics EOF ;
    public final EObject entryRuleObservableSemantics() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleObservableSemantics = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3()
        	);

        try {
            // InternalKim.g:6228:2: (iv_ruleObservableSemantics= ruleObservableSemantics EOF )
            // InternalKim.g:6229:2: iv_ruleObservableSemantics= ruleObservableSemantics EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getObservableSemanticsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleObservableSemantics=ruleObservableSemantics();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleObservableSemantics; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleObservableSemantics"


    // $ANTLR start "ruleObservableSemantics"
    // InternalKim.g:6238:1: ruleObservableSemantics returns [EObject current=null] : ( ( ( (lv_value_0_0= ruleValue ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) ) ) ;
    public final EObject ruleObservableSemantics() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_generic_2_0=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_11=null;
        Token lv_optional_15_0=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token lv_name_21_1=null;
        Token lv_name_21_2=null;
        EObject lv_value_0_0 = null;

        EObject lv_declaration_3_0 = null;

        AntlrDatatypeRuleToken lv_accordingTo_7_0 = null;

        EObject lv_unit_9_0 = null;

        EObject lv_currency_10_0 = null;

        EObject lv_unit_12_0 = null;

        EObject lv_valueOperators_13_0 = null;

        EObject lv_valueOperators_14_0 = null;

        EObject lv_from_17_0 = null;

        EObject lv_to_19_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3()
        	);

        try {
            // InternalKim.g:6247:2: ( ( ( ( (lv_value_0_0= ruleValue ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) ) ) )
            // InternalKim.g:6248:2: ( ( ( (lv_value_0_0= ruleValue ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) ) )
            {
            // InternalKim.g:6248:2: ( ( ( (lv_value_0_0= ruleValue ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) ) )
            // InternalKim.g:6249:3: ( ( (lv_value_0_0= ruleValue ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) )
            {
            // InternalKim.g:6249:3: ( ( (lv_value_0_0= ruleValue ) ) otherlv_1= 'as' )?
            int alt150=2;
            alt150 = dfa150.predict(input);
            switch (alt150) {
                case 1 :
                    // InternalKim.g:6250:4: ( (lv_value_0_0= ruleValue ) ) otherlv_1= 'as'
                    {
                    // InternalKim.g:6250:4: ( (lv_value_0_0= ruleValue ) )
                    // InternalKim.g:6251:5: (lv_value_0_0= ruleValue )
                    {
                    // InternalKim.g:6251:5: (lv_value_0_0= ruleValue )
                    // InternalKim.g:6252:6: lv_value_0_0= ruleValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getObservableSemanticsAccess().getValueValueParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_11);
                    lv_value_0_0=ruleValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
                      						}
                      						set(
                      							current,
                      							"value",
                      							lv_value_0_0,
                      							"org.integratedmodelling.kim.Kim.Value");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,25,FOLLOW_99); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getObservableSemanticsAccess().getAsKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:6274:3: ( (lv_generic_2_0= 'any' ) )?
            int alt151=2;
            int LA151_0 = input.LA(1);

            if ( (LA151_0==113) ) {
                alt151=1;
            }
            switch (alt151) {
                case 1 :
                    // InternalKim.g:6275:4: (lv_generic_2_0= 'any' )
                    {
                    // InternalKim.g:6275:4: (lv_generic_2_0= 'any' )
                    // InternalKim.g:6276:5: lv_generic_2_0= 'any'
                    {
                    lv_generic_2_0=(Token)match(input,113,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_generic_2_0, grammarAccess.getObservableSemanticsAccess().getGenericAnyKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getObservableSemanticsRule());
                      					}
                      					setWithLastConsumed(current, "generic", true, "any");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:6288:3: ( (lv_declaration_3_0= ruleConceptDeclaration ) )
            // InternalKim.g:6289:4: (lv_declaration_3_0= ruleConceptDeclaration )
            {
            // InternalKim.g:6289:4: (lv_declaration_3_0= ruleConceptDeclaration )
            // InternalKim.g:6290:5: lv_declaration_3_0= ruleConceptDeclaration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getObservableSemanticsAccess().getDeclarationConceptDeclarationParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_100);
            lv_declaration_3_0=ruleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
              					}
              					set(
              						current,
              						"declaration",
              						lv_declaration_3_0,
              						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:6307:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) )
            // InternalKim.g:6308:4: ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )* ) )
            {
            // InternalKim.g:6308:4: ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )* ) )
            // InternalKim.g:6309:5: ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());
            // InternalKim.g:6312:5: ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )* )
            // InternalKim.g:6313:6: ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )*
            {
            // InternalKim.g:6313:6: ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )*
            loop157:
            do {
                int alt157=7;
                alt157 = dfa157.predict(input);
                switch (alt157) {
            	case 1 :
            	    // InternalKim.g:6314:4: ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) )
            	    {
            	    // InternalKim.g:6314:4: ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) )
            	    // InternalKim.g:6315:5: {...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 0)");
            	    }
            	    // InternalKim.g:6315:116: ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) )
            	    // InternalKim.g:6316:6: ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 0);
            	    // InternalKim.g:6319:9: ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) )
            	    // InternalKim.g:6319:10: {...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:6319:19: (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) )
            	    // InternalKim.g:6319:20: otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) )
            	    {
            	    otherlv_5=(Token)match(input,35,FOLLOW_25); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_5, grammarAccess.getObservableSemanticsAccess().getAccordingKeyword_3_0_0());
            	      								
            	    }
            	    otherlv_6=(Token)match(input,36,FOLLOW_26); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_6, grammarAccess.getObservableSemanticsAccess().getToKeyword_3_0_1());
            	      								
            	    }
            	    // InternalKim.g:6327:9: ( (lv_accordingTo_7_0= rulePropertyId ) )
            	    // InternalKim.g:6328:10: (lv_accordingTo_7_0= rulePropertyId )
            	    {
            	    // InternalKim.g:6328:10: (lv_accordingTo_7_0= rulePropertyId )
            	    // InternalKim.g:6329:11: lv_accordingTo_7_0= rulePropertyId
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getAccordingToPropertyIdParserRuleCall_3_0_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_100);
            	    lv_accordingTo_7_0=rulePropertyId();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"accordingTo",
            	      												lv_accordingTo_7_0,
            	      												"org.integratedmodelling.kim.Kim.PropertyId");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKim.g:6352:4: ({...}? => ( ({...}? => ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) )
            	    {
            	    // InternalKim.g:6352:4: ({...}? => ( ({...}? => ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) )
            	    // InternalKim.g:6353:5: {...}? => ( ({...}? => ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 1)");
            	    }
            	    // InternalKim.g:6353:116: ( ({...}? => ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) ) ) )
            	    // InternalKim.g:6354:6: ({...}? => ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 1);
            	    // InternalKim.g:6357:9: ({...}? => ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) ) )
            	    // InternalKim.g:6357:10: {...}? => ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:6357:19: ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) )
            	    int alt153=2;
            	    int LA153_0 = input.LA(1);

            	    if ( (LA153_0==48) ) {
            	        alt153=1;
            	    }
            	    else if ( (LA153_0==114) && (synpred263_InternalKim())) {
            	        alt153=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 153, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt153) {
            	        case 1 :
            	            // InternalKim.g:6357:20: ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) )
            	            {
            	            // InternalKim.g:6357:20: ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) )
            	            // InternalKim.g:6358:10: ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) )
            	            {
            	            // InternalKim.g:6358:10: ( ( 'in' )=>otherlv_8= 'in' )
            	            // InternalKim.g:6359:11: ( 'in' )=>otherlv_8= 'in'
            	            {
            	            otherlv_8=(Token)match(input,48,FOLLOW_101); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_8, grammarAccess.getObservableSemanticsAccess().getInKeyword_3_1_0_0());
            	              										
            	            }

            	            }

            	            // InternalKim.g:6365:10: ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) )
            	            int alt152=2;
            	            int LA152_0 = input.LA(1);

            	            if ( (LA152_0==EOF||LA152_0==RULE_LOWERCASE_ID||LA152_0==RULE_STRING||(LA152_0>=RULE_CAMELCASE_ID && LA152_0<=RULE_LOWERCASE_DASHID)||(LA152_0>=RULE_UPPERCASE_PATH && LA152_0<=RULE_BACKCASE_ID)||LA152_0==20||LA152_0==27||(LA152_0>=30 && LA152_0<=31)||LA152_0==35||LA152_0==38||(LA152_0>=40 && LA152_0<=42)||LA152_0==48||(LA152_0>=54 && LA152_0<=56)||(LA152_0>=62 && LA152_0<=67)||(LA152_0>=76 && LA152_0<=89)||LA152_0==105||LA152_0==108||LA152_0==112||(LA152_0>=114 && LA152_0<=117)||(LA152_0>=119 && LA152_0<=122)||(LA152_0>=132 && LA152_0<=133)||(LA152_0>=141 && LA152_0<=142)||(LA152_0>=144 && LA152_0<=149)||(LA152_0>=151 && LA152_0<=163)||(LA152_0>=176 && LA152_0<=177)||(LA152_0>=180 && LA152_0<=182)||(LA152_0>=184 && LA152_0<=192)||(LA152_0>=195 && LA152_0<=205)||LA152_0==211||(LA152_0>=251 && LA152_0<=252)||LA152_0==259) ) {
            	                alt152=1;
            	            }
            	            else if ( (LA152_0==RULE_UPPERCASE_ID) ) {
            	                int LA152_2 = input.LA(2);

            	                if ( (LA152_2==EOF||(LA152_2>=RULE_LOWERCASE_ID && LA152_2<=RULE_STRING)||(LA152_2>=RULE_CAMELCASE_ID && LA152_2<=RULE_LOWERCASE_DASHID)||(LA152_2>=RULE_UPPERCASE_PATH && LA152_2<=RULE_BACKCASE_ID)||LA152_2==20||LA152_2==25||LA152_2==27||(LA152_2>=30 && LA152_2<=31)||LA152_2==35||LA152_2==38||(LA152_2>=40 && LA152_2<=42)||LA152_2==48||(LA152_2>=54 && LA152_2<=56)||(LA152_2>=62 && LA152_2<=67)||(LA152_2>=76 && LA152_2<=89)||(LA152_2>=105 && LA152_2<=106)||(LA152_2>=108 && LA152_2<=109)||LA152_2==112||(LA152_2>=114 && LA152_2<=117)||(LA152_2>=119 && LA152_2<=122)||(LA152_2>=132 && LA152_2<=133)||(LA152_2>=141 && LA152_2<=142)||(LA152_2>=144 && LA152_2<=149)||(LA152_2>=151 && LA152_2<=163)||(LA152_2>=176 && LA152_2<=177)||(LA152_2>=180 && LA152_2<=182)||(LA152_2>=184 && LA152_2<=192)||(LA152_2>=195 && LA152_2<=205)||LA152_2==211||(LA152_2>=251 && LA152_2<=252)||LA152_2==259) ) {
            	                    alt152=1;
            	                }
            	                else if ( (LA152_2==250) ) {
            	                    alt152=2;
            	                }
            	                else {
            	                    if (state.backtracking>0) {state.failed=true; return current;}
            	                    NoViableAltException nvae =
            	                        new NoViableAltException("", 152, 2, input);

            	                    throw nvae;
            	                }
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 152, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt152) {
            	                case 1 :
            	                    // InternalKim.g:6366:11: ( (lv_unit_9_0= ruleUnit ) )
            	                    {
            	                    // InternalKim.g:6366:11: ( (lv_unit_9_0= ruleUnit ) )
            	                    // InternalKim.g:6367:12: (lv_unit_9_0= ruleUnit )
            	                    {
            	                    // InternalKim.g:6367:12: (lv_unit_9_0= ruleUnit )
            	                    // InternalKim.g:6368:13: lv_unit_9_0= ruleUnit
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      													newCompositeNode(grammarAccess.getObservableSemanticsAccess().getUnitUnitParserRuleCall_3_1_0_1_0_0());
            	                      												
            	                    }
            	                    pushFollow(FOLLOW_100);
            	                    lv_unit_9_0=ruleUnit();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													if (current==null) {
            	                      														current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
            	                      													}
            	                      													set(
            	                      														current,
            	                      														"unit",
            	                      														lv_unit_9_0,
            	                      														"org.integratedmodelling.kim.Kim.Unit");
            	                      													afterParserOrEnumRuleCall();
            	                      												
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalKim.g:6386:11: ( (lv_currency_10_0= ruleCurrency ) )
            	                    {
            	                    // InternalKim.g:6386:11: ( (lv_currency_10_0= ruleCurrency ) )
            	                    // InternalKim.g:6387:12: (lv_currency_10_0= ruleCurrency )
            	                    {
            	                    // InternalKim.g:6387:12: (lv_currency_10_0= ruleCurrency )
            	                    // InternalKim.g:6388:13: lv_currency_10_0= ruleCurrency
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      													newCompositeNode(grammarAccess.getObservableSemanticsAccess().getCurrencyCurrencyParserRuleCall_3_1_0_1_1_0());
            	                      												
            	                    }
            	                    pushFollow(FOLLOW_100);
            	                    lv_currency_10_0=ruleCurrency();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													if (current==null) {
            	                      														current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
            	                      													}
            	                      													set(
            	                      														current,
            	                      														"currency",
            	                      														lv_currency_10_0,
            	                      														"org.integratedmodelling.kim.Kim.Currency");
            	                      													afterParserOrEnumRuleCall();
            	                      												
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:6408:9: ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) )
            	            {
            	            // InternalKim.g:6408:9: ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) )
            	            // InternalKim.g:6409:10: ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) )
            	            {
            	            // InternalKim.g:6409:10: ( ( 'per' )=>otherlv_11= 'per' )
            	            // InternalKim.g:6410:11: ( 'per' )=>otherlv_11= 'per'
            	            {
            	            otherlv_11=(Token)match(input,114,FOLLOW_101); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_11, grammarAccess.getObservableSemanticsAccess().getPerKeyword_3_1_1_0());
            	              										
            	            }

            	            }

            	            // InternalKim.g:6416:10: ( (lv_unit_12_0= ruleUnit ) )
            	            // InternalKim.g:6417:11: (lv_unit_12_0= ruleUnit )
            	            {
            	            // InternalKim.g:6417:11: (lv_unit_12_0= ruleUnit )
            	            // InternalKim.g:6418:12: lv_unit_12_0= ruleUnit
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getObservableSemanticsAccess().getUnitUnitParserRuleCall_3_1_1_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_100);
            	            lv_unit_12_0=ruleUnit();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
            	              												}
            	              												set(
            	              													current,
            	              													"unit",
            	              													lv_unit_12_0,
            	              													"org.integratedmodelling.kim.Kim.Unit");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalKim.g:6442:4: ({...}? => ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) )
            	    {
            	    // InternalKim.g:6442:4: ({...}? => ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) )
            	    // InternalKim.g:6443:5: {...}? => ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2)");
            	    }
            	    // InternalKim.g:6443:116: ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) )
            	    // InternalKim.g:6444:6: ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2);
            	    // InternalKim.g:6447:9: ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) )
            	    // InternalKim.g:6447:10: {...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:6447:19: ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* )
            	    // InternalKim.g:6447:20: ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )*
            	    {
            	    // InternalKim.g:6447:20: ( (lv_valueOperators_13_0= ruleValueOperator ) )
            	    // InternalKim.g:6448:10: (lv_valueOperators_13_0= ruleValueOperator )
            	    {
            	    // InternalKim.g:6448:10: (lv_valueOperators_13_0= ruleValueOperator )
            	    // InternalKim.g:6449:11: lv_valueOperators_13_0= ruleValueOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_3_2_0_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_100);
            	    lv_valueOperators_13_0=ruleValueOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
            	      											}
            	      											add(
            	      												current,
            	      												"valueOperators",
            	      												lv_valueOperators_13_0,
            	      												"org.integratedmodelling.kim.Kim.ValueOperator");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:6466:9: ( (lv_valueOperators_14_0= ruleValueOperator ) )*
            	    loop154:
            	    do {
            	        int alt154=2;
            	        alt154 = dfa154.predict(input);
            	        switch (alt154) {
            	    	case 1 :
            	    	    // InternalKim.g:6467:10: (lv_valueOperators_14_0= ruleValueOperator )
            	    	    {
            	    	    // InternalKim.g:6467:10: (lv_valueOperators_14_0= ruleValueOperator )
            	    	    // InternalKim.g:6468:11: lv_valueOperators_14_0= ruleValueOperator
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_3_2_1_0());
            	    	      										
            	    	    }
            	    	    pushFollow(FOLLOW_100);
            	    	    lv_valueOperators_14_0=ruleValueOperator();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      											if (current==null) {
            	    	      												current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
            	    	      											}
            	    	      											add(
            	    	      												current,
            	    	      												"valueOperators",
            	    	      												lv_valueOperators_14_0,
            	    	      												"org.integratedmodelling.kim.Kim.ValueOperator");
            	    	      											afterParserOrEnumRuleCall();
            	    	      										
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop154;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalKim.g:6491:4: ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) )
            	    {
            	    // InternalKim.g:6491:4: ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) )
            	    // InternalKim.g:6492:5: {...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 3)");
            	    }
            	    // InternalKim.g:6492:116: ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) )
            	    // InternalKim.g:6493:6: ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 3);
            	    // InternalKim.g:6496:9: ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) )
            	    // InternalKim.g:6496:10: {...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:6496:19: ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' )
            	    int alt155=2;
            	    int LA155_0 = input.LA(1);

            	    if ( (LA155_0==115) ) {
            	        alt155=1;
            	    }
            	    else if ( (LA155_0==116) ) {
            	        alt155=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 155, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt155) {
            	        case 1 :
            	            // InternalKim.g:6496:20: ( (lv_optional_15_0= 'optional' ) )
            	            {
            	            // InternalKim.g:6496:20: ( (lv_optional_15_0= 'optional' ) )
            	            // InternalKim.g:6497:10: (lv_optional_15_0= 'optional' )
            	            {
            	            // InternalKim.g:6497:10: (lv_optional_15_0= 'optional' )
            	            // InternalKim.g:6498:11: lv_optional_15_0= 'optional'
            	            {
            	            lv_optional_15_0=(Token)match(input,115,FOLLOW_100); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(lv_optional_15_0, grammarAccess.getObservableSemanticsAccess().getOptionalOptionalKeyword_3_3_0_0());
            	              										
            	            }
            	            if ( state.backtracking==0 ) {

            	              											if (current==null) {
            	              												current = createModelElement(grammarAccess.getObservableSemanticsRule());
            	              											}
            	              											setWithLastConsumed(current, "optional", true, "optional");
            	              										
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:6511:9: otherlv_16= 'required'
            	            {
            	            otherlv_16=(Token)match(input,116,FOLLOW_100); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(otherlv_16, grammarAccess.getObservableSemanticsAccess().getRequiredKeyword_3_3_1());
            	              								
            	            }

            	            }
            	            break;

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalKim.g:6521:4: ({...}? => ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) ) )
            	    {
            	    // InternalKim.g:6521:4: ({...}? => ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) ) )
            	    // InternalKim.g:6522:5: {...}? => ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 4) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 4)");
            	    }
            	    // InternalKim.g:6522:116: ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) )
            	    // InternalKim.g:6523:6: ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 4);
            	    // InternalKim.g:6526:9: ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) )
            	    // InternalKim.g:6526:10: {...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:6526:19: ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) )
            	    // InternalKim.g:6526:20: ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) )
            	    {
            	    // InternalKim.g:6526:20: ( (lv_from_17_0= ruleNumber ) )
            	    // InternalKim.g:6527:10: (lv_from_17_0= ruleNumber )
            	    {
            	    // InternalKim.g:6527:10: (lv_from_17_0= ruleNumber )
            	    // InternalKim.g:6528:11: lv_from_17_0= ruleNumber
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getFromNumberParserRuleCall_3_4_0_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_25);
            	    lv_from_17_0=ruleNumber();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"from",
            	      												lv_from_17_0,
            	      												"org.integratedmodelling.kim.Kim.Number");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    otherlv_18=(Token)match(input,36,FOLLOW_38); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_18, grammarAccess.getObservableSemanticsAccess().getToKeyword_3_4_1());
            	      								
            	    }
            	    // InternalKim.g:6549:9: ( (lv_to_19_0= ruleNumber ) )
            	    // InternalKim.g:6550:10: (lv_to_19_0= ruleNumber )
            	    {
            	    // InternalKim.g:6550:10: (lv_to_19_0= ruleNumber )
            	    // InternalKim.g:6551:11: lv_to_19_0= ruleNumber
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getToNumberParserRuleCall_3_4_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_100);
            	    lv_to_19_0=ruleNumber();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"to",
            	      												lv_to_19_0,
            	      												"org.integratedmodelling.kim.Kim.Number");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalKim.g:6574:4: ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) )
            	    {
            	    // InternalKim.g:6574:4: ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) )
            	    // InternalKim.g:6575:5: {...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5)");
            	    }
            	    // InternalKim.g:6575:116: ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) )
            	    // InternalKim.g:6576:6: ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5);
            	    // InternalKim.g:6579:9: ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) )
            	    // InternalKim.g:6579:10: {...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:6579:19: (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) )
            	    // InternalKim.g:6579:20: otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) )
            	    {
            	    otherlv_20=(Token)match(input,117,FOLLOW_46); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_20, grammarAccess.getObservableSemanticsAccess().getNamedKeyword_3_5_0());
            	      								
            	    }
            	    // InternalKim.g:6583:9: ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) )
            	    // InternalKim.g:6584:10: ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) )
            	    {
            	    // InternalKim.g:6584:10: ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) )
            	    // InternalKim.g:6585:11: (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING )
            	    {
            	    // InternalKim.g:6585:11: (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING )
            	    int alt156=2;
            	    int LA156_0 = input.LA(1);

            	    if ( (LA156_0==RULE_LOWERCASE_ID) ) {
            	        alt156=1;
            	    }
            	    else if ( (LA156_0==RULE_STRING) ) {
            	        alt156=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 156, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt156) {
            	        case 1 :
            	            // InternalKim.g:6586:12: lv_name_21_1= RULE_LOWERCASE_ID
            	            {
            	            lv_name_21_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_100); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_name_21_1, grammarAccess.getObservableSemanticsAccess().getNameLOWERCASE_IDTerminalRuleCall_3_5_1_0_0());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getObservableSemanticsRule());
            	              												}
            	              												setWithLastConsumed(
            	              													current,
            	              													"name",
            	              													lv_name_21_1,
            	              													"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
            	              											
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:6601:12: lv_name_21_2= RULE_STRING
            	            {
            	            lv_name_21_2=(Token)match(input,RULE_STRING,FOLLOW_100); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_name_21_2, grammarAccess.getObservableSemanticsAccess().getNameSTRINGTerminalRuleCall_3_5_1_0_1());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getObservableSemanticsRule());
            	              												}
            	              												setWithLastConsumed(
            	              													current,
            	              													"name",
            	              													lv_name_21_2,
            	              													"org.eclipse.xtext.common.Terminals.STRING");
            	              											
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop157;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleObservableSemantics"


    // $ANTLR start "entryRuleSimpleObservableSemantics"
    // InternalKim.g:6638:1: entryRuleSimpleObservableSemantics returns [EObject current=null] : iv_ruleSimpleObservableSemantics= ruleSimpleObservableSemantics EOF ;
    public final EObject entryRuleSimpleObservableSemantics() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimpleObservableSemantics = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2()
        	);

        try {
            // InternalKim.g:6642:2: (iv_ruleSimpleObservableSemantics= ruleSimpleObservableSemantics EOF )
            // InternalKim.g:6643:2: iv_ruleSimpleObservableSemantics= ruleSimpleObservableSemantics EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimpleObservableSemanticsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimpleObservableSemantics=ruleSimpleObservableSemantics();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimpleObservableSemantics; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleSimpleObservableSemantics"


    // $ANTLR start "ruleSimpleObservableSemantics"
    // InternalKim.g:6652:1: ruleSimpleObservableSemantics returns [EObject current=null] : ( ( ( (lv_generic_0_0= 'any' ) ) | ( (lv_global_1_0= 'all' ) ) | ( (lv_exclusive_2_0= 'only' ) ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) ) ) ) ) )* ) ) ) ) ;
    public final EObject ruleSimpleObservableSemantics() throws RecognitionException {
        EObject current = null;

        Token lv_generic_0_0=null;
        Token lv_global_1_0=null;
        Token lv_exclusive_2_0=null;
        Token otherlv_5=null;
        Token otherlv_8=null;
        Token otherlv_13=null;
        EObject lv_declaration_3_0 = null;

        EObject lv_unit_6_0 = null;

        EObject lv_currency_7_0 = null;

        EObject lv_unit_9_0 = null;

        EObject lv_valueOperators_10_0 = null;

        EObject lv_valueOperators_11_0 = null;

        EObject lv_from_12_0 = null;

        EObject lv_to_14_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2()
        	);

        try {
            // InternalKim.g:6661:2: ( ( ( ( (lv_generic_0_0= 'any' ) ) | ( (lv_global_1_0= 'all' ) ) | ( (lv_exclusive_2_0= 'only' ) ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) ) ) ) ) )* ) ) ) ) )
            // InternalKim.g:6662:2: ( ( ( (lv_generic_0_0= 'any' ) ) | ( (lv_global_1_0= 'all' ) ) | ( (lv_exclusive_2_0= 'only' ) ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) ) ) ) ) )* ) ) ) )
            {
            // InternalKim.g:6662:2: ( ( ( (lv_generic_0_0= 'any' ) ) | ( (lv_global_1_0= 'all' ) ) | ( (lv_exclusive_2_0= 'only' ) ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) ) ) ) ) )* ) ) ) )
            // InternalKim.g:6663:3: ( ( (lv_generic_0_0= 'any' ) ) | ( (lv_global_1_0= 'all' ) ) | ( (lv_exclusive_2_0= 'only' ) ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) ) ) ) ) )* ) ) )
            {
            // InternalKim.g:6663:3: ( ( (lv_generic_0_0= 'any' ) ) | ( (lv_global_1_0= 'all' ) ) | ( (lv_exclusive_2_0= 'only' ) ) )?
            int alt158=4;
            switch ( input.LA(1) ) {
                case 113:
                    {
                    alt158=1;
                    }
                    break;
                case 118:
                    {
                    alt158=2;
                    }
                    break;
                case 83:
                    {
                    alt158=3;
                    }
                    break;
            }

            switch (alt158) {
                case 1 :
                    // InternalKim.g:6664:4: ( (lv_generic_0_0= 'any' ) )
                    {
                    // InternalKim.g:6664:4: ( (lv_generic_0_0= 'any' ) )
                    // InternalKim.g:6665:5: (lv_generic_0_0= 'any' )
                    {
                    // InternalKim.g:6665:5: (lv_generic_0_0= 'any' )
                    // InternalKim.g:6666:6: lv_generic_0_0= 'any'
                    {
                    lv_generic_0_0=(Token)match(input,113,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_generic_0_0, grammarAccess.getSimpleObservableSemanticsAccess().getGenericAnyKeyword_0_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSimpleObservableSemanticsRule());
                      						}
                      						setWithLastConsumed(current, "generic", true, "any");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:6679:4: ( (lv_global_1_0= 'all' ) )
                    {
                    // InternalKim.g:6679:4: ( (lv_global_1_0= 'all' ) )
                    // InternalKim.g:6680:5: (lv_global_1_0= 'all' )
                    {
                    // InternalKim.g:6680:5: (lv_global_1_0= 'all' )
                    // InternalKim.g:6681:6: lv_global_1_0= 'all'
                    {
                    lv_global_1_0=(Token)match(input,118,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_global_1_0, grammarAccess.getSimpleObservableSemanticsAccess().getGlobalAllKeyword_0_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSimpleObservableSemanticsRule());
                      						}
                      						setWithLastConsumed(current, "global", true, "all");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:6694:4: ( (lv_exclusive_2_0= 'only' ) )
                    {
                    // InternalKim.g:6694:4: ( (lv_exclusive_2_0= 'only' ) )
                    // InternalKim.g:6695:5: (lv_exclusive_2_0= 'only' )
                    {
                    // InternalKim.g:6695:5: (lv_exclusive_2_0= 'only' )
                    // InternalKim.g:6696:6: lv_exclusive_2_0= 'only'
                    {
                    lv_exclusive_2_0=(Token)match(input,83,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_exclusive_2_0, grammarAccess.getSimpleObservableSemanticsAccess().getExclusiveOnlyKeyword_0_2_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSimpleObservableSemanticsRule());
                      						}
                      						setWithLastConsumed(current, "exclusive", true, "only");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalKim.g:6709:3: ( (lv_declaration_3_0= ruleConceptDeclaration ) )
            // InternalKim.g:6710:4: (lv_declaration_3_0= ruleConceptDeclaration )
            {
            // InternalKim.g:6710:4: (lv_declaration_3_0= ruleConceptDeclaration )
            // InternalKim.g:6711:5: lv_declaration_3_0= ruleConceptDeclaration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getDeclarationConceptDeclarationParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_102);
            lv_declaration_3_0=ruleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSimpleObservableSemanticsRule());
              					}
              					set(
              						current,
              						"declaration",
              						lv_declaration_3_0,
              						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:6728:3: ( ( ( ( ({...}? => ( ({...}? => ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) ) ) ) ) )* ) ) )
            // InternalKim.g:6729:4: ( ( ( ({...}? => ( ({...}? => ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) ) ) ) ) )* ) )
            {
            // InternalKim.g:6729:4: ( ( ( ({...}? => ( ({...}? => ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) ) ) ) ) )* ) )
            // InternalKim.g:6730:5: ( ( ({...}? => ( ({...}? => ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2());
            // InternalKim.g:6733:5: ( ( ({...}? => ( ({...}? => ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) ) ) ) ) )* )
            // InternalKim.g:6734:6: ( ({...}? => ( ({...}? => ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) ) ) ) ) )*
            {
            // InternalKim.g:6734:6: ( ({...}? => ( ({...}? => ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) ) ) ) ) )*
            loop162:
            do {
                int alt162=4;
                alt162 = dfa162.predict(input);
                switch (alt162) {
            	case 1 :
            	    // InternalKim.g:6735:4: ({...}? => ( ({...}? => ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) ) ) ) )
            	    {
            	    // InternalKim.g:6735:4: ({...}? => ( ({...}? => ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) ) ) ) )
            	    // InternalKim.g:6736:5: {...}? => ( ({...}? => ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleSimpleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 0)");
            	    }
            	    // InternalKim.g:6736:122: ( ({...}? => ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) ) ) )
            	    // InternalKim.g:6737:6: ({...}? => ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 0);
            	    // InternalKim.g:6740:9: ({...}? => ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) ) )
            	    // InternalKim.g:6740:10: {...}? => ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleSimpleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:6740:19: ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) )
            	    // InternalKim.g:6740:20: ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) )
            	    {
            	    // InternalKim.g:6740:20: ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) )
            	    int alt160=2;
            	    int LA160_0 = input.LA(1);

            	    if ( (LA160_0==48) ) {
            	        alt160=1;
            	    }
            	    else if ( (LA160_0==114) && (synpred281_InternalKim())) {
            	        alt160=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 160, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt160) {
            	        case 1 :
            	            // InternalKim.g:6741:10: ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) )
            	            {
            	            // InternalKim.g:6741:10: ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) )
            	            // InternalKim.g:6742:11: ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) )
            	            {
            	            // InternalKim.g:6762:11: ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) )
            	            // InternalKim.g:6763:12: ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) )
            	            {
            	            // InternalKim.g:6763:12: ( ( 'in' )=>otherlv_5= 'in' )
            	            // InternalKim.g:6764:13: ( 'in' )=>otherlv_5= 'in'
            	            {
            	            otherlv_5=(Token)match(input,48,FOLLOW_101); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(otherlv_5, grammarAccess.getSimpleObservableSemanticsAccess().getInKeyword_2_0_0_0_0_0());
            	              												
            	            }

            	            }

            	            // InternalKim.g:6770:12: ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) )
            	            int alt159=2;
            	            int LA159_0 = input.LA(1);

            	            if ( (LA159_0==EOF||LA159_0==RULE_LOWERCASE_ID||LA159_0==RULE_STRING||(LA159_0>=RULE_EXPR && LA159_0<=RULE_LOWERCASE_DASHID)||(LA159_0>=RULE_UPPERCASE_PATH && LA159_0<=RULE_BACKCASE_ID)||(LA159_0>=27 && LA159_0<=29)||LA159_0==38||(LA159_0>=40 && LA159_0<=41)||(LA159_0>=48 && LA159_0<=50)||LA159_0==55||(LA159_0>=76 && LA159_0<=89)||LA159_0==108||(LA159_0>=113 && LA159_0<=114)||(LA159_0>=118 && LA159_0<=122)||(LA159_0>=132 && LA159_0<=133)||(LA159_0>=140 && LA159_0<=142)||(LA159_0>=144 && LA159_0<=149)||(LA159_0>=151 && LA159_0<=163)||LA159_0==216||(LA159_0>=251 && LA159_0<=252)||LA159_0==259) ) {
            	                alt159=1;
            	            }
            	            else if ( (LA159_0==RULE_UPPERCASE_ID) ) {
            	                int LA159_2 = input.LA(2);

            	                if ( (LA159_2==EOF||(LA159_2>=RULE_LOWERCASE_ID && LA159_2<=RULE_STRING)||(LA159_2>=RULE_EXPR && LA159_2<=RULE_LOWERCASE_DASHID)||LA159_2==RULE_UPPERCASE_PATH||(LA159_2>=27 && LA159_2<=29)||LA159_2==38||(LA159_2>=40 && LA159_2<=41)||(LA159_2>=48 && LA159_2<=50)||LA159_2==55||(LA159_2>=76 && LA159_2<=89)||LA159_2==106||(LA159_2>=108 && LA159_2<=109)||(LA159_2>=113 && LA159_2<=114)||(LA159_2>=118 && LA159_2<=122)||(LA159_2>=132 && LA159_2<=133)||(LA159_2>=140 && LA159_2<=142)||(LA159_2>=144 && LA159_2<=149)||(LA159_2>=151 && LA159_2<=163)||LA159_2==216||(LA159_2>=251 && LA159_2<=252)||LA159_2==259) ) {
            	                    alt159=1;
            	                }
            	                else if ( (LA159_2==250) ) {
            	                    alt159=2;
            	                }
            	                else {
            	                    if (state.backtracking>0) {state.failed=true; return current;}
            	                    NoViableAltException nvae =
            	                        new NoViableAltException("", 159, 2, input);

            	                    throw nvae;
            	                }
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 159, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt159) {
            	                case 1 :
            	                    // InternalKim.g:6771:13: ( (lv_unit_6_0= ruleUnit ) )
            	                    {
            	                    // InternalKim.g:6771:13: ( (lv_unit_6_0= ruleUnit ) )
            	                    // InternalKim.g:6772:14: (lv_unit_6_0= ruleUnit )
            	                    {
            	                    // InternalKim.g:6772:14: (lv_unit_6_0= ruleUnit )
            	                    // InternalKim.g:6773:15: lv_unit_6_0= ruleUnit
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      															newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getUnitUnitParserRuleCall_2_0_0_0_0_1_0_0());
            	                      														
            	                    }
            	                    pushFollow(FOLLOW_102);
            	                    lv_unit_6_0=ruleUnit();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      															if (current==null) {
            	                      																current = createModelElementForParent(grammarAccess.getSimpleObservableSemanticsRule());
            	                      															}
            	                      															set(
            	                      																current,
            	                      																"unit",
            	                      																lv_unit_6_0,
            	                      																"org.integratedmodelling.kim.Kim.Unit");
            	                      															afterParserOrEnumRuleCall();
            	                      														
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalKim.g:6791:13: ( (lv_currency_7_0= ruleCurrency ) )
            	                    {
            	                    // InternalKim.g:6791:13: ( (lv_currency_7_0= ruleCurrency ) )
            	                    // InternalKim.g:6792:14: (lv_currency_7_0= ruleCurrency )
            	                    {
            	                    // InternalKim.g:6792:14: (lv_currency_7_0= ruleCurrency )
            	                    // InternalKim.g:6793:15: lv_currency_7_0= ruleCurrency
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      															newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getCurrencyCurrencyParserRuleCall_2_0_0_0_0_1_1_0());
            	                      														
            	                    }
            	                    pushFollow(FOLLOW_102);
            	                    lv_currency_7_0=ruleCurrency();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      															if (current==null) {
            	                      																current = createModelElementForParent(grammarAccess.getSimpleObservableSemanticsRule());
            	                      															}
            	                      															set(
            	                      																current,
            	                      																"currency",
            	                      																lv_currency_7_0,
            	                      																"org.integratedmodelling.kim.Kim.Currency");
            	                      															afterParserOrEnumRuleCall();
            	                      														
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:6814:10: ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) )
            	            {
            	            // InternalKim.g:6814:10: ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) )
            	            // InternalKim.g:6815:11: ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) )
            	            {
            	            // InternalKim.g:6815:11: ( ( 'per' )=>otherlv_8= 'per' )
            	            // InternalKim.g:6816:12: ( 'per' )=>otherlv_8= 'per'
            	            {
            	            otherlv_8=(Token)match(input,114,FOLLOW_103); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(otherlv_8, grammarAccess.getSimpleObservableSemanticsAccess().getPerKeyword_2_0_0_1_0());
            	              											
            	            }

            	            }

            	            // InternalKim.g:6822:11: ( (lv_unit_9_0= ruleUnit ) )
            	            // InternalKim.g:6823:12: (lv_unit_9_0= ruleUnit )
            	            {
            	            // InternalKim.g:6823:12: (lv_unit_9_0= ruleUnit )
            	            // InternalKim.g:6824:13: lv_unit_9_0= ruleUnit
            	            {
            	            if ( state.backtracking==0 ) {

            	              													newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getUnitUnitParserRuleCall_2_0_0_1_1_0());
            	              												
            	            }
            	            pushFollow(FOLLOW_102);
            	            lv_unit_9_0=ruleUnit();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElementForParent(grammarAccess.getSimpleObservableSemanticsRule());
            	              													}
            	              													set(
            	              														current,
            	              														"unit",
            	              														lv_unit_9_0,
            	              														"org.integratedmodelling.kim.Kim.Unit");
            	              													afterParserOrEnumRuleCall();
            	              												
            	            }

            	            }


            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKim.g:6849:4: ({...}? => ( ({...}? => ( ( (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* ) ) ) )
            	    {
            	    // InternalKim.g:6849:4: ({...}? => ( ({...}? => ( ( (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* ) ) ) )
            	    // InternalKim.g:6850:5: {...}? => ( ({...}? => ( ( (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleSimpleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 1)");
            	    }
            	    // InternalKim.g:6850:122: ( ({...}? => ( ( (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* ) ) )
            	    // InternalKim.g:6851:6: ({...}? => ( ( (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 1);
            	    // InternalKim.g:6854:9: ({...}? => ( ( (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* ) )
            	    // InternalKim.g:6854:10: {...}? => ( ( (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleSimpleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:6854:19: ( ( (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* )
            	    // InternalKim.g:6854:20: ( (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )*
            	    {
            	    // InternalKim.g:6854:20: ( (lv_valueOperators_10_0= ruleValueOperator ) )
            	    // InternalKim.g:6855:10: (lv_valueOperators_10_0= ruleValueOperator )
            	    {
            	    // InternalKim.g:6855:10: (lv_valueOperators_10_0= ruleValueOperator )
            	    // InternalKim.g:6856:11: lv_valueOperators_10_0= ruleValueOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_2_1_0_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_102);
            	    lv_valueOperators_10_0=ruleValueOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getSimpleObservableSemanticsRule());
            	      											}
            	      											add(
            	      												current,
            	      												"valueOperators",
            	      												lv_valueOperators_10_0,
            	      												"org.integratedmodelling.kim.Kim.ValueOperator");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:6873:9: ( (lv_valueOperators_11_0= ruleValueOperator ) )*
            	    loop161:
            	    do {
            	        int alt161=2;
            	        alt161 = dfa161.predict(input);
            	        switch (alt161) {
            	    	case 1 :
            	    	    // InternalKim.g:6874:10: (lv_valueOperators_11_0= ruleValueOperator )
            	    	    {
            	    	    // InternalKim.g:6874:10: (lv_valueOperators_11_0= ruleValueOperator )
            	    	    // InternalKim.g:6875:11: lv_valueOperators_11_0= ruleValueOperator
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      											newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_2_1_1_0());
            	    	      										
            	    	    }
            	    	    pushFollow(FOLLOW_102);
            	    	    lv_valueOperators_11_0=ruleValueOperator();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      											if (current==null) {
            	    	      												current = createModelElementForParent(grammarAccess.getSimpleObservableSemanticsRule());
            	    	      											}
            	    	      											add(
            	    	      												current,
            	    	      												"valueOperators",
            	    	      												lv_valueOperators_11_0,
            	    	      												"org.integratedmodelling.kim.Kim.ValueOperator");
            	    	      											afterParserOrEnumRuleCall();
            	    	      										
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop161;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalKim.g:6898:4: ({...}? => ( ({...}? => ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) ) ) ) )
            	    {
            	    // InternalKim.g:6898:4: ({...}? => ( ({...}? => ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) ) ) ) )
            	    // InternalKim.g:6899:5: {...}? => ( ({...}? => ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleSimpleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 2)");
            	    }
            	    // InternalKim.g:6899:122: ( ({...}? => ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) ) ) )
            	    // InternalKim.g:6900:6: ({...}? => ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 2);
            	    // InternalKim.g:6903:9: ({...}? => ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) ) )
            	    // InternalKim.g:6903:10: {...}? => ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleSimpleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:6903:19: ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) )
            	    // InternalKim.g:6903:20: ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) )
            	    {
            	    // InternalKim.g:6903:20: ( (lv_from_12_0= ruleNumber ) )
            	    // InternalKim.g:6904:10: (lv_from_12_0= ruleNumber )
            	    {
            	    // InternalKim.g:6904:10: (lv_from_12_0= ruleNumber )
            	    // InternalKim.g:6905:11: lv_from_12_0= ruleNumber
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getFromNumberParserRuleCall_2_2_0_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_25);
            	    lv_from_12_0=ruleNumber();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getSimpleObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"from",
            	      												lv_from_12_0,
            	      												"org.integratedmodelling.kim.Kim.Number");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    otherlv_13=(Token)match(input,36,FOLLOW_38); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_13, grammarAccess.getSimpleObservableSemanticsAccess().getToKeyword_2_2_1());
            	      								
            	    }
            	    // InternalKim.g:6926:9: ( (lv_to_14_0= ruleNumber ) )
            	    // InternalKim.g:6927:10: (lv_to_14_0= ruleNumber )
            	    {
            	    // InternalKim.g:6927:10: (lv_to_14_0= ruleNumber )
            	    // InternalKim.g:6928:11: lv_to_14_0= ruleNumber
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getToNumberParserRuleCall_2_2_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_102);
            	    lv_to_14_0=ruleNumber();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getSimpleObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"to",
            	      												lv_to_14_0,
            	      												"org.integratedmodelling.kim.Kim.Number");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop162;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2());

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleSimpleObservableSemantics"


    // $ANTLR start "entryRuleValueOperator"
    // InternalKim.g:6965:1: entryRuleValueOperator returns [EObject current=null] : iv_ruleValueOperator= ruleValueOperator EOF ;
    public final EObject entryRuleValueOperator() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValueOperator = null;


        try {
            // InternalKim.g:6965:54: (iv_ruleValueOperator= ruleValueOperator EOF )
            // InternalKim.g:6966:2: iv_ruleValueOperator= ruleValueOperator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValueOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleValueOperator=ruleValueOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValueOperator; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValueOperator"


    // $ANTLR start "ruleValueOperator"
    // InternalKim.g:6972:1: ruleValueOperator returns [EObject current=null] : ( ( ( ( (lv_modifier_0_0= ruleVALUE_OPERATOR ) ) | ( ( (lv_downTo_1_0= 'down' ) ) otherlv_2= 'to' ) ) ( ( (lv_comparisonValue_3_0= ruleNumber ) ) | ( (lv_comparisonQuantity_4_0= ruleQuantity ) ) | ( ( (lv_comparisonConcept_5_0= ruleConceptDeclaration ) ) (otherlv_6= ',' ( (lv_comparisonConcept_7_0= ruleConceptDeclaration ) ) )* ) | (otherlv_8= '(' ( (lv_comparisonObservable_9_0= ruleObservableSemantics ) ) otherlv_10= ')' ) ) ) | ( (lv_total_11_0= 'total' ) ) | ( (lv_averaged_12_0= 'averaged' ) ) | ( (lv_summed_13_0= 'summed' ) ) ) ;
    public final EObject ruleValueOperator() throws RecognitionException {
        EObject current = null;

        Token lv_downTo_1_0=null;
        Token otherlv_2=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token lv_total_11_0=null;
        Token lv_averaged_12_0=null;
        Token lv_summed_13_0=null;
        AntlrDatatypeRuleToken lv_modifier_0_0 = null;

        EObject lv_comparisonValue_3_0 = null;

        EObject lv_comparisonQuantity_4_0 = null;

        EObject lv_comparisonConcept_5_0 = null;

        EObject lv_comparisonConcept_7_0 = null;

        EObject lv_comparisonObservable_9_0 = null;



        	enterRule();

        try {
            // InternalKim.g:6978:2: ( ( ( ( ( (lv_modifier_0_0= ruleVALUE_OPERATOR ) ) | ( ( (lv_downTo_1_0= 'down' ) ) otherlv_2= 'to' ) ) ( ( (lv_comparisonValue_3_0= ruleNumber ) ) | ( (lv_comparisonQuantity_4_0= ruleQuantity ) ) | ( ( (lv_comparisonConcept_5_0= ruleConceptDeclaration ) ) (otherlv_6= ',' ( (lv_comparisonConcept_7_0= ruleConceptDeclaration ) ) )* ) | (otherlv_8= '(' ( (lv_comparisonObservable_9_0= ruleObservableSemantics ) ) otherlv_10= ')' ) ) ) | ( (lv_total_11_0= 'total' ) ) | ( (lv_averaged_12_0= 'averaged' ) ) | ( (lv_summed_13_0= 'summed' ) ) ) )
            // InternalKim.g:6979:2: ( ( ( ( (lv_modifier_0_0= ruleVALUE_OPERATOR ) ) | ( ( (lv_downTo_1_0= 'down' ) ) otherlv_2= 'to' ) ) ( ( (lv_comparisonValue_3_0= ruleNumber ) ) | ( (lv_comparisonQuantity_4_0= ruleQuantity ) ) | ( ( (lv_comparisonConcept_5_0= ruleConceptDeclaration ) ) (otherlv_6= ',' ( (lv_comparisonConcept_7_0= ruleConceptDeclaration ) ) )* ) | (otherlv_8= '(' ( (lv_comparisonObservable_9_0= ruleObservableSemantics ) ) otherlv_10= ')' ) ) ) | ( (lv_total_11_0= 'total' ) ) | ( (lv_averaged_12_0= 'averaged' ) ) | ( (lv_summed_13_0= 'summed' ) ) )
            {
            // InternalKim.g:6979:2: ( ( ( ( (lv_modifier_0_0= ruleVALUE_OPERATOR ) ) | ( ( (lv_downTo_1_0= 'down' ) ) otherlv_2= 'to' ) ) ( ( (lv_comparisonValue_3_0= ruleNumber ) ) | ( (lv_comparisonQuantity_4_0= ruleQuantity ) ) | ( ( (lv_comparisonConcept_5_0= ruleConceptDeclaration ) ) (otherlv_6= ',' ( (lv_comparisonConcept_7_0= ruleConceptDeclaration ) ) )* ) | (otherlv_8= '(' ( (lv_comparisonObservable_9_0= ruleObservableSemantics ) ) otherlv_10= ')' ) ) ) | ( (lv_total_11_0= 'total' ) ) | ( (lv_averaged_12_0= 'averaged' ) ) | ( (lv_summed_13_0= 'summed' ) ) )
            int alt166=4;
            switch ( input.LA(1) ) {
            case 55:
            case 76:
            case 77:
            case 78:
            case 79:
            case 80:
            case 81:
            case 82:
            case 83:
            case 84:
            case 85:
            case 86:
            case 87:
            case 88:
            case 89:
            case 119:
                {
                alt166=1;
                }
                break;
            case 120:
                {
                alt166=2;
                }
                break;
            case 121:
                {
                alt166=3;
                }
                break;
            case 122:
                {
                alt166=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 166, 0, input);

                throw nvae;
            }

            switch (alt166) {
                case 1 :
                    // InternalKim.g:6980:3: ( ( ( (lv_modifier_0_0= ruleVALUE_OPERATOR ) ) | ( ( (lv_downTo_1_0= 'down' ) ) otherlv_2= 'to' ) ) ( ( (lv_comparisonValue_3_0= ruleNumber ) ) | ( (lv_comparisonQuantity_4_0= ruleQuantity ) ) | ( ( (lv_comparisonConcept_5_0= ruleConceptDeclaration ) ) (otherlv_6= ',' ( (lv_comparisonConcept_7_0= ruleConceptDeclaration ) ) )* ) | (otherlv_8= '(' ( (lv_comparisonObservable_9_0= ruleObservableSemantics ) ) otherlv_10= ')' ) ) )
                    {
                    // InternalKim.g:6980:3: ( ( ( (lv_modifier_0_0= ruleVALUE_OPERATOR ) ) | ( ( (lv_downTo_1_0= 'down' ) ) otherlv_2= 'to' ) ) ( ( (lv_comparisonValue_3_0= ruleNumber ) ) | ( (lv_comparisonQuantity_4_0= ruleQuantity ) ) | ( ( (lv_comparisonConcept_5_0= ruleConceptDeclaration ) ) (otherlv_6= ',' ( (lv_comparisonConcept_7_0= ruleConceptDeclaration ) ) )* ) | (otherlv_8= '(' ( (lv_comparisonObservable_9_0= ruleObservableSemantics ) ) otherlv_10= ')' ) ) )
                    // InternalKim.g:6981:4: ( ( (lv_modifier_0_0= ruleVALUE_OPERATOR ) ) | ( ( (lv_downTo_1_0= 'down' ) ) otherlv_2= 'to' ) ) ( ( (lv_comparisonValue_3_0= ruleNumber ) ) | ( (lv_comparisonQuantity_4_0= ruleQuantity ) ) | ( ( (lv_comparisonConcept_5_0= ruleConceptDeclaration ) ) (otherlv_6= ',' ( (lv_comparisonConcept_7_0= ruleConceptDeclaration ) ) )* ) | (otherlv_8= '(' ( (lv_comparisonObservable_9_0= ruleObservableSemantics ) ) otherlv_10= ')' ) )
                    {
                    // InternalKim.g:6981:4: ( ( (lv_modifier_0_0= ruleVALUE_OPERATOR ) ) | ( ( (lv_downTo_1_0= 'down' ) ) otherlv_2= 'to' ) )
                    int alt163=2;
                    int LA163_0 = input.LA(1);

                    if ( (LA163_0==55||(LA163_0>=76 && LA163_0<=89)) ) {
                        alt163=1;
                    }
                    else if ( (LA163_0==119) ) {
                        alt163=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 163, 0, input);

                        throw nvae;
                    }
                    switch (alt163) {
                        case 1 :
                            // InternalKim.g:6982:5: ( (lv_modifier_0_0= ruleVALUE_OPERATOR ) )
                            {
                            // InternalKim.g:6982:5: ( (lv_modifier_0_0= ruleVALUE_OPERATOR ) )
                            // InternalKim.g:6983:6: (lv_modifier_0_0= ruleVALUE_OPERATOR )
                            {
                            // InternalKim.g:6983:6: (lv_modifier_0_0= ruleVALUE_OPERATOR )
                            // InternalKim.g:6984:7: lv_modifier_0_0= ruleVALUE_OPERATOR
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getValueOperatorAccess().getModifierVALUE_OPERATORParserRuleCall_0_0_0_0());
                              						
                            }
                            pushFollow(FOLLOW_104);
                            lv_modifier_0_0=ruleVALUE_OPERATOR();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getValueOperatorRule());
                              							}
                              							set(
                              								current,
                              								"modifier",
                              								lv_modifier_0_0,
                              								"org.integratedmodelling.kim.Kim.VALUE_OPERATOR");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:7002:5: ( ( (lv_downTo_1_0= 'down' ) ) otherlv_2= 'to' )
                            {
                            // InternalKim.g:7002:5: ( ( (lv_downTo_1_0= 'down' ) ) otherlv_2= 'to' )
                            // InternalKim.g:7003:6: ( (lv_downTo_1_0= 'down' ) ) otherlv_2= 'to'
                            {
                            // InternalKim.g:7003:6: ( (lv_downTo_1_0= 'down' ) )
                            // InternalKim.g:7004:7: (lv_downTo_1_0= 'down' )
                            {
                            // InternalKim.g:7004:7: (lv_downTo_1_0= 'down' )
                            // InternalKim.g:7005:8: lv_downTo_1_0= 'down'
                            {
                            lv_downTo_1_0=(Token)match(input,119,FOLLOW_25); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_downTo_1_0, grammarAccess.getValueOperatorAccess().getDownToDownKeyword_0_0_1_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getValueOperatorRule());
                              								}
                              								setWithLastConsumed(current, "downTo", lv_downTo_1_0, "down");
                              							
                            }

                            }


                            }

                            otherlv_2=(Token)match(input,36,FOLLOW_104); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_2, grammarAccess.getValueOperatorAccess().getToKeyword_0_0_1_1());
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalKim.g:7023:4: ( ( (lv_comparisonValue_3_0= ruleNumber ) ) | ( (lv_comparisonQuantity_4_0= ruleQuantity ) ) | ( ( (lv_comparisonConcept_5_0= ruleConceptDeclaration ) ) (otherlv_6= ',' ( (lv_comparisonConcept_7_0= ruleConceptDeclaration ) ) )* ) | (otherlv_8= '(' ( (lv_comparisonObservable_9_0= ruleObservableSemantics ) ) otherlv_10= ')' ) )
                    int alt165=4;
                    alt165 = dfa165.predict(input);
                    switch (alt165) {
                        case 1 :
                            // InternalKim.g:7024:5: ( (lv_comparisonValue_3_0= ruleNumber ) )
                            {
                            // InternalKim.g:7024:5: ( (lv_comparisonValue_3_0= ruleNumber ) )
                            // InternalKim.g:7025:6: (lv_comparisonValue_3_0= ruleNumber )
                            {
                            // InternalKim.g:7025:6: (lv_comparisonValue_3_0= ruleNumber )
                            // InternalKim.g:7026:7: lv_comparisonValue_3_0= ruleNumber
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getValueOperatorAccess().getComparisonValueNumberParserRuleCall_0_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_comparisonValue_3_0=ruleNumber();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getValueOperatorRule());
                              							}
                              							set(
                              								current,
                              								"comparisonValue",
                              								lv_comparisonValue_3_0,
                              								"org.integratedmodelling.kim.Kim.Number");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:7044:5: ( (lv_comparisonQuantity_4_0= ruleQuantity ) )
                            {
                            // InternalKim.g:7044:5: ( (lv_comparisonQuantity_4_0= ruleQuantity ) )
                            // InternalKim.g:7045:6: (lv_comparisonQuantity_4_0= ruleQuantity )
                            {
                            // InternalKim.g:7045:6: (lv_comparisonQuantity_4_0= ruleQuantity )
                            // InternalKim.g:7046:7: lv_comparisonQuantity_4_0= ruleQuantity
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getValueOperatorAccess().getComparisonQuantityQuantityParserRuleCall_0_1_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_comparisonQuantity_4_0=ruleQuantity();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getValueOperatorRule());
                              							}
                              							set(
                              								current,
                              								"comparisonQuantity",
                              								lv_comparisonQuantity_4_0,
                              								"org.integratedmodelling.kim.Kim.Quantity");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 3 :
                            // InternalKim.g:7064:5: ( ( (lv_comparisonConcept_5_0= ruleConceptDeclaration ) ) (otherlv_6= ',' ( (lv_comparisonConcept_7_0= ruleConceptDeclaration ) ) )* )
                            {
                            // InternalKim.g:7064:5: ( ( (lv_comparisonConcept_5_0= ruleConceptDeclaration ) ) (otherlv_6= ',' ( (lv_comparisonConcept_7_0= ruleConceptDeclaration ) ) )* )
                            // InternalKim.g:7065:6: ( (lv_comparisonConcept_5_0= ruleConceptDeclaration ) ) (otherlv_6= ',' ( (lv_comparisonConcept_7_0= ruleConceptDeclaration ) ) )*
                            {
                            // InternalKim.g:7065:6: ( (lv_comparisonConcept_5_0= ruleConceptDeclaration ) )
                            // InternalKim.g:7066:7: (lv_comparisonConcept_5_0= ruleConceptDeclaration )
                            {
                            // InternalKim.g:7066:7: (lv_comparisonConcept_5_0= ruleConceptDeclaration )
                            // InternalKim.g:7067:8: lv_comparisonConcept_5_0= ruleConceptDeclaration
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getValueOperatorAccess().getComparisonConceptConceptDeclarationParserRuleCall_0_1_2_0_0());
                              							
                            }
                            pushFollow(FOLLOW_34);
                            lv_comparisonConcept_5_0=ruleConceptDeclaration();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getValueOperatorRule());
                              								}
                              								add(
                              									current,
                              									"comparisonConcept",
                              									lv_comparisonConcept_5_0,
                              									"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalKim.g:7084:6: (otherlv_6= ',' ( (lv_comparisonConcept_7_0= ruleConceptDeclaration ) ) )*
                            loop164:
                            do {
                                int alt164=2;
                                alt164 = dfa164.predict(input);
                                switch (alt164) {
                            	case 1 :
                            	    // InternalKim.g:7085:7: otherlv_6= ',' ( (lv_comparisonConcept_7_0= ruleConceptDeclaration ) )
                            	    {
                            	    otherlv_6=(Token)match(input,27,FOLLOW_23); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_6, grammarAccess.getValueOperatorAccess().getCommaKeyword_0_1_2_1_0());
                            	      						
                            	    }
                            	    // InternalKim.g:7089:7: ( (lv_comparisonConcept_7_0= ruleConceptDeclaration ) )
                            	    // InternalKim.g:7090:8: (lv_comparisonConcept_7_0= ruleConceptDeclaration )
                            	    {
                            	    // InternalKim.g:7090:8: (lv_comparisonConcept_7_0= ruleConceptDeclaration )
                            	    // InternalKim.g:7091:9: lv_comparisonConcept_7_0= ruleConceptDeclaration
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getValueOperatorAccess().getComparisonConceptConceptDeclarationParserRuleCall_0_1_2_1_1_0());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_34);
                            	    lv_comparisonConcept_7_0=ruleConceptDeclaration();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getValueOperatorRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"comparisonConcept",
                            	      										lv_comparisonConcept_7_0,
                            	      										"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop164;
                                }
                            } while (true);


                            }


                            }
                            break;
                        case 4 :
                            // InternalKim.g:7111:5: (otherlv_8= '(' ( (lv_comparisonObservable_9_0= ruleObservableSemantics ) ) otherlv_10= ')' )
                            {
                            // InternalKim.g:7111:5: (otherlv_8= '(' ( (lv_comparisonObservable_9_0= ruleObservableSemantics ) ) otherlv_10= ')' )
                            // InternalKim.g:7112:6: otherlv_8= '(' ( (lv_comparisonObservable_9_0= ruleObservableSemantics ) ) otherlv_10= ')'
                            {
                            otherlv_8=(Token)match(input,38,FOLLOW_95); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_8, grammarAccess.getValueOperatorAccess().getLeftParenthesisKeyword_0_1_3_0());
                              					
                            }
                            // InternalKim.g:7116:6: ( (lv_comparisonObservable_9_0= ruleObservableSemantics ) )
                            // InternalKim.g:7117:7: (lv_comparisonObservable_9_0= ruleObservableSemantics )
                            {
                            // InternalKim.g:7117:7: (lv_comparisonObservable_9_0= ruleObservableSemantics )
                            // InternalKim.g:7118:8: lv_comparisonObservable_9_0= ruleObservableSemantics
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getValueOperatorAccess().getComparisonObservableObservableSemanticsParserRuleCall_0_1_3_1_0());
                              							
                            }
                            pushFollow(FOLLOW_96);
                            lv_comparisonObservable_9_0=ruleObservableSemantics();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getValueOperatorRule());
                              								}
                              								set(
                              									current,
                              									"comparisonObservable",
                              									lv_comparisonObservable_9_0,
                              									"org.integratedmodelling.kim.Kim.ObservableSemantics");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            otherlv_10=(Token)match(input,41,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_10, grammarAccess.getValueOperatorAccess().getRightParenthesisKeyword_0_1_3_2());
                              					
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:7143:3: ( (lv_total_11_0= 'total' ) )
                    {
                    // InternalKim.g:7143:3: ( (lv_total_11_0= 'total' ) )
                    // InternalKim.g:7144:4: (lv_total_11_0= 'total' )
                    {
                    // InternalKim.g:7144:4: (lv_total_11_0= 'total' )
                    // InternalKim.g:7145:5: lv_total_11_0= 'total'
                    {
                    lv_total_11_0=(Token)match(input,120,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_total_11_0, grammarAccess.getValueOperatorAccess().getTotalTotalKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getValueOperatorRule());
                      					}
                      					setWithLastConsumed(current, "total", lv_total_11_0, "total");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:7158:3: ( (lv_averaged_12_0= 'averaged' ) )
                    {
                    // InternalKim.g:7158:3: ( (lv_averaged_12_0= 'averaged' ) )
                    // InternalKim.g:7159:4: (lv_averaged_12_0= 'averaged' )
                    {
                    // InternalKim.g:7159:4: (lv_averaged_12_0= 'averaged' )
                    // InternalKim.g:7160:5: lv_averaged_12_0= 'averaged'
                    {
                    lv_averaged_12_0=(Token)match(input,121,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_averaged_12_0, grammarAccess.getValueOperatorAccess().getAveragedAveragedKeyword_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getValueOperatorRule());
                      					}
                      					setWithLastConsumed(current, "averaged", lv_averaged_12_0, "averaged");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:7173:3: ( (lv_summed_13_0= 'summed' ) )
                    {
                    // InternalKim.g:7173:3: ( (lv_summed_13_0= 'summed' ) )
                    // InternalKim.g:7174:4: (lv_summed_13_0= 'summed' )
                    {
                    // InternalKim.g:7174:4: (lv_summed_13_0= 'summed' )
                    // InternalKim.g:7175:5: lv_summed_13_0= 'summed'
                    {
                    lv_summed_13_0=(Token)match(input,122,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_summed_13_0, grammarAccess.getValueOperatorAccess().getSummedSummedKeyword_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getValueOperatorRule());
                      					}
                      					setWithLastConsumed(current, "summed", lv_summed_13_0, "summed");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValueOperator"


    // $ANTLR start "entryRuleAnnotatedObservableSemantics"
    // InternalKim.g:7191:1: entryRuleAnnotatedObservableSemantics returns [EObject current=null] : iv_ruleAnnotatedObservableSemantics= ruleAnnotatedObservableSemantics EOF ;
    public final EObject entryRuleAnnotatedObservableSemantics() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotatedObservableSemantics = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4()
        	);

        try {
            // InternalKim.g:7195:2: (iv_ruleAnnotatedObservableSemantics= ruleAnnotatedObservableSemantics EOF )
            // InternalKim.g:7196:2: iv_ruleAnnotatedObservableSemantics= ruleAnnotatedObservableSemantics EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAnnotatedObservableSemantics=ruleAnnotatedObservableSemantics();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotatedObservableSemantics; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleAnnotatedObservableSemantics"


    // $ANTLR start "ruleAnnotatedObservableSemantics"
    // InternalKim.g:7205:1: ruleAnnotatedObservableSemantics returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( (lv_value_1_0= ruleValue ) ) otherlv_2= 'as' )? ( (lv_generic_3_0= 'any' ) )? ( (lv_declaration_4_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) ) ) ;
    public final EObject ruleAnnotatedObservableSemantics() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_generic_3_0=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_12=null;
        Token lv_optional_16_0=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token lv_name_22_1=null;
        Token lv_name_22_2=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_value_1_0 = null;

        EObject lv_declaration_4_0 = null;

        AntlrDatatypeRuleToken lv_accordingTo_8_0 = null;

        EObject lv_unit_10_0 = null;

        EObject lv_currency_11_0 = null;

        EObject lv_unit_13_0 = null;

        EObject lv_valueOperators_14_0 = null;

        EObject lv_valueOperators_15_0 = null;

        EObject lv_from_18_0 = null;

        EObject lv_to_20_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4()
        	);

        try {
            // InternalKim.g:7214:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( (lv_value_1_0= ruleValue ) ) otherlv_2= 'as' )? ( (lv_generic_3_0= 'any' ) )? ( (lv_declaration_4_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) ) ) )
            // InternalKim.g:7215:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( (lv_value_1_0= ruleValue ) ) otherlv_2= 'as' )? ( (lv_generic_3_0= 'any' ) )? ( (lv_declaration_4_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) ) )
            {
            // InternalKim.g:7215:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( (lv_value_1_0= ruleValue ) ) otherlv_2= 'as' )? ( (lv_generic_3_0= 'any' ) )? ( (lv_declaration_4_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) ) )
            // InternalKim.g:7216:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( (lv_value_1_0= ruleValue ) ) otherlv_2= 'as' )? ( (lv_generic_3_0= 'any' ) )? ( (lv_declaration_4_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) )
            {
            // InternalKim.g:7216:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop167:
            do {
                int alt167=2;
                int LA167_0 = input.LA(1);

                if ( (LA167_0==RULE_ANNOTATION_ID) ) {
                    alt167=1;
                }


                switch (alt167) {
            	case 1 :
            	    // InternalKim.g:7217:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalKim.g:7217:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalKim.g:7218:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_105);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getAnnotatedObservableSemanticsRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"org.integratedmodelling.kim.Kim.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop167;
                }
            } while (true);

            // InternalKim.g:7235:3: ( ( (lv_value_1_0= ruleValue ) ) otherlv_2= 'as' )?
            int alt168=2;
            alt168 = dfa168.predict(input);
            switch (alt168) {
                case 1 :
                    // InternalKim.g:7236:4: ( (lv_value_1_0= ruleValue ) ) otherlv_2= 'as'
                    {
                    // InternalKim.g:7236:4: ( (lv_value_1_0= ruleValue ) )
                    // InternalKim.g:7237:5: (lv_value_1_0= ruleValue )
                    {
                    // InternalKim.g:7237:5: (lv_value_1_0= ruleValue )
                    // InternalKim.g:7238:6: lv_value_1_0= ruleValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getValueValueParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_11);
                    lv_value_1_0=ruleValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAnnotatedObservableSemanticsRule());
                      						}
                      						set(
                      							current,
                      							"value",
                      							lv_value_1_0,
                      							"org.integratedmodelling.kim.Kim.Value");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_2=(Token)match(input,25,FOLLOW_99); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getAnnotatedObservableSemanticsAccess().getAsKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:7260:3: ( (lv_generic_3_0= 'any' ) )?
            int alt169=2;
            int LA169_0 = input.LA(1);

            if ( (LA169_0==113) ) {
                alt169=1;
            }
            switch (alt169) {
                case 1 :
                    // InternalKim.g:7261:4: (lv_generic_3_0= 'any' )
                    {
                    // InternalKim.g:7261:4: (lv_generic_3_0= 'any' )
                    // InternalKim.g:7262:5: lv_generic_3_0= 'any'
                    {
                    lv_generic_3_0=(Token)match(input,113,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_generic_3_0, grammarAccess.getAnnotatedObservableSemanticsAccess().getGenericAnyKeyword_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getAnnotatedObservableSemanticsRule());
                      					}
                      					setWithLastConsumed(current, "generic", true, "any");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:7274:3: ( (lv_declaration_4_0= ruleConceptDeclaration ) )
            // InternalKim.g:7275:4: (lv_declaration_4_0= ruleConceptDeclaration )
            {
            // InternalKim.g:7275:4: (lv_declaration_4_0= ruleConceptDeclaration )
            // InternalKim.g:7276:5: lv_declaration_4_0= ruleConceptDeclaration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getDeclarationConceptDeclarationParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_100);
            lv_declaration_4_0=ruleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAnnotatedObservableSemanticsRule());
              					}
              					set(
              						current,
              						"declaration",
              						lv_declaration_4_0,
              						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:7293:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) )
            // InternalKim.g:7294:4: ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) ) ) )* ) )
            {
            // InternalKim.g:7294:4: ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) ) ) )* ) )
            // InternalKim.g:7295:5: ( ( ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4());
            // InternalKim.g:7298:5: ( ( ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) ) ) )* )
            // InternalKim.g:7299:6: ( ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) ) ) )*
            {
            // InternalKim.g:7299:6: ( ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) ) ) )*
            loop175:
            do {
                int alt175=7;
                alt175 = dfa175.predict(input);
                switch (alt175) {
            	case 1 :
            	    // InternalKim.g:7300:4: ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) )
            	    {
            	    // InternalKim.g:7300:4: ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) )
            	    // InternalKim.g:7301:5: {...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAnnotatedObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 0)");
            	    }
            	    // InternalKim.g:7301:125: ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) )
            	    // InternalKim.g:7302:6: ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 0);
            	    // InternalKim.g:7305:9: ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) )
            	    // InternalKim.g:7305:10: {...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAnnotatedObservableSemantics", "true");
            	    }
            	    // InternalKim.g:7305:19: (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) )
            	    // InternalKim.g:7305:20: otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) )
            	    {
            	    otherlv_6=(Token)match(input,35,FOLLOW_25); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_6, grammarAccess.getAnnotatedObservableSemanticsAccess().getAccordingKeyword_4_0_0());
            	      								
            	    }
            	    otherlv_7=(Token)match(input,36,FOLLOW_26); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_7, grammarAccess.getAnnotatedObservableSemanticsAccess().getToKeyword_4_0_1());
            	      								
            	    }
            	    // InternalKim.g:7313:9: ( (lv_accordingTo_8_0= rulePropertyId ) )
            	    // InternalKim.g:7314:10: (lv_accordingTo_8_0= rulePropertyId )
            	    {
            	    // InternalKim.g:7314:10: (lv_accordingTo_8_0= rulePropertyId )
            	    // InternalKim.g:7315:11: lv_accordingTo_8_0= rulePropertyId
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getAccordingToPropertyIdParserRuleCall_4_0_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_100);
            	    lv_accordingTo_8_0=rulePropertyId();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getAnnotatedObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"accordingTo",
            	      												lv_accordingTo_8_0,
            	      												"org.integratedmodelling.kim.Kim.PropertyId");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKim.g:7338:4: ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) )
            	    {
            	    // InternalKim.g:7338:4: ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) )
            	    // InternalKim.g:7339:5: {...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAnnotatedObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 1)");
            	    }
            	    // InternalKim.g:7339:125: ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) )
            	    // InternalKim.g:7340:6: ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 1);
            	    // InternalKim.g:7343:9: ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) )
            	    // InternalKim.g:7343:10: {...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAnnotatedObservableSemantics", "true");
            	    }
            	    // InternalKim.g:7343:19: ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) )
            	    int alt171=2;
            	    int LA171_0 = input.LA(1);

            	    if ( (LA171_0==48) ) {
            	        alt171=1;
            	    }
            	    else if ( (LA171_0==114) ) {
            	        alt171=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 171, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt171) {
            	        case 1 :
            	            // InternalKim.g:7343:20: (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) )
            	            {
            	            // InternalKim.g:7343:20: (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) )
            	            // InternalKim.g:7344:10: otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) )
            	            {
            	            otherlv_9=(Token)match(input,48,FOLLOW_101); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_9, grammarAccess.getAnnotatedObservableSemanticsAccess().getInKeyword_4_1_0_0());
            	              									
            	            }
            	            // InternalKim.g:7348:10: ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) )
            	            int alt170=2;
            	            int LA170_0 = input.LA(1);

            	            if ( (LA170_0==EOF||LA170_0==RULE_LOWERCASE_ID||LA170_0==RULE_STRING||(LA170_0>=RULE_CAMELCASE_ID && LA170_0<=RULE_INT)||LA170_0==RULE_BACKCASE_ID||LA170_0==20||LA170_0==27||(LA170_0>=30 && LA170_0<=33)||LA170_0==35||(LA170_0>=37 && LA170_0<=38)||LA170_0==40||LA170_0==42||LA170_0==48||(LA170_0>=54 && LA170_0<=56)||(LA170_0>=62 && LA170_0<=67)||(LA170_0>=76 && LA170_0<=89)||LA170_0==108||(LA170_0>=114 && LA170_0<=117)||(LA170_0>=119 && LA170_0<=122)||(LA170_0>=251 && LA170_0<=252)||LA170_0==259) ) {
            	                alt170=1;
            	            }
            	            else if ( (LA170_0==RULE_UPPERCASE_ID) ) {
            	                int LA170_2 = input.LA(2);

            	                if ( (LA170_2==EOF||LA170_2==RULE_STRING||LA170_2==RULE_INT||LA170_2==20||LA170_2==27||(LA170_2>=30 && LA170_2<=33)||LA170_2==35||LA170_2==37||LA170_2==40||LA170_2==42||LA170_2==48||(LA170_2>=54 && LA170_2<=56)||(LA170_2>=62 && LA170_2<=67)||(LA170_2>=76 && LA170_2<=89)||LA170_2==108||(LA170_2>=114 && LA170_2<=117)||(LA170_2>=119 && LA170_2<=122)||(LA170_2>=251 && LA170_2<=252)||LA170_2==259) ) {
            	                    alt170=1;
            	                }
            	                else if ( (LA170_2==250) ) {
            	                    alt170=2;
            	                }
            	                else {
            	                    if (state.backtracking>0) {state.failed=true; return current;}
            	                    NoViableAltException nvae =
            	                        new NoViableAltException("", 170, 2, input);

            	                    throw nvae;
            	                }
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 170, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt170) {
            	                case 1 :
            	                    // InternalKim.g:7349:11: ( (lv_unit_10_0= ruleUnit ) )
            	                    {
            	                    // InternalKim.g:7349:11: ( (lv_unit_10_0= ruleUnit ) )
            	                    // InternalKim.g:7350:12: (lv_unit_10_0= ruleUnit )
            	                    {
            	                    // InternalKim.g:7350:12: (lv_unit_10_0= ruleUnit )
            	                    // InternalKim.g:7351:13: lv_unit_10_0= ruleUnit
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      													newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnitUnitParserRuleCall_4_1_0_1_0_0());
            	                      												
            	                    }
            	                    pushFollow(FOLLOW_100);
            	                    lv_unit_10_0=ruleUnit();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													if (current==null) {
            	                      														current = createModelElementForParent(grammarAccess.getAnnotatedObservableSemanticsRule());
            	                      													}
            	                      													set(
            	                      														current,
            	                      														"unit",
            	                      														lv_unit_10_0,
            	                      														"org.integratedmodelling.kim.Kim.Unit");
            	                      													afterParserOrEnumRuleCall();
            	                      												
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalKim.g:7369:11: ( (lv_currency_11_0= ruleCurrency ) )
            	                    {
            	                    // InternalKim.g:7369:11: ( (lv_currency_11_0= ruleCurrency ) )
            	                    // InternalKim.g:7370:12: (lv_currency_11_0= ruleCurrency )
            	                    {
            	                    // InternalKim.g:7370:12: (lv_currency_11_0= ruleCurrency )
            	                    // InternalKim.g:7371:13: lv_currency_11_0= ruleCurrency
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      													newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getCurrencyCurrencyParserRuleCall_4_1_0_1_1_0());
            	                      												
            	                    }
            	                    pushFollow(FOLLOW_100);
            	                    lv_currency_11_0=ruleCurrency();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													if (current==null) {
            	                      														current = createModelElementForParent(grammarAccess.getAnnotatedObservableSemanticsRule());
            	                      													}
            	                      													set(
            	                      														current,
            	                      														"currency",
            	                      														lv_currency_11_0,
            	                      														"org.integratedmodelling.kim.Kim.Currency");
            	                      													afterParserOrEnumRuleCall();
            	                      												
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:7391:9: (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) )
            	            {
            	            // InternalKim.g:7391:9: (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) )
            	            // InternalKim.g:7392:10: otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) )
            	            {
            	            otherlv_12=(Token)match(input,114,FOLLOW_101); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_12, grammarAccess.getAnnotatedObservableSemanticsAccess().getPerKeyword_4_1_1_0());
            	              									
            	            }
            	            // InternalKim.g:7396:10: ( (lv_unit_13_0= ruleUnit ) )
            	            // InternalKim.g:7397:11: (lv_unit_13_0= ruleUnit )
            	            {
            	            // InternalKim.g:7397:11: (lv_unit_13_0= ruleUnit )
            	            // InternalKim.g:7398:12: lv_unit_13_0= ruleUnit
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnitUnitParserRuleCall_4_1_1_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_100);
            	            lv_unit_13_0=ruleUnit();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getAnnotatedObservableSemanticsRule());
            	              												}
            	              												set(
            	              													current,
            	              													"unit",
            	              													lv_unit_13_0,
            	              													"org.integratedmodelling.kim.Kim.Unit");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalKim.g:7422:4: ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) )
            	    {
            	    // InternalKim.g:7422:4: ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) )
            	    // InternalKim.g:7423:5: {...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAnnotatedObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2)");
            	    }
            	    // InternalKim.g:7423:125: ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) )
            	    // InternalKim.g:7424:6: ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2);
            	    // InternalKim.g:7427:9: ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) )
            	    // InternalKim.g:7427:10: {...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAnnotatedObservableSemantics", "true");
            	    }
            	    // InternalKim.g:7427:19: ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* )
            	    // InternalKim.g:7427:20: ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )*
            	    {
            	    // InternalKim.g:7427:20: ( (lv_valueOperators_14_0= ruleValueOperator ) )
            	    // InternalKim.g:7428:10: (lv_valueOperators_14_0= ruleValueOperator )
            	    {
            	    // InternalKim.g:7428:10: (lv_valueOperators_14_0= ruleValueOperator )
            	    // InternalKim.g:7429:11: lv_valueOperators_14_0= ruleValueOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_4_2_0_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_100);
            	    lv_valueOperators_14_0=ruleValueOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getAnnotatedObservableSemanticsRule());
            	      											}
            	      											add(
            	      												current,
            	      												"valueOperators",
            	      												lv_valueOperators_14_0,
            	      												"org.integratedmodelling.kim.Kim.ValueOperator");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:7446:9: ( (lv_valueOperators_15_0= ruleValueOperator ) )*
            	    loop172:
            	    do {
            	        int alt172=2;
            	        alt172 = dfa172.predict(input);
            	        switch (alt172) {
            	    	case 1 :
            	    	    // InternalKim.g:7447:10: (lv_valueOperators_15_0= ruleValueOperator )
            	    	    {
            	    	    // InternalKim.g:7447:10: (lv_valueOperators_15_0= ruleValueOperator )
            	    	    // InternalKim.g:7448:11: lv_valueOperators_15_0= ruleValueOperator
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      											newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_4_2_1_0());
            	    	      										
            	    	    }
            	    	    pushFollow(FOLLOW_100);
            	    	    lv_valueOperators_15_0=ruleValueOperator();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      											if (current==null) {
            	    	      												current = createModelElementForParent(grammarAccess.getAnnotatedObservableSemanticsRule());
            	    	      											}
            	    	      											add(
            	    	      												current,
            	    	      												"valueOperators",
            	    	      												lv_valueOperators_15_0,
            	    	      												"org.integratedmodelling.kim.Kim.ValueOperator");
            	    	      											afterParserOrEnumRuleCall();
            	    	      										
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop172;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalKim.g:7471:4: ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) )
            	    {
            	    // InternalKim.g:7471:4: ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) )
            	    // InternalKim.g:7472:5: {...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAnnotatedObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 3)");
            	    }
            	    // InternalKim.g:7472:125: ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) )
            	    // InternalKim.g:7473:6: ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 3);
            	    // InternalKim.g:7476:9: ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) )
            	    // InternalKim.g:7476:10: {...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAnnotatedObservableSemantics", "true");
            	    }
            	    // InternalKim.g:7476:19: ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' )
            	    int alt173=2;
            	    int LA173_0 = input.LA(1);

            	    if ( (LA173_0==115) ) {
            	        alt173=1;
            	    }
            	    else if ( (LA173_0==116) ) {
            	        alt173=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 173, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt173) {
            	        case 1 :
            	            // InternalKim.g:7476:20: ( (lv_optional_16_0= 'optional' ) )
            	            {
            	            // InternalKim.g:7476:20: ( (lv_optional_16_0= 'optional' ) )
            	            // InternalKim.g:7477:10: (lv_optional_16_0= 'optional' )
            	            {
            	            // InternalKim.g:7477:10: (lv_optional_16_0= 'optional' )
            	            // InternalKim.g:7478:11: lv_optional_16_0= 'optional'
            	            {
            	            lv_optional_16_0=(Token)match(input,115,FOLLOW_100); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(lv_optional_16_0, grammarAccess.getAnnotatedObservableSemanticsAccess().getOptionalOptionalKeyword_4_3_0_0());
            	              										
            	            }
            	            if ( state.backtracking==0 ) {

            	              											if (current==null) {
            	              												current = createModelElement(grammarAccess.getAnnotatedObservableSemanticsRule());
            	              											}
            	              											setWithLastConsumed(current, "optional", true, "optional");
            	              										
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:7491:9: otherlv_17= 'required'
            	            {
            	            otherlv_17=(Token)match(input,116,FOLLOW_100); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(otherlv_17, grammarAccess.getAnnotatedObservableSemanticsAccess().getRequiredKeyword_4_3_1());
            	              								
            	            }

            	            }
            	            break;

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4());

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalKim.g:7501:4: ({...}? => ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) ) )
            	    {
            	    // InternalKim.g:7501:4: ({...}? => ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) ) )
            	    // InternalKim.g:7502:5: {...}? => ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 4) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAnnotatedObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 4)");
            	    }
            	    // InternalKim.g:7502:125: ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) )
            	    // InternalKim.g:7503:6: ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 4);
            	    // InternalKim.g:7506:9: ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) )
            	    // InternalKim.g:7506:10: {...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAnnotatedObservableSemantics", "true");
            	    }
            	    // InternalKim.g:7506:19: ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) )
            	    // InternalKim.g:7506:20: ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) )
            	    {
            	    // InternalKim.g:7506:20: ( (lv_from_18_0= ruleNumber ) )
            	    // InternalKim.g:7507:10: (lv_from_18_0= ruleNumber )
            	    {
            	    // InternalKim.g:7507:10: (lv_from_18_0= ruleNumber )
            	    // InternalKim.g:7508:11: lv_from_18_0= ruleNumber
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getFromNumberParserRuleCall_4_4_0_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_25);
            	    lv_from_18_0=ruleNumber();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getAnnotatedObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"from",
            	      												lv_from_18_0,
            	      												"org.integratedmodelling.kim.Kim.Number");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    otherlv_19=(Token)match(input,36,FOLLOW_38); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_19, grammarAccess.getAnnotatedObservableSemanticsAccess().getToKeyword_4_4_1());
            	      								
            	    }
            	    // InternalKim.g:7529:9: ( (lv_to_20_0= ruleNumber ) )
            	    // InternalKim.g:7530:10: (lv_to_20_0= ruleNumber )
            	    {
            	    // InternalKim.g:7530:10: (lv_to_20_0= ruleNumber )
            	    // InternalKim.g:7531:11: lv_to_20_0= ruleNumber
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getToNumberParserRuleCall_4_4_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_100);
            	    lv_to_20_0=ruleNumber();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getAnnotatedObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"to",
            	      												lv_to_20_0,
            	      												"org.integratedmodelling.kim.Kim.Number");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4());

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalKim.g:7554:4: ({...}? => ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) ) )
            	    {
            	    // InternalKim.g:7554:4: ({...}? => ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) ) )
            	    // InternalKim.g:7555:5: {...}? => ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 5) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAnnotatedObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 5)");
            	    }
            	    // InternalKim.g:7555:125: ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) )
            	    // InternalKim.g:7556:6: ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 5);
            	    // InternalKim.g:7559:9: ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) )
            	    // InternalKim.g:7559:10: {...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAnnotatedObservableSemantics", "true");
            	    }
            	    // InternalKim.g:7559:19: (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) )
            	    // InternalKim.g:7559:20: otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) )
            	    {
            	    otherlv_21=(Token)match(input,117,FOLLOW_46); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_21, grammarAccess.getAnnotatedObservableSemanticsAccess().getNamedKeyword_4_5_0());
            	      								
            	    }
            	    // InternalKim.g:7563:9: ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) )
            	    // InternalKim.g:7564:10: ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) )
            	    {
            	    // InternalKim.g:7564:10: ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) )
            	    // InternalKim.g:7565:11: (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING )
            	    {
            	    // InternalKim.g:7565:11: (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING )
            	    int alt174=2;
            	    int LA174_0 = input.LA(1);

            	    if ( (LA174_0==RULE_LOWERCASE_ID) ) {
            	        alt174=1;
            	    }
            	    else if ( (LA174_0==RULE_STRING) ) {
            	        alt174=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 174, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt174) {
            	        case 1 :
            	            // InternalKim.g:7566:12: lv_name_22_1= RULE_LOWERCASE_ID
            	            {
            	            lv_name_22_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_100); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_name_22_1, grammarAccess.getAnnotatedObservableSemanticsAccess().getNameLOWERCASE_IDTerminalRuleCall_4_5_1_0_0());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getAnnotatedObservableSemanticsRule());
            	              												}
            	              												setWithLastConsumed(
            	              													current,
            	              													"name",
            	              													lv_name_22_1,
            	              													"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
            	              											
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:7581:12: lv_name_22_2= RULE_STRING
            	            {
            	            lv_name_22_2=(Token)match(input,RULE_STRING,FOLLOW_100); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_name_22_2, grammarAccess.getAnnotatedObservableSemanticsAccess().getNameSTRINGTerminalRuleCall_4_5_1_0_1());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getAnnotatedObservableSemanticsRule());
            	              												}
            	              												setWithLastConsumed(
            	              													current,
            	              													"name",
            	              													lv_name_22_2,
            	              													"org.eclipse.xtext.common.Terminals.STRING");
            	              											
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop175;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4());

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleAnnotatedObservableSemantics"


    // $ANTLR start "entryRuleDependency"
    // InternalKim.g:7618:1: entryRuleDependency returns [EObject current=null] : iv_ruleDependency= ruleDependency EOF ;
    public final EObject entryRuleDependency() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDependency = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getDependencyAccess().getUnorderedGroup_1_1()
        	);

        try {
            // InternalKim.g:7622:2: (iv_ruleDependency= ruleDependency EOF )
            // InternalKim.g:7623:2: iv_ruleDependency= ruleDependency EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDependencyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDependency=ruleDependency();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDependency; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleDependency"


    // $ANTLR start "ruleDependency"
    // InternalKim.g:7632:1: ruleDependency returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) ) | ( (lv_observable_2_0= ruleDependencyObservableSemantics ) ) ) | ( ( ( ( ({...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) ) ) ) ) )+ {...}?) ) ) ) ) ;
    public final EObject ruleDependency() throws RecognitionException {
        EObject current = null;

        Token lv_modelReference_1_1=null;
        Token lv_modelReference_1_4=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token lv_optional_9_0=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token lv_name_12_1=null;
        Token lv_name_12_2=null;
        EObject lv_annotations_0_0 = null;

        AntlrDatatypeRuleToken lv_modelReference_1_2 = null;

        AntlrDatatypeRuleToken lv_modelReference_1_3 = null;

        EObject lv_observable_2_0 = null;

        EObject lv_alternativeObservables_5_0 = null;

        EObject lv_alternativeObservables_7_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getDependencyAccess().getUnorderedGroup_1_1()
        	);

        try {
            // InternalKim.g:7641:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) ) | ( (lv_observable_2_0= ruleDependencyObservableSemantics ) ) ) | ( ( ( ( ({...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) ) ) ) ) )+ {...}?) ) ) ) ) )
            // InternalKim.g:7642:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) ) | ( (lv_observable_2_0= ruleDependencyObservableSemantics ) ) ) | ( ( ( ( ({...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) ) ) ) ) )+ {...}?) ) ) ) )
            {
            // InternalKim.g:7642:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) ) | ( (lv_observable_2_0= ruleDependencyObservableSemantics ) ) ) | ( ( ( ( ({...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) ) ) ) ) )+ {...}?) ) ) ) )
            // InternalKim.g:7643:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) ) | ( (lv_observable_2_0= ruleDependencyObservableSemantics ) ) ) | ( ( ( ( ({...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) ) ) ) ) )+ {...}?) ) ) )
            {
            // InternalKim.g:7643:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop176:
            do {
                int alt176=2;
                int LA176_0 = input.LA(1);

                if ( (LA176_0==RULE_ANNOTATION_ID) ) {
                    alt176=1;
                }


                switch (alt176) {
            	case 1 :
            	    // InternalKim.g:7644:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalKim.g:7644:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalKim.g:7645:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getDependencyAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_18);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getDependencyRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"org.integratedmodelling.kim.Kim.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop176;
                }
            } while (true);

            // InternalKim.g:7662:3: ( ( ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) ) | ( (lv_observable_2_0= ruleDependencyObservableSemantics ) ) ) | ( ( ( ( ({...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) ) ) ) ) )+ {...}?) ) ) )
            int alt183=2;
            alt183 = dfa183.predict(input);
            switch (alt183) {
                case 1 :
                    // InternalKim.g:7663:4: ( ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) ) | ( (lv_observable_2_0= ruleDependencyObservableSemantics ) ) )
                    {
                    // InternalKim.g:7663:4: ( ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) ) | ( (lv_observable_2_0= ruleDependencyObservableSemantics ) ) )
                    int alt178=2;
                    alt178 = dfa178.predict(input);
                    switch (alt178) {
                        case 1 :
                            // InternalKim.g:7664:5: ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) )
                            {
                            // InternalKim.g:7664:5: ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) )
                            // InternalKim.g:7665:6: ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) )
                            {
                            // InternalKim.g:7665:6: ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) )
                            // InternalKim.g:7666:7: (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING )
                            {
                            // InternalKim.g:7666:7: (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING )
                            int alt177=4;
                            alt177 = dfa177.predict(input);
                            switch (alt177) {
                                case 1 :
                                    // InternalKim.g:7667:8: lv_modelReference_1_1= RULE_LOWERCASE_ID
                                    {
                                    lv_modelReference_1_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_modelReference_1_1, grammarAccess.getDependencyAccess().getModelReferenceLOWERCASE_IDTerminalRuleCall_1_0_0_0_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getDependencyRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"modelReference",
                                      									lv_modelReference_1_1,
                                      									"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                                      							
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:7682:8: lv_modelReference_1_2= rulePathName
                                    {
                                    if ( state.backtracking==0 ) {

                                      								newCompositeNode(grammarAccess.getDependencyAccess().getModelReferencePathNameParserRuleCall_1_0_0_0_1());
                                      							
                                    }
                                    pushFollow(FOLLOW_2);
                                    lv_modelReference_1_2=rulePathName();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElementForParent(grammarAccess.getDependencyRule());
                                      								}
                                      								set(
                                      									current,
                                      									"modelReference",
                                      									lv_modelReference_1_2,
                                      									"org.integratedmodelling.kim.Kim.PathName");
                                      								afterParserOrEnumRuleCall();
                                      							
                                    }

                                    }
                                    break;
                                case 3 :
                                    // InternalKim.g:7698:8: lv_modelReference_1_3= ruleUrnId
                                    {
                                    if ( state.backtracking==0 ) {

                                      								newCompositeNode(grammarAccess.getDependencyAccess().getModelReferenceUrnIdParserRuleCall_1_0_0_0_2());
                                      							
                                    }
                                    pushFollow(FOLLOW_2);
                                    lv_modelReference_1_3=ruleUrnId();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElementForParent(grammarAccess.getDependencyRule());
                                      								}
                                      								set(
                                      									current,
                                      									"modelReference",
                                      									lv_modelReference_1_3,
                                      									"org.integratedmodelling.kim.Kim.UrnId");
                                      								afterParserOrEnumRuleCall();
                                      							
                                    }

                                    }
                                    break;
                                case 4 :
                                    // InternalKim.g:7714:8: lv_modelReference_1_4= RULE_STRING
                                    {
                                    lv_modelReference_1_4=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_modelReference_1_4, grammarAccess.getDependencyAccess().getModelReferenceSTRINGTerminalRuleCall_1_0_0_0_3());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getDependencyRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"modelReference",
                                      									lv_modelReference_1_4,
                                      									"org.eclipse.xtext.common.Terminals.STRING");
                                      							
                                    }

                                    }
                                    break;

                            }


                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:7732:5: ( (lv_observable_2_0= ruleDependencyObservableSemantics ) )
                            {
                            // InternalKim.g:7732:5: ( (lv_observable_2_0= ruleDependencyObservableSemantics ) )
                            // InternalKim.g:7733:6: (lv_observable_2_0= ruleDependencyObservableSemantics )
                            {
                            // InternalKim.g:7733:6: (lv_observable_2_0= ruleDependencyObservableSemantics )
                            // InternalKim.g:7734:7: lv_observable_2_0= ruleDependencyObservableSemantics
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getDependencyAccess().getObservableDependencyObservableSemanticsParserRuleCall_1_0_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_observable_2_0=ruleDependencyObservableSemantics();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getDependencyRule());
                              							}
                              							set(
                              								current,
                              								"observable",
                              								lv_observable_2_0,
                              								"org.integratedmodelling.kim.Kim.DependencyObservableSemantics");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:7753:4: ( ( ( ( ({...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) ) ) ) ) )+ {...}?) ) )
                    {
                    // InternalKim.g:7753:4: ( ( ( ( ({...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) ) ) ) ) )+ {...}?) ) )
                    // InternalKim.g:7754:5: ( ( ( ({...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) ) ) ) ) )+ {...}?) )
                    {
                    // InternalKim.g:7754:5: ( ( ( ({...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) ) ) ) ) )+ {...}?) )
                    // InternalKim.g:7755:6: ( ( ({...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) ) ) ) ) )+ {...}?)
                    {
                    getUnorderedGroupHelper().enter(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1());
                    // InternalKim.g:7758:6: ( ( ({...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) ) ) ) ) )+ {...}?)
                    // InternalKim.g:7759:7: ( ({...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) ) ) ) ) )+ {...}?
                    {
                    // InternalKim.g:7759:7: ( ({...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) ) ) ) ) )+
                    int cnt182=0;
                    loop182:
                    do {
                        int alt182=3;
                        int LA182_0 = input.LA(1);

                        if ( LA182_0 == 38 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1(), 0) ) {
                            alt182=1;
                        }
                        else if ( LA182_0 == 117 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1(), 1) ) {
                            alt182=2;
                        }


                        switch (alt182) {
                    	case 1 :
                    	    // InternalKim.g:7760:5: ({...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) ) )
                    	    {
                    	    // InternalKim.g:7760:5: ({...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) ) )
                    	    // InternalKim.g:7761:6: {...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1(), 0) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleDependency", "getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1(), 0)");
                    	    }
                    	    // InternalKim.g:7761:110: ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) )
                    	    // InternalKim.g:7762:7: ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1(), 0);
                    	    // InternalKim.g:7765:10: ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) )
                    	    // InternalKim.g:7765:11: {...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleDependency", "true");
                    	    }
                    	    // InternalKim.g:7765:20: (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? )
                    	    // InternalKim.g:7765:21: otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )?
                    	    {
                    	    otherlv_4=(Token)match(input,38,FOLLOW_106); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      										newLeafNode(otherlv_4, grammarAccess.getDependencyAccess().getLeftParenthesisKeyword_1_1_0_0());
                    	      									
                    	    }
                    	    // InternalKim.g:7769:10: ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) )
                    	    // InternalKim.g:7770:11: (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics )
                    	    {
                    	    // InternalKim.g:7770:11: (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics )
                    	    // InternalKim.g:7771:12: lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      												newCompositeNode(grammarAccess.getDependencyAccess().getAlternativeObservablesAlternativeDependencyObservableSemanticsParserRuleCall_1_1_0_1_0());
                    	      											
                    	    }
                    	    pushFollow(FOLLOW_29);
                    	    lv_alternativeObservables_5_0=ruleAlternativeDependencyObservableSemantics();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      												if (current==null) {
                    	      													current = createModelElementForParent(grammarAccess.getDependencyRule());
                    	      												}
                    	      												add(
                    	      													current,
                    	      													"alternativeObservables",
                    	      													lv_alternativeObservables_5_0,
                    	      													"org.integratedmodelling.kim.Kim.AlternativeDependencyObservableSemantics");
                    	      												afterParserOrEnumRuleCall();
                    	      											
                    	    }

                    	    }


                    	    }

                    	    // InternalKim.g:7788:10: (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )*
                    	    loop179:
                    	    do {
                    	        int alt179=2;
                    	        int LA179_0 = input.LA(1);

                    	        if ( (LA179_0==27) ) {
                    	            alt179=1;
                    	        }


                    	        switch (alt179) {
                    	    	case 1 :
                    	    	    // InternalKim.g:7789:11: otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) )
                    	    	    {
                    	    	    otherlv_6=(Token)match(input,27,FOLLOW_106); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {

                    	    	      											newLeafNode(otherlv_6, grammarAccess.getDependencyAccess().getCommaKeyword_1_1_0_2_0());
                    	    	      										
                    	    	    }
                    	    	    // InternalKim.g:7793:11: ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) )
                    	    	    // InternalKim.g:7794:12: (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics )
                    	    	    {
                    	    	    // InternalKim.g:7794:12: (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics )
                    	    	    // InternalKim.g:7795:13: lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics
                    	    	    {
                    	    	    if ( state.backtracking==0 ) {

                    	    	      													newCompositeNode(grammarAccess.getDependencyAccess().getAlternativeObservablesAlternativeDependencyObservableSemanticsParserRuleCall_1_1_0_2_1_0());
                    	    	      												
                    	    	    }
                    	    	    pushFollow(FOLLOW_29);
                    	    	    lv_alternativeObservables_7_0=ruleAlternativeDependencyObservableSemantics();

                    	    	    state._fsp--;
                    	    	    if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {

                    	    	      													if (current==null) {
                    	    	      														current = createModelElementForParent(grammarAccess.getDependencyRule());
                    	    	      													}
                    	    	      													add(
                    	    	      														current,
                    	    	      														"alternativeObservables",
                    	    	      														lv_alternativeObservables_7_0,
                    	    	      														"org.integratedmodelling.kim.Kim.AlternativeDependencyObservableSemantics");
                    	    	      													afterParserOrEnumRuleCall();
                    	    	      												
                    	    	    }

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop179;
                    	        }
                    	    } while (true);

                    	    otherlv_8=(Token)match(input,41,FOLLOW_107); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      										newLeafNode(otherlv_8, grammarAccess.getDependencyAccess().getRightParenthesisKeyword_1_1_0_3());
                    	      									
                    	    }
                    	    // InternalKim.g:7817:10: ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )?
                    	    int alt180=3;
                    	    int LA180_0 = input.LA(1);

                    	    if ( (LA180_0==115) ) {
                    	        alt180=1;
                    	    }
                    	    else if ( (LA180_0==116) ) {
                    	        alt180=2;
                    	    }
                    	    switch (alt180) {
                    	        case 1 :
                    	            // InternalKim.g:7818:11: ( (lv_optional_9_0= 'optional' ) )
                    	            {
                    	            // InternalKim.g:7818:11: ( (lv_optional_9_0= 'optional' ) )
                    	            // InternalKim.g:7819:12: (lv_optional_9_0= 'optional' )
                    	            {
                    	            // InternalKim.g:7819:12: (lv_optional_9_0= 'optional' )
                    	            // InternalKim.g:7820:13: lv_optional_9_0= 'optional'
                    	            {
                    	            lv_optional_9_0=(Token)match(input,115,FOLLOW_108); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              													newLeafNode(lv_optional_9_0, grammarAccess.getDependencyAccess().getOptionalOptionalKeyword_1_1_0_4_0_0());
                    	              												
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              													if (current==null) {
                    	              														current = createModelElement(grammarAccess.getDependencyRule());
                    	              													}
                    	              													setWithLastConsumed(current, "optional", true, "optional");
                    	              												
                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 2 :
                    	            // InternalKim.g:7833:11: otherlv_10= 'required'
                    	            {
                    	            otherlv_10=(Token)match(input,116,FOLLOW_108); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              											newLeafNode(otherlv_10, grammarAccess.getDependencyAccess().getRequiredKeyword_1_1_0_4_1());
                    	              										
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1());

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalKim.g:7844:5: ({...}? => ( ({...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) ) ) ) )
                    	    {
                    	    // InternalKim.g:7844:5: ({...}? => ( ({...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) ) ) ) )
                    	    // InternalKim.g:7845:6: {...}? => ( ({...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1(), 1) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleDependency", "getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1(), 1)");
                    	    }
                    	    // InternalKim.g:7845:110: ( ({...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) ) ) )
                    	    // InternalKim.g:7846:7: ({...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1(), 1);
                    	    // InternalKim.g:7849:10: ({...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) ) )
                    	    // InternalKim.g:7849:11: {...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleDependency", "true");
                    	    }
                    	    // InternalKim.g:7849:20: (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) )
                    	    // InternalKim.g:7849:21: otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) )
                    	    {
                    	    otherlv_11=(Token)match(input,117,FOLLOW_46); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      										newLeafNode(otherlv_11, grammarAccess.getDependencyAccess().getNamedKeyword_1_1_1_0());
                    	      									
                    	    }
                    	    // InternalKim.g:7853:10: ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) )
                    	    // InternalKim.g:7854:11: ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) )
                    	    {
                    	    // InternalKim.g:7854:11: ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) )
                    	    // InternalKim.g:7855:12: (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING )
                    	    {
                    	    // InternalKim.g:7855:12: (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING )
                    	    int alt181=2;
                    	    int LA181_0 = input.LA(1);

                    	    if ( (LA181_0==RULE_LOWERCASE_ID) ) {
                    	        alt181=1;
                    	    }
                    	    else if ( (LA181_0==RULE_STRING) ) {
                    	        alt181=2;
                    	    }
                    	    else {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 181, 0, input);

                    	        throw nvae;
                    	    }
                    	    switch (alt181) {
                    	        case 1 :
                    	            // InternalKim.g:7856:13: lv_name_12_1= RULE_LOWERCASE_ID
                    	            {
                    	            lv_name_12_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_108); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              													newLeafNode(lv_name_12_1, grammarAccess.getDependencyAccess().getNameLOWERCASE_IDTerminalRuleCall_1_1_1_1_0_0());
                    	              												
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              													if (current==null) {
                    	              														current = createModelElement(grammarAccess.getDependencyRule());
                    	              													}
                    	              													setWithLastConsumed(
                    	              														current,
                    	              														"name",
                    	              														lv_name_12_1,
                    	              														"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                    	              												
                    	            }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // InternalKim.g:7871:13: lv_name_12_2= RULE_STRING
                    	            {
                    	            lv_name_12_2=(Token)match(input,RULE_STRING,FOLLOW_108); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              													newLeafNode(lv_name_12_2, grammarAccess.getDependencyAccess().getNameSTRINGTerminalRuleCall_1_1_1_1_0_1());
                    	              												
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              													if (current==null) {
                    	              														current = createModelElement(grammarAccess.getDependencyRule());
                    	              													}
                    	              													setWithLastConsumed(
                    	              														current,
                    	              														"name",
                    	              														lv_name_12_2,
                    	              														"org.eclipse.xtext.common.Terminals.STRING");
                    	              												
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }


                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1());

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt182 >= 1 ) break loop182;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(182, input);
                                throw eee;
                        }
                        cnt182++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1()) ) {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        throw new FailedPredicateException(input, "ruleDependency", "getUnorderedGroupHelper().canLeave(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1())");
                    }

                    }


                    }

                    getUnorderedGroupHelper().leave(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1());

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleDependency"


    // $ANTLR start "entryRuleConceptDeclaration"
    // InternalKim.g:7910:1: entryRuleConceptDeclaration returns [EObject current=null] : iv_ruleConceptDeclaration= ruleConceptDeclaration EOF ;
    public final EObject entryRuleConceptDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConceptDeclaration = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1()
        	);

        try {
            // InternalKim.g:7914:2: (iv_ruleConceptDeclaration= ruleConceptDeclaration EOF )
            // InternalKim.g:7915:2: iv_ruleConceptDeclaration= ruleConceptDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConceptDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConceptDeclaration=ruleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConceptDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleConceptDeclaration"


    // $ANTLR start "ruleConceptDeclaration"
    // InternalKim.g:7924:1: ruleConceptDeclaration returns [EObject current=null] : ( ( (lv_main_0_0= ruleConcept ) )+ ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) ) )? ) ;
    public final EObject ruleConceptDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_distributedOfInherency_3_0=null;
        Token otherlv_5=null;
        Token lv_distributedForInherency_6_0=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token otherlv_23=null;
        Token lv_distributedTemporalInherency_24_0=null;
        Token otherlv_26=null;
        Token lv_distributedWithinInherency_27_0=null;
        Token otherlv_29=null;
        Token otherlv_31=null;
        EObject lv_main_0_0 = null;

        EObject lv_inherency_4_0 = null;

        EObject lv_motivation_7_0 = null;

        EObject lv_compresent_9_0 = null;

        EObject lv_causant_12_0 = null;

        EObject lv_adjacent_15_0 = null;

        EObject lv_container_18_0 = null;

        EObject lv_contained_20_0 = null;

        EObject lv_caused_22_0 = null;

        EObject lv_during_25_0 = null;

        EObject lv_context_28_0 = null;

        EObject lv_relationshipSource_30_0 = null;

        EObject lv_relationshipTarget_32_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1()
        	);

        try {
            // InternalKim.g:7933:2: ( ( ( (lv_main_0_0= ruleConcept ) )+ ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) ) )? ) )
            // InternalKim.g:7934:2: ( ( (lv_main_0_0= ruleConcept ) )+ ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) ) )? )
            {
            // InternalKim.g:7934:2: ( ( (lv_main_0_0= ruleConcept ) )+ ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) ) )? )
            // InternalKim.g:7935:3: ( (lv_main_0_0= ruleConcept ) )+ ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) ) )?
            {
            // InternalKim.g:7935:3: ( (lv_main_0_0= ruleConcept ) )+
            int cnt184=0;
            loop184:
            do {
                int alt184=2;
                alt184 = dfa184.predict(input);
                switch (alt184) {
            	case 1 :
            	    // InternalKim.g:7936:4: (lv_main_0_0= ruleConcept )
            	    {
            	    // InternalKim.g:7936:4: (lv_main_0_0= ruleConcept )
            	    // InternalKim.g:7937:5: lv_main_0_0= ruleConcept
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getConceptDeclarationAccess().getMainConceptParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_109);
            	    lv_main_0_0=ruleConcept();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"main",
            	      						lv_main_0_0,
            	      						"org.integratedmodelling.kim.Kim.Concept");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt184 >= 1 ) break loop184;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(184, input);
                        throw eee;
                }
                cnt184++;
            } while (true);

            // InternalKim.g:7954:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) ) )?
            int alt190=2;
            alt190 = dfa190.predict(input);
            switch (alt190) {
                case 1 :
                    // InternalKim.g:7955:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) )
                    {
                    // InternalKim.g:7955:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) )
                    // InternalKim.g:7956:5: ( ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* )
                    {
                    getUnorderedGroupHelper().enter(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());
                    // InternalKim.g:7959:5: ( ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* )
                    // InternalKim.g:7960:6: ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )*
                    {
                    // InternalKim.g:7960:6: ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )*
                    loop189:
                    do {
                        int alt189=12;
                        alt189 = dfa189.predict(input);
                        switch (alt189) {
                    	case 1 :
                    	    // InternalKim.g:7961:4: ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
                    	    {
                    	    // InternalKim.g:7961:4: ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
                    	    // InternalKim.g:7962:5: {...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 0) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 0)");
                    	    }
                    	    // InternalKim.g:7962:115: ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    // InternalKim.g:7963:6: ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 0);
                    	    // InternalKim.g:7966:9: ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    // InternalKim.g:7966:10: {...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
                    	    }
                    	    // InternalKim.g:7966:19: (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    // InternalKim.g:7966:20: otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) )
                    	    {
                    	    otherlv_2=(Token)match(input,123,FOLLOW_110); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_2, grammarAccess.getConceptDeclarationAccess().getOfKeyword_1_0_0());
                    	      								
                    	    }
                    	    // InternalKim.g:7970:9: ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) )
                    	    // InternalKim.g:7971:10: ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) )
                    	    {
                    	    // InternalKim.g:7971:10: ( (lv_distributedOfInherency_3_0= 'each' ) )?
                    	    int alt185=2;
                    	    int LA185_0 = input.LA(1);

                    	    if ( (LA185_0==26) ) {
                    	        alt185=1;
                    	    }
                    	    switch (alt185) {
                    	        case 1 :
                    	            // InternalKim.g:7972:11: (lv_distributedOfInherency_3_0= 'each' )
                    	            {
                    	            // InternalKim.g:7972:11: (lv_distributedOfInherency_3_0= 'each' )
                    	            // InternalKim.g:7973:12: lv_distributedOfInherency_3_0= 'each'
                    	            {
                    	            lv_distributedOfInherency_3_0=(Token)match(input,26,FOLLOW_110); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              												newLeafNode(lv_distributedOfInherency_3_0, grammarAccess.getConceptDeclarationAccess().getDistributedOfInherencyEachKeyword_1_0_1_0_0());
                    	              											
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              												if (current==null) {
                    	              													current = createModelElement(grammarAccess.getConceptDeclarationRule());
                    	              												}
                    	              												setWithLastConsumed(current, "distributedOfInherency", true, "each");
                    	              											
                    	            }

                    	            }


                    	            }
                    	            break;

                    	    }

                    	    // InternalKim.g:7985:10: ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) )
                    	    // InternalKim.g:7986:11: (lv_inherency_4_0= ruleSimpleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:7986:11: (lv_inherency_4_0= ruleSimpleConceptDeclaration )
                    	    // InternalKim.g:7987:12: lv_inherency_4_0= ruleSimpleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      												newCompositeNode(grammarAccess.getConceptDeclarationAccess().getInherencySimpleConceptDeclarationParserRuleCall_1_0_1_1_0());
                    	      											
                    	    }
                    	    pushFollow(FOLLOW_111);
                    	    lv_inherency_4_0=ruleSimpleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      												if (current==null) {
                    	      													current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
                    	      												}
                    	      												set(
                    	      													current,
                    	      													"inherency",
                    	      													lv_inherency_4_0,
                    	      													"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                    	      												afterParserOrEnumRuleCall();
                    	      											
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalKim.g:8011:4: ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
                    	    {
                    	    // InternalKim.g:8011:4: ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
                    	    // InternalKim.g:8012:5: {...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 1) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 1)");
                    	    }
                    	    // InternalKim.g:8012:115: ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    // InternalKim.g:8013:6: ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 1);
                    	    // InternalKim.g:8016:9: ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    // InternalKim.g:8016:10: {...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
                    	    }
                    	    // InternalKim.g:8016:19: (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    // InternalKim.g:8016:20: otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) )
                    	    {
                    	    otherlv_5=(Token)match(input,69,FOLLOW_110); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_5, grammarAccess.getConceptDeclarationAccess().getForKeyword_1_1_0());
                    	      								
                    	    }
                    	    // InternalKim.g:8020:9: ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) )
                    	    // InternalKim.g:8021:10: ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) )
                    	    {
                    	    // InternalKim.g:8021:10: ( (lv_distributedForInherency_6_0= 'each' ) )?
                    	    int alt186=2;
                    	    int LA186_0 = input.LA(1);

                    	    if ( (LA186_0==26) ) {
                    	        alt186=1;
                    	    }
                    	    switch (alt186) {
                    	        case 1 :
                    	            // InternalKim.g:8022:11: (lv_distributedForInherency_6_0= 'each' )
                    	            {
                    	            // InternalKim.g:8022:11: (lv_distributedForInherency_6_0= 'each' )
                    	            // InternalKim.g:8023:12: lv_distributedForInherency_6_0= 'each'
                    	            {
                    	            lv_distributedForInherency_6_0=(Token)match(input,26,FOLLOW_110); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              												newLeafNode(lv_distributedForInherency_6_0, grammarAccess.getConceptDeclarationAccess().getDistributedForInherencyEachKeyword_1_1_1_0_0());
                    	              											
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              												if (current==null) {
                    	              													current = createModelElement(grammarAccess.getConceptDeclarationRule());
                    	              												}
                    	              												setWithLastConsumed(current, "distributedForInherency", true, "each");
                    	              											
                    	            }

                    	            }


                    	            }
                    	            break;

                    	    }

                    	    // InternalKim.g:8035:10: ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) )
                    	    // InternalKim.g:8036:11: (lv_motivation_7_0= ruleSimpleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:8036:11: (lv_motivation_7_0= ruleSimpleConceptDeclaration )
                    	    // InternalKim.g:8037:12: lv_motivation_7_0= ruleSimpleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      												newCompositeNode(grammarAccess.getConceptDeclarationAccess().getMotivationSimpleConceptDeclarationParserRuleCall_1_1_1_1_0());
                    	      											
                    	    }
                    	    pushFollow(FOLLOW_111);
                    	    lv_motivation_7_0=ruleSimpleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      												if (current==null) {
                    	      													current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
                    	      												}
                    	      												set(
                    	      													current,
                    	      													"motivation",
                    	      													lv_motivation_7_0,
                    	      													"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                    	      												afterParserOrEnumRuleCall();
                    	      											
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalKim.g:8061:4: ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    {
                    	    // InternalKim.g:8061:4: ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    // InternalKim.g:8062:5: {...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 2) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 2)");
                    	    }
                    	    // InternalKim.g:8062:115: ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    // InternalKim.g:8063:6: ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 2);
                    	    // InternalKim.g:8066:9: ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    // InternalKim.g:8066:10: {...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
                    	    }
                    	    // InternalKim.g:8066:19: (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) )
                    	    // InternalKim.g:8066:20: otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) )
                    	    {
                    	    otherlv_8=(Token)match(input,99,FOLLOW_110); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_8, grammarAccess.getConceptDeclarationAccess().getWithKeyword_1_2_0());
                    	      								
                    	    }
                    	    // InternalKim.g:8070:9: ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) )
                    	    // InternalKim.g:8071:10: (lv_compresent_9_0= ruleSimpleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:8071:10: (lv_compresent_9_0= ruleSimpleConceptDeclaration )
                    	    // InternalKim.g:8072:11: lv_compresent_9_0= ruleSimpleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getCompresentSimpleConceptDeclarationParserRuleCall_1_2_1_0());
                    	      										
                    	    }
                    	    pushFollow(FOLLOW_111);
                    	    lv_compresent_9_0=ruleSimpleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      											if (current==null) {
                    	      												current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
                    	      											}
                    	      											set(
                    	      												current,
                    	      												"compresent",
                    	      												lv_compresent_9_0,
                    	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                    	      											afterParserOrEnumRuleCall();
                    	      										
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalKim.g:8095:4: ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    {
                    	    // InternalKim.g:8095:4: ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    // InternalKim.g:8096:5: {...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 3) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 3)");
                    	    }
                    	    // InternalKim.g:8096:115: ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    // InternalKim.g:8097:6: ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 3);
                    	    // InternalKim.g:8100:9: ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    // InternalKim.g:8100:10: {...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
                    	    }
                    	    // InternalKim.g:8100:19: (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) )
                    	    // InternalKim.g:8100:20: otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) )
                    	    {
                    	    otherlv_10=(Token)match(input,124,FOLLOW_112); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_10, grammarAccess.getConceptDeclarationAccess().getCausedKeyword_1_3_0());
                    	      								
                    	    }
                    	    otherlv_11=(Token)match(input,89,FOLLOW_110); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_11, grammarAccess.getConceptDeclarationAccess().getByKeyword_1_3_1());
                    	      								
                    	    }
                    	    // InternalKim.g:8108:9: ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) )
                    	    // InternalKim.g:8109:10: (lv_causant_12_0= ruleSimpleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:8109:10: (lv_causant_12_0= ruleSimpleConceptDeclaration )
                    	    // InternalKim.g:8110:11: lv_causant_12_0= ruleSimpleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getCausantSimpleConceptDeclarationParserRuleCall_1_3_2_0());
                    	      										
                    	    }
                    	    pushFollow(FOLLOW_111);
                    	    lv_causant_12_0=ruleSimpleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      											if (current==null) {
                    	      												current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
                    	      											}
                    	      											set(
                    	      												current,
                    	      												"causant",
                    	      												lv_causant_12_0,
                    	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                    	      											afterParserOrEnumRuleCall();
                    	      										
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalKim.g:8133:4: ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    {
                    	    // InternalKim.g:8133:4: ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    // InternalKim.g:8134:5: {...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 4) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 4)");
                    	    }
                    	    // InternalKim.g:8134:115: ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    // InternalKim.g:8135:6: ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 4);
                    	    // InternalKim.g:8138:9: ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    // InternalKim.g:8138:10: {...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
                    	    }
                    	    // InternalKim.g:8138:19: (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) )
                    	    // InternalKim.g:8138:20: otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) )
                    	    {
                    	    otherlv_13=(Token)match(input,125,FOLLOW_25); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_13, grammarAccess.getConceptDeclarationAccess().getAdjacentKeyword_1_4_0());
                    	      								
                    	    }
                    	    otherlv_14=(Token)match(input,36,FOLLOW_110); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_14, grammarAccess.getConceptDeclarationAccess().getToKeyword_1_4_1());
                    	      								
                    	    }
                    	    // InternalKim.g:8146:9: ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) )
                    	    // InternalKim.g:8147:10: (lv_adjacent_15_0= ruleSimpleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:8147:10: (lv_adjacent_15_0= ruleSimpleConceptDeclaration )
                    	    // InternalKim.g:8148:11: lv_adjacent_15_0= ruleSimpleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getAdjacentSimpleConceptDeclarationParserRuleCall_1_4_2_0());
                    	      										
                    	    }
                    	    pushFollow(FOLLOW_111);
                    	    lv_adjacent_15_0=ruleSimpleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      											if (current==null) {
                    	      												current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
                    	      											}
                    	      											set(
                    	      												current,
                    	      												"adjacent",
                    	      												lv_adjacent_15_0,
                    	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                    	      											afterParserOrEnumRuleCall();
                    	      										
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalKim.g:8171:4: ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    {
                    	    // InternalKim.g:8171:4: ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    // InternalKim.g:8172:5: {...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 5) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 5)");
                    	    }
                    	    // InternalKim.g:8172:115: ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    // InternalKim.g:8173:6: ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 5);
                    	    // InternalKim.g:8176:9: ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    // InternalKim.g:8176:10: {...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
                    	    }
                    	    // InternalKim.g:8176:19: (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) )
                    	    // InternalKim.g:8176:20: otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) )
                    	    {
                    	    otherlv_16=(Token)match(input,126,FOLLOW_113); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_16, grammarAccess.getConceptDeclarationAccess().getContainedKeyword_1_5_0());
                    	      								
                    	    }
                    	    otherlv_17=(Token)match(input,48,FOLLOW_110); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_17, grammarAccess.getConceptDeclarationAccess().getInKeyword_1_5_1());
                    	      								
                    	    }
                    	    // InternalKim.g:8184:9: ( (lv_container_18_0= ruleSimpleConceptDeclaration ) )
                    	    // InternalKim.g:8185:10: (lv_container_18_0= ruleSimpleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:8185:10: (lv_container_18_0= ruleSimpleConceptDeclaration )
                    	    // InternalKim.g:8186:11: lv_container_18_0= ruleSimpleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getContainerSimpleConceptDeclarationParserRuleCall_1_5_2_0());
                    	      										
                    	    }
                    	    pushFollow(FOLLOW_111);
                    	    lv_container_18_0=ruleSimpleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      											if (current==null) {
                    	      												current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
                    	      											}
                    	      											set(
                    	      												current,
                    	      												"container",
                    	      												lv_container_18_0,
                    	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                    	      											afterParserOrEnumRuleCall();
                    	      										
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalKim.g:8209:4: ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    {
                    	    // InternalKim.g:8209:4: ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    // InternalKim.g:8210:5: {...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 6) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 6)");
                    	    }
                    	    // InternalKim.g:8210:115: ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    // InternalKim.g:8211:6: ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 6);
                    	    // InternalKim.g:8214:9: ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    // InternalKim.g:8214:10: {...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
                    	    }
                    	    // InternalKim.g:8214:19: (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) )
                    	    // InternalKim.g:8214:20: otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) )
                    	    {
                    	    otherlv_19=(Token)match(input,127,FOLLOW_110); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_19, grammarAccess.getConceptDeclarationAccess().getContainingKeyword_1_6_0());
                    	      								
                    	    }
                    	    // InternalKim.g:8218:9: ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) )
                    	    // InternalKim.g:8219:10: (lv_contained_20_0= ruleSimpleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:8219:10: (lv_contained_20_0= ruleSimpleConceptDeclaration )
                    	    // InternalKim.g:8220:11: lv_contained_20_0= ruleSimpleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getContainedSimpleConceptDeclarationParserRuleCall_1_6_1_0());
                    	      										
                    	    }
                    	    pushFollow(FOLLOW_111);
                    	    lv_contained_20_0=ruleSimpleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      											if (current==null) {
                    	      												current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
                    	      											}
                    	      											set(
                    	      												current,
                    	      												"contained",
                    	      												lv_contained_20_0,
                    	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                    	      											afterParserOrEnumRuleCall();
                    	      										
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 8 :
                    	    // InternalKim.g:8243:4: ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    {
                    	    // InternalKim.g:8243:4: ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    // InternalKim.g:8244:5: {...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 7) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 7)");
                    	    }
                    	    // InternalKim.g:8244:115: ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    // InternalKim.g:8245:6: ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 7);
                    	    // InternalKim.g:8248:9: ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    // InternalKim.g:8248:10: {...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
                    	    }
                    	    // InternalKim.g:8248:19: (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) )
                    	    // InternalKim.g:8248:20: otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) )
                    	    {
                    	    otherlv_21=(Token)match(input,128,FOLLOW_110); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_21, grammarAccess.getConceptDeclarationAccess().getCausingKeyword_1_7_0());
                    	      								
                    	    }
                    	    // InternalKim.g:8252:9: ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) )
                    	    // InternalKim.g:8253:10: (lv_caused_22_0= ruleSimpleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:8253:10: (lv_caused_22_0= ruleSimpleConceptDeclaration )
                    	    // InternalKim.g:8254:11: lv_caused_22_0= ruleSimpleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getCausedSimpleConceptDeclarationParserRuleCall_1_7_1_0());
                    	      										
                    	    }
                    	    pushFollow(FOLLOW_111);
                    	    lv_caused_22_0=ruleSimpleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      											if (current==null) {
                    	      												current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
                    	      											}
                    	      											set(
                    	      												current,
                    	      												"caused",
                    	      												lv_caused_22_0,
                    	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                    	      											afterParserOrEnumRuleCall();
                    	      										
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 9 :
                    	    // InternalKim.g:8277:4: ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
                    	    {
                    	    // InternalKim.g:8277:4: ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
                    	    // InternalKim.g:8278:5: {...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 8) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 8)");
                    	    }
                    	    // InternalKim.g:8278:115: ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    // InternalKim.g:8279:6: ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 8);
                    	    // InternalKim.g:8282:9: ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    // InternalKim.g:8282:10: {...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
                    	    }
                    	    // InternalKim.g:8282:19: (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    // InternalKim.g:8282:20: otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) )
                    	    {
                    	    otherlv_23=(Token)match(input,129,FOLLOW_110); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_23, grammarAccess.getConceptDeclarationAccess().getDuringKeyword_1_8_0());
                    	      								
                    	    }
                    	    // InternalKim.g:8286:9: ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) )
                    	    // InternalKim.g:8287:10: ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) )
                    	    {
                    	    // InternalKim.g:8287:10: ( (lv_distributedTemporalInherency_24_0= 'each' ) )?
                    	    int alt187=2;
                    	    int LA187_0 = input.LA(1);

                    	    if ( (LA187_0==26) ) {
                    	        alt187=1;
                    	    }
                    	    switch (alt187) {
                    	        case 1 :
                    	            // InternalKim.g:8288:11: (lv_distributedTemporalInherency_24_0= 'each' )
                    	            {
                    	            // InternalKim.g:8288:11: (lv_distributedTemporalInherency_24_0= 'each' )
                    	            // InternalKim.g:8289:12: lv_distributedTemporalInherency_24_0= 'each'
                    	            {
                    	            lv_distributedTemporalInherency_24_0=(Token)match(input,26,FOLLOW_110); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              												newLeafNode(lv_distributedTemporalInherency_24_0, grammarAccess.getConceptDeclarationAccess().getDistributedTemporalInherencyEachKeyword_1_8_1_0_0());
                    	              											
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              												if (current==null) {
                    	              													current = createModelElement(grammarAccess.getConceptDeclarationRule());
                    	              												}
                    	              												setWithLastConsumed(current, "distributedTemporalInherency", true, "each");
                    	              											
                    	            }

                    	            }


                    	            }
                    	            break;

                    	    }

                    	    // InternalKim.g:8301:10: ( (lv_during_25_0= ruleSimpleConceptDeclaration ) )
                    	    // InternalKim.g:8302:11: (lv_during_25_0= ruleSimpleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:8302:11: (lv_during_25_0= ruleSimpleConceptDeclaration )
                    	    // InternalKim.g:8303:12: lv_during_25_0= ruleSimpleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      												newCompositeNode(grammarAccess.getConceptDeclarationAccess().getDuringSimpleConceptDeclarationParserRuleCall_1_8_1_1_0());
                    	      											
                    	    }
                    	    pushFollow(FOLLOW_111);
                    	    lv_during_25_0=ruleSimpleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      												if (current==null) {
                    	      													current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
                    	      												}
                    	      												set(
                    	      													current,
                    	      													"during",
                    	      													lv_during_25_0,
                    	      													"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                    	      												afterParserOrEnumRuleCall();
                    	      											
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 10 :
                    	    // InternalKim.g:8327:4: ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
                    	    {
                    	    // InternalKim.g:8327:4: ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
                    	    // InternalKim.g:8328:5: {...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 9) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 9)");
                    	    }
                    	    // InternalKim.g:8328:115: ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    // InternalKim.g:8329:6: ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 9);
                    	    // InternalKim.g:8332:9: ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    // InternalKim.g:8332:10: {...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
                    	    }
                    	    // InternalKim.g:8332:19: (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    // InternalKim.g:8332:20: otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) )
                    	    {
                    	    otherlv_26=(Token)match(input,130,FOLLOW_110); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_26, grammarAccess.getConceptDeclarationAccess().getWithinKeyword_1_9_0());
                    	      								
                    	    }
                    	    // InternalKim.g:8336:9: ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) )
                    	    // InternalKim.g:8337:10: ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) )
                    	    {
                    	    // InternalKim.g:8337:10: ( (lv_distributedWithinInherency_27_0= 'each' ) )?
                    	    int alt188=2;
                    	    int LA188_0 = input.LA(1);

                    	    if ( (LA188_0==26) ) {
                    	        alt188=1;
                    	    }
                    	    switch (alt188) {
                    	        case 1 :
                    	            // InternalKim.g:8338:11: (lv_distributedWithinInherency_27_0= 'each' )
                    	            {
                    	            // InternalKim.g:8338:11: (lv_distributedWithinInherency_27_0= 'each' )
                    	            // InternalKim.g:8339:12: lv_distributedWithinInherency_27_0= 'each'
                    	            {
                    	            lv_distributedWithinInherency_27_0=(Token)match(input,26,FOLLOW_110); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              												newLeafNode(lv_distributedWithinInherency_27_0, grammarAccess.getConceptDeclarationAccess().getDistributedWithinInherencyEachKeyword_1_9_1_0_0());
                    	              											
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              												if (current==null) {
                    	              													current = createModelElement(grammarAccess.getConceptDeclarationRule());
                    	              												}
                    	              												setWithLastConsumed(current, "distributedWithinInherency", true, "each");
                    	              											
                    	            }

                    	            }


                    	            }
                    	            break;

                    	    }

                    	    // InternalKim.g:8351:10: ( (lv_context_28_0= ruleSimpleConceptDeclaration ) )
                    	    // InternalKim.g:8352:11: (lv_context_28_0= ruleSimpleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:8352:11: (lv_context_28_0= ruleSimpleConceptDeclaration )
                    	    // InternalKim.g:8353:12: lv_context_28_0= ruleSimpleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      												newCompositeNode(grammarAccess.getConceptDeclarationAccess().getContextSimpleConceptDeclarationParserRuleCall_1_9_1_1_0());
                    	      											
                    	    }
                    	    pushFollow(FOLLOW_111);
                    	    lv_context_28_0=ruleSimpleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      												if (current==null) {
                    	      													current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
                    	      												}
                    	      												set(
                    	      													current,
                    	      													"context",
                    	      													lv_context_28_0,
                    	      													"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                    	      												afterParserOrEnumRuleCall();
                    	      											
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 11 :
                    	    // InternalKim.g:8377:4: ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    {
                    	    // InternalKim.g:8377:4: ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    // InternalKim.g:8378:5: {...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 10) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 10)");
                    	    }
                    	    // InternalKim.g:8378:116: ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    // InternalKim.g:8379:6: ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 10);
                    	    // InternalKim.g:8382:9: ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    // InternalKim.g:8382:10: {...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
                    	    }
                    	    // InternalKim.g:8382:19: (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) )
                    	    // InternalKim.g:8382:20: otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) )
                    	    {
                    	    otherlv_29=(Token)match(input,131,FOLLOW_110); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_29, grammarAccess.getConceptDeclarationAccess().getLinkingKeyword_1_10_0());
                    	      								
                    	    }
                    	    // InternalKim.g:8386:9: ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) )
                    	    // InternalKim.g:8387:10: (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:8387:10: (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration )
                    	    // InternalKim.g:8388:11: lv_relationshipSource_30_0= ruleSimpleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getRelationshipSourceSimpleConceptDeclarationParserRuleCall_1_10_1_0());
                    	      										
                    	    }
                    	    pushFollow(FOLLOW_25);
                    	    lv_relationshipSource_30_0=ruleSimpleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      											if (current==null) {
                    	      												current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
                    	      											}
                    	      											set(
                    	      												current,
                    	      												"relationshipSource",
                    	      												lv_relationshipSource_30_0,
                    	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                    	      											afterParserOrEnumRuleCall();
                    	      										
                    	    }

                    	    }


                    	    }

                    	    otherlv_31=(Token)match(input,36,FOLLOW_110); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_31, grammarAccess.getConceptDeclarationAccess().getToKeyword_1_10_2());
                    	      								
                    	    }
                    	    // InternalKim.g:8409:9: ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) )
                    	    // InternalKim.g:8410:10: (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:8410:10: (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration )
                    	    // InternalKim.g:8411:11: lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getRelationshipTargetSimpleConceptDeclarationParserRuleCall_1_10_3_0());
                    	      										
                    	    }
                    	    pushFollow(FOLLOW_111);
                    	    lv_relationshipTarget_32_0=ruleSimpleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      											if (current==null) {
                    	      												current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
                    	      											}
                    	      											set(
                    	      												current,
                    	      												"relationshipTarget",
                    	      												lv_relationshipTarget_32_0,
                    	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                    	      											afterParserOrEnumRuleCall();
                    	      										
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop189;
                        }
                    } while (true);


                    }


                    }

                    getUnorderedGroupHelper().leave(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleConceptDeclaration"


    // $ANTLR start "entryRuleConceptReference"
    // InternalKim.g:8448:1: entryRuleConceptReference returns [EObject current=null] : iv_ruleConceptReference= ruleConceptReference EOF ;
    public final EObject entryRuleConceptReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConceptReference = null;


        try {
            // InternalKim.g:8448:57: (iv_ruleConceptReference= ruleConceptReference EOF )
            // InternalKim.g:8449:2: iv_ruleConceptReference= ruleConceptReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConceptReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConceptReference=ruleConceptReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConceptReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConceptReference"


    // $ANTLR start "ruleConceptReference"
    // InternalKim.g:8455:1: ruleConceptReference returns [EObject current=null] : ( ( (lv_name_0_0= ruleAuthorityId ) ) | ( (lv_name_1_0= RULE_CAMELCASE_ID ) ) | ( (lv_name_2_0= ruleNamespaceId ) ) | ( ( ( (lv_templateType_3_1= '${' | lv_templateType_3_2= '#{' ) ) ) ( ( ( (lv_name_4_0= 'context' ) ) ( ( (lv_type_5_0= ruleCONCEPT_TYPE ) ) | (otherlv_6= 'extends' ( (lv_extends_7_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_8_0= 'inherent' ) ) ( ( (lv_type_9_0= ruleCONCEPT_TYPE ) ) | (otherlv_10= 'extends' ( (lv_extends_11_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_12_0= 'compresent' ) ) ( ( (lv_type_13_0= ruleCONCEPT_TYPE ) ) | (otherlv_14= 'extends' ( (lv_extends_15_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_16_0= 'adjacent' ) ) ( ( (lv_type_17_0= ruleCONCEPT_TYPE ) ) | (otherlv_18= 'extends' ( (lv_extends_19_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_20_0= 'container' ) ) ( ( (lv_type_21_0= ruleCONCEPT_TYPE ) ) | (otherlv_22= 'extends' ( (lv_extends_23_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_24_0= 'contained' ) ) ( ( (lv_type_25_0= ruleCONCEPT_TYPE ) ) | (otherlv_26= 'extends' ( (lv_extends_27_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_28_0= 'purpose' ) ) ( ( (lv_type_29_0= ruleCONCEPT_TYPE ) ) | (otherlv_30= 'extends' ( (lv_extends_31_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_32_0= 'causant' ) ) ( ( (lv_type_33_0= ruleCONCEPT_TYPE ) ) | (otherlv_34= 'extends' ( (lv_extends_35_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_36_0= 'caused' ) ) ( ( (lv_type_37_0= ruleCONCEPT_TYPE ) ) | (otherlv_38= 'extends' ( (lv_extends_39_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_40_0= 'cooccurrent' ) ) ( ( (lv_type_41_0= ruleCONCEPT_TYPE ) ) | (otherlv_42= 'extends' ( (lv_extends_43_0= ruleConcept ) ) ) ) ) ) ( (lv_template_44_0= '}' ) ) ) ) ;
    public final EObject ruleConceptReference() throws RecognitionException {
        EObject current = null;

        Token lv_name_1_0=null;
        Token lv_templateType_3_1=null;
        Token lv_templateType_3_2=null;
        Token lv_name_4_0=null;
        Token otherlv_6=null;
        Token lv_name_8_0=null;
        Token otherlv_10=null;
        Token lv_name_12_0=null;
        Token otherlv_14=null;
        Token lv_name_16_0=null;
        Token otherlv_18=null;
        Token lv_name_20_0=null;
        Token otherlv_22=null;
        Token lv_name_24_0=null;
        Token otherlv_26=null;
        Token lv_name_28_0=null;
        Token otherlv_30=null;
        Token lv_name_32_0=null;
        Token otherlv_34=null;
        Token lv_name_36_0=null;
        Token otherlv_38=null;
        Token lv_name_40_0=null;
        Token otherlv_42=null;
        Token lv_template_44_0=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        AntlrDatatypeRuleToken lv_name_2_0 = null;

        AntlrDatatypeRuleToken lv_type_5_0 = null;

        EObject lv_extends_7_0 = null;

        AntlrDatatypeRuleToken lv_type_9_0 = null;

        EObject lv_extends_11_0 = null;

        AntlrDatatypeRuleToken lv_type_13_0 = null;

        EObject lv_extends_15_0 = null;

        AntlrDatatypeRuleToken lv_type_17_0 = null;

        EObject lv_extends_19_0 = null;

        AntlrDatatypeRuleToken lv_type_21_0 = null;

        EObject lv_extends_23_0 = null;

        AntlrDatatypeRuleToken lv_type_25_0 = null;

        EObject lv_extends_27_0 = null;

        AntlrDatatypeRuleToken lv_type_29_0 = null;

        EObject lv_extends_31_0 = null;

        AntlrDatatypeRuleToken lv_type_33_0 = null;

        EObject lv_extends_35_0 = null;

        AntlrDatatypeRuleToken lv_type_37_0 = null;

        EObject lv_extends_39_0 = null;

        AntlrDatatypeRuleToken lv_type_41_0 = null;

        EObject lv_extends_43_0 = null;



        	enterRule();

        try {
            // InternalKim.g:8461:2: ( ( ( (lv_name_0_0= ruleAuthorityId ) ) | ( (lv_name_1_0= RULE_CAMELCASE_ID ) ) | ( (lv_name_2_0= ruleNamespaceId ) ) | ( ( ( (lv_templateType_3_1= '${' | lv_templateType_3_2= '#{' ) ) ) ( ( ( (lv_name_4_0= 'context' ) ) ( ( (lv_type_5_0= ruleCONCEPT_TYPE ) ) | (otherlv_6= 'extends' ( (lv_extends_7_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_8_0= 'inherent' ) ) ( ( (lv_type_9_0= ruleCONCEPT_TYPE ) ) | (otherlv_10= 'extends' ( (lv_extends_11_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_12_0= 'compresent' ) ) ( ( (lv_type_13_0= ruleCONCEPT_TYPE ) ) | (otherlv_14= 'extends' ( (lv_extends_15_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_16_0= 'adjacent' ) ) ( ( (lv_type_17_0= ruleCONCEPT_TYPE ) ) | (otherlv_18= 'extends' ( (lv_extends_19_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_20_0= 'container' ) ) ( ( (lv_type_21_0= ruleCONCEPT_TYPE ) ) | (otherlv_22= 'extends' ( (lv_extends_23_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_24_0= 'contained' ) ) ( ( (lv_type_25_0= ruleCONCEPT_TYPE ) ) | (otherlv_26= 'extends' ( (lv_extends_27_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_28_0= 'purpose' ) ) ( ( (lv_type_29_0= ruleCONCEPT_TYPE ) ) | (otherlv_30= 'extends' ( (lv_extends_31_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_32_0= 'causant' ) ) ( ( (lv_type_33_0= ruleCONCEPT_TYPE ) ) | (otherlv_34= 'extends' ( (lv_extends_35_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_36_0= 'caused' ) ) ( ( (lv_type_37_0= ruleCONCEPT_TYPE ) ) | (otherlv_38= 'extends' ( (lv_extends_39_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_40_0= 'cooccurrent' ) ) ( ( (lv_type_41_0= ruleCONCEPT_TYPE ) ) | (otherlv_42= 'extends' ( (lv_extends_43_0= ruleConcept ) ) ) ) ) ) ( (lv_template_44_0= '}' ) ) ) ) )
            // InternalKim.g:8462:2: ( ( (lv_name_0_0= ruleAuthorityId ) ) | ( (lv_name_1_0= RULE_CAMELCASE_ID ) ) | ( (lv_name_2_0= ruleNamespaceId ) ) | ( ( ( (lv_templateType_3_1= '${' | lv_templateType_3_2= '#{' ) ) ) ( ( ( (lv_name_4_0= 'context' ) ) ( ( (lv_type_5_0= ruleCONCEPT_TYPE ) ) | (otherlv_6= 'extends' ( (lv_extends_7_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_8_0= 'inherent' ) ) ( ( (lv_type_9_0= ruleCONCEPT_TYPE ) ) | (otherlv_10= 'extends' ( (lv_extends_11_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_12_0= 'compresent' ) ) ( ( (lv_type_13_0= ruleCONCEPT_TYPE ) ) | (otherlv_14= 'extends' ( (lv_extends_15_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_16_0= 'adjacent' ) ) ( ( (lv_type_17_0= ruleCONCEPT_TYPE ) ) | (otherlv_18= 'extends' ( (lv_extends_19_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_20_0= 'container' ) ) ( ( (lv_type_21_0= ruleCONCEPT_TYPE ) ) | (otherlv_22= 'extends' ( (lv_extends_23_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_24_0= 'contained' ) ) ( ( (lv_type_25_0= ruleCONCEPT_TYPE ) ) | (otherlv_26= 'extends' ( (lv_extends_27_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_28_0= 'purpose' ) ) ( ( (lv_type_29_0= ruleCONCEPT_TYPE ) ) | (otherlv_30= 'extends' ( (lv_extends_31_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_32_0= 'causant' ) ) ( ( (lv_type_33_0= ruleCONCEPT_TYPE ) ) | (otherlv_34= 'extends' ( (lv_extends_35_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_36_0= 'caused' ) ) ( ( (lv_type_37_0= ruleCONCEPT_TYPE ) ) | (otherlv_38= 'extends' ( (lv_extends_39_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_40_0= 'cooccurrent' ) ) ( ( (lv_type_41_0= ruleCONCEPT_TYPE ) ) | (otherlv_42= 'extends' ( (lv_extends_43_0= ruleConcept ) ) ) ) ) ) ( (lv_template_44_0= '}' ) ) ) )
            {
            // InternalKim.g:8462:2: ( ( (lv_name_0_0= ruleAuthorityId ) ) | ( (lv_name_1_0= RULE_CAMELCASE_ID ) ) | ( (lv_name_2_0= ruleNamespaceId ) ) | ( ( ( (lv_templateType_3_1= '${' | lv_templateType_3_2= '#{' ) ) ) ( ( ( (lv_name_4_0= 'context' ) ) ( ( (lv_type_5_0= ruleCONCEPT_TYPE ) ) | (otherlv_6= 'extends' ( (lv_extends_7_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_8_0= 'inherent' ) ) ( ( (lv_type_9_0= ruleCONCEPT_TYPE ) ) | (otherlv_10= 'extends' ( (lv_extends_11_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_12_0= 'compresent' ) ) ( ( (lv_type_13_0= ruleCONCEPT_TYPE ) ) | (otherlv_14= 'extends' ( (lv_extends_15_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_16_0= 'adjacent' ) ) ( ( (lv_type_17_0= ruleCONCEPT_TYPE ) ) | (otherlv_18= 'extends' ( (lv_extends_19_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_20_0= 'container' ) ) ( ( (lv_type_21_0= ruleCONCEPT_TYPE ) ) | (otherlv_22= 'extends' ( (lv_extends_23_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_24_0= 'contained' ) ) ( ( (lv_type_25_0= ruleCONCEPT_TYPE ) ) | (otherlv_26= 'extends' ( (lv_extends_27_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_28_0= 'purpose' ) ) ( ( (lv_type_29_0= ruleCONCEPT_TYPE ) ) | (otherlv_30= 'extends' ( (lv_extends_31_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_32_0= 'causant' ) ) ( ( (lv_type_33_0= ruleCONCEPT_TYPE ) ) | (otherlv_34= 'extends' ( (lv_extends_35_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_36_0= 'caused' ) ) ( ( (lv_type_37_0= ruleCONCEPT_TYPE ) ) | (otherlv_38= 'extends' ( (lv_extends_39_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_40_0= 'cooccurrent' ) ) ( ( (lv_type_41_0= ruleCONCEPT_TYPE ) ) | (otherlv_42= 'extends' ( (lv_extends_43_0= ruleConcept ) ) ) ) ) ) ( (lv_template_44_0= '}' ) ) ) )
            int alt203=4;
            switch ( input.LA(1) ) {
            case RULE_UPPERCASE_PATH:
                {
                alt203=1;
                }
                break;
            case RULE_UPPERCASE_ID:
                {
                int LA203_2 = input.LA(2);

                if ( (LA203_2==109) ) {
                    alt203=3;
                }
                else if ( (LA203_2==106) ) {
                    int LA203_6 = input.LA(3);

                    if ( ((LA203_6>=RULE_LOWERCASE_ID && LA203_6<=RULE_STRING)||LA203_6==RULE_INT) ) {
                        alt203=1;
                    }
                    else if ( (LA203_6==RULE_CAMELCASE_ID) ) {
                        alt203=3;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 203, 6, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 203, 2, input);

                    throw nvae;
                }
                }
                break;
            case RULE_CAMELCASE_ID:
                {
                alt203=2;
                }
                break;
            case RULE_LOWERCASE_ID:
            case RULE_LOWERCASE_DASHID:
                {
                alt203=3;
                }
                break;
            case 132:
            case 133:
                {
                alt203=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 203, 0, input);

                throw nvae;
            }

            switch (alt203) {
                case 1 :
                    // InternalKim.g:8463:3: ( (lv_name_0_0= ruleAuthorityId ) )
                    {
                    // InternalKim.g:8463:3: ( (lv_name_0_0= ruleAuthorityId ) )
                    // InternalKim.g:8464:4: (lv_name_0_0= ruleAuthorityId )
                    {
                    // InternalKim.g:8464:4: (lv_name_0_0= ruleAuthorityId )
                    // InternalKim.g:8465:5: lv_name_0_0= ruleAuthorityId
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getConceptReferenceAccess().getNameAuthorityIdParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_name_0_0=ruleAuthorityId();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                      					}
                      					set(
                      						current,
                      						"name",
                      						lv_name_0_0,
                      						"org.integratedmodelling.kim.Kim.AuthorityId");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:8483:3: ( (lv_name_1_0= RULE_CAMELCASE_ID ) )
                    {
                    // InternalKim.g:8483:3: ( (lv_name_1_0= RULE_CAMELCASE_ID ) )
                    // InternalKim.g:8484:4: (lv_name_1_0= RULE_CAMELCASE_ID )
                    {
                    // InternalKim.g:8484:4: (lv_name_1_0= RULE_CAMELCASE_ID )
                    // InternalKim.g:8485:5: lv_name_1_0= RULE_CAMELCASE_ID
                    {
                    lv_name_1_0=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_1_0, grammarAccess.getConceptReferenceAccess().getNameCAMELCASE_IDTerminalRuleCall_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getConceptReferenceRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_1_0,
                      						"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:8502:3: ( (lv_name_2_0= ruleNamespaceId ) )
                    {
                    // InternalKim.g:8502:3: ( (lv_name_2_0= ruleNamespaceId ) )
                    // InternalKim.g:8503:4: (lv_name_2_0= ruleNamespaceId )
                    {
                    // InternalKim.g:8503:4: (lv_name_2_0= ruleNamespaceId )
                    // InternalKim.g:8504:5: lv_name_2_0= ruleNamespaceId
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getConceptReferenceAccess().getNameNamespaceIdParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_name_2_0=ruleNamespaceId();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                      					}
                      					set(
                      						current,
                      						"name",
                      						lv_name_2_0,
                      						"org.integratedmodelling.kim.Kim.NamespaceId");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:8522:3: ( ( ( (lv_templateType_3_1= '${' | lv_templateType_3_2= '#{' ) ) ) ( ( ( (lv_name_4_0= 'context' ) ) ( ( (lv_type_5_0= ruleCONCEPT_TYPE ) ) | (otherlv_6= 'extends' ( (lv_extends_7_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_8_0= 'inherent' ) ) ( ( (lv_type_9_0= ruleCONCEPT_TYPE ) ) | (otherlv_10= 'extends' ( (lv_extends_11_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_12_0= 'compresent' ) ) ( ( (lv_type_13_0= ruleCONCEPT_TYPE ) ) | (otherlv_14= 'extends' ( (lv_extends_15_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_16_0= 'adjacent' ) ) ( ( (lv_type_17_0= ruleCONCEPT_TYPE ) ) | (otherlv_18= 'extends' ( (lv_extends_19_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_20_0= 'container' ) ) ( ( (lv_type_21_0= ruleCONCEPT_TYPE ) ) | (otherlv_22= 'extends' ( (lv_extends_23_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_24_0= 'contained' ) ) ( ( (lv_type_25_0= ruleCONCEPT_TYPE ) ) | (otherlv_26= 'extends' ( (lv_extends_27_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_28_0= 'purpose' ) ) ( ( (lv_type_29_0= ruleCONCEPT_TYPE ) ) | (otherlv_30= 'extends' ( (lv_extends_31_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_32_0= 'causant' ) ) ( ( (lv_type_33_0= ruleCONCEPT_TYPE ) ) | (otherlv_34= 'extends' ( (lv_extends_35_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_36_0= 'caused' ) ) ( ( (lv_type_37_0= ruleCONCEPT_TYPE ) ) | (otherlv_38= 'extends' ( (lv_extends_39_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_40_0= 'cooccurrent' ) ) ( ( (lv_type_41_0= ruleCONCEPT_TYPE ) ) | (otherlv_42= 'extends' ( (lv_extends_43_0= ruleConcept ) ) ) ) ) ) ( (lv_template_44_0= '}' ) ) )
                    {
                    // InternalKim.g:8522:3: ( ( ( (lv_templateType_3_1= '${' | lv_templateType_3_2= '#{' ) ) ) ( ( ( (lv_name_4_0= 'context' ) ) ( ( (lv_type_5_0= ruleCONCEPT_TYPE ) ) | (otherlv_6= 'extends' ( (lv_extends_7_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_8_0= 'inherent' ) ) ( ( (lv_type_9_0= ruleCONCEPT_TYPE ) ) | (otherlv_10= 'extends' ( (lv_extends_11_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_12_0= 'compresent' ) ) ( ( (lv_type_13_0= ruleCONCEPT_TYPE ) ) | (otherlv_14= 'extends' ( (lv_extends_15_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_16_0= 'adjacent' ) ) ( ( (lv_type_17_0= ruleCONCEPT_TYPE ) ) | (otherlv_18= 'extends' ( (lv_extends_19_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_20_0= 'container' ) ) ( ( (lv_type_21_0= ruleCONCEPT_TYPE ) ) | (otherlv_22= 'extends' ( (lv_extends_23_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_24_0= 'contained' ) ) ( ( (lv_type_25_0= ruleCONCEPT_TYPE ) ) | (otherlv_26= 'extends' ( (lv_extends_27_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_28_0= 'purpose' ) ) ( ( (lv_type_29_0= ruleCONCEPT_TYPE ) ) | (otherlv_30= 'extends' ( (lv_extends_31_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_32_0= 'causant' ) ) ( ( (lv_type_33_0= ruleCONCEPT_TYPE ) ) | (otherlv_34= 'extends' ( (lv_extends_35_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_36_0= 'caused' ) ) ( ( (lv_type_37_0= ruleCONCEPT_TYPE ) ) | (otherlv_38= 'extends' ( (lv_extends_39_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_40_0= 'cooccurrent' ) ) ( ( (lv_type_41_0= ruleCONCEPT_TYPE ) ) | (otherlv_42= 'extends' ( (lv_extends_43_0= ruleConcept ) ) ) ) ) ) ( (lv_template_44_0= '}' ) ) )
                    // InternalKim.g:8523:4: ( ( (lv_templateType_3_1= '${' | lv_templateType_3_2= '#{' ) ) ) ( ( ( (lv_name_4_0= 'context' ) ) ( ( (lv_type_5_0= ruleCONCEPT_TYPE ) ) | (otherlv_6= 'extends' ( (lv_extends_7_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_8_0= 'inherent' ) ) ( ( (lv_type_9_0= ruleCONCEPT_TYPE ) ) | (otherlv_10= 'extends' ( (lv_extends_11_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_12_0= 'compresent' ) ) ( ( (lv_type_13_0= ruleCONCEPT_TYPE ) ) | (otherlv_14= 'extends' ( (lv_extends_15_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_16_0= 'adjacent' ) ) ( ( (lv_type_17_0= ruleCONCEPT_TYPE ) ) | (otherlv_18= 'extends' ( (lv_extends_19_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_20_0= 'container' ) ) ( ( (lv_type_21_0= ruleCONCEPT_TYPE ) ) | (otherlv_22= 'extends' ( (lv_extends_23_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_24_0= 'contained' ) ) ( ( (lv_type_25_0= ruleCONCEPT_TYPE ) ) | (otherlv_26= 'extends' ( (lv_extends_27_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_28_0= 'purpose' ) ) ( ( (lv_type_29_0= ruleCONCEPT_TYPE ) ) | (otherlv_30= 'extends' ( (lv_extends_31_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_32_0= 'causant' ) ) ( ( (lv_type_33_0= ruleCONCEPT_TYPE ) ) | (otherlv_34= 'extends' ( (lv_extends_35_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_36_0= 'caused' ) ) ( ( (lv_type_37_0= ruleCONCEPT_TYPE ) ) | (otherlv_38= 'extends' ( (lv_extends_39_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_40_0= 'cooccurrent' ) ) ( ( (lv_type_41_0= ruleCONCEPT_TYPE ) ) | (otherlv_42= 'extends' ( (lv_extends_43_0= ruleConcept ) ) ) ) ) ) ( (lv_template_44_0= '}' ) )
                    {
                    // InternalKim.g:8523:4: ( ( (lv_templateType_3_1= '${' | lv_templateType_3_2= '#{' ) ) )
                    // InternalKim.g:8524:5: ( (lv_templateType_3_1= '${' | lv_templateType_3_2= '#{' ) )
                    {
                    // InternalKim.g:8524:5: ( (lv_templateType_3_1= '${' | lv_templateType_3_2= '#{' ) )
                    // InternalKim.g:8525:6: (lv_templateType_3_1= '${' | lv_templateType_3_2= '#{' )
                    {
                    // InternalKim.g:8525:6: (lv_templateType_3_1= '${' | lv_templateType_3_2= '#{' )
                    int alt191=2;
                    int LA191_0 = input.LA(1);

                    if ( (LA191_0==132) ) {
                        alt191=1;
                    }
                    else if ( (LA191_0==133) ) {
                        alt191=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 191, 0, input);

                        throw nvae;
                    }
                    switch (alt191) {
                        case 1 :
                            // InternalKim.g:8526:7: lv_templateType_3_1= '${'
                            {
                            lv_templateType_3_1=(Token)match(input,132,FOLLOW_114); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_templateType_3_1, grammarAccess.getConceptReferenceAccess().getTemplateTypeDollarSignLeftCurlyBracketKeyword_3_0_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getConceptReferenceRule());
                              							}
                              							setWithLastConsumed(current, "templateType", lv_templateType_3_1, null);
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:8537:7: lv_templateType_3_2= '#{'
                            {
                            lv_templateType_3_2=(Token)match(input,133,FOLLOW_114); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_templateType_3_2, grammarAccess.getConceptReferenceAccess().getTemplateTypeNumberSignLeftCurlyBracketKeyword_3_0_0_1());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getConceptReferenceRule());
                              							}
                              							setWithLastConsumed(current, "templateType", lv_templateType_3_2, null);
                              						
                            }

                            }
                            break;

                    }


                    }


                    }

                    // InternalKim.g:8550:4: ( ( ( (lv_name_4_0= 'context' ) ) ( ( (lv_type_5_0= ruleCONCEPT_TYPE ) ) | (otherlv_6= 'extends' ( (lv_extends_7_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_8_0= 'inherent' ) ) ( ( (lv_type_9_0= ruleCONCEPT_TYPE ) ) | (otherlv_10= 'extends' ( (lv_extends_11_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_12_0= 'compresent' ) ) ( ( (lv_type_13_0= ruleCONCEPT_TYPE ) ) | (otherlv_14= 'extends' ( (lv_extends_15_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_16_0= 'adjacent' ) ) ( ( (lv_type_17_0= ruleCONCEPT_TYPE ) ) | (otherlv_18= 'extends' ( (lv_extends_19_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_20_0= 'container' ) ) ( ( (lv_type_21_0= ruleCONCEPT_TYPE ) ) | (otherlv_22= 'extends' ( (lv_extends_23_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_24_0= 'contained' ) ) ( ( (lv_type_25_0= ruleCONCEPT_TYPE ) ) | (otherlv_26= 'extends' ( (lv_extends_27_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_28_0= 'purpose' ) ) ( ( (lv_type_29_0= ruleCONCEPT_TYPE ) ) | (otherlv_30= 'extends' ( (lv_extends_31_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_32_0= 'causant' ) ) ( ( (lv_type_33_0= ruleCONCEPT_TYPE ) ) | (otherlv_34= 'extends' ( (lv_extends_35_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_36_0= 'caused' ) ) ( ( (lv_type_37_0= ruleCONCEPT_TYPE ) ) | (otherlv_38= 'extends' ( (lv_extends_39_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_40_0= 'cooccurrent' ) ) ( ( (lv_type_41_0= ruleCONCEPT_TYPE ) ) | (otherlv_42= 'extends' ( (lv_extends_43_0= ruleConcept ) ) ) ) ) )
                    int alt202=10;
                    switch ( input.LA(1) ) {
                    case 60:
                        {
                        alt202=1;
                        }
                        break;
                    case 134:
                        {
                        alt202=2;
                        }
                        break;
                    case 135:
                        {
                        alt202=3;
                        }
                        break;
                    case 125:
                        {
                        alt202=4;
                        }
                        break;
                    case 136:
                        {
                        alt202=5;
                        }
                        break;
                    case 126:
                        {
                        alt202=6;
                        }
                        break;
                    case 137:
                        {
                        alt202=7;
                        }
                        break;
                    case 138:
                        {
                        alt202=8;
                        }
                        break;
                    case 124:
                        {
                        alt202=9;
                        }
                        break;
                    case 139:
                        {
                        alt202=10;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 202, 0, input);

                        throw nvae;
                    }

                    switch (alt202) {
                        case 1 :
                            // InternalKim.g:8551:5: ( ( (lv_name_4_0= 'context' ) ) ( ( (lv_type_5_0= ruleCONCEPT_TYPE ) ) | (otherlv_6= 'extends' ( (lv_extends_7_0= ruleConcept ) ) ) ) )
                            {
                            // InternalKim.g:8551:5: ( ( (lv_name_4_0= 'context' ) ) ( ( (lv_type_5_0= ruleCONCEPT_TYPE ) ) | (otherlv_6= 'extends' ( (lv_extends_7_0= ruleConcept ) ) ) ) )
                            // InternalKim.g:8552:6: ( (lv_name_4_0= 'context' ) ) ( ( (lv_type_5_0= ruleCONCEPT_TYPE ) ) | (otherlv_6= 'extends' ( (lv_extends_7_0= ruleConcept ) ) ) )
                            {
                            // InternalKim.g:8552:6: ( (lv_name_4_0= 'context' ) )
                            // InternalKim.g:8553:7: (lv_name_4_0= 'context' )
                            {
                            // InternalKim.g:8553:7: (lv_name_4_0= 'context' )
                            // InternalKim.g:8554:8: lv_name_4_0= 'context'
                            {
                            lv_name_4_0=(Token)match(input,60,FOLLOW_115); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_4_0, grammarAccess.getConceptReferenceAccess().getNameContextKeyword_3_1_0_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_4_0, "context");
                              							
                            }

                            }


                            }

                            // InternalKim.g:8566:6: ( ( (lv_type_5_0= ruleCONCEPT_TYPE ) ) | (otherlv_6= 'extends' ( (lv_extends_7_0= ruleConcept ) ) ) )
                            int alt192=2;
                            int LA192_0 = input.LA(1);

                            if ( (LA192_0==96||LA192_0==163||(LA192_0>=170 && LA192_0<=171)||LA192_0==193||(LA192_0>=213 && LA192_0<=215)||(LA192_0>=218 && LA192_0<=247)) ) {
                                alt192=1;
                            }
                            else if ( (LA192_0==111) ) {
                                alt192=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 192, 0, input);

                                throw nvae;
                            }
                            switch (alt192) {
                                case 1 :
                                    // InternalKim.g:8567:7: ( (lv_type_5_0= ruleCONCEPT_TYPE ) )
                                    {
                                    // InternalKim.g:8567:7: ( (lv_type_5_0= ruleCONCEPT_TYPE ) )
                                    // InternalKim.g:8568:8: (lv_type_5_0= ruleCONCEPT_TYPE )
                                    {
                                    // InternalKim.g:8568:8: (lv_type_5_0= ruleCONCEPT_TYPE )
                                    // InternalKim.g:8569:9: lv_type_5_0= ruleCONCEPT_TYPE
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getConceptReferenceAccess().getTypeCONCEPT_TYPEParserRuleCall_3_1_0_1_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_116);
                                    lv_type_5_0=ruleCONCEPT_TYPE();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      									}
                                      									set(
                                      										current,
                                      										"type",
                                      										lv_type_5_0,
                                      										"org.integratedmodelling.kim.Kim.CONCEPT_TYPE");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:8587:7: (otherlv_6= 'extends' ( (lv_extends_7_0= ruleConcept ) ) )
                                    {
                                    // InternalKim.g:8587:7: (otherlv_6= 'extends' ( (lv_extends_7_0= ruleConcept ) ) )
                                    // InternalKim.g:8588:8: otherlv_6= 'extends' ( (lv_extends_7_0= ruleConcept ) )
                                    {
                                    otherlv_6=(Token)match(input,111,FOLLOW_23); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_6, grammarAccess.getConceptReferenceAccess().getExtendsKeyword_3_1_0_1_1_0());
                                      							
                                    }
                                    // InternalKim.g:8592:8: ( (lv_extends_7_0= ruleConcept ) )
                                    // InternalKim.g:8593:9: (lv_extends_7_0= ruleConcept )
                                    {
                                    // InternalKim.g:8593:9: (lv_extends_7_0= ruleConcept )
                                    // InternalKim.g:8594:10: lv_extends_7_0= ruleConcept
                                    {
                                    if ( state.backtracking==0 ) {

                                      										newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_3_1_0_1_1_1_0());
                                      									
                                    }
                                    pushFollow(FOLLOW_116);
                                    lv_extends_7_0=ruleConcept();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      										}
                                      										set(
                                      											current,
                                      											"extends",
                                      											lv_extends_7_0,
                                      											"org.integratedmodelling.kim.Kim.Concept");
                                      										afterParserOrEnumRuleCall();
                                      									
                                    }

                                    }


                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:8615:5: ( ( (lv_name_8_0= 'inherent' ) ) ( ( (lv_type_9_0= ruleCONCEPT_TYPE ) ) | (otherlv_10= 'extends' ( (lv_extends_11_0= ruleConcept ) ) ) ) )
                            {
                            // InternalKim.g:8615:5: ( ( (lv_name_8_0= 'inherent' ) ) ( ( (lv_type_9_0= ruleCONCEPT_TYPE ) ) | (otherlv_10= 'extends' ( (lv_extends_11_0= ruleConcept ) ) ) ) )
                            // InternalKim.g:8616:6: ( (lv_name_8_0= 'inherent' ) ) ( ( (lv_type_9_0= ruleCONCEPT_TYPE ) ) | (otherlv_10= 'extends' ( (lv_extends_11_0= ruleConcept ) ) ) )
                            {
                            // InternalKim.g:8616:6: ( (lv_name_8_0= 'inherent' ) )
                            // InternalKim.g:8617:7: (lv_name_8_0= 'inherent' )
                            {
                            // InternalKim.g:8617:7: (lv_name_8_0= 'inherent' )
                            // InternalKim.g:8618:8: lv_name_8_0= 'inherent'
                            {
                            lv_name_8_0=(Token)match(input,134,FOLLOW_115); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_8_0, grammarAccess.getConceptReferenceAccess().getNameInherentKeyword_3_1_1_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_8_0, "inherent");
                              							
                            }

                            }


                            }

                            // InternalKim.g:8630:6: ( ( (lv_type_9_0= ruleCONCEPT_TYPE ) ) | (otherlv_10= 'extends' ( (lv_extends_11_0= ruleConcept ) ) ) )
                            int alt193=2;
                            int LA193_0 = input.LA(1);

                            if ( (LA193_0==96||LA193_0==163||(LA193_0>=170 && LA193_0<=171)||LA193_0==193||(LA193_0>=213 && LA193_0<=215)||(LA193_0>=218 && LA193_0<=247)) ) {
                                alt193=1;
                            }
                            else if ( (LA193_0==111) ) {
                                alt193=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 193, 0, input);

                                throw nvae;
                            }
                            switch (alt193) {
                                case 1 :
                                    // InternalKim.g:8631:7: ( (lv_type_9_0= ruleCONCEPT_TYPE ) )
                                    {
                                    // InternalKim.g:8631:7: ( (lv_type_9_0= ruleCONCEPT_TYPE ) )
                                    // InternalKim.g:8632:8: (lv_type_9_0= ruleCONCEPT_TYPE )
                                    {
                                    // InternalKim.g:8632:8: (lv_type_9_0= ruleCONCEPT_TYPE )
                                    // InternalKim.g:8633:9: lv_type_9_0= ruleCONCEPT_TYPE
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getConceptReferenceAccess().getTypeCONCEPT_TYPEParserRuleCall_3_1_1_1_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_116);
                                    lv_type_9_0=ruleCONCEPT_TYPE();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      									}
                                      									set(
                                      										current,
                                      										"type",
                                      										lv_type_9_0,
                                      										"org.integratedmodelling.kim.Kim.CONCEPT_TYPE");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:8651:7: (otherlv_10= 'extends' ( (lv_extends_11_0= ruleConcept ) ) )
                                    {
                                    // InternalKim.g:8651:7: (otherlv_10= 'extends' ( (lv_extends_11_0= ruleConcept ) ) )
                                    // InternalKim.g:8652:8: otherlv_10= 'extends' ( (lv_extends_11_0= ruleConcept ) )
                                    {
                                    otherlv_10=(Token)match(input,111,FOLLOW_23); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_10, grammarAccess.getConceptReferenceAccess().getExtendsKeyword_3_1_1_1_1_0());
                                      							
                                    }
                                    // InternalKim.g:8656:8: ( (lv_extends_11_0= ruleConcept ) )
                                    // InternalKim.g:8657:9: (lv_extends_11_0= ruleConcept )
                                    {
                                    // InternalKim.g:8657:9: (lv_extends_11_0= ruleConcept )
                                    // InternalKim.g:8658:10: lv_extends_11_0= ruleConcept
                                    {
                                    if ( state.backtracking==0 ) {

                                      										newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_3_1_1_1_1_1_0());
                                      									
                                    }
                                    pushFollow(FOLLOW_116);
                                    lv_extends_11_0=ruleConcept();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      										}
                                      										set(
                                      											current,
                                      											"extends",
                                      											lv_extends_11_0,
                                      											"org.integratedmodelling.kim.Kim.Concept");
                                      										afterParserOrEnumRuleCall();
                                      									
                                    }

                                    }


                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 3 :
                            // InternalKim.g:8679:5: ( ( (lv_name_12_0= 'compresent' ) ) ( ( (lv_type_13_0= ruleCONCEPT_TYPE ) ) | (otherlv_14= 'extends' ( (lv_extends_15_0= ruleConcept ) ) ) ) )
                            {
                            // InternalKim.g:8679:5: ( ( (lv_name_12_0= 'compresent' ) ) ( ( (lv_type_13_0= ruleCONCEPT_TYPE ) ) | (otherlv_14= 'extends' ( (lv_extends_15_0= ruleConcept ) ) ) ) )
                            // InternalKim.g:8680:6: ( (lv_name_12_0= 'compresent' ) ) ( ( (lv_type_13_0= ruleCONCEPT_TYPE ) ) | (otherlv_14= 'extends' ( (lv_extends_15_0= ruleConcept ) ) ) )
                            {
                            // InternalKim.g:8680:6: ( (lv_name_12_0= 'compresent' ) )
                            // InternalKim.g:8681:7: (lv_name_12_0= 'compresent' )
                            {
                            // InternalKim.g:8681:7: (lv_name_12_0= 'compresent' )
                            // InternalKim.g:8682:8: lv_name_12_0= 'compresent'
                            {
                            lv_name_12_0=(Token)match(input,135,FOLLOW_115); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_12_0, grammarAccess.getConceptReferenceAccess().getNameCompresentKeyword_3_1_2_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_12_0, "compresent");
                              							
                            }

                            }


                            }

                            // InternalKim.g:8694:6: ( ( (lv_type_13_0= ruleCONCEPT_TYPE ) ) | (otherlv_14= 'extends' ( (lv_extends_15_0= ruleConcept ) ) ) )
                            int alt194=2;
                            int LA194_0 = input.LA(1);

                            if ( (LA194_0==96||LA194_0==163||(LA194_0>=170 && LA194_0<=171)||LA194_0==193||(LA194_0>=213 && LA194_0<=215)||(LA194_0>=218 && LA194_0<=247)) ) {
                                alt194=1;
                            }
                            else if ( (LA194_0==111) ) {
                                alt194=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 194, 0, input);

                                throw nvae;
                            }
                            switch (alt194) {
                                case 1 :
                                    // InternalKim.g:8695:7: ( (lv_type_13_0= ruleCONCEPT_TYPE ) )
                                    {
                                    // InternalKim.g:8695:7: ( (lv_type_13_0= ruleCONCEPT_TYPE ) )
                                    // InternalKim.g:8696:8: (lv_type_13_0= ruleCONCEPT_TYPE )
                                    {
                                    // InternalKim.g:8696:8: (lv_type_13_0= ruleCONCEPT_TYPE )
                                    // InternalKim.g:8697:9: lv_type_13_0= ruleCONCEPT_TYPE
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getConceptReferenceAccess().getTypeCONCEPT_TYPEParserRuleCall_3_1_2_1_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_116);
                                    lv_type_13_0=ruleCONCEPT_TYPE();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      									}
                                      									set(
                                      										current,
                                      										"type",
                                      										lv_type_13_0,
                                      										"org.integratedmodelling.kim.Kim.CONCEPT_TYPE");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:8715:7: (otherlv_14= 'extends' ( (lv_extends_15_0= ruleConcept ) ) )
                                    {
                                    // InternalKim.g:8715:7: (otherlv_14= 'extends' ( (lv_extends_15_0= ruleConcept ) ) )
                                    // InternalKim.g:8716:8: otherlv_14= 'extends' ( (lv_extends_15_0= ruleConcept ) )
                                    {
                                    otherlv_14=(Token)match(input,111,FOLLOW_23); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_14, grammarAccess.getConceptReferenceAccess().getExtendsKeyword_3_1_2_1_1_0());
                                      							
                                    }
                                    // InternalKim.g:8720:8: ( (lv_extends_15_0= ruleConcept ) )
                                    // InternalKim.g:8721:9: (lv_extends_15_0= ruleConcept )
                                    {
                                    // InternalKim.g:8721:9: (lv_extends_15_0= ruleConcept )
                                    // InternalKim.g:8722:10: lv_extends_15_0= ruleConcept
                                    {
                                    if ( state.backtracking==0 ) {

                                      										newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_3_1_2_1_1_1_0());
                                      									
                                    }
                                    pushFollow(FOLLOW_116);
                                    lv_extends_15_0=ruleConcept();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      										}
                                      										set(
                                      											current,
                                      											"extends",
                                      											lv_extends_15_0,
                                      											"org.integratedmodelling.kim.Kim.Concept");
                                      										afterParserOrEnumRuleCall();
                                      									
                                    }

                                    }


                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 4 :
                            // InternalKim.g:8743:5: ( ( (lv_name_16_0= 'adjacent' ) ) ( ( (lv_type_17_0= ruleCONCEPT_TYPE ) ) | (otherlv_18= 'extends' ( (lv_extends_19_0= ruleConcept ) ) ) ) )
                            {
                            // InternalKim.g:8743:5: ( ( (lv_name_16_0= 'adjacent' ) ) ( ( (lv_type_17_0= ruleCONCEPT_TYPE ) ) | (otherlv_18= 'extends' ( (lv_extends_19_0= ruleConcept ) ) ) ) )
                            // InternalKim.g:8744:6: ( (lv_name_16_0= 'adjacent' ) ) ( ( (lv_type_17_0= ruleCONCEPT_TYPE ) ) | (otherlv_18= 'extends' ( (lv_extends_19_0= ruleConcept ) ) ) )
                            {
                            // InternalKim.g:8744:6: ( (lv_name_16_0= 'adjacent' ) )
                            // InternalKim.g:8745:7: (lv_name_16_0= 'adjacent' )
                            {
                            // InternalKim.g:8745:7: (lv_name_16_0= 'adjacent' )
                            // InternalKim.g:8746:8: lv_name_16_0= 'adjacent'
                            {
                            lv_name_16_0=(Token)match(input,125,FOLLOW_115); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_16_0, grammarAccess.getConceptReferenceAccess().getNameAdjacentKeyword_3_1_3_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_16_0, "adjacent");
                              							
                            }

                            }


                            }

                            // InternalKim.g:8758:6: ( ( (lv_type_17_0= ruleCONCEPT_TYPE ) ) | (otherlv_18= 'extends' ( (lv_extends_19_0= ruleConcept ) ) ) )
                            int alt195=2;
                            int LA195_0 = input.LA(1);

                            if ( (LA195_0==96||LA195_0==163||(LA195_0>=170 && LA195_0<=171)||LA195_0==193||(LA195_0>=213 && LA195_0<=215)||(LA195_0>=218 && LA195_0<=247)) ) {
                                alt195=1;
                            }
                            else if ( (LA195_0==111) ) {
                                alt195=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 195, 0, input);

                                throw nvae;
                            }
                            switch (alt195) {
                                case 1 :
                                    // InternalKim.g:8759:7: ( (lv_type_17_0= ruleCONCEPT_TYPE ) )
                                    {
                                    // InternalKim.g:8759:7: ( (lv_type_17_0= ruleCONCEPT_TYPE ) )
                                    // InternalKim.g:8760:8: (lv_type_17_0= ruleCONCEPT_TYPE )
                                    {
                                    // InternalKim.g:8760:8: (lv_type_17_0= ruleCONCEPT_TYPE )
                                    // InternalKim.g:8761:9: lv_type_17_0= ruleCONCEPT_TYPE
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getConceptReferenceAccess().getTypeCONCEPT_TYPEParserRuleCall_3_1_3_1_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_116);
                                    lv_type_17_0=ruleCONCEPT_TYPE();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      									}
                                      									set(
                                      										current,
                                      										"type",
                                      										lv_type_17_0,
                                      										"org.integratedmodelling.kim.Kim.CONCEPT_TYPE");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:8779:7: (otherlv_18= 'extends' ( (lv_extends_19_0= ruleConcept ) ) )
                                    {
                                    // InternalKim.g:8779:7: (otherlv_18= 'extends' ( (lv_extends_19_0= ruleConcept ) ) )
                                    // InternalKim.g:8780:8: otherlv_18= 'extends' ( (lv_extends_19_0= ruleConcept ) )
                                    {
                                    otherlv_18=(Token)match(input,111,FOLLOW_23); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_18, grammarAccess.getConceptReferenceAccess().getExtendsKeyword_3_1_3_1_1_0());
                                      							
                                    }
                                    // InternalKim.g:8784:8: ( (lv_extends_19_0= ruleConcept ) )
                                    // InternalKim.g:8785:9: (lv_extends_19_0= ruleConcept )
                                    {
                                    // InternalKim.g:8785:9: (lv_extends_19_0= ruleConcept )
                                    // InternalKim.g:8786:10: lv_extends_19_0= ruleConcept
                                    {
                                    if ( state.backtracking==0 ) {

                                      										newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_3_1_3_1_1_1_0());
                                      									
                                    }
                                    pushFollow(FOLLOW_116);
                                    lv_extends_19_0=ruleConcept();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      										}
                                      										set(
                                      											current,
                                      											"extends",
                                      											lv_extends_19_0,
                                      											"org.integratedmodelling.kim.Kim.Concept");
                                      										afterParserOrEnumRuleCall();
                                      									
                                    }

                                    }


                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 5 :
                            // InternalKim.g:8807:5: ( ( (lv_name_20_0= 'container' ) ) ( ( (lv_type_21_0= ruleCONCEPT_TYPE ) ) | (otherlv_22= 'extends' ( (lv_extends_23_0= ruleConcept ) ) ) ) )
                            {
                            // InternalKim.g:8807:5: ( ( (lv_name_20_0= 'container' ) ) ( ( (lv_type_21_0= ruleCONCEPT_TYPE ) ) | (otherlv_22= 'extends' ( (lv_extends_23_0= ruleConcept ) ) ) ) )
                            // InternalKim.g:8808:6: ( (lv_name_20_0= 'container' ) ) ( ( (lv_type_21_0= ruleCONCEPT_TYPE ) ) | (otherlv_22= 'extends' ( (lv_extends_23_0= ruleConcept ) ) ) )
                            {
                            // InternalKim.g:8808:6: ( (lv_name_20_0= 'container' ) )
                            // InternalKim.g:8809:7: (lv_name_20_0= 'container' )
                            {
                            // InternalKim.g:8809:7: (lv_name_20_0= 'container' )
                            // InternalKim.g:8810:8: lv_name_20_0= 'container'
                            {
                            lv_name_20_0=(Token)match(input,136,FOLLOW_115); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_20_0, grammarAccess.getConceptReferenceAccess().getNameContainerKeyword_3_1_4_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_20_0, "container");
                              							
                            }

                            }


                            }

                            // InternalKim.g:8822:6: ( ( (lv_type_21_0= ruleCONCEPT_TYPE ) ) | (otherlv_22= 'extends' ( (lv_extends_23_0= ruleConcept ) ) ) )
                            int alt196=2;
                            int LA196_0 = input.LA(1);

                            if ( (LA196_0==96||LA196_0==163||(LA196_0>=170 && LA196_0<=171)||LA196_0==193||(LA196_0>=213 && LA196_0<=215)||(LA196_0>=218 && LA196_0<=247)) ) {
                                alt196=1;
                            }
                            else if ( (LA196_0==111) ) {
                                alt196=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 196, 0, input);

                                throw nvae;
                            }
                            switch (alt196) {
                                case 1 :
                                    // InternalKim.g:8823:7: ( (lv_type_21_0= ruleCONCEPT_TYPE ) )
                                    {
                                    // InternalKim.g:8823:7: ( (lv_type_21_0= ruleCONCEPT_TYPE ) )
                                    // InternalKim.g:8824:8: (lv_type_21_0= ruleCONCEPT_TYPE )
                                    {
                                    // InternalKim.g:8824:8: (lv_type_21_0= ruleCONCEPT_TYPE )
                                    // InternalKim.g:8825:9: lv_type_21_0= ruleCONCEPT_TYPE
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getConceptReferenceAccess().getTypeCONCEPT_TYPEParserRuleCall_3_1_4_1_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_116);
                                    lv_type_21_0=ruleCONCEPT_TYPE();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      									}
                                      									set(
                                      										current,
                                      										"type",
                                      										lv_type_21_0,
                                      										"org.integratedmodelling.kim.Kim.CONCEPT_TYPE");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:8843:7: (otherlv_22= 'extends' ( (lv_extends_23_0= ruleConcept ) ) )
                                    {
                                    // InternalKim.g:8843:7: (otherlv_22= 'extends' ( (lv_extends_23_0= ruleConcept ) ) )
                                    // InternalKim.g:8844:8: otherlv_22= 'extends' ( (lv_extends_23_0= ruleConcept ) )
                                    {
                                    otherlv_22=(Token)match(input,111,FOLLOW_23); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_22, grammarAccess.getConceptReferenceAccess().getExtendsKeyword_3_1_4_1_1_0());
                                      							
                                    }
                                    // InternalKim.g:8848:8: ( (lv_extends_23_0= ruleConcept ) )
                                    // InternalKim.g:8849:9: (lv_extends_23_0= ruleConcept )
                                    {
                                    // InternalKim.g:8849:9: (lv_extends_23_0= ruleConcept )
                                    // InternalKim.g:8850:10: lv_extends_23_0= ruleConcept
                                    {
                                    if ( state.backtracking==0 ) {

                                      										newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_3_1_4_1_1_1_0());
                                      									
                                    }
                                    pushFollow(FOLLOW_116);
                                    lv_extends_23_0=ruleConcept();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      										}
                                      										set(
                                      											current,
                                      											"extends",
                                      											lv_extends_23_0,
                                      											"org.integratedmodelling.kim.Kim.Concept");
                                      										afterParserOrEnumRuleCall();
                                      									
                                    }

                                    }


                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 6 :
                            // InternalKim.g:8871:5: ( ( (lv_name_24_0= 'contained' ) ) ( ( (lv_type_25_0= ruleCONCEPT_TYPE ) ) | (otherlv_26= 'extends' ( (lv_extends_27_0= ruleConcept ) ) ) ) )
                            {
                            // InternalKim.g:8871:5: ( ( (lv_name_24_0= 'contained' ) ) ( ( (lv_type_25_0= ruleCONCEPT_TYPE ) ) | (otherlv_26= 'extends' ( (lv_extends_27_0= ruleConcept ) ) ) ) )
                            // InternalKim.g:8872:6: ( (lv_name_24_0= 'contained' ) ) ( ( (lv_type_25_0= ruleCONCEPT_TYPE ) ) | (otherlv_26= 'extends' ( (lv_extends_27_0= ruleConcept ) ) ) )
                            {
                            // InternalKim.g:8872:6: ( (lv_name_24_0= 'contained' ) )
                            // InternalKim.g:8873:7: (lv_name_24_0= 'contained' )
                            {
                            // InternalKim.g:8873:7: (lv_name_24_0= 'contained' )
                            // InternalKim.g:8874:8: lv_name_24_0= 'contained'
                            {
                            lv_name_24_0=(Token)match(input,126,FOLLOW_115); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_24_0, grammarAccess.getConceptReferenceAccess().getNameContainedKeyword_3_1_5_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_24_0, "contained");
                              							
                            }

                            }


                            }

                            // InternalKim.g:8886:6: ( ( (lv_type_25_0= ruleCONCEPT_TYPE ) ) | (otherlv_26= 'extends' ( (lv_extends_27_0= ruleConcept ) ) ) )
                            int alt197=2;
                            int LA197_0 = input.LA(1);

                            if ( (LA197_0==96||LA197_0==163||(LA197_0>=170 && LA197_0<=171)||LA197_0==193||(LA197_0>=213 && LA197_0<=215)||(LA197_0>=218 && LA197_0<=247)) ) {
                                alt197=1;
                            }
                            else if ( (LA197_0==111) ) {
                                alt197=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 197, 0, input);

                                throw nvae;
                            }
                            switch (alt197) {
                                case 1 :
                                    // InternalKim.g:8887:7: ( (lv_type_25_0= ruleCONCEPT_TYPE ) )
                                    {
                                    // InternalKim.g:8887:7: ( (lv_type_25_0= ruleCONCEPT_TYPE ) )
                                    // InternalKim.g:8888:8: (lv_type_25_0= ruleCONCEPT_TYPE )
                                    {
                                    // InternalKim.g:8888:8: (lv_type_25_0= ruleCONCEPT_TYPE )
                                    // InternalKim.g:8889:9: lv_type_25_0= ruleCONCEPT_TYPE
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getConceptReferenceAccess().getTypeCONCEPT_TYPEParserRuleCall_3_1_5_1_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_116);
                                    lv_type_25_0=ruleCONCEPT_TYPE();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      									}
                                      									set(
                                      										current,
                                      										"type",
                                      										lv_type_25_0,
                                      										"org.integratedmodelling.kim.Kim.CONCEPT_TYPE");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:8907:7: (otherlv_26= 'extends' ( (lv_extends_27_0= ruleConcept ) ) )
                                    {
                                    // InternalKim.g:8907:7: (otherlv_26= 'extends' ( (lv_extends_27_0= ruleConcept ) ) )
                                    // InternalKim.g:8908:8: otherlv_26= 'extends' ( (lv_extends_27_0= ruleConcept ) )
                                    {
                                    otherlv_26=(Token)match(input,111,FOLLOW_23); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_26, grammarAccess.getConceptReferenceAccess().getExtendsKeyword_3_1_5_1_1_0());
                                      							
                                    }
                                    // InternalKim.g:8912:8: ( (lv_extends_27_0= ruleConcept ) )
                                    // InternalKim.g:8913:9: (lv_extends_27_0= ruleConcept )
                                    {
                                    // InternalKim.g:8913:9: (lv_extends_27_0= ruleConcept )
                                    // InternalKim.g:8914:10: lv_extends_27_0= ruleConcept
                                    {
                                    if ( state.backtracking==0 ) {

                                      										newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_3_1_5_1_1_1_0());
                                      									
                                    }
                                    pushFollow(FOLLOW_116);
                                    lv_extends_27_0=ruleConcept();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      										}
                                      										set(
                                      											current,
                                      											"extends",
                                      											lv_extends_27_0,
                                      											"org.integratedmodelling.kim.Kim.Concept");
                                      										afterParserOrEnumRuleCall();
                                      									
                                    }

                                    }


                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 7 :
                            // InternalKim.g:8935:5: ( ( (lv_name_28_0= 'purpose' ) ) ( ( (lv_type_29_0= ruleCONCEPT_TYPE ) ) | (otherlv_30= 'extends' ( (lv_extends_31_0= ruleConcept ) ) ) ) )
                            {
                            // InternalKim.g:8935:5: ( ( (lv_name_28_0= 'purpose' ) ) ( ( (lv_type_29_0= ruleCONCEPT_TYPE ) ) | (otherlv_30= 'extends' ( (lv_extends_31_0= ruleConcept ) ) ) ) )
                            // InternalKim.g:8936:6: ( (lv_name_28_0= 'purpose' ) ) ( ( (lv_type_29_0= ruleCONCEPT_TYPE ) ) | (otherlv_30= 'extends' ( (lv_extends_31_0= ruleConcept ) ) ) )
                            {
                            // InternalKim.g:8936:6: ( (lv_name_28_0= 'purpose' ) )
                            // InternalKim.g:8937:7: (lv_name_28_0= 'purpose' )
                            {
                            // InternalKim.g:8937:7: (lv_name_28_0= 'purpose' )
                            // InternalKim.g:8938:8: lv_name_28_0= 'purpose'
                            {
                            lv_name_28_0=(Token)match(input,137,FOLLOW_115); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_28_0, grammarAccess.getConceptReferenceAccess().getNamePurposeKeyword_3_1_6_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_28_0, "purpose");
                              							
                            }

                            }


                            }

                            // InternalKim.g:8950:6: ( ( (lv_type_29_0= ruleCONCEPT_TYPE ) ) | (otherlv_30= 'extends' ( (lv_extends_31_0= ruleConcept ) ) ) )
                            int alt198=2;
                            int LA198_0 = input.LA(1);

                            if ( (LA198_0==96||LA198_0==163||(LA198_0>=170 && LA198_0<=171)||LA198_0==193||(LA198_0>=213 && LA198_0<=215)||(LA198_0>=218 && LA198_0<=247)) ) {
                                alt198=1;
                            }
                            else if ( (LA198_0==111) ) {
                                alt198=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 198, 0, input);

                                throw nvae;
                            }
                            switch (alt198) {
                                case 1 :
                                    // InternalKim.g:8951:7: ( (lv_type_29_0= ruleCONCEPT_TYPE ) )
                                    {
                                    // InternalKim.g:8951:7: ( (lv_type_29_0= ruleCONCEPT_TYPE ) )
                                    // InternalKim.g:8952:8: (lv_type_29_0= ruleCONCEPT_TYPE )
                                    {
                                    // InternalKim.g:8952:8: (lv_type_29_0= ruleCONCEPT_TYPE )
                                    // InternalKim.g:8953:9: lv_type_29_0= ruleCONCEPT_TYPE
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getConceptReferenceAccess().getTypeCONCEPT_TYPEParserRuleCall_3_1_6_1_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_116);
                                    lv_type_29_0=ruleCONCEPT_TYPE();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      									}
                                      									set(
                                      										current,
                                      										"type",
                                      										lv_type_29_0,
                                      										"org.integratedmodelling.kim.Kim.CONCEPT_TYPE");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:8971:7: (otherlv_30= 'extends' ( (lv_extends_31_0= ruleConcept ) ) )
                                    {
                                    // InternalKim.g:8971:7: (otherlv_30= 'extends' ( (lv_extends_31_0= ruleConcept ) ) )
                                    // InternalKim.g:8972:8: otherlv_30= 'extends' ( (lv_extends_31_0= ruleConcept ) )
                                    {
                                    otherlv_30=(Token)match(input,111,FOLLOW_23); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_30, grammarAccess.getConceptReferenceAccess().getExtendsKeyword_3_1_6_1_1_0());
                                      							
                                    }
                                    // InternalKim.g:8976:8: ( (lv_extends_31_0= ruleConcept ) )
                                    // InternalKim.g:8977:9: (lv_extends_31_0= ruleConcept )
                                    {
                                    // InternalKim.g:8977:9: (lv_extends_31_0= ruleConcept )
                                    // InternalKim.g:8978:10: lv_extends_31_0= ruleConcept
                                    {
                                    if ( state.backtracking==0 ) {

                                      										newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_3_1_6_1_1_1_0());
                                      									
                                    }
                                    pushFollow(FOLLOW_116);
                                    lv_extends_31_0=ruleConcept();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      										}
                                      										set(
                                      											current,
                                      											"extends",
                                      											lv_extends_31_0,
                                      											"org.integratedmodelling.kim.Kim.Concept");
                                      										afterParserOrEnumRuleCall();
                                      									
                                    }

                                    }


                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 8 :
                            // InternalKim.g:8999:5: ( ( (lv_name_32_0= 'causant' ) ) ( ( (lv_type_33_0= ruleCONCEPT_TYPE ) ) | (otherlv_34= 'extends' ( (lv_extends_35_0= ruleConcept ) ) ) ) )
                            {
                            // InternalKim.g:8999:5: ( ( (lv_name_32_0= 'causant' ) ) ( ( (lv_type_33_0= ruleCONCEPT_TYPE ) ) | (otherlv_34= 'extends' ( (lv_extends_35_0= ruleConcept ) ) ) ) )
                            // InternalKim.g:9000:6: ( (lv_name_32_0= 'causant' ) ) ( ( (lv_type_33_0= ruleCONCEPT_TYPE ) ) | (otherlv_34= 'extends' ( (lv_extends_35_0= ruleConcept ) ) ) )
                            {
                            // InternalKim.g:9000:6: ( (lv_name_32_0= 'causant' ) )
                            // InternalKim.g:9001:7: (lv_name_32_0= 'causant' )
                            {
                            // InternalKim.g:9001:7: (lv_name_32_0= 'causant' )
                            // InternalKim.g:9002:8: lv_name_32_0= 'causant'
                            {
                            lv_name_32_0=(Token)match(input,138,FOLLOW_115); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_32_0, grammarAccess.getConceptReferenceAccess().getNameCausantKeyword_3_1_7_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_32_0, "causant");
                              							
                            }

                            }


                            }

                            // InternalKim.g:9014:6: ( ( (lv_type_33_0= ruleCONCEPT_TYPE ) ) | (otherlv_34= 'extends' ( (lv_extends_35_0= ruleConcept ) ) ) )
                            int alt199=2;
                            int LA199_0 = input.LA(1);

                            if ( (LA199_0==96||LA199_0==163||(LA199_0>=170 && LA199_0<=171)||LA199_0==193||(LA199_0>=213 && LA199_0<=215)||(LA199_0>=218 && LA199_0<=247)) ) {
                                alt199=1;
                            }
                            else if ( (LA199_0==111) ) {
                                alt199=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 199, 0, input);

                                throw nvae;
                            }
                            switch (alt199) {
                                case 1 :
                                    // InternalKim.g:9015:7: ( (lv_type_33_0= ruleCONCEPT_TYPE ) )
                                    {
                                    // InternalKim.g:9015:7: ( (lv_type_33_0= ruleCONCEPT_TYPE ) )
                                    // InternalKim.g:9016:8: (lv_type_33_0= ruleCONCEPT_TYPE )
                                    {
                                    // InternalKim.g:9016:8: (lv_type_33_0= ruleCONCEPT_TYPE )
                                    // InternalKim.g:9017:9: lv_type_33_0= ruleCONCEPT_TYPE
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getConceptReferenceAccess().getTypeCONCEPT_TYPEParserRuleCall_3_1_7_1_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_116);
                                    lv_type_33_0=ruleCONCEPT_TYPE();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      									}
                                      									set(
                                      										current,
                                      										"type",
                                      										lv_type_33_0,
                                      										"org.integratedmodelling.kim.Kim.CONCEPT_TYPE");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:9035:7: (otherlv_34= 'extends' ( (lv_extends_35_0= ruleConcept ) ) )
                                    {
                                    // InternalKim.g:9035:7: (otherlv_34= 'extends' ( (lv_extends_35_0= ruleConcept ) ) )
                                    // InternalKim.g:9036:8: otherlv_34= 'extends' ( (lv_extends_35_0= ruleConcept ) )
                                    {
                                    otherlv_34=(Token)match(input,111,FOLLOW_23); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_34, grammarAccess.getConceptReferenceAccess().getExtendsKeyword_3_1_7_1_1_0());
                                      							
                                    }
                                    // InternalKim.g:9040:8: ( (lv_extends_35_0= ruleConcept ) )
                                    // InternalKim.g:9041:9: (lv_extends_35_0= ruleConcept )
                                    {
                                    // InternalKim.g:9041:9: (lv_extends_35_0= ruleConcept )
                                    // InternalKim.g:9042:10: lv_extends_35_0= ruleConcept
                                    {
                                    if ( state.backtracking==0 ) {

                                      										newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_3_1_7_1_1_1_0());
                                      									
                                    }
                                    pushFollow(FOLLOW_116);
                                    lv_extends_35_0=ruleConcept();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      										}
                                      										set(
                                      											current,
                                      											"extends",
                                      											lv_extends_35_0,
                                      											"org.integratedmodelling.kim.Kim.Concept");
                                      										afterParserOrEnumRuleCall();
                                      									
                                    }

                                    }


                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 9 :
                            // InternalKim.g:9063:5: ( ( (lv_name_36_0= 'caused' ) ) ( ( (lv_type_37_0= ruleCONCEPT_TYPE ) ) | (otherlv_38= 'extends' ( (lv_extends_39_0= ruleConcept ) ) ) ) )
                            {
                            // InternalKim.g:9063:5: ( ( (lv_name_36_0= 'caused' ) ) ( ( (lv_type_37_0= ruleCONCEPT_TYPE ) ) | (otherlv_38= 'extends' ( (lv_extends_39_0= ruleConcept ) ) ) ) )
                            // InternalKim.g:9064:6: ( (lv_name_36_0= 'caused' ) ) ( ( (lv_type_37_0= ruleCONCEPT_TYPE ) ) | (otherlv_38= 'extends' ( (lv_extends_39_0= ruleConcept ) ) ) )
                            {
                            // InternalKim.g:9064:6: ( (lv_name_36_0= 'caused' ) )
                            // InternalKim.g:9065:7: (lv_name_36_0= 'caused' )
                            {
                            // InternalKim.g:9065:7: (lv_name_36_0= 'caused' )
                            // InternalKim.g:9066:8: lv_name_36_0= 'caused'
                            {
                            lv_name_36_0=(Token)match(input,124,FOLLOW_115); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_36_0, grammarAccess.getConceptReferenceAccess().getNameCausedKeyword_3_1_8_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_36_0, "caused");
                              							
                            }

                            }


                            }

                            // InternalKim.g:9078:6: ( ( (lv_type_37_0= ruleCONCEPT_TYPE ) ) | (otherlv_38= 'extends' ( (lv_extends_39_0= ruleConcept ) ) ) )
                            int alt200=2;
                            int LA200_0 = input.LA(1);

                            if ( (LA200_0==96||LA200_0==163||(LA200_0>=170 && LA200_0<=171)||LA200_0==193||(LA200_0>=213 && LA200_0<=215)||(LA200_0>=218 && LA200_0<=247)) ) {
                                alt200=1;
                            }
                            else if ( (LA200_0==111) ) {
                                alt200=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 200, 0, input);

                                throw nvae;
                            }
                            switch (alt200) {
                                case 1 :
                                    // InternalKim.g:9079:7: ( (lv_type_37_0= ruleCONCEPT_TYPE ) )
                                    {
                                    // InternalKim.g:9079:7: ( (lv_type_37_0= ruleCONCEPT_TYPE ) )
                                    // InternalKim.g:9080:8: (lv_type_37_0= ruleCONCEPT_TYPE )
                                    {
                                    // InternalKim.g:9080:8: (lv_type_37_0= ruleCONCEPT_TYPE )
                                    // InternalKim.g:9081:9: lv_type_37_0= ruleCONCEPT_TYPE
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getConceptReferenceAccess().getTypeCONCEPT_TYPEParserRuleCall_3_1_8_1_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_116);
                                    lv_type_37_0=ruleCONCEPT_TYPE();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      									}
                                      									set(
                                      										current,
                                      										"type",
                                      										lv_type_37_0,
                                      										"org.integratedmodelling.kim.Kim.CONCEPT_TYPE");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:9099:7: (otherlv_38= 'extends' ( (lv_extends_39_0= ruleConcept ) ) )
                                    {
                                    // InternalKim.g:9099:7: (otherlv_38= 'extends' ( (lv_extends_39_0= ruleConcept ) ) )
                                    // InternalKim.g:9100:8: otherlv_38= 'extends' ( (lv_extends_39_0= ruleConcept ) )
                                    {
                                    otherlv_38=(Token)match(input,111,FOLLOW_23); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_38, grammarAccess.getConceptReferenceAccess().getExtendsKeyword_3_1_8_1_1_0());
                                      							
                                    }
                                    // InternalKim.g:9104:8: ( (lv_extends_39_0= ruleConcept ) )
                                    // InternalKim.g:9105:9: (lv_extends_39_0= ruleConcept )
                                    {
                                    // InternalKim.g:9105:9: (lv_extends_39_0= ruleConcept )
                                    // InternalKim.g:9106:10: lv_extends_39_0= ruleConcept
                                    {
                                    if ( state.backtracking==0 ) {

                                      										newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_3_1_8_1_1_1_0());
                                      									
                                    }
                                    pushFollow(FOLLOW_116);
                                    lv_extends_39_0=ruleConcept();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      										}
                                      										set(
                                      											current,
                                      											"extends",
                                      											lv_extends_39_0,
                                      											"org.integratedmodelling.kim.Kim.Concept");
                                      										afterParserOrEnumRuleCall();
                                      									
                                    }

                                    }


                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 10 :
                            // InternalKim.g:9127:5: ( ( (lv_name_40_0= 'cooccurrent' ) ) ( ( (lv_type_41_0= ruleCONCEPT_TYPE ) ) | (otherlv_42= 'extends' ( (lv_extends_43_0= ruleConcept ) ) ) ) )
                            {
                            // InternalKim.g:9127:5: ( ( (lv_name_40_0= 'cooccurrent' ) ) ( ( (lv_type_41_0= ruleCONCEPT_TYPE ) ) | (otherlv_42= 'extends' ( (lv_extends_43_0= ruleConcept ) ) ) ) )
                            // InternalKim.g:9128:6: ( (lv_name_40_0= 'cooccurrent' ) ) ( ( (lv_type_41_0= ruleCONCEPT_TYPE ) ) | (otherlv_42= 'extends' ( (lv_extends_43_0= ruleConcept ) ) ) )
                            {
                            // InternalKim.g:9128:6: ( (lv_name_40_0= 'cooccurrent' ) )
                            // InternalKim.g:9129:7: (lv_name_40_0= 'cooccurrent' )
                            {
                            // InternalKim.g:9129:7: (lv_name_40_0= 'cooccurrent' )
                            // InternalKim.g:9130:8: lv_name_40_0= 'cooccurrent'
                            {
                            lv_name_40_0=(Token)match(input,139,FOLLOW_115); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_40_0, grammarAccess.getConceptReferenceAccess().getNameCooccurrentKeyword_3_1_9_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_40_0, "cooccurrent");
                              							
                            }

                            }


                            }

                            // InternalKim.g:9142:6: ( ( (lv_type_41_0= ruleCONCEPT_TYPE ) ) | (otherlv_42= 'extends' ( (lv_extends_43_0= ruleConcept ) ) ) )
                            int alt201=2;
                            int LA201_0 = input.LA(1);

                            if ( (LA201_0==96||LA201_0==163||(LA201_0>=170 && LA201_0<=171)||LA201_0==193||(LA201_0>=213 && LA201_0<=215)||(LA201_0>=218 && LA201_0<=247)) ) {
                                alt201=1;
                            }
                            else if ( (LA201_0==111) ) {
                                alt201=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 201, 0, input);

                                throw nvae;
                            }
                            switch (alt201) {
                                case 1 :
                                    // InternalKim.g:9143:7: ( (lv_type_41_0= ruleCONCEPT_TYPE ) )
                                    {
                                    // InternalKim.g:9143:7: ( (lv_type_41_0= ruleCONCEPT_TYPE ) )
                                    // InternalKim.g:9144:8: (lv_type_41_0= ruleCONCEPT_TYPE )
                                    {
                                    // InternalKim.g:9144:8: (lv_type_41_0= ruleCONCEPT_TYPE )
                                    // InternalKim.g:9145:9: lv_type_41_0= ruleCONCEPT_TYPE
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getConceptReferenceAccess().getTypeCONCEPT_TYPEParserRuleCall_3_1_9_1_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_116);
                                    lv_type_41_0=ruleCONCEPT_TYPE();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      									}
                                      									set(
                                      										current,
                                      										"type",
                                      										lv_type_41_0,
                                      										"org.integratedmodelling.kim.Kim.CONCEPT_TYPE");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:9163:7: (otherlv_42= 'extends' ( (lv_extends_43_0= ruleConcept ) ) )
                                    {
                                    // InternalKim.g:9163:7: (otherlv_42= 'extends' ( (lv_extends_43_0= ruleConcept ) ) )
                                    // InternalKim.g:9164:8: otherlv_42= 'extends' ( (lv_extends_43_0= ruleConcept ) )
                                    {
                                    otherlv_42=(Token)match(input,111,FOLLOW_23); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_42, grammarAccess.getConceptReferenceAccess().getExtendsKeyword_3_1_9_1_1_0());
                                      							
                                    }
                                    // InternalKim.g:9168:8: ( (lv_extends_43_0= ruleConcept ) )
                                    // InternalKim.g:9169:9: (lv_extends_43_0= ruleConcept )
                                    {
                                    // InternalKim.g:9169:9: (lv_extends_43_0= ruleConcept )
                                    // InternalKim.g:9170:10: lv_extends_43_0= ruleConcept
                                    {
                                    if ( state.backtracking==0 ) {

                                      										newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_3_1_9_1_1_1_0());
                                      									
                                    }
                                    pushFollow(FOLLOW_116);
                                    lv_extends_43_0=ruleConcept();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      										}
                                      										set(
                                      											current,
                                      											"extends",
                                      											lv_extends_43_0,
                                      											"org.integratedmodelling.kim.Kim.Concept");
                                      										afterParserOrEnumRuleCall();
                                      									
                                    }

                                    }


                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:9191:4: ( (lv_template_44_0= '}' ) )
                    // InternalKim.g:9192:5: (lv_template_44_0= '}' )
                    {
                    // InternalKim.g:9192:5: (lv_template_44_0= '}' )
                    // InternalKim.g:9193:6: lv_template_44_0= '}'
                    {
                    lv_template_44_0=(Token)match(input,140,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_template_44_0, grammarAccess.getConceptReferenceAccess().getTemplateRightCurlyBracketKeyword_3_2_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptReferenceRule());
                      						}
                      						setWithLastConsumed(current, "template", true, "}");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConceptReference"


    // $ANTLR start "entryRuleOPERATOR_TARGET"
    // InternalKim.g:9210:1: entryRuleOPERATOR_TARGET returns [String current=null] : iv_ruleOPERATOR_TARGET= ruleOPERATOR_TARGET EOF ;
    public final String entryRuleOPERATOR_TARGET() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOPERATOR_TARGET = null;


        try {
            // InternalKim.g:9210:55: (iv_ruleOPERATOR_TARGET= ruleOPERATOR_TARGET EOF )
            // InternalKim.g:9211:2: iv_ruleOPERATOR_TARGET= ruleOPERATOR_TARGET EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOPERATOR_TARGETRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOPERATOR_TARGET=ruleOPERATOR_TARGET();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOPERATOR_TARGET.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOPERATOR_TARGET"


    // $ANTLR start "ruleOPERATOR_TARGET"
    // InternalKim.g:9217:1: ruleOPERATOR_TARGET returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'context' | kw= 'inherent' | kw= 'compresent' | kw= 'adjacent' | kw= 'container' | kw= 'contained' | kw= 'purpose' | kw= 'causant' | kw= 'caused' | kw= 'cooccurrent' ) ;
    public final AntlrDatatypeRuleToken ruleOPERATOR_TARGET() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKim.g:9223:2: ( (kw= 'context' | kw= 'inherent' | kw= 'compresent' | kw= 'adjacent' | kw= 'container' | kw= 'contained' | kw= 'purpose' | kw= 'causant' | kw= 'caused' | kw= 'cooccurrent' ) )
            // InternalKim.g:9224:2: (kw= 'context' | kw= 'inherent' | kw= 'compresent' | kw= 'adjacent' | kw= 'container' | kw= 'contained' | kw= 'purpose' | kw= 'causant' | kw= 'caused' | kw= 'cooccurrent' )
            {
            // InternalKim.g:9224:2: (kw= 'context' | kw= 'inherent' | kw= 'compresent' | kw= 'adjacent' | kw= 'container' | kw= 'contained' | kw= 'purpose' | kw= 'causant' | kw= 'caused' | kw= 'cooccurrent' )
            int alt204=10;
            switch ( input.LA(1) ) {
            case 60:
                {
                alt204=1;
                }
                break;
            case 134:
                {
                alt204=2;
                }
                break;
            case 135:
                {
                alt204=3;
                }
                break;
            case 125:
                {
                alt204=4;
                }
                break;
            case 136:
                {
                alt204=5;
                }
                break;
            case 126:
                {
                alt204=6;
                }
                break;
            case 137:
                {
                alt204=7;
                }
                break;
            case 138:
                {
                alt204=8;
                }
                break;
            case 124:
                {
                alt204=9;
                }
                break;
            case 139:
                {
                alt204=10;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 204, 0, input);

                throw nvae;
            }

            switch (alt204) {
                case 1 :
                    // InternalKim.g:9225:3: kw= 'context'
                    {
                    kw=(Token)match(input,60,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getContextKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:9231:3: kw= 'inherent'
                    {
                    kw=(Token)match(input,134,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getInherentKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:9237:3: kw= 'compresent'
                    {
                    kw=(Token)match(input,135,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getCompresentKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKim.g:9243:3: kw= 'adjacent'
                    {
                    kw=(Token)match(input,125,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getAdjacentKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalKim.g:9249:3: kw= 'container'
                    {
                    kw=(Token)match(input,136,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getContainerKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalKim.g:9255:3: kw= 'contained'
                    {
                    kw=(Token)match(input,126,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getContainedKeyword_5());
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalKim.g:9261:3: kw= 'purpose'
                    {
                    kw=(Token)match(input,137,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getPurposeKeyword_6());
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalKim.g:9267:3: kw= 'causant'
                    {
                    kw=(Token)match(input,138,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getCausantKeyword_7());
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalKim.g:9273:3: kw= 'caused'
                    {
                    kw=(Token)match(input,124,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getCausedKeyword_8());
                      		
                    }

                    }
                    break;
                case 10 :
                    // InternalKim.g:9279:3: kw= 'cooccurrent'
                    {
                    kw=(Token)match(input,139,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getCooccurrentKeyword_9());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOPERATOR_TARGET"


    // $ANTLR start "entryRuleConcept"
    // InternalKim.g:9288:1: entryRuleConcept returns [EObject current=null] : iv_ruleConcept= ruleConcept EOF ;
    public final EObject entryRuleConcept() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConcept = null;


        try {
            // InternalKim.g:9288:48: (iv_ruleConcept= ruleConcept EOF )
            // InternalKim.g:9289:2: iv_ruleConcept= ruleConcept EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConceptRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConcept=ruleConcept();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConcept; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConcept"


    // $ANTLR start "ruleConcept"
    // InternalKim.g:9295:1: ruleConcept returns [EObject current=null] : ( ( ( ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) ) )? ( (lv_name_1_0= ruleConceptReference ) ) ( ( (lv_authConcept_2_0= 'identified' ) ) otherlv_3= 'as' ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING | lv_stringIdentifier_4_3= RULE_UPPERCASE_ID | lv_stringIdentifier_4_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) ) otherlv_6= 'by' ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) ) )? ) | ( ( (lv_presence_8_0= 'presence' ) ) otherlv_9= 'of' ( (lv_concept_10_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_count_11_0= 'count' ) ) otherlv_12= 'of' ( (lv_concept_13_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_distance_14_0= 'distance' ) ) (otherlv_15= 'to' | otherlv_16= 'from' ) ( (lv_concept_17_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_probability_18_0= 'probability' ) ) otherlv_19= 'of' ( (lv_concept_20_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_assessment_21_0= 'assessment' ) ) otherlv_22= 'of' ( (lv_concept_23_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (otherlv_24= 'change' ( ( (lv_change_25_0= 'in' ) ) | ( ( (lv_rate_26_0= 'rate' ) ) otherlv_27= 'of' ) ) ) | ( (lv_changed_28_0= 'changed' ) ) ) ( (lv_concept_29_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_uncertainty_30_0= 'uncertainty' ) ) otherlv_31= 'of' ( (lv_concept_32_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_magnitude_33_0= 'magnitude' ) ) otherlv_34= 'of' ( (lv_concept_35_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_level_36_0= 'level' ) ) otherlv_37= 'of' ( (lv_concept_38_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_type_39_0= 'type' ) ) otherlv_40= 'of' ( (lv_concept_41_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_observability_42_0= 'observability' ) ) otherlv_43= 'of' ( (lv_concept_44_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_proportion_45_0= 'proportion' ) ) otherlv_46= 'of' ( (lv_concept_47_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_48= 'in' ) ( (lv_other_49_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_percentage_50_0= 'percentage' ) ) otherlv_51= 'of' ( (lv_concept_52_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_53= 'in' ) ( (lv_other_54_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_ratio_55_0= 'ratio' ) ) otherlv_56= 'of' ( (lv_concept_57_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_58= 'to' ) ( (lv_other_59_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_monetary_60_0= 'monetary' ) )? ( (lv_value_61_0= 'value' ) ) otherlv_62= 'of' ( (lv_concept_63_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'over' )=>otherlv_64= 'over' ) ( (lv_other_65_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_occurrence_66_0= 'occurrence' ) ) otherlv_67= 'of' ( (lv_concept_68_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_authConcept_69_0= 'identity' ) ) ( ( ( (lv_stringIdentifier_70_1= RULE_ID | lv_stringIdentifier_70_2= RULE_STRING | lv_stringIdentifier_70_3= RULE_UPPERCASE_ID | lv_stringIdentifier_70_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_intIdentifier_71_0= RULE_INT ) ) ) otherlv_72= 'by' ( ( (lv_authority_73_1= RULE_UPPERCASE_ID | lv_authority_73_2= RULE_UPPERCASE_PATH ) ) ) ) | (otherlv_74= '(' ( (lv_declaration_75_0= ruleExpression ) ) otherlv_76= ')' ) ) ;
    public final EObject ruleConcept() throws RecognitionException {
        EObject current = null;

        Token lv_negated_0_1=null;
        Token lv_negated_0_2=null;
        Token lv_authConcept_2_0=null;
        Token otherlv_3=null;
        Token lv_stringIdentifier_4_1=null;
        Token lv_stringIdentifier_4_2=null;
        Token lv_stringIdentifier_4_3=null;
        Token lv_stringIdentifier_4_4=null;
        Token lv_intIdentifier_5_0=null;
        Token otherlv_6=null;
        Token lv_authority_7_1=null;
        Token lv_authority_7_2=null;
        Token lv_presence_8_0=null;
        Token otherlv_9=null;
        Token lv_count_11_0=null;
        Token otherlv_12=null;
        Token lv_distance_14_0=null;
        Token otherlv_15=null;
        Token otherlv_16=null;
        Token lv_probability_18_0=null;
        Token otherlv_19=null;
        Token lv_assessment_21_0=null;
        Token otherlv_22=null;
        Token otherlv_24=null;
        Token lv_change_25_0=null;
        Token lv_rate_26_0=null;
        Token otherlv_27=null;
        Token lv_changed_28_0=null;
        Token lv_uncertainty_30_0=null;
        Token otherlv_31=null;
        Token lv_magnitude_33_0=null;
        Token otherlv_34=null;
        Token lv_level_36_0=null;
        Token otherlv_37=null;
        Token lv_type_39_0=null;
        Token otherlv_40=null;
        Token lv_observability_42_0=null;
        Token otherlv_43=null;
        Token lv_proportion_45_0=null;
        Token otherlv_46=null;
        Token otherlv_48=null;
        Token lv_percentage_50_0=null;
        Token otherlv_51=null;
        Token otherlv_53=null;
        Token lv_ratio_55_0=null;
        Token otherlv_56=null;
        Token otherlv_58=null;
        Token lv_monetary_60_0=null;
        Token lv_value_61_0=null;
        Token otherlv_62=null;
        Token otherlv_64=null;
        Token lv_occurrence_66_0=null;
        Token otherlv_67=null;
        Token lv_authConcept_69_0=null;
        Token lv_stringIdentifier_70_1=null;
        Token lv_stringIdentifier_70_2=null;
        Token lv_stringIdentifier_70_3=null;
        Token lv_stringIdentifier_70_4=null;
        Token lv_intIdentifier_71_0=null;
        Token otherlv_72=null;
        Token lv_authority_73_1=null;
        Token lv_authority_73_2=null;
        Token otherlv_74=null;
        Token otherlv_76=null;
        EObject lv_name_1_0 = null;

        EObject lv_concept_10_0 = null;

        EObject lv_concept_13_0 = null;

        EObject lv_concept_17_0 = null;

        EObject lv_concept_20_0 = null;

        EObject lv_concept_23_0 = null;

        EObject lv_concept_29_0 = null;

        EObject lv_concept_32_0 = null;

        EObject lv_concept_35_0 = null;

        EObject lv_concept_38_0 = null;

        EObject lv_concept_41_0 = null;

        EObject lv_concept_44_0 = null;

        EObject lv_concept_47_0 = null;

        EObject lv_other_49_0 = null;

        EObject lv_concept_52_0 = null;

        EObject lv_other_54_0 = null;

        EObject lv_concept_57_0 = null;

        EObject lv_other_59_0 = null;

        EObject lv_concept_63_0 = null;

        EObject lv_other_65_0 = null;

        EObject lv_concept_68_0 = null;

        EObject lv_declaration_75_0 = null;



        	enterRule();

        try {
            // InternalKim.g:9301:2: ( ( ( ( ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) ) )? ( (lv_name_1_0= ruleConceptReference ) ) ( ( (lv_authConcept_2_0= 'identified' ) ) otherlv_3= 'as' ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING | lv_stringIdentifier_4_3= RULE_UPPERCASE_ID | lv_stringIdentifier_4_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) ) otherlv_6= 'by' ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) ) )? ) | ( ( (lv_presence_8_0= 'presence' ) ) otherlv_9= 'of' ( (lv_concept_10_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_count_11_0= 'count' ) ) otherlv_12= 'of' ( (lv_concept_13_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_distance_14_0= 'distance' ) ) (otherlv_15= 'to' | otherlv_16= 'from' ) ( (lv_concept_17_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_probability_18_0= 'probability' ) ) otherlv_19= 'of' ( (lv_concept_20_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_assessment_21_0= 'assessment' ) ) otherlv_22= 'of' ( (lv_concept_23_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (otherlv_24= 'change' ( ( (lv_change_25_0= 'in' ) ) | ( ( (lv_rate_26_0= 'rate' ) ) otherlv_27= 'of' ) ) ) | ( (lv_changed_28_0= 'changed' ) ) ) ( (lv_concept_29_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_uncertainty_30_0= 'uncertainty' ) ) otherlv_31= 'of' ( (lv_concept_32_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_magnitude_33_0= 'magnitude' ) ) otherlv_34= 'of' ( (lv_concept_35_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_level_36_0= 'level' ) ) otherlv_37= 'of' ( (lv_concept_38_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_type_39_0= 'type' ) ) otherlv_40= 'of' ( (lv_concept_41_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_observability_42_0= 'observability' ) ) otherlv_43= 'of' ( (lv_concept_44_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_proportion_45_0= 'proportion' ) ) otherlv_46= 'of' ( (lv_concept_47_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_48= 'in' ) ( (lv_other_49_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_percentage_50_0= 'percentage' ) ) otherlv_51= 'of' ( (lv_concept_52_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_53= 'in' ) ( (lv_other_54_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_ratio_55_0= 'ratio' ) ) otherlv_56= 'of' ( (lv_concept_57_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_58= 'to' ) ( (lv_other_59_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_monetary_60_0= 'monetary' ) )? ( (lv_value_61_0= 'value' ) ) otherlv_62= 'of' ( (lv_concept_63_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'over' )=>otherlv_64= 'over' ) ( (lv_other_65_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_occurrence_66_0= 'occurrence' ) ) otherlv_67= 'of' ( (lv_concept_68_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_authConcept_69_0= 'identity' ) ) ( ( ( (lv_stringIdentifier_70_1= RULE_ID | lv_stringIdentifier_70_2= RULE_STRING | lv_stringIdentifier_70_3= RULE_UPPERCASE_ID | lv_stringIdentifier_70_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_intIdentifier_71_0= RULE_INT ) ) ) otherlv_72= 'by' ( ( (lv_authority_73_1= RULE_UPPERCASE_ID | lv_authority_73_2= RULE_UPPERCASE_PATH ) ) ) ) | (otherlv_74= '(' ( (lv_declaration_75_0= ruleExpression ) ) otherlv_76= ')' ) ) )
            // InternalKim.g:9302:2: ( ( ( ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) ) )? ( (lv_name_1_0= ruleConceptReference ) ) ( ( (lv_authConcept_2_0= 'identified' ) ) otherlv_3= 'as' ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING | lv_stringIdentifier_4_3= RULE_UPPERCASE_ID | lv_stringIdentifier_4_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) ) otherlv_6= 'by' ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) ) )? ) | ( ( (lv_presence_8_0= 'presence' ) ) otherlv_9= 'of' ( (lv_concept_10_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_count_11_0= 'count' ) ) otherlv_12= 'of' ( (lv_concept_13_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_distance_14_0= 'distance' ) ) (otherlv_15= 'to' | otherlv_16= 'from' ) ( (lv_concept_17_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_probability_18_0= 'probability' ) ) otherlv_19= 'of' ( (lv_concept_20_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_assessment_21_0= 'assessment' ) ) otherlv_22= 'of' ( (lv_concept_23_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (otherlv_24= 'change' ( ( (lv_change_25_0= 'in' ) ) | ( ( (lv_rate_26_0= 'rate' ) ) otherlv_27= 'of' ) ) ) | ( (lv_changed_28_0= 'changed' ) ) ) ( (lv_concept_29_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_uncertainty_30_0= 'uncertainty' ) ) otherlv_31= 'of' ( (lv_concept_32_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_magnitude_33_0= 'magnitude' ) ) otherlv_34= 'of' ( (lv_concept_35_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_level_36_0= 'level' ) ) otherlv_37= 'of' ( (lv_concept_38_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_type_39_0= 'type' ) ) otherlv_40= 'of' ( (lv_concept_41_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_observability_42_0= 'observability' ) ) otherlv_43= 'of' ( (lv_concept_44_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_proportion_45_0= 'proportion' ) ) otherlv_46= 'of' ( (lv_concept_47_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_48= 'in' ) ( (lv_other_49_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_percentage_50_0= 'percentage' ) ) otherlv_51= 'of' ( (lv_concept_52_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_53= 'in' ) ( (lv_other_54_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_ratio_55_0= 'ratio' ) ) otherlv_56= 'of' ( (lv_concept_57_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_58= 'to' ) ( (lv_other_59_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_monetary_60_0= 'monetary' ) )? ( (lv_value_61_0= 'value' ) ) otherlv_62= 'of' ( (lv_concept_63_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'over' )=>otherlv_64= 'over' ) ( (lv_other_65_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_occurrence_66_0= 'occurrence' ) ) otherlv_67= 'of' ( (lv_concept_68_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_authConcept_69_0= 'identity' ) ) ( ( ( (lv_stringIdentifier_70_1= RULE_ID | lv_stringIdentifier_70_2= RULE_STRING | lv_stringIdentifier_70_3= RULE_UPPERCASE_ID | lv_stringIdentifier_70_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_intIdentifier_71_0= RULE_INT ) ) ) otherlv_72= 'by' ( ( (lv_authority_73_1= RULE_UPPERCASE_ID | lv_authority_73_2= RULE_UPPERCASE_PATH ) ) ) ) | (otherlv_74= '(' ( (lv_declaration_75_0= ruleExpression ) ) otherlv_76= ')' ) )
            {
            // InternalKim.g:9302:2: ( ( ( ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) ) )? ( (lv_name_1_0= ruleConceptReference ) ) ( ( (lv_authConcept_2_0= 'identified' ) ) otherlv_3= 'as' ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING | lv_stringIdentifier_4_3= RULE_UPPERCASE_ID | lv_stringIdentifier_4_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) ) otherlv_6= 'by' ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) ) )? ) | ( ( (lv_presence_8_0= 'presence' ) ) otherlv_9= 'of' ( (lv_concept_10_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_count_11_0= 'count' ) ) otherlv_12= 'of' ( (lv_concept_13_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_distance_14_0= 'distance' ) ) (otherlv_15= 'to' | otherlv_16= 'from' ) ( (lv_concept_17_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_probability_18_0= 'probability' ) ) otherlv_19= 'of' ( (lv_concept_20_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_assessment_21_0= 'assessment' ) ) otherlv_22= 'of' ( (lv_concept_23_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (otherlv_24= 'change' ( ( (lv_change_25_0= 'in' ) ) | ( ( (lv_rate_26_0= 'rate' ) ) otherlv_27= 'of' ) ) ) | ( (lv_changed_28_0= 'changed' ) ) ) ( (lv_concept_29_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_uncertainty_30_0= 'uncertainty' ) ) otherlv_31= 'of' ( (lv_concept_32_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_magnitude_33_0= 'magnitude' ) ) otherlv_34= 'of' ( (lv_concept_35_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_level_36_0= 'level' ) ) otherlv_37= 'of' ( (lv_concept_38_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_type_39_0= 'type' ) ) otherlv_40= 'of' ( (lv_concept_41_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_observability_42_0= 'observability' ) ) otherlv_43= 'of' ( (lv_concept_44_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_proportion_45_0= 'proportion' ) ) otherlv_46= 'of' ( (lv_concept_47_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_48= 'in' ) ( (lv_other_49_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_percentage_50_0= 'percentage' ) ) otherlv_51= 'of' ( (lv_concept_52_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_53= 'in' ) ( (lv_other_54_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_ratio_55_0= 'ratio' ) ) otherlv_56= 'of' ( (lv_concept_57_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_58= 'to' ) ( (lv_other_59_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_monetary_60_0= 'monetary' ) )? ( (lv_value_61_0= 'value' ) ) otherlv_62= 'of' ( (lv_concept_63_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'over' )=>otherlv_64= 'over' ) ( (lv_other_65_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_occurrence_66_0= 'occurrence' ) ) otherlv_67= 'of' ( (lv_concept_68_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_authConcept_69_0= 'identity' ) ) ( ( ( (lv_stringIdentifier_70_1= RULE_ID | lv_stringIdentifier_70_2= RULE_STRING | lv_stringIdentifier_70_3= RULE_UPPERCASE_ID | lv_stringIdentifier_70_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_intIdentifier_71_0= RULE_INT ) ) ) otherlv_72= 'by' ( ( (lv_authority_73_1= RULE_UPPERCASE_ID | lv_authority_73_2= RULE_UPPERCASE_PATH ) ) ) ) | (otherlv_74= '(' ( (lv_declaration_75_0= ruleExpression ) ) otherlv_76= ')' ) )
            int alt221=19;
            switch ( input.LA(1) ) {
            case RULE_LOWERCASE_ID:
            case RULE_UPPERCASE_ID:
            case RULE_CAMELCASE_ID:
            case RULE_LOWERCASE_DASHID:
            case RULE_UPPERCASE_PATH:
            case 132:
            case 133:
            case 141:
            case 142:
                {
                alt221=1;
                }
                break;
            case 144:
                {
                alt221=2;
                }
                break;
            case 145:
                {
                alt221=3;
                }
                break;
            case 146:
                {
                alt221=4;
                }
                break;
            case 147:
                {
                alt221=5;
                }
                break;
            case 148:
                {
                alt221=6;
                }
                break;
            case 149:
            case 151:
                {
                alt221=7;
                }
                break;
            case 152:
                {
                alt221=8;
                }
                break;
            case 153:
                {
                alt221=9;
                }
                break;
            case 154:
                {
                alt221=10;
                }
                break;
            case 155:
                {
                alt221=11;
                }
                break;
            case 156:
                {
                alt221=12;
                }
                break;
            case 157:
                {
                alt221=13;
                }
                break;
            case 158:
                {
                alt221=14;
                }
                break;
            case 159:
                {
                alt221=15;
                }
                break;
            case 160:
            case 161:
                {
                alt221=16;
                }
                break;
            case 162:
                {
                alt221=17;
                }
                break;
            case 163:
                {
                alt221=18;
                }
                break;
            case 38:
                {
                alt221=19;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 221, 0, input);

                throw nvae;
            }

            switch (alt221) {
                case 1 :
                    // InternalKim.g:9303:3: ( ( ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) ) )? ( (lv_name_1_0= ruleConceptReference ) ) ( ( (lv_authConcept_2_0= 'identified' ) ) otherlv_3= 'as' ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING | lv_stringIdentifier_4_3= RULE_UPPERCASE_ID | lv_stringIdentifier_4_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) ) otherlv_6= 'by' ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) ) )? )
                    {
                    // InternalKim.g:9303:3: ( ( ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) ) )? ( (lv_name_1_0= ruleConceptReference ) ) ( ( (lv_authConcept_2_0= 'identified' ) ) otherlv_3= 'as' ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING | lv_stringIdentifier_4_3= RULE_UPPERCASE_ID | lv_stringIdentifier_4_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) ) otherlv_6= 'by' ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) ) )? )
                    // InternalKim.g:9304:4: ( ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) ) )? ( (lv_name_1_0= ruleConceptReference ) ) ( ( (lv_authConcept_2_0= 'identified' ) ) otherlv_3= 'as' ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING | lv_stringIdentifier_4_3= RULE_UPPERCASE_ID | lv_stringIdentifier_4_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) ) otherlv_6= 'by' ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) ) )?
                    {
                    // InternalKim.g:9304:4: ( ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) ) )?
                    int alt206=2;
                    int LA206_0 = input.LA(1);

                    if ( ((LA206_0>=141 && LA206_0<=142)) ) {
                        alt206=1;
                    }
                    switch (alt206) {
                        case 1 :
                            // InternalKim.g:9305:5: ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) )
                            {
                            // InternalKim.g:9305:5: ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) )
                            // InternalKim.g:9306:6: (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' )
                            {
                            // InternalKim.g:9306:6: (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' )
                            int alt205=2;
                            int LA205_0 = input.LA(1);

                            if ( (LA205_0==141) ) {
                                alt205=1;
                            }
                            else if ( (LA205_0==142) ) {
                                alt205=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 205, 0, input);

                                throw nvae;
                            }
                            switch (alt205) {
                                case 1 :
                                    // InternalKim.g:9307:7: lv_negated_0_1= 'not'
                                    {
                                    lv_negated_0_1=(Token)match(input,141,FOLLOW_117); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(lv_negated_0_1, grammarAccess.getConceptAccess().getNegatedNotKeyword_0_0_0_0());
                                      						
                                    }
                                    if ( state.backtracking==0 ) {

                                      							if (current==null) {
                                      								current = createModelElement(grammarAccess.getConceptRule());
                                      							}
                                      							setWithLastConsumed(current, "negated", true, null);
                                      						
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:9318:7: lv_negated_0_2= 'no'
                                    {
                                    lv_negated_0_2=(Token)match(input,142,FOLLOW_117); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(lv_negated_0_2, grammarAccess.getConceptAccess().getNegatedNoKeyword_0_0_0_1());
                                      						
                                    }
                                    if ( state.backtracking==0 ) {

                                      							if (current==null) {
                                      								current = createModelElement(grammarAccess.getConceptRule());
                                      							}
                                      							setWithLastConsumed(current, "negated", true, null);
                                      						
                                    }

                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:9331:4: ( (lv_name_1_0= ruleConceptReference ) )
                    // InternalKim.g:9332:5: (lv_name_1_0= ruleConceptReference )
                    {
                    // InternalKim.g:9332:5: (lv_name_1_0= ruleConceptReference )
                    // InternalKim.g:9333:6: lv_name_1_0= ruleConceptReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getNameConceptReferenceParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_118);
                    lv_name_1_0=ruleConceptReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"name",
                      							lv_name_1_0,
                      							"org.integratedmodelling.kim.Kim.ConceptReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:9350:4: ( ( (lv_authConcept_2_0= 'identified' ) ) otherlv_3= 'as' ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING | lv_stringIdentifier_4_3= RULE_UPPERCASE_ID | lv_stringIdentifier_4_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) ) otherlv_6= 'by' ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) ) )?
                    int alt210=2;
                    int LA210_0 = input.LA(1);

                    if ( (LA210_0==143) ) {
                        alt210=1;
                    }
                    switch (alt210) {
                        case 1 :
                            // InternalKim.g:9351:5: ( (lv_authConcept_2_0= 'identified' ) ) otherlv_3= 'as' ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING | lv_stringIdentifier_4_3= RULE_UPPERCASE_ID | lv_stringIdentifier_4_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) ) otherlv_6= 'by' ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) )
                            {
                            // InternalKim.g:9351:5: ( (lv_authConcept_2_0= 'identified' ) )
                            // InternalKim.g:9352:6: (lv_authConcept_2_0= 'identified' )
                            {
                            // InternalKim.g:9352:6: (lv_authConcept_2_0= 'identified' )
                            // InternalKim.g:9353:7: lv_authConcept_2_0= 'identified'
                            {
                            lv_authConcept_2_0=(Token)match(input,143,FOLLOW_11); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_authConcept_2_0, grammarAccess.getConceptAccess().getAuthConceptIdentifiedKeyword_0_2_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getConceptRule());
                              							}
                              							setWithLastConsumed(current, "authConcept", true, "identified");
                              						
                            }

                            }


                            }

                            otherlv_3=(Token)match(input,25,FOLLOW_119); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_3, grammarAccess.getConceptAccess().getAsKeyword_0_2_1());
                              				
                            }
                            // InternalKim.g:9369:5: ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING | lv_stringIdentifier_4_3= RULE_UPPERCASE_ID | lv_stringIdentifier_4_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) )
                            int alt208=2;
                            int LA208_0 = input.LA(1);

                            if ( ((LA208_0>=RULE_UPPERCASE_ID && LA208_0<=RULE_STRING)||LA208_0==RULE_CAMELCASE_ID||LA208_0==RULE_ID) ) {
                                alt208=1;
                            }
                            else if ( (LA208_0==RULE_INT) ) {
                                alt208=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 208, 0, input);

                                throw nvae;
                            }
                            switch (alt208) {
                                case 1 :
                                    // InternalKim.g:9370:6: ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING | lv_stringIdentifier_4_3= RULE_UPPERCASE_ID | lv_stringIdentifier_4_4= RULE_CAMELCASE_ID ) ) )
                                    {
                                    // InternalKim.g:9370:6: ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING | lv_stringIdentifier_4_3= RULE_UPPERCASE_ID | lv_stringIdentifier_4_4= RULE_CAMELCASE_ID ) ) )
                                    // InternalKim.g:9371:7: ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING | lv_stringIdentifier_4_3= RULE_UPPERCASE_ID | lv_stringIdentifier_4_4= RULE_CAMELCASE_ID ) )
                                    {
                                    // InternalKim.g:9371:7: ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING | lv_stringIdentifier_4_3= RULE_UPPERCASE_ID | lv_stringIdentifier_4_4= RULE_CAMELCASE_ID ) )
                                    // InternalKim.g:9372:8: (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING | lv_stringIdentifier_4_3= RULE_UPPERCASE_ID | lv_stringIdentifier_4_4= RULE_CAMELCASE_ID )
                                    {
                                    // InternalKim.g:9372:8: (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING | lv_stringIdentifier_4_3= RULE_UPPERCASE_ID | lv_stringIdentifier_4_4= RULE_CAMELCASE_ID )
                                    int alt207=4;
                                    switch ( input.LA(1) ) {
                                    case RULE_ID:
                                        {
                                        alt207=1;
                                        }
                                        break;
                                    case RULE_STRING:
                                        {
                                        alt207=2;
                                        }
                                        break;
                                    case RULE_UPPERCASE_ID:
                                        {
                                        alt207=3;
                                        }
                                        break;
                                    case RULE_CAMELCASE_ID:
                                        {
                                        alt207=4;
                                        }
                                        break;
                                    default:
                                        if (state.backtracking>0) {state.failed=true; return current;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 207, 0, input);

                                        throw nvae;
                                    }

                                    switch (alt207) {
                                        case 1 :
                                            // InternalKim.g:9373:9: lv_stringIdentifier_4_1= RULE_ID
                                            {
                                            lv_stringIdentifier_4_1=(Token)match(input,RULE_ID,FOLLOW_112); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              									newLeafNode(lv_stringIdentifier_4_1, grammarAccess.getConceptAccess().getStringIdentifierIDTerminalRuleCall_0_2_2_0_0_0());
                                              								
                                            }
                                            if ( state.backtracking==0 ) {

                                              									if (current==null) {
                                              										current = createModelElement(grammarAccess.getConceptRule());
                                              									}
                                              									setWithLastConsumed(
                                              										current,
                                              										"stringIdentifier",
                                              										lv_stringIdentifier_4_1,
                                              										"org.eclipse.xtext.common.Terminals.ID");
                                              								
                                            }

                                            }
                                            break;
                                        case 2 :
                                            // InternalKim.g:9388:9: lv_stringIdentifier_4_2= RULE_STRING
                                            {
                                            lv_stringIdentifier_4_2=(Token)match(input,RULE_STRING,FOLLOW_112); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              									newLeafNode(lv_stringIdentifier_4_2, grammarAccess.getConceptAccess().getStringIdentifierSTRINGTerminalRuleCall_0_2_2_0_0_1());
                                              								
                                            }
                                            if ( state.backtracking==0 ) {

                                              									if (current==null) {
                                              										current = createModelElement(grammarAccess.getConceptRule());
                                              									}
                                              									setWithLastConsumed(
                                              										current,
                                              										"stringIdentifier",
                                              										lv_stringIdentifier_4_2,
                                              										"org.eclipse.xtext.common.Terminals.STRING");
                                              								
                                            }

                                            }
                                            break;
                                        case 3 :
                                            // InternalKim.g:9403:9: lv_stringIdentifier_4_3= RULE_UPPERCASE_ID
                                            {
                                            lv_stringIdentifier_4_3=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_112); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              									newLeafNode(lv_stringIdentifier_4_3, grammarAccess.getConceptAccess().getStringIdentifierUPPERCASE_IDTerminalRuleCall_0_2_2_0_0_2());
                                              								
                                            }
                                            if ( state.backtracking==0 ) {

                                              									if (current==null) {
                                              										current = createModelElement(grammarAccess.getConceptRule());
                                              									}
                                              									setWithLastConsumed(
                                              										current,
                                              										"stringIdentifier",
                                              										lv_stringIdentifier_4_3,
                                              										"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                                              								
                                            }

                                            }
                                            break;
                                        case 4 :
                                            // InternalKim.g:9418:9: lv_stringIdentifier_4_4= RULE_CAMELCASE_ID
                                            {
                                            lv_stringIdentifier_4_4=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_112); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              									newLeafNode(lv_stringIdentifier_4_4, grammarAccess.getConceptAccess().getStringIdentifierCAMELCASE_IDTerminalRuleCall_0_2_2_0_0_3());
                                              								
                                            }
                                            if ( state.backtracking==0 ) {

                                              									if (current==null) {
                                              										current = createModelElement(grammarAccess.getConceptRule());
                                              									}
                                              									setWithLastConsumed(
                                              										current,
                                              										"stringIdentifier",
                                              										lv_stringIdentifier_4_4,
                                              										"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                                              								
                                            }

                                            }
                                            break;

                                    }


                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:9436:6: ( (lv_intIdentifier_5_0= RULE_INT ) )
                                    {
                                    // InternalKim.g:9436:6: ( (lv_intIdentifier_5_0= RULE_INT ) )
                                    // InternalKim.g:9437:7: (lv_intIdentifier_5_0= RULE_INT )
                                    {
                                    // InternalKim.g:9437:7: (lv_intIdentifier_5_0= RULE_INT )
                                    // InternalKim.g:9438:8: lv_intIdentifier_5_0= RULE_INT
                                    {
                                    lv_intIdentifier_5_0=(Token)match(input,RULE_INT,FOLLOW_112); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_intIdentifier_5_0, grammarAccess.getConceptAccess().getIntIdentifierINTTerminalRuleCall_0_2_2_1_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getConceptRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"intIdentifier",
                                      									lv_intIdentifier_5_0,
                                      									"org.eclipse.xtext.common.Terminals.INT");
                                      							
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }

                            otherlv_6=(Token)match(input,89,FOLLOW_120); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_6, grammarAccess.getConceptAccess().getByKeyword_0_2_3());
                              				
                            }
                            // InternalKim.g:9459:5: ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) )
                            // InternalKim.g:9460:6: ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) )
                            {
                            // InternalKim.g:9460:6: ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) )
                            // InternalKim.g:9461:7: (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH )
                            {
                            // InternalKim.g:9461:7: (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH )
                            int alt209=2;
                            int LA209_0 = input.LA(1);

                            if ( (LA209_0==RULE_UPPERCASE_ID) ) {
                                alt209=1;
                            }
                            else if ( (LA209_0==RULE_UPPERCASE_PATH) ) {
                                alt209=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 209, 0, input);

                                throw nvae;
                            }
                            switch (alt209) {
                                case 1 :
                                    // InternalKim.g:9462:8: lv_authority_7_1= RULE_UPPERCASE_ID
                                    {
                                    lv_authority_7_1=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_authority_7_1, grammarAccess.getConceptAccess().getAuthorityUPPERCASE_IDTerminalRuleCall_0_2_4_0_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getConceptRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"authority",
                                      									lv_authority_7_1,
                                      									"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                                      							
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:9477:8: lv_authority_7_2= RULE_UPPERCASE_PATH
                                    {
                                    lv_authority_7_2=(Token)match(input,RULE_UPPERCASE_PATH,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_authority_7_2, grammarAccess.getConceptAccess().getAuthorityUPPERCASE_PATHTerminalRuleCall_0_2_4_0_1());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getConceptRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"authority",
                                      									lv_authority_7_2,
                                      									"org.integratedmodelling.kim.Kim.UPPERCASE_PATH");
                                      							
                                    }

                                    }
                                    break;

                            }


                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:9497:3: ( ( (lv_presence_8_0= 'presence' ) ) otherlv_9= 'of' ( (lv_concept_10_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:9497:3: ( ( (lv_presence_8_0= 'presence' ) ) otherlv_9= 'of' ( (lv_concept_10_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:9498:4: ( (lv_presence_8_0= 'presence' ) ) otherlv_9= 'of' ( (lv_concept_10_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:9498:4: ( (lv_presence_8_0= 'presence' ) )
                    // InternalKim.g:9499:5: (lv_presence_8_0= 'presence' )
                    {
                    // InternalKim.g:9499:5: (lv_presence_8_0= 'presence' )
                    // InternalKim.g:9500:6: lv_presence_8_0= 'presence'
                    {
                    lv_presence_8_0=(Token)match(input,144,FOLLOW_121); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_presence_8_0, grammarAccess.getConceptAccess().getPresencePresenceKeyword_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "presence", true, "presence");
                      					
                    }

                    }


                    }

                    otherlv_9=(Token)match(input,123,FOLLOW_110); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getConceptAccess().getOfKeyword_1_1());
                      			
                    }
                    // InternalKim.g:9516:4: ( (lv_concept_10_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:9517:5: (lv_concept_10_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:9517:5: (lv_concept_10_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:9518:6: lv_concept_10_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_10_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_10_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:9537:3: ( ( (lv_count_11_0= 'count' ) ) otherlv_12= 'of' ( (lv_concept_13_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:9537:3: ( ( (lv_count_11_0= 'count' ) ) otherlv_12= 'of' ( (lv_concept_13_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:9538:4: ( (lv_count_11_0= 'count' ) ) otherlv_12= 'of' ( (lv_concept_13_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:9538:4: ( (lv_count_11_0= 'count' ) )
                    // InternalKim.g:9539:5: (lv_count_11_0= 'count' )
                    {
                    // InternalKim.g:9539:5: (lv_count_11_0= 'count' )
                    // InternalKim.g:9540:6: lv_count_11_0= 'count'
                    {
                    lv_count_11_0=(Token)match(input,145,FOLLOW_121); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_count_11_0, grammarAccess.getConceptAccess().getCountCountKeyword_2_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "count", true, "count");
                      					
                    }

                    }


                    }

                    otherlv_12=(Token)match(input,123,FOLLOW_110); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getConceptAccess().getOfKeyword_2_1());
                      			
                    }
                    // InternalKim.g:9556:4: ( (lv_concept_13_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:9557:5: (lv_concept_13_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:9557:5: (lv_concept_13_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:9558:6: lv_concept_13_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_2_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_13_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_13_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:9577:3: ( ( (lv_distance_14_0= 'distance' ) ) (otherlv_15= 'to' | otherlv_16= 'from' ) ( (lv_concept_17_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:9577:3: ( ( (lv_distance_14_0= 'distance' ) ) (otherlv_15= 'to' | otherlv_16= 'from' ) ( (lv_concept_17_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:9578:4: ( (lv_distance_14_0= 'distance' ) ) (otherlv_15= 'to' | otherlv_16= 'from' ) ( (lv_concept_17_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:9578:4: ( (lv_distance_14_0= 'distance' ) )
                    // InternalKim.g:9579:5: (lv_distance_14_0= 'distance' )
                    {
                    // InternalKim.g:9579:5: (lv_distance_14_0= 'distance' )
                    // InternalKim.g:9580:6: lv_distance_14_0= 'distance'
                    {
                    lv_distance_14_0=(Token)match(input,146,FOLLOW_122); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_distance_14_0, grammarAccess.getConceptAccess().getDistanceDistanceKeyword_3_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "distance", true, "distance");
                      					
                    }

                    }


                    }

                    // InternalKim.g:9592:4: (otherlv_15= 'to' | otherlv_16= 'from' )
                    int alt211=2;
                    int LA211_0 = input.LA(1);

                    if ( (LA211_0==36) ) {
                        alt211=1;
                    }
                    else if ( (LA211_0==102) ) {
                        alt211=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 211, 0, input);

                        throw nvae;
                    }
                    switch (alt211) {
                        case 1 :
                            // InternalKim.g:9593:5: otherlv_15= 'to'
                            {
                            otherlv_15=(Token)match(input,36,FOLLOW_110); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_15, grammarAccess.getConceptAccess().getToKeyword_3_1_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:9598:5: otherlv_16= 'from'
                            {
                            otherlv_16=(Token)match(input,102,FOLLOW_110); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_16, grammarAccess.getConceptAccess().getFromKeyword_3_1_1());
                              				
                            }

                            }
                            break;

                    }

                    // InternalKim.g:9603:4: ( (lv_concept_17_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:9604:5: (lv_concept_17_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:9604:5: (lv_concept_17_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:9605:6: lv_concept_17_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_3_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_17_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_17_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:9624:3: ( ( (lv_probability_18_0= 'probability' ) ) otherlv_19= 'of' ( (lv_concept_20_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:9624:3: ( ( (lv_probability_18_0= 'probability' ) ) otherlv_19= 'of' ( (lv_concept_20_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:9625:4: ( (lv_probability_18_0= 'probability' ) ) otherlv_19= 'of' ( (lv_concept_20_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:9625:4: ( (lv_probability_18_0= 'probability' ) )
                    // InternalKim.g:9626:5: (lv_probability_18_0= 'probability' )
                    {
                    // InternalKim.g:9626:5: (lv_probability_18_0= 'probability' )
                    // InternalKim.g:9627:6: lv_probability_18_0= 'probability'
                    {
                    lv_probability_18_0=(Token)match(input,147,FOLLOW_121); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_probability_18_0, grammarAccess.getConceptAccess().getProbabilityProbabilityKeyword_4_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "probability", true, "probability");
                      					
                    }

                    }


                    }

                    otherlv_19=(Token)match(input,123,FOLLOW_110); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_19, grammarAccess.getConceptAccess().getOfKeyword_4_1());
                      			
                    }
                    // InternalKim.g:9643:4: ( (lv_concept_20_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:9644:5: (lv_concept_20_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:9644:5: (lv_concept_20_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:9645:6: lv_concept_20_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_4_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_20_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_20_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:9664:3: ( ( (lv_assessment_21_0= 'assessment' ) ) otherlv_22= 'of' ( (lv_concept_23_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:9664:3: ( ( (lv_assessment_21_0= 'assessment' ) ) otherlv_22= 'of' ( (lv_concept_23_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:9665:4: ( (lv_assessment_21_0= 'assessment' ) ) otherlv_22= 'of' ( (lv_concept_23_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:9665:4: ( (lv_assessment_21_0= 'assessment' ) )
                    // InternalKim.g:9666:5: (lv_assessment_21_0= 'assessment' )
                    {
                    // InternalKim.g:9666:5: (lv_assessment_21_0= 'assessment' )
                    // InternalKim.g:9667:6: lv_assessment_21_0= 'assessment'
                    {
                    lv_assessment_21_0=(Token)match(input,148,FOLLOW_121); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_assessment_21_0, grammarAccess.getConceptAccess().getAssessmentAssessmentKeyword_5_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "assessment", true, "assessment");
                      					
                    }

                    }


                    }

                    otherlv_22=(Token)match(input,123,FOLLOW_110); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_22, grammarAccess.getConceptAccess().getOfKeyword_5_1());
                      			
                    }
                    // InternalKim.g:9683:4: ( (lv_concept_23_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:9684:5: (lv_concept_23_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:9684:5: (lv_concept_23_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:9685:6: lv_concept_23_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_5_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_23_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_23_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalKim.g:9704:3: ( ( (otherlv_24= 'change' ( ( (lv_change_25_0= 'in' ) ) | ( ( (lv_rate_26_0= 'rate' ) ) otherlv_27= 'of' ) ) ) | ( (lv_changed_28_0= 'changed' ) ) ) ( (lv_concept_29_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:9704:3: ( ( (otherlv_24= 'change' ( ( (lv_change_25_0= 'in' ) ) | ( ( (lv_rate_26_0= 'rate' ) ) otherlv_27= 'of' ) ) ) | ( (lv_changed_28_0= 'changed' ) ) ) ( (lv_concept_29_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:9705:4: ( (otherlv_24= 'change' ( ( (lv_change_25_0= 'in' ) ) | ( ( (lv_rate_26_0= 'rate' ) ) otherlv_27= 'of' ) ) ) | ( (lv_changed_28_0= 'changed' ) ) ) ( (lv_concept_29_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:9705:4: ( (otherlv_24= 'change' ( ( (lv_change_25_0= 'in' ) ) | ( ( (lv_rate_26_0= 'rate' ) ) otherlv_27= 'of' ) ) ) | ( (lv_changed_28_0= 'changed' ) ) )
                    int alt213=2;
                    int LA213_0 = input.LA(1);

                    if ( (LA213_0==149) ) {
                        alt213=1;
                    }
                    else if ( (LA213_0==151) ) {
                        alt213=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 213, 0, input);

                        throw nvae;
                    }
                    switch (alt213) {
                        case 1 :
                            // InternalKim.g:9706:5: (otherlv_24= 'change' ( ( (lv_change_25_0= 'in' ) ) | ( ( (lv_rate_26_0= 'rate' ) ) otherlv_27= 'of' ) ) )
                            {
                            // InternalKim.g:9706:5: (otherlv_24= 'change' ( ( (lv_change_25_0= 'in' ) ) | ( ( (lv_rate_26_0= 'rate' ) ) otherlv_27= 'of' ) ) )
                            // InternalKim.g:9707:6: otherlv_24= 'change' ( ( (lv_change_25_0= 'in' ) ) | ( ( (lv_rate_26_0= 'rate' ) ) otherlv_27= 'of' ) )
                            {
                            otherlv_24=(Token)match(input,149,FOLLOW_123); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_24, grammarAccess.getConceptAccess().getChangeKeyword_6_0_0_0());
                              					
                            }
                            // InternalKim.g:9711:6: ( ( (lv_change_25_0= 'in' ) ) | ( ( (lv_rate_26_0= 'rate' ) ) otherlv_27= 'of' ) )
                            int alt212=2;
                            int LA212_0 = input.LA(1);

                            if ( (LA212_0==48) ) {
                                alt212=1;
                            }
                            else if ( (LA212_0==150) ) {
                                alt212=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 212, 0, input);

                                throw nvae;
                            }
                            switch (alt212) {
                                case 1 :
                                    // InternalKim.g:9712:7: ( (lv_change_25_0= 'in' ) )
                                    {
                                    // InternalKim.g:9712:7: ( (lv_change_25_0= 'in' ) )
                                    // InternalKim.g:9713:8: (lv_change_25_0= 'in' )
                                    {
                                    // InternalKim.g:9713:8: (lv_change_25_0= 'in' )
                                    // InternalKim.g:9714:9: lv_change_25_0= 'in'
                                    {
                                    lv_change_25_0=(Token)match(input,48,FOLLOW_110); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_change_25_0, grammarAccess.getConceptAccess().getChangeInKeyword_6_0_0_1_0_0());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getConceptRule());
                                      									}
                                      									setWithLastConsumed(current, "change", true, "in");
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:9727:7: ( ( (lv_rate_26_0= 'rate' ) ) otherlv_27= 'of' )
                                    {
                                    // InternalKim.g:9727:7: ( ( (lv_rate_26_0= 'rate' ) ) otherlv_27= 'of' )
                                    // InternalKim.g:9728:8: ( (lv_rate_26_0= 'rate' ) ) otherlv_27= 'of'
                                    {
                                    // InternalKim.g:9728:8: ( (lv_rate_26_0= 'rate' ) )
                                    // InternalKim.g:9729:9: (lv_rate_26_0= 'rate' )
                                    {
                                    // InternalKim.g:9729:9: (lv_rate_26_0= 'rate' )
                                    // InternalKim.g:9730:10: lv_rate_26_0= 'rate'
                                    {
                                    lv_rate_26_0=(Token)match(input,150,FOLLOW_121); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										newLeafNode(lv_rate_26_0, grammarAccess.getConceptAccess().getRateRateKeyword_6_0_0_1_1_0_0());
                                      									
                                    }
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElement(grammarAccess.getConceptRule());
                                      										}
                                      										setWithLastConsumed(current, "rate", true, "rate");
                                      									
                                    }

                                    }


                                    }

                                    otherlv_27=(Token)match(input,123,FOLLOW_110); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_27, grammarAccess.getConceptAccess().getOfKeyword_6_0_0_1_1_1());
                                      							
                                    }

                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:9750:5: ( (lv_changed_28_0= 'changed' ) )
                            {
                            // InternalKim.g:9750:5: ( (lv_changed_28_0= 'changed' ) )
                            // InternalKim.g:9751:6: (lv_changed_28_0= 'changed' )
                            {
                            // InternalKim.g:9751:6: (lv_changed_28_0= 'changed' )
                            // InternalKim.g:9752:7: lv_changed_28_0= 'changed'
                            {
                            lv_changed_28_0=(Token)match(input,151,FOLLOW_110); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_changed_28_0, grammarAccess.getConceptAccess().getChangedChangedKeyword_6_0_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getConceptRule());
                              							}
                              							setWithLastConsumed(current, "changed", true, "changed");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:9765:4: ( (lv_concept_29_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:9766:5: (lv_concept_29_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:9766:5: (lv_concept_29_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:9767:6: lv_concept_29_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_6_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_29_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_29_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalKim.g:9786:3: ( ( (lv_uncertainty_30_0= 'uncertainty' ) ) otherlv_31= 'of' ( (lv_concept_32_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:9786:3: ( ( (lv_uncertainty_30_0= 'uncertainty' ) ) otherlv_31= 'of' ( (lv_concept_32_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:9787:4: ( (lv_uncertainty_30_0= 'uncertainty' ) ) otherlv_31= 'of' ( (lv_concept_32_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:9787:4: ( (lv_uncertainty_30_0= 'uncertainty' ) )
                    // InternalKim.g:9788:5: (lv_uncertainty_30_0= 'uncertainty' )
                    {
                    // InternalKim.g:9788:5: (lv_uncertainty_30_0= 'uncertainty' )
                    // InternalKim.g:9789:6: lv_uncertainty_30_0= 'uncertainty'
                    {
                    lv_uncertainty_30_0=(Token)match(input,152,FOLLOW_121); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_uncertainty_30_0, grammarAccess.getConceptAccess().getUncertaintyUncertaintyKeyword_7_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "uncertainty", true, "uncertainty");
                      					
                    }

                    }


                    }

                    otherlv_31=(Token)match(input,123,FOLLOW_110); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_31, grammarAccess.getConceptAccess().getOfKeyword_7_1());
                      			
                    }
                    // InternalKim.g:9805:4: ( (lv_concept_32_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:9806:5: (lv_concept_32_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:9806:5: (lv_concept_32_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:9807:6: lv_concept_32_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_7_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_32_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_32_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 9 :
                    // InternalKim.g:9826:3: ( ( (lv_magnitude_33_0= 'magnitude' ) ) otherlv_34= 'of' ( (lv_concept_35_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:9826:3: ( ( (lv_magnitude_33_0= 'magnitude' ) ) otherlv_34= 'of' ( (lv_concept_35_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:9827:4: ( (lv_magnitude_33_0= 'magnitude' ) ) otherlv_34= 'of' ( (lv_concept_35_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:9827:4: ( (lv_magnitude_33_0= 'magnitude' ) )
                    // InternalKim.g:9828:5: (lv_magnitude_33_0= 'magnitude' )
                    {
                    // InternalKim.g:9828:5: (lv_magnitude_33_0= 'magnitude' )
                    // InternalKim.g:9829:6: lv_magnitude_33_0= 'magnitude'
                    {
                    lv_magnitude_33_0=(Token)match(input,153,FOLLOW_121); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_magnitude_33_0, grammarAccess.getConceptAccess().getMagnitudeMagnitudeKeyword_8_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "magnitude", true, "magnitude");
                      					
                    }

                    }


                    }

                    otherlv_34=(Token)match(input,123,FOLLOW_110); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_34, grammarAccess.getConceptAccess().getOfKeyword_8_1());
                      			
                    }
                    // InternalKim.g:9845:4: ( (lv_concept_35_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:9846:5: (lv_concept_35_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:9846:5: (lv_concept_35_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:9847:6: lv_concept_35_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_8_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_35_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_35_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 10 :
                    // InternalKim.g:9866:3: ( ( (lv_level_36_0= 'level' ) ) otherlv_37= 'of' ( (lv_concept_38_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:9866:3: ( ( (lv_level_36_0= 'level' ) ) otherlv_37= 'of' ( (lv_concept_38_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:9867:4: ( (lv_level_36_0= 'level' ) ) otherlv_37= 'of' ( (lv_concept_38_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:9867:4: ( (lv_level_36_0= 'level' ) )
                    // InternalKim.g:9868:5: (lv_level_36_0= 'level' )
                    {
                    // InternalKim.g:9868:5: (lv_level_36_0= 'level' )
                    // InternalKim.g:9869:6: lv_level_36_0= 'level'
                    {
                    lv_level_36_0=(Token)match(input,154,FOLLOW_121); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_level_36_0, grammarAccess.getConceptAccess().getLevelLevelKeyword_9_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "level", true, "level");
                      					
                    }

                    }


                    }

                    otherlv_37=(Token)match(input,123,FOLLOW_110); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_37, grammarAccess.getConceptAccess().getOfKeyword_9_1());
                      			
                    }
                    // InternalKim.g:9885:4: ( (lv_concept_38_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:9886:5: (lv_concept_38_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:9886:5: (lv_concept_38_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:9887:6: lv_concept_38_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_9_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_38_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_38_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 11 :
                    // InternalKim.g:9906:3: ( ( (lv_type_39_0= 'type' ) ) otherlv_40= 'of' ( (lv_concept_41_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:9906:3: ( ( (lv_type_39_0= 'type' ) ) otherlv_40= 'of' ( (lv_concept_41_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:9907:4: ( (lv_type_39_0= 'type' ) ) otherlv_40= 'of' ( (lv_concept_41_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:9907:4: ( (lv_type_39_0= 'type' ) )
                    // InternalKim.g:9908:5: (lv_type_39_0= 'type' )
                    {
                    // InternalKim.g:9908:5: (lv_type_39_0= 'type' )
                    // InternalKim.g:9909:6: lv_type_39_0= 'type'
                    {
                    lv_type_39_0=(Token)match(input,155,FOLLOW_121); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_type_39_0, grammarAccess.getConceptAccess().getTypeTypeKeyword_10_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "type", true, "type");
                      					
                    }

                    }


                    }

                    otherlv_40=(Token)match(input,123,FOLLOW_110); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_40, grammarAccess.getConceptAccess().getOfKeyword_10_1());
                      			
                    }
                    // InternalKim.g:9925:4: ( (lv_concept_41_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:9926:5: (lv_concept_41_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:9926:5: (lv_concept_41_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:9927:6: lv_concept_41_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_10_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_41_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_41_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 12 :
                    // InternalKim.g:9946:3: ( ( (lv_observability_42_0= 'observability' ) ) otherlv_43= 'of' ( (lv_concept_44_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:9946:3: ( ( (lv_observability_42_0= 'observability' ) ) otherlv_43= 'of' ( (lv_concept_44_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:9947:4: ( (lv_observability_42_0= 'observability' ) ) otherlv_43= 'of' ( (lv_concept_44_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:9947:4: ( (lv_observability_42_0= 'observability' ) )
                    // InternalKim.g:9948:5: (lv_observability_42_0= 'observability' )
                    {
                    // InternalKim.g:9948:5: (lv_observability_42_0= 'observability' )
                    // InternalKim.g:9949:6: lv_observability_42_0= 'observability'
                    {
                    lv_observability_42_0=(Token)match(input,156,FOLLOW_121); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_observability_42_0, grammarAccess.getConceptAccess().getObservabilityObservabilityKeyword_11_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "observability", true, "observability");
                      					
                    }

                    }


                    }

                    otherlv_43=(Token)match(input,123,FOLLOW_110); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_43, grammarAccess.getConceptAccess().getOfKeyword_11_1());
                      			
                    }
                    // InternalKim.g:9965:4: ( (lv_concept_44_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:9966:5: (lv_concept_44_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:9966:5: (lv_concept_44_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:9967:6: lv_concept_44_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_11_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_44_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_44_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 13 :
                    // InternalKim.g:9986:3: ( ( (lv_proportion_45_0= 'proportion' ) ) otherlv_46= 'of' ( (lv_concept_47_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_48= 'in' ) ( (lv_other_49_0= ruleSimpleConceptDeclaration ) ) )? )
                    {
                    // InternalKim.g:9986:3: ( ( (lv_proportion_45_0= 'proportion' ) ) otherlv_46= 'of' ( (lv_concept_47_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_48= 'in' ) ( (lv_other_49_0= ruleSimpleConceptDeclaration ) ) )? )
                    // InternalKim.g:9987:4: ( (lv_proportion_45_0= 'proportion' ) ) otherlv_46= 'of' ( (lv_concept_47_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_48= 'in' ) ( (lv_other_49_0= ruleSimpleConceptDeclaration ) ) )?
                    {
                    // InternalKim.g:9987:4: ( (lv_proportion_45_0= 'proportion' ) )
                    // InternalKim.g:9988:5: (lv_proportion_45_0= 'proportion' )
                    {
                    // InternalKim.g:9988:5: (lv_proportion_45_0= 'proportion' )
                    // InternalKim.g:9989:6: lv_proportion_45_0= 'proportion'
                    {
                    lv_proportion_45_0=(Token)match(input,157,FOLLOW_121); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_proportion_45_0, grammarAccess.getConceptAccess().getProportionProportionKeyword_12_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "proportion", true, "proportion");
                      					
                    }

                    }


                    }

                    otherlv_46=(Token)match(input,123,FOLLOW_110); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_46, grammarAccess.getConceptAccess().getOfKeyword_12_1());
                      			
                    }
                    // InternalKim.g:10005:4: ( (lv_concept_47_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:10006:5: (lv_concept_47_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:10006:5: (lv_concept_47_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:10007:6: lv_concept_47_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_12_2_0());
                      					
                    }
                    pushFollow(FOLLOW_58);
                    lv_concept_47_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_47_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:10024:4: ( ( ( 'in' )=>otherlv_48= 'in' ) ( (lv_other_49_0= ruleSimpleConceptDeclaration ) ) )?
                    int alt214=2;
                    int LA214_0 = input.LA(1);

                    if ( (LA214_0==48) ) {
                        int LA214_1 = input.LA(2);

                        if ( (synpred393_InternalKim()) ) {
                            alt214=1;
                        }
                    }
                    switch (alt214) {
                        case 1 :
                            // InternalKim.g:10025:5: ( ( 'in' )=>otherlv_48= 'in' ) ( (lv_other_49_0= ruleSimpleConceptDeclaration ) )
                            {
                            // InternalKim.g:10025:5: ( ( 'in' )=>otherlv_48= 'in' )
                            // InternalKim.g:10026:6: ( 'in' )=>otherlv_48= 'in'
                            {
                            otherlv_48=(Token)match(input,48,FOLLOW_110); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_48, grammarAccess.getConceptAccess().getInKeyword_12_3_0());
                              					
                            }

                            }

                            // InternalKim.g:10032:5: ( (lv_other_49_0= ruleSimpleConceptDeclaration ) )
                            // InternalKim.g:10033:6: (lv_other_49_0= ruleSimpleConceptDeclaration )
                            {
                            // InternalKim.g:10033:6: (lv_other_49_0= ruleSimpleConceptDeclaration )
                            // InternalKim.g:10034:7: lv_other_49_0= ruleSimpleConceptDeclaration
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getConceptAccess().getOtherSimpleConceptDeclarationParserRuleCall_12_3_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_other_49_0=ruleSimpleConceptDeclaration();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getConceptRule());
                              							}
                              							set(
                              								current,
                              								"other",
                              								lv_other_49_0,
                              								"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 14 :
                    // InternalKim.g:10054:3: ( ( (lv_percentage_50_0= 'percentage' ) ) otherlv_51= 'of' ( (lv_concept_52_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_53= 'in' ) ( (lv_other_54_0= ruleSimpleConceptDeclaration ) ) )? )
                    {
                    // InternalKim.g:10054:3: ( ( (lv_percentage_50_0= 'percentage' ) ) otherlv_51= 'of' ( (lv_concept_52_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_53= 'in' ) ( (lv_other_54_0= ruleSimpleConceptDeclaration ) ) )? )
                    // InternalKim.g:10055:4: ( (lv_percentage_50_0= 'percentage' ) ) otherlv_51= 'of' ( (lv_concept_52_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_53= 'in' ) ( (lv_other_54_0= ruleSimpleConceptDeclaration ) ) )?
                    {
                    // InternalKim.g:10055:4: ( (lv_percentage_50_0= 'percentage' ) )
                    // InternalKim.g:10056:5: (lv_percentage_50_0= 'percentage' )
                    {
                    // InternalKim.g:10056:5: (lv_percentage_50_0= 'percentage' )
                    // InternalKim.g:10057:6: lv_percentage_50_0= 'percentage'
                    {
                    lv_percentage_50_0=(Token)match(input,158,FOLLOW_121); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_percentage_50_0, grammarAccess.getConceptAccess().getPercentagePercentageKeyword_13_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "percentage", true, "percentage");
                      					
                    }

                    }


                    }

                    otherlv_51=(Token)match(input,123,FOLLOW_110); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_51, grammarAccess.getConceptAccess().getOfKeyword_13_1());
                      			
                    }
                    // InternalKim.g:10073:4: ( (lv_concept_52_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:10074:5: (lv_concept_52_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:10074:5: (lv_concept_52_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:10075:6: lv_concept_52_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_13_2_0());
                      					
                    }
                    pushFollow(FOLLOW_58);
                    lv_concept_52_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_52_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:10092:4: ( ( ( 'in' )=>otherlv_53= 'in' ) ( (lv_other_54_0= ruleSimpleConceptDeclaration ) ) )?
                    int alt215=2;
                    int LA215_0 = input.LA(1);

                    if ( (LA215_0==48) ) {
                        int LA215_1 = input.LA(2);

                        if ( (synpred396_InternalKim()) ) {
                            alt215=1;
                        }
                    }
                    switch (alt215) {
                        case 1 :
                            // InternalKim.g:10093:5: ( ( 'in' )=>otherlv_53= 'in' ) ( (lv_other_54_0= ruleSimpleConceptDeclaration ) )
                            {
                            // InternalKim.g:10093:5: ( ( 'in' )=>otherlv_53= 'in' )
                            // InternalKim.g:10094:6: ( 'in' )=>otherlv_53= 'in'
                            {
                            otherlv_53=(Token)match(input,48,FOLLOW_110); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_53, grammarAccess.getConceptAccess().getInKeyword_13_3_0());
                              					
                            }

                            }

                            // InternalKim.g:10100:5: ( (lv_other_54_0= ruleSimpleConceptDeclaration ) )
                            // InternalKim.g:10101:6: (lv_other_54_0= ruleSimpleConceptDeclaration )
                            {
                            // InternalKim.g:10101:6: (lv_other_54_0= ruleSimpleConceptDeclaration )
                            // InternalKim.g:10102:7: lv_other_54_0= ruleSimpleConceptDeclaration
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getConceptAccess().getOtherSimpleConceptDeclarationParserRuleCall_13_3_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_other_54_0=ruleSimpleConceptDeclaration();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getConceptRule());
                              							}
                              							set(
                              								current,
                              								"other",
                              								lv_other_54_0,
                              								"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 15 :
                    // InternalKim.g:10122:3: ( ( (lv_ratio_55_0= 'ratio' ) ) otherlv_56= 'of' ( (lv_concept_57_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_58= 'to' ) ( (lv_other_59_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:10122:3: ( ( (lv_ratio_55_0= 'ratio' ) ) otherlv_56= 'of' ( (lv_concept_57_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_58= 'to' ) ( (lv_other_59_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:10123:4: ( (lv_ratio_55_0= 'ratio' ) ) otherlv_56= 'of' ( (lv_concept_57_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_58= 'to' ) ( (lv_other_59_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:10123:4: ( (lv_ratio_55_0= 'ratio' ) )
                    // InternalKim.g:10124:5: (lv_ratio_55_0= 'ratio' )
                    {
                    // InternalKim.g:10124:5: (lv_ratio_55_0= 'ratio' )
                    // InternalKim.g:10125:6: lv_ratio_55_0= 'ratio'
                    {
                    lv_ratio_55_0=(Token)match(input,159,FOLLOW_121); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_ratio_55_0, grammarAccess.getConceptAccess().getRatioRatioKeyword_14_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "ratio", true, "ratio");
                      					
                    }

                    }


                    }

                    otherlv_56=(Token)match(input,123,FOLLOW_110); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_56, grammarAccess.getConceptAccess().getOfKeyword_14_1());
                      			
                    }
                    // InternalKim.g:10141:4: ( (lv_concept_57_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:10142:5: (lv_concept_57_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:10142:5: (lv_concept_57_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:10143:6: lv_concept_57_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_14_2_0());
                      					
                    }
                    pushFollow(FOLLOW_25);
                    lv_concept_57_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_57_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:10160:4: ( ( 'to' )=>otherlv_58= 'to' )
                    // InternalKim.g:10161:5: ( 'to' )=>otherlv_58= 'to'
                    {
                    otherlv_58=(Token)match(input,36,FOLLOW_110); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_58, grammarAccess.getConceptAccess().getToKeyword_14_3());
                      				
                    }

                    }

                    // InternalKim.g:10167:4: ( (lv_other_59_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:10168:5: (lv_other_59_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:10168:5: (lv_other_59_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:10169:6: lv_other_59_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getOtherSimpleConceptDeclarationParserRuleCall_14_4_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_other_59_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"other",
                      							lv_other_59_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 16 :
                    // InternalKim.g:10188:3: ( ( (lv_monetary_60_0= 'monetary' ) )? ( (lv_value_61_0= 'value' ) ) otherlv_62= 'of' ( (lv_concept_63_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'over' )=>otherlv_64= 'over' ) ( (lv_other_65_0= ruleSimpleConceptDeclaration ) ) )? )
                    {
                    // InternalKim.g:10188:3: ( ( (lv_monetary_60_0= 'monetary' ) )? ( (lv_value_61_0= 'value' ) ) otherlv_62= 'of' ( (lv_concept_63_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'over' )=>otherlv_64= 'over' ) ( (lv_other_65_0= ruleSimpleConceptDeclaration ) ) )? )
                    // InternalKim.g:10189:4: ( (lv_monetary_60_0= 'monetary' ) )? ( (lv_value_61_0= 'value' ) ) otherlv_62= 'of' ( (lv_concept_63_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'over' )=>otherlv_64= 'over' ) ( (lv_other_65_0= ruleSimpleConceptDeclaration ) ) )?
                    {
                    // InternalKim.g:10189:4: ( (lv_monetary_60_0= 'monetary' ) )?
                    int alt216=2;
                    int LA216_0 = input.LA(1);

                    if ( (LA216_0==160) ) {
                        alt216=1;
                    }
                    switch (alt216) {
                        case 1 :
                            // InternalKim.g:10190:5: (lv_monetary_60_0= 'monetary' )
                            {
                            // InternalKim.g:10190:5: (lv_monetary_60_0= 'monetary' )
                            // InternalKim.g:10191:6: lv_monetary_60_0= 'monetary'
                            {
                            lv_monetary_60_0=(Token)match(input,160,FOLLOW_124); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_monetary_60_0, grammarAccess.getConceptAccess().getMonetaryMonetaryKeyword_15_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getConceptRule());
                              						}
                              						setWithLastConsumed(current, "monetary", true, "monetary");
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalKim.g:10203:4: ( (lv_value_61_0= 'value' ) )
                    // InternalKim.g:10204:5: (lv_value_61_0= 'value' )
                    {
                    // InternalKim.g:10204:5: (lv_value_61_0= 'value' )
                    // InternalKim.g:10205:6: lv_value_61_0= 'value'
                    {
                    lv_value_61_0=(Token)match(input,161,FOLLOW_121); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_value_61_0, grammarAccess.getConceptAccess().getValueValueKeyword_15_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "value", true, "value");
                      					
                    }

                    }


                    }

                    otherlv_62=(Token)match(input,123,FOLLOW_110); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_62, grammarAccess.getConceptAccess().getOfKeyword_15_2());
                      			
                    }
                    // InternalKim.g:10221:4: ( (lv_concept_63_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:10222:5: (lv_concept_63_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:10222:5: (lv_concept_63_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:10223:6: lv_concept_63_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_15_3_0());
                      					
                    }
                    pushFollow(FOLLOW_125);
                    lv_concept_63_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_63_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:10240:4: ( ( ( 'over' )=>otherlv_64= 'over' ) ( (lv_other_65_0= ruleSimpleConceptDeclaration ) ) )?
                    int alt217=2;
                    int LA217_0 = input.LA(1);

                    if ( (LA217_0==55) ) {
                        int LA217_1 = input.LA(2);

                        if ( (synpred402_InternalKim()) ) {
                            alt217=1;
                        }
                    }
                    switch (alt217) {
                        case 1 :
                            // InternalKim.g:10241:5: ( ( 'over' )=>otherlv_64= 'over' ) ( (lv_other_65_0= ruleSimpleConceptDeclaration ) )
                            {
                            // InternalKim.g:10241:5: ( ( 'over' )=>otherlv_64= 'over' )
                            // InternalKim.g:10242:6: ( 'over' )=>otherlv_64= 'over'
                            {
                            otherlv_64=(Token)match(input,55,FOLLOW_110); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_64, grammarAccess.getConceptAccess().getOverKeyword_15_4_0());
                              					
                            }

                            }

                            // InternalKim.g:10248:5: ( (lv_other_65_0= ruleSimpleConceptDeclaration ) )
                            // InternalKim.g:10249:6: (lv_other_65_0= ruleSimpleConceptDeclaration )
                            {
                            // InternalKim.g:10249:6: (lv_other_65_0= ruleSimpleConceptDeclaration )
                            // InternalKim.g:10250:7: lv_other_65_0= ruleSimpleConceptDeclaration
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getConceptAccess().getOtherSimpleConceptDeclarationParserRuleCall_15_4_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_other_65_0=ruleSimpleConceptDeclaration();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getConceptRule());
                              							}
                              							set(
                              								current,
                              								"other",
                              								lv_other_65_0,
                              								"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 17 :
                    // InternalKim.g:10270:3: ( ( (lv_occurrence_66_0= 'occurrence' ) ) otherlv_67= 'of' ( (lv_concept_68_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:10270:3: ( ( (lv_occurrence_66_0= 'occurrence' ) ) otherlv_67= 'of' ( (lv_concept_68_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:10271:4: ( (lv_occurrence_66_0= 'occurrence' ) ) otherlv_67= 'of' ( (lv_concept_68_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:10271:4: ( (lv_occurrence_66_0= 'occurrence' ) )
                    // InternalKim.g:10272:5: (lv_occurrence_66_0= 'occurrence' )
                    {
                    // InternalKim.g:10272:5: (lv_occurrence_66_0= 'occurrence' )
                    // InternalKim.g:10273:6: lv_occurrence_66_0= 'occurrence'
                    {
                    lv_occurrence_66_0=(Token)match(input,162,FOLLOW_121); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_occurrence_66_0, grammarAccess.getConceptAccess().getOccurrenceOccurrenceKeyword_16_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "occurrence", true, "occurrence");
                      					
                    }

                    }


                    }

                    otherlv_67=(Token)match(input,123,FOLLOW_110); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_67, grammarAccess.getConceptAccess().getOfKeyword_16_1());
                      			
                    }
                    // InternalKim.g:10289:4: ( (lv_concept_68_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:10290:5: (lv_concept_68_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:10290:5: (lv_concept_68_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:10291:6: lv_concept_68_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_16_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_68_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_68_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 18 :
                    // InternalKim.g:10310:3: ( ( (lv_authConcept_69_0= 'identity' ) ) ( ( ( (lv_stringIdentifier_70_1= RULE_ID | lv_stringIdentifier_70_2= RULE_STRING | lv_stringIdentifier_70_3= RULE_UPPERCASE_ID | lv_stringIdentifier_70_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_intIdentifier_71_0= RULE_INT ) ) ) otherlv_72= 'by' ( ( (lv_authority_73_1= RULE_UPPERCASE_ID | lv_authority_73_2= RULE_UPPERCASE_PATH ) ) ) )
                    {
                    // InternalKim.g:10310:3: ( ( (lv_authConcept_69_0= 'identity' ) ) ( ( ( (lv_stringIdentifier_70_1= RULE_ID | lv_stringIdentifier_70_2= RULE_STRING | lv_stringIdentifier_70_3= RULE_UPPERCASE_ID | lv_stringIdentifier_70_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_intIdentifier_71_0= RULE_INT ) ) ) otherlv_72= 'by' ( ( (lv_authority_73_1= RULE_UPPERCASE_ID | lv_authority_73_2= RULE_UPPERCASE_PATH ) ) ) )
                    // InternalKim.g:10311:4: ( (lv_authConcept_69_0= 'identity' ) ) ( ( ( (lv_stringIdentifier_70_1= RULE_ID | lv_stringIdentifier_70_2= RULE_STRING | lv_stringIdentifier_70_3= RULE_UPPERCASE_ID | lv_stringIdentifier_70_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_intIdentifier_71_0= RULE_INT ) ) ) otherlv_72= 'by' ( ( (lv_authority_73_1= RULE_UPPERCASE_ID | lv_authority_73_2= RULE_UPPERCASE_PATH ) ) )
                    {
                    // InternalKim.g:10311:4: ( (lv_authConcept_69_0= 'identity' ) )
                    // InternalKim.g:10312:5: (lv_authConcept_69_0= 'identity' )
                    {
                    // InternalKim.g:10312:5: (lv_authConcept_69_0= 'identity' )
                    // InternalKim.g:10313:6: lv_authConcept_69_0= 'identity'
                    {
                    lv_authConcept_69_0=(Token)match(input,163,FOLLOW_119); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_authConcept_69_0, grammarAccess.getConceptAccess().getAuthConceptIdentityKeyword_17_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "authConcept", true, "identity");
                      					
                    }

                    }


                    }

                    // InternalKim.g:10325:4: ( ( ( (lv_stringIdentifier_70_1= RULE_ID | lv_stringIdentifier_70_2= RULE_STRING | lv_stringIdentifier_70_3= RULE_UPPERCASE_ID | lv_stringIdentifier_70_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_intIdentifier_71_0= RULE_INT ) ) )
                    int alt219=2;
                    int LA219_0 = input.LA(1);

                    if ( ((LA219_0>=RULE_UPPERCASE_ID && LA219_0<=RULE_STRING)||LA219_0==RULE_CAMELCASE_ID||LA219_0==RULE_ID) ) {
                        alt219=1;
                    }
                    else if ( (LA219_0==RULE_INT) ) {
                        alt219=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 219, 0, input);

                        throw nvae;
                    }
                    switch (alt219) {
                        case 1 :
                            // InternalKim.g:10326:5: ( ( (lv_stringIdentifier_70_1= RULE_ID | lv_stringIdentifier_70_2= RULE_STRING | lv_stringIdentifier_70_3= RULE_UPPERCASE_ID | lv_stringIdentifier_70_4= RULE_CAMELCASE_ID ) ) )
                            {
                            // InternalKim.g:10326:5: ( ( (lv_stringIdentifier_70_1= RULE_ID | lv_stringIdentifier_70_2= RULE_STRING | lv_stringIdentifier_70_3= RULE_UPPERCASE_ID | lv_stringIdentifier_70_4= RULE_CAMELCASE_ID ) ) )
                            // InternalKim.g:10327:6: ( (lv_stringIdentifier_70_1= RULE_ID | lv_stringIdentifier_70_2= RULE_STRING | lv_stringIdentifier_70_3= RULE_UPPERCASE_ID | lv_stringIdentifier_70_4= RULE_CAMELCASE_ID ) )
                            {
                            // InternalKim.g:10327:6: ( (lv_stringIdentifier_70_1= RULE_ID | lv_stringIdentifier_70_2= RULE_STRING | lv_stringIdentifier_70_3= RULE_UPPERCASE_ID | lv_stringIdentifier_70_4= RULE_CAMELCASE_ID ) )
                            // InternalKim.g:10328:7: (lv_stringIdentifier_70_1= RULE_ID | lv_stringIdentifier_70_2= RULE_STRING | lv_stringIdentifier_70_3= RULE_UPPERCASE_ID | lv_stringIdentifier_70_4= RULE_CAMELCASE_ID )
                            {
                            // InternalKim.g:10328:7: (lv_stringIdentifier_70_1= RULE_ID | lv_stringIdentifier_70_2= RULE_STRING | lv_stringIdentifier_70_3= RULE_UPPERCASE_ID | lv_stringIdentifier_70_4= RULE_CAMELCASE_ID )
                            int alt218=4;
                            switch ( input.LA(1) ) {
                            case RULE_ID:
                                {
                                alt218=1;
                                }
                                break;
                            case RULE_STRING:
                                {
                                alt218=2;
                                }
                                break;
                            case RULE_UPPERCASE_ID:
                                {
                                alt218=3;
                                }
                                break;
                            case RULE_CAMELCASE_ID:
                                {
                                alt218=4;
                                }
                                break;
                            default:
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 218, 0, input);

                                throw nvae;
                            }

                            switch (alt218) {
                                case 1 :
                                    // InternalKim.g:10329:8: lv_stringIdentifier_70_1= RULE_ID
                                    {
                                    lv_stringIdentifier_70_1=(Token)match(input,RULE_ID,FOLLOW_112); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_stringIdentifier_70_1, grammarAccess.getConceptAccess().getStringIdentifierIDTerminalRuleCall_17_1_0_0_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getConceptRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"stringIdentifier",
                                      									lv_stringIdentifier_70_1,
                                      									"org.eclipse.xtext.common.Terminals.ID");
                                      							
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:10344:8: lv_stringIdentifier_70_2= RULE_STRING
                                    {
                                    lv_stringIdentifier_70_2=(Token)match(input,RULE_STRING,FOLLOW_112); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_stringIdentifier_70_2, grammarAccess.getConceptAccess().getStringIdentifierSTRINGTerminalRuleCall_17_1_0_0_1());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getConceptRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"stringIdentifier",
                                      									lv_stringIdentifier_70_2,
                                      									"org.eclipse.xtext.common.Terminals.STRING");
                                      							
                                    }

                                    }
                                    break;
                                case 3 :
                                    // InternalKim.g:10359:8: lv_stringIdentifier_70_3= RULE_UPPERCASE_ID
                                    {
                                    lv_stringIdentifier_70_3=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_112); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_stringIdentifier_70_3, grammarAccess.getConceptAccess().getStringIdentifierUPPERCASE_IDTerminalRuleCall_17_1_0_0_2());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getConceptRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"stringIdentifier",
                                      									lv_stringIdentifier_70_3,
                                      									"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                                      							
                                    }

                                    }
                                    break;
                                case 4 :
                                    // InternalKim.g:10374:8: lv_stringIdentifier_70_4= RULE_CAMELCASE_ID
                                    {
                                    lv_stringIdentifier_70_4=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_112); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_stringIdentifier_70_4, grammarAccess.getConceptAccess().getStringIdentifierCAMELCASE_IDTerminalRuleCall_17_1_0_0_3());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getConceptRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"stringIdentifier",
                                      									lv_stringIdentifier_70_4,
                                      									"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                                      							
                                    }

                                    }
                                    break;

                            }


                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:10392:5: ( (lv_intIdentifier_71_0= RULE_INT ) )
                            {
                            // InternalKim.g:10392:5: ( (lv_intIdentifier_71_0= RULE_INT ) )
                            // InternalKim.g:10393:6: (lv_intIdentifier_71_0= RULE_INT )
                            {
                            // InternalKim.g:10393:6: (lv_intIdentifier_71_0= RULE_INT )
                            // InternalKim.g:10394:7: lv_intIdentifier_71_0= RULE_INT
                            {
                            lv_intIdentifier_71_0=(Token)match(input,RULE_INT,FOLLOW_112); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_intIdentifier_71_0, grammarAccess.getConceptAccess().getIntIdentifierINTTerminalRuleCall_17_1_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getConceptRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"intIdentifier",
                              								lv_intIdentifier_71_0,
                              								"org.eclipse.xtext.common.Terminals.INT");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    otherlv_72=(Token)match(input,89,FOLLOW_120); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_72, grammarAccess.getConceptAccess().getByKeyword_17_2());
                      			
                    }
                    // InternalKim.g:10415:4: ( ( (lv_authority_73_1= RULE_UPPERCASE_ID | lv_authority_73_2= RULE_UPPERCASE_PATH ) ) )
                    // InternalKim.g:10416:5: ( (lv_authority_73_1= RULE_UPPERCASE_ID | lv_authority_73_2= RULE_UPPERCASE_PATH ) )
                    {
                    // InternalKim.g:10416:5: ( (lv_authority_73_1= RULE_UPPERCASE_ID | lv_authority_73_2= RULE_UPPERCASE_PATH ) )
                    // InternalKim.g:10417:6: (lv_authority_73_1= RULE_UPPERCASE_ID | lv_authority_73_2= RULE_UPPERCASE_PATH )
                    {
                    // InternalKim.g:10417:6: (lv_authority_73_1= RULE_UPPERCASE_ID | lv_authority_73_2= RULE_UPPERCASE_PATH )
                    int alt220=2;
                    int LA220_0 = input.LA(1);

                    if ( (LA220_0==RULE_UPPERCASE_ID) ) {
                        alt220=1;
                    }
                    else if ( (LA220_0==RULE_UPPERCASE_PATH) ) {
                        alt220=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 220, 0, input);

                        throw nvae;
                    }
                    switch (alt220) {
                        case 1 :
                            // InternalKim.g:10418:7: lv_authority_73_1= RULE_UPPERCASE_ID
                            {
                            lv_authority_73_1=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_authority_73_1, grammarAccess.getConceptAccess().getAuthorityUPPERCASE_IDTerminalRuleCall_17_3_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getConceptRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"authority",
                              								lv_authority_73_1,
                              								"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:10433:7: lv_authority_73_2= RULE_UPPERCASE_PATH
                            {
                            lv_authority_73_2=(Token)match(input,RULE_UPPERCASE_PATH,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_authority_73_2, grammarAccess.getConceptAccess().getAuthorityUPPERCASE_PATHTerminalRuleCall_17_3_0_1());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getConceptRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"authority",
                              								lv_authority_73_2,
                              								"org.integratedmodelling.kim.Kim.UPPERCASE_PATH");
                              						
                            }

                            }
                            break;

                    }


                    }


                    }


                    }


                    }
                    break;
                case 19 :
                    // InternalKim.g:10452:3: (otherlv_74= '(' ( (lv_declaration_75_0= ruleExpression ) ) otherlv_76= ')' )
                    {
                    // InternalKim.g:10452:3: (otherlv_74= '(' ( (lv_declaration_75_0= ruleExpression ) ) otherlv_76= ')' )
                    // InternalKim.g:10453:4: otherlv_74= '(' ( (lv_declaration_75_0= ruleExpression ) ) otherlv_76= ')'
                    {
                    otherlv_74=(Token)match(input,38,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_74, grammarAccess.getConceptAccess().getLeftParenthesisKeyword_18_0());
                      			
                    }
                    // InternalKim.g:10457:4: ( (lv_declaration_75_0= ruleExpression ) )
                    // InternalKim.g:10458:5: (lv_declaration_75_0= ruleExpression )
                    {
                    // InternalKim.g:10458:5: (lv_declaration_75_0= ruleExpression )
                    // InternalKim.g:10459:6: lv_declaration_75_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getDeclarationExpressionParserRuleCall_18_1_0());
                      					
                    }
                    pushFollow(FOLLOW_96);
                    lv_declaration_75_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"declaration",
                      							lv_declaration_75_0,
                      							"org.integratedmodelling.kim.Kim.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_76=(Token)match(input,41,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_76, grammarAccess.getConceptAccess().getRightParenthesisKeyword_18_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConcept"


    // $ANTLR start "entryRuleExpression"
    // InternalKim.g:10485:1: entryRuleExpression returns [EObject current=null] : iv_ruleExpression= ruleExpression EOF ;
    public final EObject entryRuleExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpression = null;


        try {
            // InternalKim.g:10485:51: (iv_ruleExpression= ruleExpression EOF )
            // InternalKim.g:10486:2: iv_ruleExpression= ruleExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExpression=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExpression"


    // $ANTLR start "ruleExpression"
    // InternalKim.g:10492:1: ruleExpression returns [EObject current=null] : this_Term_0= ruleTerm ;
    public final EObject ruleExpression() throws RecognitionException {
        EObject current = null;

        EObject this_Term_0 = null;



        	enterRule();

        try {
            // InternalKim.g:10498:2: (this_Term_0= ruleTerm )
            // InternalKim.g:10499:2: this_Term_0= ruleTerm
            {
            if ( state.backtracking==0 ) {

              		/* */
              	
            }
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getExpressionAccess().getTermParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_Term_0=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_Term_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExpression"


    // $ANTLR start "entryRuleTerm"
    // InternalKim.g:10513:1: entryRuleTerm returns [EObject current=null] : iv_ruleTerm= ruleTerm EOF ;
    public final EObject entryRuleTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTerm = null;


        try {
            // InternalKim.g:10513:45: (iv_ruleTerm= ruleTerm EOF )
            // InternalKim.g:10514:2: iv_ruleTerm= ruleTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTermRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTerm=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTerm; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTerm"


    // $ANTLR start "ruleTerm"
    // InternalKim.g:10520:1: ruleTerm returns [EObject current=null] : (this_Factor_0= ruleFactor ( ( (lv_operators_1_0= 'or' ) ) ( (lv_operands_2_0= ruleFactor ) ) )* ) ;
    public final EObject ruleTerm() throws RecognitionException {
        EObject current = null;

        Token lv_operators_1_0=null;
        EObject this_Factor_0 = null;

        EObject lv_operands_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:10526:2: ( (this_Factor_0= ruleFactor ( ( (lv_operators_1_0= 'or' ) ) ( (lv_operands_2_0= ruleFactor ) ) )* ) )
            // InternalKim.g:10527:2: (this_Factor_0= ruleFactor ( ( (lv_operators_1_0= 'or' ) ) ( (lv_operands_2_0= ruleFactor ) ) )* )
            {
            // InternalKim.g:10527:2: (this_Factor_0= ruleFactor ( ( (lv_operators_1_0= 'or' ) ) ( (lv_operands_2_0= ruleFactor ) ) )* )
            // InternalKim.g:10528:3: this_Factor_0= ruleFactor ( ( (lv_operators_1_0= 'or' ) ) ( (lv_operands_2_0= ruleFactor ) ) )*
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getTermAccess().getFactorParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_126);
            this_Factor_0=ruleFactor();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Factor_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKim.g:10539:3: ( ( (lv_operators_1_0= 'or' ) ) ( (lv_operands_2_0= ruleFactor ) ) )*
            loop222:
            do {
                int alt222=2;
                int LA222_0 = input.LA(1);

                if ( (LA222_0==164) ) {
                    int LA222_2 = input.LA(2);

                    if ( (synpred411_InternalKim()) ) {
                        alt222=1;
                    }


                }


                switch (alt222) {
            	case 1 :
            	    // InternalKim.g:10540:4: ( (lv_operators_1_0= 'or' ) ) ( (lv_operands_2_0= ruleFactor ) )
            	    {
            	    // InternalKim.g:10540:4: ( (lv_operators_1_0= 'or' ) )
            	    // InternalKim.g:10541:5: (lv_operators_1_0= 'or' )
            	    {
            	    // InternalKim.g:10541:5: (lv_operators_1_0= 'or' )
            	    // InternalKim.g:10542:6: lv_operators_1_0= 'or'
            	    {
            	    lv_operators_1_0=(Token)match(input,164,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(lv_operators_1_0, grammarAccess.getTermAccess().getOperatorsOrKeyword_1_0_0());
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getTermRule());
            	      						}
            	      						addWithLastConsumed(current, "operators", lv_operators_1_0, "or");
            	      					
            	    }

            	    }


            	    }

            	    // InternalKim.g:10554:4: ( (lv_operands_2_0= ruleFactor ) )
            	    // InternalKim.g:10555:5: (lv_operands_2_0= ruleFactor )
            	    {
            	    // InternalKim.g:10555:5: (lv_operands_2_0= ruleFactor )
            	    // InternalKim.g:10556:6: lv_operands_2_0= ruleFactor
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getTermAccess().getOperandsFactorParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_126);
            	    lv_operands_2_0=ruleFactor();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getTermRule());
            	      						}
            	      						add(
            	      							current,
            	      							"operands",
            	      							lv_operands_2_0,
            	      							"org.integratedmodelling.kim.Kim.Factor");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop222;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTerm"


    // $ANTLR start "entryRuleFactor"
    // InternalKim.g:10578:1: entryRuleFactor returns [EObject current=null] : iv_ruleFactor= ruleFactor EOF ;
    public final EObject entryRuleFactor() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFactor = null;


        try {
            // InternalKim.g:10578:47: (iv_ruleFactor= ruleFactor EOF )
            // InternalKim.g:10579:2: iv_ruleFactor= ruleFactor EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFactorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFactor=ruleFactor();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFactor; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFactor"


    // $ANTLR start "ruleFactor"
    // InternalKim.g:10585:1: ruleFactor returns [EObject current=null] : (this_ConceptDeclaration_0= ruleConceptDeclaration ( ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) ) ( (lv_operands_2_0= ruleTerm ) ) )* ) ;
    public final EObject ruleFactor() throws RecognitionException {
        EObject current = null;

        Token lv_operators_1_1=null;
        Token lv_operators_1_2=null;
        EObject this_ConceptDeclaration_0 = null;

        EObject lv_operands_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:10591:2: ( (this_ConceptDeclaration_0= ruleConceptDeclaration ( ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) ) ( (lv_operands_2_0= ruleTerm ) ) )* ) )
            // InternalKim.g:10592:2: (this_ConceptDeclaration_0= ruleConceptDeclaration ( ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) ) ( (lv_operands_2_0= ruleTerm ) ) )* )
            {
            // InternalKim.g:10592:2: (this_ConceptDeclaration_0= ruleConceptDeclaration ( ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) ) ( (lv_operands_2_0= ruleTerm ) ) )* )
            // InternalKim.g:10593:3: this_ConceptDeclaration_0= ruleConceptDeclaration ( ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) ) ( (lv_operands_2_0= ruleTerm ) ) )*
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getFactorAccess().getConceptDeclarationParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_127);
            this_ConceptDeclaration_0=ruleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ConceptDeclaration_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKim.g:10604:3: ( ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) ) ( (lv_operands_2_0= ruleTerm ) ) )*
            loop224:
            do {
                int alt224=2;
                int LA224_0 = input.LA(1);

                if ( (LA224_0==165) ) {
                    int LA224_2 = input.LA(2);

                    if ( (synpred413_InternalKim()) ) {
                        alt224=1;
                    }


                }
                else if ( (LA224_0==166) ) {
                    int LA224_3 = input.LA(2);

                    if ( (synpred413_InternalKim()) ) {
                        alt224=1;
                    }


                }


                switch (alt224) {
            	case 1 :
            	    // InternalKim.g:10605:4: ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) ) ( (lv_operands_2_0= ruleTerm ) )
            	    {
            	    // InternalKim.g:10605:4: ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) )
            	    // InternalKim.g:10606:5: ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) )
            	    {
            	    // InternalKim.g:10606:5: ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) )
            	    // InternalKim.g:10607:6: (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' )
            	    {
            	    // InternalKim.g:10607:6: (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' )
            	    int alt223=2;
            	    int LA223_0 = input.LA(1);

            	    if ( (LA223_0==165) ) {
            	        alt223=1;
            	    }
            	    else if ( (LA223_0==166) ) {
            	        alt223=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 223, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt223) {
            	        case 1 :
            	            // InternalKim.g:10608:7: lv_operators_1_1= 'and'
            	            {
            	            lv_operators_1_1=(Token)match(input,165,FOLLOW_23); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							newLeafNode(lv_operators_1_1, grammarAccess.getFactorAccess().getOperatorsAndKeyword_1_0_0_0());
            	              						
            	            }
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElement(grammarAccess.getFactorRule());
            	              							}
            	              							addWithLastConsumed(current, "operators", lv_operators_1_1, null);
            	              						
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:10619:7: lv_operators_1_2= 'follows'
            	            {
            	            lv_operators_1_2=(Token)match(input,166,FOLLOW_23); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							newLeafNode(lv_operators_1_2, grammarAccess.getFactorAccess().getOperatorsFollowsKeyword_1_0_0_1());
            	              						
            	            }
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElement(grammarAccess.getFactorRule());
            	              							}
            	              							addWithLastConsumed(current, "operators", lv_operators_1_2, null);
            	              						
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }

            	    // InternalKim.g:10632:4: ( (lv_operands_2_0= ruleTerm ) )
            	    // InternalKim.g:10633:5: (lv_operands_2_0= ruleTerm )
            	    {
            	    // InternalKim.g:10633:5: (lv_operands_2_0= ruleTerm )
            	    // InternalKim.g:10634:6: lv_operands_2_0= ruleTerm
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getFactorAccess().getOperandsTermParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_127);
            	    lv_operands_2_0=ruleTerm();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getFactorRule());
            	      						}
            	      						add(
            	      							current,
            	      							"operands",
            	      							lv_operands_2_0,
            	      							"org.integratedmodelling.kim.Kim.Term");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop224;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFactor"


    // $ANTLR start "entryRuleSimpleConceptDeclaration"
    // InternalKim.g:10656:1: entryRuleSimpleConceptDeclaration returns [EObject current=null] : iv_ruleSimpleConceptDeclaration= ruleSimpleConceptDeclaration EOF ;
    public final EObject entryRuleSimpleConceptDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimpleConceptDeclaration = null;


        try {
            // InternalKim.g:10656:65: (iv_ruleSimpleConceptDeclaration= ruleSimpleConceptDeclaration EOF )
            // InternalKim.g:10657:2: iv_ruleSimpleConceptDeclaration= ruleSimpleConceptDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimpleConceptDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimpleConceptDeclaration=ruleSimpleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimpleConceptDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimpleConceptDeclaration"


    // $ANTLR start "ruleSimpleConceptDeclaration"
    // InternalKim.g:10663:1: ruleSimpleConceptDeclaration returns [EObject current=null] : ( ( (lv_name_0_0= RULE_STRING ) )? ( (lv_main_1_0= ruleConcept ) )+ ) ;
    public final EObject ruleSimpleConceptDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        EObject lv_main_1_0 = null;



        	enterRule();

        try {
            // InternalKim.g:10669:2: ( ( ( (lv_name_0_0= RULE_STRING ) )? ( (lv_main_1_0= ruleConcept ) )+ ) )
            // InternalKim.g:10670:2: ( ( (lv_name_0_0= RULE_STRING ) )? ( (lv_main_1_0= ruleConcept ) )+ )
            {
            // InternalKim.g:10670:2: ( ( (lv_name_0_0= RULE_STRING ) )? ( (lv_main_1_0= ruleConcept ) )+ )
            // InternalKim.g:10671:3: ( (lv_name_0_0= RULE_STRING ) )? ( (lv_main_1_0= ruleConcept ) )+
            {
            // InternalKim.g:10671:3: ( (lv_name_0_0= RULE_STRING ) )?
            int alt225=2;
            int LA225_0 = input.LA(1);

            if ( (LA225_0==RULE_STRING) ) {
                alt225=1;
            }
            switch (alt225) {
                case 1 :
                    // InternalKim.g:10672:4: (lv_name_0_0= RULE_STRING )
                    {
                    // InternalKim.g:10672:4: (lv_name_0_0= RULE_STRING )
                    // InternalKim.g:10673:5: lv_name_0_0= RULE_STRING
                    {
                    lv_name_0_0=(Token)match(input,RULE_STRING,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_0_0, grammarAccess.getSimpleConceptDeclarationAccess().getNameSTRINGTerminalRuleCall_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getSimpleConceptDeclarationRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_0_0,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:10689:3: ( (lv_main_1_0= ruleConcept ) )+
            int cnt226=0;
            loop226:
            do {
                int alt226=2;
                alt226 = dfa226.predict(input);
                switch (alt226) {
            	case 1 :
            	    // InternalKim.g:10690:4: (lv_main_1_0= ruleConcept )
            	    {
            	    // InternalKim.g:10690:4: (lv_main_1_0= ruleConcept )
            	    // InternalKim.g:10691:5: lv_main_1_0= ruleConcept
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getSimpleConceptDeclarationAccess().getMainConceptParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_128);
            	    lv_main_1_0=ruleConcept();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getSimpleConceptDeclarationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"main",
            	      						lv_main_1_0,
            	      						"org.integratedmodelling.kim.Kim.Concept");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt226 >= 1 ) break loop226;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(226, input);
                        throw eee;
                }
                cnt226++;
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimpleConceptDeclaration"


    // $ANTLR start "entryRuleUpperOntologyDefinition"
    // InternalKim.g:10712:1: entryRuleUpperOntologyDefinition returns [EObject current=null] : iv_ruleUpperOntologyDefinition= ruleUpperOntologyDefinition EOF ;
    public final EObject entryRuleUpperOntologyDefinition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUpperOntologyDefinition = null;


        try {
            // InternalKim.g:10712:64: (iv_ruleUpperOntologyDefinition= ruleUpperOntologyDefinition EOF )
            // InternalKim.g:10713:2: iv_ruleUpperOntologyDefinition= ruleUpperOntologyDefinition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUpperOntologyDefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUpperOntologyDefinition=ruleUpperOntologyDefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUpperOntologyDefinition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUpperOntologyDefinition"


    // $ANTLR start "ruleUpperOntologyDefinition"
    // InternalKim.g:10719:1: ruleUpperOntologyDefinition returns [EObject current=null] : (otherlv_0= 'model' ( ( ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? ) otherlv_6= 'using' ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) ) ) | ( ( (lv_operand_8_0= ruleOPERATOR_TARGET ) ) otherlv_9= 'using' ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) ) ) ) ) ;
    public final EObject ruleUpperOntologyDefinition() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_agentSpecifier_1_1=null;
        Token lv_agentSpecifier_1_2=null;
        Token lv_agentSpecifier_1_3=null;
        Token lv_concept_2_0=null;
        Token lv_concept_5_0=null;
        Token otherlv_6=null;
        Token otherlv_9=null;
        AntlrDatatypeRuleToken lv_propertySpecifiers_3_0 = null;

        AntlrDatatypeRuleToken lv_propertySpecifiers_4_0 = null;

        AntlrDatatypeRuleToken lv_coreconcept_7_1 = null;

        AntlrDatatypeRuleToken lv_coreconcept_7_2 = null;

        AntlrDatatypeRuleToken lv_operand_8_0 = null;

        AntlrDatatypeRuleToken lv_property_10_1 = null;

        AntlrDatatypeRuleToken lv_property_10_2 = null;



        	enterRule();

        try {
            // InternalKim.g:10725:2: ( (otherlv_0= 'model' ( ( ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? ) otherlv_6= 'using' ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) ) ) | ( ( (lv_operand_8_0= ruleOPERATOR_TARGET ) ) otherlv_9= 'using' ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) ) ) ) ) )
            // InternalKim.g:10726:2: (otherlv_0= 'model' ( ( ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? ) otherlv_6= 'using' ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) ) ) | ( ( (lv_operand_8_0= ruleOPERATOR_TARGET ) ) otherlv_9= 'using' ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) ) ) ) )
            {
            // InternalKim.g:10726:2: (otherlv_0= 'model' ( ( ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? ) otherlv_6= 'using' ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) ) ) | ( ( (lv_operand_8_0= ruleOPERATOR_TARGET ) ) otherlv_9= 'using' ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) ) ) ) )
            // InternalKim.g:10727:3: otherlv_0= 'model' ( ( ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? ) otherlv_6= 'using' ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) ) ) | ( ( (lv_operand_8_0= ruleOPERATOR_TARGET ) ) otherlv_9= 'using' ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) ) ) )
            {
            otherlv_0=(Token)match(input,70,FOLLOW_129); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getUpperOntologyDefinitionAccess().getModelKeyword_0());
              		
            }
            // InternalKim.g:10731:3: ( ( ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? ) otherlv_6= 'using' ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) ) ) | ( ( (lv_operand_8_0= ruleOPERATOR_TARGET ) ) otherlv_9= 'using' ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) ) ) )
            int alt233=2;
            int LA233_0 = input.LA(1);

            if ( (LA233_0==31||(LA233_0>=167 && LA233_0<=169)||(LA233_0>=248 && LA233_0<=249)) ) {
                alt233=1;
            }
            else if ( (LA233_0==60||(LA233_0>=124 && LA233_0<=126)||(LA233_0>=134 && LA233_0<=139)) ) {
                alt233=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 233, 0, input);

                throw nvae;
            }
            switch (alt233) {
                case 1 :
                    // InternalKim.g:10732:4: ( ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? ) otherlv_6= 'using' ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) ) )
                    {
                    // InternalKim.g:10732:4: ( ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? ) otherlv_6= 'using' ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) ) )
                    // InternalKim.g:10733:5: ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? ) otherlv_6= 'using' ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) )
                    {
                    // InternalKim.g:10733:5: ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? )
                    int alt230=2;
                    int LA230_0 = input.LA(1);

                    if ( ((LA230_0>=167 && LA230_0<=169)) ) {
                        alt230=1;
                    }
                    else if ( (LA230_0==31||(LA230_0>=248 && LA230_0<=249)) ) {
                        alt230=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 230, 0, input);

                        throw nvae;
                    }
                    switch (alt230) {
                        case 1 :
                            // InternalKim.g:10734:6: ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) )
                            {
                            // InternalKim.g:10734:6: ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) )
                            // InternalKim.g:10735:7: ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) )
                            {
                            // InternalKim.g:10735:7: ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) )
                            // InternalKim.g:10736:8: ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) )
                            {
                            // InternalKim.g:10736:8: ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) )
                            // InternalKim.g:10737:9: (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' )
                            {
                            // InternalKim.g:10737:9: (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' )
                            int alt227=3;
                            switch ( input.LA(1) ) {
                            case 167:
                                {
                                alt227=1;
                                }
                                break;
                            case 168:
                                {
                                alt227=2;
                                }
                                break;
                            case 169:
                                {
                                alt227=3;
                                }
                                break;
                            default:
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 227, 0, input);

                                throw nvae;
                            }

                            switch (alt227) {
                                case 1 :
                                    // InternalKim.g:10738:10: lv_agentSpecifier_1_1= 'deliberative'
                                    {
                                    lv_agentSpecifier_1_1=(Token)match(input,167,FOLLOW_130); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										newLeafNode(lv_agentSpecifier_1_1, grammarAccess.getUpperOntologyDefinitionAccess().getAgentSpecifierDeliberativeKeyword_1_0_0_0_0_0_0());
                                      									
                                    }
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElement(grammarAccess.getUpperOntologyDefinitionRule());
                                      										}
                                      										setWithLastConsumed(current, "agentSpecifier", lv_agentSpecifier_1_1, null);
                                      									
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:10749:10: lv_agentSpecifier_1_2= 'interactive'
                                    {
                                    lv_agentSpecifier_1_2=(Token)match(input,168,FOLLOW_130); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										newLeafNode(lv_agentSpecifier_1_2, grammarAccess.getUpperOntologyDefinitionAccess().getAgentSpecifierInteractiveKeyword_1_0_0_0_0_0_1());
                                      									
                                    }
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElement(grammarAccess.getUpperOntologyDefinitionRule());
                                      										}
                                      										setWithLastConsumed(current, "agentSpecifier", lv_agentSpecifier_1_2, null);
                                      									
                                    }

                                    }
                                    break;
                                case 3 :
                                    // InternalKim.g:10760:10: lv_agentSpecifier_1_3= 'reactive'
                                    {
                                    lv_agentSpecifier_1_3=(Token)match(input,169,FOLLOW_130); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										newLeafNode(lv_agentSpecifier_1_3, grammarAccess.getUpperOntologyDefinitionAccess().getAgentSpecifierReactiveKeyword_1_0_0_0_0_0_2());
                                      									
                                    }
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElement(grammarAccess.getUpperOntologyDefinitionRule());
                                      										}
                                      										setWithLastConsumed(current, "agentSpecifier", lv_agentSpecifier_1_3, null);
                                      									
                                    }

                                    }
                                    break;

                            }


                            }


                            }

                            // InternalKim.g:10773:7: ( (lv_concept_2_0= 'agent' ) )
                            // InternalKim.g:10774:8: (lv_concept_2_0= 'agent' )
                            {
                            // InternalKim.g:10774:8: (lv_concept_2_0= 'agent' )
                            // InternalKim.g:10775:9: lv_concept_2_0= 'agent'
                            {
                            lv_concept_2_0=(Token)match(input,170,FOLLOW_131); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              									newLeafNode(lv_concept_2_0, grammarAccess.getUpperOntologyDefinitionAccess().getConceptAgentKeyword_1_0_0_0_1_0());
                              								
                            }
                            if ( state.backtracking==0 ) {

                              									if (current==null) {
                              										current = createModelElement(grammarAccess.getUpperOntologyDefinitionRule());
                              									}
                              									setWithLastConsumed(current, "concept", lv_concept_2_0, "agent");
                              								
                            }

                            }


                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:10789:6: ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )?
                            {
                            // InternalKim.g:10789:6: ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )?
                            int alt229=2;
                            int LA229_0 = input.LA(1);

                            if ( ((LA229_0>=248 && LA229_0<=249)) ) {
                                alt229=1;
                            }
                            switch (alt229) {
                                case 1 :
                                    // InternalKim.g:10790:7: ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) )
                                    {
                                    // InternalKim.g:10790:7: ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) )
                                    // InternalKim.g:10791:8: (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE )
                                    {
                                    // InternalKim.g:10791:8: (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE )
                                    // InternalKim.g:10792:9: lv_propertySpecifiers_3_0= rulePROPERTY_TYPE
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getUpperOntologyDefinitionAccess().getPropertySpecifiersPROPERTY_TYPEParserRuleCall_1_0_0_1_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_132);
                                    lv_propertySpecifiers_3_0=rulePROPERTY_TYPE();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getUpperOntologyDefinitionRule());
                                      									}
                                      									add(
                                      										current,
                                      										"propertySpecifiers",
                                      										lv_propertySpecifiers_3_0,
                                      										"org.integratedmodelling.kim.Kim.PROPERTY_TYPE");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }

                                    // InternalKim.g:10809:7: ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )*
                                    loop228:
                                    do {
                                        int alt228=2;
                                        int LA228_0 = input.LA(1);

                                        if ( ((LA228_0>=248 && LA228_0<=249)) ) {
                                            alt228=1;
                                        }


                                        switch (alt228) {
                                    	case 1 :
                                    	    // InternalKim.g:10810:8: (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE )
                                    	    {
                                    	    // InternalKim.g:10810:8: (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE )
                                    	    // InternalKim.g:10811:9: lv_propertySpecifiers_4_0= rulePROPERTY_TYPE
                                    	    {
                                    	    if ( state.backtracking==0 ) {

                                    	      									newCompositeNode(grammarAccess.getUpperOntologyDefinitionAccess().getPropertySpecifiersPROPERTY_TYPEParserRuleCall_1_0_0_1_1_0());
                                    	      								
                                    	    }
                                    	    pushFollow(FOLLOW_132);
                                    	    lv_propertySpecifiers_4_0=rulePROPERTY_TYPE();

                                    	    state._fsp--;
                                    	    if (state.failed) return current;
                                    	    if ( state.backtracking==0 ) {

                                    	      									if (current==null) {
                                    	      										current = createModelElementForParent(grammarAccess.getUpperOntologyDefinitionRule());
                                    	      									}
                                    	      									add(
                                    	      										current,
                                    	      										"propertySpecifiers",
                                    	      										lv_propertySpecifiers_4_0,
                                    	      										"org.integratedmodelling.kim.Kim.PROPERTY_TYPE");
                                    	      									afterParserOrEnumRuleCall();
                                    	      								
                                    	    }

                                    	    }


                                    	    }
                                    	    break;

                                    	default :
                                    	    break loop228;
                                        }
                                    } while (true);

                                    // InternalKim.g:10828:7: ( (lv_concept_5_0= 'relationship' ) )
                                    // InternalKim.g:10829:8: (lv_concept_5_0= 'relationship' )
                                    {
                                    // InternalKim.g:10829:8: (lv_concept_5_0= 'relationship' )
                                    // InternalKim.g:10830:9: lv_concept_5_0= 'relationship'
                                    {
                                    lv_concept_5_0=(Token)match(input,171,FOLLOW_131); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_concept_5_0, grammarAccess.getUpperOntologyDefinitionAccess().getConceptRelationshipKeyword_1_0_0_1_2_0());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getUpperOntologyDefinitionRule());
                                      									}
                                      									setWithLastConsumed(current, "concept", lv_concept_5_0, "relationship");
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }

                    otherlv_6=(Token)match(input,31,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getUpperOntologyDefinitionAccess().getUsingKeyword_1_0_1());
                      				
                    }
                    // InternalKim.g:10848:5: ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) )
                    // InternalKim.g:10849:6: ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) )
                    {
                    // InternalKim.g:10849:6: ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) )
                    // InternalKim.g:10850:7: (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId )
                    {
                    // InternalKim.g:10850:7: (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId )
                    int alt231=2;
                    alt231 = dfa231.predict(input);
                    switch (alt231) {
                        case 1 :
                            // InternalKim.g:10851:8: lv_coreconcept_7_1= ruleNamespaceId
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getUpperOntologyDefinitionAccess().getCoreconceptNamespaceIdParserRuleCall_1_0_2_0_0());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_coreconcept_7_1=ruleNamespaceId();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getUpperOntologyDefinitionRule());
                              								}
                              								set(
                              									current,
                              									"coreconcept",
                              									lv_coreconcept_7_1,
                              									"org.integratedmodelling.kim.Kim.NamespaceId");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:10867:8: lv_coreconcept_7_2= rulePropertyId
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getUpperOntologyDefinitionAccess().getCoreconceptPropertyIdParserRuleCall_1_0_2_0_1());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_coreconcept_7_2=rulePropertyId();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getUpperOntologyDefinitionRule());
                              								}
                              								set(
                              									current,
                              									"coreconcept",
                              									lv_coreconcept_7_2,
                              									"org.integratedmodelling.kim.Kim.PropertyId");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }
                            break;

                    }


                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:10887:4: ( ( (lv_operand_8_0= ruleOPERATOR_TARGET ) ) otherlv_9= 'using' ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) ) )
                    {
                    // InternalKim.g:10887:4: ( ( (lv_operand_8_0= ruleOPERATOR_TARGET ) ) otherlv_9= 'using' ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) ) )
                    // InternalKim.g:10888:5: ( (lv_operand_8_0= ruleOPERATOR_TARGET ) ) otherlv_9= 'using' ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) )
                    {
                    // InternalKim.g:10888:5: ( (lv_operand_8_0= ruleOPERATOR_TARGET ) )
                    // InternalKim.g:10889:6: (lv_operand_8_0= ruleOPERATOR_TARGET )
                    {
                    // InternalKim.g:10889:6: (lv_operand_8_0= ruleOPERATOR_TARGET )
                    // InternalKim.g:10890:7: lv_operand_8_0= ruleOPERATOR_TARGET
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getUpperOntologyDefinitionAccess().getOperandOPERATOR_TARGETParserRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FOLLOW_131);
                    lv_operand_8_0=ruleOPERATOR_TARGET();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getUpperOntologyDefinitionRule());
                      							}
                      							set(
                      								current,
                      								"operand",
                      								lv_operand_8_0,
                      								"org.integratedmodelling.kim.Kim.OPERATOR_TARGET");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_9=(Token)match(input,31,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_9, grammarAccess.getUpperOntologyDefinitionAccess().getUsingKeyword_1_1_1());
                      				
                    }
                    // InternalKim.g:10911:5: ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) )
                    // InternalKim.g:10912:6: ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) )
                    {
                    // InternalKim.g:10912:6: ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) )
                    // InternalKim.g:10913:7: (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId )
                    {
                    // InternalKim.g:10913:7: (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId )
                    int alt232=2;
                    alt232 = dfa232.predict(input);
                    switch (alt232) {
                        case 1 :
                            // InternalKim.g:10914:8: lv_property_10_1= rulePropertyId
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getUpperOntologyDefinitionAccess().getPropertyPropertyIdParserRuleCall_1_1_2_0_0());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_property_10_1=rulePropertyId();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getUpperOntologyDefinitionRule());
                              								}
                              								set(
                              									current,
                              									"property",
                              									lv_property_10_1,
                              									"org.integratedmodelling.kim.Kim.PropertyId");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:10930:8: lv_property_10_2= ruleNamespaceId
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getUpperOntologyDefinitionAccess().getPropertyNamespaceIdParserRuleCall_1_1_2_0_1());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_property_10_2=ruleNamespaceId();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getUpperOntologyDefinitionRule());
                              								}
                              								set(
                              									current,
                              									"property",
                              									lv_property_10_2,
                              									"org.integratedmodelling.kim.Kim.NamespaceId");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }
                            break;

                    }


                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUpperOntologyDefinition"


    // $ANTLR start "entryRuleConceptStatement"
    // InternalKim.g:10954:1: entryRuleConceptStatement returns [EObject current=null] : iv_ruleConceptStatement= ruleConceptStatement EOF ;
    public final EObject entryRuleConceptStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConceptStatement = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getConceptStatementAccess().getUnorderedGroup_1()
        	);

        try {
            // InternalKim.g:10958:2: (iv_ruleConceptStatement= ruleConceptStatement EOF )
            // InternalKim.g:10959:2: iv_ruleConceptStatement= ruleConceptStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConceptStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConceptStatement=ruleConceptStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConceptStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleConceptStatement"


    // $ANTLR start "ruleConceptStatement"
    // InternalKim.g:10968:1: ruleConceptStatement returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) ) )* ) ) ) ( (lv_concept_9_0= ruleCONCEPT_TYPE ) ) ( (lv_body_10_0= ruleConceptStatementBody ) ) (otherlv_11= 'named' ( (lv_name_12_0= ruleNamespaceId ) ) )? ) ;
    public final EObject ruleConceptStatement() throws RecognitionException {
        EObject current = null;

        Token lv_abstract_2_0=null;
        Token lv_deniable_3_0=null;
        Token lv_subjective_4_0=null;
        Token lv_agentSpecifier_5_1=null;
        Token lv_agentSpecifier_5_2=null;
        Token lv_agentSpecifier_5_3=null;
        Token lv_attributeSpecifier_8_0=null;
        Token otherlv_11=null;
        EObject lv_annotations_0_0 = null;

        AntlrDatatypeRuleToken lv_propertySpecifiers_6_0 = null;

        AntlrDatatypeRuleToken lv_propertySpecifiers_7_0 = null;

        AntlrDatatypeRuleToken lv_concept_9_0 = null;

        EObject lv_body_10_0 = null;

        AntlrDatatypeRuleToken lv_name_12_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getConceptStatementAccess().getUnorderedGroup_1()
        	);

        try {
            // InternalKim.g:10977:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) ) )* ) ) ) ( (lv_concept_9_0= ruleCONCEPT_TYPE ) ) ( (lv_body_10_0= ruleConceptStatementBody ) ) (otherlv_11= 'named' ( (lv_name_12_0= ruleNamespaceId ) ) )? ) )
            // InternalKim.g:10978:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) ) )* ) ) ) ( (lv_concept_9_0= ruleCONCEPT_TYPE ) ) ( (lv_body_10_0= ruleConceptStatementBody ) ) (otherlv_11= 'named' ( (lv_name_12_0= ruleNamespaceId ) ) )? )
            {
            // InternalKim.g:10978:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) ) )* ) ) ) ( (lv_concept_9_0= ruleCONCEPT_TYPE ) ) ( (lv_body_10_0= ruleConceptStatementBody ) ) (otherlv_11= 'named' ( (lv_name_12_0= ruleNamespaceId ) ) )? )
            // InternalKim.g:10979:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) ) )* ) ) ) ( (lv_concept_9_0= ruleCONCEPT_TYPE ) ) ( (lv_body_10_0= ruleConceptStatementBody ) ) (otherlv_11= 'named' ( (lv_name_12_0= ruleNamespaceId ) ) )?
            {
            // InternalKim.g:10979:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop234:
            do {
                int alt234=2;
                int LA234_0 = input.LA(1);

                if ( (LA234_0==RULE_ANNOTATION_ID) ) {
                    alt234=1;
                }


                switch (alt234) {
            	case 1 :
            	    // InternalKim.g:10980:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalKim.g:10980:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalKim.g:10981:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getConceptStatementAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_133);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getConceptStatementRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"org.integratedmodelling.kim.Kim.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop234;
                }
            } while (true);

            // InternalKim.g:10998:3: ( ( ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) ) )* ) ) )
            // InternalKim.g:10999:4: ( ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) ) )* ) )
            {
            // InternalKim.g:10999:4: ( ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) ) )* ) )
            // InternalKim.g:11000:5: ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1());
            // InternalKim.g:11003:5: ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) ) )* )
            // InternalKim.g:11004:6: ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) ) )*
            {
            // InternalKim.g:11004:6: ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) ) )*
            loop238:
            do {
                int alt238=5;
                alt238 = dfa238.predict(input);
                switch (alt238) {
            	case 1 :
            	    // InternalKim.g:11005:4: ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) )
            	    {
            	    // InternalKim.g:11005:4: ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) )
            	    // InternalKim.g:11006:5: {...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatement", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 0)");
            	    }
            	    // InternalKim.g:11006:113: ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) )
            	    // InternalKim.g:11007:6: ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 0);
            	    // InternalKim.g:11010:9: ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) )
            	    // InternalKim.g:11010:10: {...}? => ( (lv_abstract_2_0= 'abstract' ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatement", "true");
            	    }
            	    // InternalKim.g:11010:19: ( (lv_abstract_2_0= 'abstract' ) )
            	    // InternalKim.g:11010:20: (lv_abstract_2_0= 'abstract' )
            	    {
            	    // InternalKim.g:11010:20: (lv_abstract_2_0= 'abstract' )
            	    // InternalKim.g:11011:10: lv_abstract_2_0= 'abstract'
            	    {
            	    lv_abstract_2_0=(Token)match(input,172,FOLLOW_133); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(lv_abstract_2_0, grammarAccess.getConceptStatementAccess().getAbstractAbstractKeyword_1_0_0());
            	      									
            	    }
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElement(grammarAccess.getConceptStatementRule());
            	      										}
            	      										setWithLastConsumed(current, "abstract", true, "abstract");
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKim.g:11028:4: ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) )
            	    {
            	    // InternalKim.g:11028:4: ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) )
            	    // InternalKim.g:11029:5: {...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatement", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 1)");
            	    }
            	    // InternalKim.g:11029:113: ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) )
            	    // InternalKim.g:11030:6: ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 1);
            	    // InternalKim.g:11033:9: ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) )
            	    // InternalKim.g:11033:10: {...}? => ( (lv_deniable_3_0= 'deniable' ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatement", "true");
            	    }
            	    // InternalKim.g:11033:19: ( (lv_deniable_3_0= 'deniable' ) )
            	    // InternalKim.g:11033:20: (lv_deniable_3_0= 'deniable' )
            	    {
            	    // InternalKim.g:11033:20: (lv_deniable_3_0= 'deniable' )
            	    // InternalKim.g:11034:10: lv_deniable_3_0= 'deniable'
            	    {
            	    lv_deniable_3_0=(Token)match(input,173,FOLLOW_133); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(lv_deniable_3_0, grammarAccess.getConceptStatementAccess().getDeniableDeniableKeyword_1_1_0());
            	      									
            	    }
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElement(grammarAccess.getConceptStatementRule());
            	      										}
            	      										setWithLastConsumed(current, "deniable", true, "deniable");
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalKim.g:11051:4: ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) )
            	    {
            	    // InternalKim.g:11051:4: ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) )
            	    // InternalKim.g:11052:5: {...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatement", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 2)");
            	    }
            	    // InternalKim.g:11052:113: ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) )
            	    // InternalKim.g:11053:6: ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 2);
            	    // InternalKim.g:11056:9: ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) )
            	    // InternalKim.g:11056:10: {...}? => ( (lv_subjective_4_0= 'subjective' ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatement", "true");
            	    }
            	    // InternalKim.g:11056:19: ( (lv_subjective_4_0= 'subjective' ) )
            	    // InternalKim.g:11056:20: (lv_subjective_4_0= 'subjective' )
            	    {
            	    // InternalKim.g:11056:20: (lv_subjective_4_0= 'subjective' )
            	    // InternalKim.g:11057:10: lv_subjective_4_0= 'subjective'
            	    {
            	    lv_subjective_4_0=(Token)match(input,174,FOLLOW_133); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(lv_subjective_4_0, grammarAccess.getConceptStatementAccess().getSubjectiveSubjectiveKeyword_1_2_0());
            	      									
            	    }
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElement(grammarAccess.getConceptStatementRule());
            	      										}
            	      										setWithLastConsumed(current, "subjective", true, "subjective");
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalKim.g:11074:4: ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) )
            	    {
            	    // InternalKim.g:11074:4: ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) )
            	    // InternalKim.g:11075:5: {...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatement", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3)");
            	    }
            	    // InternalKim.g:11075:113: ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) )
            	    // InternalKim.g:11076:6: ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3);
            	    // InternalKim.g:11079:9: ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) )
            	    // InternalKim.g:11079:10: {...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatement", "true");
            	    }
            	    // InternalKim.g:11079:19: ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) )
            	    int alt237=3;
            	    switch ( input.LA(1) ) {
            	    case 167:
            	    case 168:
            	    case 169:
            	        {
            	        alt237=1;
            	        }
            	        break;
            	    case 248:
            	    case 249:
            	        {
            	        alt237=2;
            	        }
            	        break;
            	    case 175:
            	        {
            	        alt237=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 237, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt237) {
            	        case 1 :
            	            // InternalKim.g:11079:20: ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) )
            	            {
            	            // InternalKim.g:11079:20: ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) )
            	            // InternalKim.g:11080:10: ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) )
            	            {
            	            // InternalKim.g:11080:10: ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) )
            	            // InternalKim.g:11081:11: (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' )
            	            {
            	            // InternalKim.g:11081:11: (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' )
            	            int alt235=3;
            	            switch ( input.LA(1) ) {
            	            case 167:
            	                {
            	                alt235=1;
            	                }
            	                break;
            	            case 168:
            	                {
            	                alt235=2;
            	                }
            	                break;
            	            case 169:
            	                {
            	                alt235=3;
            	                }
            	                break;
            	            default:
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 235, 0, input);

            	                throw nvae;
            	            }

            	            switch (alt235) {
            	                case 1 :
            	                    // InternalKim.g:11082:12: lv_agentSpecifier_5_1= 'deliberative'
            	                    {
            	                    lv_agentSpecifier_5_1=(Token)match(input,167,FOLLOW_133); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      												newLeafNode(lv_agentSpecifier_5_1, grammarAccess.getConceptStatementAccess().getAgentSpecifierDeliberativeKeyword_1_3_0_0_0());
            	                      											
            	                    }
            	                    if ( state.backtracking==0 ) {

            	                      												if (current==null) {
            	                      													current = createModelElement(grammarAccess.getConceptStatementRule());
            	                      												}
            	                      												setWithLastConsumed(current, "agentSpecifier", lv_agentSpecifier_5_1, null);
            	                      											
            	                    }

            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalKim.g:11093:12: lv_agentSpecifier_5_2= 'interactive'
            	                    {
            	                    lv_agentSpecifier_5_2=(Token)match(input,168,FOLLOW_133); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      												newLeafNode(lv_agentSpecifier_5_2, grammarAccess.getConceptStatementAccess().getAgentSpecifierInteractiveKeyword_1_3_0_0_1());
            	                      											
            	                    }
            	                    if ( state.backtracking==0 ) {

            	                      												if (current==null) {
            	                      													current = createModelElement(grammarAccess.getConceptStatementRule());
            	                      												}
            	                      												setWithLastConsumed(current, "agentSpecifier", lv_agentSpecifier_5_2, null);
            	                      											
            	                    }

            	                    }
            	                    break;
            	                case 3 :
            	                    // InternalKim.g:11104:12: lv_agentSpecifier_5_3= 'reactive'
            	                    {
            	                    lv_agentSpecifier_5_3=(Token)match(input,169,FOLLOW_133); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      												newLeafNode(lv_agentSpecifier_5_3, grammarAccess.getConceptStatementAccess().getAgentSpecifierReactiveKeyword_1_3_0_0_2());
            	                      											
            	                    }
            	                    if ( state.backtracking==0 ) {

            	                      												if (current==null) {
            	                      													current = createModelElement(grammarAccess.getConceptStatementRule());
            	                      												}
            	                      												setWithLastConsumed(current, "agentSpecifier", lv_agentSpecifier_5_3, null);
            	                      											
            	                    }

            	                    }
            	                    break;

            	            }


            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:11118:9: ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* )
            	            {
            	            // InternalKim.g:11118:9: ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* )
            	            // InternalKim.g:11119:10: ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )*
            	            {
            	            // InternalKim.g:11119:10: ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) )
            	            // InternalKim.g:11120:11: (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE )
            	            {
            	            // InternalKim.g:11120:11: (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE )
            	            // InternalKim.g:11121:12: lv_propertySpecifiers_6_0= rulePROPERTY_TYPE
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getConceptStatementAccess().getPropertySpecifiersPROPERTY_TYPEParserRuleCall_1_3_1_0_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_133);
            	            lv_propertySpecifiers_6_0=rulePROPERTY_TYPE();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getConceptStatementRule());
            	              												}
            	              												add(
            	              													current,
            	              													"propertySpecifiers",
            	              													lv_propertySpecifiers_6_0,
            	              													"org.integratedmodelling.kim.Kim.PROPERTY_TYPE");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }

            	            // InternalKim.g:11138:10: ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )*
            	            loop236:
            	            do {
            	                int alt236=2;
            	                int LA236_0 = input.LA(1);

            	                if ( (LA236_0==248) ) {
            	                    int LA236_2 = input.LA(2);

            	                    if ( (synpred431_InternalKim()) ) {
            	                        alt236=1;
            	                    }


            	                }
            	                else if ( (LA236_0==249) ) {
            	                    int LA236_3 = input.LA(2);

            	                    if ( (synpred431_InternalKim()) ) {
            	                        alt236=1;
            	                    }


            	                }


            	                switch (alt236) {
            	            	case 1 :
            	            	    // InternalKim.g:11139:11: (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE )
            	            	    {
            	            	    // InternalKim.g:11139:11: (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE )
            	            	    // InternalKim.g:11140:12: lv_propertySpecifiers_7_0= rulePROPERTY_TYPE
            	            	    {
            	            	    if ( state.backtracking==0 ) {

            	            	      												newCompositeNode(grammarAccess.getConceptStatementAccess().getPropertySpecifiersPROPERTY_TYPEParserRuleCall_1_3_1_1_0());
            	            	      											
            	            	    }
            	            	    pushFollow(FOLLOW_133);
            	            	    lv_propertySpecifiers_7_0=rulePROPERTY_TYPE();

            	            	    state._fsp--;
            	            	    if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      												if (current==null) {
            	            	      													current = createModelElementForParent(grammarAccess.getConceptStatementRule());
            	            	      												}
            	            	      												add(
            	            	      													current,
            	            	      													"propertySpecifiers",
            	            	      													lv_propertySpecifiers_7_0,
            	            	      													"org.integratedmodelling.kim.Kim.PROPERTY_TYPE");
            	            	      												afterParserOrEnumRuleCall();
            	            	      											
            	            	    }

            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop236;
            	                }
            	            } while (true);


            	            }


            	            }
            	            break;
            	        case 3 :
            	            // InternalKim.g:11159:9: ( (lv_attributeSpecifier_8_0= 'rescaling' ) )
            	            {
            	            // InternalKim.g:11159:9: ( (lv_attributeSpecifier_8_0= 'rescaling' ) )
            	            // InternalKim.g:11160:10: (lv_attributeSpecifier_8_0= 'rescaling' )
            	            {
            	            // InternalKim.g:11160:10: (lv_attributeSpecifier_8_0= 'rescaling' )
            	            // InternalKim.g:11161:11: lv_attributeSpecifier_8_0= 'rescaling'
            	            {
            	            lv_attributeSpecifier_8_0=(Token)match(input,175,FOLLOW_133); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(lv_attributeSpecifier_8_0, grammarAccess.getConceptStatementAccess().getAttributeSpecifierRescalingKeyword_1_3_2_0());
            	              										
            	            }
            	            if ( state.backtracking==0 ) {

            	              											if (current==null) {
            	              												current = createModelElement(grammarAccess.getConceptStatementRule());
            	              											}
            	              											setWithLastConsumed(current, "attributeSpecifier", lv_attributeSpecifier_8_0, "rescaling");
            	              										
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop238;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1());

            }

            // InternalKim.g:11186:3: ( (lv_concept_9_0= ruleCONCEPT_TYPE ) )
            // InternalKim.g:11187:4: (lv_concept_9_0= ruleCONCEPT_TYPE )
            {
            // InternalKim.g:11187:4: (lv_concept_9_0= ruleCONCEPT_TYPE )
            // InternalKim.g:11188:5: lv_concept_9_0= ruleCONCEPT_TYPE
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConceptStatementAccess().getConceptCONCEPT_TYPEParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_134);
            lv_concept_9_0=ruleCONCEPT_TYPE();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConceptStatementRule());
              					}
              					set(
              						current,
              						"concept",
              						lv_concept_9_0,
              						"org.integratedmodelling.kim.Kim.CONCEPT_TYPE");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:11205:3: ( (lv_body_10_0= ruleConceptStatementBody ) )
            // InternalKim.g:11206:4: (lv_body_10_0= ruleConceptStatementBody )
            {
            // InternalKim.g:11206:4: (lv_body_10_0= ruleConceptStatementBody )
            // InternalKim.g:11207:5: lv_body_10_0= ruleConceptStatementBody
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConceptStatementAccess().getBodyConceptStatementBodyParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_135);
            lv_body_10_0=ruleConceptStatementBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConceptStatementRule());
              					}
              					set(
              						current,
              						"body",
              						lv_body_10_0,
              						"org.integratedmodelling.kim.Kim.ConceptStatementBody");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:11224:3: (otherlv_11= 'named' ( (lv_name_12_0= ruleNamespaceId ) ) )?
            int alt239=2;
            int LA239_0 = input.LA(1);

            if ( (LA239_0==117) ) {
                alt239=1;
            }
            switch (alt239) {
                case 1 :
                    // InternalKim.g:11225:4: otherlv_11= 'named' ( (lv_name_12_0= ruleNamespaceId ) )
                    {
                    otherlv_11=(Token)match(input,117,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getConceptStatementAccess().getNamedKeyword_4_0());
                      			
                    }
                    // InternalKim.g:11229:4: ( (lv_name_12_0= ruleNamespaceId ) )
                    // InternalKim.g:11230:5: (lv_name_12_0= ruleNamespaceId )
                    {
                    // InternalKim.g:11230:5: (lv_name_12_0= ruleNamespaceId )
                    // InternalKim.g:11231:6: lv_name_12_0= ruleNamespaceId
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptStatementAccess().getNameNamespaceIdParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_name_12_0=ruleNamespaceId();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptStatementRule());
                      						}
                      						set(
                      							current,
                      							"name",
                      							lv_name_12_0,
                      							"org.integratedmodelling.kim.Kim.NamespaceId");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleConceptStatement"


    // $ANTLR start "entryRuleConceptStatementBody"
    // InternalKim.g:11256:1: entryRuleConceptStatementBody returns [EObject current=null] : iv_ruleConceptStatementBody= ruleConceptStatementBody EOF ;
    public final EObject entryRuleConceptStatementBody() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConceptStatementBody = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3()
        	);

        try {
            // InternalKim.g:11260:2: (iv_ruleConceptStatementBody= ruleConceptStatementBody EOF )
            // InternalKim.g:11261:2: iv_ruleConceptStatementBody= ruleConceptStatementBody EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConceptStatementBodyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConceptStatementBody=ruleConceptStatementBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConceptStatementBody; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleConceptStatementBody"


    // $ANTLR start "ruleConceptStatementBody"
    // InternalKim.g:11270:1: ruleConceptStatementBody returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_abstract_1_0= 'abstract' ) )? ( ( (lv_root_2_0= 'root' ) ) | ( ( (lv_name_3_0= RULE_CAMELCASE_ID ) ) (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )? ) ) ( ( ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( ( (lv_definedAuthority_29_1= RULE_UPPERCASE_ID | lv_definedAuthority_29_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_109= 'implies' ( (lv_implications_110_0= ruleImplication ) ) (otherlv_111= ',' ( (lv_implications_112_0= ruleImplication ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_113= 'uses' otherlv_114= 'authority' ( ( (lv_authorities_115_1= RULE_UPPERCASE_ID | lv_authorities_115_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_116= 'metadata' ( (lv_metadata_117_0= ruleMap ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_properties_118_0= rulePropertyStatement ) ) )+ ) ) )* ) ) ) ) ;
    public final EObject ruleConceptStatementBody() throws RecognitionException {
        EObject current = null;

        Token lv_abstract_1_0=null;
        Token lv_root_2_0=null;
        Token lv_name_3_0=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token lv_stringIdentifier_6_1=null;
        Token lv_stringIdentifier_6_2=null;
        Token lv_intIdentifier_7_0=null;
        Token otherlv_8=null;
        Token lv_authority_9_1=null;
        Token lv_authority_9_2=null;
        Token lv_docstring_11_0=null;
        Token otherlv_12=null;
        Token lv_alias_13_0=null;
        Token lv_coreConcept_14_0=null;
        Token lv_nothing_15_0=null;
        Token lv_connectors_17_1=null;
        Token lv_connectors_17_2=null;
        Token lv_connectors_17_3=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token lv_specific_23_0=null;
        Token otherlv_25=null;
        Token otherlv_27=null;
        Token otherlv_28=null;
        Token lv_definedAuthority_29_1=null;
        Token lv_definedAuthority_29_2=null;
        Token otherlv_31=null;
        Token otherlv_33=null;
        Token otherlv_35=null;
        Token otherlv_37=null;
        Token otherlv_38=null;
        Token otherlv_40=null;
        Token otherlv_41=null;
        Token otherlv_43=null;
        Token otherlv_45=null;
        Token otherlv_47=null;
        Token otherlv_49=null;
        Token otherlv_51=null;
        Token otherlv_53=null;
        Token otherlv_54=null;
        Token otherlv_56=null;
        Token otherlv_58=null;
        Token otherlv_60=null;
        Token otherlv_62=null;
        Token otherlv_64=null;
        Token otherlv_66=null;
        Token otherlv_68=null;
        Token otherlv_70=null;
        Token otherlv_72=null;
        Token otherlv_74=null;
        Token lv_constituent_75_0=null;
        Token lv_constitutes_76_0=null;
        Token lv_partOf_77_0=null;
        Token otherlv_79=null;
        Token otherlv_81=null;
        Token otherlv_83=null;
        Token otherlv_84=null;
        Token otherlv_86=null;
        Token otherlv_88=null;
        Token otherlv_90=null;
        Token otherlv_92=null;
        Token otherlv_94=null;
        Token otherlv_96=null;
        Token otherlv_97=null;
        Token otherlv_99=null;
        Token otherlv_101=null;
        Token otherlv_103=null;
        Token lv_disjoint_104_0=null;
        Token otherlv_105=null;
        Token otherlv_107=null;
        Token otherlv_109=null;
        Token otherlv_111=null;
        Token otherlv_113=null;
        Token otherlv_114=null;
        Token lv_authorities_115_1=null;
        Token lv_authorities_115_2=null;
        Token otherlv_116=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_parents_16_0 = null;

        EObject lv_parents_18_0 = null;

        EObject lv_contextualizedTraits_20_0 = null;

        EObject lv_contextualizedTraits_22_0 = null;

        EObject lv_contextualizesTraits_24_0 = null;

        EObject lv_contextualizesTraits_26_0 = null;

        EObject lv_upperConcept_30_0 = null;

        EObject lv_requirements_32_0 = null;

        EObject lv_requirements_34_0 = null;

        EObject lv_describedQuality_36_0 = null;

        EObject lv_describedProportionality_39_0 = null;

        EObject lv_describedInverseProportionalityQuality_42_0 = null;

        EObject lv_describedNonzeroQuality_44_0 = null;

        EObject lv_classifiesQuality_46_0 = null;

        EObject lv_discretizesQuality_48_0 = null;

        EObject lv_actuallyInheritedTraits_50_0 = null;

        EObject lv_actuallyInheritedTraits_52_0 = null;

        EObject lv_roles_55_0 = null;

        EObject lv_roles_57_0 = null;

        EObject lv_targetObservables_59_0 = null;

        EObject lv_targetObservables_61_0 = null;

        EObject lv_restrictedObservables_63_0 = null;

        EObject lv_restrictedObservables_65_0 = null;

        EObject lv_conferredTraits_67_0 = null;

        EObject lv_conferredTraits_69_0 = null;

        EObject lv_conferredTargets_71_0 = null;

        EObject lv_conferredTargets_73_0 = null;

        EObject lv_whole_78_0 = null;

        EObject lv_creates_80_0 = null;

        EObject lv_creates_82_0 = null;

        EObject lv_traitTargets_85_0 = null;

        EObject lv_traitTargets_87_0 = null;

        EObject lv_domains_89_0 = null;

        EObject lv_ranges_91_0 = null;

        EObject lv_domains_93_0 = null;

        EObject lv_ranges_95_0 = null;

        EObject lv_inverse_98_0 = null;

        EObject lv_qualitiesAffected_100_0 = null;

        EObject lv_qualitiesAffected_102_0 = null;

        EObject lv_children_106_0 = null;

        EObject lv_children_108_0 = null;

        EObject lv_implications_110_0 = null;

        EObject lv_implications_112_0 = null;

        EObject lv_metadata_117_0 = null;

        EObject lv_properties_118_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3()
        	);

        try {
            // InternalKim.g:11279:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_abstract_1_0= 'abstract' ) )? ( ( (lv_root_2_0= 'root' ) ) | ( ( (lv_name_3_0= RULE_CAMELCASE_ID ) ) (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )? ) ) ( ( ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( ( (lv_definedAuthority_29_1= RULE_UPPERCASE_ID | lv_definedAuthority_29_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_109= 'implies' ( (lv_implications_110_0= ruleImplication ) ) (otherlv_111= ',' ( (lv_implications_112_0= ruleImplication ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_113= 'uses' otherlv_114= 'authority' ( ( (lv_authorities_115_1= RULE_UPPERCASE_ID | lv_authorities_115_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_116= 'metadata' ( (lv_metadata_117_0= ruleMap ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_properties_118_0= rulePropertyStatement ) ) )+ ) ) )* ) ) ) ) )
            // InternalKim.g:11280:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_abstract_1_0= 'abstract' ) )? ( ( (lv_root_2_0= 'root' ) ) | ( ( (lv_name_3_0= RULE_CAMELCASE_ID ) ) (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )? ) ) ( ( ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( ( (lv_definedAuthority_29_1= RULE_UPPERCASE_ID | lv_definedAuthority_29_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_109= 'implies' ( (lv_implications_110_0= ruleImplication ) ) (otherlv_111= ',' ( (lv_implications_112_0= ruleImplication ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_113= 'uses' otherlv_114= 'authority' ( ( (lv_authorities_115_1= RULE_UPPERCASE_ID | lv_authorities_115_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_116= 'metadata' ( (lv_metadata_117_0= ruleMap ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_properties_118_0= rulePropertyStatement ) ) )+ ) ) )* ) ) ) )
            {
            // InternalKim.g:11280:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_abstract_1_0= 'abstract' ) )? ( ( (lv_root_2_0= 'root' ) ) | ( ( (lv_name_3_0= RULE_CAMELCASE_ID ) ) (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )? ) ) ( ( ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( ( (lv_definedAuthority_29_1= RULE_UPPERCASE_ID | lv_definedAuthority_29_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_109= 'implies' ( (lv_implications_110_0= ruleImplication ) ) (otherlv_111= ',' ( (lv_implications_112_0= ruleImplication ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_113= 'uses' otherlv_114= 'authority' ( ( (lv_authorities_115_1= RULE_UPPERCASE_ID | lv_authorities_115_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_116= 'metadata' ( (lv_metadata_117_0= ruleMap ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_properties_118_0= rulePropertyStatement ) ) )+ ) ) )* ) ) ) )
            // InternalKim.g:11281:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_abstract_1_0= 'abstract' ) )? ( ( (lv_root_2_0= 'root' ) ) | ( ( (lv_name_3_0= RULE_CAMELCASE_ID ) ) (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )? ) ) ( ( ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( ( (lv_definedAuthority_29_1= RULE_UPPERCASE_ID | lv_definedAuthority_29_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_109= 'implies' ( (lv_implications_110_0= ruleImplication ) ) (otherlv_111= ',' ( (lv_implications_112_0= ruleImplication ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_113= 'uses' otherlv_114= 'authority' ( ( (lv_authorities_115_1= RULE_UPPERCASE_ID | lv_authorities_115_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_116= 'metadata' ( (lv_metadata_117_0= ruleMap ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_properties_118_0= rulePropertyStatement ) ) )+ ) ) )* ) ) )
            {
            // InternalKim.g:11281:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop240:
            do {
                int alt240=2;
                int LA240_0 = input.LA(1);

                if ( (LA240_0==RULE_ANNOTATION_ID) ) {
                    alt240=1;
                }


                switch (alt240) {
            	case 1 :
            	    // InternalKim.g:11282:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalKim.g:11282:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalKim.g:11283:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_134);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"org.integratedmodelling.kim.Kim.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop240;
                }
            } while (true);

            // InternalKim.g:11300:3: ( (lv_abstract_1_0= 'abstract' ) )?
            int alt241=2;
            int LA241_0 = input.LA(1);

            if ( (LA241_0==172) ) {
                alt241=1;
            }
            switch (alt241) {
                case 1 :
                    // InternalKim.g:11301:4: (lv_abstract_1_0= 'abstract' )
                    {
                    // InternalKim.g:11301:4: (lv_abstract_1_0= 'abstract' )
                    // InternalKim.g:11302:5: lv_abstract_1_0= 'abstract'
                    {
                    lv_abstract_1_0=(Token)match(input,172,FOLLOW_136); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_abstract_1_0, grammarAccess.getConceptStatementBodyAccess().getAbstractAbstractKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getConceptStatementBodyRule());
                      					}
                      					setWithLastConsumed(current, "abstract", true, "abstract");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:11314:3: ( ( (lv_root_2_0= 'root' ) ) | ( ( (lv_name_3_0= RULE_CAMELCASE_ID ) ) (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )? ) )
            int alt246=2;
            int LA246_0 = input.LA(1);

            if ( (LA246_0==97) ) {
                alt246=1;
            }
            else if ( (LA246_0==RULE_CAMELCASE_ID) ) {
                alt246=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 246, 0, input);

                throw nvae;
            }
            switch (alt246) {
                case 1 :
                    // InternalKim.g:11315:4: ( (lv_root_2_0= 'root' ) )
                    {
                    // InternalKim.g:11315:4: ( (lv_root_2_0= 'root' ) )
                    // InternalKim.g:11316:5: (lv_root_2_0= 'root' )
                    {
                    // InternalKim.g:11316:5: (lv_root_2_0= 'root' )
                    // InternalKim.g:11317:6: lv_root_2_0= 'root'
                    {
                    lv_root_2_0=(Token)match(input,97,FOLLOW_137); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_root_2_0, grammarAccess.getConceptStatementBodyAccess().getRootRootKeyword_2_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptStatementBodyRule());
                      						}
                      						setWithLastConsumed(current, "root", true, "root");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:11330:4: ( ( (lv_name_3_0= RULE_CAMELCASE_ID ) ) (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )? )
                    {
                    // InternalKim.g:11330:4: ( ( (lv_name_3_0= RULE_CAMELCASE_ID ) ) (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )? )
                    // InternalKim.g:11331:5: ( (lv_name_3_0= RULE_CAMELCASE_ID ) ) (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )?
                    {
                    // InternalKim.g:11331:5: ( (lv_name_3_0= RULE_CAMELCASE_ID ) )
                    // InternalKim.g:11332:6: (lv_name_3_0= RULE_CAMELCASE_ID )
                    {
                    // InternalKim.g:11332:6: (lv_name_3_0= RULE_CAMELCASE_ID )
                    // InternalKim.g:11333:7: lv_name_3_0= RULE_CAMELCASE_ID
                    {
                    lv_name_3_0=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_138); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_name_3_0, grammarAccess.getConceptStatementBodyAccess().getNameCAMELCASE_IDTerminalRuleCall_2_1_0_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getConceptStatementBodyRule());
                      							}
                      							setWithLastConsumed(
                      								current,
                      								"name",
                      								lv_name_3_0,
                      								"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                      						
                    }

                    }


                    }

                    // InternalKim.g:11349:5: (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )?
                    int alt245=2;
                    int LA245_0 = input.LA(1);

                    if ( (LA245_0==143) ) {
                        alt245=1;
                    }
                    switch (alt245) {
                        case 1 :
                            // InternalKim.g:11350:6: otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) )
                            {
                            otherlv_4=(Token)match(input,143,FOLLOW_11); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_4, grammarAccess.getConceptStatementBodyAccess().getIdentifiedKeyword_2_1_1_0());
                              					
                            }
                            otherlv_5=(Token)match(input,25,FOLLOW_139); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_5, grammarAccess.getConceptStatementBodyAccess().getAsKeyword_2_1_1_1());
                              					
                            }
                            // InternalKim.g:11358:6: ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) )
                            int alt243=2;
                            int LA243_0 = input.LA(1);

                            if ( (LA243_0==RULE_STRING||LA243_0==RULE_ID) ) {
                                alt243=1;
                            }
                            else if ( (LA243_0==RULE_INT) ) {
                                alt243=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 243, 0, input);

                                throw nvae;
                            }
                            switch (alt243) {
                                case 1 :
                                    // InternalKim.g:11359:7: ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) )
                                    {
                                    // InternalKim.g:11359:7: ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) )
                                    // InternalKim.g:11360:8: ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) )
                                    {
                                    // InternalKim.g:11360:8: ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) )
                                    // InternalKim.g:11361:9: (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING )
                                    {
                                    // InternalKim.g:11361:9: (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING )
                                    int alt242=2;
                                    int LA242_0 = input.LA(1);

                                    if ( (LA242_0==RULE_ID) ) {
                                        alt242=1;
                                    }
                                    else if ( (LA242_0==RULE_STRING) ) {
                                        alt242=2;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return current;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 242, 0, input);

                                        throw nvae;
                                    }
                                    switch (alt242) {
                                        case 1 :
                                            // InternalKim.g:11362:10: lv_stringIdentifier_6_1= RULE_ID
                                            {
                                            lv_stringIdentifier_6_1=(Token)match(input,RULE_ID,FOLLOW_112); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              										newLeafNode(lv_stringIdentifier_6_1, grammarAccess.getConceptStatementBodyAccess().getStringIdentifierIDTerminalRuleCall_2_1_1_2_0_0_0());
                                              									
                                            }
                                            if ( state.backtracking==0 ) {

                                              										if (current==null) {
                                              											current = createModelElement(grammarAccess.getConceptStatementBodyRule());
                                              										}
                                              										setWithLastConsumed(
                                              											current,
                                              											"stringIdentifier",
                                              											lv_stringIdentifier_6_1,
                                              											"org.eclipse.xtext.common.Terminals.ID");
                                              									
                                            }

                                            }
                                            break;
                                        case 2 :
                                            // InternalKim.g:11377:10: lv_stringIdentifier_6_2= RULE_STRING
                                            {
                                            lv_stringIdentifier_6_2=(Token)match(input,RULE_STRING,FOLLOW_112); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              										newLeafNode(lv_stringIdentifier_6_2, grammarAccess.getConceptStatementBodyAccess().getStringIdentifierSTRINGTerminalRuleCall_2_1_1_2_0_0_1());
                                              									
                                            }
                                            if ( state.backtracking==0 ) {

                                              										if (current==null) {
                                              											current = createModelElement(grammarAccess.getConceptStatementBodyRule());
                                              										}
                                              										setWithLastConsumed(
                                              											current,
                                              											"stringIdentifier",
                                              											lv_stringIdentifier_6_2,
                                              											"org.eclipse.xtext.common.Terminals.STRING");
                                              									
                                            }

                                            }
                                            break;

                                    }


                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:11395:7: ( (lv_intIdentifier_7_0= RULE_INT ) )
                                    {
                                    // InternalKim.g:11395:7: ( (lv_intIdentifier_7_0= RULE_INT ) )
                                    // InternalKim.g:11396:8: (lv_intIdentifier_7_0= RULE_INT )
                                    {
                                    // InternalKim.g:11396:8: (lv_intIdentifier_7_0= RULE_INT )
                                    // InternalKim.g:11397:9: lv_intIdentifier_7_0= RULE_INT
                                    {
                                    lv_intIdentifier_7_0=(Token)match(input,RULE_INT,FOLLOW_112); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_intIdentifier_7_0, grammarAccess.getConceptStatementBodyAccess().getIntIdentifierINTTerminalRuleCall_2_1_1_2_1_0());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getConceptStatementBodyRule());
                                      									}
                                      									setWithLastConsumed(
                                      										current,
                                      										"intIdentifier",
                                      										lv_intIdentifier_7_0,
                                      										"org.eclipse.xtext.common.Terminals.INT");
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }

                            otherlv_8=(Token)match(input,89,FOLLOW_120); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_8, grammarAccess.getConceptStatementBodyAccess().getByKeyword_2_1_1_3());
                              					
                            }
                            // InternalKim.g:11418:6: ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) )
                            // InternalKim.g:11419:7: ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) )
                            {
                            // InternalKim.g:11419:7: ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) )
                            // InternalKim.g:11420:8: (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH )
                            {
                            // InternalKim.g:11420:8: (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH )
                            int alt244=2;
                            int LA244_0 = input.LA(1);

                            if ( (LA244_0==RULE_UPPERCASE_ID) ) {
                                alt244=1;
                            }
                            else if ( (LA244_0==RULE_UPPERCASE_PATH) ) {
                                alt244=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 244, 0, input);

                                throw nvae;
                            }
                            switch (alt244) {
                                case 1 :
                                    // InternalKim.g:11421:9: lv_authority_9_1= RULE_UPPERCASE_ID
                                    {
                                    lv_authority_9_1=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_137); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_authority_9_1, grammarAccess.getConceptStatementBodyAccess().getAuthorityUPPERCASE_IDTerminalRuleCall_2_1_1_4_0_0());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getConceptStatementBodyRule());
                                      									}
                                      									setWithLastConsumed(
                                      										current,
                                      										"authority",
                                      										lv_authority_9_1,
                                      										"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                                      								
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:11436:9: lv_authority_9_2= RULE_UPPERCASE_PATH
                                    {
                                    lv_authority_9_2=(Token)match(input,RULE_UPPERCASE_PATH,FOLLOW_137); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_authority_9_2, grammarAccess.getConceptStatementBodyAccess().getAuthorityUPPERCASE_PATHTerminalRuleCall_2_1_1_4_0_1());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getConceptStatementBodyRule());
                                      									}
                                      									setWithLastConsumed(
                                      										current,
                                      										"authority",
                                      										lv_authority_9_2,
                                      										"org.integratedmodelling.kim.Kim.UPPERCASE_PATH");
                                      								
                                    }

                                    }
                                    break;

                            }


                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }

            // InternalKim.g:11456:3: ( ( ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( ( (lv_definedAuthority_29_1= RULE_UPPERCASE_ID | lv_definedAuthority_29_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_109= 'implies' ( (lv_implications_110_0= ruleImplication ) ) (otherlv_111= ',' ( (lv_implications_112_0= ruleImplication ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_113= 'uses' otherlv_114= 'authority' ( ( (lv_authorities_115_1= RULE_UPPERCASE_ID | lv_authorities_115_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_116= 'metadata' ( (lv_metadata_117_0= ruleMap ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_properties_118_0= rulePropertyStatement ) ) )+ ) ) )* ) ) )
            // InternalKim.g:11457:4: ( ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( ( (lv_definedAuthority_29_1= RULE_UPPERCASE_ID | lv_definedAuthority_29_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_109= 'implies' ( (lv_implications_110_0= ruleImplication ) ) (otherlv_111= ',' ( (lv_implications_112_0= ruleImplication ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_113= 'uses' otherlv_114= 'authority' ( ( (lv_authorities_115_1= RULE_UPPERCASE_ID | lv_authorities_115_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_116= 'metadata' ( (lv_metadata_117_0= ruleMap ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_properties_118_0= rulePropertyStatement ) ) )+ ) ) )* ) )
            {
            // InternalKim.g:11457:4: ( ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( ( (lv_definedAuthority_29_1= RULE_UPPERCASE_ID | lv_definedAuthority_29_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_109= 'implies' ( (lv_implications_110_0= ruleImplication ) ) (otherlv_111= ',' ( (lv_implications_112_0= ruleImplication ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_113= 'uses' otherlv_114= 'authority' ( ( (lv_authorities_115_1= RULE_UPPERCASE_ID | lv_authorities_115_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_116= 'metadata' ( (lv_metadata_117_0= ruleMap ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_properties_118_0= rulePropertyStatement ) ) )+ ) ) )* ) )
            // InternalKim.g:11458:5: ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( ( (lv_definedAuthority_29_1= RULE_UPPERCASE_ID | lv_definedAuthority_29_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_109= 'implies' ( (lv_implications_110_0= ruleImplication ) ) (otherlv_111= ',' ( (lv_implications_112_0= ruleImplication ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_113= 'uses' otherlv_114= 'authority' ( ( (lv_authorities_115_1= RULE_UPPERCASE_ID | lv_authorities_115_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_116= 'metadata' ( (lv_metadata_117_0= ruleMap ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_properties_118_0= rulePropertyStatement ) ) )+ ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());
            // InternalKim.g:11461:5: ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( ( (lv_definedAuthority_29_1= RULE_UPPERCASE_ID | lv_definedAuthority_29_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_109= 'implies' ( (lv_implications_110_0= ruleImplication ) ) (otherlv_111= ',' ( (lv_implications_112_0= ruleImplication ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_113= 'uses' otherlv_114= 'authority' ( ( (lv_authorities_115_1= RULE_UPPERCASE_ID | lv_authorities_115_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_116= 'metadata' ( (lv_metadata_117_0= ruleMap ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_properties_118_0= rulePropertyStatement ) ) )+ ) ) )* )
            // InternalKim.g:11462:6: ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( ( (lv_definedAuthority_29_1= RULE_UPPERCASE_ID | lv_definedAuthority_29_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_109= 'implies' ( (lv_implications_110_0= ruleImplication ) ) (otherlv_111= ',' ( (lv_implications_112_0= ruleImplication ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_113= 'uses' otherlv_114= 'authority' ( ( (lv_authorities_115_1= RULE_UPPERCASE_ID | lv_authorities_115_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_116= 'metadata' ( (lv_metadata_117_0= ruleMap ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_properties_118_0= rulePropertyStatement ) ) )+ ) ) )*
            {
            // InternalKim.g:11462:6: ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( ( (lv_definedAuthority_29_1= RULE_UPPERCASE_ID | lv_definedAuthority_29_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_109= 'implies' ( (lv_implications_110_0= ruleImplication ) ) (otherlv_111= ',' ( (lv_implications_112_0= ruleImplication ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_113= 'uses' otherlv_114= 'authority' ( ( (lv_authorities_115_1= RULE_UPPERCASE_ID | lv_authorities_115_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_116= 'metadata' ( (lv_metadata_117_0= ruleMap ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_properties_118_0= rulePropertyStatement ) ) )+ ) ) )*
            loop276:
            do {
                int alt276=26;
                alt276 = dfa276.predict(input);
                switch (alt276) {
            	case 1 :
            	    // InternalKim.g:11463:4: ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) )
            	    {
            	    // InternalKim.g:11463:4: ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) )
            	    // InternalKim.g:11464:5: {...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 0)");
            	    }
            	    // InternalKim.g:11464:117: ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) )
            	    // InternalKim.g:11465:6: ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 0);
            	    // InternalKim.g:11468:9: ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) )
            	    // InternalKim.g:11468:10: {...}? => ( (lv_docstring_11_0= RULE_STRING ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:11468:19: ( (lv_docstring_11_0= RULE_STRING ) )
            	    // InternalKim.g:11468:20: (lv_docstring_11_0= RULE_STRING )
            	    {
            	    // InternalKim.g:11468:20: (lv_docstring_11_0= RULE_STRING )
            	    // InternalKim.g:11469:10: lv_docstring_11_0= RULE_STRING
            	    {
            	    lv_docstring_11_0=(Token)match(input,RULE_STRING,FOLLOW_137); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(lv_docstring_11_0, grammarAccess.getConceptStatementBodyAccess().getDocstringSTRINGTerminalRuleCall_3_0_0());
            	      									
            	    }
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	      										}
            	      										setWithLastConsumed(
            	      											current,
            	      											"docstring",
            	      											lv_docstring_11_0,
            	      											"org.eclipse.xtext.common.Terminals.STRING");
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKim.g:11490:4: ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) )
            	    {
            	    // InternalKim.g:11490:4: ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) )
            	    // InternalKim.g:11491:5: {...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 1)");
            	    }
            	    // InternalKim.g:11491:117: ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
            	    // InternalKim.g:11492:6: ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 1);
            	    // InternalKim.g:11495:9: ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    // InternalKim.g:11495:10: {...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:11495:19: ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) )
            	    // InternalKim.g:11495:20: ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) )
            	    {
            	    // InternalKim.g:11495:20: ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? )
            	    // InternalKim.g:11496:10: (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )?
            	    {
            	    // InternalKim.g:11496:10: (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) )
            	    int alt247=2;
            	    int LA247_0 = input.LA(1);

            	    if ( (LA247_0==176) ) {
            	        alt247=1;
            	    }
            	    else if ( (LA247_0==177) ) {
            	        alt247=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 247, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt247) {
            	        case 1 :
            	            // InternalKim.g:11497:11: otherlv_12= 'is'
            	            {
            	            otherlv_12=(Token)match(input,176,FOLLOW_140); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_12, grammarAccess.getConceptStatementBodyAccess().getIsKeyword_3_1_0_0_0());
            	              										
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:11502:11: ( (lv_alias_13_0= 'equals' ) )
            	            {
            	            // InternalKim.g:11502:11: ( (lv_alias_13_0= 'equals' ) )
            	            // InternalKim.g:11503:12: (lv_alias_13_0= 'equals' )
            	            {
            	            // InternalKim.g:11503:12: (lv_alias_13_0= 'equals' )
            	            // InternalKim.g:11504:13: lv_alias_13_0= 'equals'
            	            {
            	            lv_alias_13_0=(Token)match(input,177,FOLLOW_140); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_alias_13_0, grammarAccess.getConceptStatementBodyAccess().getAliasEqualsKeyword_3_1_0_0_1_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	              													}
            	              													setWithLastConsumed(current, "alias", true, "equals");
            	              												
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }

            	    // InternalKim.g:11517:10: ( (lv_coreConcept_14_0= 'core' ) )?
            	    int alt248=2;
            	    int LA248_0 = input.LA(1);

            	    if ( (LA248_0==178) ) {
            	        alt248=1;
            	    }
            	    switch (alt248) {
            	        case 1 :
            	            // InternalKim.g:11518:11: (lv_coreConcept_14_0= 'core' )
            	            {
            	            // InternalKim.g:11518:11: (lv_coreConcept_14_0= 'core' )
            	            // InternalKim.g:11519:12: lv_coreConcept_14_0= 'core'
            	            {
            	            lv_coreConcept_14_0=(Token)match(input,178,FOLLOW_141); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_coreConcept_14_0, grammarAccess.getConceptStatementBodyAccess().getCoreConceptCoreKeyword_3_1_0_1_0());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												setWithLastConsumed(current, "coreConcept", true, "core");
            	              											
            	            }

            	            }


            	            }
            	            break;

            	    }


            	    }

            	    // InternalKim.g:11532:9: ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) )
            	    int alt251=2;
            	    int LA251_0 = input.LA(1);

            	    if ( (LA251_0==179) ) {
            	        alt251=1;
            	    }
            	    else if ( ((LA251_0>=RULE_LOWERCASE_ID && LA251_0<=RULE_UPPERCASE_ID)||LA251_0==RULE_CAMELCASE_ID||LA251_0==RULE_LOWERCASE_DASHID||LA251_0==RULE_UPPERCASE_PATH||LA251_0==38||(LA251_0>=132 && LA251_0<=133)||(LA251_0>=141 && LA251_0<=142)||(LA251_0>=144 && LA251_0<=149)||(LA251_0>=151 && LA251_0<=163)) ) {
            	        alt251=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 251, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt251) {
            	        case 1 :
            	            // InternalKim.g:11533:10: ( (lv_nothing_15_0= 'nothing' ) )
            	            {
            	            // InternalKim.g:11533:10: ( (lv_nothing_15_0= 'nothing' ) )
            	            // InternalKim.g:11534:11: (lv_nothing_15_0= 'nothing' )
            	            {
            	            // InternalKim.g:11534:11: (lv_nothing_15_0= 'nothing' )
            	            // InternalKim.g:11535:12: lv_nothing_15_0= 'nothing'
            	            {
            	            lv_nothing_15_0=(Token)match(input,179,FOLLOW_137); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_nothing_15_0, grammarAccess.getConceptStatementBodyAccess().getNothingNothingKeyword_3_1_1_0_0());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												setWithLastConsumed(current, "nothing", true, "nothing");
            	              											
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:11548:10: ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* )
            	            {
            	            // InternalKim.g:11548:10: ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* )
            	            // InternalKim.g:11549:11: ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )*
            	            {
            	            // InternalKim.g:11549:11: ( (lv_parents_16_0= ruleConceptDeclaration ) )
            	            // InternalKim.g:11550:12: (lv_parents_16_0= ruleConceptDeclaration )
            	            {
            	            // InternalKim.g:11550:12: (lv_parents_16_0= ruleConceptDeclaration )
            	            // InternalKim.g:11551:13: lv_parents_16_0= ruleConceptDeclaration
            	            {
            	            if ( state.backtracking==0 ) {

            	              													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getParentsConceptDeclarationParserRuleCall_3_1_1_1_0_0());
            	              												
            	            }
            	            pushFollow(FOLLOW_142);
            	            lv_parents_16_0=ruleConceptDeclaration();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	              													}
            	              													add(
            	              														current,
            	              														"parents",
            	              														lv_parents_16_0,
            	              														"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	              													afterParserOrEnumRuleCall();
            	              												
            	            }

            	            }


            	            }

            	            // InternalKim.g:11568:11: ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )*
            	            loop250:
            	            do {
            	                int alt250=2;
            	                int LA250_0 = input.LA(1);

            	                if ( (LA250_0==27||(LA250_0>=164 && LA250_0<=165)) ) {
            	                    alt250=1;
            	                }


            	                switch (alt250) {
            	            	case 1 :
            	            	    // InternalKim.g:11569:12: ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) )
            	            	    {
            	            	    // InternalKim.g:11569:12: ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) )
            	            	    // InternalKim.g:11570:13: ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) )
            	            	    {
            	            	    // InternalKim.g:11570:13: ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) )
            	            	    // InternalKim.g:11571:14: (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' )
            	            	    {
            	            	    // InternalKim.g:11571:14: (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' )
            	            	    int alt249=3;
            	            	    switch ( input.LA(1) ) {
            	            	    case 27:
            	            	        {
            	            	        alt249=1;
            	            	        }
            	            	        break;
            	            	    case 164:
            	            	        {
            	            	        alt249=2;
            	            	        }
            	            	        break;
            	            	    case 165:
            	            	        {
            	            	        alt249=3;
            	            	        }
            	            	        break;
            	            	    default:
            	            	        if (state.backtracking>0) {state.failed=true; return current;}
            	            	        NoViableAltException nvae =
            	            	            new NoViableAltException("", 249, 0, input);

            	            	        throw nvae;
            	            	    }

            	            	    switch (alt249) {
            	            	        case 1 :
            	            	            // InternalKim.g:11572:15: lv_connectors_17_1= ','
            	            	            {
            	            	            lv_connectors_17_1=(Token)match(input,27,FOLLOW_23); if (state.failed) return current;
            	            	            if ( state.backtracking==0 ) {

            	            	              															newLeafNode(lv_connectors_17_1, grammarAccess.getConceptStatementBodyAccess().getConnectorsCommaKeyword_3_1_1_1_1_0_0_0());
            	            	              														
            	            	            }
            	            	            if ( state.backtracking==0 ) {

            	            	              															if (current==null) {
            	            	              																current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	            	              															}
            	            	              															addWithLastConsumed(current, "connectors", lv_connectors_17_1, null);
            	            	              														
            	            	            }

            	            	            }
            	            	            break;
            	            	        case 2 :
            	            	            // InternalKim.g:11583:15: lv_connectors_17_2= 'or'
            	            	            {
            	            	            lv_connectors_17_2=(Token)match(input,164,FOLLOW_23); if (state.failed) return current;
            	            	            if ( state.backtracking==0 ) {

            	            	              															newLeafNode(lv_connectors_17_2, grammarAccess.getConceptStatementBodyAccess().getConnectorsOrKeyword_3_1_1_1_1_0_0_1());
            	            	              														
            	            	            }
            	            	            if ( state.backtracking==0 ) {

            	            	              															if (current==null) {
            	            	              																current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	            	              															}
            	            	              															addWithLastConsumed(current, "connectors", lv_connectors_17_2, null);
            	            	              														
            	            	            }

            	            	            }
            	            	            break;
            	            	        case 3 :
            	            	            // InternalKim.g:11594:15: lv_connectors_17_3= 'and'
            	            	            {
            	            	            lv_connectors_17_3=(Token)match(input,165,FOLLOW_23); if (state.failed) return current;
            	            	            if ( state.backtracking==0 ) {

            	            	              															newLeafNode(lv_connectors_17_3, grammarAccess.getConceptStatementBodyAccess().getConnectorsAndKeyword_3_1_1_1_1_0_0_2());
            	            	              														
            	            	            }
            	            	            if ( state.backtracking==0 ) {

            	            	              															if (current==null) {
            	            	              																current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	            	              															}
            	            	              															addWithLastConsumed(current, "connectors", lv_connectors_17_3, null);
            	            	              														
            	            	            }

            	            	            }
            	            	            break;

            	            	    }


            	            	    }


            	            	    }

            	            	    // InternalKim.g:11607:12: ( (lv_parents_18_0= ruleConceptDeclaration ) )
            	            	    // InternalKim.g:11608:13: (lv_parents_18_0= ruleConceptDeclaration )
            	            	    {
            	            	    // InternalKim.g:11608:13: (lv_parents_18_0= ruleConceptDeclaration )
            	            	    // InternalKim.g:11609:14: lv_parents_18_0= ruleConceptDeclaration
            	            	    {
            	            	    if ( state.backtracking==0 ) {

            	            	      														newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getParentsConceptDeclarationParserRuleCall_3_1_1_1_1_1_0());
            	            	      													
            	            	    }
            	            	    pushFollow(FOLLOW_142);
            	            	    lv_parents_18_0=ruleConceptDeclaration();

            	            	    state._fsp--;
            	            	    if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      														if (current==null) {
            	            	      															current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	            	      														}
            	            	      														add(
            	            	      															current,
            	            	      															"parents",
            	            	      															lv_parents_18_0,
            	            	      															"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	            	      														afterParserOrEnumRuleCall();
            	            	      													
            	            	    }

            	            	    }


            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop250;
            	                }
            	            } while (true);


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalKim.g:11635:4: ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
            	    {
            	    // InternalKim.g:11635:4: ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
            	    // InternalKim.g:11636:5: {...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 2)");
            	    }
            	    // InternalKim.g:11636:117: ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    // InternalKim.g:11637:6: ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 2);
            	    // InternalKim.g:11640:9: ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) )
            	    // InternalKim.g:11640:10: {...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:11640:19: ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) )
            	    int alt254=2;
            	    int LA254_0 = input.LA(1);

            	    if ( (LA254_0==180) ) {
            	        alt254=1;
            	    }
            	    else if ( (LA254_0==181) ) {
            	        alt254=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 254, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt254) {
            	        case 1 :
            	            // InternalKim.g:11640:20: (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* )
            	            {
            	            // InternalKim.g:11640:20: (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* )
            	            // InternalKim.g:11641:10: otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )*
            	            {
            	            otherlv_19=(Token)match(input,180,FOLLOW_95); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_19, grammarAccess.getConceptStatementBodyAccess().getExposesKeyword_3_2_0_0());
            	              									
            	            }
            	            // InternalKim.g:11645:10: ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) )
            	            // InternalKim.g:11646:11: (lv_contextualizedTraits_20_0= ruleObservableSemantics )
            	            {
            	            // InternalKim.g:11646:11: (lv_contextualizedTraits_20_0= ruleObservableSemantics )
            	            // InternalKim.g:11647:12: lv_contextualizedTraits_20_0= ruleObservableSemantics
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getContextualizedTraitsObservableSemanticsParserRuleCall_3_2_0_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_143);
            	            lv_contextualizedTraits_20_0=ruleObservableSemantics();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												add(
            	              													current,
            	              													"contextualizedTraits",
            	              													lv_contextualizedTraits_20_0,
            	              													"org.integratedmodelling.kim.Kim.ObservableSemantics");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }

            	            // InternalKim.g:11664:10: (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )*
            	            loop252:
            	            do {
            	                int alt252=2;
            	                int LA252_0 = input.LA(1);

            	                if ( (LA252_0==27) ) {
            	                    alt252=1;
            	                }


            	                switch (alt252) {
            	            	case 1 :
            	            	    // InternalKim.g:11665:11: otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) )
            	            	    {
            	            	    otherlv_21=(Token)match(input,27,FOLLOW_95); if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      											newLeafNode(otherlv_21, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_2_0_2_0());
            	            	      										
            	            	    }
            	            	    // InternalKim.g:11669:11: ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) )
            	            	    // InternalKim.g:11670:12: (lv_contextualizedTraits_22_0= ruleObservableSemantics )
            	            	    {
            	            	    // InternalKim.g:11670:12: (lv_contextualizedTraits_22_0= ruleObservableSemantics )
            	            	    // InternalKim.g:11671:13: lv_contextualizedTraits_22_0= ruleObservableSemantics
            	            	    {
            	            	    if ( state.backtracking==0 ) {

            	            	      													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getContextualizedTraitsObservableSemanticsParserRuleCall_3_2_0_2_1_0());
            	            	      												
            	            	    }
            	            	    pushFollow(FOLLOW_143);
            	            	    lv_contextualizedTraits_22_0=ruleObservableSemantics();

            	            	    state._fsp--;
            	            	    if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      													if (current==null) {
            	            	      														current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	            	      													}
            	            	      													add(
            	            	      														current,
            	            	      														"contextualizedTraits",
            	            	      														lv_contextualizedTraits_22_0,
            	            	      														"org.integratedmodelling.kim.Kim.ObservableSemantics");
            	            	      													afterParserOrEnumRuleCall();
            	            	      												
            	            	    }

            	            	    }


            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop252;
            	                }
            	            } while (true);


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:11691:9: ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* )
            	            {
            	            // InternalKim.g:11691:9: ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* )
            	            // InternalKim.g:11692:10: ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )*
            	            {
            	            // InternalKim.g:11692:10: ( (lv_specific_23_0= 'exposing' ) )
            	            // InternalKim.g:11693:11: (lv_specific_23_0= 'exposing' )
            	            {
            	            // InternalKim.g:11693:11: (lv_specific_23_0= 'exposing' )
            	            // InternalKim.g:11694:12: lv_specific_23_0= 'exposing'
            	            {
            	            lv_specific_23_0=(Token)match(input,181,FOLLOW_23); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_specific_23_0, grammarAccess.getConceptStatementBodyAccess().getSpecificExposingKeyword_3_2_1_0_0());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												setWithLastConsumed(current, "specific", true, "exposing");
            	              											
            	            }

            	            }


            	            }

            	            // InternalKim.g:11706:10: ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) )
            	            // InternalKim.g:11707:11: (lv_contextualizesTraits_24_0= ruleConceptDeclaration )
            	            {
            	            // InternalKim.g:11707:11: (lv_contextualizesTraits_24_0= ruleConceptDeclaration )
            	            // InternalKim.g:11708:12: lv_contextualizesTraits_24_0= ruleConceptDeclaration
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getContextualizesTraitsConceptDeclarationParserRuleCall_3_2_1_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_143);
            	            lv_contextualizesTraits_24_0=ruleConceptDeclaration();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												add(
            	              													current,
            	              													"contextualizesTraits",
            	              													lv_contextualizesTraits_24_0,
            	              													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }

            	            // InternalKim.g:11725:10: (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )*
            	            loop253:
            	            do {
            	                int alt253=2;
            	                int LA253_0 = input.LA(1);

            	                if ( (LA253_0==27) ) {
            	                    alt253=1;
            	                }


            	                switch (alt253) {
            	            	case 1 :
            	            	    // InternalKim.g:11726:11: otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) )
            	            	    {
            	            	    otherlv_25=(Token)match(input,27,FOLLOW_23); if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      											newLeafNode(otherlv_25, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_2_1_2_0());
            	            	      										
            	            	    }
            	            	    // InternalKim.g:11730:11: ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) )
            	            	    // InternalKim.g:11731:12: (lv_contextualizesTraits_26_0= ruleConceptDeclaration )
            	            	    {
            	            	    // InternalKim.g:11731:12: (lv_contextualizesTraits_26_0= ruleConceptDeclaration )
            	            	    // InternalKim.g:11732:13: lv_contextualizesTraits_26_0= ruleConceptDeclaration
            	            	    {
            	            	    if ( state.backtracking==0 ) {

            	            	      													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getContextualizesTraitsConceptDeclarationParserRuleCall_3_2_1_2_1_0());
            	            	      												
            	            	    }
            	            	    pushFollow(FOLLOW_143);
            	            	    lv_contextualizesTraits_26_0=ruleConceptDeclaration();

            	            	    state._fsp--;
            	            	    if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      													if (current==null) {
            	            	      														current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	            	      													}
            	            	      													add(
            	            	      														current,
            	            	      														"contextualizesTraits",
            	            	      														lv_contextualizesTraits_26_0,
            	            	      														"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	            	      													afterParserOrEnumRuleCall();
            	            	      												
            	            	    }

            	            	    }


            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop253;
            	                }
            	            } while (true);


            	            }


            	            }
            	            break;

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalKim.g:11757:4: ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( ( (lv_definedAuthority_29_1= RULE_UPPERCASE_ID | lv_definedAuthority_29_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) )
            	    {
            	    // InternalKim.g:11757:4: ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( ( (lv_definedAuthority_29_1= RULE_UPPERCASE_ID | lv_definedAuthority_29_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) )
            	    // InternalKim.g:11758:5: {...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( ( (lv_definedAuthority_29_1= RULE_UPPERCASE_ID | lv_definedAuthority_29_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 3)");
            	    }
            	    // InternalKim.g:11758:117: ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( ( (lv_definedAuthority_29_1= RULE_UPPERCASE_ID | lv_definedAuthority_29_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) )
            	    // InternalKim.g:11759:6: ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( ( (lv_definedAuthority_29_1= RULE_UPPERCASE_ID | lv_definedAuthority_29_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 3);
            	    // InternalKim.g:11762:9: ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( ( (lv_definedAuthority_29_1= RULE_UPPERCASE_ID | lv_definedAuthority_29_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) )
            	    // InternalKim.g:11762:10: {...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( ( (lv_definedAuthority_29_1= RULE_UPPERCASE_ID | lv_definedAuthority_29_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:11762:19: (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( ( (lv_definedAuthority_29_1= RULE_UPPERCASE_ID | lv_definedAuthority_29_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) )
            	    // InternalKim.g:11762:20: otherlv_27= 'defines' ( (otherlv_28= 'authority' ( ( (lv_definedAuthority_29_1= RULE_UPPERCASE_ID | lv_definedAuthority_29_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) )
            	    {
            	    otherlv_27=(Token)match(input,182,FOLLOW_144); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_27, grammarAccess.getConceptStatementBodyAccess().getDefinesKeyword_3_3_0());
            	      								
            	    }
            	    // InternalKim.g:11766:9: ( (otherlv_28= 'authority' ( ( (lv_definedAuthority_29_1= RULE_UPPERCASE_ID | lv_definedAuthority_29_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) )
            	    int alt256=2;
            	    int LA256_0 = input.LA(1);

            	    if ( (LA256_0==183) ) {
            	        alt256=1;
            	    }
            	    else if ( ((LA256_0>=RULE_LOWERCASE_ID && LA256_0<=RULE_UPPERCASE_ID)||LA256_0==RULE_CAMELCASE_ID||LA256_0==RULE_LOWERCASE_DASHID||LA256_0==RULE_UPPERCASE_PATH||LA256_0==38||(LA256_0>=132 && LA256_0<=133)||(LA256_0>=141 && LA256_0<=142)||(LA256_0>=144 && LA256_0<=149)||(LA256_0>=151 && LA256_0<=163)) ) {
            	        alt256=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 256, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt256) {
            	        case 1 :
            	            // InternalKim.g:11767:10: (otherlv_28= 'authority' ( ( (lv_definedAuthority_29_1= RULE_UPPERCASE_ID | lv_definedAuthority_29_2= RULE_UPPERCASE_PATH ) ) ) )
            	            {
            	            // InternalKim.g:11767:10: (otherlv_28= 'authority' ( ( (lv_definedAuthority_29_1= RULE_UPPERCASE_ID | lv_definedAuthority_29_2= RULE_UPPERCASE_PATH ) ) ) )
            	            // InternalKim.g:11768:11: otherlv_28= 'authority' ( ( (lv_definedAuthority_29_1= RULE_UPPERCASE_ID | lv_definedAuthority_29_2= RULE_UPPERCASE_PATH ) ) )
            	            {
            	            otherlv_28=(Token)match(input,183,FOLLOW_120); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_28, grammarAccess.getConceptStatementBodyAccess().getAuthorityKeyword_3_3_1_0_0());
            	              										
            	            }
            	            // InternalKim.g:11772:11: ( ( (lv_definedAuthority_29_1= RULE_UPPERCASE_ID | lv_definedAuthority_29_2= RULE_UPPERCASE_PATH ) ) )
            	            // InternalKim.g:11773:12: ( (lv_definedAuthority_29_1= RULE_UPPERCASE_ID | lv_definedAuthority_29_2= RULE_UPPERCASE_PATH ) )
            	            {
            	            // InternalKim.g:11773:12: ( (lv_definedAuthority_29_1= RULE_UPPERCASE_ID | lv_definedAuthority_29_2= RULE_UPPERCASE_PATH ) )
            	            // InternalKim.g:11774:13: (lv_definedAuthority_29_1= RULE_UPPERCASE_ID | lv_definedAuthority_29_2= RULE_UPPERCASE_PATH )
            	            {
            	            // InternalKim.g:11774:13: (lv_definedAuthority_29_1= RULE_UPPERCASE_ID | lv_definedAuthority_29_2= RULE_UPPERCASE_PATH )
            	            int alt255=2;
            	            int LA255_0 = input.LA(1);

            	            if ( (LA255_0==RULE_UPPERCASE_ID) ) {
            	                alt255=1;
            	            }
            	            else if ( (LA255_0==RULE_UPPERCASE_PATH) ) {
            	                alt255=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 255, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt255) {
            	                case 1 :
            	                    // InternalKim.g:11775:14: lv_definedAuthority_29_1= RULE_UPPERCASE_ID
            	                    {
            	                    lv_definedAuthority_29_1=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_137); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      														newLeafNode(lv_definedAuthority_29_1, grammarAccess.getConceptStatementBodyAccess().getDefinedAuthorityUPPERCASE_IDTerminalRuleCall_3_3_1_0_1_0_0());
            	                      													
            	                    }
            	                    if ( state.backtracking==0 ) {

            	                      														if (current==null) {
            	                      															current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	                      														}
            	                      														setWithLastConsumed(
            	                      															current,
            	                      															"definedAuthority",
            	                      															lv_definedAuthority_29_1,
            	                      															"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
            	                      													
            	                    }

            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalKim.g:11790:14: lv_definedAuthority_29_2= RULE_UPPERCASE_PATH
            	                    {
            	                    lv_definedAuthority_29_2=(Token)match(input,RULE_UPPERCASE_PATH,FOLLOW_137); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      														newLeafNode(lv_definedAuthority_29_2, grammarAccess.getConceptStatementBodyAccess().getDefinedAuthorityUPPERCASE_PATHTerminalRuleCall_3_3_1_0_1_0_1());
            	                      													
            	                    }
            	                    if ( state.backtracking==0 ) {

            	                      														if (current==null) {
            	                      															current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	                      														}
            	                      														setWithLastConsumed(
            	                      															current,
            	                      															"definedAuthority",
            	                      															lv_definedAuthority_29_2,
            	                      															"org.integratedmodelling.kim.Kim.UPPERCASE_PATH");
            	                      													
            	                    }

            	                    }
            	                    break;

            	            }


            	            }


            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:11809:10: ( (lv_upperConcept_30_0= ruleConcept ) )
            	            {
            	            // InternalKim.g:11809:10: ( (lv_upperConcept_30_0= ruleConcept ) )
            	            // InternalKim.g:11810:11: (lv_upperConcept_30_0= ruleConcept )
            	            {
            	            // InternalKim.g:11810:11: (lv_upperConcept_30_0= ruleConcept )
            	            // InternalKim.g:11811:12: lv_upperConcept_30_0= ruleConcept
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getUpperConceptConceptParserRuleCall_3_3_1_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_137);
            	            lv_upperConcept_30_0=ruleConcept();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												set(
            	              													current,
            	              													"upperConcept",
            	              													lv_upperConcept_30_0,
            	              													"org.integratedmodelling.kim.Kim.Concept");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalKim.g:11835:4: ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:11835:4: ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) )
            	    // InternalKim.g:11836:5: {...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 4) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 4)");
            	    }
            	    // InternalKim.g:11836:117: ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) )
            	    // InternalKim.g:11837:6: ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 4);
            	    // InternalKim.g:11840:9: ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) )
            	    // InternalKim.g:11840:10: {...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:11840:19: (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* )
            	    // InternalKim.g:11840:20: otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )*
            	    {
            	    otherlv_31=(Token)match(input,184,FOLLOW_145); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_31, grammarAccess.getConceptStatementBodyAccess().getRequiresKeyword_3_4_0());
            	      								
            	    }
            	    // InternalKim.g:11844:9: ( (lv_requirements_32_0= ruleIdentityRequirement ) )
            	    // InternalKim.g:11845:10: (lv_requirements_32_0= ruleIdentityRequirement )
            	    {
            	    // InternalKim.g:11845:10: (lv_requirements_32_0= ruleIdentityRequirement )
            	    // InternalKim.g:11846:11: lv_requirements_32_0= ruleIdentityRequirement
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRequirementsIdentityRequirementParserRuleCall_3_4_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_143);
            	    lv_requirements_32_0=ruleIdentityRequirement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"requirements",
            	      												lv_requirements_32_0,
            	      												"org.integratedmodelling.kim.Kim.IdentityRequirement");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:11863:9: (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )*
            	    loop257:
            	    do {
            	        int alt257=2;
            	        int LA257_0 = input.LA(1);

            	        if ( (LA257_0==27) ) {
            	            alt257=1;
            	        }


            	        switch (alt257) {
            	    	case 1 :
            	    	    // InternalKim.g:11864:10: otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) )
            	    	    {
            	    	    otherlv_33=(Token)match(input,27,FOLLOW_145); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_33, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_4_2_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:11868:10: ( (lv_requirements_34_0= ruleIdentityRequirement ) )
            	    	    // InternalKim.g:11869:11: (lv_requirements_34_0= ruleIdentityRequirement )
            	    	    {
            	    	    // InternalKim.g:11869:11: (lv_requirements_34_0= ruleIdentityRequirement )
            	    	    // InternalKim.g:11870:12: lv_requirements_34_0= ruleIdentityRequirement
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRequirementsIdentityRequirementParserRuleCall_3_4_2_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_143);
            	    	    lv_requirements_34_0=ruleIdentityRequirement();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"requirements",
            	    	      													lv_requirements_34_0,
            	    	      													"org.integratedmodelling.kim.Kim.IdentityRequirement");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop257;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalKim.g:11894:4: ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:11894:4: ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:11895:5: {...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 5) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 5)");
            	    }
            	    // InternalKim.g:11895:117: ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:11896:6: ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 5);
            	    // InternalKim.g:11899:9: ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) )
            	    // InternalKim.g:11899:10: {...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:11899:19: (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) )
            	    // InternalKim.g:11899:20: otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) )
            	    {
            	    otherlv_35=(Token)match(input,185,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_35, grammarAccess.getConceptStatementBodyAccess().getDescribesKeyword_3_5_0());
            	      								
            	    }
            	    // InternalKim.g:11903:9: ( (lv_describedQuality_36_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:11904:10: (lv_describedQuality_36_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:11904:10: (lv_describedQuality_36_0= ruleConceptDeclaration )
            	    // InternalKim.g:11905:11: lv_describedQuality_36_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDescribedQualityConceptDeclarationParserRuleCall_3_5_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_137);
            	    lv_describedQuality_36_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											set(
            	      												current,
            	      												"describedQuality",
            	      												lv_describedQuality_36_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 7 :
            	    // InternalKim.g:11928:4: ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:11928:4: ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:11929:5: {...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 6) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 6)");
            	    }
            	    // InternalKim.g:11929:117: ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:11930:6: ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 6);
            	    // InternalKim.g:11933:9: ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) )
            	    // InternalKim.g:11933:10: {...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:11933:19: (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) )
            	    // InternalKim.g:11933:20: otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) )
            	    {
            	    otherlv_37=(Token)match(input,186,FOLLOW_75); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_37, grammarAccess.getConceptStatementBodyAccess().getIncreasesKeyword_3_6_0());
            	      								
            	    }
            	    otherlv_38=(Token)match(input,99,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_38, grammarAccess.getConceptStatementBodyAccess().getWithKeyword_3_6_1());
            	      								
            	    }
            	    // InternalKim.g:11941:9: ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:11942:10: (lv_describedProportionality_39_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:11942:10: (lv_describedProportionality_39_0= ruleConceptDeclaration )
            	    // InternalKim.g:11943:11: lv_describedProportionality_39_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDescribedProportionalityConceptDeclarationParserRuleCall_3_6_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_137);
            	    lv_describedProportionality_39_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											set(
            	      												current,
            	      												"describedProportionality",
            	      												lv_describedProportionality_39_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 8 :
            	    // InternalKim.g:11966:4: ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:11966:4: ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:11967:5: {...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 7) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 7)");
            	    }
            	    // InternalKim.g:11967:117: ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:11968:6: ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 7);
            	    // InternalKim.g:11971:9: ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) )
            	    // InternalKim.g:11971:10: {...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:11971:19: (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) )
            	    // InternalKim.g:11971:20: otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) )
            	    {
            	    otherlv_40=(Token)match(input,187,FOLLOW_75); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_40, grammarAccess.getConceptStatementBodyAccess().getDecreasesKeyword_3_7_0());
            	      								
            	    }
            	    otherlv_41=(Token)match(input,99,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_41, grammarAccess.getConceptStatementBodyAccess().getWithKeyword_3_7_1());
            	      								
            	    }
            	    // InternalKim.g:11979:9: ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:11980:10: (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:11980:10: (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration )
            	    // InternalKim.g:11981:11: lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDescribedInverseProportionalityQualityConceptDeclarationParserRuleCall_3_7_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_137);
            	    lv_describedInverseProportionalityQuality_42_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											set(
            	      												current,
            	      												"describedInverseProportionalityQuality",
            	      												lv_describedInverseProportionalityQuality_42_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 9 :
            	    // InternalKim.g:12004:4: ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:12004:4: ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:12005:5: {...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 8) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 8)");
            	    }
            	    // InternalKim.g:12005:117: ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:12006:6: ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 8);
            	    // InternalKim.g:12009:9: ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) )
            	    // InternalKim.g:12009:10: {...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:12009:19: (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) )
            	    // InternalKim.g:12009:20: otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) )
            	    {
            	    otherlv_43=(Token)match(input,188,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_43, grammarAccess.getConceptStatementBodyAccess().getMarksKeyword_3_8_0());
            	      								
            	    }
            	    // InternalKim.g:12013:9: ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:12014:10: (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:12014:10: (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration )
            	    // InternalKim.g:12015:11: lv_describedNonzeroQuality_44_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDescribedNonzeroQualityConceptDeclarationParserRuleCall_3_8_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_137);
            	    lv_describedNonzeroQuality_44_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											set(
            	      												current,
            	      												"describedNonzeroQuality",
            	      												lv_describedNonzeroQuality_44_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 10 :
            	    // InternalKim.g:12038:4: ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:12038:4: ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:12039:5: {...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 9) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 9)");
            	    }
            	    // InternalKim.g:12039:117: ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:12040:6: ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 9);
            	    // InternalKim.g:12043:9: ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) )
            	    // InternalKim.g:12043:10: {...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:12043:19: (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) )
            	    // InternalKim.g:12043:20: otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) )
            	    {
            	    otherlv_45=(Token)match(input,189,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_45, grammarAccess.getConceptStatementBodyAccess().getClassifiesKeyword_3_9_0());
            	      								
            	    }
            	    // InternalKim.g:12047:9: ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:12048:10: (lv_classifiesQuality_46_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:12048:10: (lv_classifiesQuality_46_0= ruleConceptDeclaration )
            	    // InternalKim.g:12049:11: lv_classifiesQuality_46_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getClassifiesQualityConceptDeclarationParserRuleCall_3_9_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_137);
            	    lv_classifiesQuality_46_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											set(
            	      												current,
            	      												"classifiesQuality",
            	      												lv_classifiesQuality_46_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 11 :
            	    // InternalKim.g:12072:4: ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:12072:4: ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:12073:5: {...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 10) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 10)");
            	    }
            	    // InternalKim.g:12073:118: ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:12074:6: ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 10);
            	    // InternalKim.g:12077:9: ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) )
            	    // InternalKim.g:12077:10: {...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:12077:19: (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) )
            	    // InternalKim.g:12077:20: otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) )
            	    {
            	    otherlv_47=(Token)match(input,190,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_47, grammarAccess.getConceptStatementBodyAccess().getDiscretizesKeyword_3_10_0());
            	      								
            	    }
            	    // InternalKim.g:12081:9: ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:12082:10: (lv_discretizesQuality_48_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:12082:10: (lv_discretizesQuality_48_0= ruleConceptDeclaration )
            	    // InternalKim.g:12083:11: lv_discretizesQuality_48_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDiscretizesQualityConceptDeclarationParserRuleCall_3_10_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_137);
            	    lv_discretizesQuality_48_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											set(
            	      												current,
            	      												"discretizesQuality",
            	      												lv_discretizesQuality_48_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 12 :
            	    // InternalKim.g:12106:4: ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:12106:4: ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    // InternalKim.g:12107:5: {...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 11) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 11)");
            	    }
            	    // InternalKim.g:12107:118: ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) )
            	    // InternalKim.g:12108:6: ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 11);
            	    // InternalKim.g:12111:9: ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) )
            	    // InternalKim.g:12111:10: {...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:12111:19: (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* )
            	    // InternalKim.g:12111:20: otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )*
            	    {
            	    otherlv_49=(Token)match(input,191,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_49, grammarAccess.getConceptStatementBodyAccess().getInheritsKeyword_3_11_0());
            	      								
            	    }
            	    // InternalKim.g:12115:9: ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:12116:10: (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:12116:10: (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration )
            	    // InternalKim.g:12117:11: lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getActuallyInheritedTraitsConceptDeclarationParserRuleCall_3_11_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_143);
            	    lv_actuallyInheritedTraits_50_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"actuallyInheritedTraits",
            	      												lv_actuallyInheritedTraits_50_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:12134:9: (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )*
            	    loop258:
            	    do {
            	        int alt258=2;
            	        int LA258_0 = input.LA(1);

            	        if ( (LA258_0==27) ) {
            	            alt258=1;
            	        }


            	        switch (alt258) {
            	    	case 1 :
            	    	    // InternalKim.g:12135:10: otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) )
            	    	    {
            	    	    otherlv_51=(Token)match(input,27,FOLLOW_23); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_51, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_11_2_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:12139:10: ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) )
            	    	    // InternalKim.g:12140:11: (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration )
            	    	    {
            	    	    // InternalKim.g:12140:11: (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration )
            	    	    // InternalKim.g:12141:12: lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getActuallyInheritedTraitsConceptDeclarationParserRuleCall_3_11_2_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_143);
            	    	    lv_actuallyInheritedTraits_52_0=ruleConceptDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"actuallyInheritedTraits",
            	    	      													lv_actuallyInheritedTraits_52_0,
            	    	      													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop258;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 13 :
            	    // InternalKim.g:12165:4: ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
            	    {
            	    // InternalKim.g:12165:4: ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
            	    // InternalKim.g:12166:5: {...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 12) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 12)");
            	    }
            	    // InternalKim.g:12166:118: ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    // InternalKim.g:12167:6: ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 12);
            	    // InternalKim.g:12170:9: ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) )
            	    // InternalKim.g:12170:10: {...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:12170:19: (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) )
            	    // InternalKim.g:12170:20: otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* )
            	    {
            	    otherlv_53=(Token)match(input,192,FOLLOW_146); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_53, grammarAccess.getConceptStatementBodyAccess().getHasKeyword_3_12_0());
            	      								
            	    }
            	    otherlv_54=(Token)match(input,193,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_54, grammarAccess.getConceptStatementBodyAccess().getRoleKeyword_3_12_1());
            	      								
            	    }
            	    // InternalKim.g:12178:9: ( (lv_roles_55_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:12179:10: (lv_roles_55_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:12179:10: (lv_roles_55_0= ruleConceptDeclaration )
            	    // InternalKim.g:12180:11: lv_roles_55_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRolesConceptDeclarationParserRuleCall_3_12_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_147);
            	    lv_roles_55_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"roles",
            	      												lv_roles_55_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:12197:9: (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )*
            	    loop259:
            	    do {
            	        int alt259=2;
            	        int LA259_0 = input.LA(1);

            	        if ( (LA259_0==27) ) {
            	            alt259=1;
            	        }


            	        switch (alt259) {
            	    	case 1 :
            	    	    // InternalKim.g:12198:10: otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) )
            	    	    {
            	    	    otherlv_56=(Token)match(input,27,FOLLOW_23); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_56, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_12_3_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:12202:10: ( (lv_roles_57_0= ruleConceptDeclaration ) )
            	    	    // InternalKim.g:12203:11: (lv_roles_57_0= ruleConceptDeclaration )
            	    	    {
            	    	    // InternalKim.g:12203:11: (lv_roles_57_0= ruleConceptDeclaration )
            	    	    // InternalKim.g:12204:12: lv_roles_57_0= ruleConceptDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRolesConceptDeclarationParserRuleCall_3_12_3_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_147);
            	    	    lv_roles_57_0=ruleConceptDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"roles",
            	    	      													lv_roles_57_0,
            	    	      													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop259;
            	        }
            	    } while (true);

            	    // InternalKim.g:12222:9: (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )?
            	    int alt261=2;
            	    int LA261_0 = input.LA(1);

            	    if ( (LA261_0==194) ) {
            	        alt261=1;
            	    }
            	    switch (alt261) {
            	        case 1 :
            	            // InternalKim.g:12223:10: otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )*
            	            {
            	            otherlv_58=(Token)match(input,194,FOLLOW_23); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_58, grammarAccess.getConceptStatementBodyAccess().getTargetingKeyword_3_12_4_0());
            	              									
            	            }
            	            // InternalKim.g:12227:10: ( (lv_targetObservables_59_0= ruleConceptDeclaration ) )
            	            // InternalKim.g:12228:11: (lv_targetObservables_59_0= ruleConceptDeclaration )
            	            {
            	            // InternalKim.g:12228:11: (lv_targetObservables_59_0= ruleConceptDeclaration )
            	            // InternalKim.g:12229:12: lv_targetObservables_59_0= ruleConceptDeclaration
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getTargetObservablesConceptDeclarationParserRuleCall_3_12_4_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_148);
            	            lv_targetObservables_59_0=ruleConceptDeclaration();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												add(
            	              													current,
            	              													"targetObservables",
            	              													lv_targetObservables_59_0,
            	              													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }

            	            // InternalKim.g:12246:10: (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )*
            	            loop260:
            	            do {
            	                int alt260=2;
            	                int LA260_0 = input.LA(1);

            	                if ( (LA260_0==27) ) {
            	                    alt260=1;
            	                }


            	                switch (alt260) {
            	            	case 1 :
            	            	    // InternalKim.g:12247:11: otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) )
            	            	    {
            	            	    otherlv_60=(Token)match(input,27,FOLLOW_23); if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      											newLeafNode(otherlv_60, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_12_4_2_0());
            	            	      										
            	            	    }
            	            	    // InternalKim.g:12251:11: ( (lv_targetObservables_61_0= ruleConceptDeclaration ) )
            	            	    // InternalKim.g:12252:12: (lv_targetObservables_61_0= ruleConceptDeclaration )
            	            	    {
            	            	    // InternalKim.g:12252:12: (lv_targetObservables_61_0= ruleConceptDeclaration )
            	            	    // InternalKim.g:12253:13: lv_targetObservables_61_0= ruleConceptDeclaration
            	            	    {
            	            	    if ( state.backtracking==0 ) {

            	            	      													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getTargetObservablesConceptDeclarationParserRuleCall_3_12_4_2_1_0());
            	            	      												
            	            	    }
            	            	    pushFollow(FOLLOW_148);
            	            	    lv_targetObservables_61_0=ruleConceptDeclaration();

            	            	    state._fsp--;
            	            	    if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      													if (current==null) {
            	            	      														current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	            	      													}
            	            	      													add(
            	            	      														current,
            	            	      														"targetObservables",
            	            	      														lv_targetObservables_61_0,
            	            	      														"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	            	      													afterParserOrEnumRuleCall();
            	            	      												
            	            	    }

            	            	    }


            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop260;
            	                }
            	            } while (true);


            	            }
            	            break;

            	    }

            	    // InternalKim.g:12272:9: (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* )
            	    // InternalKim.g:12273:10: otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )*
            	    {
            	    otherlv_62=(Token)match(input,48,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(otherlv_62, grammarAccess.getConceptStatementBodyAccess().getInKeyword_3_12_5_0());
            	      									
            	    }
            	    // InternalKim.g:12277:10: ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:12278:11: (lv_restrictedObservables_63_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:12278:11: (lv_restrictedObservables_63_0= ruleConceptDeclaration )
            	    // InternalKim.g:12279:12: lv_restrictedObservables_63_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRestrictedObservablesConceptDeclarationParserRuleCall_3_12_5_1_0());
            	      											
            	    }
            	    pushFollow(FOLLOW_143);
            	    lv_restrictedObservables_63_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      												if (current==null) {
            	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      												}
            	      												add(
            	      													current,
            	      													"restrictedObservables",
            	      													lv_restrictedObservables_63_0,
            	      													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      												afterParserOrEnumRuleCall();
            	      											
            	    }

            	    }


            	    }

            	    // InternalKim.g:12296:10: (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )*
            	    loop262:
            	    do {
            	        int alt262=2;
            	        int LA262_0 = input.LA(1);

            	        if ( (LA262_0==27) ) {
            	            alt262=1;
            	        }


            	        switch (alt262) {
            	    	case 1 :
            	    	    // InternalKim.g:12297:11: otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) )
            	    	    {
            	    	    otherlv_64=(Token)match(input,27,FOLLOW_23); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      											newLeafNode(otherlv_64, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_12_5_2_0());
            	    	      										
            	    	    }
            	    	    // InternalKim.g:12301:11: ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) )
            	    	    // InternalKim.g:12302:12: (lv_restrictedObservables_65_0= ruleConceptDeclaration )
            	    	    {
            	    	    // InternalKim.g:12302:12: (lv_restrictedObservables_65_0= ruleConceptDeclaration )
            	    	    // InternalKim.g:12303:13: lv_restrictedObservables_65_0= ruleConceptDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRestrictedObservablesConceptDeclarationParserRuleCall_3_12_5_2_1_0());
            	    	      												
            	    	    }
            	    	    pushFollow(FOLLOW_143);
            	    	    lv_restrictedObservables_65_0=ruleConceptDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      													if (current==null) {
            	    	      														current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      													}
            	    	      													add(
            	    	      														current,
            	    	      														"restrictedObservables",
            	    	      														lv_restrictedObservables_65_0,
            	    	      														"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	    	      													afterParserOrEnumRuleCall();
            	    	      												
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop262;
            	        }
            	    } while (true);


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 14 :
            	    // InternalKim.g:12328:4: ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) )
            	    {
            	    // InternalKim.g:12328:4: ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) )
            	    // InternalKim.g:12329:5: {...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 13) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 13)");
            	    }
            	    // InternalKim.g:12329:118: ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) )
            	    // InternalKim.g:12330:6: ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 13);
            	    // InternalKim.g:12333:9: ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) )
            	    // InternalKim.g:12333:10: {...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:12333:19: (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? )
            	    // InternalKim.g:12333:20: otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )?
            	    {
            	    otherlv_66=(Token)match(input,195,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_66, grammarAccess.getConceptStatementBodyAccess().getConfersKeyword_3_13_0());
            	      								
            	    }
            	    // InternalKim.g:12337:9: ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:12338:10: (lv_conferredTraits_67_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:12338:10: (lv_conferredTraits_67_0= ruleConceptDeclaration )
            	    // InternalKim.g:12339:11: lv_conferredTraits_67_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getConferredTraitsConceptDeclarationParserRuleCall_3_13_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_149);
            	    lv_conferredTraits_67_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"conferredTraits",
            	      												lv_conferredTraits_67_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:12356:9: (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )*
            	    loop263:
            	    do {
            	        int alt263=2;
            	        int LA263_0 = input.LA(1);

            	        if ( (LA263_0==27) ) {
            	            alt263=1;
            	        }


            	        switch (alt263) {
            	    	case 1 :
            	    	    // InternalKim.g:12357:10: otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) )
            	    	    {
            	    	    otherlv_68=(Token)match(input,27,FOLLOW_23); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_68, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_13_2_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:12361:10: ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) )
            	    	    // InternalKim.g:12362:11: (lv_conferredTraits_69_0= ruleConceptDeclaration )
            	    	    {
            	    	    // InternalKim.g:12362:11: (lv_conferredTraits_69_0= ruleConceptDeclaration )
            	    	    // InternalKim.g:12363:12: lv_conferredTraits_69_0= ruleConceptDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getConferredTraitsConceptDeclarationParserRuleCall_3_13_2_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_149);
            	    	    lv_conferredTraits_69_0=ruleConceptDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"conferredTraits",
            	    	      													lv_conferredTraits_69_0,
            	    	      													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop263;
            	        }
            	    } while (true);

            	    // InternalKim.g:12381:9: (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )?
            	    int alt265=2;
            	    int LA265_0 = input.LA(1);

            	    if ( (LA265_0==36) ) {
            	        alt265=1;
            	    }
            	    switch (alt265) {
            	        case 1 :
            	            // InternalKim.g:12382:10: otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )*
            	            {
            	            otherlv_70=(Token)match(input,36,FOLLOW_23); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_70, grammarAccess.getConceptStatementBodyAccess().getToKeyword_3_13_3_0());
            	              									
            	            }
            	            // InternalKim.g:12386:10: ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) )
            	            // InternalKim.g:12387:11: (lv_conferredTargets_71_0= ruleConceptDeclaration )
            	            {
            	            // InternalKim.g:12387:11: (lv_conferredTargets_71_0= ruleConceptDeclaration )
            	            // InternalKim.g:12388:12: lv_conferredTargets_71_0= ruleConceptDeclaration
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getConferredTargetsConceptDeclarationParserRuleCall_3_13_3_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_143);
            	            lv_conferredTargets_71_0=ruleConceptDeclaration();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												add(
            	              													current,
            	              													"conferredTargets",
            	              													lv_conferredTargets_71_0,
            	              													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }

            	            // InternalKim.g:12405:10: (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )*
            	            loop264:
            	            do {
            	                int alt264=2;
            	                int LA264_0 = input.LA(1);

            	                if ( (LA264_0==27) ) {
            	                    alt264=1;
            	                }


            	                switch (alt264) {
            	            	case 1 :
            	            	    // InternalKim.g:12406:11: otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) )
            	            	    {
            	            	    otherlv_72=(Token)match(input,27,FOLLOW_23); if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      											newLeafNode(otherlv_72, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_13_3_2_0());
            	            	      										
            	            	    }
            	            	    // InternalKim.g:12410:11: ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) )
            	            	    // InternalKim.g:12411:12: (lv_conferredTargets_73_0= ruleConceptDeclaration )
            	            	    {
            	            	    // InternalKim.g:12411:12: (lv_conferredTargets_73_0= ruleConceptDeclaration )
            	            	    // InternalKim.g:12412:13: lv_conferredTargets_73_0= ruleConceptDeclaration
            	            	    {
            	            	    if ( state.backtracking==0 ) {

            	            	      													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getConferredTargetsConceptDeclarationParserRuleCall_3_13_3_2_1_0());
            	            	      												
            	            	    }
            	            	    pushFollow(FOLLOW_143);
            	            	    lv_conferredTargets_73_0=ruleConceptDeclaration();

            	            	    state._fsp--;
            	            	    if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      													if (current==null) {
            	            	      														current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	            	      													}
            	            	      													add(
            	            	      														current,
            	            	      														"conferredTargets",
            	            	      														lv_conferredTargets_73_0,
            	            	      														"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	            	      													afterParserOrEnumRuleCall();
            	            	      												
            	            	    }

            	            	    }


            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop264;
            	                }
            	            } while (true);


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 15 :
            	    // InternalKim.g:12437:4: ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:12437:4: ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:12438:5: {...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 14) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 14)");
            	    }
            	    // InternalKim.g:12438:118: ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:12439:6: ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 14);
            	    // InternalKim.g:12442:9: ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) )
            	    // InternalKim.g:12442:10: {...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:12442:19: ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) )
            	    // InternalKim.g:12442:20: (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) )
            	    {
            	    // InternalKim.g:12442:20: (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) )
            	    int alt266=3;
            	    switch ( input.LA(1) ) {
            	    case 196:
            	        {
            	        alt266=1;
            	        }
            	        break;
            	    case 197:
            	        {
            	        alt266=2;
            	        }
            	        break;
            	    case 198:
            	        {
            	        alt266=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 266, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt266) {
            	        case 1 :
            	            // InternalKim.g:12443:10: otherlv_74= 'part'
            	            {
            	            otherlv_74=(Token)match(input,196,FOLLOW_121); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_74, grammarAccess.getConceptStatementBodyAccess().getPartKeyword_3_14_0_0());
            	              									
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:12448:10: ( (lv_constituent_75_0= 'constituent' ) )
            	            {
            	            // InternalKim.g:12448:10: ( (lv_constituent_75_0= 'constituent' ) )
            	            // InternalKim.g:12449:11: (lv_constituent_75_0= 'constituent' )
            	            {
            	            // InternalKim.g:12449:11: (lv_constituent_75_0= 'constituent' )
            	            // InternalKim.g:12450:12: lv_constituent_75_0= 'constituent'
            	            {
            	            lv_constituent_75_0=(Token)match(input,197,FOLLOW_121); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_constituent_75_0, grammarAccess.getConceptStatementBodyAccess().getConstituentConstituentKeyword_3_14_0_1_0());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												setWithLastConsumed(current, "constituent", true, "constituent");
            	              											
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 3 :
            	            // InternalKim.g:12463:10: ( (lv_constitutes_76_0= 'consists' ) )
            	            {
            	            // InternalKim.g:12463:10: ( (lv_constitutes_76_0= 'consists' ) )
            	            // InternalKim.g:12464:11: (lv_constitutes_76_0= 'consists' )
            	            {
            	            // InternalKim.g:12464:11: (lv_constitutes_76_0= 'consists' )
            	            // InternalKim.g:12465:12: lv_constitutes_76_0= 'consists'
            	            {
            	            lv_constitutes_76_0=(Token)match(input,198,FOLLOW_121); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_constitutes_76_0, grammarAccess.getConceptStatementBodyAccess().getConstitutesConsistsKeyword_3_14_0_2_0());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												setWithLastConsumed(current, "constitutes", true, "consists");
            	              											
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }

            	    // InternalKim.g:12478:9: ( (lv_partOf_77_0= 'of' ) )
            	    // InternalKim.g:12479:10: (lv_partOf_77_0= 'of' )
            	    {
            	    // InternalKim.g:12479:10: (lv_partOf_77_0= 'of' )
            	    // InternalKim.g:12480:11: lv_partOf_77_0= 'of'
            	    {
            	    lv_partOf_77_0=(Token)match(input,123,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_partOf_77_0, grammarAccess.getConceptStatementBodyAccess().getPartOfOfKeyword_3_14_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											setWithLastConsumed(current, "partOf", true, "of");
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:12492:9: ( (lv_whole_78_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:12493:10: (lv_whole_78_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:12493:10: (lv_whole_78_0= ruleConceptDeclaration )
            	    // InternalKim.g:12494:11: lv_whole_78_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getWholeConceptDeclarationParserRuleCall_3_14_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_137);
            	    lv_whole_78_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											set(
            	      												current,
            	      												"whole",
            	      												lv_whole_78_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 16 :
            	    // InternalKim.g:12517:4: ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:12517:4: ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    // InternalKim.g:12518:5: {...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 15) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 15)");
            	    }
            	    // InternalKim.g:12518:118: ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) )
            	    // InternalKim.g:12519:6: ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 15);
            	    // InternalKim.g:12522:9: ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) )
            	    // InternalKim.g:12522:10: {...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:12522:19: (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* )
            	    // InternalKim.g:12522:20: otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )*
            	    {
            	    otherlv_79=(Token)match(input,199,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_79, grammarAccess.getConceptStatementBodyAccess().getCreatesKeyword_3_15_0());
            	      								
            	    }
            	    // InternalKim.g:12526:9: ( (lv_creates_80_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:12527:10: (lv_creates_80_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:12527:10: (lv_creates_80_0= ruleConceptDeclaration )
            	    // InternalKim.g:12528:11: lv_creates_80_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getCreatesConceptDeclarationParserRuleCall_3_15_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_143);
            	    lv_creates_80_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"creates",
            	      												lv_creates_80_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:12545:9: (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )*
            	    loop267:
            	    do {
            	        int alt267=2;
            	        int LA267_0 = input.LA(1);

            	        if ( (LA267_0==27) ) {
            	            alt267=1;
            	        }


            	        switch (alt267) {
            	    	case 1 :
            	    	    // InternalKim.g:12546:10: otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) )
            	    	    {
            	    	    otherlv_81=(Token)match(input,27,FOLLOW_23); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_81, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_15_2_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:12550:10: ( (lv_creates_82_0= ruleConceptDeclaration ) )
            	    	    // InternalKim.g:12551:11: (lv_creates_82_0= ruleConceptDeclaration )
            	    	    {
            	    	    // InternalKim.g:12551:11: (lv_creates_82_0= ruleConceptDeclaration )
            	    	    // InternalKim.g:12552:12: lv_creates_82_0= ruleConceptDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getCreatesConceptDeclarationParserRuleCall_3_15_2_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_143);
            	    	    lv_creates_82_0=ruleConceptDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"creates",
            	    	      													lv_creates_82_0,
            	    	      													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop267;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 17 :
            	    // InternalKim.g:12576:4: ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:12576:4: ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) )
            	    // InternalKim.g:12577:5: {...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 16) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 16)");
            	    }
            	    // InternalKim.g:12577:118: ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) )
            	    // InternalKim.g:12578:6: ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 16);
            	    // InternalKim.g:12581:9: ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) )
            	    // InternalKim.g:12581:10: {...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:12581:19: (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* )
            	    // InternalKim.g:12581:20: otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )*
            	    {
            	    otherlv_83=(Token)match(input,200,FOLLOW_25); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_83, grammarAccess.getConceptStatementBodyAccess().getAppliesKeyword_3_16_0());
            	      								
            	    }
            	    otherlv_84=(Token)match(input,36,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_84, grammarAccess.getConceptStatementBodyAccess().getToKeyword_3_16_1());
            	      								
            	    }
            	    // InternalKim.g:12589:9: ( (lv_traitTargets_85_0= ruleApplicableTarget ) )
            	    // InternalKim.g:12590:10: (lv_traitTargets_85_0= ruleApplicableTarget )
            	    {
            	    // InternalKim.g:12590:10: (lv_traitTargets_85_0= ruleApplicableTarget )
            	    // InternalKim.g:12591:11: lv_traitTargets_85_0= ruleApplicableTarget
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getTraitTargetsApplicableTargetParserRuleCall_3_16_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_143);
            	    lv_traitTargets_85_0=ruleApplicableTarget();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"traitTargets",
            	      												lv_traitTargets_85_0,
            	      												"org.integratedmodelling.kim.Kim.ApplicableTarget");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:12608:9: (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )*
            	    loop268:
            	    do {
            	        int alt268=2;
            	        int LA268_0 = input.LA(1);

            	        if ( (LA268_0==27) ) {
            	            alt268=1;
            	        }


            	        switch (alt268) {
            	    	case 1 :
            	    	    // InternalKim.g:12609:10: otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) )
            	    	    {
            	    	    otherlv_86=(Token)match(input,27,FOLLOW_23); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_86, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_16_3_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:12613:10: ( (lv_traitTargets_87_0= ruleApplicableTarget ) )
            	    	    // InternalKim.g:12614:11: (lv_traitTargets_87_0= ruleApplicableTarget )
            	    	    {
            	    	    // InternalKim.g:12614:11: (lv_traitTargets_87_0= ruleApplicableTarget )
            	    	    // InternalKim.g:12615:12: lv_traitTargets_87_0= ruleApplicableTarget
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getTraitTargetsApplicableTargetParserRuleCall_3_16_3_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_143);
            	    	    lv_traitTargets_87_0=ruleApplicableTarget();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"traitTargets",
            	    	      													lv_traitTargets_87_0,
            	    	      													"org.integratedmodelling.kim.Kim.ApplicableTarget");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop268;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 18 :
            	    // InternalKim.g:12639:4: ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:12639:4: ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) )
            	    // InternalKim.g:12640:5: {...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 17) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 17)");
            	    }
            	    // InternalKim.g:12640:118: ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) )
            	    // InternalKim.g:12641:6: ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 17);
            	    // InternalKim.g:12644:9: ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) )
            	    // InternalKim.g:12644:10: {...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:12644:19: (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* )
            	    // InternalKim.g:12644:20: otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )*
            	    {
            	    otherlv_88=(Token)match(input,201,FOLLOW_110); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_88, grammarAccess.getConceptStatementBodyAccess().getLinksKeyword_3_17_0());
            	      								
            	    }
            	    // InternalKim.g:12648:9: ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) )
            	    // InternalKim.g:12649:10: (lv_domains_89_0= ruleSimpleConceptDeclaration )
            	    {
            	    // InternalKim.g:12649:10: (lv_domains_89_0= ruleSimpleConceptDeclaration )
            	    // InternalKim.g:12650:11: lv_domains_89_0= ruleSimpleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDomainsSimpleConceptDeclarationParserRuleCall_3_17_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_25);
            	    lv_domains_89_0=ruleSimpleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"domains",
            	      												lv_domains_89_0,
            	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:12667:9: ( ( 'to' )=>otherlv_90= 'to' )
            	    // InternalKim.g:12668:10: ( 'to' )=>otherlv_90= 'to'
            	    {
            	    otherlv_90=(Token)match(input,36,FOLLOW_110); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(otherlv_90, grammarAccess.getConceptStatementBodyAccess().getToKeyword_3_17_2());
            	      									
            	    }

            	    }

            	    // InternalKim.g:12674:9: ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) )
            	    // InternalKim.g:12675:10: (lv_ranges_91_0= ruleSimpleConceptDeclaration )
            	    {
            	    // InternalKim.g:12675:10: (lv_ranges_91_0= ruleSimpleConceptDeclaration )
            	    // InternalKim.g:12676:11: lv_ranges_91_0= ruleSimpleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRangesSimpleConceptDeclarationParserRuleCall_3_17_3_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_143);
            	    lv_ranges_91_0=ruleSimpleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"ranges",
            	      												lv_ranges_91_0,
            	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:12693:9: (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )*
            	    loop269:
            	    do {
            	        int alt269=2;
            	        int LA269_0 = input.LA(1);

            	        if ( (LA269_0==27) ) {
            	            alt269=1;
            	        }


            	        switch (alt269) {
            	    	case 1 :
            	    	    // InternalKim.g:12694:10: otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) )
            	    	    {
            	    	    otherlv_92=(Token)match(input,27,FOLLOW_110); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_92, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_17_4_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:12698:10: ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) )
            	    	    // InternalKim.g:12699:11: (lv_domains_93_0= ruleSimpleConceptDeclaration )
            	    	    {
            	    	    // InternalKim.g:12699:11: (lv_domains_93_0= ruleSimpleConceptDeclaration )
            	    	    // InternalKim.g:12700:12: lv_domains_93_0= ruleSimpleConceptDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDomainsSimpleConceptDeclarationParserRuleCall_3_17_4_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_25);
            	    	    lv_domains_93_0=ruleSimpleConceptDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"domains",
            	    	      													lv_domains_93_0,
            	    	      													"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }

            	    	    // InternalKim.g:12717:10: ( ( 'to' )=>otherlv_94= 'to' )
            	    	    // InternalKim.g:12718:11: ( 'to' )=>otherlv_94= 'to'
            	    	    {
            	    	    otherlv_94=(Token)match(input,36,FOLLOW_110); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      											newLeafNode(otherlv_94, grammarAccess.getConceptStatementBodyAccess().getToKeyword_3_17_4_2());
            	    	      										
            	    	    }

            	    	    }

            	    	    // InternalKim.g:12724:10: ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) )
            	    	    // InternalKim.g:12725:11: (lv_ranges_95_0= ruleSimpleConceptDeclaration )
            	    	    {
            	    	    // InternalKim.g:12725:11: (lv_ranges_95_0= ruleSimpleConceptDeclaration )
            	    	    // InternalKim.g:12726:12: lv_ranges_95_0= ruleSimpleConceptDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRangesSimpleConceptDeclarationParserRuleCall_3_17_4_3_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_143);
            	    	    lv_ranges_95_0=ruleSimpleConceptDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"ranges",
            	    	      													lv_ranges_95_0,
            	    	      													"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop269;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 19 :
            	    // InternalKim.g:12750:4: ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:12750:4: ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:12751:5: {...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 18) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 18)");
            	    }
            	    // InternalKim.g:12751:118: ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:12752:6: ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 18);
            	    // InternalKim.g:12755:9: ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) )
            	    // InternalKim.g:12755:10: {...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:12755:19: (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) )
            	    // InternalKim.g:12755:20: otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) )
            	    {
            	    otherlv_96=(Token)match(input,202,FOLLOW_121); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_96, grammarAccess.getConceptStatementBodyAccess().getInverseKeyword_3_18_0());
            	      								
            	    }
            	    otherlv_97=(Token)match(input,123,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_97, grammarAccess.getConceptStatementBodyAccess().getOfKeyword_3_18_1());
            	      								
            	    }
            	    // InternalKim.g:12763:9: ( (lv_inverse_98_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:12764:10: (lv_inverse_98_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:12764:10: (lv_inverse_98_0= ruleConceptDeclaration )
            	    // InternalKim.g:12765:11: lv_inverse_98_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getInverseConceptDeclarationParserRuleCall_3_18_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_137);
            	    lv_inverse_98_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											set(
            	      												current,
            	      												"inverse",
            	      												lv_inverse_98_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 20 :
            	    // InternalKim.g:12788:4: ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:12788:4: ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    // InternalKim.g:12789:5: {...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 19) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 19)");
            	    }
            	    // InternalKim.g:12789:118: ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) )
            	    // InternalKim.g:12790:6: ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 19);
            	    // InternalKim.g:12793:9: ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) )
            	    // InternalKim.g:12793:10: {...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:12793:19: (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* )
            	    // InternalKim.g:12793:20: otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )*
            	    {
            	    otherlv_99=(Token)match(input,203,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_99, grammarAccess.getConceptStatementBodyAccess().getAffectsKeyword_3_19_0());
            	      								
            	    }
            	    // InternalKim.g:12797:9: ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:12798:10: (lv_qualitiesAffected_100_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:12798:10: (lv_qualitiesAffected_100_0= ruleConceptDeclaration )
            	    // InternalKim.g:12799:11: lv_qualitiesAffected_100_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getQualitiesAffectedConceptDeclarationParserRuleCall_3_19_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_143);
            	    lv_qualitiesAffected_100_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"qualitiesAffected",
            	      												lv_qualitiesAffected_100_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:12816:9: (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )*
            	    loop270:
            	    do {
            	        int alt270=2;
            	        int LA270_0 = input.LA(1);

            	        if ( (LA270_0==27) ) {
            	            alt270=1;
            	        }


            	        switch (alt270) {
            	    	case 1 :
            	    	    // InternalKim.g:12817:10: otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) )
            	    	    {
            	    	    otherlv_101=(Token)match(input,27,FOLLOW_23); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_101, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_19_2_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:12821:10: ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) )
            	    	    // InternalKim.g:12822:11: (lv_qualitiesAffected_102_0= ruleConceptDeclaration )
            	    	    {
            	    	    // InternalKim.g:12822:11: (lv_qualitiesAffected_102_0= ruleConceptDeclaration )
            	    	    // InternalKim.g:12823:12: lv_qualitiesAffected_102_0= ruleConceptDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getQualitiesAffectedConceptDeclarationParserRuleCall_3_19_2_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_143);
            	    	    lv_qualitiesAffected_102_0=ruleConceptDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"qualitiesAffected",
            	    	      													lv_qualitiesAffected_102_0,
            	    	      													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop270;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 21 :
            	    // InternalKim.g:12847:4: ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:12847:4: ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) )
            	    // InternalKim.g:12848:5: {...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 20) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 20)");
            	    }
            	    // InternalKim.g:12848:118: ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) )
            	    // InternalKim.g:12849:6: ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 20);
            	    // InternalKim.g:12852:9: ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) )
            	    // InternalKim.g:12852:10: {...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:12852:19: (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* )
            	    // InternalKim.g:12852:20: otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )*
            	    {
            	    otherlv_103=(Token)match(input,192,FOLLOW_150); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_103, grammarAccess.getConceptStatementBodyAccess().getHasKeyword_3_20_0());
            	      								
            	    }
            	    // InternalKim.g:12856:9: ( (lv_disjoint_104_0= 'disjoint' ) )?
            	    int alt271=2;
            	    int LA271_0 = input.LA(1);

            	    if ( (LA271_0==98) ) {
            	        alt271=1;
            	    }
            	    switch (alt271) {
            	        case 1 :
            	            // InternalKim.g:12857:10: (lv_disjoint_104_0= 'disjoint' )
            	            {
            	            // InternalKim.g:12857:10: (lv_disjoint_104_0= 'disjoint' )
            	            // InternalKim.g:12858:11: lv_disjoint_104_0= 'disjoint'
            	            {
            	            lv_disjoint_104_0=(Token)match(input,98,FOLLOW_151); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(lv_disjoint_104_0, grammarAccess.getConceptStatementBodyAccess().getDisjointDisjointKeyword_3_20_1_0());
            	              										
            	            }
            	            if ( state.backtracking==0 ) {

            	              											if (current==null) {
            	              												current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	              											}
            	              											setWithLastConsumed(current, "disjoint", true, "disjoint");
            	              										
            	            }

            	            }


            	            }
            	            break;

            	    }

            	    otherlv_105=(Token)match(input,112,FOLLOW_152); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_105, grammarAccess.getConceptStatementBodyAccess().getChildrenKeyword_3_20_2());
            	      								
            	    }
            	    // InternalKim.g:12874:9: ( (lv_children_106_0= ruleChildConcept ) )
            	    // InternalKim.g:12875:10: (lv_children_106_0= ruleChildConcept )
            	    {
            	    // InternalKim.g:12875:10: (lv_children_106_0= ruleChildConcept )
            	    // InternalKim.g:12876:11: lv_children_106_0= ruleChildConcept
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getChildrenChildConceptParserRuleCall_3_20_3_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_143);
            	    lv_children_106_0=ruleChildConcept();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"children",
            	      												lv_children_106_0,
            	      												"org.integratedmodelling.kim.Kim.ChildConcept");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:12893:9: (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )*
            	    loop272:
            	    do {
            	        int alt272=2;
            	        int LA272_0 = input.LA(1);

            	        if ( (LA272_0==27) ) {
            	            alt272=1;
            	        }


            	        switch (alt272) {
            	    	case 1 :
            	    	    // InternalKim.g:12894:10: otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) )
            	    	    {
            	    	    otherlv_107=(Token)match(input,27,FOLLOW_152); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_107, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_20_4_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:12898:10: ( (lv_children_108_0= ruleChildConcept ) )
            	    	    // InternalKim.g:12899:11: (lv_children_108_0= ruleChildConcept )
            	    	    {
            	    	    // InternalKim.g:12899:11: (lv_children_108_0= ruleChildConcept )
            	    	    // InternalKim.g:12900:12: lv_children_108_0= ruleChildConcept
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getChildrenChildConceptParserRuleCall_3_20_4_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_143);
            	    	    lv_children_108_0=ruleChildConcept();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"children",
            	    	      													lv_children_108_0,
            	    	      													"org.integratedmodelling.kim.Kim.ChildConcept");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop272;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 22 :
            	    // InternalKim.g:12924:4: ({...}? => ( ({...}? => (otherlv_109= 'implies' ( (lv_implications_110_0= ruleImplication ) ) (otherlv_111= ',' ( (lv_implications_112_0= ruleImplication ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:12924:4: ({...}? => ( ({...}? => (otherlv_109= 'implies' ( (lv_implications_110_0= ruleImplication ) ) (otherlv_111= ',' ( (lv_implications_112_0= ruleImplication ) ) )* ) ) ) )
            	    // InternalKim.g:12925:5: {...}? => ( ({...}? => (otherlv_109= 'implies' ( (lv_implications_110_0= ruleImplication ) ) (otherlv_111= ',' ( (lv_implications_112_0= ruleImplication ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21)");
            	    }
            	    // InternalKim.g:12925:118: ( ({...}? => (otherlv_109= 'implies' ( (lv_implications_110_0= ruleImplication ) ) (otherlv_111= ',' ( (lv_implications_112_0= ruleImplication ) ) )* ) ) )
            	    // InternalKim.g:12926:6: ({...}? => (otherlv_109= 'implies' ( (lv_implications_110_0= ruleImplication ) ) (otherlv_111= ',' ( (lv_implications_112_0= ruleImplication ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21);
            	    // InternalKim.g:12929:9: ({...}? => (otherlv_109= 'implies' ( (lv_implications_110_0= ruleImplication ) ) (otherlv_111= ',' ( (lv_implications_112_0= ruleImplication ) ) )* ) )
            	    // InternalKim.g:12929:10: {...}? => (otherlv_109= 'implies' ( (lv_implications_110_0= ruleImplication ) ) (otherlv_111= ',' ( (lv_implications_112_0= ruleImplication ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:12929:19: (otherlv_109= 'implies' ( (lv_implications_110_0= ruleImplication ) ) (otherlv_111= ',' ( (lv_implications_112_0= ruleImplication ) ) )* )
            	    // InternalKim.g:12929:20: otherlv_109= 'implies' ( (lv_implications_110_0= ruleImplication ) ) (otherlv_111= ',' ( (lv_implications_112_0= ruleImplication ) ) )*
            	    {
            	    otherlv_109=(Token)match(input,204,FOLLOW_153); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_109, grammarAccess.getConceptStatementBodyAccess().getImpliesKeyword_3_21_0());
            	      								
            	    }
            	    // InternalKim.g:12933:9: ( (lv_implications_110_0= ruleImplication ) )
            	    // InternalKim.g:12934:10: (lv_implications_110_0= ruleImplication )
            	    {
            	    // InternalKim.g:12934:10: (lv_implications_110_0= ruleImplication )
            	    // InternalKim.g:12935:11: lv_implications_110_0= ruleImplication
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getImplicationsImplicationParserRuleCall_3_21_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_143);
            	    lv_implications_110_0=ruleImplication();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"implications",
            	      												lv_implications_110_0,
            	      												"org.integratedmodelling.kim.Kim.Implication");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:12952:9: (otherlv_111= ',' ( (lv_implications_112_0= ruleImplication ) ) )*
            	    loop273:
            	    do {
            	        int alt273=2;
            	        int LA273_0 = input.LA(1);

            	        if ( (LA273_0==27) ) {
            	            alt273=1;
            	        }


            	        switch (alt273) {
            	    	case 1 :
            	    	    // InternalKim.g:12953:10: otherlv_111= ',' ( (lv_implications_112_0= ruleImplication ) )
            	    	    {
            	    	    otherlv_111=(Token)match(input,27,FOLLOW_153); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_111, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_21_2_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:12957:10: ( (lv_implications_112_0= ruleImplication ) )
            	    	    // InternalKim.g:12958:11: (lv_implications_112_0= ruleImplication )
            	    	    {
            	    	    // InternalKim.g:12958:11: (lv_implications_112_0= ruleImplication )
            	    	    // InternalKim.g:12959:12: lv_implications_112_0= ruleImplication
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getImplicationsImplicationParserRuleCall_3_21_2_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_143);
            	    	    lv_implications_112_0=ruleImplication();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"implications",
            	    	      													lv_implications_112_0,
            	    	      													"org.integratedmodelling.kim.Kim.Implication");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop273;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 23 :
            	    // InternalKim.g:12983:4: ({...}? => ( ({...}? => (otherlv_113= 'uses' otherlv_114= 'authority' ( ( (lv_authorities_115_1= RULE_UPPERCASE_ID | lv_authorities_115_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) )
            	    {
            	    // InternalKim.g:12983:4: ({...}? => ( ({...}? => (otherlv_113= 'uses' otherlv_114= 'authority' ( ( (lv_authorities_115_1= RULE_UPPERCASE_ID | lv_authorities_115_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) )
            	    // InternalKim.g:12984:5: {...}? => ( ({...}? => (otherlv_113= 'uses' otherlv_114= 'authority' ( ( (lv_authorities_115_1= RULE_UPPERCASE_ID | lv_authorities_115_2= RULE_UPPERCASE_PATH ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22)");
            	    }
            	    // InternalKim.g:12984:118: ( ({...}? => (otherlv_113= 'uses' otherlv_114= 'authority' ( ( (lv_authorities_115_1= RULE_UPPERCASE_ID | lv_authorities_115_2= RULE_UPPERCASE_PATH ) ) ) ) ) )
            	    // InternalKim.g:12985:6: ({...}? => (otherlv_113= 'uses' otherlv_114= 'authority' ( ( (lv_authorities_115_1= RULE_UPPERCASE_ID | lv_authorities_115_2= RULE_UPPERCASE_PATH ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22);
            	    // InternalKim.g:12988:9: ({...}? => (otherlv_113= 'uses' otherlv_114= 'authority' ( ( (lv_authorities_115_1= RULE_UPPERCASE_ID | lv_authorities_115_2= RULE_UPPERCASE_PATH ) ) ) ) )
            	    // InternalKim.g:12988:10: {...}? => (otherlv_113= 'uses' otherlv_114= 'authority' ( ( (lv_authorities_115_1= RULE_UPPERCASE_ID | lv_authorities_115_2= RULE_UPPERCASE_PATH ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:12988:19: (otherlv_113= 'uses' otherlv_114= 'authority' ( ( (lv_authorities_115_1= RULE_UPPERCASE_ID | lv_authorities_115_2= RULE_UPPERCASE_PATH ) ) ) )
            	    // InternalKim.g:12988:20: otherlv_113= 'uses' otherlv_114= 'authority' ( ( (lv_authorities_115_1= RULE_UPPERCASE_ID | lv_authorities_115_2= RULE_UPPERCASE_PATH ) ) )
            	    {
            	    otherlv_113=(Token)match(input,205,FOLLOW_154); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_113, grammarAccess.getConceptStatementBodyAccess().getUsesKeyword_3_22_0());
            	      								
            	    }
            	    otherlv_114=(Token)match(input,183,FOLLOW_120); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_114, grammarAccess.getConceptStatementBodyAccess().getAuthorityKeyword_3_22_1());
            	      								
            	    }
            	    // InternalKim.g:12996:9: ( ( (lv_authorities_115_1= RULE_UPPERCASE_ID | lv_authorities_115_2= RULE_UPPERCASE_PATH ) ) )
            	    // InternalKim.g:12997:10: ( (lv_authorities_115_1= RULE_UPPERCASE_ID | lv_authorities_115_2= RULE_UPPERCASE_PATH ) )
            	    {
            	    // InternalKim.g:12997:10: ( (lv_authorities_115_1= RULE_UPPERCASE_ID | lv_authorities_115_2= RULE_UPPERCASE_PATH ) )
            	    // InternalKim.g:12998:11: (lv_authorities_115_1= RULE_UPPERCASE_ID | lv_authorities_115_2= RULE_UPPERCASE_PATH )
            	    {
            	    // InternalKim.g:12998:11: (lv_authorities_115_1= RULE_UPPERCASE_ID | lv_authorities_115_2= RULE_UPPERCASE_PATH )
            	    int alt274=2;
            	    int LA274_0 = input.LA(1);

            	    if ( (LA274_0==RULE_UPPERCASE_ID) ) {
            	        alt274=1;
            	    }
            	    else if ( (LA274_0==RULE_UPPERCASE_PATH) ) {
            	        alt274=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 274, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt274) {
            	        case 1 :
            	            // InternalKim.g:12999:12: lv_authorities_115_1= RULE_UPPERCASE_ID
            	            {
            	            lv_authorities_115_1=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_137); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_authorities_115_1, grammarAccess.getConceptStatementBodyAccess().getAuthoritiesUPPERCASE_IDTerminalRuleCall_3_22_2_0_0());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												addWithLastConsumed(
            	              													current,
            	              													"authorities",
            	              													lv_authorities_115_1,
            	              													"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
            	              											
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:13014:12: lv_authorities_115_2= RULE_UPPERCASE_PATH
            	            {
            	            lv_authorities_115_2=(Token)match(input,RULE_UPPERCASE_PATH,FOLLOW_137); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_authorities_115_2, grammarAccess.getConceptStatementBodyAccess().getAuthoritiesUPPERCASE_PATHTerminalRuleCall_3_22_2_0_1());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												addWithLastConsumed(
            	              													current,
            	              													"authorities",
            	              													lv_authorities_115_2,
            	              													"org.integratedmodelling.kim.Kim.UPPERCASE_PATH");
            	              											
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 24 :
            	    // InternalKim.g:13037:4: ({...}? => ( ({...}? => (otherlv_116= 'metadata' ( (lv_metadata_117_0= ruleMap ) ) ) ) ) )
            	    {
            	    // InternalKim.g:13037:4: ({...}? => ( ({...}? => (otherlv_116= 'metadata' ( (lv_metadata_117_0= ruleMap ) ) ) ) ) )
            	    // InternalKim.g:13038:5: {...}? => ( ({...}? => (otherlv_116= 'metadata' ( (lv_metadata_117_0= ruleMap ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23)");
            	    }
            	    // InternalKim.g:13038:118: ( ({...}? => (otherlv_116= 'metadata' ( (lv_metadata_117_0= ruleMap ) ) ) ) )
            	    // InternalKim.g:13039:6: ({...}? => (otherlv_116= 'metadata' ( (lv_metadata_117_0= ruleMap ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23);
            	    // InternalKim.g:13042:9: ({...}? => (otherlv_116= 'metadata' ( (lv_metadata_117_0= ruleMap ) ) ) )
            	    // InternalKim.g:13042:10: {...}? => (otherlv_116= 'metadata' ( (lv_metadata_117_0= ruleMap ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:13042:19: (otherlv_116= 'metadata' ( (lv_metadata_117_0= ruleMap ) ) )
            	    // InternalKim.g:13042:20: otherlv_116= 'metadata' ( (lv_metadata_117_0= ruleMap ) )
            	    {
            	    otherlv_116=(Token)match(input,42,FOLLOW_33); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_116, grammarAccess.getConceptStatementBodyAccess().getMetadataKeyword_3_23_0());
            	      								
            	    }
            	    // InternalKim.g:13046:9: ( (lv_metadata_117_0= ruleMap ) )
            	    // InternalKim.g:13047:10: (lv_metadata_117_0= ruleMap )
            	    {
            	    // InternalKim.g:13047:10: (lv_metadata_117_0= ruleMap )
            	    // InternalKim.g:13048:11: lv_metadata_117_0= ruleMap
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getMetadataMapParserRuleCall_3_23_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_137);
            	    lv_metadata_117_0=ruleMap();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											set(
            	      												current,
            	      												"metadata",
            	      												lv_metadata_117_0,
            	      												"org.integratedmodelling.kim.Kim.Map");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 25 :
            	    // InternalKim.g:13071:4: ({...}? => ( ({...}? => ( (lv_properties_118_0= rulePropertyStatement ) ) )+ ) )
            	    {
            	    // InternalKim.g:13071:4: ({...}? => ( ({...}? => ( (lv_properties_118_0= rulePropertyStatement ) ) )+ ) )
            	    // InternalKim.g:13072:5: {...}? => ( ({...}? => ( (lv_properties_118_0= rulePropertyStatement ) ) )+ )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24)");
            	    }
            	    // InternalKim.g:13072:118: ( ({...}? => ( (lv_properties_118_0= rulePropertyStatement ) ) )+ )
            	    // InternalKim.g:13073:6: ({...}? => ( (lv_properties_118_0= rulePropertyStatement ) ) )+
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24);
            	    // InternalKim.g:13076:9: ({...}? => ( (lv_properties_118_0= rulePropertyStatement ) ) )+
            	    int cnt275=0;
            	    loop275:
            	    do {
            	        int alt275=2;
            	        alt275 = dfa275.predict(input);
            	        switch (alt275) {
            	    	case 1 :
            	    	    // InternalKim.g:13076:10: {...}? => ( (lv_properties_118_0= rulePropertyStatement ) )
            	    	    {
            	    	    if ( !((true)) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    	    }
            	    	    // InternalKim.g:13076:19: ( (lv_properties_118_0= rulePropertyStatement ) )
            	    	    // InternalKim.g:13076:20: (lv_properties_118_0= rulePropertyStatement )
            	    	    {
            	    	    // InternalKim.g:13076:20: (lv_properties_118_0= rulePropertyStatement )
            	    	    // InternalKim.g:13077:10: lv_properties_118_0= rulePropertyStatement
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      										newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getPropertiesPropertyStatementParserRuleCall_3_24_0());
            	    	      									
            	    	    }
            	    	    pushFollow(FOLLOW_137);
            	    	    lv_properties_118_0=rulePropertyStatement();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										if (current==null) {
            	    	      											current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      										}
            	    	      										add(
            	    	      											current,
            	    	      											"properties",
            	    	      											lv_properties_118_0,
            	    	      											"org.integratedmodelling.kim.Kim.PropertyStatement");
            	    	      										afterParserOrEnumRuleCall();
            	    	      									
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt275 >= 1 ) break loop275;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(275, input);
            	                throw eee;
            	        }
            	        cnt275++;
            	    } while (true);

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop276;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleConceptStatementBody"


    // $ANTLR start "entryRuleImplication"
    // InternalKim.g:13113:1: entryRuleImplication returns [EObject current=null] : iv_ruleImplication= ruleImplication EOF ;
    public final EObject entryRuleImplication() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleImplication = null;


        try {
            // InternalKim.g:13113:52: (iv_ruleImplication= ruleImplication EOF )
            // InternalKim.g:13114:2: iv_ruleImplication= ruleImplication EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImplicationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleImplication=ruleImplication();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImplication; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleImplication"


    // $ANTLR start "ruleImplication"
    // InternalKim.g:13120:1: ruleImplication returns [EObject current=null] : ( ( (lv_quantifier_0_0= ruleQuantification ) )? ( (lv_concept_1_0= ruleConceptDeclaration ) ) (otherlv_2= 'as' ( (lv_target_3_0= ruleConceptDeclaration ) ) )? ) ;
    public final EObject ruleImplication() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_quantifier_0_0 = null;

        EObject lv_concept_1_0 = null;

        EObject lv_target_3_0 = null;



        	enterRule();

        try {
            // InternalKim.g:13126:2: ( ( ( (lv_quantifier_0_0= ruleQuantification ) )? ( (lv_concept_1_0= ruleConceptDeclaration ) ) (otherlv_2= 'as' ( (lv_target_3_0= ruleConceptDeclaration ) ) )? ) )
            // InternalKim.g:13127:2: ( ( (lv_quantifier_0_0= ruleQuantification ) )? ( (lv_concept_1_0= ruleConceptDeclaration ) ) (otherlv_2= 'as' ( (lv_target_3_0= ruleConceptDeclaration ) ) )? )
            {
            // InternalKim.g:13127:2: ( ( (lv_quantifier_0_0= ruleQuantification ) )? ( (lv_concept_1_0= ruleConceptDeclaration ) ) (otherlv_2= 'as' ( (lv_target_3_0= ruleConceptDeclaration ) ) )? )
            // InternalKim.g:13128:3: ( (lv_quantifier_0_0= ruleQuantification ) )? ( (lv_concept_1_0= ruleConceptDeclaration ) ) (otherlv_2= 'as' ( (lv_target_3_0= ruleConceptDeclaration ) ) )?
            {
            // InternalKim.g:13128:3: ( (lv_quantifier_0_0= ruleQuantification ) )?
            int alt277=2;
            alt277 = dfa277.predict(input);
            switch (alt277) {
                case 1 :
                    // InternalKim.g:13129:4: (lv_quantifier_0_0= ruleQuantification )
                    {
                    // InternalKim.g:13129:4: (lv_quantifier_0_0= ruleQuantification )
                    // InternalKim.g:13130:5: lv_quantifier_0_0= ruleQuantification
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getImplicationAccess().getQuantifierQuantificationParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_23);
                    lv_quantifier_0_0=ruleQuantification();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getImplicationRule());
                      					}
                      					set(
                      						current,
                      						"quantifier",
                      						lv_quantifier_0_0,
                      						"org.integratedmodelling.kim.Kim.Quantification");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:13147:3: ( (lv_concept_1_0= ruleConceptDeclaration ) )
            // InternalKim.g:13148:4: (lv_concept_1_0= ruleConceptDeclaration )
            {
            // InternalKim.g:13148:4: (lv_concept_1_0= ruleConceptDeclaration )
            // InternalKim.g:13149:5: lv_concept_1_0= ruleConceptDeclaration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getImplicationAccess().getConceptConceptDeclarationParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_155);
            lv_concept_1_0=ruleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getImplicationRule());
              					}
              					set(
              						current,
              						"concept",
              						lv_concept_1_0,
              						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:13166:3: (otherlv_2= 'as' ( (lv_target_3_0= ruleConceptDeclaration ) ) )?
            int alt278=2;
            int LA278_0 = input.LA(1);

            if ( (LA278_0==25) ) {
                alt278=1;
            }
            switch (alt278) {
                case 1 :
                    // InternalKim.g:13167:4: otherlv_2= 'as' ( (lv_target_3_0= ruleConceptDeclaration ) )
                    {
                    otherlv_2=(Token)match(input,25,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getImplicationAccess().getAsKeyword_2_0());
                      			
                    }
                    // InternalKim.g:13171:4: ( (lv_target_3_0= ruleConceptDeclaration ) )
                    // InternalKim.g:13172:5: (lv_target_3_0= ruleConceptDeclaration )
                    {
                    // InternalKim.g:13172:5: (lv_target_3_0= ruleConceptDeclaration )
                    // InternalKim.g:13173:6: lv_target_3_0= ruleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getImplicationAccess().getTargetConceptDeclarationParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_target_3_0=ruleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getImplicationRule());
                      						}
                      						set(
                      							current,
                      							"target",
                      							lv_target_3_0,
                      							"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImplication"


    // $ANTLR start "entryRuleQuantification"
    // InternalKim.g:13195:1: entryRuleQuantification returns [EObject current=null] : iv_ruleQuantification= ruleQuantification EOF ;
    public final EObject entryRuleQuantification() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleQuantification = null;


        try {
            // InternalKim.g:13195:55: (iv_ruleQuantification= ruleQuantification EOF )
            // InternalKim.g:13196:2: iv_ruleQuantification= ruleQuantification EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQuantificationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleQuantification=ruleQuantification();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQuantification; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQuantification"


    // $ANTLR start "ruleQuantification"
    // InternalKim.g:13202:1: ruleQuantification returns [EObject current=null] : ( () ( ( (lv_only_1_0= 'only' ) ) | ( ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( ( (lv_atLeast_4_0= 'least' ) ) | ( (lv_atMost_5_0= 'most' ) ) ) ) )? ( (lv_cardinality_6_0= RULE_INT ) ) (otherlv_7= 'or' ( (lv_orMore_8_0= 'more' ) ) )? ) )? ) ;
    public final EObject ruleQuantification() throws RecognitionException {
        EObject current = null;

        Token lv_only_1_0=null;
        Token lv_exactly_2_0=null;
        Token otherlv_3=null;
        Token lv_atLeast_4_0=null;
        Token lv_atMost_5_0=null;
        Token lv_cardinality_6_0=null;
        Token otherlv_7=null;
        Token lv_orMore_8_0=null;


        	enterRule();

        try {
            // InternalKim.g:13208:2: ( ( () ( ( (lv_only_1_0= 'only' ) ) | ( ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( ( (lv_atLeast_4_0= 'least' ) ) | ( (lv_atMost_5_0= 'most' ) ) ) ) )? ( (lv_cardinality_6_0= RULE_INT ) ) (otherlv_7= 'or' ( (lv_orMore_8_0= 'more' ) ) )? ) )? ) )
            // InternalKim.g:13209:2: ( () ( ( (lv_only_1_0= 'only' ) ) | ( ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( ( (lv_atLeast_4_0= 'least' ) ) | ( (lv_atMost_5_0= 'most' ) ) ) ) )? ( (lv_cardinality_6_0= RULE_INT ) ) (otherlv_7= 'or' ( (lv_orMore_8_0= 'more' ) ) )? ) )? )
            {
            // InternalKim.g:13209:2: ( () ( ( (lv_only_1_0= 'only' ) ) | ( ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( ( (lv_atLeast_4_0= 'least' ) ) | ( (lv_atMost_5_0= 'most' ) ) ) ) )? ( (lv_cardinality_6_0= RULE_INT ) ) (otherlv_7= 'or' ( (lv_orMore_8_0= 'more' ) ) )? ) )? )
            // InternalKim.g:13210:3: () ( ( (lv_only_1_0= 'only' ) ) | ( ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( ( (lv_atLeast_4_0= 'least' ) ) | ( (lv_atMost_5_0= 'most' ) ) ) ) )? ( (lv_cardinality_6_0= RULE_INT ) ) (otherlv_7= 'or' ( (lv_orMore_8_0= 'more' ) ) )? ) )?
            {
            // InternalKim.g:13210:3: ()
            // InternalKim.g:13211:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getQuantificationAccess().getQuantificationAction_0(),
              					current);
              			
            }

            }

            // InternalKim.g:13220:3: ( ( (lv_only_1_0= 'only' ) ) | ( ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( ( (lv_atLeast_4_0= 'least' ) ) | ( (lv_atMost_5_0= 'most' ) ) ) ) )? ( (lv_cardinality_6_0= RULE_INT ) ) (otherlv_7= 'or' ( (lv_orMore_8_0= 'more' ) ) )? ) )?
            int alt282=3;
            int LA282_0 = input.LA(1);

            if ( (LA282_0==83) ) {
                alt282=1;
            }
            else if ( (LA282_0==RULE_INT||(LA282_0>=206 && LA282_0<=207)) ) {
                alt282=2;
            }
            switch (alt282) {
                case 1 :
                    // InternalKim.g:13221:4: ( (lv_only_1_0= 'only' ) )
                    {
                    // InternalKim.g:13221:4: ( (lv_only_1_0= 'only' ) )
                    // InternalKim.g:13222:5: (lv_only_1_0= 'only' )
                    {
                    // InternalKim.g:13222:5: (lv_only_1_0= 'only' )
                    // InternalKim.g:13223:6: lv_only_1_0= 'only'
                    {
                    lv_only_1_0=(Token)match(input,83,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_only_1_0, grammarAccess.getQuantificationAccess().getOnlyOnlyKeyword_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getQuantificationRule());
                      						}
                      						setWithLastConsumed(current, "only", true, "only");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:13236:4: ( ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( ( (lv_atLeast_4_0= 'least' ) ) | ( (lv_atMost_5_0= 'most' ) ) ) ) )? ( (lv_cardinality_6_0= RULE_INT ) ) (otherlv_7= 'or' ( (lv_orMore_8_0= 'more' ) ) )? )
                    {
                    // InternalKim.g:13236:4: ( ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( ( (lv_atLeast_4_0= 'least' ) ) | ( (lv_atMost_5_0= 'most' ) ) ) ) )? ( (lv_cardinality_6_0= RULE_INT ) ) (otherlv_7= 'or' ( (lv_orMore_8_0= 'more' ) ) )? )
                    // InternalKim.g:13237:5: ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( ( (lv_atLeast_4_0= 'least' ) ) | ( (lv_atMost_5_0= 'most' ) ) ) ) )? ( (lv_cardinality_6_0= RULE_INT ) ) (otherlv_7= 'or' ( (lv_orMore_8_0= 'more' ) ) )?
                    {
                    // InternalKim.g:13237:5: ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( ( (lv_atLeast_4_0= 'least' ) ) | ( (lv_atMost_5_0= 'most' ) ) ) ) )?
                    int alt280=3;
                    int LA280_0 = input.LA(1);

                    if ( (LA280_0==206) ) {
                        alt280=1;
                    }
                    else if ( (LA280_0==207) ) {
                        alt280=2;
                    }
                    switch (alt280) {
                        case 1 :
                            // InternalKim.g:13238:6: ( (lv_exactly_2_0= 'exactly' ) )
                            {
                            // InternalKim.g:13238:6: ( (lv_exactly_2_0= 'exactly' ) )
                            // InternalKim.g:13239:7: (lv_exactly_2_0= 'exactly' )
                            {
                            // InternalKim.g:13239:7: (lv_exactly_2_0= 'exactly' )
                            // InternalKim.g:13240:8: lv_exactly_2_0= 'exactly'
                            {
                            lv_exactly_2_0=(Token)match(input,206,FOLLOW_78); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_exactly_2_0, grammarAccess.getQuantificationAccess().getExactlyExactlyKeyword_1_1_0_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getQuantificationRule());
                              								}
                              								setWithLastConsumed(current, "exactly", true, "exactly");
                              							
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:13253:6: (otherlv_3= 'at' ( ( (lv_atLeast_4_0= 'least' ) ) | ( (lv_atMost_5_0= 'most' ) ) ) )
                            {
                            // InternalKim.g:13253:6: (otherlv_3= 'at' ( ( (lv_atLeast_4_0= 'least' ) ) | ( (lv_atMost_5_0= 'most' ) ) ) )
                            // InternalKim.g:13254:7: otherlv_3= 'at' ( ( (lv_atLeast_4_0= 'least' ) ) | ( (lv_atMost_5_0= 'most' ) ) )
                            {
                            otherlv_3=(Token)match(input,207,FOLLOW_156); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_3, grammarAccess.getQuantificationAccess().getAtKeyword_1_1_0_1_0());
                              						
                            }
                            // InternalKim.g:13258:7: ( ( (lv_atLeast_4_0= 'least' ) ) | ( (lv_atMost_5_0= 'most' ) ) )
                            int alt279=2;
                            int LA279_0 = input.LA(1);

                            if ( (LA279_0==208) ) {
                                alt279=1;
                            }
                            else if ( (LA279_0==209) ) {
                                alt279=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 279, 0, input);

                                throw nvae;
                            }
                            switch (alt279) {
                                case 1 :
                                    // InternalKim.g:13259:8: ( (lv_atLeast_4_0= 'least' ) )
                                    {
                                    // InternalKim.g:13259:8: ( (lv_atLeast_4_0= 'least' ) )
                                    // InternalKim.g:13260:9: (lv_atLeast_4_0= 'least' )
                                    {
                                    // InternalKim.g:13260:9: (lv_atLeast_4_0= 'least' )
                                    // InternalKim.g:13261:10: lv_atLeast_4_0= 'least'
                                    {
                                    lv_atLeast_4_0=(Token)match(input,208,FOLLOW_78); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										newLeafNode(lv_atLeast_4_0, grammarAccess.getQuantificationAccess().getAtLeastLeastKeyword_1_1_0_1_1_0_0());
                                      									
                                    }
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElement(grammarAccess.getQuantificationRule());
                                      										}
                                      										setWithLastConsumed(current, "atLeast", true, "least");
                                      									
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:13274:8: ( (lv_atMost_5_0= 'most' ) )
                                    {
                                    // InternalKim.g:13274:8: ( (lv_atMost_5_0= 'most' ) )
                                    // InternalKim.g:13275:9: (lv_atMost_5_0= 'most' )
                                    {
                                    // InternalKim.g:13275:9: (lv_atMost_5_0= 'most' )
                                    // InternalKim.g:13276:10: lv_atMost_5_0= 'most'
                                    {
                                    lv_atMost_5_0=(Token)match(input,209,FOLLOW_78); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										newLeafNode(lv_atMost_5_0, grammarAccess.getQuantificationAccess().getAtMostMostKeyword_1_1_0_1_1_1_0());
                                      									
                                    }
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElement(grammarAccess.getQuantificationRule());
                                      										}
                                      										setWithLastConsumed(current, "atMost", true, "most");
                                      									
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:13291:5: ( (lv_cardinality_6_0= RULE_INT ) )
                    // InternalKim.g:13292:6: (lv_cardinality_6_0= RULE_INT )
                    {
                    // InternalKim.g:13292:6: (lv_cardinality_6_0= RULE_INT )
                    // InternalKim.g:13293:7: lv_cardinality_6_0= RULE_INT
                    {
                    lv_cardinality_6_0=(Token)match(input,RULE_INT,FOLLOW_126); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_cardinality_6_0, grammarAccess.getQuantificationAccess().getCardinalityINTTerminalRuleCall_1_1_1_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getQuantificationRule());
                      							}
                      							setWithLastConsumed(
                      								current,
                      								"cardinality",
                      								lv_cardinality_6_0,
                      								"org.eclipse.xtext.common.Terminals.INT");
                      						
                    }

                    }


                    }

                    // InternalKim.g:13309:5: (otherlv_7= 'or' ( (lv_orMore_8_0= 'more' ) ) )?
                    int alt281=2;
                    int LA281_0 = input.LA(1);

                    if ( (LA281_0==164) ) {
                        alt281=1;
                    }
                    switch (alt281) {
                        case 1 :
                            // InternalKim.g:13310:6: otherlv_7= 'or' ( (lv_orMore_8_0= 'more' ) )
                            {
                            otherlv_7=(Token)match(input,164,FOLLOW_157); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_7, grammarAccess.getQuantificationAccess().getOrKeyword_1_1_2_0());
                              					
                            }
                            // InternalKim.g:13314:6: ( (lv_orMore_8_0= 'more' ) )
                            // InternalKim.g:13315:7: (lv_orMore_8_0= 'more' )
                            {
                            // InternalKim.g:13315:7: (lv_orMore_8_0= 'more' )
                            // InternalKim.g:13316:8: lv_orMore_8_0= 'more'
                            {
                            lv_orMore_8_0=(Token)match(input,210,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_orMore_8_0, grammarAccess.getQuantificationAccess().getOrMoreMoreKeyword_1_1_2_1_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getQuantificationRule());
                              								}
                              								setWithLastConsumed(current, "orMore", true, "more");
                              							
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQuantification"


    // $ANTLR start "entryRulePropertyStatement"
    // InternalKim.g:13335:1: entryRulePropertyStatement returns [EObject current=null] : iv_rulePropertyStatement= rulePropertyStatement EOF ;
    public final EObject entryRulePropertyStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePropertyStatement = null;


        try {
            // InternalKim.g:13335:58: (iv_rulePropertyStatement= rulePropertyStatement EOF )
            // InternalKim.g:13336:2: iv_rulePropertyStatement= rulePropertyStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPropertyStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePropertyStatement=rulePropertyStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePropertyStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePropertyStatement"


    // $ANTLR start "rulePropertyStatement"
    // InternalKim.g:13342:1: rulePropertyStatement returns [EObject current=null] : ( ( ( ( (lv_property_0_1= rulePropertyId | lv_property_0_2= RULE_BACKCASE_ID ) ) ) | ( (lv_has_1_0= 'has' ) ) | ( (lv_contains_2_0= 'contains' ) ) | ( (lv_uses_3_0= 'uses' ) ) ) ( ( (lv_only_4_0= 'only' ) ) | ( ( ( (lv_exactly_5_0= 'exactly' ) ) | (otherlv_6= 'at' ( ( (lv_atLeast_7_0= 'least' ) ) | ( (lv_atMost_8_0= 'most' ) ) ) ) )? ( (lv_cardinality_9_0= RULE_INT ) ) (otherlv_10= 'or' ( (lv_orMore_11_0= 'more' ) ) )? ) )? ( (lv_propertyTarget_12_0= ruleSimpleConceptDeclaration ) ) ) ;
    public final EObject rulePropertyStatement() throws RecognitionException {
        EObject current = null;

        Token lv_property_0_2=null;
        Token lv_has_1_0=null;
        Token lv_contains_2_0=null;
        Token lv_uses_3_0=null;
        Token lv_only_4_0=null;
        Token lv_exactly_5_0=null;
        Token otherlv_6=null;
        Token lv_atLeast_7_0=null;
        Token lv_atMost_8_0=null;
        Token lv_cardinality_9_0=null;
        Token otherlv_10=null;
        Token lv_orMore_11_0=null;
        AntlrDatatypeRuleToken lv_property_0_1 = null;

        EObject lv_propertyTarget_12_0 = null;



        	enterRule();

        try {
            // InternalKim.g:13348:2: ( ( ( ( ( (lv_property_0_1= rulePropertyId | lv_property_0_2= RULE_BACKCASE_ID ) ) ) | ( (lv_has_1_0= 'has' ) ) | ( (lv_contains_2_0= 'contains' ) ) | ( (lv_uses_3_0= 'uses' ) ) ) ( ( (lv_only_4_0= 'only' ) ) | ( ( ( (lv_exactly_5_0= 'exactly' ) ) | (otherlv_6= 'at' ( ( (lv_atLeast_7_0= 'least' ) ) | ( (lv_atMost_8_0= 'most' ) ) ) ) )? ( (lv_cardinality_9_0= RULE_INT ) ) (otherlv_10= 'or' ( (lv_orMore_11_0= 'more' ) ) )? ) )? ( (lv_propertyTarget_12_0= ruleSimpleConceptDeclaration ) ) ) )
            // InternalKim.g:13349:2: ( ( ( ( (lv_property_0_1= rulePropertyId | lv_property_0_2= RULE_BACKCASE_ID ) ) ) | ( (lv_has_1_0= 'has' ) ) | ( (lv_contains_2_0= 'contains' ) ) | ( (lv_uses_3_0= 'uses' ) ) ) ( ( (lv_only_4_0= 'only' ) ) | ( ( ( (lv_exactly_5_0= 'exactly' ) ) | (otherlv_6= 'at' ( ( (lv_atLeast_7_0= 'least' ) ) | ( (lv_atMost_8_0= 'most' ) ) ) ) )? ( (lv_cardinality_9_0= RULE_INT ) ) (otherlv_10= 'or' ( (lv_orMore_11_0= 'more' ) ) )? ) )? ( (lv_propertyTarget_12_0= ruleSimpleConceptDeclaration ) ) )
            {
            // InternalKim.g:13349:2: ( ( ( ( (lv_property_0_1= rulePropertyId | lv_property_0_2= RULE_BACKCASE_ID ) ) ) | ( (lv_has_1_0= 'has' ) ) | ( (lv_contains_2_0= 'contains' ) ) | ( (lv_uses_3_0= 'uses' ) ) ) ( ( (lv_only_4_0= 'only' ) ) | ( ( ( (lv_exactly_5_0= 'exactly' ) ) | (otherlv_6= 'at' ( ( (lv_atLeast_7_0= 'least' ) ) | ( (lv_atMost_8_0= 'most' ) ) ) ) )? ( (lv_cardinality_9_0= RULE_INT ) ) (otherlv_10= 'or' ( (lv_orMore_11_0= 'more' ) ) )? ) )? ( (lv_propertyTarget_12_0= ruleSimpleConceptDeclaration ) ) )
            // InternalKim.g:13350:3: ( ( ( (lv_property_0_1= rulePropertyId | lv_property_0_2= RULE_BACKCASE_ID ) ) ) | ( (lv_has_1_0= 'has' ) ) | ( (lv_contains_2_0= 'contains' ) ) | ( (lv_uses_3_0= 'uses' ) ) ) ( ( (lv_only_4_0= 'only' ) ) | ( ( ( (lv_exactly_5_0= 'exactly' ) ) | (otherlv_6= 'at' ( ( (lv_atLeast_7_0= 'least' ) ) | ( (lv_atMost_8_0= 'most' ) ) ) ) )? ( (lv_cardinality_9_0= RULE_INT ) ) (otherlv_10= 'or' ( (lv_orMore_11_0= 'more' ) ) )? ) )? ( (lv_propertyTarget_12_0= ruleSimpleConceptDeclaration ) )
            {
            // InternalKim.g:13350:3: ( ( ( (lv_property_0_1= rulePropertyId | lv_property_0_2= RULE_BACKCASE_ID ) ) ) | ( (lv_has_1_0= 'has' ) ) | ( (lv_contains_2_0= 'contains' ) ) | ( (lv_uses_3_0= 'uses' ) ) )
            int alt284=4;
            switch ( input.LA(1) ) {
            case RULE_LOWERCASE_ID:
            case RULE_UPPERCASE_ID:
            case RULE_LOWERCASE_DASHID:
            case RULE_BACKCASE_ID:
                {
                alt284=1;
                }
                break;
            case 192:
                {
                alt284=2;
                }
                break;
            case 211:
                {
                alt284=3;
                }
                break;
            case 205:
                {
                alt284=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 284, 0, input);

                throw nvae;
            }

            switch (alt284) {
                case 1 :
                    // InternalKim.g:13351:4: ( ( (lv_property_0_1= rulePropertyId | lv_property_0_2= RULE_BACKCASE_ID ) ) )
                    {
                    // InternalKim.g:13351:4: ( ( (lv_property_0_1= rulePropertyId | lv_property_0_2= RULE_BACKCASE_ID ) ) )
                    // InternalKim.g:13352:5: ( (lv_property_0_1= rulePropertyId | lv_property_0_2= RULE_BACKCASE_ID ) )
                    {
                    // InternalKim.g:13352:5: ( (lv_property_0_1= rulePropertyId | lv_property_0_2= RULE_BACKCASE_ID ) )
                    // InternalKim.g:13353:6: (lv_property_0_1= rulePropertyId | lv_property_0_2= RULE_BACKCASE_ID )
                    {
                    // InternalKim.g:13353:6: (lv_property_0_1= rulePropertyId | lv_property_0_2= RULE_BACKCASE_ID )
                    int alt283=2;
                    int LA283_0 = input.LA(1);

                    if ( ((LA283_0>=RULE_LOWERCASE_ID && LA283_0<=RULE_UPPERCASE_ID)||LA283_0==RULE_LOWERCASE_DASHID) ) {
                        alt283=1;
                    }
                    else if ( (LA283_0==RULE_BACKCASE_ID) ) {
                        alt283=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 283, 0, input);

                        throw nvae;
                    }
                    switch (alt283) {
                        case 1 :
                            // InternalKim.g:13354:7: lv_property_0_1= rulePropertyId
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getPropertyStatementAccess().getPropertyPropertyIdParserRuleCall_0_0_0_0());
                              						
                            }
                            pushFollow(FOLLOW_158);
                            lv_property_0_1=rulePropertyId();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getPropertyStatementRule());
                              							}
                              							set(
                              								current,
                              								"property",
                              								lv_property_0_1,
                              								"org.integratedmodelling.kim.Kim.PropertyId");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:13370:7: lv_property_0_2= RULE_BACKCASE_ID
                            {
                            lv_property_0_2=(Token)match(input,RULE_BACKCASE_ID,FOLLOW_158); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_property_0_2, grammarAccess.getPropertyStatementAccess().getPropertyBACKCASE_IDTerminalRuleCall_0_0_0_1());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getPropertyStatementRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"property",
                              								lv_property_0_2,
                              								"org.integratedmodelling.kim.Kim.BACKCASE_ID");
                              						
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:13388:4: ( (lv_has_1_0= 'has' ) )
                    {
                    // InternalKim.g:13388:4: ( (lv_has_1_0= 'has' ) )
                    // InternalKim.g:13389:5: (lv_has_1_0= 'has' )
                    {
                    // InternalKim.g:13389:5: (lv_has_1_0= 'has' )
                    // InternalKim.g:13390:6: lv_has_1_0= 'has'
                    {
                    lv_has_1_0=(Token)match(input,192,FOLLOW_158); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_has_1_0, grammarAccess.getPropertyStatementAccess().getHasHasKeyword_0_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getPropertyStatementRule());
                      						}
                      						setWithLastConsumed(current, "has", true, "has");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:13403:4: ( (lv_contains_2_0= 'contains' ) )
                    {
                    // InternalKim.g:13403:4: ( (lv_contains_2_0= 'contains' ) )
                    // InternalKim.g:13404:5: (lv_contains_2_0= 'contains' )
                    {
                    // InternalKim.g:13404:5: (lv_contains_2_0= 'contains' )
                    // InternalKim.g:13405:6: lv_contains_2_0= 'contains'
                    {
                    lv_contains_2_0=(Token)match(input,211,FOLLOW_158); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_contains_2_0, grammarAccess.getPropertyStatementAccess().getContainsContainsKeyword_0_2_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getPropertyStatementRule());
                      						}
                      						setWithLastConsumed(current, "contains", true, "contains");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:13418:4: ( (lv_uses_3_0= 'uses' ) )
                    {
                    // InternalKim.g:13418:4: ( (lv_uses_3_0= 'uses' ) )
                    // InternalKim.g:13419:5: (lv_uses_3_0= 'uses' )
                    {
                    // InternalKim.g:13419:5: (lv_uses_3_0= 'uses' )
                    // InternalKim.g:13420:6: lv_uses_3_0= 'uses'
                    {
                    lv_uses_3_0=(Token)match(input,205,FOLLOW_158); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_uses_3_0, grammarAccess.getPropertyStatementAccess().getUsesUsesKeyword_0_3_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getPropertyStatementRule());
                      						}
                      						setWithLastConsumed(current, "uses", true, "uses");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalKim.g:13433:3: ( ( (lv_only_4_0= 'only' ) ) | ( ( ( (lv_exactly_5_0= 'exactly' ) ) | (otherlv_6= 'at' ( ( (lv_atLeast_7_0= 'least' ) ) | ( (lv_atMost_8_0= 'most' ) ) ) ) )? ( (lv_cardinality_9_0= RULE_INT ) ) (otherlv_10= 'or' ( (lv_orMore_11_0= 'more' ) ) )? ) )?
            int alt288=3;
            int LA288_0 = input.LA(1);

            if ( (LA288_0==83) ) {
                alt288=1;
            }
            else if ( (LA288_0==RULE_INT||(LA288_0>=206 && LA288_0<=207)) ) {
                alt288=2;
            }
            switch (alt288) {
                case 1 :
                    // InternalKim.g:13434:4: ( (lv_only_4_0= 'only' ) )
                    {
                    // InternalKim.g:13434:4: ( (lv_only_4_0= 'only' ) )
                    // InternalKim.g:13435:5: (lv_only_4_0= 'only' )
                    {
                    // InternalKim.g:13435:5: (lv_only_4_0= 'only' )
                    // InternalKim.g:13436:6: lv_only_4_0= 'only'
                    {
                    lv_only_4_0=(Token)match(input,83,FOLLOW_110); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_only_4_0, grammarAccess.getPropertyStatementAccess().getOnlyOnlyKeyword_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getPropertyStatementRule());
                      						}
                      						setWithLastConsumed(current, "only", true, "only");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:13449:4: ( ( ( (lv_exactly_5_0= 'exactly' ) ) | (otherlv_6= 'at' ( ( (lv_atLeast_7_0= 'least' ) ) | ( (lv_atMost_8_0= 'most' ) ) ) ) )? ( (lv_cardinality_9_0= RULE_INT ) ) (otherlv_10= 'or' ( (lv_orMore_11_0= 'more' ) ) )? )
                    {
                    // InternalKim.g:13449:4: ( ( ( (lv_exactly_5_0= 'exactly' ) ) | (otherlv_6= 'at' ( ( (lv_atLeast_7_0= 'least' ) ) | ( (lv_atMost_8_0= 'most' ) ) ) ) )? ( (lv_cardinality_9_0= RULE_INT ) ) (otherlv_10= 'or' ( (lv_orMore_11_0= 'more' ) ) )? )
                    // InternalKim.g:13450:5: ( ( (lv_exactly_5_0= 'exactly' ) ) | (otherlv_6= 'at' ( ( (lv_atLeast_7_0= 'least' ) ) | ( (lv_atMost_8_0= 'most' ) ) ) ) )? ( (lv_cardinality_9_0= RULE_INT ) ) (otherlv_10= 'or' ( (lv_orMore_11_0= 'more' ) ) )?
                    {
                    // InternalKim.g:13450:5: ( ( (lv_exactly_5_0= 'exactly' ) ) | (otherlv_6= 'at' ( ( (lv_atLeast_7_0= 'least' ) ) | ( (lv_atMost_8_0= 'most' ) ) ) ) )?
                    int alt286=3;
                    int LA286_0 = input.LA(1);

                    if ( (LA286_0==206) ) {
                        alt286=1;
                    }
                    else if ( (LA286_0==207) ) {
                        alt286=2;
                    }
                    switch (alt286) {
                        case 1 :
                            // InternalKim.g:13451:6: ( (lv_exactly_5_0= 'exactly' ) )
                            {
                            // InternalKim.g:13451:6: ( (lv_exactly_5_0= 'exactly' ) )
                            // InternalKim.g:13452:7: (lv_exactly_5_0= 'exactly' )
                            {
                            // InternalKim.g:13452:7: (lv_exactly_5_0= 'exactly' )
                            // InternalKim.g:13453:8: lv_exactly_5_0= 'exactly'
                            {
                            lv_exactly_5_0=(Token)match(input,206,FOLLOW_78); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_exactly_5_0, grammarAccess.getPropertyStatementAccess().getExactlyExactlyKeyword_1_1_0_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getPropertyStatementRule());
                              								}
                              								setWithLastConsumed(current, "exactly", true, "exactly");
                              							
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:13466:6: (otherlv_6= 'at' ( ( (lv_atLeast_7_0= 'least' ) ) | ( (lv_atMost_8_0= 'most' ) ) ) )
                            {
                            // InternalKim.g:13466:6: (otherlv_6= 'at' ( ( (lv_atLeast_7_0= 'least' ) ) | ( (lv_atMost_8_0= 'most' ) ) ) )
                            // InternalKim.g:13467:7: otherlv_6= 'at' ( ( (lv_atLeast_7_0= 'least' ) ) | ( (lv_atMost_8_0= 'most' ) ) )
                            {
                            otherlv_6=(Token)match(input,207,FOLLOW_156); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_6, grammarAccess.getPropertyStatementAccess().getAtKeyword_1_1_0_1_0());
                              						
                            }
                            // InternalKim.g:13471:7: ( ( (lv_atLeast_7_0= 'least' ) ) | ( (lv_atMost_8_0= 'most' ) ) )
                            int alt285=2;
                            int LA285_0 = input.LA(1);

                            if ( (LA285_0==208) ) {
                                alt285=1;
                            }
                            else if ( (LA285_0==209) ) {
                                alt285=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 285, 0, input);

                                throw nvae;
                            }
                            switch (alt285) {
                                case 1 :
                                    // InternalKim.g:13472:8: ( (lv_atLeast_7_0= 'least' ) )
                                    {
                                    // InternalKim.g:13472:8: ( (lv_atLeast_7_0= 'least' ) )
                                    // InternalKim.g:13473:9: (lv_atLeast_7_0= 'least' )
                                    {
                                    // InternalKim.g:13473:9: (lv_atLeast_7_0= 'least' )
                                    // InternalKim.g:13474:10: lv_atLeast_7_0= 'least'
                                    {
                                    lv_atLeast_7_0=(Token)match(input,208,FOLLOW_78); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										newLeafNode(lv_atLeast_7_0, grammarAccess.getPropertyStatementAccess().getAtLeastLeastKeyword_1_1_0_1_1_0_0());
                                      									
                                    }
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElement(grammarAccess.getPropertyStatementRule());
                                      										}
                                      										setWithLastConsumed(current, "atLeast", true, "least");
                                      									
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:13487:8: ( (lv_atMost_8_0= 'most' ) )
                                    {
                                    // InternalKim.g:13487:8: ( (lv_atMost_8_0= 'most' ) )
                                    // InternalKim.g:13488:9: (lv_atMost_8_0= 'most' )
                                    {
                                    // InternalKim.g:13488:9: (lv_atMost_8_0= 'most' )
                                    // InternalKim.g:13489:10: lv_atMost_8_0= 'most'
                                    {
                                    lv_atMost_8_0=(Token)match(input,209,FOLLOW_78); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										newLeafNode(lv_atMost_8_0, grammarAccess.getPropertyStatementAccess().getAtMostMostKeyword_1_1_0_1_1_1_0());
                                      									
                                    }
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElement(grammarAccess.getPropertyStatementRule());
                                      										}
                                      										setWithLastConsumed(current, "atMost", true, "most");
                                      									
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:13504:5: ( (lv_cardinality_9_0= RULE_INT ) )
                    // InternalKim.g:13505:6: (lv_cardinality_9_0= RULE_INT )
                    {
                    // InternalKim.g:13505:6: (lv_cardinality_9_0= RULE_INT )
                    // InternalKim.g:13506:7: lv_cardinality_9_0= RULE_INT
                    {
                    lv_cardinality_9_0=(Token)match(input,RULE_INT,FOLLOW_159); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_cardinality_9_0, grammarAccess.getPropertyStatementAccess().getCardinalityINTTerminalRuleCall_1_1_1_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getPropertyStatementRule());
                      							}
                      							setWithLastConsumed(
                      								current,
                      								"cardinality",
                      								lv_cardinality_9_0,
                      								"org.eclipse.xtext.common.Terminals.INT");
                      						
                    }

                    }


                    }

                    // InternalKim.g:13522:5: (otherlv_10= 'or' ( (lv_orMore_11_0= 'more' ) ) )?
                    int alt287=2;
                    int LA287_0 = input.LA(1);

                    if ( (LA287_0==164) ) {
                        alt287=1;
                    }
                    switch (alt287) {
                        case 1 :
                            // InternalKim.g:13523:6: otherlv_10= 'or' ( (lv_orMore_11_0= 'more' ) )
                            {
                            otherlv_10=(Token)match(input,164,FOLLOW_157); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_10, grammarAccess.getPropertyStatementAccess().getOrKeyword_1_1_2_0());
                              					
                            }
                            // InternalKim.g:13527:6: ( (lv_orMore_11_0= 'more' ) )
                            // InternalKim.g:13528:7: (lv_orMore_11_0= 'more' )
                            {
                            // InternalKim.g:13528:7: (lv_orMore_11_0= 'more' )
                            // InternalKim.g:13529:8: lv_orMore_11_0= 'more'
                            {
                            lv_orMore_11_0=(Token)match(input,210,FOLLOW_110); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_orMore_11_0, grammarAccess.getPropertyStatementAccess().getOrMoreMoreKeyword_1_1_2_1_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getPropertyStatementRule());
                              								}
                              								setWithLastConsumed(current, "orMore", true, "more");
                              							
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }

            // InternalKim.g:13544:3: ( (lv_propertyTarget_12_0= ruleSimpleConceptDeclaration ) )
            // InternalKim.g:13545:4: (lv_propertyTarget_12_0= ruleSimpleConceptDeclaration )
            {
            // InternalKim.g:13545:4: (lv_propertyTarget_12_0= ruleSimpleConceptDeclaration )
            // InternalKim.g:13546:5: lv_propertyTarget_12_0= ruleSimpleConceptDeclaration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getPropertyStatementAccess().getPropertyTargetSimpleConceptDeclarationParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_propertyTarget_12_0=ruleSimpleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getPropertyStatementRule());
              					}
              					set(
              						current,
              						"propertyTarget",
              						lv_propertyTarget_12_0,
              						"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePropertyStatement"


    // $ANTLR start "entryRuleApplicableTarget"
    // InternalKim.g:13567:1: entryRuleApplicableTarget returns [EObject current=null] : iv_ruleApplicableTarget= ruleApplicableTarget EOF ;
    public final EObject entryRuleApplicableTarget() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleApplicableTarget = null;


        try {
            // InternalKim.g:13567:57: (iv_ruleApplicableTarget= ruleApplicableTarget EOF )
            // InternalKim.g:13568:2: iv_ruleApplicableTarget= ruleApplicableTarget EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getApplicableTargetRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleApplicableTarget=ruleApplicableTarget();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleApplicableTarget; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleApplicableTarget"


    // $ANTLR start "ruleApplicableTarget"
    // InternalKim.g:13574:1: ruleApplicableTarget returns [EObject current=null] : ( ( (lv_target_0_0= ruleConceptDeclaration ) ) (otherlv_1= 'between' ( (lv_linkFrom_2_0= ruleConceptDeclaration ) ) otherlv_3= 'and' ( (lv_linkTo_4_0= ruleConceptDeclaration ) ) )? ) ;
    public final EObject ruleApplicableTarget() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_target_0_0 = null;

        EObject lv_linkFrom_2_0 = null;

        EObject lv_linkTo_4_0 = null;



        	enterRule();

        try {
            // InternalKim.g:13580:2: ( ( ( (lv_target_0_0= ruleConceptDeclaration ) ) (otherlv_1= 'between' ( (lv_linkFrom_2_0= ruleConceptDeclaration ) ) otherlv_3= 'and' ( (lv_linkTo_4_0= ruleConceptDeclaration ) ) )? ) )
            // InternalKim.g:13581:2: ( ( (lv_target_0_0= ruleConceptDeclaration ) ) (otherlv_1= 'between' ( (lv_linkFrom_2_0= ruleConceptDeclaration ) ) otherlv_3= 'and' ( (lv_linkTo_4_0= ruleConceptDeclaration ) ) )? )
            {
            // InternalKim.g:13581:2: ( ( (lv_target_0_0= ruleConceptDeclaration ) ) (otherlv_1= 'between' ( (lv_linkFrom_2_0= ruleConceptDeclaration ) ) otherlv_3= 'and' ( (lv_linkTo_4_0= ruleConceptDeclaration ) ) )? )
            // InternalKim.g:13582:3: ( (lv_target_0_0= ruleConceptDeclaration ) ) (otherlv_1= 'between' ( (lv_linkFrom_2_0= ruleConceptDeclaration ) ) otherlv_3= 'and' ( (lv_linkTo_4_0= ruleConceptDeclaration ) ) )?
            {
            // InternalKim.g:13582:3: ( (lv_target_0_0= ruleConceptDeclaration ) )
            // InternalKim.g:13583:4: (lv_target_0_0= ruleConceptDeclaration )
            {
            // InternalKim.g:13583:4: (lv_target_0_0= ruleConceptDeclaration )
            // InternalKim.g:13584:5: lv_target_0_0= ruleConceptDeclaration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getApplicableTargetAccess().getTargetConceptDeclarationParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_160);
            lv_target_0_0=ruleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getApplicableTargetRule());
              					}
              					set(
              						current,
              						"target",
              						lv_target_0_0,
              						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:13601:3: (otherlv_1= 'between' ( (lv_linkFrom_2_0= ruleConceptDeclaration ) ) otherlv_3= 'and' ( (lv_linkTo_4_0= ruleConceptDeclaration ) ) )?
            int alt289=2;
            int LA289_0 = input.LA(1);

            if ( (LA289_0==212) ) {
                alt289=1;
            }
            switch (alt289) {
                case 1 :
                    // InternalKim.g:13602:4: otherlv_1= 'between' ( (lv_linkFrom_2_0= ruleConceptDeclaration ) ) otherlv_3= 'and' ( (lv_linkTo_4_0= ruleConceptDeclaration ) )
                    {
                    otherlv_1=(Token)match(input,212,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getApplicableTargetAccess().getBetweenKeyword_1_0());
                      			
                    }
                    // InternalKim.g:13606:4: ( (lv_linkFrom_2_0= ruleConceptDeclaration ) )
                    // InternalKim.g:13607:5: (lv_linkFrom_2_0= ruleConceptDeclaration )
                    {
                    // InternalKim.g:13607:5: (lv_linkFrom_2_0= ruleConceptDeclaration )
                    // InternalKim.g:13608:6: lv_linkFrom_2_0= ruleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getApplicableTargetAccess().getLinkFromConceptDeclarationParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_161);
                    lv_linkFrom_2_0=ruleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getApplicableTargetRule());
                      						}
                      						set(
                      							current,
                      							"linkFrom",
                      							lv_linkFrom_2_0,
                      							"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,165,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getApplicableTargetAccess().getAndKeyword_1_2());
                      			
                    }
                    // InternalKim.g:13629:4: ( (lv_linkTo_4_0= ruleConceptDeclaration ) )
                    // InternalKim.g:13630:5: (lv_linkTo_4_0= ruleConceptDeclaration )
                    {
                    // InternalKim.g:13630:5: (lv_linkTo_4_0= ruleConceptDeclaration )
                    // InternalKim.g:13631:6: lv_linkTo_4_0= ruleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getApplicableTargetAccess().getLinkToConceptDeclarationParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_linkTo_4_0=ruleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getApplicableTargetRule());
                      						}
                      						set(
                      							current,
                      							"linkTo",
                      							lv_linkTo_4_0,
                      							"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleApplicableTarget"


    // $ANTLR start "entryRuleChildConcept"
    // InternalKim.g:13653:1: entryRuleChildConcept returns [EObject current=null] : iv_ruleChildConcept= ruleChildConcept EOF ;
    public final EObject entryRuleChildConcept() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleChildConcept = null;


        try {
            // InternalKim.g:13653:53: (iv_ruleChildConcept= ruleChildConcept EOF )
            // InternalKim.g:13654:2: iv_ruleChildConcept= ruleChildConcept EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getChildConceptRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleChildConcept=ruleChildConcept();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleChildConcept; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleChildConcept"


    // $ANTLR start "ruleChildConcept"
    // InternalKim.g:13660:1: ruleChildConcept returns [EObject current=null] : ( ( ( (lv_abstract_0_0= 'abstract' ) )? ( (lv_name_1_0= RULE_CAMELCASE_ID ) ) ) | (otherlv_2= '(' this_ConceptStatementBody_3= ruleConceptStatementBody otherlv_4= ')' ) ) ;
    public final EObject ruleChildConcept() throws RecognitionException {
        EObject current = null;

        Token lv_abstract_0_0=null;
        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject this_ConceptStatementBody_3 = null;



        	enterRule();

        try {
            // InternalKim.g:13666:2: ( ( ( ( (lv_abstract_0_0= 'abstract' ) )? ( (lv_name_1_0= RULE_CAMELCASE_ID ) ) ) | (otherlv_2= '(' this_ConceptStatementBody_3= ruleConceptStatementBody otherlv_4= ')' ) ) )
            // InternalKim.g:13667:2: ( ( ( (lv_abstract_0_0= 'abstract' ) )? ( (lv_name_1_0= RULE_CAMELCASE_ID ) ) ) | (otherlv_2= '(' this_ConceptStatementBody_3= ruleConceptStatementBody otherlv_4= ')' ) )
            {
            // InternalKim.g:13667:2: ( ( ( (lv_abstract_0_0= 'abstract' ) )? ( (lv_name_1_0= RULE_CAMELCASE_ID ) ) ) | (otherlv_2= '(' this_ConceptStatementBody_3= ruleConceptStatementBody otherlv_4= ')' ) )
            int alt291=2;
            int LA291_0 = input.LA(1);

            if ( (LA291_0==RULE_CAMELCASE_ID||LA291_0==172) ) {
                alt291=1;
            }
            else if ( (LA291_0==38) ) {
                alt291=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 291, 0, input);

                throw nvae;
            }
            switch (alt291) {
                case 1 :
                    // InternalKim.g:13668:3: ( ( (lv_abstract_0_0= 'abstract' ) )? ( (lv_name_1_0= RULE_CAMELCASE_ID ) ) )
                    {
                    // InternalKim.g:13668:3: ( ( (lv_abstract_0_0= 'abstract' ) )? ( (lv_name_1_0= RULE_CAMELCASE_ID ) ) )
                    // InternalKim.g:13669:4: ( (lv_abstract_0_0= 'abstract' ) )? ( (lv_name_1_0= RULE_CAMELCASE_ID ) )
                    {
                    // InternalKim.g:13669:4: ( (lv_abstract_0_0= 'abstract' ) )?
                    int alt290=2;
                    int LA290_0 = input.LA(1);

                    if ( (LA290_0==172) ) {
                        alt290=1;
                    }
                    switch (alt290) {
                        case 1 :
                            // InternalKim.g:13670:5: (lv_abstract_0_0= 'abstract' )
                            {
                            // InternalKim.g:13670:5: (lv_abstract_0_0= 'abstract' )
                            // InternalKim.g:13671:6: lv_abstract_0_0= 'abstract'
                            {
                            lv_abstract_0_0=(Token)match(input,172,FOLLOW_162); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_abstract_0_0, grammarAccess.getChildConceptAccess().getAbstractAbstractKeyword_0_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getChildConceptRule());
                              						}
                              						setWithLastConsumed(current, "abstract", true, "abstract");
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalKim.g:13683:4: ( (lv_name_1_0= RULE_CAMELCASE_ID ) )
                    // InternalKim.g:13684:5: (lv_name_1_0= RULE_CAMELCASE_ID )
                    {
                    // InternalKim.g:13684:5: (lv_name_1_0= RULE_CAMELCASE_ID )
                    // InternalKim.g:13685:6: lv_name_1_0= RULE_CAMELCASE_ID
                    {
                    lv_name_1_0=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_1_0, grammarAccess.getChildConceptAccess().getNameCAMELCASE_IDTerminalRuleCall_0_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getChildConceptRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"name",
                      							lv_name_1_0,
                      							"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:13703:3: (otherlv_2= '(' this_ConceptStatementBody_3= ruleConceptStatementBody otherlv_4= ')' )
                    {
                    // InternalKim.g:13703:3: (otherlv_2= '(' this_ConceptStatementBody_3= ruleConceptStatementBody otherlv_4= ')' )
                    // InternalKim.g:13704:4: otherlv_2= '(' this_ConceptStatementBody_3= ruleConceptStatementBody otherlv_4= ')'
                    {
                    otherlv_2=(Token)match(input,38,FOLLOW_134); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getChildConceptAccess().getLeftParenthesisKeyword_1_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getChildConceptAccess().getConceptStatementBodyParserRuleCall_1_1());
                      			
                    }
                    pushFollow(FOLLOW_96);
                    this_ConceptStatementBody_3=ruleConceptStatementBody();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_ConceptStatementBody_3;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    otherlv_4=(Token)match(input,41,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getChildConceptAccess().getRightParenthesisKeyword_1_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleChildConcept"


    // $ANTLR start "entryRuleIdentityRequirement"
    // InternalKim.g:13728:1: entryRuleIdentityRequirement returns [EObject current=null] : iv_ruleIdentityRequirement= ruleIdentityRequirement EOF ;
    public final EObject entryRuleIdentityRequirement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIdentityRequirement = null;


        try {
            // InternalKim.g:13728:60: (iv_ruleIdentityRequirement= ruleIdentityRequirement EOF )
            // InternalKim.g:13729:2: iv_ruleIdentityRequirement= ruleIdentityRequirement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIdentityRequirementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIdentityRequirement=ruleIdentityRequirement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIdentityRequirement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIdentityRequirement"


    // $ANTLR start "ruleIdentityRequirement"
    // InternalKim.g:13735:1: ruleIdentityRequirement returns [EObject current=null] : ( ( ( ( (lv_type_0_1= 'identity' | lv_type_0_2= 'attribute' | lv_type_0_3= 'realm' | lv_type_0_4= 'extent' ) ) ) ( (lv_identities_1_0= ruleConceptDeclaration ) ) (otherlv_2= ',' ( (lv_identities_3_0= ruleConceptDeclaration ) ) )* ) | (otherlv_4= 'authority' ( ( (lv_authority_5_1= RULE_UPPERCASE_ID | lv_authority_5_2= RULE_UPPERCASE_PATH ) ) ) ) ) ;
    public final EObject ruleIdentityRequirement() throws RecognitionException {
        EObject current = null;

        Token lv_type_0_1=null;
        Token lv_type_0_2=null;
        Token lv_type_0_3=null;
        Token lv_type_0_4=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token lv_authority_5_1=null;
        Token lv_authority_5_2=null;
        EObject lv_identities_1_0 = null;

        EObject lv_identities_3_0 = null;



        	enterRule();

        try {
            // InternalKim.g:13741:2: ( ( ( ( ( (lv_type_0_1= 'identity' | lv_type_0_2= 'attribute' | lv_type_0_3= 'realm' | lv_type_0_4= 'extent' ) ) ) ( (lv_identities_1_0= ruleConceptDeclaration ) ) (otherlv_2= ',' ( (lv_identities_3_0= ruleConceptDeclaration ) ) )* ) | (otherlv_4= 'authority' ( ( (lv_authority_5_1= RULE_UPPERCASE_ID | lv_authority_5_2= RULE_UPPERCASE_PATH ) ) ) ) ) )
            // InternalKim.g:13742:2: ( ( ( ( (lv_type_0_1= 'identity' | lv_type_0_2= 'attribute' | lv_type_0_3= 'realm' | lv_type_0_4= 'extent' ) ) ) ( (lv_identities_1_0= ruleConceptDeclaration ) ) (otherlv_2= ',' ( (lv_identities_3_0= ruleConceptDeclaration ) ) )* ) | (otherlv_4= 'authority' ( ( (lv_authority_5_1= RULE_UPPERCASE_ID | lv_authority_5_2= RULE_UPPERCASE_PATH ) ) ) ) )
            {
            // InternalKim.g:13742:2: ( ( ( ( (lv_type_0_1= 'identity' | lv_type_0_2= 'attribute' | lv_type_0_3= 'realm' | lv_type_0_4= 'extent' ) ) ) ( (lv_identities_1_0= ruleConceptDeclaration ) ) (otherlv_2= ',' ( (lv_identities_3_0= ruleConceptDeclaration ) ) )* ) | (otherlv_4= 'authority' ( ( (lv_authority_5_1= RULE_UPPERCASE_ID | lv_authority_5_2= RULE_UPPERCASE_PATH ) ) ) ) )
            int alt295=2;
            int LA295_0 = input.LA(1);

            if ( (LA295_0==163||(LA295_0>=213 && LA295_0<=215)) ) {
                alt295=1;
            }
            else if ( (LA295_0==183) ) {
                alt295=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 295, 0, input);

                throw nvae;
            }
            switch (alt295) {
                case 1 :
                    // InternalKim.g:13743:3: ( ( ( (lv_type_0_1= 'identity' | lv_type_0_2= 'attribute' | lv_type_0_3= 'realm' | lv_type_0_4= 'extent' ) ) ) ( (lv_identities_1_0= ruleConceptDeclaration ) ) (otherlv_2= ',' ( (lv_identities_3_0= ruleConceptDeclaration ) ) )* )
                    {
                    // InternalKim.g:13743:3: ( ( ( (lv_type_0_1= 'identity' | lv_type_0_2= 'attribute' | lv_type_0_3= 'realm' | lv_type_0_4= 'extent' ) ) ) ( (lv_identities_1_0= ruleConceptDeclaration ) ) (otherlv_2= ',' ( (lv_identities_3_0= ruleConceptDeclaration ) ) )* )
                    // InternalKim.g:13744:4: ( ( (lv_type_0_1= 'identity' | lv_type_0_2= 'attribute' | lv_type_0_3= 'realm' | lv_type_0_4= 'extent' ) ) ) ( (lv_identities_1_0= ruleConceptDeclaration ) ) (otherlv_2= ',' ( (lv_identities_3_0= ruleConceptDeclaration ) ) )*
                    {
                    // InternalKim.g:13744:4: ( ( (lv_type_0_1= 'identity' | lv_type_0_2= 'attribute' | lv_type_0_3= 'realm' | lv_type_0_4= 'extent' ) ) )
                    // InternalKim.g:13745:5: ( (lv_type_0_1= 'identity' | lv_type_0_2= 'attribute' | lv_type_0_3= 'realm' | lv_type_0_4= 'extent' ) )
                    {
                    // InternalKim.g:13745:5: ( (lv_type_0_1= 'identity' | lv_type_0_2= 'attribute' | lv_type_0_3= 'realm' | lv_type_0_4= 'extent' ) )
                    // InternalKim.g:13746:6: (lv_type_0_1= 'identity' | lv_type_0_2= 'attribute' | lv_type_0_3= 'realm' | lv_type_0_4= 'extent' )
                    {
                    // InternalKim.g:13746:6: (lv_type_0_1= 'identity' | lv_type_0_2= 'attribute' | lv_type_0_3= 'realm' | lv_type_0_4= 'extent' )
                    int alt292=4;
                    switch ( input.LA(1) ) {
                    case 163:
                        {
                        alt292=1;
                        }
                        break;
                    case 213:
                        {
                        alt292=2;
                        }
                        break;
                    case 214:
                        {
                        alt292=3;
                        }
                        break;
                    case 215:
                        {
                        alt292=4;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 292, 0, input);

                        throw nvae;
                    }

                    switch (alt292) {
                        case 1 :
                            // InternalKim.g:13747:7: lv_type_0_1= 'identity'
                            {
                            lv_type_0_1=(Token)match(input,163,FOLLOW_23); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_type_0_1, grammarAccess.getIdentityRequirementAccess().getTypeIdentityKeyword_0_0_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getIdentityRequirementRule());
                              							}
                              							setWithLastConsumed(current, "type", lv_type_0_1, null);
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:13758:7: lv_type_0_2= 'attribute'
                            {
                            lv_type_0_2=(Token)match(input,213,FOLLOW_23); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_type_0_2, grammarAccess.getIdentityRequirementAccess().getTypeAttributeKeyword_0_0_0_1());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getIdentityRequirementRule());
                              							}
                              							setWithLastConsumed(current, "type", lv_type_0_2, null);
                              						
                            }

                            }
                            break;
                        case 3 :
                            // InternalKim.g:13769:7: lv_type_0_3= 'realm'
                            {
                            lv_type_0_3=(Token)match(input,214,FOLLOW_23); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_type_0_3, grammarAccess.getIdentityRequirementAccess().getTypeRealmKeyword_0_0_0_2());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getIdentityRequirementRule());
                              							}
                              							setWithLastConsumed(current, "type", lv_type_0_3, null);
                              						
                            }

                            }
                            break;
                        case 4 :
                            // InternalKim.g:13780:7: lv_type_0_4= 'extent'
                            {
                            lv_type_0_4=(Token)match(input,215,FOLLOW_23); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_type_0_4, grammarAccess.getIdentityRequirementAccess().getTypeExtentKeyword_0_0_0_3());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getIdentityRequirementRule());
                              							}
                              							setWithLastConsumed(current, "type", lv_type_0_4, null);
                              						
                            }

                            }
                            break;

                    }


                    }


                    }

                    // InternalKim.g:13793:4: ( (lv_identities_1_0= ruleConceptDeclaration ) )
                    // InternalKim.g:13794:5: (lv_identities_1_0= ruleConceptDeclaration )
                    {
                    // InternalKim.g:13794:5: (lv_identities_1_0= ruleConceptDeclaration )
                    // InternalKim.g:13795:6: lv_identities_1_0= ruleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getIdentityRequirementAccess().getIdentitiesConceptDeclarationParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_34);
                    lv_identities_1_0=ruleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getIdentityRequirementRule());
                      						}
                      						add(
                      							current,
                      							"identities",
                      							lv_identities_1_0,
                      							"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:13812:4: (otherlv_2= ',' ( (lv_identities_3_0= ruleConceptDeclaration ) ) )*
                    loop293:
                    do {
                        int alt293=2;
                        int LA293_0 = input.LA(1);

                        if ( (LA293_0==27) ) {
                            int LA293_1 = input.LA(2);

                            if ( (LA293_1==163) ) {
                                switch ( input.LA(3) ) {
                                case RULE_STRING:
                                case RULE_INT:
                                case RULE_ID:
                                    {
                                    alt293=1;
                                    }
                                    break;
                                case RULE_UPPERCASE_ID:
                                    {
                                    int LA293_5 = input.LA(4);

                                    if ( (LA293_5==89) ) {
                                        alt293=1;
                                    }


                                    }
                                    break;
                                case RULE_CAMELCASE_ID:
                                    {
                                    int LA293_6 = input.LA(4);

                                    if ( (LA293_6==89) ) {
                                        alt293=1;
                                    }


                                    }
                                    break;

                                }

                            }
                            else if ( ((LA293_1>=RULE_LOWERCASE_ID && LA293_1<=RULE_UPPERCASE_ID)||LA293_1==RULE_CAMELCASE_ID||LA293_1==RULE_LOWERCASE_DASHID||LA293_1==RULE_UPPERCASE_PATH||LA293_1==38||(LA293_1>=132 && LA293_1<=133)||(LA293_1>=141 && LA293_1<=142)||(LA293_1>=144 && LA293_1<=149)||(LA293_1>=151 && LA293_1<=162)) ) {
                                alt293=1;
                            }


                        }


                        switch (alt293) {
                    	case 1 :
                    	    // InternalKim.g:13813:5: otherlv_2= ',' ( (lv_identities_3_0= ruleConceptDeclaration ) )
                    	    {
                    	    otherlv_2=(Token)match(input,27,FOLLOW_23); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_2, grammarAccess.getIdentityRequirementAccess().getCommaKeyword_0_2_0());
                    	      				
                    	    }
                    	    // InternalKim.g:13817:5: ( (lv_identities_3_0= ruleConceptDeclaration ) )
                    	    // InternalKim.g:13818:6: (lv_identities_3_0= ruleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:13818:6: (lv_identities_3_0= ruleConceptDeclaration )
                    	    // InternalKim.g:13819:7: lv_identities_3_0= ruleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getIdentityRequirementAccess().getIdentitiesConceptDeclarationParserRuleCall_0_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_34);
                    	    lv_identities_3_0=ruleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getIdentityRequirementRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"identities",
                    	      								lv_identities_3_0,
                    	      								"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop293;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:13839:3: (otherlv_4= 'authority' ( ( (lv_authority_5_1= RULE_UPPERCASE_ID | lv_authority_5_2= RULE_UPPERCASE_PATH ) ) ) )
                    {
                    // InternalKim.g:13839:3: (otherlv_4= 'authority' ( ( (lv_authority_5_1= RULE_UPPERCASE_ID | lv_authority_5_2= RULE_UPPERCASE_PATH ) ) ) )
                    // InternalKim.g:13840:4: otherlv_4= 'authority' ( ( (lv_authority_5_1= RULE_UPPERCASE_ID | lv_authority_5_2= RULE_UPPERCASE_PATH ) ) )
                    {
                    otherlv_4=(Token)match(input,183,FOLLOW_120); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getIdentityRequirementAccess().getAuthorityKeyword_1_0());
                      			
                    }
                    // InternalKim.g:13844:4: ( ( (lv_authority_5_1= RULE_UPPERCASE_ID | lv_authority_5_2= RULE_UPPERCASE_PATH ) ) )
                    // InternalKim.g:13845:5: ( (lv_authority_5_1= RULE_UPPERCASE_ID | lv_authority_5_2= RULE_UPPERCASE_PATH ) )
                    {
                    // InternalKim.g:13845:5: ( (lv_authority_5_1= RULE_UPPERCASE_ID | lv_authority_5_2= RULE_UPPERCASE_PATH ) )
                    // InternalKim.g:13846:6: (lv_authority_5_1= RULE_UPPERCASE_ID | lv_authority_5_2= RULE_UPPERCASE_PATH )
                    {
                    // InternalKim.g:13846:6: (lv_authority_5_1= RULE_UPPERCASE_ID | lv_authority_5_2= RULE_UPPERCASE_PATH )
                    int alt294=2;
                    int LA294_0 = input.LA(1);

                    if ( (LA294_0==RULE_UPPERCASE_ID) ) {
                        alt294=1;
                    }
                    else if ( (LA294_0==RULE_UPPERCASE_PATH) ) {
                        alt294=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 294, 0, input);

                        throw nvae;
                    }
                    switch (alt294) {
                        case 1 :
                            // InternalKim.g:13847:7: lv_authority_5_1= RULE_UPPERCASE_ID
                            {
                            lv_authority_5_1=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_authority_5_1, grammarAccess.getIdentityRequirementAccess().getAuthorityUPPERCASE_IDTerminalRuleCall_1_1_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getIdentityRequirementRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"authority",
                              								lv_authority_5_1,
                              								"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:13862:7: lv_authority_5_2= RULE_UPPERCASE_PATH
                            {
                            lv_authority_5_2=(Token)match(input,RULE_UPPERCASE_PATH,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_authority_5_2, grammarAccess.getIdentityRequirementAccess().getAuthorityUPPERCASE_PATHTerminalRuleCall_1_1_0_1());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getIdentityRequirementRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"authority",
                              								lv_authority_5_2,
                              								"org.integratedmodelling.kim.Kim.UPPERCASE_PATH");
                              						
                            }

                            }
                            break;

                    }


                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIdentityRequirement"


    // $ANTLR start "entryRuleAnnotation"
    // InternalKim.g:13884:1: entryRuleAnnotation returns [EObject current=null] : iv_ruleAnnotation= ruleAnnotation EOF ;
    public final EObject entryRuleAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotation = null;


        try {
            // InternalKim.g:13884:51: (iv_ruleAnnotation= ruleAnnotation EOF )
            // InternalKim.g:13885:2: iv_ruleAnnotation= ruleAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAnnotation=ruleAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAnnotation"


    // $ANTLR start "ruleAnnotation"
    // InternalKim.g:13891:1: ruleAnnotation returns [EObject current=null] : ( ( (lv_name_0_0= RULE_ANNOTATION_ID ) ) ( ( ( '(' )=>otherlv_1= '(' ) ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' )? ) ;
    public final EObject ruleAnnotation() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_parameters_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:13897:2: ( ( ( (lv_name_0_0= RULE_ANNOTATION_ID ) ) ( ( ( '(' )=>otherlv_1= '(' ) ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' )? ) )
            // InternalKim.g:13898:2: ( ( (lv_name_0_0= RULE_ANNOTATION_ID ) ) ( ( ( '(' )=>otherlv_1= '(' ) ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' )? )
            {
            // InternalKim.g:13898:2: ( ( (lv_name_0_0= RULE_ANNOTATION_ID ) ) ( ( ( '(' )=>otherlv_1= '(' ) ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' )? )
            // InternalKim.g:13899:3: ( (lv_name_0_0= RULE_ANNOTATION_ID ) ) ( ( ( '(' )=>otherlv_1= '(' ) ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' )?
            {
            // InternalKim.g:13899:3: ( (lv_name_0_0= RULE_ANNOTATION_ID ) )
            // InternalKim.g:13900:4: (lv_name_0_0= RULE_ANNOTATION_ID )
            {
            // InternalKim.g:13900:4: (lv_name_0_0= RULE_ANNOTATION_ID )
            // InternalKim.g:13901:5: lv_name_0_0= RULE_ANNOTATION_ID
            {
            lv_name_0_0=(Token)match(input,RULE_ANNOTATION_ID,FOLLOW_163); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_0_0, grammarAccess.getAnnotationAccess().getNameANNOTATION_IDTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getAnnotationRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_0_0,
              						"org.integratedmodelling.kim.Kim.ANNOTATION_ID");
              				
            }

            }


            }

            // InternalKim.g:13917:3: ( ( ( '(' )=>otherlv_1= '(' ) ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' )?
            int alt297=2;
            alt297 = dfa297.predict(input);
            switch (alt297) {
                case 1 :
                    // InternalKim.g:13918:4: ( ( '(' )=>otherlv_1= '(' ) ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')'
                    {
                    // InternalKim.g:13918:4: ( ( '(' )=>otherlv_1= '(' )
                    // InternalKim.g:13919:5: ( '(' )=>otherlv_1= '('
                    {
                    otherlv_1=(Token)match(input,38,FOLLOW_164); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getAnnotationAccess().getLeftParenthesisKeyword_1_0());
                      				
                    }

                    }

                    // InternalKim.g:13925:4: ( (lv_parameters_2_0= ruleParameterList ) )?
                    int alt296=2;
                    int LA296_0 = input.LA(1);

                    if ( ((LA296_0>=RULE_LOWERCASE_ID && LA296_0<=RULE_STRING)||(LA296_0>=RULE_EXPR && LA296_0<=RULE_LOWERCASE_DASHID)||LA296_0==RULE_UPPERCASE_PATH||(LA296_0>=28 && LA296_0<=29)||LA296_0==38||(LA296_0>=49 && LA296_0<=50)||(LA296_0>=76 && LA296_0<=79)||(LA296_0>=82 && LA296_0<=83)||LA296_0==85||LA296_0==113||LA296_0==118||(LA296_0>=132 && LA296_0<=133)||(LA296_0>=141 && LA296_0<=142)||(LA296_0>=144 && LA296_0<=149)||(LA296_0>=151 && LA296_0<=163)||LA296_0==216||(LA296_0>=251 && LA296_0<=252)) ) {
                        alt296=1;
                    }
                    switch (alt296) {
                        case 1 :
                            // InternalKim.g:13926:5: (lv_parameters_2_0= ruleParameterList )
                            {
                            // InternalKim.g:13926:5: (lv_parameters_2_0= ruleParameterList )
                            // InternalKim.g:13927:6: lv_parameters_2_0= ruleParameterList
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getAnnotationAccess().getParametersParameterListParserRuleCall_1_1_0());
                              					
                            }
                            pushFollow(FOLLOW_96);
                            lv_parameters_2_0=ruleParameterList();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getAnnotationRule());
                              						}
                              						set(
                              							current,
                              							"parameters",
                              							lv_parameters_2_0,
                              							"org.integratedmodelling.kim.Kim.ParameterList");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    otherlv_3=(Token)match(input,41,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getAnnotationAccess().getRightParenthesisKeyword_1_2());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAnnotation"


    // $ANTLR start "entryRuleList"
    // InternalKim.g:13953:1: entryRuleList returns [EObject current=null] : iv_ruleList= ruleList EOF ;
    public final EObject entryRuleList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleList = null;


        try {
            // InternalKim.g:13953:45: (iv_ruleList= ruleList EOF )
            // InternalKim.g:13954:2: iv_ruleList= ruleList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleList=ruleList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleList"


    // $ANTLR start "ruleList"
    // InternalKim.g:13960:1: ruleList returns [EObject current=null] : ( () otherlv_1= '(' ( (lv_contents_2_0= ruleValueWithIdAndConcept ) )? ( (otherlv_3= ',' )? ( (lv_contents_4_0= ruleValueWithIdAndConcept ) ) )* otherlv_5= ')' ) ;
    public final EObject ruleList() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_contents_2_0 = null;

        EObject lv_contents_4_0 = null;



        	enterRule();

        try {
            // InternalKim.g:13966:2: ( ( () otherlv_1= '(' ( (lv_contents_2_0= ruleValueWithIdAndConcept ) )? ( (otherlv_3= ',' )? ( (lv_contents_4_0= ruleValueWithIdAndConcept ) ) )* otherlv_5= ')' ) )
            // InternalKim.g:13967:2: ( () otherlv_1= '(' ( (lv_contents_2_0= ruleValueWithIdAndConcept ) )? ( (otherlv_3= ',' )? ( (lv_contents_4_0= ruleValueWithIdAndConcept ) ) )* otherlv_5= ')' )
            {
            // InternalKim.g:13967:2: ( () otherlv_1= '(' ( (lv_contents_2_0= ruleValueWithIdAndConcept ) )? ( (otherlv_3= ',' )? ( (lv_contents_4_0= ruleValueWithIdAndConcept ) ) )* otherlv_5= ')' )
            // InternalKim.g:13968:3: () otherlv_1= '(' ( (lv_contents_2_0= ruleValueWithIdAndConcept ) )? ( (otherlv_3= ',' )? ( (lv_contents_4_0= ruleValueWithIdAndConcept ) ) )* otherlv_5= ')'
            {
            // InternalKim.g:13968:3: ()
            // InternalKim.g:13969:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getListAccess().getListAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,38,FOLLOW_165); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getListAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalKim.g:13982:3: ( (lv_contents_2_0= ruleValueWithIdAndConcept ) )?
            int alt298=2;
            alt298 = dfa298.predict(input);
            switch (alt298) {
                case 1 :
                    // InternalKim.g:13983:4: (lv_contents_2_0= ruleValueWithIdAndConcept )
                    {
                    // InternalKim.g:13983:4: (lv_contents_2_0= ruleValueWithIdAndConcept )
                    // InternalKim.g:13984:5: lv_contents_2_0= ruleValueWithIdAndConcept
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getListAccess().getContentsValueWithIdAndConceptParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_165);
                    lv_contents_2_0=ruleValueWithIdAndConcept();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getListRule());
                      					}
                      					add(
                      						current,
                      						"contents",
                      						lv_contents_2_0,
                      						"org.integratedmodelling.kim.Kim.ValueWithIdAndConcept");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:14001:3: ( (otherlv_3= ',' )? ( (lv_contents_4_0= ruleValueWithIdAndConcept ) ) )*
            loop300:
            do {
                int alt300=2;
                int LA300_0 = input.LA(1);

                if ( ((LA300_0>=RULE_LOWERCASE_ID && LA300_0<=RULE_STRING)||(LA300_0>=RULE_EXPR && LA300_0<=RULE_LOWERCASE_DASHID)||LA300_0==RULE_UPPERCASE_PATH||(LA300_0>=27 && LA300_0<=29)||LA300_0==38||(LA300_0>=49 && LA300_0<=50)||(LA300_0>=76 && LA300_0<=79)||(LA300_0>=82 && LA300_0<=83)||LA300_0==85||LA300_0==113||LA300_0==118||(LA300_0>=132 && LA300_0<=133)||(LA300_0>=141 && LA300_0<=142)||(LA300_0>=144 && LA300_0<=149)||(LA300_0>=151 && LA300_0<=163)||LA300_0==216||(LA300_0>=251 && LA300_0<=252)) ) {
                    alt300=1;
                }


                switch (alt300) {
            	case 1 :
            	    // InternalKim.g:14002:4: (otherlv_3= ',' )? ( (lv_contents_4_0= ruleValueWithIdAndConcept ) )
            	    {
            	    // InternalKim.g:14002:4: (otherlv_3= ',' )?
            	    int alt299=2;
            	    int LA299_0 = input.LA(1);

            	    if ( (LA299_0==27) ) {
            	        alt299=1;
            	    }
            	    switch (alt299) {
            	        case 1 :
            	            // InternalKim.g:14003:5: otherlv_3= ','
            	            {
            	            otherlv_3=(Token)match(input,27,FOLLOW_166); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(otherlv_3, grammarAccess.getListAccess().getCommaKeyword_3_0());
            	              				
            	            }

            	            }
            	            break;

            	    }

            	    // InternalKim.g:14008:4: ( (lv_contents_4_0= ruleValueWithIdAndConcept ) )
            	    // InternalKim.g:14009:5: (lv_contents_4_0= ruleValueWithIdAndConcept )
            	    {
            	    // InternalKim.g:14009:5: (lv_contents_4_0= ruleValueWithIdAndConcept )
            	    // InternalKim.g:14010:6: lv_contents_4_0= ruleValueWithIdAndConcept
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getListAccess().getContentsValueWithIdAndConceptParserRuleCall_3_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_165);
            	    lv_contents_4_0=ruleValueWithIdAndConcept();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getListRule());
            	      						}
            	      						add(
            	      							current,
            	      							"contents",
            	      							lv_contents_4_0,
            	      							"org.integratedmodelling.kim.Kim.ValueWithIdAndConcept");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop300;
                }
            } while (true);

            otherlv_5=(Token)match(input,41,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getListAccess().getRightParenthesisKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleList"


    // $ANTLR start "entryRuleLiteral"
    // InternalKim.g:14036:1: entryRuleLiteral returns [EObject current=null] : iv_ruleLiteral= ruleLiteral EOF ;
    public final EObject entryRuleLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteral = null;


        try {
            // InternalKim.g:14036:48: (iv_ruleLiteral= ruleLiteral EOF )
            // InternalKim.g:14037:2: iv_ruleLiteral= ruleLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLiteral=ruleLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLiteral"


    // $ANTLR start "ruleLiteral"
    // InternalKim.g:14043:1: ruleLiteral returns [EObject current=null] : ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) ) ;
    public final EObject ruleLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_string_4_0=null;
        Token lv_boolean_5_1=null;
        Token lv_boolean_5_2=null;
        EObject lv_from_0_0 = null;

        EObject lv_to_2_0 = null;

        EObject lv_number_3_0 = null;



        	enterRule();

        try {
            // InternalKim.g:14049:2: ( ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) ) )
            // InternalKim.g:14050:2: ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) )
            {
            // InternalKim.g:14050:2: ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) )
            int alt302=4;
            alt302 = dfa302.predict(input);
            switch (alt302) {
                case 1 :
                    // InternalKim.g:14051:3: ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) )
                    {
                    // InternalKim.g:14051:3: ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) )
                    // InternalKim.g:14052:4: ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) )
                    {
                    // InternalKim.g:14052:4: ( (lv_from_0_0= ruleNumber ) )
                    // InternalKim.g:14053:5: (lv_from_0_0= ruleNumber )
                    {
                    // InternalKim.g:14053:5: (lv_from_0_0= ruleNumber )
                    // InternalKim.g:14054:6: lv_from_0_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLiteralAccess().getFromNumberParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_25);
                    lv_from_0_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLiteralRule());
                      						}
                      						set(
                      							current,
                      							"from",
                      							lv_from_0_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:14071:4: ( ( 'to' )=>otherlv_1= 'to' )
                    // InternalKim.g:14072:5: ( 'to' )=>otherlv_1= 'to'
                    {
                    otherlv_1=(Token)match(input,36,FOLLOW_38); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getLiteralAccess().getToKeyword_0_1());
                      				
                    }

                    }

                    // InternalKim.g:14078:4: ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) )
                    // InternalKim.g:14079:5: ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber )
                    {
                    // InternalKim.g:14083:5: (lv_to_2_0= ruleNumber )
                    // InternalKim.g:14084:6: lv_to_2_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLiteralAccess().getToNumberParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_to_2_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLiteralRule());
                      						}
                      						set(
                      							current,
                      							"to",
                      							lv_to_2_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:14103:3: ( (lv_number_3_0= ruleNumber ) )
                    {
                    // InternalKim.g:14103:3: ( (lv_number_3_0= ruleNumber ) )
                    // InternalKim.g:14104:4: (lv_number_3_0= ruleNumber )
                    {
                    // InternalKim.g:14104:4: (lv_number_3_0= ruleNumber )
                    // InternalKim.g:14105:5: lv_number_3_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralAccess().getNumberNumberParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_number_3_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralRule());
                      					}
                      					set(
                      						current,
                      						"number",
                      						lv_number_3_0,
                      						"org.integratedmodelling.kim.Kim.Number");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:14123:3: ( (lv_string_4_0= RULE_STRING ) )
                    {
                    // InternalKim.g:14123:3: ( (lv_string_4_0= RULE_STRING ) )
                    // InternalKim.g:14124:4: (lv_string_4_0= RULE_STRING )
                    {
                    // InternalKim.g:14124:4: (lv_string_4_0= RULE_STRING )
                    // InternalKim.g:14125:5: lv_string_4_0= RULE_STRING
                    {
                    lv_string_4_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_string_4_0, grammarAccess.getLiteralAccess().getStringSTRINGTerminalRuleCall_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getLiteralRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"string",
                      						lv_string_4_0,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:14142:3: ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) )
                    {
                    // InternalKim.g:14142:3: ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) )
                    // InternalKim.g:14143:4: ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) )
                    {
                    // InternalKim.g:14143:4: ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) )
                    // InternalKim.g:14144:5: (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' )
                    {
                    // InternalKim.g:14144:5: (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' )
                    int alt301=2;
                    int LA301_0 = input.LA(1);

                    if ( (LA301_0==28) ) {
                        alt301=1;
                    }
                    else if ( (LA301_0==29) ) {
                        alt301=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 301, 0, input);

                        throw nvae;
                    }
                    switch (alt301) {
                        case 1 :
                            // InternalKim.g:14145:6: lv_boolean_5_1= 'true'
                            {
                            lv_boolean_5_1=(Token)match(input,28,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_5_1, grammarAccess.getLiteralAccess().getBooleanTrueKeyword_3_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getLiteralRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_5_1, null);
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:14156:6: lv_boolean_5_2= 'false'
                            {
                            lv_boolean_5_2=(Token)match(input,29,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_5_2, grammarAccess.getLiteralAccess().getBooleanFalseKeyword_3_0_1());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getLiteralRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_5_2, null);
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLiteral"


    // $ANTLR start "entryRuleLiteralOrIdOrComma"
    // InternalKim.g:14173:1: entryRuleLiteralOrIdOrComma returns [EObject current=null] : iv_ruleLiteralOrIdOrComma= ruleLiteralOrIdOrComma EOF ;
    public final EObject entryRuleLiteralOrIdOrComma() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteralOrIdOrComma = null;


        try {
            // InternalKim.g:14173:59: (iv_ruleLiteralOrIdOrComma= ruleLiteralOrIdOrComma EOF )
            // InternalKim.g:14174:2: iv_ruleLiteralOrIdOrComma= ruleLiteralOrIdOrComma EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralOrIdOrCommaRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLiteralOrIdOrComma=ruleLiteralOrIdOrComma();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLiteralOrIdOrComma; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLiteralOrIdOrComma"


    // $ANTLR start "ruleLiteralOrIdOrComma"
    // InternalKim.g:14180:1: ruleLiteralOrIdOrComma returns [EObject current=null] : ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) | ( (lv_id_6_0= RULE_ID ) ) | ( (lv_comma_7_0= ',' ) ) ) ;
    public final EObject ruleLiteralOrIdOrComma() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_string_4_0=null;
        Token lv_boolean_5_1=null;
        Token lv_boolean_5_2=null;
        Token lv_id_6_0=null;
        Token lv_comma_7_0=null;
        EObject lv_from_0_0 = null;

        EObject lv_to_2_0 = null;

        EObject lv_number_3_0 = null;



        	enterRule();

        try {
            // InternalKim.g:14186:2: ( ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) | ( (lv_id_6_0= RULE_ID ) ) | ( (lv_comma_7_0= ',' ) ) ) )
            // InternalKim.g:14187:2: ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) | ( (lv_id_6_0= RULE_ID ) ) | ( (lv_comma_7_0= ',' ) ) )
            {
            // InternalKim.g:14187:2: ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) | ( (lv_id_6_0= RULE_ID ) ) | ( (lv_comma_7_0= ',' ) ) )
            int alt304=6;
            alt304 = dfa304.predict(input);
            switch (alt304) {
                case 1 :
                    // InternalKim.g:14188:3: ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) )
                    {
                    // InternalKim.g:14188:3: ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) )
                    // InternalKim.g:14189:4: ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) )
                    {
                    // InternalKim.g:14189:4: ( (lv_from_0_0= ruleNumber ) )
                    // InternalKim.g:14190:5: (lv_from_0_0= ruleNumber )
                    {
                    // InternalKim.g:14190:5: (lv_from_0_0= ruleNumber )
                    // InternalKim.g:14191:6: lv_from_0_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLiteralOrIdOrCommaAccess().getFromNumberParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_25);
                    lv_from_0_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLiteralOrIdOrCommaRule());
                      						}
                      						set(
                      							current,
                      							"from",
                      							lv_from_0_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:14208:4: ( ( 'to' )=>otherlv_1= 'to' )
                    // InternalKim.g:14209:5: ( 'to' )=>otherlv_1= 'to'
                    {
                    otherlv_1=(Token)match(input,36,FOLLOW_38); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getLiteralOrIdOrCommaAccess().getToKeyword_0_1());
                      				
                    }

                    }

                    // InternalKim.g:14215:4: ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) )
                    // InternalKim.g:14216:5: ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber )
                    {
                    // InternalKim.g:14220:5: (lv_to_2_0= ruleNumber )
                    // InternalKim.g:14221:6: lv_to_2_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLiteralOrIdOrCommaAccess().getToNumberParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_to_2_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLiteralOrIdOrCommaRule());
                      						}
                      						set(
                      							current,
                      							"to",
                      							lv_to_2_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:14240:3: ( (lv_number_3_0= ruleNumber ) )
                    {
                    // InternalKim.g:14240:3: ( (lv_number_3_0= ruleNumber ) )
                    // InternalKim.g:14241:4: (lv_number_3_0= ruleNumber )
                    {
                    // InternalKim.g:14241:4: (lv_number_3_0= ruleNumber )
                    // InternalKim.g:14242:5: lv_number_3_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralOrIdOrCommaAccess().getNumberNumberParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_number_3_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralOrIdOrCommaRule());
                      					}
                      					set(
                      						current,
                      						"number",
                      						lv_number_3_0,
                      						"org.integratedmodelling.kim.Kim.Number");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:14260:3: ( (lv_string_4_0= RULE_STRING ) )
                    {
                    // InternalKim.g:14260:3: ( (lv_string_4_0= RULE_STRING ) )
                    // InternalKim.g:14261:4: (lv_string_4_0= RULE_STRING )
                    {
                    // InternalKim.g:14261:4: (lv_string_4_0= RULE_STRING )
                    // InternalKim.g:14262:5: lv_string_4_0= RULE_STRING
                    {
                    lv_string_4_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_string_4_0, grammarAccess.getLiteralOrIdOrCommaAccess().getStringSTRINGTerminalRuleCall_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getLiteralOrIdOrCommaRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"string",
                      						lv_string_4_0,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:14279:3: ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) )
                    {
                    // InternalKim.g:14279:3: ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) )
                    // InternalKim.g:14280:4: ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) )
                    {
                    // InternalKim.g:14280:4: ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) )
                    // InternalKim.g:14281:5: (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' )
                    {
                    // InternalKim.g:14281:5: (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' )
                    int alt303=2;
                    int LA303_0 = input.LA(1);

                    if ( (LA303_0==28) ) {
                        alt303=1;
                    }
                    else if ( (LA303_0==29) ) {
                        alt303=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 303, 0, input);

                        throw nvae;
                    }
                    switch (alt303) {
                        case 1 :
                            // InternalKim.g:14282:6: lv_boolean_5_1= 'true'
                            {
                            lv_boolean_5_1=(Token)match(input,28,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_5_1, grammarAccess.getLiteralOrIdOrCommaAccess().getBooleanTrueKeyword_3_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getLiteralOrIdOrCommaRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_5_1, null);
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:14293:6: lv_boolean_5_2= 'false'
                            {
                            lv_boolean_5_2=(Token)match(input,29,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_5_2, grammarAccess.getLiteralOrIdOrCommaAccess().getBooleanFalseKeyword_3_0_1());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getLiteralOrIdOrCommaRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_5_2, null);
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:14307:3: ( (lv_id_6_0= RULE_ID ) )
                    {
                    // InternalKim.g:14307:3: ( (lv_id_6_0= RULE_ID ) )
                    // InternalKim.g:14308:4: (lv_id_6_0= RULE_ID )
                    {
                    // InternalKim.g:14308:4: (lv_id_6_0= RULE_ID )
                    // InternalKim.g:14309:5: lv_id_6_0= RULE_ID
                    {
                    lv_id_6_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_id_6_0, grammarAccess.getLiteralOrIdOrCommaAccess().getIdIDTerminalRuleCall_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getLiteralOrIdOrCommaRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"id",
                      						lv_id_6_0,
                      						"org.eclipse.xtext.common.Terminals.ID");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:14326:3: ( (lv_comma_7_0= ',' ) )
                    {
                    // InternalKim.g:14326:3: ( (lv_comma_7_0= ',' ) )
                    // InternalKim.g:14327:4: (lv_comma_7_0= ',' )
                    {
                    // InternalKim.g:14327:4: (lv_comma_7_0= ',' )
                    // InternalKim.g:14328:5: lv_comma_7_0= ','
                    {
                    lv_comma_7_0=(Token)match(input,27,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_comma_7_0, grammarAccess.getLiteralOrIdOrCommaAccess().getCommaCommaKeyword_5_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getLiteralOrIdOrCommaRule());
                      					}
                      					setWithLastConsumed(current, "comma", true, ",");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLiteralOrIdOrComma"


    // $ANTLR start "entryRuleMap"
    // InternalKim.g:14344:1: entryRuleMap returns [EObject current=null] : iv_ruleMap= ruleMap EOF ;
    public final EObject entryRuleMap() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMap = null;


        try {
            // InternalKim.g:14344:44: (iv_ruleMap= ruleMap EOF )
            // InternalKim.g:14345:2: iv_ruleMap= ruleMap EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMapRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMap=ruleMap();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMap; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMap"


    // $ANTLR start "ruleMap"
    // InternalKim.g:14351:1: ruleMap returns [EObject current=null] : ( () otherlv_1= '{' ( ( (lv_entries_2_0= ruleMapEntry ) ) ( ( ( ',' )=>otherlv_3= ',' )? ( (lv_entries_4_0= ruleMapEntry ) ) )* )? otherlv_5= '}' ) ;
    public final EObject ruleMap() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_entries_2_0 = null;

        EObject lv_entries_4_0 = null;



        	enterRule();

        try {
            // InternalKim.g:14357:2: ( ( () otherlv_1= '{' ( ( (lv_entries_2_0= ruleMapEntry ) ) ( ( ( ',' )=>otherlv_3= ',' )? ( (lv_entries_4_0= ruleMapEntry ) ) )* )? otherlv_5= '}' ) )
            // InternalKim.g:14358:2: ( () otherlv_1= '{' ( ( (lv_entries_2_0= ruleMapEntry ) ) ( ( ( ',' )=>otherlv_3= ',' )? ( (lv_entries_4_0= ruleMapEntry ) ) )* )? otherlv_5= '}' )
            {
            // InternalKim.g:14358:2: ( () otherlv_1= '{' ( ( (lv_entries_2_0= ruleMapEntry ) ) ( ( ( ',' )=>otherlv_3= ',' )? ( (lv_entries_4_0= ruleMapEntry ) ) )* )? otherlv_5= '}' )
            // InternalKim.g:14359:3: () otherlv_1= '{' ( ( (lv_entries_2_0= ruleMapEntry ) ) ( ( ( ',' )=>otherlv_3= ',' )? ( (lv_entries_4_0= ruleMapEntry ) ) )* )? otherlv_5= '}'
            {
            // InternalKim.g:14359:3: ()
            // InternalKim.g:14360:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getMapAccess().getMapAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,216,FOLLOW_167); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getMapAccess().getLeftCurlyBracketKeyword_1());
              		
            }
            // InternalKim.g:14373:3: ( ( (lv_entries_2_0= ruleMapEntry ) ) ( ( ( ',' )=>otherlv_3= ',' )? ( (lv_entries_4_0= ruleMapEntry ) ) )* )?
            int alt307=2;
            int LA307_0 = input.LA(1);

            if ( ((LA307_0>=RULE_LOWERCASE_ID && LA307_0<=RULE_STRING)||(LA307_0>=RULE_CAMELCASE_ID && LA307_0<=RULE_LOWERCASE_DASHID)||LA307_0==RULE_UPPERCASE_PATH||(LA307_0>=28 && LA307_0<=29)||LA307_0==38||LA307_0==40||LA307_0==49||(LA307_0>=76 && LA307_0<=79)||LA307_0==82||LA307_0==85||(LA307_0>=132 && LA307_0<=133)||(LA307_0>=141 && LA307_0<=142)||(LA307_0>=144 && LA307_0<=149)||(LA307_0>=151 && LA307_0<=163)||(LA307_0>=251 && LA307_0<=252)) ) {
                alt307=1;
            }
            switch (alt307) {
                case 1 :
                    // InternalKim.g:14374:4: ( (lv_entries_2_0= ruleMapEntry ) ) ( ( ( ',' )=>otherlv_3= ',' )? ( (lv_entries_4_0= ruleMapEntry ) ) )*
                    {
                    // InternalKim.g:14374:4: ( (lv_entries_2_0= ruleMapEntry ) )
                    // InternalKim.g:14375:5: (lv_entries_2_0= ruleMapEntry )
                    {
                    // InternalKim.g:14375:5: (lv_entries_2_0= ruleMapEntry )
                    // InternalKim.g:14376:6: lv_entries_2_0= ruleMapEntry
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getMapAccess().getEntriesMapEntryParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_168);
                    lv_entries_2_0=ruleMapEntry();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getMapRule());
                      						}
                      						add(
                      							current,
                      							"entries",
                      							lv_entries_2_0,
                      							"org.integratedmodelling.kim.Kim.MapEntry");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:14393:4: ( ( ( ',' )=>otherlv_3= ',' )? ( (lv_entries_4_0= ruleMapEntry ) ) )*
                    loop306:
                    do {
                        int alt306=2;
                        int LA306_0 = input.LA(1);

                        if ( ((LA306_0>=RULE_LOWERCASE_ID && LA306_0<=RULE_STRING)||(LA306_0>=RULE_CAMELCASE_ID && LA306_0<=RULE_LOWERCASE_DASHID)||LA306_0==RULE_UPPERCASE_PATH||(LA306_0>=27 && LA306_0<=29)||LA306_0==38||LA306_0==40||LA306_0==49||(LA306_0>=76 && LA306_0<=79)||LA306_0==82||LA306_0==85||(LA306_0>=132 && LA306_0<=133)||(LA306_0>=141 && LA306_0<=142)||(LA306_0>=144 && LA306_0<=149)||(LA306_0>=151 && LA306_0<=163)||(LA306_0>=251 && LA306_0<=252)) ) {
                            alt306=1;
                        }


                        switch (alt306) {
                    	case 1 :
                    	    // InternalKim.g:14394:5: ( ( ',' )=>otherlv_3= ',' )? ( (lv_entries_4_0= ruleMapEntry ) )
                    	    {
                    	    // InternalKim.g:14394:5: ( ( ',' )=>otherlv_3= ',' )?
                    	    int alt305=2;
                    	    int LA305_0 = input.LA(1);

                    	    if ( (LA305_0==27) && (synpred547_InternalKim())) {
                    	        alt305=1;
                    	    }
                    	    switch (alt305) {
                    	        case 1 :
                    	            // InternalKim.g:14395:6: ( ',' )=>otherlv_3= ','
                    	            {
                    	            otherlv_3=(Token)match(input,27,FOLLOW_169); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              						newLeafNode(otherlv_3, grammarAccess.getMapAccess().getCommaKeyword_2_1_0_0());
                    	              					
                    	            }

                    	            }
                    	            break;

                    	    }

                    	    // InternalKim.g:14402:5: ( (lv_entries_4_0= ruleMapEntry ) )
                    	    // InternalKim.g:14403:6: (lv_entries_4_0= ruleMapEntry )
                    	    {
                    	    // InternalKim.g:14403:6: (lv_entries_4_0= ruleMapEntry )
                    	    // InternalKim.g:14404:7: lv_entries_4_0= ruleMapEntry
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getMapAccess().getEntriesMapEntryParserRuleCall_2_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_168);
                    	    lv_entries_4_0=ruleMapEntry();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getMapRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"entries",
                    	      								lv_entries_4_0,
                    	      								"org.integratedmodelling.kim.Kim.MapEntry");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop306;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,140,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getMapAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMap"


    // $ANTLR start "entryRuleMapEntry"
    // InternalKim.g:14431:1: entryRuleMapEntry returns [EObject current=null] : iv_ruleMapEntry= ruleMapEntry EOF ;
    public final EObject entryRuleMapEntry() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMapEntry = null;


        try {
            // InternalKim.g:14431:49: (iv_ruleMapEntry= ruleMapEntry EOF )
            // InternalKim.g:14432:2: iv_ruleMapEntry= ruleMapEntry EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMapEntryRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMapEntry=ruleMapEntry();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMapEntry; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMapEntry"


    // $ANTLR start "ruleMapEntry"
    // InternalKim.g:14438:1: ruleMapEntry returns [EObject current=null] : ( ( (lv_classifier_0_0= ruleClassifierRHSWithIdNoSet ) ) otherlv_1= ':' ( (lv_value_2_0= ruleValueWithIdAndConcept ) ) ) ;
    public final EObject ruleMapEntry() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_classifier_0_0 = null;

        EObject lv_value_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:14444:2: ( ( ( (lv_classifier_0_0= ruleClassifierRHSWithIdNoSet ) ) otherlv_1= ':' ( (lv_value_2_0= ruleValueWithIdAndConcept ) ) ) )
            // InternalKim.g:14445:2: ( ( (lv_classifier_0_0= ruleClassifierRHSWithIdNoSet ) ) otherlv_1= ':' ( (lv_value_2_0= ruleValueWithIdAndConcept ) ) )
            {
            // InternalKim.g:14445:2: ( ( (lv_classifier_0_0= ruleClassifierRHSWithIdNoSet ) ) otherlv_1= ':' ( (lv_value_2_0= ruleValueWithIdAndConcept ) ) )
            // InternalKim.g:14446:3: ( (lv_classifier_0_0= ruleClassifierRHSWithIdNoSet ) ) otherlv_1= ':' ( (lv_value_2_0= ruleValueWithIdAndConcept ) )
            {
            // InternalKim.g:14446:3: ( (lv_classifier_0_0= ruleClassifierRHSWithIdNoSet ) )
            // InternalKim.g:14447:4: (lv_classifier_0_0= ruleClassifierRHSWithIdNoSet )
            {
            // InternalKim.g:14447:4: (lv_classifier_0_0= ruleClassifierRHSWithIdNoSet )
            // InternalKim.g:14448:5: lv_classifier_0_0= ruleClassifierRHSWithIdNoSet
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMapEntryAccess().getClassifierClassifierRHSWithIdNoSetParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_82);
            lv_classifier_0_0=ruleClassifierRHSWithIdNoSet();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMapEntryRule());
              					}
              					set(
              						current,
              						"classifier",
              						lv_classifier_0_0,
              						"org.integratedmodelling.kim.Kim.ClassifierRHSWithIdNoSet");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,106,FOLLOW_166); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getMapEntryAccess().getColonKeyword_1());
              		
            }
            // InternalKim.g:14469:3: ( (lv_value_2_0= ruleValueWithIdAndConcept ) )
            // InternalKim.g:14470:4: (lv_value_2_0= ruleValueWithIdAndConcept )
            {
            // InternalKim.g:14470:4: (lv_value_2_0= ruleValueWithIdAndConcept )
            // InternalKim.g:14471:5: lv_value_2_0= ruleValueWithIdAndConcept
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMapEntryAccess().getValueValueWithIdAndConceptParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_value_2_0=ruleValueWithIdAndConcept();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMapEntryRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_2_0,
              						"org.integratedmodelling.kim.Kim.ValueWithIdAndConcept");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMapEntry"


    // $ANTLR start "entryRuleKeyValuePair"
    // InternalKim.g:14492:1: entryRuleKeyValuePair returns [EObject current=null] : iv_ruleKeyValuePair= ruleKeyValuePair EOF ;
    public final EObject entryRuleKeyValuePair() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleKeyValuePair = null;


        try {
            // InternalKim.g:14492:53: (iv_ruleKeyValuePair= ruleKeyValuePair EOF )
            // InternalKim.g:14493:2: iv_ruleKeyValuePair= ruleKeyValuePair EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getKeyValuePairRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleKeyValuePair=ruleKeyValuePair();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleKeyValuePair; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleKeyValuePair"


    // $ANTLR start "ruleKeyValuePair"
    // InternalKim.g:14499:1: ruleKeyValuePair returns [EObject current=null] : ( ( ( (lv_name_0_1= rulePathName | lv_name_0_2= RULE_LOWERCASE_ID | lv_name_0_3= 'value' ) ) ) ( ( (lv_interactive_1_0= '?=' ) ) | otherlv_2= '=' ) ( (lv_value_3_0= ruleValueWithIdAndConcept ) ) ) ;
    public final EObject ruleKeyValuePair() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_2=null;
        Token lv_name_0_3=null;
        Token lv_interactive_1_0=null;
        Token otherlv_2=null;
        AntlrDatatypeRuleToken lv_name_0_1 = null;

        EObject lv_value_3_0 = null;



        	enterRule();

        try {
            // InternalKim.g:14505:2: ( ( ( ( (lv_name_0_1= rulePathName | lv_name_0_2= RULE_LOWERCASE_ID | lv_name_0_3= 'value' ) ) ) ( ( (lv_interactive_1_0= '?=' ) ) | otherlv_2= '=' ) ( (lv_value_3_0= ruleValueWithIdAndConcept ) ) ) )
            // InternalKim.g:14506:2: ( ( ( (lv_name_0_1= rulePathName | lv_name_0_2= RULE_LOWERCASE_ID | lv_name_0_3= 'value' ) ) ) ( ( (lv_interactive_1_0= '?=' ) ) | otherlv_2= '=' ) ( (lv_value_3_0= ruleValueWithIdAndConcept ) ) )
            {
            // InternalKim.g:14506:2: ( ( ( (lv_name_0_1= rulePathName | lv_name_0_2= RULE_LOWERCASE_ID | lv_name_0_3= 'value' ) ) ) ( ( (lv_interactive_1_0= '?=' ) ) | otherlv_2= '=' ) ( (lv_value_3_0= ruleValueWithIdAndConcept ) ) )
            // InternalKim.g:14507:3: ( ( (lv_name_0_1= rulePathName | lv_name_0_2= RULE_LOWERCASE_ID | lv_name_0_3= 'value' ) ) ) ( ( (lv_interactive_1_0= '?=' ) ) | otherlv_2= '=' ) ( (lv_value_3_0= ruleValueWithIdAndConcept ) )
            {
            // InternalKim.g:14507:3: ( ( (lv_name_0_1= rulePathName | lv_name_0_2= RULE_LOWERCASE_ID | lv_name_0_3= 'value' ) ) )
            // InternalKim.g:14508:4: ( (lv_name_0_1= rulePathName | lv_name_0_2= RULE_LOWERCASE_ID | lv_name_0_3= 'value' ) )
            {
            // InternalKim.g:14508:4: ( (lv_name_0_1= rulePathName | lv_name_0_2= RULE_LOWERCASE_ID | lv_name_0_3= 'value' ) )
            // InternalKim.g:14509:5: (lv_name_0_1= rulePathName | lv_name_0_2= RULE_LOWERCASE_ID | lv_name_0_3= 'value' )
            {
            // InternalKim.g:14509:5: (lv_name_0_1= rulePathName | lv_name_0_2= RULE_LOWERCASE_ID | lv_name_0_3= 'value' )
            int alt308=3;
            switch ( input.LA(1) ) {
            case RULE_LOWERCASE_ID:
                {
                int LA308_1 = input.LA(2);

                if ( (synpred550_InternalKim()) ) {
                    alt308=1;
                }
                else if ( (synpred551_InternalKim()) ) {
                    alt308=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 308, 1, input);

                    throw nvae;
                }
                }
                break;
            case RULE_UPPERCASE_ID:
            case RULE_LOWERCASE_DASHID:
                {
                alt308=1;
                }
                break;
            case 161:
                {
                alt308=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 308, 0, input);

                throw nvae;
            }

            switch (alt308) {
                case 1 :
                    // InternalKim.g:14510:6: lv_name_0_1= rulePathName
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getKeyValuePairAccess().getNamePathNameParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_170);
                    lv_name_0_1=rulePathName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getKeyValuePairRule());
                      						}
                      						set(
                      							current,
                      							"name",
                      							lv_name_0_1,
                      							"org.integratedmodelling.kim.Kim.PathName");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:14526:6: lv_name_0_2= RULE_LOWERCASE_ID
                    {
                    lv_name_0_2=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_170); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_0_2, grammarAccess.getKeyValuePairAccess().getNameLOWERCASE_IDTerminalRuleCall_0_0_1());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getKeyValuePairRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"name",
                      							lv_name_0_2,
                      							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                      					
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:14541:6: lv_name_0_3= 'value'
                    {
                    lv_name_0_3=(Token)match(input,161,FOLLOW_170); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_0_3, grammarAccess.getKeyValuePairAccess().getNameValueKeyword_0_0_2());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getKeyValuePairRule());
                      						}
                      						setWithLastConsumed(current, "name", lv_name_0_3, null);
                      					
                    }

                    }
                    break;

            }


            }


            }

            // InternalKim.g:14554:3: ( ( (lv_interactive_1_0= '?=' ) ) | otherlv_2= '=' )
            int alt309=2;
            int LA309_0 = input.LA(1);

            if ( (LA309_0==217) ) {
                alt309=1;
            }
            else if ( (LA309_0==82) ) {
                alt309=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 309, 0, input);

                throw nvae;
            }
            switch (alt309) {
                case 1 :
                    // InternalKim.g:14555:4: ( (lv_interactive_1_0= '?=' ) )
                    {
                    // InternalKim.g:14555:4: ( (lv_interactive_1_0= '?=' ) )
                    // InternalKim.g:14556:5: (lv_interactive_1_0= '?=' )
                    {
                    // InternalKim.g:14556:5: (lv_interactive_1_0= '?=' )
                    // InternalKim.g:14557:6: lv_interactive_1_0= '?='
                    {
                    lv_interactive_1_0=(Token)match(input,217,FOLLOW_166); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_interactive_1_0, grammarAccess.getKeyValuePairAccess().getInteractiveQuestionMarkEqualsSignKeyword_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getKeyValuePairRule());
                      						}
                      						setWithLastConsumed(current, "interactive", true, "?=");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:14570:4: otherlv_2= '='
                    {
                    otherlv_2=(Token)match(input,82,FOLLOW_166); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getKeyValuePairAccess().getEqualsSignKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:14575:3: ( (lv_value_3_0= ruleValueWithIdAndConcept ) )
            // InternalKim.g:14576:4: (lv_value_3_0= ruleValueWithIdAndConcept )
            {
            // InternalKim.g:14576:4: (lv_value_3_0= ruleValueWithIdAndConcept )
            // InternalKim.g:14577:5: lv_value_3_0= ruleValueWithIdAndConcept
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getKeyValuePairAccess().getValueValueWithIdAndConceptParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_value_3_0=ruleValueWithIdAndConcept();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getKeyValuePairRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_3_0,
              						"org.integratedmodelling.kim.Kim.ValueWithIdAndConcept");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleKeyValuePair"


    // $ANTLR start "entryRuleParameterList"
    // InternalKim.g:14598:1: entryRuleParameterList returns [EObject current=null] : iv_ruleParameterList= ruleParameterList EOF ;
    public final EObject entryRuleParameterList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParameterList = null;


        try {
            // InternalKim.g:14598:54: (iv_ruleParameterList= ruleParameterList EOF )
            // InternalKim.g:14599:2: iv_ruleParameterList= ruleParameterList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParameterListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleParameterList=ruleParameterList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleParameterList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleParameterList"


    // $ANTLR start "ruleParameterList"
    // InternalKim.g:14605:1: ruleParameterList returns [EObject current=null] : ( ( ( (lv_pairs_0_0= ruleKeyValuePair ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_pairs_2_0= ruleKeyValuePair ) ) )* ) | ( ( (lv_singleValue_3_0= ruleValueWithIdAndConcept ) ) ( ( ( ',' )=>otherlv_4= ',' ) ( ( (lv_singleValue_5_0= ruleValueWithIdAndConcept ) ) | ( (lv_pairs_6_0= ruleKeyValuePair ) ) ) )* ) ) ;
    public final EObject ruleParameterList() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        EObject lv_pairs_0_0 = null;

        EObject lv_pairs_2_0 = null;

        EObject lv_singleValue_3_0 = null;

        EObject lv_singleValue_5_0 = null;

        EObject lv_pairs_6_0 = null;



        	enterRule();

        try {
            // InternalKim.g:14611:2: ( ( ( ( (lv_pairs_0_0= ruleKeyValuePair ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_pairs_2_0= ruleKeyValuePair ) ) )* ) | ( ( (lv_singleValue_3_0= ruleValueWithIdAndConcept ) ) ( ( ( ',' )=>otherlv_4= ',' ) ( ( (lv_singleValue_5_0= ruleValueWithIdAndConcept ) ) | ( (lv_pairs_6_0= ruleKeyValuePair ) ) ) )* ) ) )
            // InternalKim.g:14612:2: ( ( ( (lv_pairs_0_0= ruleKeyValuePair ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_pairs_2_0= ruleKeyValuePair ) ) )* ) | ( ( (lv_singleValue_3_0= ruleValueWithIdAndConcept ) ) ( ( ( ',' )=>otherlv_4= ',' ) ( ( (lv_singleValue_5_0= ruleValueWithIdAndConcept ) ) | ( (lv_pairs_6_0= ruleKeyValuePair ) ) ) )* ) )
            {
            // InternalKim.g:14612:2: ( ( ( (lv_pairs_0_0= ruleKeyValuePair ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_pairs_2_0= ruleKeyValuePair ) ) )* ) | ( ( (lv_singleValue_3_0= ruleValueWithIdAndConcept ) ) ( ( ( ',' )=>otherlv_4= ',' ) ( ( (lv_singleValue_5_0= ruleValueWithIdAndConcept ) ) | ( (lv_pairs_6_0= ruleKeyValuePair ) ) ) )* ) )
            int alt313=2;
            alt313 = dfa313.predict(input);
            switch (alt313) {
                case 1 :
                    // InternalKim.g:14613:3: ( ( (lv_pairs_0_0= ruleKeyValuePair ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_pairs_2_0= ruleKeyValuePair ) ) )* )
                    {
                    // InternalKim.g:14613:3: ( ( (lv_pairs_0_0= ruleKeyValuePair ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_pairs_2_0= ruleKeyValuePair ) ) )* )
                    // InternalKim.g:14614:4: ( (lv_pairs_0_0= ruleKeyValuePair ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_pairs_2_0= ruleKeyValuePair ) ) )*
                    {
                    // InternalKim.g:14614:4: ( (lv_pairs_0_0= ruleKeyValuePair ) )
                    // InternalKim.g:14615:5: (lv_pairs_0_0= ruleKeyValuePair )
                    {
                    // InternalKim.g:14615:5: (lv_pairs_0_0= ruleKeyValuePair )
                    // InternalKim.g:14616:6: lv_pairs_0_0= ruleKeyValuePair
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getParameterListAccess().getPairsKeyValuePairParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_34);
                    lv_pairs_0_0=ruleKeyValuePair();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getParameterListRule());
                      						}
                      						add(
                      							current,
                      							"pairs",
                      							lv_pairs_0_0,
                      							"org.integratedmodelling.kim.Kim.KeyValuePair");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:14633:4: ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_pairs_2_0= ruleKeyValuePair ) ) )*
                    loop310:
                    do {
                        int alt310=2;
                        int LA310_0 = input.LA(1);

                        if ( (LA310_0==27) ) {
                            alt310=1;
                        }


                        switch (alt310) {
                    	case 1 :
                    	    // InternalKim.g:14634:5: ( ( ',' )=>otherlv_1= ',' ) ( (lv_pairs_2_0= ruleKeyValuePair ) )
                    	    {
                    	    // InternalKim.g:14634:5: ( ( ',' )=>otherlv_1= ',' )
                    	    // InternalKim.g:14635:6: ( ',' )=>otherlv_1= ','
                    	    {
                    	    otherlv_1=(Token)match(input,27,FOLLOW_171); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_1, grammarAccess.getParameterListAccess().getCommaKeyword_0_1_0());
                    	      					
                    	    }

                    	    }

                    	    // InternalKim.g:14641:5: ( (lv_pairs_2_0= ruleKeyValuePair ) )
                    	    // InternalKim.g:14642:6: (lv_pairs_2_0= ruleKeyValuePair )
                    	    {
                    	    // InternalKim.g:14642:6: (lv_pairs_2_0= ruleKeyValuePair )
                    	    // InternalKim.g:14643:7: lv_pairs_2_0= ruleKeyValuePair
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getParameterListAccess().getPairsKeyValuePairParserRuleCall_0_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_34);
                    	    lv_pairs_2_0=ruleKeyValuePair();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getParameterListRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"pairs",
                    	      								lv_pairs_2_0,
                    	      								"org.integratedmodelling.kim.Kim.KeyValuePair");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop310;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:14663:3: ( ( (lv_singleValue_3_0= ruleValueWithIdAndConcept ) ) ( ( ( ',' )=>otherlv_4= ',' ) ( ( (lv_singleValue_5_0= ruleValueWithIdAndConcept ) ) | ( (lv_pairs_6_0= ruleKeyValuePair ) ) ) )* )
                    {
                    // InternalKim.g:14663:3: ( ( (lv_singleValue_3_0= ruleValueWithIdAndConcept ) ) ( ( ( ',' )=>otherlv_4= ',' ) ( ( (lv_singleValue_5_0= ruleValueWithIdAndConcept ) ) | ( (lv_pairs_6_0= ruleKeyValuePair ) ) ) )* )
                    // InternalKim.g:14664:4: ( (lv_singleValue_3_0= ruleValueWithIdAndConcept ) ) ( ( ( ',' )=>otherlv_4= ',' ) ( ( (lv_singleValue_5_0= ruleValueWithIdAndConcept ) ) | ( (lv_pairs_6_0= ruleKeyValuePair ) ) ) )*
                    {
                    // InternalKim.g:14664:4: ( (lv_singleValue_3_0= ruleValueWithIdAndConcept ) )
                    // InternalKim.g:14665:5: (lv_singleValue_3_0= ruleValueWithIdAndConcept )
                    {
                    // InternalKim.g:14665:5: (lv_singleValue_3_0= ruleValueWithIdAndConcept )
                    // InternalKim.g:14666:6: lv_singleValue_3_0= ruleValueWithIdAndConcept
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getParameterListAccess().getSingleValueValueWithIdAndConceptParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_34);
                    lv_singleValue_3_0=ruleValueWithIdAndConcept();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getParameterListRule());
                      						}
                      						add(
                      							current,
                      							"singleValue",
                      							lv_singleValue_3_0,
                      							"org.integratedmodelling.kim.Kim.ValueWithIdAndConcept");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:14683:4: ( ( ( ',' )=>otherlv_4= ',' ) ( ( (lv_singleValue_5_0= ruleValueWithIdAndConcept ) ) | ( (lv_pairs_6_0= ruleKeyValuePair ) ) ) )*
                    loop312:
                    do {
                        int alt312=2;
                        int LA312_0 = input.LA(1);

                        if ( (LA312_0==27) ) {
                            alt312=1;
                        }


                        switch (alt312) {
                    	case 1 :
                    	    // InternalKim.g:14684:5: ( ( ',' )=>otherlv_4= ',' ) ( ( (lv_singleValue_5_0= ruleValueWithIdAndConcept ) ) | ( (lv_pairs_6_0= ruleKeyValuePair ) ) )
                    	    {
                    	    // InternalKim.g:14684:5: ( ( ',' )=>otherlv_4= ',' )
                    	    // InternalKim.g:14685:6: ( ',' )=>otherlv_4= ','
                    	    {
                    	    otherlv_4=(Token)match(input,27,FOLLOW_166); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_4, grammarAccess.getParameterListAccess().getCommaKeyword_1_1_0());
                    	      					
                    	    }

                    	    }

                    	    // InternalKim.g:14691:5: ( ( (lv_singleValue_5_0= ruleValueWithIdAndConcept ) ) | ( (lv_pairs_6_0= ruleKeyValuePair ) ) )
                    	    int alt311=2;
                    	    alt311 = dfa311.predict(input);
                    	    switch (alt311) {
                    	        case 1 :
                    	            // InternalKim.g:14692:6: ( (lv_singleValue_5_0= ruleValueWithIdAndConcept ) )
                    	            {
                    	            // InternalKim.g:14692:6: ( (lv_singleValue_5_0= ruleValueWithIdAndConcept ) )
                    	            // InternalKim.g:14693:7: (lv_singleValue_5_0= ruleValueWithIdAndConcept )
                    	            {
                    	            // InternalKim.g:14693:7: (lv_singleValue_5_0= ruleValueWithIdAndConcept )
                    	            // InternalKim.g:14694:8: lv_singleValue_5_0= ruleValueWithIdAndConcept
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              								newCompositeNode(grammarAccess.getParameterListAccess().getSingleValueValueWithIdAndConceptParserRuleCall_1_1_1_0_0());
                    	              							
                    	            }
                    	            pushFollow(FOLLOW_34);
                    	            lv_singleValue_5_0=ruleValueWithIdAndConcept();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              								if (current==null) {
                    	              									current = createModelElementForParent(grammarAccess.getParameterListRule());
                    	              								}
                    	              								add(
                    	              									current,
                    	              									"singleValue",
                    	              									lv_singleValue_5_0,
                    	              									"org.integratedmodelling.kim.Kim.ValueWithIdAndConcept");
                    	              								afterParserOrEnumRuleCall();
                    	              							
                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 2 :
                    	            // InternalKim.g:14712:6: ( (lv_pairs_6_0= ruleKeyValuePair ) )
                    	            {
                    	            // InternalKim.g:14712:6: ( (lv_pairs_6_0= ruleKeyValuePair ) )
                    	            // InternalKim.g:14713:7: (lv_pairs_6_0= ruleKeyValuePair )
                    	            {
                    	            // InternalKim.g:14713:7: (lv_pairs_6_0= ruleKeyValuePair )
                    	            // InternalKim.g:14714:8: lv_pairs_6_0= ruleKeyValuePair
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              								newCompositeNode(grammarAccess.getParameterListAccess().getPairsKeyValuePairParserRuleCall_1_1_1_1_0());
                    	              							
                    	            }
                    	            pushFollow(FOLLOW_34);
                    	            lv_pairs_6_0=ruleKeyValuePair();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              								if (current==null) {
                    	              									current = createModelElementForParent(grammarAccess.getParameterListRule());
                    	              								}
                    	              								add(
                    	              									current,
                    	              									"pairs",
                    	              									lv_pairs_6_0,
                    	              									"org.integratedmodelling.kim.Kim.KeyValuePair");
                    	              								afterParserOrEnumRuleCall();
                    	              							
                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop312;
                        }
                    } while (true);


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleParameterList"


    // $ANTLR start "entryRuleValueWithIdAndConcept"
    // InternalKim.g:14738:1: entryRuleValueWithIdAndConcept returns [EObject current=null] : iv_ruleValueWithIdAndConcept= ruleValueWithIdAndConcept EOF ;
    public final EObject entryRuleValueWithIdAndConcept() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValueWithIdAndConcept = null;


        try {
            // InternalKim.g:14738:62: (iv_ruleValueWithIdAndConcept= ruleValueWithIdAndConcept EOF )
            // InternalKim.g:14739:2: iv_ruleValueWithIdAndConcept= ruleValueWithIdAndConcept EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValueWithIdAndConceptRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleValueWithIdAndConcept=ruleValueWithIdAndConcept();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValueWithIdAndConcept; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValueWithIdAndConcept"


    // $ANTLR start "ruleValueWithIdAndConcept"
    // InternalKim.g:14745:1: ruleValueWithIdAndConcept returns [EObject current=null] : ( ( (lv_list_0_0= ruleList ) ) | ( (lv_map_1_0= ruleMap ) ) | ( (lv_concept_2_0= ruleSimpleObservableSemantics ) ) | ( (lv_function_3_0= ruleFunction ) ) | ( (lv_date_4_0= ruleDate ) ) | ( (lv_literal_5_0= ruleLiteral ) ) | ( (lv_expr_6_0= RULE_EXPR ) ) | ( ( (lv_id_7_1= rulePathName | lv_id_7_2= RULE_LOWERCASE_ID | lv_id_7_3= RULE_UPPERCASE_ID | lv_id_7_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_table_8_0= ruleLookupTable ) ) | ( (lv_quantity_9_0= ruleQuantity ) ) | ( ( (lv_op_10_0= ruleREL_OPERATOR ) ) ( (lv_expression_11_0= ruleNumber ) ) ) | ( (lv_null_12_0= 'unknown' ) ) ) ;
    public final EObject ruleValueWithIdAndConcept() throws RecognitionException {
        EObject current = null;

        Token lv_expr_6_0=null;
        Token lv_id_7_2=null;
        Token lv_id_7_3=null;
        Token lv_id_7_4=null;
        Token lv_null_12_0=null;
        EObject lv_list_0_0 = null;

        EObject lv_map_1_0 = null;

        EObject lv_concept_2_0 = null;

        EObject lv_function_3_0 = null;

        EObject lv_date_4_0 = null;

        EObject lv_literal_5_0 = null;

        AntlrDatatypeRuleToken lv_id_7_1 = null;

        EObject lv_table_8_0 = null;

        EObject lv_quantity_9_0 = null;

        EObject lv_op_10_0 = null;

        EObject lv_expression_11_0 = null;



        	enterRule();

        try {
            // InternalKim.g:14751:2: ( ( ( (lv_list_0_0= ruleList ) ) | ( (lv_map_1_0= ruleMap ) ) | ( (lv_concept_2_0= ruleSimpleObservableSemantics ) ) | ( (lv_function_3_0= ruleFunction ) ) | ( (lv_date_4_0= ruleDate ) ) | ( (lv_literal_5_0= ruleLiteral ) ) | ( (lv_expr_6_0= RULE_EXPR ) ) | ( ( (lv_id_7_1= rulePathName | lv_id_7_2= RULE_LOWERCASE_ID | lv_id_7_3= RULE_UPPERCASE_ID | lv_id_7_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_table_8_0= ruleLookupTable ) ) | ( (lv_quantity_9_0= ruleQuantity ) ) | ( ( (lv_op_10_0= ruleREL_OPERATOR ) ) ( (lv_expression_11_0= ruleNumber ) ) ) | ( (lv_null_12_0= 'unknown' ) ) ) )
            // InternalKim.g:14752:2: ( ( (lv_list_0_0= ruleList ) ) | ( (lv_map_1_0= ruleMap ) ) | ( (lv_concept_2_0= ruleSimpleObservableSemantics ) ) | ( (lv_function_3_0= ruleFunction ) ) | ( (lv_date_4_0= ruleDate ) ) | ( (lv_literal_5_0= ruleLiteral ) ) | ( (lv_expr_6_0= RULE_EXPR ) ) | ( ( (lv_id_7_1= rulePathName | lv_id_7_2= RULE_LOWERCASE_ID | lv_id_7_3= RULE_UPPERCASE_ID | lv_id_7_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_table_8_0= ruleLookupTable ) ) | ( (lv_quantity_9_0= ruleQuantity ) ) | ( ( (lv_op_10_0= ruleREL_OPERATOR ) ) ( (lv_expression_11_0= ruleNumber ) ) ) | ( (lv_null_12_0= 'unknown' ) ) )
            {
            // InternalKim.g:14752:2: ( ( (lv_list_0_0= ruleList ) ) | ( (lv_map_1_0= ruleMap ) ) | ( (lv_concept_2_0= ruleSimpleObservableSemantics ) ) | ( (lv_function_3_0= ruleFunction ) ) | ( (lv_date_4_0= ruleDate ) ) | ( (lv_literal_5_0= ruleLiteral ) ) | ( (lv_expr_6_0= RULE_EXPR ) ) | ( ( (lv_id_7_1= rulePathName | lv_id_7_2= RULE_LOWERCASE_ID | lv_id_7_3= RULE_UPPERCASE_ID | lv_id_7_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_table_8_0= ruleLookupTable ) ) | ( (lv_quantity_9_0= ruleQuantity ) ) | ( ( (lv_op_10_0= ruleREL_OPERATOR ) ) ( (lv_expression_11_0= ruleNumber ) ) ) | ( (lv_null_12_0= 'unknown' ) ) )
            int alt315=12;
            alt315 = dfa315.predict(input);
            switch (alt315) {
                case 1 :
                    // InternalKim.g:14753:3: ( (lv_list_0_0= ruleList ) )
                    {
                    // InternalKim.g:14753:3: ( (lv_list_0_0= ruleList ) )
                    // InternalKim.g:14754:4: (lv_list_0_0= ruleList )
                    {
                    // InternalKim.g:14754:4: (lv_list_0_0= ruleList )
                    // InternalKim.g:14755:5: lv_list_0_0= ruleList
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getListListParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_list_0_0=ruleList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueWithIdAndConceptRule());
                      					}
                      					set(
                      						current,
                      						"list",
                      						lv_list_0_0,
                      						"org.integratedmodelling.kim.Kim.List");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:14773:3: ( (lv_map_1_0= ruleMap ) )
                    {
                    // InternalKim.g:14773:3: ( (lv_map_1_0= ruleMap ) )
                    // InternalKim.g:14774:4: (lv_map_1_0= ruleMap )
                    {
                    // InternalKim.g:14774:4: (lv_map_1_0= ruleMap )
                    // InternalKim.g:14775:5: lv_map_1_0= ruleMap
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getMapMapParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_map_1_0=ruleMap();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueWithIdAndConceptRule());
                      					}
                      					set(
                      						current,
                      						"map",
                      						lv_map_1_0,
                      						"org.integratedmodelling.kim.Kim.Map");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:14793:3: ( (lv_concept_2_0= ruleSimpleObservableSemantics ) )
                    {
                    // InternalKim.g:14793:3: ( (lv_concept_2_0= ruleSimpleObservableSemantics ) )
                    // InternalKim.g:14794:4: (lv_concept_2_0= ruleSimpleObservableSemantics )
                    {
                    // InternalKim.g:14794:4: (lv_concept_2_0= ruleSimpleObservableSemantics )
                    // InternalKim.g:14795:5: lv_concept_2_0= ruleSimpleObservableSemantics
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getConceptSimpleObservableSemanticsParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_2_0=ruleSimpleObservableSemantics();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueWithIdAndConceptRule());
                      					}
                      					set(
                      						current,
                      						"concept",
                      						lv_concept_2_0,
                      						"org.integratedmodelling.kim.Kim.SimpleObservableSemantics");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:14813:3: ( (lv_function_3_0= ruleFunction ) )
                    {
                    // InternalKim.g:14813:3: ( (lv_function_3_0= ruleFunction ) )
                    // InternalKim.g:14814:4: (lv_function_3_0= ruleFunction )
                    {
                    // InternalKim.g:14814:4: (lv_function_3_0= ruleFunction )
                    // InternalKim.g:14815:5: lv_function_3_0= ruleFunction
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getFunctionFunctionParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_function_3_0=ruleFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueWithIdAndConceptRule());
                      					}
                      					set(
                      						current,
                      						"function",
                      						lv_function_3_0,
                      						"org.integratedmodelling.kim.Kim.Function");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:14833:3: ( (lv_date_4_0= ruleDate ) )
                    {
                    // InternalKim.g:14833:3: ( (lv_date_4_0= ruleDate ) )
                    // InternalKim.g:14834:4: (lv_date_4_0= ruleDate )
                    {
                    // InternalKim.g:14834:4: (lv_date_4_0= ruleDate )
                    // InternalKim.g:14835:5: lv_date_4_0= ruleDate
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getDateDateParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_date_4_0=ruleDate();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueWithIdAndConceptRule());
                      					}
                      					set(
                      						current,
                      						"date",
                      						lv_date_4_0,
                      						"org.integratedmodelling.kim.Kim.Date");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:14853:3: ( (lv_literal_5_0= ruleLiteral ) )
                    {
                    // InternalKim.g:14853:3: ( (lv_literal_5_0= ruleLiteral ) )
                    // InternalKim.g:14854:4: (lv_literal_5_0= ruleLiteral )
                    {
                    // InternalKim.g:14854:4: (lv_literal_5_0= ruleLiteral )
                    // InternalKim.g:14855:5: lv_literal_5_0= ruleLiteral
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getLiteralLiteralParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_literal_5_0=ruleLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueWithIdAndConceptRule());
                      					}
                      					set(
                      						current,
                      						"literal",
                      						lv_literal_5_0,
                      						"org.integratedmodelling.kim.Kim.Literal");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalKim.g:14873:3: ( (lv_expr_6_0= RULE_EXPR ) )
                    {
                    // InternalKim.g:14873:3: ( (lv_expr_6_0= RULE_EXPR ) )
                    // InternalKim.g:14874:4: (lv_expr_6_0= RULE_EXPR )
                    {
                    // InternalKim.g:14874:4: (lv_expr_6_0= RULE_EXPR )
                    // InternalKim.g:14875:5: lv_expr_6_0= RULE_EXPR
                    {
                    lv_expr_6_0=(Token)match(input,RULE_EXPR,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_expr_6_0, grammarAccess.getValueWithIdAndConceptAccess().getExprEXPRTerminalRuleCall_6_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getValueWithIdAndConceptRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"expr",
                      						lv_expr_6_0,
                      						"org.integratedmodelling.kim.Kim.EXPR");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalKim.g:14892:3: ( ( (lv_id_7_1= rulePathName | lv_id_7_2= RULE_LOWERCASE_ID | lv_id_7_3= RULE_UPPERCASE_ID | lv_id_7_4= RULE_CAMELCASE_ID ) ) )
                    {
                    // InternalKim.g:14892:3: ( ( (lv_id_7_1= rulePathName | lv_id_7_2= RULE_LOWERCASE_ID | lv_id_7_3= RULE_UPPERCASE_ID | lv_id_7_4= RULE_CAMELCASE_ID ) ) )
                    // InternalKim.g:14893:4: ( (lv_id_7_1= rulePathName | lv_id_7_2= RULE_LOWERCASE_ID | lv_id_7_3= RULE_UPPERCASE_ID | lv_id_7_4= RULE_CAMELCASE_ID ) )
                    {
                    // InternalKim.g:14893:4: ( (lv_id_7_1= rulePathName | lv_id_7_2= RULE_LOWERCASE_ID | lv_id_7_3= RULE_UPPERCASE_ID | lv_id_7_4= RULE_CAMELCASE_ID ) )
                    // InternalKim.g:14894:5: (lv_id_7_1= rulePathName | lv_id_7_2= RULE_LOWERCASE_ID | lv_id_7_3= RULE_UPPERCASE_ID | lv_id_7_4= RULE_CAMELCASE_ID )
                    {
                    // InternalKim.g:14894:5: (lv_id_7_1= rulePathName | lv_id_7_2= RULE_LOWERCASE_ID | lv_id_7_3= RULE_UPPERCASE_ID | lv_id_7_4= RULE_CAMELCASE_ID )
                    int alt314=4;
                    switch ( input.LA(1) ) {
                    case RULE_LOWERCASE_ID:
                        {
                        int LA314_1 = input.LA(2);

                        if ( (synpred566_InternalKim()) ) {
                            alt314=1;
                        }
                        else if ( (synpred567_InternalKim()) ) {
                            alt314=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 314, 1, input);

                            throw nvae;
                        }
                        }
                        break;
                    case RULE_UPPERCASE_ID:
                        {
                        int LA314_2 = input.LA(2);

                        if ( (synpred566_InternalKim()) ) {
                            alt314=1;
                        }
                        else if ( (synpred568_InternalKim()) ) {
                            alt314=3;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 314, 2, input);

                            throw nvae;
                        }
                        }
                        break;
                    case RULE_LOWERCASE_DASHID:
                        {
                        alt314=1;
                        }
                        break;
                    case RULE_CAMELCASE_ID:
                        {
                        alt314=4;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 314, 0, input);

                        throw nvae;
                    }

                    switch (alt314) {
                        case 1 :
                            // InternalKim.g:14895:6: lv_id_7_1= rulePathName
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getIdPathNameParserRuleCall_7_0_0());
                              					
                            }
                            pushFollow(FOLLOW_2);
                            lv_id_7_1=rulePathName();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getValueWithIdAndConceptRule());
                              						}
                              						set(
                              							current,
                              							"id",
                              							lv_id_7_1,
                              							"org.integratedmodelling.kim.Kim.PathName");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:14911:6: lv_id_7_2= RULE_LOWERCASE_ID
                            {
                            lv_id_7_2=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_7_2, grammarAccess.getValueWithIdAndConceptAccess().getIdLOWERCASE_IDTerminalRuleCall_7_0_1());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getValueWithIdAndConceptRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_7_2,
                              							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 3 :
                            // InternalKim.g:14926:6: lv_id_7_3= RULE_UPPERCASE_ID
                            {
                            lv_id_7_3=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_7_3, grammarAccess.getValueWithIdAndConceptAccess().getIdUPPERCASE_IDTerminalRuleCall_7_0_2());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getValueWithIdAndConceptRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_7_3,
                              							"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 4 :
                            // InternalKim.g:14941:6: lv_id_7_4= RULE_CAMELCASE_ID
                            {
                            lv_id_7_4=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_7_4, grammarAccess.getValueWithIdAndConceptAccess().getIdCAMELCASE_IDTerminalRuleCall_7_0_3());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getValueWithIdAndConceptRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_7_4,
                              							"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 9 :
                    // InternalKim.g:14959:3: ( (lv_table_8_0= ruleLookupTable ) )
                    {
                    // InternalKim.g:14959:3: ( (lv_table_8_0= ruleLookupTable ) )
                    // InternalKim.g:14960:4: (lv_table_8_0= ruleLookupTable )
                    {
                    // InternalKim.g:14960:4: (lv_table_8_0= ruleLookupTable )
                    // InternalKim.g:14961:5: lv_table_8_0= ruleLookupTable
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getTableLookupTableParserRuleCall_8_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_table_8_0=ruleLookupTable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueWithIdAndConceptRule());
                      					}
                      					set(
                      						current,
                      						"table",
                      						lv_table_8_0,
                      						"org.integratedmodelling.kim.Kim.LookupTable");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 10 :
                    // InternalKim.g:14979:3: ( (lv_quantity_9_0= ruleQuantity ) )
                    {
                    // InternalKim.g:14979:3: ( (lv_quantity_9_0= ruleQuantity ) )
                    // InternalKim.g:14980:4: (lv_quantity_9_0= ruleQuantity )
                    {
                    // InternalKim.g:14980:4: (lv_quantity_9_0= ruleQuantity )
                    // InternalKim.g:14981:5: lv_quantity_9_0= ruleQuantity
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getQuantityQuantityParserRuleCall_9_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_quantity_9_0=ruleQuantity();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueWithIdAndConceptRule());
                      					}
                      					set(
                      						current,
                      						"quantity",
                      						lv_quantity_9_0,
                      						"org.integratedmodelling.kim.Kim.Quantity");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 11 :
                    // InternalKim.g:14999:3: ( ( (lv_op_10_0= ruleREL_OPERATOR ) ) ( (lv_expression_11_0= ruleNumber ) ) )
                    {
                    // InternalKim.g:14999:3: ( ( (lv_op_10_0= ruleREL_OPERATOR ) ) ( (lv_expression_11_0= ruleNumber ) ) )
                    // InternalKim.g:15000:4: ( (lv_op_10_0= ruleREL_OPERATOR ) ) ( (lv_expression_11_0= ruleNumber ) )
                    {
                    // InternalKim.g:15000:4: ( (lv_op_10_0= ruleREL_OPERATOR ) )
                    // InternalKim.g:15001:5: (lv_op_10_0= ruleREL_OPERATOR )
                    {
                    // InternalKim.g:15001:5: (lv_op_10_0= ruleREL_OPERATOR )
                    // InternalKim.g:15002:6: lv_op_10_0= ruleREL_OPERATOR
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getOpREL_OPERATORParserRuleCall_10_0_0());
                      					
                    }
                    pushFollow(FOLLOW_38);
                    lv_op_10_0=ruleREL_OPERATOR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getValueWithIdAndConceptRule());
                      						}
                      						set(
                      							current,
                      							"op",
                      							lv_op_10_0,
                      							"org.integratedmodelling.kim.Kim.REL_OPERATOR");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:15019:4: ( (lv_expression_11_0= ruleNumber ) )
                    // InternalKim.g:15020:5: (lv_expression_11_0= ruleNumber )
                    {
                    // InternalKim.g:15020:5: (lv_expression_11_0= ruleNumber )
                    // InternalKim.g:15021:6: lv_expression_11_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getExpressionNumberParserRuleCall_10_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_11_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getValueWithIdAndConceptRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_11_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 12 :
                    // InternalKim.g:15040:3: ( (lv_null_12_0= 'unknown' ) )
                    {
                    // InternalKim.g:15040:3: ( (lv_null_12_0= 'unknown' ) )
                    // InternalKim.g:15041:4: (lv_null_12_0= 'unknown' )
                    {
                    // InternalKim.g:15041:4: (lv_null_12_0= 'unknown' )
                    // InternalKim.g:15042:5: lv_null_12_0= 'unknown'
                    {
                    lv_null_12_0=(Token)match(input,49,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_null_12_0, grammarAccess.getValueWithIdAndConceptAccess().getNullUnknownKeyword_11_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getValueWithIdAndConceptRule());
                      					}
                      					setWithLastConsumed(current, "null", true, "unknown");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValueWithIdAndConcept"


    // $ANTLR start "entryRuleValue"
    // InternalKim.g:15058:1: entryRuleValue returns [EObject current=null] : iv_ruleValue= ruleValue EOF ;
    public final EObject entryRuleValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValue = null;


        try {
            // InternalKim.g:15058:46: (iv_ruleValue= ruleValue EOF )
            // InternalKim.g:15059:2: iv_ruleValue= ruleValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleValue=ruleValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValue; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValue"


    // $ANTLR start "ruleValue"
    // InternalKim.g:15065:1: ruleValue returns [EObject current=null] : ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( (lv_language_4_0= RULE_UPPERCASE_ID ) ) )? ) | ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_6_0= ruleList ) ) | ( (lv_table_7_0= ruleLookupTable ) ) | ( (lv_quantity_8_0= ruleQuantity ) ) | ( (lv_date_9_0= ruleDate ) ) | ( (lv_map_10_0= ruleMap ) ) | ( (lv_null_11_0= 'unknown' ) ) ) ;
    public final EObject ruleValue() throws RecognitionException {
        EObject current = null;

        Token lv_expr_2_0=null;
        Token otherlv_3=null;
        Token lv_language_4_0=null;
        Token lv_id_5_1=null;
        Token lv_id_5_2=null;
        Token lv_id_5_3=null;
        Token lv_null_11_0=null;
        EObject lv_literal_0_0 = null;

        EObject lv_function_1_0 = null;

        EObject lv_list_6_0 = null;

        EObject lv_table_7_0 = null;

        EObject lv_quantity_8_0 = null;

        EObject lv_date_9_0 = null;

        EObject lv_map_10_0 = null;



        	enterRule();

        try {
            // InternalKim.g:15071:2: ( ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( (lv_language_4_0= RULE_UPPERCASE_ID ) ) )? ) | ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_6_0= ruleList ) ) | ( (lv_table_7_0= ruleLookupTable ) ) | ( (lv_quantity_8_0= ruleQuantity ) ) | ( (lv_date_9_0= ruleDate ) ) | ( (lv_map_10_0= ruleMap ) ) | ( (lv_null_11_0= 'unknown' ) ) ) )
            // InternalKim.g:15072:2: ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( (lv_language_4_0= RULE_UPPERCASE_ID ) ) )? ) | ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_6_0= ruleList ) ) | ( (lv_table_7_0= ruleLookupTable ) ) | ( (lv_quantity_8_0= ruleQuantity ) ) | ( (lv_date_9_0= ruleDate ) ) | ( (lv_map_10_0= ruleMap ) ) | ( (lv_null_11_0= 'unknown' ) ) )
            {
            // InternalKim.g:15072:2: ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( (lv_language_4_0= RULE_UPPERCASE_ID ) ) )? ) | ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_6_0= ruleList ) ) | ( (lv_table_7_0= ruleLookupTable ) ) | ( (lv_quantity_8_0= ruleQuantity ) ) | ( (lv_date_9_0= ruleDate ) ) | ( (lv_map_10_0= ruleMap ) ) | ( (lv_null_11_0= 'unknown' ) ) )
            int alt318=10;
            alt318 = dfa318.predict(input);
            switch (alt318) {
                case 1 :
                    // InternalKim.g:15073:3: ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) )
                    {
                    // InternalKim.g:15073:3: ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) )
                    // InternalKim.g:15074:4: (lv_literal_0_0= ruleLiteralOrIdOrComma )
                    {
                    // InternalKim.g:15074:4: (lv_literal_0_0= ruleLiteralOrIdOrComma )
                    // InternalKim.g:15075:5: lv_literal_0_0= ruleLiteralOrIdOrComma
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueAccess().getLiteralLiteralOrIdOrCommaParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_literal_0_0=ruleLiteralOrIdOrComma();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueRule());
                      					}
                      					set(
                      						current,
                      						"literal",
                      						lv_literal_0_0,
                      						"org.integratedmodelling.kim.Kim.LiteralOrIdOrComma");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:15093:3: ( (lv_function_1_0= ruleFunction ) )
                    {
                    // InternalKim.g:15093:3: ( (lv_function_1_0= ruleFunction ) )
                    // InternalKim.g:15094:4: (lv_function_1_0= ruleFunction )
                    {
                    // InternalKim.g:15094:4: (lv_function_1_0= ruleFunction )
                    // InternalKim.g:15095:5: lv_function_1_0= ruleFunction
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueAccess().getFunctionFunctionParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_function_1_0=ruleFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueRule());
                      					}
                      					set(
                      						current,
                      						"function",
                      						lv_function_1_0,
                      						"org.integratedmodelling.kim.Kim.Function");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:15113:3: ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( (lv_language_4_0= RULE_UPPERCASE_ID ) ) )? )
                    {
                    // InternalKim.g:15113:3: ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( (lv_language_4_0= RULE_UPPERCASE_ID ) ) )? )
                    // InternalKim.g:15114:4: ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( (lv_language_4_0= RULE_UPPERCASE_ID ) ) )?
                    {
                    // InternalKim.g:15114:4: ( (lv_expr_2_0= RULE_EXPR ) )
                    // InternalKim.g:15115:5: (lv_expr_2_0= RULE_EXPR )
                    {
                    // InternalKim.g:15115:5: (lv_expr_2_0= RULE_EXPR )
                    // InternalKim.g:15116:6: lv_expr_2_0= RULE_EXPR
                    {
                    lv_expr_2_0=(Token)match(input,RULE_EXPR,FOLLOW_58); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_expr_2_0, grammarAccess.getValueAccess().getExprEXPRTerminalRuleCall_2_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getValueRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"expr",
                      							lv_expr_2_0,
                      							"org.integratedmodelling.kim.Kim.EXPR");
                      					
                    }

                    }


                    }

                    // InternalKim.g:15132:4: (otherlv_3= 'in' ( (lv_language_4_0= RULE_UPPERCASE_ID ) ) )?
                    int alt316=2;
                    int LA316_0 = input.LA(1);

                    if ( (LA316_0==48) ) {
                        alt316=1;
                    }
                    switch (alt316) {
                        case 1 :
                            // InternalKim.g:15133:5: otherlv_3= 'in' ( (lv_language_4_0= RULE_UPPERCASE_ID ) )
                            {
                            otherlv_3=(Token)match(input,48,FOLLOW_69); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_3, grammarAccess.getValueAccess().getInKeyword_2_1_0());
                              				
                            }
                            // InternalKim.g:15137:5: ( (lv_language_4_0= RULE_UPPERCASE_ID ) )
                            // InternalKim.g:15138:6: (lv_language_4_0= RULE_UPPERCASE_ID )
                            {
                            // InternalKim.g:15138:6: (lv_language_4_0= RULE_UPPERCASE_ID )
                            // InternalKim.g:15139:7: lv_language_4_0= RULE_UPPERCASE_ID
                            {
                            lv_language_4_0=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_language_4_0, grammarAccess.getValueAccess().getLanguageUPPERCASE_IDTerminalRuleCall_2_1_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getValueRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"language",
                              								lv_language_4_0,
                              								"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:15158:3: ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) )
                    {
                    // InternalKim.g:15158:3: ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) )
                    // InternalKim.g:15159:4: ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) )
                    {
                    // InternalKim.g:15159:4: ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) )
                    // InternalKim.g:15160:5: (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID )
                    {
                    // InternalKim.g:15160:5: (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID )
                    int alt317=3;
                    switch ( input.LA(1) ) {
                    case RULE_LOWERCASE_ID:
                        {
                        alt317=1;
                        }
                        break;
                    case RULE_UPPERCASE_ID:
                        {
                        alt317=2;
                        }
                        break;
                    case RULE_CAMELCASE_ID:
                        {
                        alt317=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 317, 0, input);

                        throw nvae;
                    }

                    switch (alt317) {
                        case 1 :
                            // InternalKim.g:15161:6: lv_id_5_1= RULE_LOWERCASE_ID
                            {
                            lv_id_5_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_5_1, grammarAccess.getValueAccess().getIdLOWERCASE_IDTerminalRuleCall_3_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getValueRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_5_1,
                              							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:15176:6: lv_id_5_2= RULE_UPPERCASE_ID
                            {
                            lv_id_5_2=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_5_2, grammarAccess.getValueAccess().getIdUPPERCASE_IDTerminalRuleCall_3_0_1());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getValueRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_5_2,
                              							"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 3 :
                            // InternalKim.g:15191:6: lv_id_5_3= RULE_CAMELCASE_ID
                            {
                            lv_id_5_3=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_5_3, grammarAccess.getValueAccess().getIdCAMELCASE_IDTerminalRuleCall_3_0_2());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getValueRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_5_3,
                              							"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:15209:3: ( (lv_list_6_0= ruleList ) )
                    {
                    // InternalKim.g:15209:3: ( (lv_list_6_0= ruleList ) )
                    // InternalKim.g:15210:4: (lv_list_6_0= ruleList )
                    {
                    // InternalKim.g:15210:4: (lv_list_6_0= ruleList )
                    // InternalKim.g:15211:5: lv_list_6_0= ruleList
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueAccess().getListListParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_list_6_0=ruleList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueRule());
                      					}
                      					set(
                      						current,
                      						"list",
                      						lv_list_6_0,
                      						"org.integratedmodelling.kim.Kim.List");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:15229:3: ( (lv_table_7_0= ruleLookupTable ) )
                    {
                    // InternalKim.g:15229:3: ( (lv_table_7_0= ruleLookupTable ) )
                    // InternalKim.g:15230:4: (lv_table_7_0= ruleLookupTable )
                    {
                    // InternalKim.g:15230:4: (lv_table_7_0= ruleLookupTable )
                    // InternalKim.g:15231:5: lv_table_7_0= ruleLookupTable
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueAccess().getTableLookupTableParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_table_7_0=ruleLookupTable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueRule());
                      					}
                      					set(
                      						current,
                      						"table",
                      						lv_table_7_0,
                      						"org.integratedmodelling.kim.Kim.LookupTable");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalKim.g:15249:3: ( (lv_quantity_8_0= ruleQuantity ) )
                    {
                    // InternalKim.g:15249:3: ( (lv_quantity_8_0= ruleQuantity ) )
                    // InternalKim.g:15250:4: (lv_quantity_8_0= ruleQuantity )
                    {
                    // InternalKim.g:15250:4: (lv_quantity_8_0= ruleQuantity )
                    // InternalKim.g:15251:5: lv_quantity_8_0= ruleQuantity
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueAccess().getQuantityQuantityParserRuleCall_6_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_quantity_8_0=ruleQuantity();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueRule());
                      					}
                      					set(
                      						current,
                      						"quantity",
                      						lv_quantity_8_0,
                      						"org.integratedmodelling.kim.Kim.Quantity");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalKim.g:15269:3: ( (lv_date_9_0= ruleDate ) )
                    {
                    // InternalKim.g:15269:3: ( (lv_date_9_0= ruleDate ) )
                    // InternalKim.g:15270:4: (lv_date_9_0= ruleDate )
                    {
                    // InternalKim.g:15270:4: (lv_date_9_0= ruleDate )
                    // InternalKim.g:15271:5: lv_date_9_0= ruleDate
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueAccess().getDateDateParserRuleCall_7_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_date_9_0=ruleDate();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueRule());
                      					}
                      					set(
                      						current,
                      						"date",
                      						lv_date_9_0,
                      						"org.integratedmodelling.kim.Kim.Date");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 9 :
                    // InternalKim.g:15289:3: ( (lv_map_10_0= ruleMap ) )
                    {
                    // InternalKim.g:15289:3: ( (lv_map_10_0= ruleMap ) )
                    // InternalKim.g:15290:4: (lv_map_10_0= ruleMap )
                    {
                    // InternalKim.g:15290:4: (lv_map_10_0= ruleMap )
                    // InternalKim.g:15291:5: lv_map_10_0= ruleMap
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueAccess().getMapMapParserRuleCall_8_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_map_10_0=ruleMap();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueRule());
                      					}
                      					set(
                      						current,
                      						"map",
                      						lv_map_10_0,
                      						"org.integratedmodelling.kim.Kim.Map");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 10 :
                    // InternalKim.g:15309:3: ( (lv_null_11_0= 'unknown' ) )
                    {
                    // InternalKim.g:15309:3: ( (lv_null_11_0= 'unknown' ) )
                    // InternalKim.g:15310:4: (lv_null_11_0= 'unknown' )
                    {
                    // InternalKim.g:15310:4: (lv_null_11_0= 'unknown' )
                    // InternalKim.g:15311:5: lv_null_11_0= 'unknown'
                    {
                    lv_null_11_0=(Token)match(input,49,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_null_11_0, grammarAccess.getValueAccess().getNullUnknownKeyword_9_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getValueRule());
                      					}
                      					setWithLastConsumed(current, "null", true, "unknown");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValue"


    // $ANTLR start "entryRuleLiteralValueWithConcept"
    // InternalKim.g:15327:1: entryRuleLiteralValueWithConcept returns [EObject current=null] : iv_ruleLiteralValueWithConcept= ruleLiteralValueWithConcept EOF ;
    public final EObject entryRuleLiteralValueWithConcept() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteralValueWithConcept = null;


        try {
            // InternalKim.g:15327:64: (iv_ruleLiteralValueWithConcept= ruleLiteralValueWithConcept EOF )
            // InternalKim.g:15328:2: iv_ruleLiteralValueWithConcept= ruleLiteralValueWithConcept EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralValueWithConceptRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLiteralValueWithConcept=ruleLiteralValueWithConcept();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLiteralValueWithConcept; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLiteralValueWithConcept"


    // $ANTLR start "ruleLiteralValueWithConcept"
    // InternalKim.g:15334:1: ruleLiteralValueWithConcept returns [EObject current=null] : ( ( (lv_literal_0_0= ruleLiteral ) ) | ( (lv_concept_1_0= ruleConceptDeclaration ) ) | ( (lv_function_2_0= ruleFunction ) ) | ( (lv_expr_3_0= RULE_EXPR ) ) | ( (lv_quantity_4_0= ruleQuantity ) ) | ( (lv_date_5_0= ruleDate ) ) | ( ( (lv_id_6_1= RULE_LOWERCASE_ID | lv_id_6_2= RULE_UPPERCASE_ID | lv_id_6_3= RULE_CAMELCASE_ID ) ) ) ) ;
    public final EObject ruleLiteralValueWithConcept() throws RecognitionException {
        EObject current = null;

        Token lv_expr_3_0=null;
        Token lv_id_6_1=null;
        Token lv_id_6_2=null;
        Token lv_id_6_3=null;
        EObject lv_literal_0_0 = null;

        EObject lv_concept_1_0 = null;

        EObject lv_function_2_0 = null;

        EObject lv_quantity_4_0 = null;

        EObject lv_date_5_0 = null;



        	enterRule();

        try {
            // InternalKim.g:15340:2: ( ( ( (lv_literal_0_0= ruleLiteral ) ) | ( (lv_concept_1_0= ruleConceptDeclaration ) ) | ( (lv_function_2_0= ruleFunction ) ) | ( (lv_expr_3_0= RULE_EXPR ) ) | ( (lv_quantity_4_0= ruleQuantity ) ) | ( (lv_date_5_0= ruleDate ) ) | ( ( (lv_id_6_1= RULE_LOWERCASE_ID | lv_id_6_2= RULE_UPPERCASE_ID | lv_id_6_3= RULE_CAMELCASE_ID ) ) ) ) )
            // InternalKim.g:15341:2: ( ( (lv_literal_0_0= ruleLiteral ) ) | ( (lv_concept_1_0= ruleConceptDeclaration ) ) | ( (lv_function_2_0= ruleFunction ) ) | ( (lv_expr_3_0= RULE_EXPR ) ) | ( (lv_quantity_4_0= ruleQuantity ) ) | ( (lv_date_5_0= ruleDate ) ) | ( ( (lv_id_6_1= RULE_LOWERCASE_ID | lv_id_6_2= RULE_UPPERCASE_ID | lv_id_6_3= RULE_CAMELCASE_ID ) ) ) )
            {
            // InternalKim.g:15341:2: ( ( (lv_literal_0_0= ruleLiteral ) ) | ( (lv_concept_1_0= ruleConceptDeclaration ) ) | ( (lv_function_2_0= ruleFunction ) ) | ( (lv_expr_3_0= RULE_EXPR ) ) | ( (lv_quantity_4_0= ruleQuantity ) ) | ( (lv_date_5_0= ruleDate ) ) | ( ( (lv_id_6_1= RULE_LOWERCASE_ID | lv_id_6_2= RULE_UPPERCASE_ID | lv_id_6_3= RULE_CAMELCASE_ID ) ) ) )
            int alt320=7;
            alt320 = dfa320.predict(input);
            switch (alt320) {
                case 1 :
                    // InternalKim.g:15342:3: ( (lv_literal_0_0= ruleLiteral ) )
                    {
                    // InternalKim.g:15342:3: ( (lv_literal_0_0= ruleLiteral ) )
                    // InternalKim.g:15343:4: (lv_literal_0_0= ruleLiteral )
                    {
                    // InternalKim.g:15343:4: (lv_literal_0_0= ruleLiteral )
                    // InternalKim.g:15344:5: lv_literal_0_0= ruleLiteral
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralValueWithConceptAccess().getLiteralLiteralParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_literal_0_0=ruleLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralValueWithConceptRule());
                      					}
                      					set(
                      						current,
                      						"literal",
                      						lv_literal_0_0,
                      						"org.integratedmodelling.kim.Kim.Literal");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:15362:3: ( (lv_concept_1_0= ruleConceptDeclaration ) )
                    {
                    // InternalKim.g:15362:3: ( (lv_concept_1_0= ruleConceptDeclaration ) )
                    // InternalKim.g:15363:4: (lv_concept_1_0= ruleConceptDeclaration )
                    {
                    // InternalKim.g:15363:4: (lv_concept_1_0= ruleConceptDeclaration )
                    // InternalKim.g:15364:5: lv_concept_1_0= ruleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralValueWithConceptAccess().getConceptConceptDeclarationParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_1_0=ruleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralValueWithConceptRule());
                      					}
                      					set(
                      						current,
                      						"concept",
                      						lv_concept_1_0,
                      						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:15382:3: ( (lv_function_2_0= ruleFunction ) )
                    {
                    // InternalKim.g:15382:3: ( (lv_function_2_0= ruleFunction ) )
                    // InternalKim.g:15383:4: (lv_function_2_0= ruleFunction )
                    {
                    // InternalKim.g:15383:4: (lv_function_2_0= ruleFunction )
                    // InternalKim.g:15384:5: lv_function_2_0= ruleFunction
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralValueWithConceptAccess().getFunctionFunctionParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_function_2_0=ruleFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralValueWithConceptRule());
                      					}
                      					set(
                      						current,
                      						"function",
                      						lv_function_2_0,
                      						"org.integratedmodelling.kim.Kim.Function");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:15402:3: ( (lv_expr_3_0= RULE_EXPR ) )
                    {
                    // InternalKim.g:15402:3: ( (lv_expr_3_0= RULE_EXPR ) )
                    // InternalKim.g:15403:4: (lv_expr_3_0= RULE_EXPR )
                    {
                    // InternalKim.g:15403:4: (lv_expr_3_0= RULE_EXPR )
                    // InternalKim.g:15404:5: lv_expr_3_0= RULE_EXPR
                    {
                    lv_expr_3_0=(Token)match(input,RULE_EXPR,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_expr_3_0, grammarAccess.getLiteralValueWithConceptAccess().getExprEXPRTerminalRuleCall_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getLiteralValueWithConceptRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"expr",
                      						lv_expr_3_0,
                      						"org.integratedmodelling.kim.Kim.EXPR");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:15421:3: ( (lv_quantity_4_0= ruleQuantity ) )
                    {
                    // InternalKim.g:15421:3: ( (lv_quantity_4_0= ruleQuantity ) )
                    // InternalKim.g:15422:4: (lv_quantity_4_0= ruleQuantity )
                    {
                    // InternalKim.g:15422:4: (lv_quantity_4_0= ruleQuantity )
                    // InternalKim.g:15423:5: lv_quantity_4_0= ruleQuantity
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralValueWithConceptAccess().getQuantityQuantityParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_quantity_4_0=ruleQuantity();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralValueWithConceptRule());
                      					}
                      					set(
                      						current,
                      						"quantity",
                      						lv_quantity_4_0,
                      						"org.integratedmodelling.kim.Kim.Quantity");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:15441:3: ( (lv_date_5_0= ruleDate ) )
                    {
                    // InternalKim.g:15441:3: ( (lv_date_5_0= ruleDate ) )
                    // InternalKim.g:15442:4: (lv_date_5_0= ruleDate )
                    {
                    // InternalKim.g:15442:4: (lv_date_5_0= ruleDate )
                    // InternalKim.g:15443:5: lv_date_5_0= ruleDate
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralValueWithConceptAccess().getDateDateParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_date_5_0=ruleDate();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralValueWithConceptRule());
                      					}
                      					set(
                      						current,
                      						"date",
                      						lv_date_5_0,
                      						"org.integratedmodelling.kim.Kim.Date");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalKim.g:15461:3: ( ( (lv_id_6_1= RULE_LOWERCASE_ID | lv_id_6_2= RULE_UPPERCASE_ID | lv_id_6_3= RULE_CAMELCASE_ID ) ) )
                    {
                    // InternalKim.g:15461:3: ( ( (lv_id_6_1= RULE_LOWERCASE_ID | lv_id_6_2= RULE_UPPERCASE_ID | lv_id_6_3= RULE_CAMELCASE_ID ) ) )
                    // InternalKim.g:15462:4: ( (lv_id_6_1= RULE_LOWERCASE_ID | lv_id_6_2= RULE_UPPERCASE_ID | lv_id_6_3= RULE_CAMELCASE_ID ) )
                    {
                    // InternalKim.g:15462:4: ( (lv_id_6_1= RULE_LOWERCASE_ID | lv_id_6_2= RULE_UPPERCASE_ID | lv_id_6_3= RULE_CAMELCASE_ID ) )
                    // InternalKim.g:15463:5: (lv_id_6_1= RULE_LOWERCASE_ID | lv_id_6_2= RULE_UPPERCASE_ID | lv_id_6_3= RULE_CAMELCASE_ID )
                    {
                    // InternalKim.g:15463:5: (lv_id_6_1= RULE_LOWERCASE_ID | lv_id_6_2= RULE_UPPERCASE_ID | lv_id_6_3= RULE_CAMELCASE_ID )
                    int alt319=3;
                    switch ( input.LA(1) ) {
                    case RULE_LOWERCASE_ID:
                        {
                        alt319=1;
                        }
                        break;
                    case RULE_UPPERCASE_ID:
                        {
                        alt319=2;
                        }
                        break;
                    case RULE_CAMELCASE_ID:
                        {
                        alt319=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 319, 0, input);

                        throw nvae;
                    }

                    switch (alt319) {
                        case 1 :
                            // InternalKim.g:15464:6: lv_id_6_1= RULE_LOWERCASE_ID
                            {
                            lv_id_6_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_6_1, grammarAccess.getLiteralValueWithConceptAccess().getIdLOWERCASE_IDTerminalRuleCall_6_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getLiteralValueWithConceptRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_6_1,
                              							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:15479:6: lv_id_6_2= RULE_UPPERCASE_ID
                            {
                            lv_id_6_2=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_6_2, grammarAccess.getLiteralValueWithConceptAccess().getIdUPPERCASE_IDTerminalRuleCall_6_0_1());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getLiteralValueWithConceptRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_6_2,
                              							"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 3 :
                            // InternalKim.g:15494:6: lv_id_6_3= RULE_CAMELCASE_ID
                            {
                            lv_id_6_3=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_6_3, grammarAccess.getLiteralValueWithConceptAccess().getIdCAMELCASE_IDTerminalRuleCall_6_0_2());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getLiteralValueWithConceptRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_6_3,
                              							"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLiteralValueWithConcept"


    // $ANTLR start "entryRuleFunction"
    // InternalKim.g:15515:1: entryRuleFunction returns [EObject current=null] : iv_ruleFunction= ruleFunction EOF ;
    public final EObject entryRuleFunction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunction = null;


        try {
            // InternalKim.g:15515:49: (iv_ruleFunction= ruleFunction EOF )
            // InternalKim.g:15516:2: iv_ruleFunction= ruleFunction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunction=ruleFunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunction"


    // $ANTLR start "ruleFunction"
    // InternalKim.g:15522:1: ruleFunction returns [EObject current=null] : ( ( (lv_name_0_0= rulePathName ) ) otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' ) ;
    public final EObject ruleFunction() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_parameters_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:15528:2: ( ( ( (lv_name_0_0= rulePathName ) ) otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' ) )
            // InternalKim.g:15529:2: ( ( (lv_name_0_0= rulePathName ) ) otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' )
            {
            // InternalKim.g:15529:2: ( ( (lv_name_0_0= rulePathName ) ) otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' )
            // InternalKim.g:15530:3: ( (lv_name_0_0= rulePathName ) ) otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')'
            {
            // InternalKim.g:15530:3: ( (lv_name_0_0= rulePathName ) )
            // InternalKim.g:15531:4: (lv_name_0_0= rulePathName )
            {
            // InternalKim.g:15531:4: (lv_name_0_0= rulePathName )
            // InternalKim.g:15532:5: lv_name_0_0= rulePathName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFunctionAccess().getNamePathNameParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_40);
            lv_name_0_0=rulePathName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFunctionRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_0_0,
              						"org.integratedmodelling.kim.Kim.PathName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,38,FOLLOW_164); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalKim.g:15553:3: ( (lv_parameters_2_0= ruleParameterList ) )?
            int alt321=2;
            int LA321_0 = input.LA(1);

            if ( ((LA321_0>=RULE_LOWERCASE_ID && LA321_0<=RULE_STRING)||(LA321_0>=RULE_EXPR && LA321_0<=RULE_LOWERCASE_DASHID)||LA321_0==RULE_UPPERCASE_PATH||(LA321_0>=28 && LA321_0<=29)||LA321_0==38||(LA321_0>=49 && LA321_0<=50)||(LA321_0>=76 && LA321_0<=79)||(LA321_0>=82 && LA321_0<=83)||LA321_0==85||LA321_0==113||LA321_0==118||(LA321_0>=132 && LA321_0<=133)||(LA321_0>=141 && LA321_0<=142)||(LA321_0>=144 && LA321_0<=149)||(LA321_0>=151 && LA321_0<=163)||LA321_0==216||(LA321_0>=251 && LA321_0<=252)) ) {
                alt321=1;
            }
            switch (alt321) {
                case 1 :
                    // InternalKim.g:15554:4: (lv_parameters_2_0= ruleParameterList )
                    {
                    // InternalKim.g:15554:4: (lv_parameters_2_0= ruleParameterList )
                    // InternalKim.g:15555:5: lv_parameters_2_0= ruleParameterList
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getFunctionAccess().getParametersParameterListParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_96);
                    lv_parameters_2_0=ruleParameterList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getFunctionRule());
                      					}
                      					set(
                      						current,
                      						"parameters",
                      						lv_parameters_2_0,
                      						"org.integratedmodelling.kim.Kim.ParameterList");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_3=(Token)match(input,41,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getFunctionAccess().getRightParenthesisKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunction"


    // $ANTLR start "entryRuleCONCEPT_TYPE"
    // InternalKim.g:15580:1: entryRuleCONCEPT_TYPE returns [String current=null] : iv_ruleCONCEPT_TYPE= ruleCONCEPT_TYPE EOF ;
    public final String entryRuleCONCEPT_TYPE() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleCONCEPT_TYPE = null;


        try {
            // InternalKim.g:15580:52: (iv_ruleCONCEPT_TYPE= ruleCONCEPT_TYPE EOF )
            // InternalKim.g:15581:2: iv_ruleCONCEPT_TYPE= ruleCONCEPT_TYPE EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCONCEPT_TYPERule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCONCEPT_TYPE=ruleCONCEPT_TYPE();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCONCEPT_TYPE.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCONCEPT_TYPE"


    // $ANTLR start "ruleCONCEPT_TYPE"
    // InternalKim.g:15587:1: ruleCONCEPT_TYPE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'quality' | this_DECLARABLE_TYPE_1= ruleDECLARABLE_TYPE ) ;
    public final AntlrDatatypeRuleToken ruleCONCEPT_TYPE() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_DECLARABLE_TYPE_1 = null;



        	enterRule();

        try {
            // InternalKim.g:15593:2: ( (kw= 'quality' | this_DECLARABLE_TYPE_1= ruleDECLARABLE_TYPE ) )
            // InternalKim.g:15594:2: (kw= 'quality' | this_DECLARABLE_TYPE_1= ruleDECLARABLE_TYPE )
            {
            // InternalKim.g:15594:2: (kw= 'quality' | this_DECLARABLE_TYPE_1= ruleDECLARABLE_TYPE )
            int alt322=2;
            int LA322_0 = input.LA(1);

            if ( (LA322_0==218) ) {
                alt322=1;
            }
            else if ( (LA322_0==96||LA322_0==163||(LA322_0>=170 && LA322_0<=171)||LA322_0==193||(LA322_0>=213 && LA322_0<=215)||(LA322_0>=219 && LA322_0<=247)) ) {
                alt322=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 322, 0, input);

                throw nvae;
            }
            switch (alt322) {
                case 1 :
                    // InternalKim.g:15595:3: kw= 'quality'
                    {
                    kw=(Token)match(input,218,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getCONCEPT_TYPEAccess().getQualityKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:15601:3: this_DECLARABLE_TYPE_1= ruleDECLARABLE_TYPE
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getCONCEPT_TYPEAccess().getDECLARABLE_TYPEParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DECLARABLE_TYPE_1=ruleDECLARABLE_TYPE();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_DECLARABLE_TYPE_1);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCONCEPT_TYPE"


    // $ANTLR start "entryRuleDECLARABLE_TYPE"
    // InternalKim.g:15615:1: entryRuleDECLARABLE_TYPE returns [String current=null] : iv_ruleDECLARABLE_TYPE= ruleDECLARABLE_TYPE EOF ;
    public final String entryRuleDECLARABLE_TYPE() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleDECLARABLE_TYPE = null;


        try {
            // InternalKim.g:15615:55: (iv_ruleDECLARABLE_TYPE= ruleDECLARABLE_TYPE EOF )
            // InternalKim.g:15616:2: iv_ruleDECLARABLE_TYPE= ruleDECLARABLE_TYPE EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDECLARABLE_TYPERule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDECLARABLE_TYPE=ruleDECLARABLE_TYPE();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDECLARABLE_TYPE.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDECLARABLE_TYPE"


    // $ANTLR start "ruleDECLARABLE_TYPE"
    // InternalKim.g:15622:1: ruleDECLARABLE_TYPE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'class' | kw= 'quantity' | kw= 'configuration' | kw= 'relationship' | kw= 'bond' | kw= 'extent' | this_EXTENSIVE_PROPERTY_6= ruleEXTENSIVE_PROPERTY | this_INTENSIVE_PROPERTY_7= ruleINTENSIVE_PROPERTY | this_AGENT_TYPE_8= ruleAGENT_TYPE | this_TRAIT_9= ruleTRAIT ) ;
    public final AntlrDatatypeRuleToken ruleDECLARABLE_TYPE() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_EXTENSIVE_PROPERTY_6 = null;

        AntlrDatatypeRuleToken this_INTENSIVE_PROPERTY_7 = null;

        AntlrDatatypeRuleToken this_AGENT_TYPE_8 = null;

        AntlrDatatypeRuleToken this_TRAIT_9 = null;



        	enterRule();

        try {
            // InternalKim.g:15628:2: ( (kw= 'class' | kw= 'quantity' | kw= 'configuration' | kw= 'relationship' | kw= 'bond' | kw= 'extent' | this_EXTENSIVE_PROPERTY_6= ruleEXTENSIVE_PROPERTY | this_INTENSIVE_PROPERTY_7= ruleINTENSIVE_PROPERTY | this_AGENT_TYPE_8= ruleAGENT_TYPE | this_TRAIT_9= ruleTRAIT ) )
            // InternalKim.g:15629:2: (kw= 'class' | kw= 'quantity' | kw= 'configuration' | kw= 'relationship' | kw= 'bond' | kw= 'extent' | this_EXTENSIVE_PROPERTY_6= ruleEXTENSIVE_PROPERTY | this_INTENSIVE_PROPERTY_7= ruleINTENSIVE_PROPERTY | this_AGENT_TYPE_8= ruleAGENT_TYPE | this_TRAIT_9= ruleTRAIT )
            {
            // InternalKim.g:15629:2: (kw= 'class' | kw= 'quantity' | kw= 'configuration' | kw= 'relationship' | kw= 'bond' | kw= 'extent' | this_EXTENSIVE_PROPERTY_6= ruleEXTENSIVE_PROPERTY | this_INTENSIVE_PROPERTY_7= ruleINTENSIVE_PROPERTY | this_AGENT_TYPE_8= ruleAGENT_TYPE | this_TRAIT_9= ruleTRAIT )
            int alt323=10;
            switch ( input.LA(1) ) {
            case 219:
                {
                alt323=1;
                }
                break;
            case 220:
                {
                alt323=2;
                }
                break;
            case 221:
                {
                alt323=3;
                }
                break;
            case 171:
                {
                alt323=4;
                }
                break;
            case 222:
                {
                alt323=5;
                }
                break;
            case 215:
                {
                alt323=6;
                }
                break;
            case 224:
            case 225:
            case 226:
            case 227:
            case 228:
            case 229:
            case 230:
            case 231:
                {
                alt323=7;
                }
                break;
            case 232:
            case 233:
            case 234:
            case 235:
            case 236:
            case 237:
            case 238:
            case 239:
            case 240:
            case 241:
            case 242:
            case 243:
            case 244:
                {
                alt323=8;
                }
                break;
            case 170:
            case 245:
            case 246:
            case 247:
                {
                alt323=9;
                }
                break;
            case 96:
            case 163:
            case 193:
            case 213:
            case 214:
            case 223:
                {
                alt323=10;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 323, 0, input);

                throw nvae;
            }

            switch (alt323) {
                case 1 :
                    // InternalKim.g:15630:3: kw= 'class'
                    {
                    kw=(Token)match(input,219,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getDECLARABLE_TYPEAccess().getClassKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:15636:3: kw= 'quantity'
                    {
                    kw=(Token)match(input,220,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getDECLARABLE_TYPEAccess().getQuantityKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:15642:3: kw= 'configuration'
                    {
                    kw=(Token)match(input,221,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getDECLARABLE_TYPEAccess().getConfigurationKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKim.g:15648:3: kw= 'relationship'
                    {
                    kw=(Token)match(input,171,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getDECLARABLE_TYPEAccess().getRelationshipKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalKim.g:15654:3: kw= 'bond'
                    {
                    kw=(Token)match(input,222,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getDECLARABLE_TYPEAccess().getBondKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalKim.g:15660:3: kw= 'extent'
                    {
                    kw=(Token)match(input,215,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getDECLARABLE_TYPEAccess().getExtentKeyword_5());
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalKim.g:15666:3: this_EXTENSIVE_PROPERTY_6= ruleEXTENSIVE_PROPERTY
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDECLARABLE_TYPEAccess().getEXTENSIVE_PROPERTYParserRuleCall_6());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_EXTENSIVE_PROPERTY_6=ruleEXTENSIVE_PROPERTY();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_EXTENSIVE_PROPERTY_6);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalKim.g:15677:3: this_INTENSIVE_PROPERTY_7= ruleINTENSIVE_PROPERTY
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDECLARABLE_TYPEAccess().getINTENSIVE_PROPERTYParserRuleCall_7());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_INTENSIVE_PROPERTY_7=ruleINTENSIVE_PROPERTY();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_INTENSIVE_PROPERTY_7);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalKim.g:15688:3: this_AGENT_TYPE_8= ruleAGENT_TYPE
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDECLARABLE_TYPEAccess().getAGENT_TYPEParserRuleCall_8());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_AGENT_TYPE_8=ruleAGENT_TYPE();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_AGENT_TYPE_8);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 10 :
                    // InternalKim.g:15699:3: this_TRAIT_9= ruleTRAIT
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDECLARABLE_TYPEAccess().getTRAITParserRuleCall_9());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_TRAIT_9=ruleTRAIT();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_TRAIT_9);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDECLARABLE_TYPE"


    // $ANTLR start "entryRuleTRAIT"
    // InternalKim.g:15713:1: entryRuleTRAIT returns [String current=null] : iv_ruleTRAIT= ruleTRAIT EOF ;
    public final String entryRuleTRAIT() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleTRAIT = null;


        try {
            // InternalKim.g:15713:45: (iv_ruleTRAIT= ruleTRAIT EOF )
            // InternalKim.g:15714:2: iv_ruleTRAIT= ruleTRAIT EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTRAITRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTRAIT=ruleTRAIT();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTRAIT.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTRAIT"


    // $ANTLR start "ruleTRAIT"
    // InternalKim.g:15720:1: ruleTRAIT returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'ordering' | kw= 'attribute' | kw= 'identity' | kw= 'role' | kw= 'realm' | kw= 'domain' ) ;
    public final AntlrDatatypeRuleToken ruleTRAIT() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKim.g:15726:2: ( (kw= 'ordering' | kw= 'attribute' | kw= 'identity' | kw= 'role' | kw= 'realm' | kw= 'domain' ) )
            // InternalKim.g:15727:2: (kw= 'ordering' | kw= 'attribute' | kw= 'identity' | kw= 'role' | kw= 'realm' | kw= 'domain' )
            {
            // InternalKim.g:15727:2: (kw= 'ordering' | kw= 'attribute' | kw= 'identity' | kw= 'role' | kw= 'realm' | kw= 'domain' )
            int alt324=6;
            switch ( input.LA(1) ) {
            case 223:
                {
                alt324=1;
                }
                break;
            case 213:
                {
                alt324=2;
                }
                break;
            case 163:
                {
                alt324=3;
                }
                break;
            case 193:
                {
                alt324=4;
                }
                break;
            case 214:
                {
                alt324=5;
                }
                break;
            case 96:
                {
                alt324=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 324, 0, input);

                throw nvae;
            }

            switch (alt324) {
                case 1 :
                    // InternalKim.g:15728:3: kw= 'ordering'
                    {
                    kw=(Token)match(input,223,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getTRAITAccess().getOrderingKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:15734:3: kw= 'attribute'
                    {
                    kw=(Token)match(input,213,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getTRAITAccess().getAttributeKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:15740:3: kw= 'identity'
                    {
                    kw=(Token)match(input,163,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getTRAITAccess().getIdentityKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKim.g:15746:3: kw= 'role'
                    {
                    kw=(Token)match(input,193,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getTRAITAccess().getRoleKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalKim.g:15752:3: kw= 'realm'
                    {
                    kw=(Token)match(input,214,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getTRAITAccess().getRealmKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalKim.g:15758:3: kw= 'domain'
                    {
                    kw=(Token)match(input,96,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getTRAITAccess().getDomainKeyword_5());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTRAIT"


    // $ANTLR start "entryRuleEXTENSIVE_PROPERTY"
    // InternalKim.g:15767:1: entryRuleEXTENSIVE_PROPERTY returns [String current=null] : iv_ruleEXTENSIVE_PROPERTY= ruleEXTENSIVE_PROPERTY EOF ;
    public final String entryRuleEXTENSIVE_PROPERTY() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEXTENSIVE_PROPERTY = null;


        try {
            // InternalKim.g:15767:58: (iv_ruleEXTENSIVE_PROPERTY= ruleEXTENSIVE_PROPERTY EOF )
            // InternalKim.g:15768:2: iv_ruleEXTENSIVE_PROPERTY= ruleEXTENSIVE_PROPERTY EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEXTENSIVE_PROPERTYRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEXTENSIVE_PROPERTY=ruleEXTENSIVE_PROPERTY();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEXTENSIVE_PROPERTY.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEXTENSIVE_PROPERTY"


    // $ANTLR start "ruleEXTENSIVE_PROPERTY"
    // InternalKim.g:15774:1: ruleEXTENSIVE_PROPERTY returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'amount' | kw= 'length' | kw= 'mass' | kw= 'volume' | kw= 'weight' | kw= 'money' | kw= 'duration' | kw= 'area' ) ;
    public final AntlrDatatypeRuleToken ruleEXTENSIVE_PROPERTY() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKim.g:15780:2: ( (kw= 'amount' | kw= 'length' | kw= 'mass' | kw= 'volume' | kw= 'weight' | kw= 'money' | kw= 'duration' | kw= 'area' ) )
            // InternalKim.g:15781:2: (kw= 'amount' | kw= 'length' | kw= 'mass' | kw= 'volume' | kw= 'weight' | kw= 'money' | kw= 'duration' | kw= 'area' )
            {
            // InternalKim.g:15781:2: (kw= 'amount' | kw= 'length' | kw= 'mass' | kw= 'volume' | kw= 'weight' | kw= 'money' | kw= 'duration' | kw= 'area' )
            int alt325=8;
            switch ( input.LA(1) ) {
            case 224:
                {
                alt325=1;
                }
                break;
            case 225:
                {
                alt325=2;
                }
                break;
            case 226:
                {
                alt325=3;
                }
                break;
            case 227:
                {
                alt325=4;
                }
                break;
            case 228:
                {
                alt325=5;
                }
                break;
            case 229:
                {
                alt325=6;
                }
                break;
            case 230:
                {
                alt325=7;
                }
                break;
            case 231:
                {
                alt325=8;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 325, 0, input);

                throw nvae;
            }

            switch (alt325) {
                case 1 :
                    // InternalKim.g:15782:3: kw= 'amount'
                    {
                    kw=(Token)match(input,224,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEXTENSIVE_PROPERTYAccess().getAmountKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:15788:3: kw= 'length'
                    {
                    kw=(Token)match(input,225,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEXTENSIVE_PROPERTYAccess().getLengthKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:15794:3: kw= 'mass'
                    {
                    kw=(Token)match(input,226,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEXTENSIVE_PROPERTYAccess().getMassKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKim.g:15800:3: kw= 'volume'
                    {
                    kw=(Token)match(input,227,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEXTENSIVE_PROPERTYAccess().getVolumeKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalKim.g:15806:3: kw= 'weight'
                    {
                    kw=(Token)match(input,228,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEXTENSIVE_PROPERTYAccess().getWeightKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalKim.g:15812:3: kw= 'money'
                    {
                    kw=(Token)match(input,229,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEXTENSIVE_PROPERTYAccess().getMoneyKeyword_5());
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalKim.g:15818:3: kw= 'duration'
                    {
                    kw=(Token)match(input,230,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEXTENSIVE_PROPERTYAccess().getDurationKeyword_6());
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalKim.g:15824:3: kw= 'area'
                    {
                    kw=(Token)match(input,231,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEXTENSIVE_PROPERTYAccess().getAreaKeyword_7());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEXTENSIVE_PROPERTY"


    // $ANTLR start "entryRuleINTENSIVE_PROPERTY"
    // InternalKim.g:15833:1: entryRuleINTENSIVE_PROPERTY returns [String current=null] : iv_ruleINTENSIVE_PROPERTY= ruleINTENSIVE_PROPERTY EOF ;
    public final String entryRuleINTENSIVE_PROPERTY() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleINTENSIVE_PROPERTY = null;


        try {
            // InternalKim.g:15833:58: (iv_ruleINTENSIVE_PROPERTY= ruleINTENSIVE_PROPERTY EOF )
            // InternalKim.g:15834:2: iv_ruleINTENSIVE_PROPERTY= ruleINTENSIVE_PROPERTY EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getINTENSIVE_PROPERTYRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleINTENSIVE_PROPERTY=ruleINTENSIVE_PROPERTY();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleINTENSIVE_PROPERTY.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleINTENSIVE_PROPERTY"


    // $ANTLR start "ruleINTENSIVE_PROPERTY"
    // InternalKim.g:15840:1: ruleINTENSIVE_PROPERTY returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'acceleration' | kw= 'energy' | kw= 'entropy' | kw= 'priority' | kw= 'electric-potential' | kw= 'charge' | kw= 'resistance' | kw= 'resistivity' | kw= 'pressure' | kw= 'angle' | kw= 'velocity' | kw= 'temperature' | kw= 'viscosity' ) ;
    public final AntlrDatatypeRuleToken ruleINTENSIVE_PROPERTY() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKim.g:15846:2: ( (kw= 'acceleration' | kw= 'energy' | kw= 'entropy' | kw= 'priority' | kw= 'electric-potential' | kw= 'charge' | kw= 'resistance' | kw= 'resistivity' | kw= 'pressure' | kw= 'angle' | kw= 'velocity' | kw= 'temperature' | kw= 'viscosity' ) )
            // InternalKim.g:15847:2: (kw= 'acceleration' | kw= 'energy' | kw= 'entropy' | kw= 'priority' | kw= 'electric-potential' | kw= 'charge' | kw= 'resistance' | kw= 'resistivity' | kw= 'pressure' | kw= 'angle' | kw= 'velocity' | kw= 'temperature' | kw= 'viscosity' )
            {
            // InternalKim.g:15847:2: (kw= 'acceleration' | kw= 'energy' | kw= 'entropy' | kw= 'priority' | kw= 'electric-potential' | kw= 'charge' | kw= 'resistance' | kw= 'resistivity' | kw= 'pressure' | kw= 'angle' | kw= 'velocity' | kw= 'temperature' | kw= 'viscosity' )
            int alt326=13;
            switch ( input.LA(1) ) {
            case 232:
                {
                alt326=1;
                }
                break;
            case 233:
                {
                alt326=2;
                }
                break;
            case 234:
                {
                alt326=3;
                }
                break;
            case 235:
                {
                alt326=4;
                }
                break;
            case 236:
                {
                alt326=5;
                }
                break;
            case 237:
                {
                alt326=6;
                }
                break;
            case 238:
                {
                alt326=7;
                }
                break;
            case 239:
                {
                alt326=8;
                }
                break;
            case 240:
                {
                alt326=9;
                }
                break;
            case 241:
                {
                alt326=10;
                }
                break;
            case 242:
                {
                alt326=11;
                }
                break;
            case 243:
                {
                alt326=12;
                }
                break;
            case 244:
                {
                alt326=13;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 326, 0, input);

                throw nvae;
            }

            switch (alt326) {
                case 1 :
                    // InternalKim.g:15848:3: kw= 'acceleration'
                    {
                    kw=(Token)match(input,232,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getAccelerationKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:15854:3: kw= 'energy'
                    {
                    kw=(Token)match(input,233,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getEnergyKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:15860:3: kw= 'entropy'
                    {
                    kw=(Token)match(input,234,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getEntropyKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKim.g:15866:3: kw= 'priority'
                    {
                    kw=(Token)match(input,235,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getPriorityKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalKim.g:15872:3: kw= 'electric-potential'
                    {
                    kw=(Token)match(input,236,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getElectricPotentialKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalKim.g:15878:3: kw= 'charge'
                    {
                    kw=(Token)match(input,237,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getChargeKeyword_5());
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalKim.g:15884:3: kw= 'resistance'
                    {
                    kw=(Token)match(input,238,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getResistanceKeyword_6());
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalKim.g:15890:3: kw= 'resistivity'
                    {
                    kw=(Token)match(input,239,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getResistivityKeyword_7());
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalKim.g:15896:3: kw= 'pressure'
                    {
                    kw=(Token)match(input,240,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getPressureKeyword_8());
                      		
                    }

                    }
                    break;
                case 10 :
                    // InternalKim.g:15902:3: kw= 'angle'
                    {
                    kw=(Token)match(input,241,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getAngleKeyword_9());
                      		
                    }

                    }
                    break;
                case 11 :
                    // InternalKim.g:15908:3: kw= 'velocity'
                    {
                    kw=(Token)match(input,242,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getVelocityKeyword_10());
                      		
                    }

                    }
                    break;
                case 12 :
                    // InternalKim.g:15914:3: kw= 'temperature'
                    {
                    kw=(Token)match(input,243,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getTemperatureKeyword_11());
                      		
                    }

                    }
                    break;
                case 13 :
                    // InternalKim.g:15920:3: kw= 'viscosity'
                    {
                    kw=(Token)match(input,244,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getViscosityKeyword_12());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleINTENSIVE_PROPERTY"


    // $ANTLR start "entryRuleAGENT_TYPE"
    // InternalKim.g:15929:1: entryRuleAGENT_TYPE returns [String current=null] : iv_ruleAGENT_TYPE= ruleAGENT_TYPE EOF ;
    public final String entryRuleAGENT_TYPE() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleAGENT_TYPE = null;


        try {
            // InternalKim.g:15929:50: (iv_ruleAGENT_TYPE= ruleAGENT_TYPE EOF )
            // InternalKim.g:15930:2: iv_ruleAGENT_TYPE= ruleAGENT_TYPE EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAGENT_TYPERule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAGENT_TYPE=ruleAGENT_TYPE();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAGENT_TYPE.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAGENT_TYPE"


    // $ANTLR start "ruleAGENT_TYPE"
    // InternalKim.g:15936:1: ruleAGENT_TYPE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'thing' | kw= 'process' | kw= 'agent' | kw= 'event' ) ;
    public final AntlrDatatypeRuleToken ruleAGENT_TYPE() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKim.g:15942:2: ( (kw= 'thing' | kw= 'process' | kw= 'agent' | kw= 'event' ) )
            // InternalKim.g:15943:2: (kw= 'thing' | kw= 'process' | kw= 'agent' | kw= 'event' )
            {
            // InternalKim.g:15943:2: (kw= 'thing' | kw= 'process' | kw= 'agent' | kw= 'event' )
            int alt327=4;
            switch ( input.LA(1) ) {
            case 245:
                {
                alt327=1;
                }
                break;
            case 246:
                {
                alt327=2;
                }
                break;
            case 170:
                {
                alt327=3;
                }
                break;
            case 247:
                {
                alt327=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 327, 0, input);

                throw nvae;
            }

            switch (alt327) {
                case 1 :
                    // InternalKim.g:15944:3: kw= 'thing'
                    {
                    kw=(Token)match(input,245,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAGENT_TYPEAccess().getThingKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:15950:3: kw= 'process'
                    {
                    kw=(Token)match(input,246,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAGENT_TYPEAccess().getProcessKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:15956:3: kw= 'agent'
                    {
                    kw=(Token)match(input,170,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAGENT_TYPEAccess().getAgentKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKim.g:15962:3: kw= 'event'
                    {
                    kw=(Token)match(input,247,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAGENT_TYPEAccess().getEventKeyword_3());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAGENT_TYPE"


    // $ANTLR start "entryRulePROPERTY_TYPE"
    // InternalKim.g:15971:1: entryRulePROPERTY_TYPE returns [String current=null] : iv_rulePROPERTY_TYPE= rulePROPERTY_TYPE EOF ;
    public final String entryRulePROPERTY_TYPE() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulePROPERTY_TYPE = null;


        try {
            // InternalKim.g:15971:53: (iv_rulePROPERTY_TYPE= rulePROPERTY_TYPE EOF )
            // InternalKim.g:15972:2: iv_rulePROPERTY_TYPE= rulePROPERTY_TYPE EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPROPERTY_TYPERule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePROPERTY_TYPE=rulePROPERTY_TYPE();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePROPERTY_TYPE.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePROPERTY_TYPE"


    // $ANTLR start "rulePROPERTY_TYPE"
    // InternalKim.g:15978:1: rulePROPERTY_TYPE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'functional' | kw= 'structural' ) ;
    public final AntlrDatatypeRuleToken rulePROPERTY_TYPE() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKim.g:15984:2: ( (kw= 'functional' | kw= 'structural' ) )
            // InternalKim.g:15985:2: (kw= 'functional' | kw= 'structural' )
            {
            // InternalKim.g:15985:2: (kw= 'functional' | kw= 'structural' )
            int alt328=2;
            int LA328_0 = input.LA(1);

            if ( (LA328_0==248) ) {
                alt328=1;
            }
            else if ( (LA328_0==249) ) {
                alt328=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 328, 0, input);

                throw nvae;
            }
            switch (alt328) {
                case 1 :
                    // InternalKim.g:15986:3: kw= 'functional'
                    {
                    kw=(Token)match(input,248,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getPROPERTY_TYPEAccess().getFunctionalKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:15992:3: kw= 'structural'
                    {
                    kw=(Token)match(input,249,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getPROPERTY_TYPEAccess().getStructuralKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePROPERTY_TYPE"


    // $ANTLR start "entryRuleDependencyObservableSemantics"
    // InternalKim.g:16001:1: entryRuleDependencyObservableSemantics returns [EObject current=null] : iv_ruleDependencyObservableSemantics= ruleDependencyObservableSemantics EOF ;
    public final EObject entryRuleDependencyObservableSemantics() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDependencyObservableSemantics = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3()
        	);

        try {
            // InternalKim.g:16005:2: (iv_ruleDependencyObservableSemantics= ruleDependencyObservableSemantics EOF )
            // InternalKim.g:16006:2: iv_ruleDependencyObservableSemantics= ruleDependencyObservableSemantics EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDependencyObservableSemanticsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDependencyObservableSemantics=ruleDependencyObservableSemantics();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDependencyObservableSemantics; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleDependencyObservableSemantics"


    // $ANTLR start "ruleDependencyObservableSemantics"
    // InternalKim.g:16015:1: ruleDependencyObservableSemantics returns [EObject current=null] : ( ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) ) ) ;
    public final EObject ruleDependencyObservableSemantics() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_generic_2_0=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_11=null;
        Token otherlv_14=null;
        Token lv_optional_18_0=null;
        Token otherlv_19=null;
        Token otherlv_20=null;
        Token lv_name_21_1=null;
        Token lv_name_21_2=null;
        EObject lv_value_0_0 = null;

        EObject lv_declaration_3_0 = null;

        AntlrDatatypeRuleToken lv_accordingTo_7_0 = null;

        EObject lv_unit_9_0 = null;

        EObject lv_currency_10_0 = null;

        EObject lv_unit_12_0 = null;

        EObject lv_from_13_0 = null;

        EObject lv_to_15_0 = null;

        EObject lv_valueOperators_16_0 = null;

        EObject lv_valueOperators_17_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3()
        	);

        try {
            // InternalKim.g:16024:2: ( ( ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) ) ) )
            // InternalKim.g:16025:2: ( ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) ) )
            {
            // InternalKim.g:16025:2: ( ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) ) )
            // InternalKim.g:16026:3: ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) )
            {
            // InternalKim.g:16026:3: ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )?
            int alt329=2;
            alt329 = dfa329.predict(input);
            switch (alt329) {
                case 1 :
                    // InternalKim.g:16027:4: ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as'
                    {
                    // InternalKim.g:16027:4: ( (lv_value_0_0= ruleLiteralValueWithConcept ) )
                    // InternalKim.g:16028:5: (lv_value_0_0= ruleLiteralValueWithConcept )
                    {
                    // InternalKim.g:16028:5: (lv_value_0_0= ruleLiteralValueWithConcept )
                    // InternalKim.g:16029:6: lv_value_0_0= ruleLiteralValueWithConcept
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getValueLiteralValueWithConceptParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_11);
                    lv_value_0_0=ruleLiteralValueWithConcept();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDependencyObservableSemanticsRule());
                      						}
                      						set(
                      							current,
                      							"value",
                      							lv_value_0_0,
                      							"org.integratedmodelling.kim.Kim.LiteralValueWithConcept");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,25,FOLLOW_99); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getDependencyObservableSemanticsAccess().getAsKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:16051:3: ( (lv_generic_2_0= 'any' ) )?
            int alt330=2;
            int LA330_0 = input.LA(1);

            if ( (LA330_0==113) ) {
                alt330=1;
            }
            switch (alt330) {
                case 1 :
                    // InternalKim.g:16052:4: (lv_generic_2_0= 'any' )
                    {
                    // InternalKim.g:16052:4: (lv_generic_2_0= 'any' )
                    // InternalKim.g:16053:5: lv_generic_2_0= 'any'
                    {
                    lv_generic_2_0=(Token)match(input,113,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_generic_2_0, grammarAccess.getDependencyObservableSemanticsAccess().getGenericAnyKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getDependencyObservableSemanticsRule());
                      					}
                      					setWithLastConsumed(current, "generic", true, "any");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:16065:3: ( (lv_declaration_3_0= ruleConceptDeclaration ) )
            // InternalKim.g:16066:4: (lv_declaration_3_0= ruleConceptDeclaration )
            {
            // InternalKim.g:16066:4: (lv_declaration_3_0= ruleConceptDeclaration )
            // InternalKim.g:16067:5: lv_declaration_3_0= ruleConceptDeclaration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getDeclarationConceptDeclarationParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_100);
            lv_declaration_3_0=ruleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDependencyObservableSemanticsRule());
              					}
              					set(
              						current,
              						"declaration",
              						lv_declaration_3_0,
              						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:16084:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) )
            // InternalKim.g:16085:4: ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )* ) )
            {
            // InternalKim.g:16085:4: ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )* ) )
            // InternalKim.g:16086:5: ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3());
            // InternalKim.g:16089:5: ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )* )
            // InternalKim.g:16090:6: ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )*
            {
            // InternalKim.g:16090:6: ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )*
            loop336:
            do {
                int alt336=7;
                alt336 = dfa336.predict(input);
                switch (alt336) {
            	case 1 :
            	    // InternalKim.g:16091:4: ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) )
            	    {
            	    // InternalKim.g:16091:4: ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) )
            	    // InternalKim.g:16092:5: {...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDependencyObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 0)");
            	    }
            	    // InternalKim.g:16092:126: ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) )
            	    // InternalKim.g:16093:6: ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 0);
            	    // InternalKim.g:16096:9: ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) )
            	    // InternalKim.g:16096:10: {...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDependencyObservableSemantics", "true");
            	    }
            	    // InternalKim.g:16096:19: (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) )
            	    // InternalKim.g:16096:20: otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) )
            	    {
            	    otherlv_5=(Token)match(input,35,FOLLOW_25); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_5, grammarAccess.getDependencyObservableSemanticsAccess().getAccordingKeyword_3_0_0());
            	      								
            	    }
            	    otherlv_6=(Token)match(input,36,FOLLOW_26); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_6, grammarAccess.getDependencyObservableSemanticsAccess().getToKeyword_3_0_1());
            	      								
            	    }
            	    // InternalKim.g:16104:9: ( (lv_accordingTo_7_0= rulePropertyId ) )
            	    // InternalKim.g:16105:10: (lv_accordingTo_7_0= rulePropertyId )
            	    {
            	    // InternalKim.g:16105:10: (lv_accordingTo_7_0= rulePropertyId )
            	    // InternalKim.g:16106:11: lv_accordingTo_7_0= rulePropertyId
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getAccordingToPropertyIdParserRuleCall_3_0_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_100);
            	    lv_accordingTo_7_0=rulePropertyId();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getDependencyObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"accordingTo",
            	      												lv_accordingTo_7_0,
            	      												"org.integratedmodelling.kim.Kim.PropertyId");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKim.g:16129:4: ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) )
            	    {
            	    // InternalKim.g:16129:4: ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) )
            	    // InternalKim.g:16130:5: {...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDependencyObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 1)");
            	    }
            	    // InternalKim.g:16130:126: ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) )
            	    // InternalKim.g:16131:6: ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 1);
            	    // InternalKim.g:16134:9: ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) )
            	    // InternalKim.g:16134:10: {...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDependencyObservableSemantics", "true");
            	    }
            	    // InternalKim.g:16134:19: ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) )
            	    int alt332=2;
            	    int LA332_0 = input.LA(1);

            	    if ( (LA332_0==48) ) {
            	        alt332=1;
            	    }
            	    else if ( (LA332_0==114) ) {
            	        alt332=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 332, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt332) {
            	        case 1 :
            	            // InternalKim.g:16134:20: (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) )
            	            {
            	            // InternalKim.g:16134:20: (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) )
            	            // InternalKim.g:16135:10: otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) )
            	            {
            	            otherlv_8=(Token)match(input,48,FOLLOW_101); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_8, grammarAccess.getDependencyObservableSemanticsAccess().getInKeyword_3_1_0_0());
            	              									
            	            }
            	            // InternalKim.g:16139:10: ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) )
            	            int alt331=2;
            	            int LA331_0 = input.LA(1);

            	            if ( (LA331_0==EOF||LA331_0==RULE_LOWERCASE_ID||(LA331_0>=RULE_CAMELCASE_ID && LA331_0<=RULE_INT)||LA331_0==RULE_BACKCASE_ID||LA331_0==20||LA331_0==27||(LA331_0>=31 && LA331_0<=33)||LA331_0==35||(LA331_0>=37 && LA331_0<=38)||LA331_0==40||LA331_0==42||LA331_0==48||(LA331_0>=54 && LA331_0<=56)||(LA331_0>=62 && LA331_0<=67)||(LA331_0>=76 && LA331_0<=89)||LA331_0==108||(LA331_0>=114 && LA331_0<=117)||(LA331_0>=119 && LA331_0<=122)||(LA331_0>=251 && LA331_0<=252)||LA331_0==259) ) {
            	                alt331=1;
            	            }
            	            else if ( (LA331_0==RULE_UPPERCASE_ID) ) {
            	                int LA331_2 = input.LA(2);

            	                if ( (LA331_2==EOF||LA331_2==RULE_INT||LA331_2==20||LA331_2==27||(LA331_2>=31 && LA331_2<=33)||LA331_2==35||LA331_2==37||LA331_2==40||LA331_2==42||LA331_2==48||(LA331_2>=54 && LA331_2<=56)||(LA331_2>=62 && LA331_2<=67)||(LA331_2>=76 && LA331_2<=89)||LA331_2==108||(LA331_2>=114 && LA331_2<=117)||(LA331_2>=119 && LA331_2<=122)||(LA331_2>=251 && LA331_2<=252)||LA331_2==259) ) {
            	                    alt331=1;
            	                }
            	                else if ( (LA331_2==250) ) {
            	                    alt331=2;
            	                }
            	                else {
            	                    if (state.backtracking>0) {state.failed=true; return current;}
            	                    NoViableAltException nvae =
            	                        new NoViableAltException("", 331, 2, input);

            	                    throw nvae;
            	                }
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 331, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt331) {
            	                case 1 :
            	                    // InternalKim.g:16140:11: ( (lv_unit_9_0= ruleUnit ) )
            	                    {
            	                    // InternalKim.g:16140:11: ( (lv_unit_9_0= ruleUnit ) )
            	                    // InternalKim.g:16141:12: (lv_unit_9_0= ruleUnit )
            	                    {
            	                    // InternalKim.g:16141:12: (lv_unit_9_0= ruleUnit )
            	                    // InternalKim.g:16142:13: lv_unit_9_0= ruleUnit
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      													newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getUnitUnitParserRuleCall_3_1_0_1_0_0());
            	                      												
            	                    }
            	                    pushFollow(FOLLOW_100);
            	                    lv_unit_9_0=ruleUnit();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													if (current==null) {
            	                      														current = createModelElementForParent(grammarAccess.getDependencyObservableSemanticsRule());
            	                      													}
            	                      													set(
            	                      														current,
            	                      														"unit",
            	                      														lv_unit_9_0,
            	                      														"org.integratedmodelling.kim.Kim.Unit");
            	                      													afterParserOrEnumRuleCall();
            	                      												
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalKim.g:16160:11: ( (lv_currency_10_0= ruleCurrency ) )
            	                    {
            	                    // InternalKim.g:16160:11: ( (lv_currency_10_0= ruleCurrency ) )
            	                    // InternalKim.g:16161:12: (lv_currency_10_0= ruleCurrency )
            	                    {
            	                    // InternalKim.g:16161:12: (lv_currency_10_0= ruleCurrency )
            	                    // InternalKim.g:16162:13: lv_currency_10_0= ruleCurrency
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      													newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getCurrencyCurrencyParserRuleCall_3_1_0_1_1_0());
            	                      												
            	                    }
            	                    pushFollow(FOLLOW_100);
            	                    lv_currency_10_0=ruleCurrency();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													if (current==null) {
            	                      														current = createModelElementForParent(grammarAccess.getDependencyObservableSemanticsRule());
            	                      													}
            	                      													set(
            	                      														current,
            	                      														"currency",
            	                      														lv_currency_10_0,
            	                      														"org.integratedmodelling.kim.Kim.Currency");
            	                      													afterParserOrEnumRuleCall();
            	                      												
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:16182:9: (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) )
            	            {
            	            // InternalKim.g:16182:9: (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) )
            	            // InternalKim.g:16183:10: otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) )
            	            {
            	            otherlv_11=(Token)match(input,114,FOLLOW_101); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_11, grammarAccess.getDependencyObservableSemanticsAccess().getPerKeyword_3_1_1_0());
            	              									
            	            }
            	            // InternalKim.g:16187:10: ( (lv_unit_12_0= ruleUnit ) )
            	            // InternalKim.g:16188:11: (lv_unit_12_0= ruleUnit )
            	            {
            	            // InternalKim.g:16188:11: (lv_unit_12_0= ruleUnit )
            	            // InternalKim.g:16189:12: lv_unit_12_0= ruleUnit
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getUnitUnitParserRuleCall_3_1_1_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_100);
            	            lv_unit_12_0=ruleUnit();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getDependencyObservableSemanticsRule());
            	              												}
            	              												set(
            	              													current,
            	              													"unit",
            	              													lv_unit_12_0,
            	              													"org.integratedmodelling.kim.Kim.Unit");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalKim.g:16213:4: ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) )
            	    {
            	    // InternalKim.g:16213:4: ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) )
            	    // InternalKim.g:16214:5: {...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDependencyObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2)");
            	    }
            	    // InternalKim.g:16214:126: ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) )
            	    // InternalKim.g:16215:6: ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2);
            	    // InternalKim.g:16218:9: ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) )
            	    // InternalKim.g:16218:10: {...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDependencyObservableSemantics", "true");
            	    }
            	    // InternalKim.g:16218:19: ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) )
            	    // InternalKim.g:16218:20: ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) )
            	    {
            	    // InternalKim.g:16218:20: ( (lv_from_13_0= ruleNumber ) )
            	    // InternalKim.g:16219:10: (lv_from_13_0= ruleNumber )
            	    {
            	    // InternalKim.g:16219:10: (lv_from_13_0= ruleNumber )
            	    // InternalKim.g:16220:11: lv_from_13_0= ruleNumber
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getFromNumberParserRuleCall_3_2_0_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_25);
            	    lv_from_13_0=ruleNumber();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getDependencyObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"from",
            	      												lv_from_13_0,
            	      												"org.integratedmodelling.kim.Kim.Number");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    otherlv_14=(Token)match(input,36,FOLLOW_38); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_14, grammarAccess.getDependencyObservableSemanticsAccess().getToKeyword_3_2_1());
            	      								
            	    }
            	    // InternalKim.g:16241:9: ( (lv_to_15_0= ruleNumber ) )
            	    // InternalKim.g:16242:10: (lv_to_15_0= ruleNumber )
            	    {
            	    // InternalKim.g:16242:10: (lv_to_15_0= ruleNumber )
            	    // InternalKim.g:16243:11: lv_to_15_0= ruleNumber
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getToNumberParserRuleCall_3_2_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_100);
            	    lv_to_15_0=ruleNumber();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getDependencyObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"to",
            	      												lv_to_15_0,
            	      												"org.integratedmodelling.kim.Kim.Number");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalKim.g:16266:4: ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) )
            	    {
            	    // InternalKim.g:16266:4: ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) )
            	    // InternalKim.g:16267:5: {...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDependencyObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3)");
            	    }
            	    // InternalKim.g:16267:126: ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) )
            	    // InternalKim.g:16268:6: ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3);
            	    // InternalKim.g:16271:9: ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) )
            	    // InternalKim.g:16271:10: {...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDependencyObservableSemantics", "true");
            	    }
            	    // InternalKim.g:16271:19: ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* )
            	    // InternalKim.g:16271:20: ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )*
            	    {
            	    // InternalKim.g:16271:20: ( (lv_valueOperators_16_0= ruleValueOperator ) )
            	    // InternalKim.g:16272:10: (lv_valueOperators_16_0= ruleValueOperator )
            	    {
            	    // InternalKim.g:16272:10: (lv_valueOperators_16_0= ruleValueOperator )
            	    // InternalKim.g:16273:11: lv_valueOperators_16_0= ruleValueOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_3_3_0_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_100);
            	    lv_valueOperators_16_0=ruleValueOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getDependencyObservableSemanticsRule());
            	      											}
            	      											add(
            	      												current,
            	      												"valueOperators",
            	      												lv_valueOperators_16_0,
            	      												"org.integratedmodelling.kim.Kim.ValueOperator");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:16290:9: ( (lv_valueOperators_17_0= ruleValueOperator ) )*
            	    loop333:
            	    do {
            	        int alt333=2;
            	        alt333 = dfa333.predict(input);
            	        switch (alt333) {
            	    	case 1 :
            	    	    // InternalKim.g:16291:10: (lv_valueOperators_17_0= ruleValueOperator )
            	    	    {
            	    	    // InternalKim.g:16291:10: (lv_valueOperators_17_0= ruleValueOperator )
            	    	    // InternalKim.g:16292:11: lv_valueOperators_17_0= ruleValueOperator
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      											newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_3_3_1_0());
            	    	      										
            	    	    }
            	    	    pushFollow(FOLLOW_100);
            	    	    lv_valueOperators_17_0=ruleValueOperator();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      											if (current==null) {
            	    	      												current = createModelElementForParent(grammarAccess.getDependencyObservableSemanticsRule());
            	    	      											}
            	    	      											add(
            	    	      												current,
            	    	      												"valueOperators",
            	    	      												lv_valueOperators_17_0,
            	    	      												"org.integratedmodelling.kim.Kim.ValueOperator");
            	    	      											afterParserOrEnumRuleCall();
            	    	      										
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop333;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalKim.g:16315:4: ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) )
            	    {
            	    // InternalKim.g:16315:4: ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) )
            	    // InternalKim.g:16316:5: {...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 4) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDependencyObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 4)");
            	    }
            	    // InternalKim.g:16316:126: ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) )
            	    // InternalKim.g:16317:6: ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 4);
            	    // InternalKim.g:16320:9: ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) )
            	    // InternalKim.g:16320:10: {...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDependencyObservableSemantics", "true");
            	    }
            	    // InternalKim.g:16320:19: ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' )
            	    int alt334=2;
            	    int LA334_0 = input.LA(1);

            	    if ( (LA334_0==115) ) {
            	        alt334=1;
            	    }
            	    else if ( (LA334_0==116) ) {
            	        alt334=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 334, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt334) {
            	        case 1 :
            	            // InternalKim.g:16320:20: ( (lv_optional_18_0= 'optional' ) )
            	            {
            	            // InternalKim.g:16320:20: ( (lv_optional_18_0= 'optional' ) )
            	            // InternalKim.g:16321:10: (lv_optional_18_0= 'optional' )
            	            {
            	            // InternalKim.g:16321:10: (lv_optional_18_0= 'optional' )
            	            // InternalKim.g:16322:11: lv_optional_18_0= 'optional'
            	            {
            	            lv_optional_18_0=(Token)match(input,115,FOLLOW_100); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(lv_optional_18_0, grammarAccess.getDependencyObservableSemanticsAccess().getOptionalOptionalKeyword_3_4_0_0());
            	              										
            	            }
            	            if ( state.backtracking==0 ) {

            	              											if (current==null) {
            	              												current = createModelElement(grammarAccess.getDependencyObservableSemanticsRule());
            	              											}
            	              											setWithLastConsumed(current, "optional", true, "optional");
            	              										
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:16335:9: otherlv_19= 'required'
            	            {
            	            otherlv_19=(Token)match(input,116,FOLLOW_100); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(otherlv_19, grammarAccess.getDependencyObservableSemanticsAccess().getRequiredKeyword_3_4_1());
            	              								
            	            }

            	            }
            	            break;

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalKim.g:16345:4: ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) )
            	    {
            	    // InternalKim.g:16345:4: ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) )
            	    // InternalKim.g:16346:5: {...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDependencyObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 5)");
            	    }
            	    // InternalKim.g:16346:126: ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) )
            	    // InternalKim.g:16347:6: ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 5);
            	    // InternalKim.g:16350:9: ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) )
            	    // InternalKim.g:16350:10: {...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDependencyObservableSemantics", "true");
            	    }
            	    // InternalKim.g:16350:19: (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) )
            	    // InternalKim.g:16350:20: otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) )
            	    {
            	    otherlv_20=(Token)match(input,117,FOLLOW_46); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_20, grammarAccess.getDependencyObservableSemanticsAccess().getNamedKeyword_3_5_0());
            	      								
            	    }
            	    // InternalKim.g:16354:9: ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) )
            	    // InternalKim.g:16355:10: ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) )
            	    {
            	    // InternalKim.g:16355:10: ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) )
            	    // InternalKim.g:16356:11: (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING )
            	    {
            	    // InternalKim.g:16356:11: (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING )
            	    int alt335=2;
            	    int LA335_0 = input.LA(1);

            	    if ( (LA335_0==RULE_LOWERCASE_ID) ) {
            	        alt335=1;
            	    }
            	    else if ( (LA335_0==RULE_STRING) ) {
            	        alt335=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 335, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt335) {
            	        case 1 :
            	            // InternalKim.g:16357:12: lv_name_21_1= RULE_LOWERCASE_ID
            	            {
            	            lv_name_21_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_100); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_name_21_1, grammarAccess.getDependencyObservableSemanticsAccess().getNameLOWERCASE_IDTerminalRuleCall_3_5_1_0_0());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getDependencyObservableSemanticsRule());
            	              												}
            	              												setWithLastConsumed(
            	              													current,
            	              													"name",
            	              													lv_name_21_1,
            	              													"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
            	              											
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:16372:12: lv_name_21_2= RULE_STRING
            	            {
            	            lv_name_21_2=(Token)match(input,RULE_STRING,FOLLOW_100); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_name_21_2, grammarAccess.getDependencyObservableSemanticsAccess().getNameSTRINGTerminalRuleCall_3_5_1_0_1());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getDependencyObservableSemanticsRule());
            	              												}
            	              												setWithLastConsumed(
            	              													current,
            	              													"name",
            	              													lv_name_21_2,
            	              													"org.eclipse.xtext.common.Terminals.STRING");
            	              											
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop336;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3());

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleDependencyObservableSemantics"


    // $ANTLR start "entryRuleAlternativeDependencyObservableSemantics"
    // InternalKim.g:16409:1: entryRuleAlternativeDependencyObservableSemantics returns [EObject current=null] : iv_ruleAlternativeDependencyObservableSemantics= ruleAlternativeDependencyObservableSemantics EOF ;
    public final EObject entryRuleAlternativeDependencyObservableSemantics() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAlternativeDependencyObservableSemantics = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3()
        	);

        try {
            // InternalKim.g:16413:2: (iv_ruleAlternativeDependencyObservableSemantics= ruleAlternativeDependencyObservableSemantics EOF )
            // InternalKim.g:16414:2: iv_ruleAlternativeDependencyObservableSemantics= ruleAlternativeDependencyObservableSemantics EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAlternativeDependencyObservableSemantics=ruleAlternativeDependencyObservableSemantics();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAlternativeDependencyObservableSemantics; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleAlternativeDependencyObservableSemantics"


    // $ANTLR start "ruleAlternativeDependencyObservableSemantics"
    // InternalKim.g:16423:1: ruleAlternativeDependencyObservableSemantics returns [EObject current=null] : ( ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) )* ) ) ) (otherlv_18= 'if' ( (lv_condition_19_0= RULE_EXPR ) ) )? ) ;
    public final EObject ruleAlternativeDependencyObservableSemantics() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_generic_2_0=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_11=null;
        Token otherlv_14=null;
        Token otherlv_18=null;
        Token lv_condition_19_0=null;
        EObject lv_value_0_0 = null;

        EObject lv_declaration_3_0 = null;

        AntlrDatatypeRuleToken lv_accordingTo_7_0 = null;

        EObject lv_unit_9_0 = null;

        EObject lv_currency_10_0 = null;

        EObject lv_unit_12_0 = null;

        EObject lv_from_13_0 = null;

        EObject lv_to_15_0 = null;

        EObject lv_valueOperators_16_0 = null;

        EObject lv_valueOperators_17_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3()
        	);

        try {
            // InternalKim.g:16432:2: ( ( ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) )* ) ) ) (otherlv_18= 'if' ( (lv_condition_19_0= RULE_EXPR ) ) )? ) )
            // InternalKim.g:16433:2: ( ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) )* ) ) ) (otherlv_18= 'if' ( (lv_condition_19_0= RULE_EXPR ) ) )? )
            {
            // InternalKim.g:16433:2: ( ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) )* ) ) ) (otherlv_18= 'if' ( (lv_condition_19_0= RULE_EXPR ) ) )? )
            // InternalKim.g:16434:3: ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) )* ) ) ) (otherlv_18= 'if' ( (lv_condition_19_0= RULE_EXPR ) ) )?
            {
            // InternalKim.g:16434:3: ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )?
            int alt337=2;
            alt337 = dfa337.predict(input);
            switch (alt337) {
                case 1 :
                    // InternalKim.g:16435:4: ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as'
                    {
                    // InternalKim.g:16435:4: ( (lv_value_0_0= ruleLiteralValueWithConcept ) )
                    // InternalKim.g:16436:5: (lv_value_0_0= ruleLiteralValueWithConcept )
                    {
                    // InternalKim.g:16436:5: (lv_value_0_0= ruleLiteralValueWithConcept )
                    // InternalKim.g:16437:6: lv_value_0_0= ruleLiteralValueWithConcept
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getValueLiteralValueWithConceptParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_11);
                    lv_value_0_0=ruleLiteralValueWithConcept();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAlternativeDependencyObservableSemanticsRule());
                      						}
                      						set(
                      							current,
                      							"value",
                      							lv_value_0_0,
                      							"org.integratedmodelling.kim.Kim.LiteralValueWithConcept");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,25,FOLLOW_99); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getAsKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:16459:3: ( (lv_generic_2_0= 'any' ) )?
            int alt338=2;
            int LA338_0 = input.LA(1);

            if ( (LA338_0==113) ) {
                alt338=1;
            }
            switch (alt338) {
                case 1 :
                    // InternalKim.g:16460:4: (lv_generic_2_0= 'any' )
                    {
                    // InternalKim.g:16460:4: (lv_generic_2_0= 'any' )
                    // InternalKim.g:16461:5: lv_generic_2_0= 'any'
                    {
                    lv_generic_2_0=(Token)match(input,113,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_generic_2_0, grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getGenericAnyKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getAlternativeDependencyObservableSemanticsRule());
                      					}
                      					setWithLastConsumed(current, "generic", true, "any");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:16473:3: ( (lv_declaration_3_0= ruleConceptDeclaration ) )
            // InternalKim.g:16474:4: (lv_declaration_3_0= ruleConceptDeclaration )
            {
            // InternalKim.g:16474:4: (lv_declaration_3_0= ruleConceptDeclaration )
            // InternalKim.g:16475:5: lv_declaration_3_0= ruleConceptDeclaration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getDeclarationConceptDeclarationParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_172);
            lv_declaration_3_0=ruleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAlternativeDependencyObservableSemanticsRule());
              					}
              					set(
              						current,
              						"declaration",
              						lv_declaration_3_0,
              						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:16492:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) )* ) ) )
            // InternalKim.g:16493:4: ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) )* ) )
            {
            // InternalKim.g:16493:4: ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) )* ) )
            // InternalKim.g:16494:5: ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3());
            // InternalKim.g:16497:5: ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) )* )
            // InternalKim.g:16498:6: ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) )*
            {
            // InternalKim.g:16498:6: ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) )*
            loop342:
            do {
                int alt342=5;
                alt342 = dfa342.predict(input);
                switch (alt342) {
            	case 1 :
            	    // InternalKim.g:16499:4: ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) )
            	    {
            	    // InternalKim.g:16499:4: ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) )
            	    // InternalKim.g:16500:5: {...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAlternativeDependencyObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 0)");
            	    }
            	    // InternalKim.g:16500:137: ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) )
            	    // InternalKim.g:16501:6: ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 0);
            	    // InternalKim.g:16504:9: ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) )
            	    // InternalKim.g:16504:10: {...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAlternativeDependencyObservableSemantics", "true");
            	    }
            	    // InternalKim.g:16504:19: (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) )
            	    // InternalKim.g:16504:20: otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) )
            	    {
            	    otherlv_5=(Token)match(input,35,FOLLOW_25); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_5, grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getAccordingKeyword_3_0_0());
            	      								
            	    }
            	    otherlv_6=(Token)match(input,36,FOLLOW_26); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_6, grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getToKeyword_3_0_1());
            	      								
            	    }
            	    // InternalKim.g:16512:9: ( (lv_accordingTo_7_0= rulePropertyId ) )
            	    // InternalKim.g:16513:10: (lv_accordingTo_7_0= rulePropertyId )
            	    {
            	    // InternalKim.g:16513:10: (lv_accordingTo_7_0= rulePropertyId )
            	    // InternalKim.g:16514:11: lv_accordingTo_7_0= rulePropertyId
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getAccordingToPropertyIdParserRuleCall_3_0_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_172);
            	    lv_accordingTo_7_0=rulePropertyId();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getAlternativeDependencyObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"accordingTo",
            	      												lv_accordingTo_7_0,
            	      												"org.integratedmodelling.kim.Kim.PropertyId");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKim.g:16537:4: ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) )
            	    {
            	    // InternalKim.g:16537:4: ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) )
            	    // InternalKim.g:16538:5: {...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAlternativeDependencyObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 1)");
            	    }
            	    // InternalKim.g:16538:137: ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) )
            	    // InternalKim.g:16539:6: ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 1);
            	    // InternalKim.g:16542:9: ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) )
            	    // InternalKim.g:16542:10: {...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAlternativeDependencyObservableSemantics", "true");
            	    }
            	    // InternalKim.g:16542:19: ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) )
            	    int alt340=2;
            	    int LA340_0 = input.LA(1);

            	    if ( (LA340_0==48) ) {
            	        alt340=1;
            	    }
            	    else if ( (LA340_0==114) ) {
            	        alt340=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 340, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt340) {
            	        case 1 :
            	            // InternalKim.g:16542:20: (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) )
            	            {
            	            // InternalKim.g:16542:20: (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) )
            	            // InternalKim.g:16543:10: otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) )
            	            {
            	            otherlv_8=(Token)match(input,48,FOLLOW_173); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_8, grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getInKeyword_3_1_0_0());
            	              									
            	            }
            	            // InternalKim.g:16547:10: ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) )
            	            int alt339=2;
            	            int LA339_0 = input.LA(1);

            	            if ( (LA339_0==EOF||LA339_0==RULE_LOWERCASE_ID||(LA339_0>=RULE_CAMELCASE_ID && LA339_0<=RULE_INT)||LA339_0==RULE_BACKCASE_ID||LA339_0==27||LA339_0==35||LA339_0==38||(LA339_0>=40 && LA339_0<=41)||LA339_0==44||LA339_0==48||LA339_0==55||(LA339_0>=76 && LA339_0<=89)||LA339_0==108||LA339_0==114||(LA339_0>=119 && LA339_0<=122)||(LA339_0>=251 && LA339_0<=252)||LA339_0==259) ) {
            	                alt339=1;
            	            }
            	            else if ( (LA339_0==RULE_UPPERCASE_ID) ) {
            	                int LA339_2 = input.LA(2);

            	                if ( (LA339_2==EOF||LA339_2==RULE_INT||LA339_2==27||LA339_2==35||(LA339_2>=40 && LA339_2<=41)||LA339_2==44||LA339_2==48||LA339_2==55||(LA339_2>=76 && LA339_2<=89)||LA339_2==108||LA339_2==114||(LA339_2>=119 && LA339_2<=122)||(LA339_2>=251 && LA339_2<=252)||LA339_2==259) ) {
            	                    alt339=1;
            	                }
            	                else if ( (LA339_2==250) ) {
            	                    alt339=2;
            	                }
            	                else {
            	                    if (state.backtracking>0) {state.failed=true; return current;}
            	                    NoViableAltException nvae =
            	                        new NoViableAltException("", 339, 2, input);

            	                    throw nvae;
            	                }
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 339, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt339) {
            	                case 1 :
            	                    // InternalKim.g:16548:11: ( (lv_unit_9_0= ruleUnit ) )
            	                    {
            	                    // InternalKim.g:16548:11: ( (lv_unit_9_0= ruleUnit ) )
            	                    // InternalKim.g:16549:12: (lv_unit_9_0= ruleUnit )
            	                    {
            	                    // InternalKim.g:16549:12: (lv_unit_9_0= ruleUnit )
            	                    // InternalKim.g:16550:13: lv_unit_9_0= ruleUnit
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      													newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnitUnitParserRuleCall_3_1_0_1_0_0());
            	                      												
            	                    }
            	                    pushFollow(FOLLOW_172);
            	                    lv_unit_9_0=ruleUnit();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													if (current==null) {
            	                      														current = createModelElementForParent(grammarAccess.getAlternativeDependencyObservableSemanticsRule());
            	                      													}
            	                      													set(
            	                      														current,
            	                      														"unit",
            	                      														lv_unit_9_0,
            	                      														"org.integratedmodelling.kim.Kim.Unit");
            	                      													afterParserOrEnumRuleCall();
            	                      												
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalKim.g:16568:11: ( (lv_currency_10_0= ruleCurrency ) )
            	                    {
            	                    // InternalKim.g:16568:11: ( (lv_currency_10_0= ruleCurrency ) )
            	                    // InternalKim.g:16569:12: (lv_currency_10_0= ruleCurrency )
            	                    {
            	                    // InternalKim.g:16569:12: (lv_currency_10_0= ruleCurrency )
            	                    // InternalKim.g:16570:13: lv_currency_10_0= ruleCurrency
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      													newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getCurrencyCurrencyParserRuleCall_3_1_0_1_1_0());
            	                      												
            	                    }
            	                    pushFollow(FOLLOW_172);
            	                    lv_currency_10_0=ruleCurrency();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													if (current==null) {
            	                      														current = createModelElementForParent(grammarAccess.getAlternativeDependencyObservableSemanticsRule());
            	                      													}
            	                      													set(
            	                      														current,
            	                      														"currency",
            	                      														lv_currency_10_0,
            	                      														"org.integratedmodelling.kim.Kim.Currency");
            	                      													afterParserOrEnumRuleCall();
            	                      												
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:16590:9: (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) )
            	            {
            	            // InternalKim.g:16590:9: (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) )
            	            // InternalKim.g:16591:10: otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) )
            	            {
            	            otherlv_11=(Token)match(input,114,FOLLOW_174); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_11, grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getPerKeyword_3_1_1_0());
            	              									
            	            }
            	            // InternalKim.g:16595:10: ( (lv_unit_12_0= ruleUnit ) )
            	            // InternalKim.g:16596:11: (lv_unit_12_0= ruleUnit )
            	            {
            	            // InternalKim.g:16596:11: (lv_unit_12_0= ruleUnit )
            	            // InternalKim.g:16597:12: lv_unit_12_0= ruleUnit
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnitUnitParserRuleCall_3_1_1_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_172);
            	            lv_unit_12_0=ruleUnit();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getAlternativeDependencyObservableSemanticsRule());
            	              												}
            	              												set(
            	              													current,
            	              													"unit",
            	              													lv_unit_12_0,
            	              													"org.integratedmodelling.kim.Kim.Unit");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalKim.g:16621:4: ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) )
            	    {
            	    // InternalKim.g:16621:4: ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) )
            	    // InternalKim.g:16622:5: {...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAlternativeDependencyObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2)");
            	    }
            	    // InternalKim.g:16622:137: ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) )
            	    // InternalKim.g:16623:6: ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2);
            	    // InternalKim.g:16626:9: ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) )
            	    // InternalKim.g:16626:10: {...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAlternativeDependencyObservableSemantics", "true");
            	    }
            	    // InternalKim.g:16626:19: ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) )
            	    // InternalKim.g:16626:20: ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) )
            	    {
            	    // InternalKim.g:16626:20: ( (lv_from_13_0= ruleNumber ) )
            	    // InternalKim.g:16627:10: (lv_from_13_0= ruleNumber )
            	    {
            	    // InternalKim.g:16627:10: (lv_from_13_0= ruleNumber )
            	    // InternalKim.g:16628:11: lv_from_13_0= ruleNumber
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getFromNumberParserRuleCall_3_2_0_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_25);
            	    lv_from_13_0=ruleNumber();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getAlternativeDependencyObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"from",
            	      												lv_from_13_0,
            	      												"org.integratedmodelling.kim.Kim.Number");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    otherlv_14=(Token)match(input,36,FOLLOW_38); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_14, grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getToKeyword_3_2_1());
            	      								
            	    }
            	    // InternalKim.g:16649:9: ( (lv_to_15_0= ruleNumber ) )
            	    // InternalKim.g:16650:10: (lv_to_15_0= ruleNumber )
            	    {
            	    // InternalKim.g:16650:10: (lv_to_15_0= ruleNumber )
            	    // InternalKim.g:16651:11: lv_to_15_0= ruleNumber
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getToNumberParserRuleCall_3_2_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_172);
            	    lv_to_15_0=ruleNumber();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getAlternativeDependencyObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"to",
            	      												lv_to_15_0,
            	      												"org.integratedmodelling.kim.Kim.Number");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalKim.g:16674:4: ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) )
            	    {
            	    // InternalKim.g:16674:4: ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) )
            	    // InternalKim.g:16675:5: {...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAlternativeDependencyObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3)");
            	    }
            	    // InternalKim.g:16675:137: ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) )
            	    // InternalKim.g:16676:6: ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3);
            	    // InternalKim.g:16679:9: ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) )
            	    // InternalKim.g:16679:10: {...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAlternativeDependencyObservableSemantics", "true");
            	    }
            	    // InternalKim.g:16679:19: ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* )
            	    // InternalKim.g:16679:20: ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )*
            	    {
            	    // InternalKim.g:16679:20: ( (lv_valueOperators_16_0= ruleValueOperator ) )
            	    // InternalKim.g:16680:10: (lv_valueOperators_16_0= ruleValueOperator )
            	    {
            	    // InternalKim.g:16680:10: (lv_valueOperators_16_0= ruleValueOperator )
            	    // InternalKim.g:16681:11: lv_valueOperators_16_0= ruleValueOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_3_3_0_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_172);
            	    lv_valueOperators_16_0=ruleValueOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getAlternativeDependencyObservableSemanticsRule());
            	      											}
            	      											add(
            	      												current,
            	      												"valueOperators",
            	      												lv_valueOperators_16_0,
            	      												"org.integratedmodelling.kim.Kim.ValueOperator");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:16698:9: ( (lv_valueOperators_17_0= ruleValueOperator ) )*
            	    loop341:
            	    do {
            	        int alt341=2;
            	        alt341 = dfa341.predict(input);
            	        switch (alt341) {
            	    	case 1 :
            	    	    // InternalKim.g:16699:10: (lv_valueOperators_17_0= ruleValueOperator )
            	    	    {
            	    	    // InternalKim.g:16699:10: (lv_valueOperators_17_0= ruleValueOperator )
            	    	    // InternalKim.g:16700:11: lv_valueOperators_17_0= ruleValueOperator
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      											newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_3_3_1_0());
            	    	      										
            	    	    }
            	    	    pushFollow(FOLLOW_172);
            	    	    lv_valueOperators_17_0=ruleValueOperator();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      											if (current==null) {
            	    	      												current = createModelElementForParent(grammarAccess.getAlternativeDependencyObservableSemanticsRule());
            	    	      											}
            	    	      											add(
            	    	      												current,
            	    	      												"valueOperators",
            	    	      												lv_valueOperators_17_0,
            	    	      												"org.integratedmodelling.kim.Kim.ValueOperator");
            	    	      											afterParserOrEnumRuleCall();
            	    	      										
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop341;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop342;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3());

            }

            // InternalKim.g:16730:3: (otherlv_18= 'if' ( (lv_condition_19_0= RULE_EXPR ) ) )?
            int alt343=2;
            int LA343_0 = input.LA(1);

            if ( (LA343_0==44) ) {
                alt343=1;
            }
            switch (alt343) {
                case 1 :
                    // InternalKim.g:16731:4: otherlv_18= 'if' ( (lv_condition_19_0= RULE_EXPR ) )
                    {
                    otherlv_18=(Token)match(input,44,FOLLOW_175); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_18, grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getIfKeyword_4_0());
                      			
                    }
                    // InternalKim.g:16735:4: ( (lv_condition_19_0= RULE_EXPR ) )
                    // InternalKim.g:16736:5: (lv_condition_19_0= RULE_EXPR )
                    {
                    // InternalKim.g:16736:5: (lv_condition_19_0= RULE_EXPR )
                    // InternalKim.g:16737:6: lv_condition_19_0= RULE_EXPR
                    {
                    lv_condition_19_0=(Token)match(input,RULE_EXPR,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_condition_19_0, grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getConditionEXPRTerminalRuleCall_4_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getAlternativeDependencyObservableSemanticsRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"condition",
                      							lv_condition_19_0,
                      							"org.integratedmodelling.kim.Kim.EXPR");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleAlternativeDependencyObservableSemantics"


    // $ANTLR start "entryRuleNamedObservableSemantics"
    // InternalKim.g:16761:1: entryRuleNamedObservableSemantics returns [EObject current=null] : iv_ruleNamedObservableSemantics= ruleNamedObservableSemantics EOF ;
    public final EObject entryRuleNamedObservableSemantics() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNamedObservableSemantics = null;


        try {
            // InternalKim.g:16761:65: (iv_ruleNamedObservableSemantics= ruleNamedObservableSemantics EOF )
            // InternalKim.g:16762:2: iv_ruleNamedObservableSemantics= ruleNamedObservableSemantics EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNamedObservableSemanticsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNamedObservableSemantics=ruleNamedObservableSemantics();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNamedObservableSemantics; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNamedObservableSemantics"


    // $ANTLR start "ruleNamedObservableSemantics"
    // InternalKim.g:16768:1: ruleNamedObservableSemantics returns [EObject current=null] : ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) otherlv_1= 'named' ( ( (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID | lv_name_2_3= RULE_STRING ) ) ) ) ;
    public final EObject ruleNamedObservableSemantics() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_name_2_1=null;
        Token lv_name_2_2=null;
        Token lv_name_2_3=null;
        EObject lv_declaration_0_0 = null;



        	enterRule();

        try {
            // InternalKim.g:16774:2: ( ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) otherlv_1= 'named' ( ( (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID | lv_name_2_3= RULE_STRING ) ) ) ) )
            // InternalKim.g:16775:2: ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) otherlv_1= 'named' ( ( (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID | lv_name_2_3= RULE_STRING ) ) ) )
            {
            // InternalKim.g:16775:2: ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) otherlv_1= 'named' ( ( (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID | lv_name_2_3= RULE_STRING ) ) ) )
            // InternalKim.g:16776:3: ( (lv_declaration_0_0= ruleConceptDeclaration ) ) otherlv_1= 'named' ( ( (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID | lv_name_2_3= RULE_STRING ) ) )
            {
            // InternalKim.g:16776:3: ( (lv_declaration_0_0= ruleConceptDeclaration ) )
            // InternalKim.g:16777:4: (lv_declaration_0_0= ruleConceptDeclaration )
            {
            // InternalKim.g:16777:4: (lv_declaration_0_0= ruleConceptDeclaration )
            // InternalKim.g:16778:5: lv_declaration_0_0= ruleConceptDeclaration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getNamedObservableSemanticsAccess().getDeclarationConceptDeclarationParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_176);
            lv_declaration_0_0=ruleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getNamedObservableSemanticsRule());
              					}
              					set(
              						current,
              						"declaration",
              						lv_declaration_0_0,
              						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,117,FOLLOW_177); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getNamedObservableSemanticsAccess().getNamedKeyword_1());
              		
            }
            // InternalKim.g:16799:3: ( ( (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID | lv_name_2_3= RULE_STRING ) ) )
            // InternalKim.g:16800:4: ( (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID | lv_name_2_3= RULE_STRING ) )
            {
            // InternalKim.g:16800:4: ( (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID | lv_name_2_3= RULE_STRING ) )
            // InternalKim.g:16801:5: (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID | lv_name_2_3= RULE_STRING )
            {
            // InternalKim.g:16801:5: (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID | lv_name_2_3= RULE_STRING )
            int alt344=3;
            switch ( input.LA(1) ) {
            case RULE_LOWERCASE_ID:
                {
                alt344=1;
                }
                break;
            case RULE_LOWERCASE_DASHID:
                {
                alt344=2;
                }
                break;
            case RULE_STRING:
                {
                alt344=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 344, 0, input);

                throw nvae;
            }

            switch (alt344) {
                case 1 :
                    // InternalKim.g:16802:6: lv_name_2_1= RULE_LOWERCASE_ID
                    {
                    lv_name_2_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_2_1, grammarAccess.getNamedObservableSemanticsAccess().getNameLOWERCASE_IDTerminalRuleCall_2_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getNamedObservableSemanticsRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"name",
                      							lv_name_2_1,
                      							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                      					
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:16817:6: lv_name_2_2= RULE_LOWERCASE_DASHID
                    {
                    lv_name_2_2=(Token)match(input,RULE_LOWERCASE_DASHID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_2_2, grammarAccess.getNamedObservableSemanticsAccess().getNameLOWERCASE_DASHIDTerminalRuleCall_2_0_1());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getNamedObservableSemanticsRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"name",
                      							lv_name_2_2,
                      							"org.integratedmodelling.kim.Kim.LOWERCASE_DASHID");
                      					
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:16832:6: lv_name_2_3= RULE_STRING
                    {
                    lv_name_2_3=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_2_3, grammarAccess.getNamedObservableSemanticsAccess().getNameSTRINGTerminalRuleCall_2_0_2());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getNamedObservableSemanticsRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"name",
                      							lv_name_2_3,
                      							"org.eclipse.xtext.common.Terminals.STRING");
                      					
                    }

                    }
                    break;

            }


            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNamedObservableSemantics"


    // $ANTLR start "entryRuleUnitElement"
    // InternalKim.g:16853:1: entryRuleUnitElement returns [EObject current=null] : iv_ruleUnitElement= ruleUnitElement EOF ;
    public final EObject entryRuleUnitElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnitElement = null;


        try {
            // InternalKim.g:16853:52: (iv_ruleUnitElement= ruleUnitElement EOF )
            // InternalKim.g:16854:2: iv_ruleUnitElement= ruleUnitElement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnitElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUnitElement=ruleUnitElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnitElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnitElement"


    // $ANTLR start "ruleUnitElement"
    // InternalKim.g:16860:1: ruleUnitElement returns [EObject current=null] : ( ( ( (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID | lv_id_0_3= RULE_UPPERCASE_ID | lv_id_0_4= RULE_BACKCASE_ID ) ) ) | (otherlv_1= '(' ( (lv_unit_2_0= ruleUnit ) ) otherlv_3= ')' ) ) ;
    public final EObject ruleUnitElement() throws RecognitionException {
        EObject current = null;

        Token lv_id_0_1=null;
        Token lv_id_0_2=null;
        Token lv_id_0_3=null;
        Token lv_id_0_4=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_unit_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:16866:2: ( ( ( ( (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID | lv_id_0_3= RULE_UPPERCASE_ID | lv_id_0_4= RULE_BACKCASE_ID ) ) ) | (otherlv_1= '(' ( (lv_unit_2_0= ruleUnit ) ) otherlv_3= ')' ) ) )
            // InternalKim.g:16867:2: ( ( ( (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID | lv_id_0_3= RULE_UPPERCASE_ID | lv_id_0_4= RULE_BACKCASE_ID ) ) ) | (otherlv_1= '(' ( (lv_unit_2_0= ruleUnit ) ) otherlv_3= ')' ) )
            {
            // InternalKim.g:16867:2: ( ( ( (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID | lv_id_0_3= RULE_UPPERCASE_ID | lv_id_0_4= RULE_BACKCASE_ID ) ) ) | (otherlv_1= '(' ( (lv_unit_2_0= ruleUnit ) ) otherlv_3= ')' ) )
            int alt346=2;
            int LA346_0 = input.LA(1);

            if ( ((LA346_0>=RULE_LOWERCASE_ID && LA346_0<=RULE_UPPERCASE_ID)||LA346_0==RULE_CAMELCASE_ID||LA346_0==RULE_BACKCASE_ID) ) {
                alt346=1;
            }
            else if ( (LA346_0==38) ) {
                alt346=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 346, 0, input);

                throw nvae;
            }
            switch (alt346) {
                case 1 :
                    // InternalKim.g:16868:3: ( ( (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID | lv_id_0_3= RULE_UPPERCASE_ID | lv_id_0_4= RULE_BACKCASE_ID ) ) )
                    {
                    // InternalKim.g:16868:3: ( ( (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID | lv_id_0_3= RULE_UPPERCASE_ID | lv_id_0_4= RULE_BACKCASE_ID ) ) )
                    // InternalKim.g:16869:4: ( (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID | lv_id_0_3= RULE_UPPERCASE_ID | lv_id_0_4= RULE_BACKCASE_ID ) )
                    {
                    // InternalKim.g:16869:4: ( (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID | lv_id_0_3= RULE_UPPERCASE_ID | lv_id_0_4= RULE_BACKCASE_ID ) )
                    // InternalKim.g:16870:5: (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID | lv_id_0_3= RULE_UPPERCASE_ID | lv_id_0_4= RULE_BACKCASE_ID )
                    {
                    // InternalKim.g:16870:5: (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID | lv_id_0_3= RULE_UPPERCASE_ID | lv_id_0_4= RULE_BACKCASE_ID )
                    int alt345=4;
                    switch ( input.LA(1) ) {
                    case RULE_CAMELCASE_ID:
                        {
                        alt345=1;
                        }
                        break;
                    case RULE_LOWERCASE_ID:
                        {
                        alt345=2;
                        }
                        break;
                    case RULE_UPPERCASE_ID:
                        {
                        alt345=3;
                        }
                        break;
                    case RULE_BACKCASE_ID:
                        {
                        alt345=4;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 345, 0, input);

                        throw nvae;
                    }

                    switch (alt345) {
                        case 1 :
                            // InternalKim.g:16871:6: lv_id_0_1= RULE_CAMELCASE_ID
                            {
                            lv_id_0_1=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_0_1, grammarAccess.getUnitElementAccess().getIdCAMELCASE_IDTerminalRuleCall_0_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getUnitElementRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_0_1,
                              							"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:16886:6: lv_id_0_2= RULE_LOWERCASE_ID
                            {
                            lv_id_0_2=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_0_2, grammarAccess.getUnitElementAccess().getIdLOWERCASE_IDTerminalRuleCall_0_0_1());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getUnitElementRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_0_2,
                              							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 3 :
                            // InternalKim.g:16901:6: lv_id_0_3= RULE_UPPERCASE_ID
                            {
                            lv_id_0_3=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_0_3, grammarAccess.getUnitElementAccess().getIdUPPERCASE_IDTerminalRuleCall_0_0_2());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getUnitElementRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_0_3,
                              							"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 4 :
                            // InternalKim.g:16916:6: lv_id_0_4= RULE_BACKCASE_ID
                            {
                            lv_id_0_4=(Token)match(input,RULE_BACKCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_0_4, grammarAccess.getUnitElementAccess().getIdBACKCASE_IDTerminalRuleCall_0_0_3());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getUnitElementRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_0_4,
                              							"org.integratedmodelling.kim.Kim.BACKCASE_ID");
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:16934:3: (otherlv_1= '(' ( (lv_unit_2_0= ruleUnit ) ) otherlv_3= ')' )
                    {
                    // InternalKim.g:16934:3: (otherlv_1= '(' ( (lv_unit_2_0= ruleUnit ) ) otherlv_3= ')' )
                    // InternalKim.g:16935:4: otherlv_1= '(' ( (lv_unit_2_0= ruleUnit ) ) otherlv_3= ')'
                    {
                    otherlv_1=(Token)match(input,38,FOLLOW_178); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getUnitElementAccess().getLeftParenthesisKeyword_1_0());
                      			
                    }
                    // InternalKim.g:16939:4: ( (lv_unit_2_0= ruleUnit ) )
                    // InternalKim.g:16940:5: (lv_unit_2_0= ruleUnit )
                    {
                    // InternalKim.g:16940:5: (lv_unit_2_0= ruleUnit )
                    // InternalKim.g:16941:6: lv_unit_2_0= ruleUnit
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getUnitElementAccess().getUnitUnitParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_96);
                    lv_unit_2_0=ruleUnit();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getUnitElementRule());
                      						}
                      						set(
                      							current,
                      							"unit",
                      							lv_unit_2_0,
                      							"org.integratedmodelling.kim.Kim.Unit");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,41,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getUnitElementAccess().getRightParenthesisKeyword_1_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnitElement"


    // $ANTLR start "entryRuleREL_OPERATOR"
    // InternalKim.g:16967:1: entryRuleREL_OPERATOR returns [EObject current=null] : iv_ruleREL_OPERATOR= ruleREL_OPERATOR EOF ;
    public final EObject entryRuleREL_OPERATOR() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleREL_OPERATOR = null;


        try {
            // InternalKim.g:16967:53: (iv_ruleREL_OPERATOR= ruleREL_OPERATOR EOF )
            // InternalKim.g:16968:2: iv_ruleREL_OPERATOR= ruleREL_OPERATOR EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getREL_OPERATORRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleREL_OPERATOR=ruleREL_OPERATOR();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleREL_OPERATOR; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleREL_OPERATOR"


    // $ANTLR start "ruleREL_OPERATOR"
    // InternalKim.g:16974:1: ruleREL_OPERATOR returns [EObject current=null] : ( ( (lv_gt_0_0= '>' ) ) | ( (lv_lt_1_0= '<' ) ) | ( (lv_eq_2_0= '=' ) ) | ( (lv_ne_3_0= '!=' ) ) | ( (lv_le_4_0= '<=' ) ) | ( (lv_ge_5_0= '>=' ) ) ) ;
    public final EObject ruleREL_OPERATOR() throws RecognitionException {
        EObject current = null;

        Token lv_gt_0_0=null;
        Token lv_lt_1_0=null;
        Token lv_eq_2_0=null;
        Token lv_ne_3_0=null;
        Token lv_le_4_0=null;
        Token lv_ge_5_0=null;


        	enterRule();

        try {
            // InternalKim.g:16980:2: ( ( ( (lv_gt_0_0= '>' ) ) | ( (lv_lt_1_0= '<' ) ) | ( (lv_eq_2_0= '=' ) ) | ( (lv_ne_3_0= '!=' ) ) | ( (lv_le_4_0= '<=' ) ) | ( (lv_ge_5_0= '>=' ) ) ) )
            // InternalKim.g:16981:2: ( ( (lv_gt_0_0= '>' ) ) | ( (lv_lt_1_0= '<' ) ) | ( (lv_eq_2_0= '=' ) ) | ( (lv_ne_3_0= '!=' ) ) | ( (lv_le_4_0= '<=' ) ) | ( (lv_ge_5_0= '>=' ) ) )
            {
            // InternalKim.g:16981:2: ( ( (lv_gt_0_0= '>' ) ) | ( (lv_lt_1_0= '<' ) ) | ( (lv_eq_2_0= '=' ) ) | ( (lv_ne_3_0= '!=' ) ) | ( (lv_le_4_0= '<=' ) ) | ( (lv_ge_5_0= '>=' ) ) )
            int alt347=6;
            switch ( input.LA(1) ) {
            case 76:
                {
                alt347=1;
                }
                break;
            case 79:
                {
                alt347=2;
                }
                break;
            case 82:
                {
                alt347=3;
                }
                break;
            case 85:
                {
                alt347=4;
                }
                break;
            case 78:
                {
                alt347=5;
                }
                break;
            case 77:
                {
                alt347=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 347, 0, input);

                throw nvae;
            }

            switch (alt347) {
                case 1 :
                    // InternalKim.g:16982:3: ( (lv_gt_0_0= '>' ) )
                    {
                    // InternalKim.g:16982:3: ( (lv_gt_0_0= '>' ) )
                    // InternalKim.g:16983:4: (lv_gt_0_0= '>' )
                    {
                    // InternalKim.g:16983:4: (lv_gt_0_0= '>' )
                    // InternalKim.g:16984:5: lv_gt_0_0= '>'
                    {
                    lv_gt_0_0=(Token)match(input,76,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_gt_0_0, grammarAccess.getREL_OPERATORAccess().getGtGreaterThanSignKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getREL_OPERATORRule());
                      					}
                      					setWithLastConsumed(current, "gt", true, ">");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:16997:3: ( (lv_lt_1_0= '<' ) )
                    {
                    // InternalKim.g:16997:3: ( (lv_lt_1_0= '<' ) )
                    // InternalKim.g:16998:4: (lv_lt_1_0= '<' )
                    {
                    // InternalKim.g:16998:4: (lv_lt_1_0= '<' )
                    // InternalKim.g:16999:5: lv_lt_1_0= '<'
                    {
                    lv_lt_1_0=(Token)match(input,79,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_lt_1_0, grammarAccess.getREL_OPERATORAccess().getLtLessThanSignKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getREL_OPERATORRule());
                      					}
                      					setWithLastConsumed(current, "lt", true, "<");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:17012:3: ( (lv_eq_2_0= '=' ) )
                    {
                    // InternalKim.g:17012:3: ( (lv_eq_2_0= '=' ) )
                    // InternalKim.g:17013:4: (lv_eq_2_0= '=' )
                    {
                    // InternalKim.g:17013:4: (lv_eq_2_0= '=' )
                    // InternalKim.g:17014:5: lv_eq_2_0= '='
                    {
                    lv_eq_2_0=(Token)match(input,82,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_eq_2_0, grammarAccess.getREL_OPERATORAccess().getEqEqualsSignKeyword_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getREL_OPERATORRule());
                      					}
                      					setWithLastConsumed(current, "eq", true, "=");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:17027:3: ( (lv_ne_3_0= '!=' ) )
                    {
                    // InternalKim.g:17027:3: ( (lv_ne_3_0= '!=' ) )
                    // InternalKim.g:17028:4: (lv_ne_3_0= '!=' )
                    {
                    // InternalKim.g:17028:4: (lv_ne_3_0= '!=' )
                    // InternalKim.g:17029:5: lv_ne_3_0= '!='
                    {
                    lv_ne_3_0=(Token)match(input,85,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_ne_3_0, grammarAccess.getREL_OPERATORAccess().getNeExclamationMarkEqualsSignKeyword_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getREL_OPERATORRule());
                      					}
                      					setWithLastConsumed(current, "ne", true, "!=");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:17042:3: ( (lv_le_4_0= '<=' ) )
                    {
                    // InternalKim.g:17042:3: ( (lv_le_4_0= '<=' ) )
                    // InternalKim.g:17043:4: (lv_le_4_0= '<=' )
                    {
                    // InternalKim.g:17043:4: (lv_le_4_0= '<=' )
                    // InternalKim.g:17044:5: lv_le_4_0= '<='
                    {
                    lv_le_4_0=(Token)match(input,78,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_le_4_0, grammarAccess.getREL_OPERATORAccess().getLeLessThanSignEqualsSignKeyword_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getREL_OPERATORRule());
                      					}
                      					setWithLastConsumed(current, "le", true, "<=");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:17057:3: ( (lv_ge_5_0= '>=' ) )
                    {
                    // InternalKim.g:17057:3: ( (lv_ge_5_0= '>=' ) )
                    // InternalKim.g:17058:4: (lv_ge_5_0= '>=' )
                    {
                    // InternalKim.g:17058:4: (lv_ge_5_0= '>=' )
                    // InternalKim.g:17059:5: lv_ge_5_0= '>='
                    {
                    lv_ge_5_0=(Token)match(input,77,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_ge_5_0, grammarAccess.getREL_OPERATORAccess().getGeGreaterThanSignEqualsSignKeyword_5_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getREL_OPERATORRule());
                      					}
                      					setWithLastConsumed(current, "ge", true, ">=");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleREL_OPERATOR"


    // $ANTLR start "entryRuleUnit"
    // InternalKim.g:17075:1: entryRuleUnit returns [EObject current=null] : iv_ruleUnit= ruleUnit EOF ;
    public final EObject entryRuleUnit() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnit = null;


        try {
            // InternalKim.g:17075:45: (iv_ruleUnit= ruleUnit EOF )
            // InternalKim.g:17076:2: iv_ruleUnit= ruleUnit EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnitRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUnit=ruleUnit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnit; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnit"


    // $ANTLR start "ruleUnit"
    // InternalKim.g:17082:1: ruleUnit returns [EObject current=null] : ( () ( (lv_root_1_0= ruleUnitElement ) )? ( ( ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_2_0= ruleUnitOp ) ) ) ( (lv_units_3_0= ruleUnitElement ) ) )* ) ;
    public final EObject ruleUnit() throws RecognitionException {
        EObject current = null;

        EObject lv_root_1_0 = null;

        Enumerator lv_connectors_2_0 = null;

        EObject lv_units_3_0 = null;



        	enterRule();

        try {
            // InternalKim.g:17088:2: ( ( () ( (lv_root_1_0= ruleUnitElement ) )? ( ( ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_2_0= ruleUnitOp ) ) ) ( (lv_units_3_0= ruleUnitElement ) ) )* ) )
            // InternalKim.g:17089:2: ( () ( (lv_root_1_0= ruleUnitElement ) )? ( ( ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_2_0= ruleUnitOp ) ) ) ( (lv_units_3_0= ruleUnitElement ) ) )* )
            {
            // InternalKim.g:17089:2: ( () ( (lv_root_1_0= ruleUnitElement ) )? ( ( ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_2_0= ruleUnitOp ) ) ) ( (lv_units_3_0= ruleUnitElement ) ) )* )
            // InternalKim.g:17090:3: () ( (lv_root_1_0= ruleUnitElement ) )? ( ( ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_2_0= ruleUnitOp ) ) ) ( (lv_units_3_0= ruleUnitElement ) ) )*
            {
            // InternalKim.g:17090:3: ()
            // InternalKim.g:17091:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getUnitAccess().getUnitAction_0(),
              					current);
              			
            }

            }

            // InternalKim.g:17100:3: ( (lv_root_1_0= ruleUnitElement ) )?
            int alt348=2;
            alt348 = dfa348.predict(input);
            switch (alt348) {
                case 1 :
                    // InternalKim.g:17101:4: (lv_root_1_0= ruleUnitElement )
                    {
                    // InternalKim.g:17101:4: (lv_root_1_0= ruleUnitElement )
                    // InternalKim.g:17102:5: lv_root_1_0= ruleUnitElement
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getUnitAccess().getRootUnitElementParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_179);
                    lv_root_1_0=ruleUnitElement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getUnitRule());
                      					}
                      					set(
                      						current,
                      						"root",
                      						lv_root_1_0,
                      						"org.integratedmodelling.kim.Kim.UnitElement");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:17119:3: ( ( ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_2_0= ruleUnitOp ) ) ) ( (lv_units_3_0= ruleUnitElement ) ) )*
            loop349:
            do {
                int alt349=2;
                int LA349_0 = input.LA(1);

                if ( (LA349_0==40) ) {
                    int LA349_2 = input.LA(2);

                    if ( ((LA349_2>=RULE_LOWERCASE_ID && LA349_2<=RULE_UPPERCASE_ID)||LA349_2==RULE_CAMELCASE_ID||LA349_2==RULE_BACKCASE_ID||LA349_2==38) ) {
                        alt349=1;
                    }


                }
                else if ( (LA349_0==108||LA349_0==259) ) {
                    alt349=1;
                }


                switch (alt349) {
            	case 1 :
            	    // InternalKim.g:17120:4: ( ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_2_0= ruleUnitOp ) ) ) ( (lv_units_3_0= ruleUnitElement ) )
            	    {
            	    // InternalKim.g:17120:4: ( ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_2_0= ruleUnitOp ) ) )
            	    // InternalKim.g:17121:5: ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_2_0= ruleUnitOp ) )
            	    {
            	    // InternalKim.g:17127:5: ( (lv_connectors_2_0= ruleUnitOp ) )
            	    // InternalKim.g:17128:6: (lv_connectors_2_0= ruleUnitOp )
            	    {
            	    // InternalKim.g:17128:6: (lv_connectors_2_0= ruleUnitOp )
            	    // InternalKim.g:17129:7: lv_connectors_2_0= ruleUnitOp
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getUnitAccess().getConnectorsUnitOpEnumRuleCall_2_0_0_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_180);
            	    lv_connectors_2_0=ruleUnitOp();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getUnitRule());
            	      							}
            	      							add(
            	      								current,
            	      								"connectors",
            	      								lv_connectors_2_0,
            	      								"org.integratedmodelling.kim.Kim.UnitOp");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }

            	    // InternalKim.g:17147:4: ( (lv_units_3_0= ruleUnitElement ) )
            	    // InternalKim.g:17148:5: (lv_units_3_0= ruleUnitElement )
            	    {
            	    // InternalKim.g:17148:5: (lv_units_3_0= ruleUnitElement )
            	    // InternalKim.g:17149:6: lv_units_3_0= ruleUnitElement
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getUnitAccess().getUnitsUnitElementParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_179);
            	    lv_units_3_0=ruleUnitElement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getUnitRule());
            	      						}
            	      						add(
            	      							current,
            	      							"units",
            	      							lv_units_3_0,
            	      							"org.integratedmodelling.kim.Kim.UnitElement");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop349;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnit"


    // $ANTLR start "entryRuleCurrency"
    // InternalKim.g:17171:1: entryRuleCurrency returns [EObject current=null] : iv_ruleCurrency= ruleCurrency EOF ;
    public final EObject entryRuleCurrency() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCurrency = null;


        try {
            // InternalKim.g:17171:49: (iv_ruleCurrency= ruleCurrency EOF )
            // InternalKim.g:17172:2: iv_ruleCurrency= ruleCurrency EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCurrencyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCurrency=ruleCurrency();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCurrency; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCurrency"


    // $ANTLR start "ruleCurrency"
    // InternalKim.g:17178:1: ruleCurrency returns [EObject current=null] : ( ( (lv_id_0_0= RULE_UPPERCASE_ID ) ) (otherlv_1= '@' ( (lv_year_2_0= RULE_INT ) ) ) ( ( ( '/' )=>otherlv_3= '/' ) ( (lv_units_4_0= ruleUnitElement ) ) )* ) ;
    public final EObject ruleCurrency() throws RecognitionException {
        EObject current = null;

        Token lv_id_0_0=null;
        Token otherlv_1=null;
        Token lv_year_2_0=null;
        Token otherlv_3=null;
        EObject lv_units_4_0 = null;



        	enterRule();

        try {
            // InternalKim.g:17184:2: ( ( ( (lv_id_0_0= RULE_UPPERCASE_ID ) ) (otherlv_1= '@' ( (lv_year_2_0= RULE_INT ) ) ) ( ( ( '/' )=>otherlv_3= '/' ) ( (lv_units_4_0= ruleUnitElement ) ) )* ) )
            // InternalKim.g:17185:2: ( ( (lv_id_0_0= RULE_UPPERCASE_ID ) ) (otherlv_1= '@' ( (lv_year_2_0= RULE_INT ) ) ) ( ( ( '/' )=>otherlv_3= '/' ) ( (lv_units_4_0= ruleUnitElement ) ) )* )
            {
            // InternalKim.g:17185:2: ( ( (lv_id_0_0= RULE_UPPERCASE_ID ) ) (otherlv_1= '@' ( (lv_year_2_0= RULE_INT ) ) ) ( ( ( '/' )=>otherlv_3= '/' ) ( (lv_units_4_0= ruleUnitElement ) ) )* )
            // InternalKim.g:17186:3: ( (lv_id_0_0= RULE_UPPERCASE_ID ) ) (otherlv_1= '@' ( (lv_year_2_0= RULE_INT ) ) ) ( ( ( '/' )=>otherlv_3= '/' ) ( (lv_units_4_0= ruleUnitElement ) ) )*
            {
            // InternalKim.g:17186:3: ( (lv_id_0_0= RULE_UPPERCASE_ID ) )
            // InternalKim.g:17187:4: (lv_id_0_0= RULE_UPPERCASE_ID )
            {
            // InternalKim.g:17187:4: (lv_id_0_0= RULE_UPPERCASE_ID )
            // InternalKim.g:17188:5: lv_id_0_0= RULE_UPPERCASE_ID
            {
            lv_id_0_0=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_181); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_id_0_0, grammarAccess.getCurrencyAccess().getIdUPPERCASE_IDTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getCurrencyRule());
              					}
              					setWithLastConsumed(
              						current,
              						"id",
              						lv_id_0_0,
              						"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
              				
            }

            }


            }

            // InternalKim.g:17204:3: (otherlv_1= '@' ( (lv_year_2_0= RULE_INT ) ) )
            // InternalKim.g:17205:4: otherlv_1= '@' ( (lv_year_2_0= RULE_INT ) )
            {
            otherlv_1=(Token)match(input,250,FOLLOW_78); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_1, grammarAccess.getCurrencyAccess().getCommercialAtKeyword_1_0());
              			
            }
            // InternalKim.g:17209:4: ( (lv_year_2_0= RULE_INT ) )
            // InternalKim.g:17210:5: (lv_year_2_0= RULE_INT )
            {
            // InternalKim.g:17210:5: (lv_year_2_0= RULE_INT )
            // InternalKim.g:17211:6: lv_year_2_0= RULE_INT
            {
            lv_year_2_0=(Token)match(input,RULE_INT,FOLLOW_182); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              						newLeafNode(lv_year_2_0, grammarAccess.getCurrencyAccess().getYearINTTerminalRuleCall_1_1_0());
              					
            }
            if ( state.backtracking==0 ) {

              						if (current==null) {
              							current = createModelElement(grammarAccess.getCurrencyRule());
              						}
              						setWithLastConsumed(
              							current,
              							"year",
              							lv_year_2_0,
              							"org.eclipse.xtext.common.Terminals.INT");
              					
            }

            }


            }


            }

            // InternalKim.g:17228:3: ( ( ( '/' )=>otherlv_3= '/' ) ( (lv_units_4_0= ruleUnitElement ) ) )*
            loop350:
            do {
                int alt350=2;
                int LA350_0 = input.LA(1);

                if ( (LA350_0==108) ) {
                    alt350=1;
                }


                switch (alt350) {
            	case 1 :
            	    // InternalKim.g:17229:4: ( ( '/' )=>otherlv_3= '/' ) ( (lv_units_4_0= ruleUnitElement ) )
            	    {
            	    // InternalKim.g:17229:4: ( ( '/' )=>otherlv_3= '/' )
            	    // InternalKim.g:17230:5: ( '/' )=>otherlv_3= '/'
            	    {
            	    otherlv_3=(Token)match(input,108,FOLLOW_180); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					newLeafNode(otherlv_3, grammarAccess.getCurrencyAccess().getSolidusKeyword_2_0());
            	      				
            	    }

            	    }

            	    // InternalKim.g:17236:4: ( (lv_units_4_0= ruleUnitElement ) )
            	    // InternalKim.g:17237:5: (lv_units_4_0= ruleUnitElement )
            	    {
            	    // InternalKim.g:17237:5: (lv_units_4_0= ruleUnitElement )
            	    // InternalKim.g:17238:6: lv_units_4_0= ruleUnitElement
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getCurrencyAccess().getUnitsUnitElementParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_182);
            	    lv_units_4_0=ruleUnitElement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getCurrencyRule());
            	      						}
            	      						add(
            	      							current,
            	      							"units",
            	      							lv_units_4_0,
            	      							"org.integratedmodelling.kim.Kim.UnitElement");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop350;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCurrency"


    // $ANTLR start "entryRuleNumber"
    // InternalKim.g:17260:1: entryRuleNumber returns [EObject current=null] : iv_ruleNumber= ruleNumber EOF ;
    public final EObject entryRuleNumber() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNumber = null;


        try {
            // InternalKim.g:17260:47: (iv_ruleNumber= ruleNumber EOF )
            // InternalKim.g:17261:2: iv_ruleNumber= ruleNumber EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNumberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNumber=ruleNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNumber; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNumber"


    // $ANTLR start "ruleNumber"
    // InternalKim.g:17267:1: ruleNumber returns [EObject current=null] : ( (otherlv_0= '+' | ( (lv_negative_1_0= '-' ) ) )? ( ( ( RULE_INT ) )=> (lv_real_2_0= RULE_INT ) ) ( ( ( 'l' ) )=> (lv_long_3_0= 'l' ) )? ( ( ( ( ( '.' ) ) ( ( RULE_INT ) ) ) )=> ( ( (lv_decimal_4_0= '.' ) ) ( (lv_decimalPart_5_0= RULE_INT ) ) ) )? ( ( ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) ) )=> ( ( ( (lv_exponential_6_1= 'e' | lv_exponential_6_2= 'E' ) ) ) (otherlv_7= '+' | ( (lv_expNegative_8_0= '-' ) ) )? ( (lv_exp_9_0= RULE_INT ) ) ) )? ) ;
    public final EObject ruleNumber() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_negative_1_0=null;
        Token lv_real_2_0=null;
        Token lv_long_3_0=null;
        Token lv_decimal_4_0=null;
        Token lv_decimalPart_5_0=null;
        Token lv_exponential_6_1=null;
        Token lv_exponential_6_2=null;
        Token otherlv_7=null;
        Token lv_expNegative_8_0=null;
        Token lv_exp_9_0=null;


        	enterRule();

        try {
            // InternalKim.g:17273:2: ( ( (otherlv_0= '+' | ( (lv_negative_1_0= '-' ) ) )? ( ( ( RULE_INT ) )=> (lv_real_2_0= RULE_INT ) ) ( ( ( 'l' ) )=> (lv_long_3_0= 'l' ) )? ( ( ( ( ( '.' ) ) ( ( RULE_INT ) ) ) )=> ( ( (lv_decimal_4_0= '.' ) ) ( (lv_decimalPart_5_0= RULE_INT ) ) ) )? ( ( ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) ) )=> ( ( ( (lv_exponential_6_1= 'e' | lv_exponential_6_2= 'E' ) ) ) (otherlv_7= '+' | ( (lv_expNegative_8_0= '-' ) ) )? ( (lv_exp_9_0= RULE_INT ) ) ) )? ) )
            // InternalKim.g:17274:2: ( (otherlv_0= '+' | ( (lv_negative_1_0= '-' ) ) )? ( ( ( RULE_INT ) )=> (lv_real_2_0= RULE_INT ) ) ( ( ( 'l' ) )=> (lv_long_3_0= 'l' ) )? ( ( ( ( ( '.' ) ) ( ( RULE_INT ) ) ) )=> ( ( (lv_decimal_4_0= '.' ) ) ( (lv_decimalPart_5_0= RULE_INT ) ) ) )? ( ( ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) ) )=> ( ( ( (lv_exponential_6_1= 'e' | lv_exponential_6_2= 'E' ) ) ) (otherlv_7= '+' | ( (lv_expNegative_8_0= '-' ) ) )? ( (lv_exp_9_0= RULE_INT ) ) ) )? )
            {
            // InternalKim.g:17274:2: ( (otherlv_0= '+' | ( (lv_negative_1_0= '-' ) ) )? ( ( ( RULE_INT ) )=> (lv_real_2_0= RULE_INT ) ) ( ( ( 'l' ) )=> (lv_long_3_0= 'l' ) )? ( ( ( ( ( '.' ) ) ( ( RULE_INT ) ) ) )=> ( ( (lv_decimal_4_0= '.' ) ) ( (lv_decimalPart_5_0= RULE_INT ) ) ) )? ( ( ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) ) )=> ( ( ( (lv_exponential_6_1= 'e' | lv_exponential_6_2= 'E' ) ) ) (otherlv_7= '+' | ( (lv_expNegative_8_0= '-' ) ) )? ( (lv_exp_9_0= RULE_INT ) ) ) )? )
            // InternalKim.g:17275:3: (otherlv_0= '+' | ( (lv_negative_1_0= '-' ) ) )? ( ( ( RULE_INT ) )=> (lv_real_2_0= RULE_INT ) ) ( ( ( 'l' ) )=> (lv_long_3_0= 'l' ) )? ( ( ( ( ( '.' ) ) ( ( RULE_INT ) ) ) )=> ( ( (lv_decimal_4_0= '.' ) ) ( (lv_decimalPart_5_0= RULE_INT ) ) ) )? ( ( ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) ) )=> ( ( ( (lv_exponential_6_1= 'e' | lv_exponential_6_2= 'E' ) ) ) (otherlv_7= '+' | ( (lv_expNegative_8_0= '-' ) ) )? ( (lv_exp_9_0= RULE_INT ) ) ) )?
            {
            // InternalKim.g:17275:3: (otherlv_0= '+' | ( (lv_negative_1_0= '-' ) ) )?
            int alt351=3;
            int LA351_0 = input.LA(1);

            if ( (LA351_0==251) ) {
                alt351=1;
            }
            else if ( (LA351_0==252) ) {
                alt351=2;
            }
            switch (alt351) {
                case 1 :
                    // InternalKim.g:17276:4: otherlv_0= '+'
                    {
                    otherlv_0=(Token)match(input,251,FOLLOW_78); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getNumberAccess().getPlusSignKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:17281:4: ( (lv_negative_1_0= '-' ) )
                    {
                    // InternalKim.g:17281:4: ( (lv_negative_1_0= '-' ) )
                    // InternalKim.g:17282:5: (lv_negative_1_0= '-' )
                    {
                    // InternalKim.g:17282:5: (lv_negative_1_0= '-' )
                    // InternalKim.g:17283:6: lv_negative_1_0= '-'
                    {
                    lv_negative_1_0=(Token)match(input,252,FOLLOW_78); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_negative_1_0, grammarAccess.getNumberAccess().getNegativeHyphenMinusKeyword_0_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getNumberRule());
                      						}
                      						setWithLastConsumed(current, "negative", true, "-");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalKim.g:17296:3: ( ( ( RULE_INT ) )=> (lv_real_2_0= RULE_INT ) )
            // InternalKim.g:17297:4: ( ( RULE_INT ) )=> (lv_real_2_0= RULE_INT )
            {
            // InternalKim.g:17301:4: (lv_real_2_0= RULE_INT )
            // InternalKim.g:17302:5: lv_real_2_0= RULE_INT
            {
            lv_real_2_0=(Token)match(input,RULE_INT,FOLLOW_183); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_real_2_0, grammarAccess.getNumberAccess().getRealINTTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getNumberRule());
              					}
              					setWithLastConsumed(
              						current,
              						"real",
              						lv_real_2_0,
              						"org.eclipse.xtext.common.Terminals.INT");
              				
            }

            }


            }

            // InternalKim.g:17318:3: ( ( ( 'l' ) )=> (lv_long_3_0= 'l' ) )?
            int alt352=2;
            int LA352_0 = input.LA(1);

            if ( (LA352_0==253) && (synpred674_InternalKim())) {
                alt352=1;
            }
            switch (alt352) {
                case 1 :
                    // InternalKim.g:17319:4: ( ( 'l' ) )=> (lv_long_3_0= 'l' )
                    {
                    // InternalKim.g:17323:4: (lv_long_3_0= 'l' )
                    // InternalKim.g:17324:5: lv_long_3_0= 'l'
                    {
                    lv_long_3_0=(Token)match(input,253,FOLLOW_184); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_long_3_0, grammarAccess.getNumberAccess().getLongLKeyword_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getNumberRule());
                      					}
                      					setWithLastConsumed(current, "long", true, "l");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:17336:3: ( ( ( ( ( '.' ) ) ( ( RULE_INT ) ) ) )=> ( ( (lv_decimal_4_0= '.' ) ) ( (lv_decimalPart_5_0= RULE_INT ) ) ) )?
            int alt353=2;
            int LA353_0 = input.LA(1);

            if ( (LA353_0==109) ) {
                int LA353_1 = input.LA(2);

                if ( (LA353_1==RULE_INT) ) {
                    int LA353_3 = input.LA(3);

                    if ( (synpred675_InternalKim()) ) {
                        alt353=1;
                    }
                }
            }
            switch (alt353) {
                case 1 :
                    // InternalKim.g:17337:4: ( ( ( ( '.' ) ) ( ( RULE_INT ) ) ) )=> ( ( (lv_decimal_4_0= '.' ) ) ( (lv_decimalPart_5_0= RULE_INT ) ) )
                    {
                    // InternalKim.g:17350:4: ( ( (lv_decimal_4_0= '.' ) ) ( (lv_decimalPart_5_0= RULE_INT ) ) )
                    // InternalKim.g:17351:5: ( (lv_decimal_4_0= '.' ) ) ( (lv_decimalPart_5_0= RULE_INT ) )
                    {
                    // InternalKim.g:17351:5: ( (lv_decimal_4_0= '.' ) )
                    // InternalKim.g:17352:6: (lv_decimal_4_0= '.' )
                    {
                    // InternalKim.g:17352:6: (lv_decimal_4_0= '.' )
                    // InternalKim.g:17353:7: lv_decimal_4_0= '.'
                    {
                    lv_decimal_4_0=(Token)match(input,109,FOLLOW_78); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_decimal_4_0, grammarAccess.getNumberAccess().getDecimalFullStopKeyword_3_0_0_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getNumberRule());
                      							}
                      							setWithLastConsumed(current, "decimal", true, ".");
                      						
                    }

                    }


                    }

                    // InternalKim.g:17365:5: ( (lv_decimalPart_5_0= RULE_INT ) )
                    // InternalKim.g:17366:6: (lv_decimalPart_5_0= RULE_INT )
                    {
                    // InternalKim.g:17366:6: (lv_decimalPart_5_0= RULE_INT )
                    // InternalKim.g:17367:7: lv_decimalPart_5_0= RULE_INT
                    {
                    lv_decimalPart_5_0=(Token)match(input,RULE_INT,FOLLOW_185); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_decimalPart_5_0, grammarAccess.getNumberAccess().getDecimalPartINTTerminalRuleCall_3_0_1_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getNumberRule());
                      							}
                      							setWithLastConsumed(
                      								current,
                      								"decimalPart",
                      								lv_decimalPart_5_0,
                      								"org.eclipse.xtext.common.Terminals.INT");
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            // InternalKim.g:17385:3: ( ( ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) ) )=> ( ( ( (lv_exponential_6_1= 'e' | lv_exponential_6_2= 'E' ) ) ) (otherlv_7= '+' | ( (lv_expNegative_8_0= '-' ) ) )? ( (lv_exp_9_0= RULE_INT ) ) ) )?
            int alt356=2;
            int LA356_0 = input.LA(1);

            if ( (LA356_0==254) && (synpred679_InternalKim())) {
                alt356=1;
            }
            else if ( (LA356_0==255) && (synpred679_InternalKim())) {
                alt356=1;
            }
            switch (alt356) {
                case 1 :
                    // InternalKim.g:17386:4: ( ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) ) )=> ( ( ( (lv_exponential_6_1= 'e' | lv_exponential_6_2= 'E' ) ) ) (otherlv_7= '+' | ( (lv_expNegative_8_0= '-' ) ) )? ( (lv_exp_9_0= RULE_INT ) ) )
                    {
                    // InternalKim.g:17412:4: ( ( ( (lv_exponential_6_1= 'e' | lv_exponential_6_2= 'E' ) ) ) (otherlv_7= '+' | ( (lv_expNegative_8_0= '-' ) ) )? ( (lv_exp_9_0= RULE_INT ) ) )
                    // InternalKim.g:17413:5: ( ( (lv_exponential_6_1= 'e' | lv_exponential_6_2= 'E' ) ) ) (otherlv_7= '+' | ( (lv_expNegative_8_0= '-' ) ) )? ( (lv_exp_9_0= RULE_INT ) )
                    {
                    // InternalKim.g:17413:5: ( ( (lv_exponential_6_1= 'e' | lv_exponential_6_2= 'E' ) ) )
                    // InternalKim.g:17414:6: ( (lv_exponential_6_1= 'e' | lv_exponential_6_2= 'E' ) )
                    {
                    // InternalKim.g:17414:6: ( (lv_exponential_6_1= 'e' | lv_exponential_6_2= 'E' ) )
                    // InternalKim.g:17415:7: (lv_exponential_6_1= 'e' | lv_exponential_6_2= 'E' )
                    {
                    // InternalKim.g:17415:7: (lv_exponential_6_1= 'e' | lv_exponential_6_2= 'E' )
                    int alt354=2;
                    int LA354_0 = input.LA(1);

                    if ( (LA354_0==254) ) {
                        alt354=1;
                    }
                    else if ( (LA354_0==255) ) {
                        alt354=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 354, 0, input);

                        throw nvae;
                    }
                    switch (alt354) {
                        case 1 :
                            // InternalKim.g:17416:8: lv_exponential_6_1= 'e'
                            {
                            lv_exponential_6_1=(Token)match(input,254,FOLLOW_38); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_exponential_6_1, grammarAccess.getNumberAccess().getExponentialEKeyword_4_0_0_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getNumberRule());
                              								}
                              								setWithLastConsumed(current, "exponential", true, null);
                              							
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:17427:8: lv_exponential_6_2= 'E'
                            {
                            lv_exponential_6_2=(Token)match(input,255,FOLLOW_38); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_exponential_6_2, grammarAccess.getNumberAccess().getExponentialEKeyword_4_0_0_0_1());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getNumberRule());
                              								}
                              								setWithLastConsumed(current, "exponential", true, null);
                              							
                            }

                            }
                            break;

                    }


                    }


                    }

                    // InternalKim.g:17440:5: (otherlv_7= '+' | ( (lv_expNegative_8_0= '-' ) ) )?
                    int alt355=3;
                    int LA355_0 = input.LA(1);

                    if ( (LA355_0==251) ) {
                        alt355=1;
                    }
                    else if ( (LA355_0==252) ) {
                        alt355=2;
                    }
                    switch (alt355) {
                        case 1 :
                            // InternalKim.g:17441:6: otherlv_7= '+'
                            {
                            otherlv_7=(Token)match(input,251,FOLLOW_78); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_7, grammarAccess.getNumberAccess().getPlusSignKeyword_4_0_1_0());
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:17446:6: ( (lv_expNegative_8_0= '-' ) )
                            {
                            // InternalKim.g:17446:6: ( (lv_expNegative_8_0= '-' ) )
                            // InternalKim.g:17447:7: (lv_expNegative_8_0= '-' )
                            {
                            // InternalKim.g:17447:7: (lv_expNegative_8_0= '-' )
                            // InternalKim.g:17448:8: lv_expNegative_8_0= '-'
                            {
                            lv_expNegative_8_0=(Token)match(input,252,FOLLOW_78); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_expNegative_8_0, grammarAccess.getNumberAccess().getExpNegativeHyphenMinusKeyword_4_0_1_1_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getNumberRule());
                              								}
                              								setWithLastConsumed(current, "expNegative", true, "-");
                              							
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:17461:5: ( (lv_exp_9_0= RULE_INT ) )
                    // InternalKim.g:17462:6: (lv_exp_9_0= RULE_INT )
                    {
                    // InternalKim.g:17462:6: (lv_exp_9_0= RULE_INT )
                    // InternalKim.g:17463:7: lv_exp_9_0= RULE_INT
                    {
                    lv_exp_9_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_exp_9_0, grammarAccess.getNumberAccess().getExpINTTerminalRuleCall_4_0_2_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getNumberRule());
                      							}
                      							setWithLastConsumed(
                      								current,
                      								"exp",
                      								lv_exp_9_0,
                      								"org.eclipse.xtext.common.Terminals.INT");
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNumber"


    // $ANTLR start "entryRuleQuantity"
    // InternalKim.g:17485:1: entryRuleQuantity returns [EObject current=null] : iv_ruleQuantity= ruleQuantity EOF ;
    public final EObject entryRuleQuantity() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleQuantity = null;


        try {
            // InternalKim.g:17485:49: (iv_ruleQuantity= ruleQuantity EOF )
            // InternalKim.g:17486:2: iv_ruleQuantity= ruleQuantity EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQuantityRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleQuantity=ruleQuantity();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQuantity; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQuantity"


    // $ANTLR start "ruleQuantity"
    // InternalKim.g:17492:1: ruleQuantity returns [EObject current=null] : ( ( (lv_value_0_0= ruleNumber ) ) ( ( (lv_over_1_0= '/' ) ) | otherlv_2= '.' ) ( ( (lv_unit_3_0= ruleUnit ) ) | ( (lv_currency_4_0= ruleCurrency ) ) ) ) ;
    public final EObject ruleQuantity() throws RecognitionException {
        EObject current = null;

        Token lv_over_1_0=null;
        Token otherlv_2=null;
        EObject lv_value_0_0 = null;

        EObject lv_unit_3_0 = null;

        EObject lv_currency_4_0 = null;



        	enterRule();

        try {
            // InternalKim.g:17498:2: ( ( ( (lv_value_0_0= ruleNumber ) ) ( ( (lv_over_1_0= '/' ) ) | otherlv_2= '.' ) ( ( (lv_unit_3_0= ruleUnit ) ) | ( (lv_currency_4_0= ruleCurrency ) ) ) ) )
            // InternalKim.g:17499:2: ( ( (lv_value_0_0= ruleNumber ) ) ( ( (lv_over_1_0= '/' ) ) | otherlv_2= '.' ) ( ( (lv_unit_3_0= ruleUnit ) ) | ( (lv_currency_4_0= ruleCurrency ) ) ) )
            {
            // InternalKim.g:17499:2: ( ( (lv_value_0_0= ruleNumber ) ) ( ( (lv_over_1_0= '/' ) ) | otherlv_2= '.' ) ( ( (lv_unit_3_0= ruleUnit ) ) | ( (lv_currency_4_0= ruleCurrency ) ) ) )
            // InternalKim.g:17500:3: ( (lv_value_0_0= ruleNumber ) ) ( ( (lv_over_1_0= '/' ) ) | otherlv_2= '.' ) ( ( (lv_unit_3_0= ruleUnit ) ) | ( (lv_currency_4_0= ruleCurrency ) ) )
            {
            // InternalKim.g:17500:3: ( (lv_value_0_0= ruleNumber ) )
            // InternalKim.g:17501:4: (lv_value_0_0= ruleNumber )
            {
            // InternalKim.g:17501:4: (lv_value_0_0= ruleNumber )
            // InternalKim.g:17502:5: lv_value_0_0= ruleNumber
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getQuantityAccess().getValueNumberParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_186);
            lv_value_0_0=ruleNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getQuantityRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_0_0,
              						"org.integratedmodelling.kim.Kim.Number");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:17519:3: ( ( (lv_over_1_0= '/' ) ) | otherlv_2= '.' )
            int alt357=2;
            int LA357_0 = input.LA(1);

            if ( (LA357_0==108) ) {
                alt357=1;
            }
            else if ( (LA357_0==109) ) {
                alt357=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 357, 0, input);

                throw nvae;
            }
            switch (alt357) {
                case 1 :
                    // InternalKim.g:17520:4: ( (lv_over_1_0= '/' ) )
                    {
                    // InternalKim.g:17520:4: ( (lv_over_1_0= '/' ) )
                    // InternalKim.g:17521:5: (lv_over_1_0= '/' )
                    {
                    // InternalKim.g:17521:5: (lv_over_1_0= '/' )
                    // InternalKim.g:17522:6: lv_over_1_0= '/'
                    {
                    lv_over_1_0=(Token)match(input,108,FOLLOW_101); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_over_1_0, grammarAccess.getQuantityAccess().getOverSolidusKeyword_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getQuantityRule());
                      						}
                      						setWithLastConsumed(current, "over", true, "/");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:17535:4: otherlv_2= '.'
                    {
                    otherlv_2=(Token)match(input,109,FOLLOW_101); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getQuantityAccess().getFullStopKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:17540:3: ( ( (lv_unit_3_0= ruleUnit ) ) | ( (lv_currency_4_0= ruleCurrency ) ) )
            int alt358=2;
            int LA358_0 = input.LA(1);

            if ( (LA358_0==EOF||LA358_0==RULE_LOWERCASE_ID||LA358_0==RULE_STRING||(LA358_0>=RULE_EXPR && LA358_0<=RULE_BACKCASE_ID)||LA358_0==20||LA358_0==25||(LA358_0>=27 && LA358_0<=33)||LA358_0==35||(LA358_0>=37 && LA358_0<=38)||(LA358_0>=40 && LA358_0<=42)||(LA358_0>=44 && LA358_0<=45)||(LA358_0>=48 && LA358_0<=52)||(LA358_0>=54 && LA358_0<=56)||(LA358_0>=62 && LA358_0<=67)||LA358_0==69||(LA358_0>=76 && LA358_0<=89)||LA358_0==105||LA358_0==108||(LA358_0>=112 && LA358_0<=122)||(LA358_0>=132 && LA358_0<=133)||(LA358_0>=140 && LA358_0<=142)||(LA358_0>=144 && LA358_0<=149)||(LA358_0>=151 && LA358_0<=163)||(LA358_0>=176 && LA358_0<=177)||(LA358_0>=180 && LA358_0<=182)||(LA358_0>=184 && LA358_0<=192)||(LA358_0>=195 && LA358_0<=205)||LA358_0==211||LA358_0==216||(LA358_0>=251 && LA358_0<=252)||LA358_0==259) ) {
                alt358=1;
            }
            else if ( (LA358_0==RULE_UPPERCASE_ID) ) {
                int LA358_2 = input.LA(2);

                if ( (LA358_2==EOF||(LA358_2>=RULE_LOWERCASE_ID && LA358_2<=RULE_STRING)||(LA358_2>=RULE_EXPR && LA358_2<=RULE_BACKCASE_ID)||LA358_2==20||LA358_2==25||(LA358_2>=27 && LA358_2<=33)||LA358_2==35||(LA358_2>=37 && LA358_2<=38)||(LA358_2>=40 && LA358_2<=42)||(LA358_2>=44 && LA358_2<=45)||(LA358_2>=48 && LA358_2<=52)||(LA358_2>=54 && LA358_2<=56)||(LA358_2>=62 && LA358_2<=67)||LA358_2==69||(LA358_2>=76 && LA358_2<=89)||(LA358_2>=105 && LA358_2<=106)||(LA358_2>=108 && LA358_2<=109)||(LA358_2>=112 && LA358_2<=122)||(LA358_2>=132 && LA358_2<=133)||(LA358_2>=140 && LA358_2<=142)||(LA358_2>=144 && LA358_2<=149)||(LA358_2>=151 && LA358_2<=163)||(LA358_2>=176 && LA358_2<=177)||(LA358_2>=180 && LA358_2<=182)||(LA358_2>=184 && LA358_2<=192)||(LA358_2>=195 && LA358_2<=205)||LA358_2==211||LA358_2==216||(LA358_2>=251 && LA358_2<=252)||LA358_2==259) ) {
                    alt358=1;
                }
                else if ( (LA358_2==250) ) {
                    alt358=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 358, 2, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 358, 0, input);

                throw nvae;
            }
            switch (alt358) {
                case 1 :
                    // InternalKim.g:17541:4: ( (lv_unit_3_0= ruleUnit ) )
                    {
                    // InternalKim.g:17541:4: ( (lv_unit_3_0= ruleUnit ) )
                    // InternalKim.g:17542:5: (lv_unit_3_0= ruleUnit )
                    {
                    // InternalKim.g:17542:5: (lv_unit_3_0= ruleUnit )
                    // InternalKim.g:17543:6: lv_unit_3_0= ruleUnit
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getQuantityAccess().getUnitUnitParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_unit_3_0=ruleUnit();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getQuantityRule());
                      						}
                      						set(
                      							current,
                      							"unit",
                      							lv_unit_3_0,
                      							"org.integratedmodelling.kim.Kim.Unit");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:17561:4: ( (lv_currency_4_0= ruleCurrency ) )
                    {
                    // InternalKim.g:17561:4: ( (lv_currency_4_0= ruleCurrency ) )
                    // InternalKim.g:17562:5: (lv_currency_4_0= ruleCurrency )
                    {
                    // InternalKim.g:17562:5: (lv_currency_4_0= ruleCurrency )
                    // InternalKim.g:17563:6: lv_currency_4_0= ruleCurrency
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getQuantityAccess().getCurrencyCurrencyParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_currency_4_0=ruleCurrency();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getQuantityRule());
                      						}
                      						set(
                      							current,
                      							"currency",
                      							lv_currency_4_0,
                      							"org.integratedmodelling.kim.Kim.Currency");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQuantity"


    // $ANTLR start "entryRuleDate"
    // InternalKim.g:17585:1: entryRuleDate returns [EObject current=null] : iv_ruleDate= ruleDate EOF ;
    public final EObject entryRuleDate() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDate = null;


        try {
            // InternalKim.g:17585:45: (iv_ruleDate= ruleDate EOF )
            // InternalKim.g:17586:2: iv_ruleDate= ruleDate EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDateRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDate=ruleDate();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDate; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDate"


    // $ANTLR start "ruleDate"
    // InternalKim.g:17592:1: ruleDate returns [EObject current=null] : ( ( (lv_year_0_0= RULE_INT ) ) (otherlv_1= 'AD' | otherlv_2= 'CE' | ( (lv_bc_3_0= 'BC' ) ) )? otherlv_4= '-' ( (lv_month_5_0= RULE_INT ) ) otherlv_6= '-' ( (lv_day_7_0= RULE_INT ) ) ( ( (lv_hour_8_0= RULE_INT ) ) otherlv_9= ':' ( (lv_min_10_0= RULE_INT ) ) (otherlv_11= ':' ( (lv_sec_12_0= RULE_INT ) ) (otherlv_13= '.' ( (lv_ms_14_0= RULE_INT ) ) )? )? )? ) ;
    public final EObject ruleDate() throws RecognitionException {
        EObject current = null;

        Token lv_year_0_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token lv_bc_3_0=null;
        Token otherlv_4=null;
        Token lv_month_5_0=null;
        Token otherlv_6=null;
        Token lv_day_7_0=null;
        Token lv_hour_8_0=null;
        Token otherlv_9=null;
        Token lv_min_10_0=null;
        Token otherlv_11=null;
        Token lv_sec_12_0=null;
        Token otherlv_13=null;
        Token lv_ms_14_0=null;


        	enterRule();

        try {
            // InternalKim.g:17598:2: ( ( ( (lv_year_0_0= RULE_INT ) ) (otherlv_1= 'AD' | otherlv_2= 'CE' | ( (lv_bc_3_0= 'BC' ) ) )? otherlv_4= '-' ( (lv_month_5_0= RULE_INT ) ) otherlv_6= '-' ( (lv_day_7_0= RULE_INT ) ) ( ( (lv_hour_8_0= RULE_INT ) ) otherlv_9= ':' ( (lv_min_10_0= RULE_INT ) ) (otherlv_11= ':' ( (lv_sec_12_0= RULE_INT ) ) (otherlv_13= '.' ( (lv_ms_14_0= RULE_INT ) ) )? )? )? ) )
            // InternalKim.g:17599:2: ( ( (lv_year_0_0= RULE_INT ) ) (otherlv_1= 'AD' | otherlv_2= 'CE' | ( (lv_bc_3_0= 'BC' ) ) )? otherlv_4= '-' ( (lv_month_5_0= RULE_INT ) ) otherlv_6= '-' ( (lv_day_7_0= RULE_INT ) ) ( ( (lv_hour_8_0= RULE_INT ) ) otherlv_9= ':' ( (lv_min_10_0= RULE_INT ) ) (otherlv_11= ':' ( (lv_sec_12_0= RULE_INT ) ) (otherlv_13= '.' ( (lv_ms_14_0= RULE_INT ) ) )? )? )? )
            {
            // InternalKim.g:17599:2: ( ( (lv_year_0_0= RULE_INT ) ) (otherlv_1= 'AD' | otherlv_2= 'CE' | ( (lv_bc_3_0= 'BC' ) ) )? otherlv_4= '-' ( (lv_month_5_0= RULE_INT ) ) otherlv_6= '-' ( (lv_day_7_0= RULE_INT ) ) ( ( (lv_hour_8_0= RULE_INT ) ) otherlv_9= ':' ( (lv_min_10_0= RULE_INT ) ) (otherlv_11= ':' ( (lv_sec_12_0= RULE_INT ) ) (otherlv_13= '.' ( (lv_ms_14_0= RULE_INT ) ) )? )? )? )
            // InternalKim.g:17600:3: ( (lv_year_0_0= RULE_INT ) ) (otherlv_1= 'AD' | otherlv_2= 'CE' | ( (lv_bc_3_0= 'BC' ) ) )? otherlv_4= '-' ( (lv_month_5_0= RULE_INT ) ) otherlv_6= '-' ( (lv_day_7_0= RULE_INT ) ) ( ( (lv_hour_8_0= RULE_INT ) ) otherlv_9= ':' ( (lv_min_10_0= RULE_INT ) ) (otherlv_11= ':' ( (lv_sec_12_0= RULE_INT ) ) (otherlv_13= '.' ( (lv_ms_14_0= RULE_INT ) ) )? )? )?
            {
            // InternalKim.g:17600:3: ( (lv_year_0_0= RULE_INT ) )
            // InternalKim.g:17601:4: (lv_year_0_0= RULE_INT )
            {
            // InternalKim.g:17601:4: (lv_year_0_0= RULE_INT )
            // InternalKim.g:17602:5: lv_year_0_0= RULE_INT
            {
            lv_year_0_0=(Token)match(input,RULE_INT,FOLLOW_187); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_year_0_0, grammarAccess.getDateAccess().getYearINTTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDateRule());
              					}
              					setWithLastConsumed(
              						current,
              						"year",
              						lv_year_0_0,
              						"org.eclipse.xtext.common.Terminals.INT");
              				
            }

            }


            }

            // InternalKim.g:17618:3: (otherlv_1= 'AD' | otherlv_2= 'CE' | ( (lv_bc_3_0= 'BC' ) ) )?
            int alt359=4;
            switch ( input.LA(1) ) {
                case 256:
                    {
                    alt359=1;
                    }
                    break;
                case 257:
                    {
                    alt359=2;
                    }
                    break;
                case 258:
                    {
                    alt359=3;
                    }
                    break;
            }

            switch (alt359) {
                case 1 :
                    // InternalKim.g:17619:4: otherlv_1= 'AD'
                    {
                    otherlv_1=(Token)match(input,256,FOLLOW_188); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getDateAccess().getADKeyword_1_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:17624:4: otherlv_2= 'CE'
                    {
                    otherlv_2=(Token)match(input,257,FOLLOW_188); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getDateAccess().getCEKeyword_1_1());
                      			
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:17629:4: ( (lv_bc_3_0= 'BC' ) )
                    {
                    // InternalKim.g:17629:4: ( (lv_bc_3_0= 'BC' ) )
                    // InternalKim.g:17630:5: (lv_bc_3_0= 'BC' )
                    {
                    // InternalKim.g:17630:5: (lv_bc_3_0= 'BC' )
                    // InternalKim.g:17631:6: lv_bc_3_0= 'BC'
                    {
                    lv_bc_3_0=(Token)match(input,258,FOLLOW_188); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_bc_3_0, grammarAccess.getDateAccess().getBcBCKeyword_1_2_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDateRule());
                      						}
                      						setWithLastConsumed(current, "bc", true, "BC");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_4=(Token)match(input,252,FOLLOW_78); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getDateAccess().getHyphenMinusKeyword_2());
              		
            }
            // InternalKim.g:17648:3: ( (lv_month_5_0= RULE_INT ) )
            // InternalKim.g:17649:4: (lv_month_5_0= RULE_INT )
            {
            // InternalKim.g:17649:4: (lv_month_5_0= RULE_INT )
            // InternalKim.g:17650:5: lv_month_5_0= RULE_INT
            {
            lv_month_5_0=(Token)match(input,RULE_INT,FOLLOW_188); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_month_5_0, grammarAccess.getDateAccess().getMonthINTTerminalRuleCall_3_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDateRule());
              					}
              					setWithLastConsumed(
              						current,
              						"month",
              						lv_month_5_0,
              						"org.eclipse.xtext.common.Terminals.INT");
              				
            }

            }


            }

            otherlv_6=(Token)match(input,252,FOLLOW_78); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getDateAccess().getHyphenMinusKeyword_4());
              		
            }
            // InternalKim.g:17670:3: ( (lv_day_7_0= RULE_INT ) )
            // InternalKim.g:17671:4: (lv_day_7_0= RULE_INT )
            {
            // InternalKim.g:17671:4: (lv_day_7_0= RULE_INT )
            // InternalKim.g:17672:5: lv_day_7_0= RULE_INT
            {
            lv_day_7_0=(Token)match(input,RULE_INT,FOLLOW_189); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_day_7_0, grammarAccess.getDateAccess().getDayINTTerminalRuleCall_5_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDateRule());
              					}
              					setWithLastConsumed(
              						current,
              						"day",
              						lv_day_7_0,
              						"org.eclipse.xtext.common.Terminals.INT");
              				
            }

            }


            }

            // InternalKim.g:17688:3: ( ( (lv_hour_8_0= RULE_INT ) ) otherlv_9= ':' ( (lv_min_10_0= RULE_INT ) ) (otherlv_11= ':' ( (lv_sec_12_0= RULE_INT ) ) (otherlv_13= '.' ( (lv_ms_14_0= RULE_INT ) ) )? )? )?
            int alt362=2;
            int LA362_0 = input.LA(1);

            if ( (LA362_0==RULE_INT) ) {
                int LA362_1 = input.LA(2);

                if ( (LA362_1==106) ) {
                    int LA362_3 = input.LA(3);

                    if ( (LA362_3==RULE_INT) ) {
                        int LA362_4 = input.LA(4);

                        if ( (synpred690_InternalKim()) ) {
                            alt362=1;
                        }
                    }
                }
            }
            switch (alt362) {
                case 1 :
                    // InternalKim.g:17689:4: ( (lv_hour_8_0= RULE_INT ) ) otherlv_9= ':' ( (lv_min_10_0= RULE_INT ) ) (otherlv_11= ':' ( (lv_sec_12_0= RULE_INT ) ) (otherlv_13= '.' ( (lv_ms_14_0= RULE_INT ) ) )? )?
                    {
                    // InternalKim.g:17689:4: ( (lv_hour_8_0= RULE_INT ) )
                    // InternalKim.g:17690:5: (lv_hour_8_0= RULE_INT )
                    {
                    // InternalKim.g:17690:5: (lv_hour_8_0= RULE_INT )
                    // InternalKim.g:17691:6: lv_hour_8_0= RULE_INT
                    {
                    lv_hour_8_0=(Token)match(input,RULE_INT,FOLLOW_82); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_hour_8_0, grammarAccess.getDateAccess().getHourINTTerminalRuleCall_6_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDateRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"hour",
                      							lv_hour_8_0,
                      							"org.eclipse.xtext.common.Terminals.INT");
                      					
                    }

                    }


                    }

                    otherlv_9=(Token)match(input,106,FOLLOW_78); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getDateAccess().getColonKeyword_6_1());
                      			
                    }
                    // InternalKim.g:17711:4: ( (lv_min_10_0= RULE_INT ) )
                    // InternalKim.g:17712:5: (lv_min_10_0= RULE_INT )
                    {
                    // InternalKim.g:17712:5: (lv_min_10_0= RULE_INT )
                    // InternalKim.g:17713:6: lv_min_10_0= RULE_INT
                    {
                    lv_min_10_0=(Token)match(input,RULE_INT,FOLLOW_190); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_min_10_0, grammarAccess.getDateAccess().getMinINTTerminalRuleCall_6_2_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDateRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"min",
                      							lv_min_10_0,
                      							"org.eclipse.xtext.common.Terminals.INT");
                      					
                    }

                    }


                    }

                    // InternalKim.g:17729:4: (otherlv_11= ':' ( (lv_sec_12_0= RULE_INT ) ) (otherlv_13= '.' ( (lv_ms_14_0= RULE_INT ) ) )? )?
                    int alt361=2;
                    int LA361_0 = input.LA(1);

                    if ( (LA361_0==106) ) {
                        alt361=1;
                    }
                    switch (alt361) {
                        case 1 :
                            // InternalKim.g:17730:5: otherlv_11= ':' ( (lv_sec_12_0= RULE_INT ) ) (otherlv_13= '.' ( (lv_ms_14_0= RULE_INT ) ) )?
                            {
                            otherlv_11=(Token)match(input,106,FOLLOW_78); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_11, grammarAccess.getDateAccess().getColonKeyword_6_3_0());
                              				
                            }
                            // InternalKim.g:17734:5: ( (lv_sec_12_0= RULE_INT ) )
                            // InternalKim.g:17735:6: (lv_sec_12_0= RULE_INT )
                            {
                            // InternalKim.g:17735:6: (lv_sec_12_0= RULE_INT )
                            // InternalKim.g:17736:7: lv_sec_12_0= RULE_INT
                            {
                            lv_sec_12_0=(Token)match(input,RULE_INT,FOLLOW_191); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_sec_12_0, grammarAccess.getDateAccess().getSecINTTerminalRuleCall_6_3_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getDateRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"sec",
                              								lv_sec_12_0,
                              								"org.eclipse.xtext.common.Terminals.INT");
                              						
                            }

                            }


                            }

                            // InternalKim.g:17752:5: (otherlv_13= '.' ( (lv_ms_14_0= RULE_INT ) ) )?
                            int alt360=2;
                            int LA360_0 = input.LA(1);

                            if ( (LA360_0==109) ) {
                                alt360=1;
                            }
                            switch (alt360) {
                                case 1 :
                                    // InternalKim.g:17753:6: otherlv_13= '.' ( (lv_ms_14_0= RULE_INT ) )
                                    {
                                    otherlv_13=(Token)match(input,109,FOLLOW_78); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      						newLeafNode(otherlv_13, grammarAccess.getDateAccess().getFullStopKeyword_6_3_2_0());
                                      					
                                    }
                                    // InternalKim.g:17757:6: ( (lv_ms_14_0= RULE_INT ) )
                                    // InternalKim.g:17758:7: (lv_ms_14_0= RULE_INT )
                                    {
                                    // InternalKim.g:17758:7: (lv_ms_14_0= RULE_INT )
                                    // InternalKim.g:17759:8: lv_ms_14_0= RULE_INT
                                    {
                                    lv_ms_14_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_ms_14_0, grammarAccess.getDateAccess().getMsINTTerminalRuleCall_6_3_2_1_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getDateRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"ms",
                                      									lv_ms_14_0,
                                      									"org.eclipse.xtext.common.Terminals.INT");
                                      							
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDate"


    // $ANTLR start "entryRulePathName"
    // InternalKim.g:17782:1: entryRulePathName returns [String current=null] : iv_rulePathName= rulePathName EOF ;
    public final String entryRulePathName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulePathName = null;


        try {
            // InternalKim.g:17782:48: (iv_rulePathName= rulePathName EOF )
            // InternalKim.g:17783:2: iv_rulePathName= rulePathName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPathNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePathName=rulePathName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePathName.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePathName"


    // $ANTLR start "rulePathName"
    // InternalKim.g:17789:1: rulePathName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_UPPERCASE_ID_1= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) (kw= '.' (this_LOWERCASE_ID_4= RULE_LOWERCASE_ID | this_UPPERCASE_ID_5= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID ) )* ) ;
    public final AntlrDatatypeRuleToken rulePathName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_LOWERCASE_ID_0=null;
        Token this_UPPERCASE_ID_1=null;
        Token this_LOWERCASE_DASHID_2=null;
        Token kw=null;
        Token this_LOWERCASE_ID_4=null;
        Token this_UPPERCASE_ID_5=null;
        Token this_LOWERCASE_DASHID_6=null;


        	enterRule();

        try {
            // InternalKim.g:17795:2: ( ( (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_UPPERCASE_ID_1= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) (kw= '.' (this_LOWERCASE_ID_4= RULE_LOWERCASE_ID | this_UPPERCASE_ID_5= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID ) )* ) )
            // InternalKim.g:17796:2: ( (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_UPPERCASE_ID_1= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) (kw= '.' (this_LOWERCASE_ID_4= RULE_LOWERCASE_ID | this_UPPERCASE_ID_5= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID ) )* )
            {
            // InternalKim.g:17796:2: ( (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_UPPERCASE_ID_1= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) (kw= '.' (this_LOWERCASE_ID_4= RULE_LOWERCASE_ID | this_UPPERCASE_ID_5= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID ) )* )
            // InternalKim.g:17797:3: (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_UPPERCASE_ID_1= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) (kw= '.' (this_LOWERCASE_ID_4= RULE_LOWERCASE_ID | this_UPPERCASE_ID_5= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID ) )*
            {
            // InternalKim.g:17797:3: (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_UPPERCASE_ID_1= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID )
            int alt363=3;
            switch ( input.LA(1) ) {
            case RULE_LOWERCASE_ID:
                {
                alt363=1;
                }
                break;
            case RULE_UPPERCASE_ID:
                {
                alt363=2;
                }
                break;
            case RULE_LOWERCASE_DASHID:
                {
                alt363=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 363, 0, input);

                throw nvae;
            }

            switch (alt363) {
                case 1 :
                    // InternalKim.g:17798:4: this_LOWERCASE_ID_0= RULE_LOWERCASE_ID
                    {
                    this_LOWERCASE_ID_0=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_191); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_ID_0);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_ID_0, grammarAccess.getPathNameAccess().getLOWERCASE_IDTerminalRuleCall_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:17806:4: this_UPPERCASE_ID_1= RULE_UPPERCASE_ID
                    {
                    this_UPPERCASE_ID_1=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_191); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_UPPERCASE_ID_1);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_UPPERCASE_ID_1, grammarAccess.getPathNameAccess().getUPPERCASE_IDTerminalRuleCall_0_1());
                      			
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:17814:4: this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID
                    {
                    this_LOWERCASE_DASHID_2=(Token)match(input,RULE_LOWERCASE_DASHID,FOLLOW_191); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_DASHID_2);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_DASHID_2, grammarAccess.getPathNameAccess().getLOWERCASE_DASHIDTerminalRuleCall_0_2());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:17822:3: (kw= '.' (this_LOWERCASE_ID_4= RULE_LOWERCASE_ID | this_UPPERCASE_ID_5= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID ) )*
            loop365:
            do {
                int alt365=2;
                int LA365_0 = input.LA(1);

                if ( (LA365_0==109) ) {
                    alt365=1;
                }


                switch (alt365) {
            	case 1 :
            	    // InternalKim.g:17823:4: kw= '.' (this_LOWERCASE_ID_4= RULE_LOWERCASE_ID | this_UPPERCASE_ID_5= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID )
            	    {
            	    kw=(Token)match(input,109,FOLLOW_26); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(kw);
            	      				newLeafNode(kw, grammarAccess.getPathNameAccess().getFullStopKeyword_1_0());
            	      			
            	    }
            	    // InternalKim.g:17828:4: (this_LOWERCASE_ID_4= RULE_LOWERCASE_ID | this_UPPERCASE_ID_5= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID )
            	    int alt364=3;
            	    switch ( input.LA(1) ) {
            	    case RULE_LOWERCASE_ID:
            	        {
            	        alt364=1;
            	        }
            	        break;
            	    case RULE_UPPERCASE_ID:
            	        {
            	        alt364=2;
            	        }
            	        break;
            	    case RULE_LOWERCASE_DASHID:
            	        {
            	        alt364=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 364, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt364) {
            	        case 1 :
            	            // InternalKim.g:17829:5: this_LOWERCASE_ID_4= RULE_LOWERCASE_ID
            	            {
            	            this_LOWERCASE_ID_4=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_191); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(this_LOWERCASE_ID_4);
            	              				
            	            }
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(this_LOWERCASE_ID_4, grammarAccess.getPathNameAccess().getLOWERCASE_IDTerminalRuleCall_1_1_0());
            	              				
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:17837:5: this_UPPERCASE_ID_5= RULE_UPPERCASE_ID
            	            {
            	            this_UPPERCASE_ID_5=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_191); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(this_UPPERCASE_ID_5);
            	              				
            	            }
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(this_UPPERCASE_ID_5, grammarAccess.getPathNameAccess().getUPPERCASE_IDTerminalRuleCall_1_1_1());
            	              				
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // InternalKim.g:17845:5: this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID
            	            {
            	            this_LOWERCASE_DASHID_6=(Token)match(input,RULE_LOWERCASE_DASHID,FOLLOW_191); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(this_LOWERCASE_DASHID_6);
            	              				
            	            }
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(this_LOWERCASE_DASHID_6, grammarAccess.getPathNameAccess().getLOWERCASE_DASHIDTerminalRuleCall_1_1_2());
            	              				
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop365;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePathName"


    // $ANTLR start "entryRulePath"
    // InternalKim.g:17858:1: entryRulePath returns [String current=null] : iv_rulePath= rulePath EOF ;
    public final String entryRulePath() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulePath = null;


        try {
            // InternalKim.g:17858:44: (iv_rulePath= rulePath EOF )
            // InternalKim.g:17859:2: iv_rulePath= rulePath EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPathRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePath=rulePath();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePath.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePath"


    // $ANTLR start "rulePath"
    // InternalKim.g:17865:1: rulePath returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_UPPERCASE_ID_1= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) ( (kw= '.' | kw= '/' ) (this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_UPPERCASE_ID_6= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_7= RULE_LOWERCASE_DASHID ) )* ) ;
    public final AntlrDatatypeRuleToken rulePath() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_LOWERCASE_ID_0=null;
        Token this_UPPERCASE_ID_1=null;
        Token this_LOWERCASE_DASHID_2=null;
        Token kw=null;
        Token this_LOWERCASE_ID_5=null;
        Token this_UPPERCASE_ID_6=null;
        Token this_LOWERCASE_DASHID_7=null;


        	enterRule();

        try {
            // InternalKim.g:17871:2: ( ( (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_UPPERCASE_ID_1= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) ( (kw= '.' | kw= '/' ) (this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_UPPERCASE_ID_6= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_7= RULE_LOWERCASE_DASHID ) )* ) )
            // InternalKim.g:17872:2: ( (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_UPPERCASE_ID_1= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) ( (kw= '.' | kw= '/' ) (this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_UPPERCASE_ID_6= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_7= RULE_LOWERCASE_DASHID ) )* )
            {
            // InternalKim.g:17872:2: ( (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_UPPERCASE_ID_1= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) ( (kw= '.' | kw= '/' ) (this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_UPPERCASE_ID_6= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_7= RULE_LOWERCASE_DASHID ) )* )
            // InternalKim.g:17873:3: (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_UPPERCASE_ID_1= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) ( (kw= '.' | kw= '/' ) (this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_UPPERCASE_ID_6= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_7= RULE_LOWERCASE_DASHID ) )*
            {
            // InternalKim.g:17873:3: (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_UPPERCASE_ID_1= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID )
            int alt366=3;
            switch ( input.LA(1) ) {
            case RULE_LOWERCASE_ID:
                {
                alt366=1;
                }
                break;
            case RULE_UPPERCASE_ID:
                {
                alt366=2;
                }
                break;
            case RULE_LOWERCASE_DASHID:
                {
                alt366=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 366, 0, input);

                throw nvae;
            }

            switch (alt366) {
                case 1 :
                    // InternalKim.g:17874:4: this_LOWERCASE_ID_0= RULE_LOWERCASE_ID
                    {
                    this_LOWERCASE_ID_0=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_192); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_ID_0);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_ID_0, grammarAccess.getPathAccess().getLOWERCASE_IDTerminalRuleCall_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:17882:4: this_UPPERCASE_ID_1= RULE_UPPERCASE_ID
                    {
                    this_UPPERCASE_ID_1=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_192); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_UPPERCASE_ID_1);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_UPPERCASE_ID_1, grammarAccess.getPathAccess().getUPPERCASE_IDTerminalRuleCall_0_1());
                      			
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:17890:4: this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID
                    {
                    this_LOWERCASE_DASHID_2=(Token)match(input,RULE_LOWERCASE_DASHID,FOLLOW_192); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_DASHID_2);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_DASHID_2, grammarAccess.getPathAccess().getLOWERCASE_DASHIDTerminalRuleCall_0_2());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:17898:3: ( (kw= '.' | kw= '/' ) (this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_UPPERCASE_ID_6= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_7= RULE_LOWERCASE_DASHID ) )*
            loop369:
            do {
                int alt369=2;
                int LA369_0 = input.LA(1);

                if ( ((LA369_0>=108 && LA369_0<=109)) ) {
                    alt369=1;
                }


                switch (alt369) {
            	case 1 :
            	    // InternalKim.g:17899:4: (kw= '.' | kw= '/' ) (this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_UPPERCASE_ID_6= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_7= RULE_LOWERCASE_DASHID )
            	    {
            	    // InternalKim.g:17899:4: (kw= '.' | kw= '/' )
            	    int alt367=2;
            	    int LA367_0 = input.LA(1);

            	    if ( (LA367_0==109) ) {
            	        alt367=1;
            	    }
            	    else if ( (LA367_0==108) ) {
            	        alt367=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 367, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt367) {
            	        case 1 :
            	            // InternalKim.g:17900:5: kw= '.'
            	            {
            	            kw=(Token)match(input,109,FOLLOW_26); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(kw);
            	              					newLeafNode(kw, grammarAccess.getPathAccess().getFullStopKeyword_1_0_0());
            	              				
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:17906:5: kw= '/'
            	            {
            	            kw=(Token)match(input,108,FOLLOW_26); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(kw);
            	              					newLeafNode(kw, grammarAccess.getPathAccess().getSolidusKeyword_1_0_1());
            	              				
            	            }

            	            }
            	            break;

            	    }

            	    // InternalKim.g:17912:4: (this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_UPPERCASE_ID_6= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_7= RULE_LOWERCASE_DASHID )
            	    int alt368=3;
            	    switch ( input.LA(1) ) {
            	    case RULE_LOWERCASE_ID:
            	        {
            	        alt368=1;
            	        }
            	        break;
            	    case RULE_UPPERCASE_ID:
            	        {
            	        alt368=2;
            	        }
            	        break;
            	    case RULE_LOWERCASE_DASHID:
            	        {
            	        alt368=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 368, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt368) {
            	        case 1 :
            	            // InternalKim.g:17913:5: this_LOWERCASE_ID_5= RULE_LOWERCASE_ID
            	            {
            	            this_LOWERCASE_ID_5=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_192); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(this_LOWERCASE_ID_5);
            	              				
            	            }
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(this_LOWERCASE_ID_5, grammarAccess.getPathAccess().getLOWERCASE_IDTerminalRuleCall_1_1_0());
            	              				
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:17921:5: this_UPPERCASE_ID_6= RULE_UPPERCASE_ID
            	            {
            	            this_UPPERCASE_ID_6=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_192); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(this_UPPERCASE_ID_6);
            	              				
            	            }
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(this_UPPERCASE_ID_6, grammarAccess.getPathAccess().getUPPERCASE_IDTerminalRuleCall_1_1_1());
            	              				
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // InternalKim.g:17929:5: this_LOWERCASE_DASHID_7= RULE_LOWERCASE_DASHID
            	            {
            	            this_LOWERCASE_DASHID_7=(Token)match(input,RULE_LOWERCASE_DASHID,FOLLOW_192); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(this_LOWERCASE_DASHID_7);
            	              				
            	            }
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(this_LOWERCASE_DASHID_7, grammarAccess.getPathAccess().getLOWERCASE_DASHIDTerminalRuleCall_1_1_2());
            	              				
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop369;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePath"


    // $ANTLR start "entryRuleNamespaceId"
    // InternalKim.g:17942:1: entryRuleNamespaceId returns [String current=null] : iv_ruleNamespaceId= ruleNamespaceId EOF ;
    public final String entryRuleNamespaceId() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleNamespaceId = null;


        try {
            // InternalKim.g:17942:51: (iv_ruleNamespaceId= ruleNamespaceId EOF )
            // InternalKim.g:17943:2: iv_ruleNamespaceId= ruleNamespaceId EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNamespaceIdRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNamespaceId=ruleNamespaceId();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNamespaceId.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNamespaceId"


    // $ANTLR start "ruleNamespaceId"
    // InternalKim.g:17949:1: ruleNamespaceId returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_PathName_0= rulePathName kw= ':' this_CAMELCASE_ID_2= RULE_CAMELCASE_ID ) ;
    public final AntlrDatatypeRuleToken ruleNamespaceId() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_CAMELCASE_ID_2=null;
        AntlrDatatypeRuleToken this_PathName_0 = null;



        	enterRule();

        try {
            // InternalKim.g:17955:2: ( (this_PathName_0= rulePathName kw= ':' this_CAMELCASE_ID_2= RULE_CAMELCASE_ID ) )
            // InternalKim.g:17956:2: (this_PathName_0= rulePathName kw= ':' this_CAMELCASE_ID_2= RULE_CAMELCASE_ID )
            {
            // InternalKim.g:17956:2: (this_PathName_0= rulePathName kw= ':' this_CAMELCASE_ID_2= RULE_CAMELCASE_ID )
            // InternalKim.g:17957:3: this_PathName_0= rulePathName kw= ':' this_CAMELCASE_ID_2= RULE_CAMELCASE_ID
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getNamespaceIdAccess().getPathNameParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_82);
            this_PathName_0=rulePathName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_PathName_0);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            kw=(Token)match(input,106,FOLLOW_162); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getNamespaceIdAccess().getColonKeyword_1());
              		
            }
            this_CAMELCASE_ID_2=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_CAMELCASE_ID_2);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_CAMELCASE_ID_2, grammarAccess.getNamespaceIdAccess().getCAMELCASE_IDTerminalRuleCall_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNamespaceId"


    // $ANTLR start "entryRuleAuthorityId"
    // InternalKim.g:17983:1: entryRuleAuthorityId returns [String current=null] : iv_ruleAuthorityId= ruleAuthorityId EOF ;
    public final String entryRuleAuthorityId() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleAuthorityId = null;


        try {
            // InternalKim.g:17983:51: (iv_ruleAuthorityId= ruleAuthorityId EOF )
            // InternalKim.g:17984:2: iv_ruleAuthorityId= ruleAuthorityId EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAuthorityIdRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAuthorityId=ruleAuthorityId();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAuthorityId.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAuthorityId"


    // $ANTLR start "ruleAuthorityId"
    // InternalKim.g:17990:1: ruleAuthorityId returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (this_UPPERCASE_PATH_0= RULE_UPPERCASE_PATH | this_UPPERCASE_ID_1= RULE_UPPERCASE_ID ) kw= ':' (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_UPPERCASE_ID_4= RULE_UPPERCASE_ID | this_INT_5= RULE_INT | this_STRING_6= RULE_STRING ) ) ;
    public final AntlrDatatypeRuleToken ruleAuthorityId() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_UPPERCASE_PATH_0=null;
        Token this_UPPERCASE_ID_1=null;
        Token kw=null;
        Token this_LOWERCASE_ID_3=null;
        Token this_UPPERCASE_ID_4=null;
        Token this_INT_5=null;
        Token this_STRING_6=null;


        	enterRule();

        try {
            // InternalKim.g:17996:2: ( ( (this_UPPERCASE_PATH_0= RULE_UPPERCASE_PATH | this_UPPERCASE_ID_1= RULE_UPPERCASE_ID ) kw= ':' (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_UPPERCASE_ID_4= RULE_UPPERCASE_ID | this_INT_5= RULE_INT | this_STRING_6= RULE_STRING ) ) )
            // InternalKim.g:17997:2: ( (this_UPPERCASE_PATH_0= RULE_UPPERCASE_PATH | this_UPPERCASE_ID_1= RULE_UPPERCASE_ID ) kw= ':' (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_UPPERCASE_ID_4= RULE_UPPERCASE_ID | this_INT_5= RULE_INT | this_STRING_6= RULE_STRING ) )
            {
            // InternalKim.g:17997:2: ( (this_UPPERCASE_PATH_0= RULE_UPPERCASE_PATH | this_UPPERCASE_ID_1= RULE_UPPERCASE_ID ) kw= ':' (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_UPPERCASE_ID_4= RULE_UPPERCASE_ID | this_INT_5= RULE_INT | this_STRING_6= RULE_STRING ) )
            // InternalKim.g:17998:3: (this_UPPERCASE_PATH_0= RULE_UPPERCASE_PATH | this_UPPERCASE_ID_1= RULE_UPPERCASE_ID ) kw= ':' (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_UPPERCASE_ID_4= RULE_UPPERCASE_ID | this_INT_5= RULE_INT | this_STRING_6= RULE_STRING )
            {
            // InternalKim.g:17998:3: (this_UPPERCASE_PATH_0= RULE_UPPERCASE_PATH | this_UPPERCASE_ID_1= RULE_UPPERCASE_ID )
            int alt370=2;
            int LA370_0 = input.LA(1);

            if ( (LA370_0==RULE_UPPERCASE_PATH) ) {
                alt370=1;
            }
            else if ( (LA370_0==RULE_UPPERCASE_ID) ) {
                alt370=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 370, 0, input);

                throw nvae;
            }
            switch (alt370) {
                case 1 :
                    // InternalKim.g:17999:4: this_UPPERCASE_PATH_0= RULE_UPPERCASE_PATH
                    {
                    this_UPPERCASE_PATH_0=(Token)match(input,RULE_UPPERCASE_PATH,FOLLOW_82); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_UPPERCASE_PATH_0);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_UPPERCASE_PATH_0, grammarAccess.getAuthorityIdAccess().getUPPERCASE_PATHTerminalRuleCall_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:18007:4: this_UPPERCASE_ID_1= RULE_UPPERCASE_ID
                    {
                    this_UPPERCASE_ID_1=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_82); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_UPPERCASE_ID_1);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_UPPERCASE_ID_1, grammarAccess.getAuthorityIdAccess().getUPPERCASE_IDTerminalRuleCall_0_1());
                      			
                    }

                    }
                    break;

            }

            kw=(Token)match(input,106,FOLLOW_193); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getAuthorityIdAccess().getColonKeyword_1());
              		
            }
            // InternalKim.g:18020:3: (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_UPPERCASE_ID_4= RULE_UPPERCASE_ID | this_INT_5= RULE_INT | this_STRING_6= RULE_STRING )
            int alt371=4;
            switch ( input.LA(1) ) {
            case RULE_LOWERCASE_ID:
                {
                alt371=1;
                }
                break;
            case RULE_UPPERCASE_ID:
                {
                alt371=2;
                }
                break;
            case RULE_INT:
                {
                alt371=3;
                }
                break;
            case RULE_STRING:
                {
                alt371=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 371, 0, input);

                throw nvae;
            }

            switch (alt371) {
                case 1 :
                    // InternalKim.g:18021:4: this_LOWERCASE_ID_3= RULE_LOWERCASE_ID
                    {
                    this_LOWERCASE_ID_3=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_ID_3);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_ID_3, grammarAccess.getAuthorityIdAccess().getLOWERCASE_IDTerminalRuleCall_2_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:18029:4: this_UPPERCASE_ID_4= RULE_UPPERCASE_ID
                    {
                    this_UPPERCASE_ID_4=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_UPPERCASE_ID_4);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_UPPERCASE_ID_4, grammarAccess.getAuthorityIdAccess().getUPPERCASE_IDTerminalRuleCall_2_1());
                      			
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:18037:4: this_INT_5= RULE_INT
                    {
                    this_INT_5=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_INT_5);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_INT_5, grammarAccess.getAuthorityIdAccess().getINTTerminalRuleCall_2_2());
                      			
                    }

                    }
                    break;
                case 4 :
                    // InternalKim.g:18045:4: this_STRING_6= RULE_STRING
                    {
                    this_STRING_6=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_STRING_6);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_STRING_6, grammarAccess.getAuthorityIdAccess().getSTRINGTerminalRuleCall_2_3());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAuthorityId"


    // $ANTLR start "entryRulePropertyId"
    // InternalKim.g:18057:1: entryRulePropertyId returns [String current=null] : iv_rulePropertyId= rulePropertyId EOF ;
    public final String entryRulePropertyId() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulePropertyId = null;


        try {
            // InternalKim.g:18057:50: (iv_rulePropertyId= rulePropertyId EOF )
            // InternalKim.g:18058:2: iv_rulePropertyId= rulePropertyId EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPropertyIdRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePropertyId=rulePropertyId();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePropertyId.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePropertyId"


    // $ANTLR start "rulePropertyId"
    // InternalKim.g:18064:1: rulePropertyId returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (this_PathName_0= rulePathName | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID ) kw= ':' (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_BACKCASE_ID_4= RULE_BACKCASE_ID | this_LOWERCASE_DASHID_5= RULE_LOWERCASE_DASHID ) ) ;
    public final AntlrDatatypeRuleToken rulePropertyId() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_LOWERCASE_ID_1=null;
        Token kw=null;
        Token this_LOWERCASE_ID_3=null;
        Token this_BACKCASE_ID_4=null;
        Token this_LOWERCASE_DASHID_5=null;
        AntlrDatatypeRuleToken this_PathName_0 = null;



        	enterRule();

        try {
            // InternalKim.g:18070:2: ( ( (this_PathName_0= rulePathName | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID ) kw= ':' (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_BACKCASE_ID_4= RULE_BACKCASE_ID | this_LOWERCASE_DASHID_5= RULE_LOWERCASE_DASHID ) ) )
            // InternalKim.g:18071:2: ( (this_PathName_0= rulePathName | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID ) kw= ':' (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_BACKCASE_ID_4= RULE_BACKCASE_ID | this_LOWERCASE_DASHID_5= RULE_LOWERCASE_DASHID ) )
            {
            // InternalKim.g:18071:2: ( (this_PathName_0= rulePathName | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID ) kw= ':' (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_BACKCASE_ID_4= RULE_BACKCASE_ID | this_LOWERCASE_DASHID_5= RULE_LOWERCASE_DASHID ) )
            // InternalKim.g:18072:3: (this_PathName_0= rulePathName | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID ) kw= ':' (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_BACKCASE_ID_4= RULE_BACKCASE_ID | this_LOWERCASE_DASHID_5= RULE_LOWERCASE_DASHID )
            {
            // InternalKim.g:18072:3: (this_PathName_0= rulePathName | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID )
            int alt372=2;
            int LA372_0 = input.LA(1);

            if ( (LA372_0==RULE_LOWERCASE_ID) ) {
                int LA372_1 = input.LA(2);

                if ( (synpred706_InternalKim()) ) {
                    alt372=1;
                }
                else if ( (true) ) {
                    alt372=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 372, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA372_0==RULE_UPPERCASE_ID||LA372_0==RULE_LOWERCASE_DASHID) ) {
                alt372=1;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 372, 0, input);

                throw nvae;
            }
            switch (alt372) {
                case 1 :
                    // InternalKim.g:18073:4: this_PathName_0= rulePathName
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getPropertyIdAccess().getPathNameParserRuleCall_0_0());
                      			
                    }
                    pushFollow(FOLLOW_82);
                    this_PathName_0=rulePathName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_PathName_0);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:18084:4: this_LOWERCASE_ID_1= RULE_LOWERCASE_ID
                    {
                    this_LOWERCASE_ID_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_82); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_ID_1);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_ID_1, grammarAccess.getPropertyIdAccess().getLOWERCASE_IDTerminalRuleCall_0_1());
                      			
                    }

                    }
                    break;

            }

            kw=(Token)match(input,106,FOLLOW_194); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getPropertyIdAccess().getColonKeyword_1());
              		
            }
            // InternalKim.g:18097:3: (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_BACKCASE_ID_4= RULE_BACKCASE_ID | this_LOWERCASE_DASHID_5= RULE_LOWERCASE_DASHID )
            int alt373=3;
            switch ( input.LA(1) ) {
            case RULE_LOWERCASE_ID:
                {
                alt373=1;
                }
                break;
            case RULE_BACKCASE_ID:
                {
                alt373=2;
                }
                break;
            case RULE_LOWERCASE_DASHID:
                {
                alt373=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 373, 0, input);

                throw nvae;
            }

            switch (alt373) {
                case 1 :
                    // InternalKim.g:18098:4: this_LOWERCASE_ID_3= RULE_LOWERCASE_ID
                    {
                    this_LOWERCASE_ID_3=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_ID_3);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_ID_3, grammarAccess.getPropertyIdAccess().getLOWERCASE_IDTerminalRuleCall_2_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:18106:4: this_BACKCASE_ID_4= RULE_BACKCASE_ID
                    {
                    this_BACKCASE_ID_4=(Token)match(input,RULE_BACKCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_BACKCASE_ID_4);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_BACKCASE_ID_4, grammarAccess.getPropertyIdAccess().getBACKCASE_IDTerminalRuleCall_2_1());
                      			
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:18114:4: this_LOWERCASE_DASHID_5= RULE_LOWERCASE_DASHID
                    {
                    this_LOWERCASE_DASHID_5=(Token)match(input,RULE_LOWERCASE_DASHID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_DASHID_5);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_DASHID_5, grammarAccess.getPropertyIdAccess().getLOWERCASE_DASHIDTerminalRuleCall_2_2());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePropertyId"


    // $ANTLR start "entryRuleVersionNumber"
    // InternalKim.g:18126:1: entryRuleVersionNumber returns [String current=null] : iv_ruleVersionNumber= ruleVersionNumber EOF ;
    public final String entryRuleVersionNumber() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleVersionNumber = null;


        try {
            // InternalKim.g:18126:53: (iv_ruleVersionNumber= ruleVersionNumber EOF )
            // InternalKim.g:18127:2: iv_ruleVersionNumber= ruleVersionNumber EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVersionNumberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleVersionNumber=ruleVersionNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVersionNumber.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVersionNumber"


    // $ANTLR start "ruleVersionNumber"
    // InternalKim.g:18133:1: ruleVersionNumber returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_INT_0= RULE_INT (kw= '.' this_INT_2= RULE_INT (kw= '.' this_INT_4= RULE_INT )? )? (kw= '-' )? (this_LOWERCASE_ID_6= RULE_LOWERCASE_ID | this_UPPERCASE_ID_7= RULE_UPPERCASE_ID )? ) ;
    public final AntlrDatatypeRuleToken ruleVersionNumber() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_INT_0=null;
        Token kw=null;
        Token this_INT_2=null;
        Token this_INT_4=null;
        Token this_LOWERCASE_ID_6=null;
        Token this_UPPERCASE_ID_7=null;


        	enterRule();

        try {
            // InternalKim.g:18139:2: ( (this_INT_0= RULE_INT (kw= '.' this_INT_2= RULE_INT (kw= '.' this_INT_4= RULE_INT )? )? (kw= '-' )? (this_LOWERCASE_ID_6= RULE_LOWERCASE_ID | this_UPPERCASE_ID_7= RULE_UPPERCASE_ID )? ) )
            // InternalKim.g:18140:2: (this_INT_0= RULE_INT (kw= '.' this_INT_2= RULE_INT (kw= '.' this_INT_4= RULE_INT )? )? (kw= '-' )? (this_LOWERCASE_ID_6= RULE_LOWERCASE_ID | this_UPPERCASE_ID_7= RULE_UPPERCASE_ID )? )
            {
            // InternalKim.g:18140:2: (this_INT_0= RULE_INT (kw= '.' this_INT_2= RULE_INT (kw= '.' this_INT_4= RULE_INT )? )? (kw= '-' )? (this_LOWERCASE_ID_6= RULE_LOWERCASE_ID | this_UPPERCASE_ID_7= RULE_UPPERCASE_ID )? )
            // InternalKim.g:18141:3: this_INT_0= RULE_INT (kw= '.' this_INT_2= RULE_INT (kw= '.' this_INT_4= RULE_INT )? )? (kw= '-' )? (this_LOWERCASE_ID_6= RULE_LOWERCASE_ID | this_UPPERCASE_ID_7= RULE_UPPERCASE_ID )?
            {
            this_INT_0=(Token)match(input,RULE_INT,FOLLOW_195); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_INT_0);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_INT_0, grammarAccess.getVersionNumberAccess().getINTTerminalRuleCall_0());
              		
            }
            // InternalKim.g:18148:3: (kw= '.' this_INT_2= RULE_INT (kw= '.' this_INT_4= RULE_INT )? )?
            int alt375=2;
            int LA375_0 = input.LA(1);

            if ( (LA375_0==109) ) {
                alt375=1;
            }
            switch (alt375) {
                case 1 :
                    // InternalKim.g:18149:4: kw= '.' this_INT_2= RULE_INT (kw= '.' this_INT_4= RULE_INT )?
                    {
                    kw=(Token)match(input,109,FOLLOW_78); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getVersionNumberAccess().getFullStopKeyword_1_0());
                      			
                    }
                    this_INT_2=(Token)match(input,RULE_INT,FOLLOW_195); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_INT_2);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_INT_2, grammarAccess.getVersionNumberAccess().getINTTerminalRuleCall_1_1());
                      			
                    }
                    // InternalKim.g:18161:4: (kw= '.' this_INT_4= RULE_INT )?
                    int alt374=2;
                    int LA374_0 = input.LA(1);

                    if ( (LA374_0==109) ) {
                        alt374=1;
                    }
                    switch (alt374) {
                        case 1 :
                            // InternalKim.g:18162:5: kw= '.' this_INT_4= RULE_INT
                            {
                            kw=(Token)match(input,109,FOLLOW_78); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getVersionNumberAccess().getFullStopKeyword_1_2_0());
                              				
                            }
                            this_INT_4=(Token)match(input,RULE_INT,FOLLOW_196); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_INT_4);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					newLeafNode(this_INT_4, grammarAccess.getVersionNumberAccess().getINTTerminalRuleCall_1_2_1());
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            // InternalKim.g:18176:3: (kw= '-' )?
            int alt376=2;
            int LA376_0 = input.LA(1);

            if ( (LA376_0==252) ) {
                alt376=1;
            }
            switch (alt376) {
                case 1 :
                    // InternalKim.g:18177:4: kw= '-'
                    {
                    kw=(Token)match(input,252,FOLLOW_197); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getVersionNumberAccess().getHyphenMinusKeyword_2());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:18183:3: (this_LOWERCASE_ID_6= RULE_LOWERCASE_ID | this_UPPERCASE_ID_7= RULE_UPPERCASE_ID )?
            int alt377=3;
            int LA377_0 = input.LA(1);

            if ( (LA377_0==RULE_LOWERCASE_ID) ) {
                int LA377_1 = input.LA(2);

                if ( (synpred712_InternalKim()) ) {
                    alt377=1;
                }
            }
            else if ( (LA377_0==RULE_UPPERCASE_ID) ) {
                int LA377_2 = input.LA(2);

                if ( (synpred713_InternalKim()) ) {
                    alt377=2;
                }
            }
            switch (alt377) {
                case 1 :
                    // InternalKim.g:18184:4: this_LOWERCASE_ID_6= RULE_LOWERCASE_ID
                    {
                    this_LOWERCASE_ID_6=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_ID_6);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_ID_6, grammarAccess.getVersionNumberAccess().getLOWERCASE_IDTerminalRuleCall_3_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:18192:4: this_UPPERCASE_ID_7= RULE_UPPERCASE_ID
                    {
                    this_UPPERCASE_ID_7=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_UPPERCASE_ID_7);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_UPPERCASE_ID_7, grammarAccess.getVersionNumberAccess().getUPPERCASE_IDTerminalRuleCall_3_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVersionNumber"


    // $ANTLR start "ruleUnitOp"
    // InternalKim.g:18204:1: ruleUnitOp returns [Enumerator current=null] : ( (enumLiteral_0= '/' ) | (enumLiteral_1= '^' ) | (enumLiteral_2= '*' ) ) ;
    public final Enumerator ruleUnitOp() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;


        	enterRule();

        try {
            // InternalKim.g:18210:2: ( ( (enumLiteral_0= '/' ) | (enumLiteral_1= '^' ) | (enumLiteral_2= '*' ) ) )
            // InternalKim.g:18211:2: ( (enumLiteral_0= '/' ) | (enumLiteral_1= '^' ) | (enumLiteral_2= '*' ) )
            {
            // InternalKim.g:18211:2: ( (enumLiteral_0= '/' ) | (enumLiteral_1= '^' ) | (enumLiteral_2= '*' ) )
            int alt378=3;
            switch ( input.LA(1) ) {
            case 108:
                {
                alt378=1;
                }
                break;
            case 259:
                {
                alt378=2;
                }
                break;
            case 40:
                {
                alt378=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 378, 0, input);

                throw nvae;
            }

            switch (alt378) {
                case 1 :
                    // InternalKim.g:18212:3: (enumLiteral_0= '/' )
                    {
                    // InternalKim.g:18212:3: (enumLiteral_0= '/' )
                    // InternalKim.g:18213:4: enumLiteral_0= '/'
                    {
                    enumLiteral_0=(Token)match(input,108,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getUnitOpAccess().getOVEREnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getUnitOpAccess().getOVEREnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:18220:3: (enumLiteral_1= '^' )
                    {
                    // InternalKim.g:18220:3: (enumLiteral_1= '^' )
                    // InternalKim.g:18221:4: enumLiteral_1= '^'
                    {
                    enumLiteral_1=(Token)match(input,259,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getUnitOpAccess().getCARETEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getUnitOpAccess().getCARETEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:18228:3: (enumLiteral_2= '*' )
                    {
                    // InternalKim.g:18228:3: (enumLiteral_2= '*' )
                    // InternalKim.g:18229:4: enumLiteral_2= '*'
                    {
                    enumLiteral_2=(Token)match(input,40,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getUnitOpAccess().getSTAREnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getUnitOpAccess().getSTAREnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnitOp"

    // $ANTLR start synpred2_InternalKim
    public final void synpred2_InternalKim_fragment() throws RecognitionException {   
        EObject lv_namespace_1_0 = null;


        // InternalKim.g:110:5: ( (lv_namespace_1_0= ruleNamespace ) )
        // InternalKim.g:110:5: (lv_namespace_1_0= ruleNamespace )
        {
        // InternalKim.g:110:5: (lv_namespace_1_0= ruleNamespace )
        // InternalKim.g:111:6: lv_namespace_1_0= ruleNamespace
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getModelAccess().getNamespaceNamespaceParserRuleCall_1_0_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_namespace_1_0=ruleNamespace();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred2_InternalKim

    // $ANTLR start synpred4_InternalKim
    public final void synpred4_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        EObject lv_conceptStatement_0_0 = null;


        // InternalKim.g:167:3: ( ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' ) )
        // InternalKim.g:167:3: ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' )
        {
        // InternalKim.g:167:3: ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' )
        // InternalKim.g:168:4: ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';'
        {
        // InternalKim.g:168:4: ( (lv_conceptStatement_0_0= ruleConceptStatement ) )
        // InternalKim.g:169:5: (lv_conceptStatement_0_0= ruleConceptStatement )
        {
        // InternalKim.g:169:5: (lv_conceptStatement_0_0= ruleConceptStatement )
        // InternalKim.g:170:6: lv_conceptStatement_0_0= ruleConceptStatement
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getStatementAccess().getConceptStatementConceptStatementParserRuleCall_0_0_0());
          					
        }
        pushFollow(FOLLOW_4);
        lv_conceptStatement_0_0=ruleConceptStatement();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_1=(Token)match(input,20,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred4_InternalKim

    // $ANTLR start synpred5_InternalKim
    public final void synpred5_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_3=null;
        EObject lv_modelStatement_2_0 = null;


        // InternalKim.g:193:3: ( ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' ) )
        // InternalKim.g:193:3: ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' )
        {
        // InternalKim.g:193:3: ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' )
        // InternalKim.g:194:4: ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';'
        {
        // InternalKim.g:194:4: ( (lv_modelStatement_2_0= ruleModelStatement ) )
        // InternalKim.g:195:5: (lv_modelStatement_2_0= ruleModelStatement )
        {
        // InternalKim.g:195:5: (lv_modelStatement_2_0= ruleModelStatement )
        // InternalKim.g:196:6: lv_modelStatement_2_0= ruleModelStatement
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getStatementAccess().getModelStatementModelStatementParserRuleCall_1_0_0());
          					
        }
        pushFollow(FOLLOW_4);
        lv_modelStatement_2_0=ruleModelStatement();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_3=(Token)match(input,20,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred5_InternalKim

    // $ANTLR start synpred6_InternalKim
    public final void synpred6_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_5=null;
        EObject lv_upperOntologyStatement_4_0 = null;


        // InternalKim.g:219:3: ( ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' ) )
        // InternalKim.g:219:3: ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' )
        {
        // InternalKim.g:219:3: ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' )
        // InternalKim.g:220:4: ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';'
        {
        // InternalKim.g:220:4: ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) )
        // InternalKim.g:221:5: (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition )
        {
        // InternalKim.g:221:5: (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition )
        // InternalKim.g:222:6: lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getStatementAccess().getUpperOntologyStatementUpperOntologyDefinitionParserRuleCall_2_0_0());
          					
        }
        pushFollow(FOLLOW_4);
        lv_upperOntologyStatement_4_0=ruleUpperOntologyDefinition();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_5=(Token)match(input,20,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred6_InternalKim

    // $ANTLR start synpred7_InternalKim
    public final void synpred7_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_7=null;
        EObject lv_defineStatement_6_0 = null;


        // InternalKim.g:245:3: ( ( ( (lv_defineStatement_6_0= ruleDefineStatement ) ) otherlv_7= ';' ) )
        // InternalKim.g:245:3: ( ( (lv_defineStatement_6_0= ruleDefineStatement ) ) otherlv_7= ';' )
        {
        // InternalKim.g:245:3: ( ( (lv_defineStatement_6_0= ruleDefineStatement ) ) otherlv_7= ';' )
        // InternalKim.g:246:4: ( (lv_defineStatement_6_0= ruleDefineStatement ) ) otherlv_7= ';'
        {
        // InternalKim.g:246:4: ( (lv_defineStatement_6_0= ruleDefineStatement ) )
        // InternalKim.g:247:5: (lv_defineStatement_6_0= ruleDefineStatement )
        {
        // InternalKim.g:247:5: (lv_defineStatement_6_0= ruleDefineStatement )
        // InternalKim.g:248:6: lv_defineStatement_6_0= ruleDefineStatement
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getStatementAccess().getDefineStatementDefineStatementParserRuleCall_3_0_0());
          					
        }
        pushFollow(FOLLOW_4);
        lv_defineStatement_6_0=ruleDefineStatement();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_7=(Token)match(input,20,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred7_InternalKim

    // $ANTLR start synpred10_InternalKim
    public final void synpred10_InternalKim_fragment() throws RecognitionException {   
        Token lv_inactive_3_0=null;

        // InternalKim.g:372:4: ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) )
        // InternalKim.g:372:4: ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) )
        {
        // InternalKim.g:372:4: ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) )
        // InternalKim.g:373:5: {...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred10_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0)");
        }
        // InternalKim.g:373:111: ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) )
        // InternalKim.g:374:6: ({...}? => ( (lv_inactive_3_0= 'void' ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0);
        // InternalKim.g:377:9: ({...}? => ( (lv_inactive_3_0= 'void' ) ) )
        // InternalKim.g:377:10: {...}? => ( (lv_inactive_3_0= 'void' ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred10_InternalKim", "true");
        }
        // InternalKim.g:377:19: ( (lv_inactive_3_0= 'void' ) )
        // InternalKim.g:377:20: (lv_inactive_3_0= 'void' )
        {
        // InternalKim.g:377:20: (lv_inactive_3_0= 'void' )
        // InternalKim.g:378:10: lv_inactive_3_0= 'void'
        {
        lv_inactive_3_0=(Token)match(input,21,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred10_InternalKim

    // $ANTLR start synpred12_InternalKim
    public final void synpred12_InternalKim_fragment() throws RecognitionException {   
        Token lv_projectPrivate_4_0=null;
        Token lv_private_5_0=null;

        // InternalKim.g:395:4: ( ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )
        // InternalKim.g:395:4: ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) )
        {
        // InternalKim.g:395:4: ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) )
        // InternalKim.g:396:5: {...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred12_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1)");
        }
        // InternalKim.g:396:111: ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) )
        // InternalKim.g:397:6: ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1);
        // InternalKim.g:400:9: ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) )
        // InternalKim.g:400:10: {...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred12_InternalKim", "true");
        }
        // InternalKim.g:400:19: ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) )
        // InternalKim.g:400:20: ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) )
        {
        // InternalKim.g:400:20: ( (lv_projectPrivate_4_0= 'project' ) )?
        int alt380=2;
        int LA380_0 = input.LA(1);

        if ( (LA380_0==22) ) {
            alt380=1;
        }
        switch (alt380) {
            case 1 :
                // InternalKim.g:401:10: (lv_projectPrivate_4_0= 'project' )
                {
                // InternalKim.g:401:10: (lv_projectPrivate_4_0= 'project' )
                // InternalKim.g:402:11: lv_projectPrivate_4_0= 'project'
                {
                lv_projectPrivate_4_0=(Token)match(input,22,FOLLOW_7); if (state.failed) return ;

                }


                }
                break;

        }

        // InternalKim.g:414:9: ( (lv_private_5_0= 'private' ) )
        // InternalKim.g:415:10: (lv_private_5_0= 'private' )
        {
        // InternalKim.g:415:10: (lv_private_5_0= 'private' )
        // InternalKim.g:416:11: lv_private_5_0= 'private'
        {
        lv_private_5_0=(Token)match(input,23,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred12_InternalKim

    // $ANTLR start synpred13_InternalKim
    public final void synpred13_InternalKim_fragment() throws RecognitionException {   
        Token lv_inactive_3_0=null;
        Token lv_projectPrivate_4_0=null;
        Token lv_private_5_0=null;

        // InternalKim.g:366:4: ( ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )* ) ) )
        // InternalKim.g:366:4: ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )* ) )
        {
        // InternalKim.g:366:4: ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )* ) )
        // InternalKim.g:367:5: ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )* )
        {
        getUnorderedGroupHelper().enter(grammarAccess.getModelStatementAccess().getUnorderedGroup_1());
        // InternalKim.g:370:5: ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )* )
        // InternalKim.g:371:6: ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )*
        {
        // InternalKim.g:371:6: ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )*
        loop382:
        do {
            int alt382=3;
            int LA382_0 = input.LA(1);

            if ( LA382_0 == 21 && getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0) ) {
                alt382=1;
            }
            else if ( LA382_0 == 22 && getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1) ) {
                alt382=2;
            }
            else if ( LA382_0 == 23 && getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1) ) {
                alt382=2;
            }


            switch (alt382) {
        	case 1 :
        	    // InternalKim.g:372:4: ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) )
        	    {
        	    // InternalKim.g:372:4: ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) )
        	    // InternalKim.g:373:5: {...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred13_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0)");
        	    }
        	    // InternalKim.g:373:111: ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) )
        	    // InternalKim.g:374:6: ({...}? => ( (lv_inactive_3_0= 'void' ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0);
        	    // InternalKim.g:377:9: ({...}? => ( (lv_inactive_3_0= 'void' ) ) )
        	    // InternalKim.g:377:10: {...}? => ( (lv_inactive_3_0= 'void' ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred13_InternalKim", "true");
        	    }
        	    // InternalKim.g:377:19: ( (lv_inactive_3_0= 'void' ) )
        	    // InternalKim.g:377:20: (lv_inactive_3_0= 'void' )
        	    {
        	    // InternalKim.g:377:20: (lv_inactive_3_0= 'void' )
        	    // InternalKim.g:378:10: lv_inactive_3_0= 'void'
        	    {
        	    lv_inactive_3_0=(Token)match(input,21,FOLLOW_198); if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 2 :
        	    // InternalKim.g:395:4: ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) )
        	    {
        	    // InternalKim.g:395:4: ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) )
        	    // InternalKim.g:396:5: {...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred13_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1)");
        	    }
        	    // InternalKim.g:396:111: ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) )
        	    // InternalKim.g:397:6: ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1);
        	    // InternalKim.g:400:9: ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) )
        	    // InternalKim.g:400:10: {...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred13_InternalKim", "true");
        	    }
        	    // InternalKim.g:400:19: ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) )
        	    // InternalKim.g:400:20: ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) )
        	    {
        	    // InternalKim.g:400:20: ( (lv_projectPrivate_4_0= 'project' ) )?
        	    int alt381=2;
        	    int LA381_0 = input.LA(1);

        	    if ( (LA381_0==22) ) {
        	        alt381=1;
        	    }
        	    switch (alt381) {
        	        case 1 :
        	            // InternalKim.g:401:10: (lv_projectPrivate_4_0= 'project' )
        	            {
        	            // InternalKim.g:401:10: (lv_projectPrivate_4_0= 'project' )
        	            // InternalKim.g:402:11: lv_projectPrivate_4_0= 'project'
        	            {
        	            lv_projectPrivate_4_0=(Token)match(input,22,FOLLOW_7); if (state.failed) return ;

        	            }


        	            }
        	            break;

        	    }

        	    // InternalKim.g:414:9: ( (lv_private_5_0= 'private' ) )
        	    // InternalKim.g:415:10: (lv_private_5_0= 'private' )
        	    {
        	    // InternalKim.g:415:10: (lv_private_5_0= 'private' )
        	    // InternalKim.g:416:11: lv_private_5_0= 'private'
        	    {
        	    lv_private_5_0=(Token)match(input,23,FOLLOW_198); if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop382;
            }
        } while (true);


        }


        }


        }
    }
    // $ANTLR end synpred13_InternalKim

    // $ANTLR start synpred20_InternalKim
    public final void synpred20_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        EObject lv_urns_1_0 = null;

        EObject lv_urns_3_0 = null;


        // InternalKim.g:694:5: ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) )
        // InternalKim.g:694:5: ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* )
        {
        // InternalKim.g:694:5: ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* )
        // InternalKim.g:695:6: ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )*
        {
        // InternalKim.g:695:6: ( (lv_urns_1_0= ruleUrn ) )
        // InternalKim.g:696:7: (lv_urns_1_0= ruleUrn )
        {
        // InternalKim.g:696:7: (lv_urns_1_0= ruleUrn )
        // InternalKim.g:697:8: lv_urns_1_0= ruleUrn
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getModelBodyStatementAccess().getUrnsUrnParserRuleCall_1_0_0_0_0());
          							
        }
        pushFollow(FOLLOW_34);
        lv_urns_1_0=ruleUrn();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:714:6: (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )*
        loop384:
        do {
            int alt384=2;
            int LA384_0 = input.LA(1);

            if ( (LA384_0==27) ) {
                alt384=1;
            }


            switch (alt384) {
        	case 1 :
        	    // InternalKim.g:715:7: otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) )
        	    {
        	    otherlv_2=(Token)match(input,27,FOLLOW_14); if (state.failed) return ;
        	    // InternalKim.g:719:7: ( (lv_urns_3_0= ruleUrn ) )
        	    // InternalKim.g:720:8: (lv_urns_3_0= ruleUrn )
        	    {
        	    // InternalKim.g:720:8: (lv_urns_3_0= ruleUrn )
        	    // InternalKim.g:721:9: lv_urns_3_0= ruleUrn
        	    {
        	    if ( state.backtracking==0 ) {

        	      									newCompositeNode(grammarAccess.getModelBodyStatementAccess().getUrnsUrnParserRuleCall_1_0_0_1_1_0());
        	      								
        	    }
        	    pushFollow(FOLLOW_34);
        	    lv_urns_3_0=ruleUrn();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop384;
            }
        } while (true);


        }


        }
    }
    // $ANTLR end synpred20_InternalKim

    // $ANTLR start synpred22_InternalKim
    public final void synpred22_InternalKim_fragment() throws RecognitionException {   
        EObject lv_concept_5_0 = null;


        // InternalKim.g:761:5: ( ( (lv_concept_5_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:761:5: ( (lv_concept_5_0= ruleConceptDeclaration ) )
        {
        // InternalKim.g:761:5: ( (lv_concept_5_0= ruleConceptDeclaration ) )
        // InternalKim.g:762:6: (lv_concept_5_0= ruleConceptDeclaration )
        {
        // InternalKim.g:762:6: (lv_concept_5_0= ruleConceptDeclaration )
        // InternalKim.g:763:7: lv_concept_5_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getConceptConceptDeclarationParserRuleCall_1_0_2_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_concept_5_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred22_InternalKim

    // $ANTLR start synpred24_InternalKim
    public final void synpred24_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        Token lv_boolean_6_1=null;
        Token lv_boolean_6_2=null;
        Token otherlv_7=null;
        EObject lv_urns_1_0 = null;

        EObject lv_urns_3_0 = null;

        EObject lv_number_4_0 = null;

        EObject lv_concept_5_0 = null;


        // InternalKim.g:693:4: ( ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_number_4_0= ruleNumber ) ) | ( (lv_concept_5_0= ruleConceptDeclaration ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) ) otherlv_7= 'as' )
        // InternalKim.g:693:4: ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_number_4_0= ruleNumber ) ) | ( (lv_concept_5_0= ruleConceptDeclaration ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) ) otherlv_7= 'as'
        {
        // InternalKim.g:693:4: ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_number_4_0= ruleNumber ) ) | ( (lv_concept_5_0= ruleConceptDeclaration ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) )
        int alt387=4;
        alt387 = dfa387.predict(input);
        switch (alt387) {
            case 1 :
                // InternalKim.g:694:5: ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* )
                {
                // InternalKim.g:694:5: ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* )
                // InternalKim.g:695:6: ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )*
                {
                // InternalKim.g:695:6: ( (lv_urns_1_0= ruleUrn ) )
                // InternalKim.g:696:7: (lv_urns_1_0= ruleUrn )
                {
                // InternalKim.g:696:7: (lv_urns_1_0= ruleUrn )
                // InternalKim.g:697:8: lv_urns_1_0= ruleUrn
                {
                if ( state.backtracking==0 ) {

                  								newCompositeNode(grammarAccess.getModelBodyStatementAccess().getUrnsUrnParserRuleCall_1_0_0_0_0());
                  							
                }
                pushFollow(FOLLOW_13);
                lv_urns_1_0=ruleUrn();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalKim.g:714:6: (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )*
                loop385:
                do {
                    int alt385=2;
                    int LA385_0 = input.LA(1);

                    if ( (LA385_0==27) ) {
                        alt385=1;
                    }


                    switch (alt385) {
                	case 1 :
                	    // InternalKim.g:715:7: otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) )
                	    {
                	    otherlv_2=(Token)match(input,27,FOLLOW_14); if (state.failed) return ;
                	    // InternalKim.g:719:7: ( (lv_urns_3_0= ruleUrn ) )
                	    // InternalKim.g:720:8: (lv_urns_3_0= ruleUrn )
                	    {
                	    // InternalKim.g:720:8: (lv_urns_3_0= ruleUrn )
                	    // InternalKim.g:721:9: lv_urns_3_0= ruleUrn
                	    {
                	    if ( state.backtracking==0 ) {

                	      									newCompositeNode(grammarAccess.getModelBodyStatementAccess().getUrnsUrnParserRuleCall_1_0_0_1_1_0());
                	      								
                	    }
                	    pushFollow(FOLLOW_13);
                	    lv_urns_3_0=ruleUrn();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop385;
                    }
                } while (true);


                }


                }
                break;
            case 2 :
                // InternalKim.g:741:5: ( (lv_number_4_0= ruleNumber ) )
                {
                // InternalKim.g:741:5: ( (lv_number_4_0= ruleNumber ) )
                // InternalKim.g:742:6: (lv_number_4_0= ruleNumber )
                {
                // InternalKim.g:742:6: (lv_number_4_0= ruleNumber )
                // InternalKim.g:743:7: lv_number_4_0= ruleNumber
                {
                if ( state.backtracking==0 ) {

                  							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getNumberNumberParserRuleCall_1_0_1_0());
                  						
                }
                pushFollow(FOLLOW_11);
                lv_number_4_0=ruleNumber();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;
            case 3 :
                // InternalKim.g:761:5: ( (lv_concept_5_0= ruleConceptDeclaration ) )
                {
                // InternalKim.g:761:5: ( (lv_concept_5_0= ruleConceptDeclaration ) )
                // InternalKim.g:762:6: (lv_concept_5_0= ruleConceptDeclaration )
                {
                // InternalKim.g:762:6: (lv_concept_5_0= ruleConceptDeclaration )
                // InternalKim.g:763:7: lv_concept_5_0= ruleConceptDeclaration
                {
                if ( state.backtracking==0 ) {

                  							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getConceptConceptDeclarationParserRuleCall_1_0_2_0());
                  						
                }
                pushFollow(FOLLOW_11);
                lv_concept_5_0=ruleConceptDeclaration();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;
            case 4 :
                // InternalKim.g:781:5: ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) )
                {
                // InternalKim.g:781:5: ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) )
                // InternalKim.g:782:6: ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) )
                {
                // InternalKim.g:782:6: ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) )
                // InternalKim.g:783:7: (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' )
                {
                // InternalKim.g:783:7: (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' )
                int alt386=2;
                int LA386_0 = input.LA(1);

                if ( (LA386_0==28) ) {
                    alt386=1;
                }
                else if ( (LA386_0==29) ) {
                    alt386=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 386, 0, input);

                    throw nvae;
                }
                switch (alt386) {
                    case 1 :
                        // InternalKim.g:784:8: lv_boolean_6_1= 'true'
                        {
                        lv_boolean_6_1=(Token)match(input,28,FOLLOW_11); if (state.failed) return ;

                        }
                        break;
                    case 2 :
                        // InternalKim.g:795:8: lv_boolean_6_2= 'false'
                        {
                        lv_boolean_6_2=(Token)match(input,29,FOLLOW_11); if (state.failed) return ;

                        }
                        break;

                }


                }


                }


                }
                break;

        }

        otherlv_7=(Token)match(input,25,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred24_InternalKim

    // $ANTLR start synpred54_InternalKim
    public final void synpred54_InternalKim_fragment() throws RecognitionException {   
        // InternalKim.g:1529:5: ( 'to' )
        // InternalKim.g:1529:6: 'to'
        {
        match(input,36,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred54_InternalKim

    // $ANTLR start synpred58_InternalKim
    public final void synpred58_InternalKim_fragment() throws RecognitionException {   
        Token lv_leftLimit_3_0=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token lv_rightLimit_7_0=null;
        Token otherlv_8=null;
        EObject lv_int0_2_0 = null;

        EObject lv_int1_6_0 = null;


        // InternalKim.g:1487:3: ( ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) )
        // InternalKim.g:1487:3: ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? )
        {
        // InternalKim.g:1487:3: ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? )
        // InternalKim.g:1488:4: ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )?
        {
        // InternalKim.g:1488:4: ( (lv_int0_2_0= ruleNumber ) )
        // InternalKim.g:1489:5: (lv_int0_2_0= ruleNumber )
        {
        // InternalKim.g:1489:5: (lv_int0_2_0= ruleNumber )
        // InternalKim.g:1490:6: lv_int0_2_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getClassifierRHSAccess().getInt0NumberParserRuleCall_1_0_0());
          					
        }
        pushFollow(FOLLOW_37);
        lv_int0_2_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:1507:4: ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )?
        int alt403=3;
        int LA403_0 = input.LA(1);

        if ( (LA403_0==46) ) {
            alt403=1;
        }
        else if ( (LA403_0==47) ) {
            alt403=2;
        }
        switch (alt403) {
            case 1 :
                // InternalKim.g:1508:5: ( (lv_leftLimit_3_0= 'inclusive' ) )
                {
                // InternalKim.g:1508:5: ( (lv_leftLimit_3_0= 'inclusive' ) )
                // InternalKim.g:1509:6: (lv_leftLimit_3_0= 'inclusive' )
                {
                // InternalKim.g:1509:6: (lv_leftLimit_3_0= 'inclusive' )
                // InternalKim.g:1510:7: lv_leftLimit_3_0= 'inclusive'
                {
                lv_leftLimit_3_0=(Token)match(input,46,FOLLOW_25); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:1523:5: otherlv_4= 'exclusive'
                {
                otherlv_4=(Token)match(input,47,FOLLOW_25); if (state.failed) return ;

                }
                break;

        }

        // InternalKim.g:1528:4: ( ( 'to' )=>otherlv_5= 'to' )
        // InternalKim.g:1529:5: ( 'to' )=>otherlv_5= 'to'
        {
        otherlv_5=(Token)match(input,36,FOLLOW_38); if (state.failed) return ;

        }

        // InternalKim.g:1535:4: ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) )
        // InternalKim.g:1536:5: ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber )
        {
        // InternalKim.g:1540:5: (lv_int1_6_0= ruleNumber )
        // InternalKim.g:1541:6: lv_int1_6_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getClassifierRHSAccess().getInt1NumberParserRuleCall_1_3_0());
          					
        }
        pushFollow(FOLLOW_39);
        lv_int1_6_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:1558:4: ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )?
        int alt404=3;
        int LA404_0 = input.LA(1);

        if ( (LA404_0==46) ) {
            alt404=1;
        }
        else if ( (LA404_0==47) ) {
            alt404=2;
        }
        switch (alt404) {
            case 1 :
                // InternalKim.g:1559:5: ( (lv_rightLimit_7_0= 'inclusive' ) )
                {
                // InternalKim.g:1559:5: ( (lv_rightLimit_7_0= 'inclusive' ) )
                // InternalKim.g:1560:6: (lv_rightLimit_7_0= 'inclusive' )
                {
                // InternalKim.g:1560:6: (lv_rightLimit_7_0= 'inclusive' )
                // InternalKim.g:1561:7: lv_rightLimit_7_0= 'inclusive'
                {
                lv_rightLimit_7_0=(Token)match(input,46,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:1574:5: otherlv_8= 'exclusive'
                {
                otherlv_8=(Token)match(input,47,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred58_InternalKim

    // $ANTLR start synpred59_InternalKim
    public final void synpred59_InternalKim_fragment() throws RecognitionException {   
        EObject lv_num_9_0 = null;


        // InternalKim.g:1581:3: ( ( (lv_num_9_0= ruleNumber ) ) )
        // InternalKim.g:1581:3: ( (lv_num_9_0= ruleNumber ) )
        {
        // InternalKim.g:1581:3: ( (lv_num_9_0= ruleNumber ) )
        // InternalKim.g:1582:4: (lv_num_9_0= ruleNumber )
        {
        // InternalKim.g:1582:4: (lv_num_9_0= ruleNumber )
        // InternalKim.g:1583:5: lv_num_9_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getClassifierRHSAccess().getNumNumberParserRuleCall_2_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_num_9_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred59_InternalKim

    // $ANTLR start synpred62_InternalKim
    public final void synpred62_InternalKim_fragment() throws RecognitionException {   
        EObject lv_concept_13_0 = null;


        // InternalKim.g:1646:3: ( ( (lv_concept_13_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:1646:3: ( (lv_concept_13_0= ruleConceptDeclaration ) )
        {
        // InternalKim.g:1646:3: ( (lv_concept_13_0= ruleConceptDeclaration ) )
        // InternalKim.g:1647:4: (lv_concept_13_0= ruleConceptDeclaration )
        {
        // InternalKim.g:1647:4: (lv_concept_13_0= ruleConceptDeclaration )
        // InternalKim.g:1648:5: lv_concept_13_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getClassifierRHSAccess().getConceptConceptDeclarationParserRuleCall_5_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_concept_13_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred62_InternalKim

    // $ANTLR start synpred65_InternalKim
    public final void synpred65_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        EObject lv_toResolve_15_0 = null;

        EObject lv_toResolve_17_0 = null;


        // InternalKim.g:1666:3: ( (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' ) )
        // InternalKim.g:1666:3: (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' )
        {
        // InternalKim.g:1666:3: (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' )
        // InternalKim.g:1667:4: otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')'
        {
        otherlv_14=(Token)match(input,38,FOLLOW_23); if (state.failed) return ;
        // InternalKim.g:1671:4: ( (lv_toResolve_15_0= ruleConceptDeclaration ) )
        // InternalKim.g:1672:5: (lv_toResolve_15_0= ruleConceptDeclaration )
        {
        // InternalKim.g:1672:5: (lv_toResolve_15_0= ruleConceptDeclaration )
        // InternalKim.g:1673:6: lv_toResolve_15_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getClassifierRHSAccess().getToResolveConceptDeclarationParserRuleCall_6_1_0());
          					
        }
        pushFollow(FOLLOW_29);
        lv_toResolve_15_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:1690:4: ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )*
        loop405:
        do {
            int alt405=2;
            int LA405_0 = input.LA(1);

            if ( (LA405_0==27) ) {
                alt405=1;
            }


            switch (alt405) {
        	case 1 :
        	    // InternalKim.g:1691:5: ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) )
        	    {
        	    // InternalKim.g:1691:5: ( ( ',' )=>otherlv_16= ',' )
        	    // InternalKim.g:1692:6: ( ',' )=>otherlv_16= ','
        	    {
        	    otherlv_16=(Token)match(input,27,FOLLOW_23); if (state.failed) return ;

        	    }

        	    // InternalKim.g:1698:5: ( (lv_toResolve_17_0= ruleConceptDeclaration ) )
        	    // InternalKim.g:1699:6: (lv_toResolve_17_0= ruleConceptDeclaration )
        	    {
        	    // InternalKim.g:1699:6: (lv_toResolve_17_0= ruleConceptDeclaration )
        	    // InternalKim.g:1700:7: lv_toResolve_17_0= ruleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      							newCompositeNode(grammarAccess.getClassifierRHSAccess().getToResolveConceptDeclarationParserRuleCall_6_2_1_0());
        	      						
        	    }
        	    pushFollow(FOLLOW_29);
        	    lv_toResolve_17_0=ruleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop405;
            }
        } while (true);

        otherlv_18=(Token)match(input,41,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred65_InternalKim

    // $ANTLR start synpred72_InternalKim
    public final void synpred72_InternalKim_fragment() throws RecognitionException {   
        // InternalKim.g:1887:5: ( 'to' )
        // InternalKim.g:1887:6: 'to'
        {
        match(input,36,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred72_InternalKim

    // $ANTLR start synpred79_InternalKim
    public final void synpred79_InternalKim_fragment() throws RecognitionException {   
        EObject lv_concept_11_0 = null;


        // InternalKim.g:1978:3: ( ( (lv_concept_11_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:1978:3: ( (lv_concept_11_0= ruleConceptDeclaration ) )
        {
        // InternalKim.g:1978:3: ( (lv_concept_11_0= ruleConceptDeclaration ) )
        // InternalKim.g:1979:4: (lv_concept_11_0= ruleConceptDeclaration )
        {
        // InternalKim.g:1979:4: (lv_concept_11_0= ruleConceptDeclaration )
        // InternalKim.g:1980:5: lv_concept_11_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getClassifierRHSWithIdNoSetAccess().getConceptConceptDeclarationParserRuleCall_4_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_concept_11_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred79_InternalKim

    // $ANTLR start synpred80_InternalKim
    public final void synpred80_InternalKim_fragment() throws RecognitionException {   
        Token lv_id_12_1=null;

        // InternalKim.g:2001:6: (lv_id_12_1= RULE_LOWERCASE_ID )
        // InternalKim.g:2001:6: lv_id_12_1= RULE_LOWERCASE_ID
        {
        lv_id_12_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred80_InternalKim

    // $ANTLR start synpred81_InternalKim
    public final void synpred81_InternalKim_fragment() throws RecognitionException {   
        Token lv_id_12_1=null;
        AntlrDatatypeRuleToken lv_id_12_2 = null;


        // InternalKim.g:1998:3: ( ( ( (lv_id_12_1= RULE_LOWERCASE_ID | lv_id_12_2= rulePropertyId ) ) ) )
        // InternalKim.g:1998:3: ( ( (lv_id_12_1= RULE_LOWERCASE_ID | lv_id_12_2= rulePropertyId ) ) )
        {
        // InternalKim.g:1998:3: ( ( (lv_id_12_1= RULE_LOWERCASE_ID | lv_id_12_2= rulePropertyId ) ) )
        // InternalKim.g:1999:4: ( (lv_id_12_1= RULE_LOWERCASE_ID | lv_id_12_2= rulePropertyId ) )
        {
        // InternalKim.g:1999:4: ( (lv_id_12_1= RULE_LOWERCASE_ID | lv_id_12_2= rulePropertyId ) )
        // InternalKim.g:2000:5: (lv_id_12_1= RULE_LOWERCASE_ID | lv_id_12_2= rulePropertyId )
        {
        // InternalKim.g:2000:5: (lv_id_12_1= RULE_LOWERCASE_ID | lv_id_12_2= rulePropertyId )
        int alt409=2;
        int LA409_0 = input.LA(1);

        if ( (LA409_0==RULE_LOWERCASE_ID) ) {
            int LA409_1 = input.LA(2);

            if ( (LA409_1==106||LA409_1==109) ) {
                alt409=2;
            }
            else if ( (LA409_1==EOF) ) {
                alt409=1;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 409, 1, input);

                throw nvae;
            }
        }
        else if ( (LA409_0==RULE_UPPERCASE_ID||LA409_0==RULE_LOWERCASE_DASHID) ) {
            alt409=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 409, 0, input);

            throw nvae;
        }
        switch (alt409) {
            case 1 :
                // InternalKim.g:2001:6: lv_id_12_1= RULE_LOWERCASE_ID
                {
                lv_id_12_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:2016:6: lv_id_12_2= rulePropertyId
                {
                if ( state.backtracking==0 ) {

                  						newCompositeNode(grammarAccess.getClassifierRHSWithIdNoSetAccess().getIdPropertyIdParserRuleCall_5_0_1());
                  					
                }
                pushFollow(FOLLOW_2);
                lv_id_12_2=rulePropertyId();

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }


        }


        }


        }
    }
    // $ANTLR end synpred81_InternalKim

    // $ANTLR start synpred84_InternalKim
    public final void synpred84_InternalKim_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken lv_name_0_1 = null;


        // InternalKim.g:2127:6: (lv_name_0_1= rulePathName )
        // InternalKim.g:2127:6: lv_name_0_1= rulePathName
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getUrnAccess().getNamePathNameParserRuleCall_0_0_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_name_0_1=rulePathName();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred84_InternalKim

    // $ANTLR start synpred99_InternalKim
    public final void synpred99_InternalKim_fragment() throws RecognitionException {   
        // InternalKim.g:2591:5: ( 'to' )
        // InternalKim.g:2591:6: 'to'
        {
        match(input,36,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred99_InternalKim

    // $ANTLR start synpred119_InternalKim
    public final void synpred119_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_6=null;
        EObject lv_actions_5_0 = null;

        EObject lv_actions_7_0 = null;


        // InternalKim.g:2968:5: ( ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )* )
        // InternalKim.g:2968:5: ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )*
        {
        // InternalKim.g:2968:5: ( (lv_actions_5_0= ruleAction ) )
        // InternalKim.g:2969:6: (lv_actions_5_0= ruleAction )
        {
        // InternalKim.g:2969:6: (lv_actions_5_0= ruleAction )
        // InternalKim.g:2970:7: lv_actions_5_0= ruleAction
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getActionSpecificationAccess().getActionsActionParserRuleCall_0_4_0_0());
          						
        }
        pushFollow(FOLLOW_34);
        lv_actions_5_0=ruleAction();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:2987:5: ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )*
        loop415:
        do {
            int alt415=2;
            int LA415_0 = input.LA(1);

            if ( (LA415_0==27) ) {
                alt415=1;
            }


            switch (alt415) {
        	case 1 :
        	    // InternalKim.g:2988:6: ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) )
        	    {
        	    // InternalKim.g:2988:6: ( ( ',' )=>otherlv_6= ',' )
        	    // InternalKim.g:2989:7: ( ',' )=>otherlv_6= ','
        	    {
        	    otherlv_6=(Token)match(input,27,FOLLOW_49); if (state.failed) return ;

        	    }

        	    // InternalKim.g:2995:6: ( (lv_actions_7_0= ruleAction ) )
        	    // InternalKim.g:2996:7: (lv_actions_7_0= ruleAction )
        	    {
        	    // InternalKim.g:2996:7: (lv_actions_7_0= ruleAction )
        	    // InternalKim.g:2997:8: lv_actions_7_0= ruleAction
        	    {
        	    if ( state.backtracking==0 ) {

        	      								newCompositeNode(grammarAccess.getActionSpecificationAccess().getActionsActionParserRuleCall_0_4_1_1_0());
        	      							
        	    }
        	    pushFollow(FOLLOW_34);
        	    lv_actions_7_0=ruleAction();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop415;
            }
        } while (true);


        }
    }
    // $ANTLR end synpred119_InternalKim

    // $ANTLR start synpred130_InternalKim
    public final void synpred130_InternalKim_fragment() throws RecognitionException {   
        EObject lv_function_0_0 = null;


        // InternalKim.g:3245:3: ( ( (lv_function_0_0= ruleFunction ) ) )
        // InternalKim.g:3245:3: ( (lv_function_0_0= ruleFunction ) )
        {
        // InternalKim.g:3245:3: ( (lv_function_0_0= ruleFunction ) )
        // InternalKim.g:3246:4: (lv_function_0_0= ruleFunction )
        {
        // InternalKim.g:3246:4: (lv_function_0_0= ruleFunction )
        // InternalKim.g:3247:5: lv_function_0_0= ruleFunction
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getFunctionOrIDAccess().getFunctionFunctionParserRuleCall_0_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_function_0_0=ruleFunction();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred130_InternalKim

    // $ANTLR start synpred153_InternalKim
    public final void synpred153_InternalKim_fragment() throws RecognitionException {   
        // InternalKim.g:3741:5: ( ( ruleValue ) )
        // InternalKim.g:3741:6: ( ruleValue )
        {
        // InternalKim.g:3741:6: ( ruleValue )
        // InternalKim.g:3742:6: ruleValue
        {
        pushFollow(FOLLOW_2);
        ruleValue();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred153_InternalKim

    // $ANTLR start synpred157_InternalKim
    public final void synpred157_InternalKim_fragment() throws RecognitionException {   
        EObject lv_function_1_0 = null;


        // InternalKim.g:3865:3: ( ( (lv_function_1_0= ruleFunction ) ) )
        // InternalKim.g:3865:3: ( (lv_function_1_0= ruleFunction ) )
        {
        // InternalKim.g:3865:3: ( (lv_function_1_0= ruleFunction ) )
        // InternalKim.g:3866:4: (lv_function_1_0= ruleFunction )
        {
        // InternalKim.g:3866:4: (lv_function_1_0= ruleFunction )
        // InternalKim.g:3867:5: lv_function_1_0= ruleFunction
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getComputableValueAccess().getFunctionFunctionParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_function_1_0=ruleFunction();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred157_InternalKim

    // $ANTLR start synpred164_InternalKim
    public final void synpred164_InternalKim_fragment() throws RecognitionException {   
        Token lv_id_5_1=null;
        Token lv_id_5_2=null;
        Token lv_id_5_3=null;

        // InternalKim.g:3962:3: ( ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) ) )
        // InternalKim.g:3962:3: ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) )
        {
        // InternalKim.g:3962:3: ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) )
        // InternalKim.g:3963:4: ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) )
        {
        // InternalKim.g:3963:4: ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) )
        // InternalKim.g:3964:5: (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID )
        {
        // InternalKim.g:3964:5: (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID )
        int alt445=3;
        switch ( input.LA(1) ) {
        case RULE_LOWERCASE_ID:
            {
            alt445=1;
            }
            break;
        case RULE_UPPERCASE_ID:
            {
            alt445=2;
            }
            break;
        case RULE_CAMELCASE_ID:
            {
            alt445=3;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 445, 0, input);

            throw nvae;
        }

        switch (alt445) {
            case 1 :
                // InternalKim.g:3965:6: lv_id_5_1= RULE_LOWERCASE_ID
                {
                lv_id_5_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:3980:6: lv_id_5_2= RULE_UPPERCASE_ID
                {
                lv_id_5_2=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 3 :
                // InternalKim.g:3995:6: lv_id_5_3= RULE_CAMELCASE_ID
                {
                lv_id_5_3=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }
    }
    // $ANTLR end synpred164_InternalKim

    // $ANTLR start synpred174_InternalKim
    public final void synpred174_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_5=null;
        Token lv_conditionNegated_6_0=null;
        EObject lv_condition_7_0 = null;


        // InternalKim.g:4264:4: ( (otherlv_5= 'if' | ( (lv_conditionNegated_6_0= 'unless' ) ) ) ( (lv_condition_7_0= ruleValue ) ) )
        // InternalKim.g:4264:4: (otherlv_5= 'if' | ( (lv_conditionNegated_6_0= 'unless' ) ) ) ( (lv_condition_7_0= ruleValue ) )
        {
        // InternalKim.g:4264:4: (otherlv_5= 'if' | ( (lv_conditionNegated_6_0= 'unless' ) ) )
        int alt449=2;
        int LA449_0 = input.LA(1);

        if ( (LA449_0==44) ) {
            alt449=1;
        }
        else if ( (LA449_0==45) ) {
            alt449=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 449, 0, input);

            throw nvae;
        }
        switch (alt449) {
            case 1 :
                // InternalKim.g:4265:5: otherlv_5= 'if'
                {
                otherlv_5=(Token)match(input,44,FOLLOW_12); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:4270:5: ( (lv_conditionNegated_6_0= 'unless' ) )
                {
                // InternalKim.g:4270:5: ( (lv_conditionNegated_6_0= 'unless' ) )
                // InternalKim.g:4271:6: (lv_conditionNegated_6_0= 'unless' )
                {
                // InternalKim.g:4271:6: (lv_conditionNegated_6_0= 'unless' )
                // InternalKim.g:4272:7: lv_conditionNegated_6_0= 'unless'
                {
                lv_conditionNegated_6_0=(Token)match(input,45,FOLLOW_12); if (state.failed) return ;

                }


                }


                }
                break;

        }

        // InternalKim.g:4285:4: ( (lv_condition_7_0= ruleValue ) )
        // InternalKim.g:4286:5: (lv_condition_7_0= ruleValue )
        {
        // InternalKim.g:4286:5: (lv_condition_7_0= ruleValue )
        // InternalKim.g:4287:6: lv_condition_7_0= ruleValue
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getExecutableValueAccess().getConditionValueParserRuleCall_1_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_condition_7_0=ruleValue();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred174_InternalKim

    // $ANTLR start synpred197_InternalKim
    public final void synpred197_InternalKim_fragment() throws RecognitionException {   
        Token lv_projectPrivate_3_0=null;
        Token lv_private_4_0=null;

        // InternalKim.g:4547:4: ( ({...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) ) ) )
        // InternalKim.g:4547:4: ({...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) ) )
        {
        // InternalKim.g:4547:4: ({...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) ) )
        // InternalKim.g:4548:5: {...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred197_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 0)");
        }
        // InternalKim.g:4548:106: ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) )
        // InternalKim.g:4549:6: ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 0);
        // InternalKim.g:4552:9: ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) )
        // InternalKim.g:4552:10: {...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred197_InternalKim", "true");
        }
        // InternalKim.g:4552:19: ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) )
        // InternalKim.g:4552:20: ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) )
        {
        // InternalKim.g:4552:20: ( (lv_projectPrivate_3_0= 'project' ) )?
        int alt451=2;
        int LA451_0 = input.LA(1);

        if ( (LA451_0==22) ) {
            alt451=1;
        }
        switch (alt451) {
            case 1 :
                // InternalKim.g:4553:10: (lv_projectPrivate_3_0= 'project' )
                {
                // InternalKim.g:4553:10: (lv_projectPrivate_3_0= 'project' )
                // InternalKim.g:4554:11: lv_projectPrivate_3_0= 'project'
                {
                lv_projectPrivate_3_0=(Token)match(input,22,FOLLOW_7); if (state.failed) return ;

                }


                }
                break;

        }

        // InternalKim.g:4566:9: ( (lv_private_4_0= 'private' ) )
        // InternalKim.g:4567:10: (lv_private_4_0= 'private' )
        {
        // InternalKim.g:4567:10: (lv_private_4_0= 'private' )
        // InternalKim.g:4568:11: lv_private_4_0= 'private'
        {
        lv_private_4_0=(Token)match(input,23,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred197_InternalKim

    // $ANTLR start synpred198_InternalKim
    public final void synpred198_InternalKim_fragment() throws RecognitionException {   
        Token lv_inactive_5_0=null;

        // InternalKim.g:4586:4: ( ({...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) ) ) )
        // InternalKim.g:4586:4: ({...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) ) )
        {
        // InternalKim.g:4586:4: ({...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) ) )
        // InternalKim.g:4587:5: {...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred198_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 1)");
        }
        // InternalKim.g:4587:106: ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) )
        // InternalKim.g:4588:6: ({...}? => ( (lv_inactive_5_0= 'void' ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 1);
        // InternalKim.g:4591:9: ({...}? => ( (lv_inactive_5_0= 'void' ) ) )
        // InternalKim.g:4591:10: {...}? => ( (lv_inactive_5_0= 'void' ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred198_InternalKim", "true");
        }
        // InternalKim.g:4591:19: ( (lv_inactive_5_0= 'void' ) )
        // InternalKim.g:4591:20: (lv_inactive_5_0= 'void' )
        {
        // InternalKim.g:4591:20: (lv_inactive_5_0= 'void' )
        // InternalKim.g:4592:10: lv_inactive_5_0= 'void'
        {
        lv_inactive_5_0=(Token)match(input,21,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred198_InternalKim

    // $ANTLR start synpred202_InternalKim
    public final void synpred202_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token lv_language_14_0=null;

        // InternalKim.g:4696:4: ( ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) ) )
        // InternalKim.g:4696:4: ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) )
        {
        // InternalKim.g:4696:4: ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) )
        // InternalKim.g:4697:5: {...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred202_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 0)");
        }
        // InternalKim.g:4697:106: ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) )
        // InternalKim.g:4698:6: ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 0);
        // InternalKim.g:4701:9: ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) )
        // InternalKim.g:4701:10: {...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred202_InternalKim", "true");
        }
        // InternalKim.g:4701:19: (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) )
        // InternalKim.g:4701:20: otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) )
        {
        otherlv_12=(Token)match(input,31,FOLLOW_68); if (state.failed) return ;
        otherlv_13=(Token)match(input,93,FOLLOW_69); if (state.failed) return ;
        // InternalKim.g:4709:9: ( (lv_language_14_0= RULE_UPPERCASE_ID ) )
        // InternalKim.g:4710:10: (lv_language_14_0= RULE_UPPERCASE_ID )
        {
        // InternalKim.g:4710:10: (lv_language_14_0= RULE_UPPERCASE_ID )
        // InternalKim.g:4711:11: lv_language_14_0= RULE_UPPERCASE_ID
        {
        lv_language_14_0=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred202_InternalKim

    // $ANTLR start synpred205_InternalKim
    public final void synpred205_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_15=null;
        Token otherlv_17=null;
        EObject lv_imported_16_0 = null;

        EObject lv_imported_18_0 = null;


        // InternalKim.g:4733:4: ( ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) ) )
        // InternalKim.g:4733:4: ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) )
        {
        // InternalKim.g:4733:4: ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) )
        // InternalKim.g:4734:5: {...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred205_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 1)");
        }
        // InternalKim.g:4734:106: ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) )
        // InternalKim.g:4735:6: ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 1);
        // InternalKim.g:4738:9: ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) )
        // InternalKim.g:4738:10: {...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred205_InternalKim", "true");
        }
        // InternalKim.g:4738:19: (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* )
        // InternalKim.g:4738:20: otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )*
        {
        otherlv_15=(Token)match(input,31,FOLLOW_70); if (state.failed) return ;
        // InternalKim.g:4742:9: ( (lv_imported_16_0= ruleImport ) )
        // InternalKim.g:4743:10: (lv_imported_16_0= ruleImport )
        {
        // InternalKim.g:4743:10: (lv_imported_16_0= ruleImport )
        // InternalKim.g:4744:11: lv_imported_16_0= ruleImport
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getNamespaceAccess().getImportedImportParserRuleCall_5_1_1_0());
          										
        }
        pushFollow(FOLLOW_34);
        lv_imported_16_0=ruleImport();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:4761:9: ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )*
        loop452:
        do {
            int alt452=2;
            int LA452_0 = input.LA(1);

            if ( (LA452_0==27) ) {
                alt452=1;
            }


            switch (alt452) {
        	case 1 :
        	    // InternalKim.g:4762:10: ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) )
        	    {
        	    // InternalKim.g:4762:10: ( ( ',' )=>otherlv_17= ',' )
        	    // InternalKim.g:4763:11: ( ',' )=>otherlv_17= ','
        	    {
        	    otherlv_17=(Token)match(input,27,FOLLOW_70); if (state.failed) return ;

        	    }

        	    // InternalKim.g:4769:10: ( (lv_imported_18_0= ruleImport ) )
        	    // InternalKim.g:4770:11: (lv_imported_18_0= ruleImport )
        	    {
        	    // InternalKim.g:4770:11: (lv_imported_18_0= ruleImport )
        	    // InternalKim.g:4771:12: lv_imported_18_0= ruleImport
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getNamespaceAccess().getImportedImportParserRuleCall_5_1_2_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_34);
        	    lv_imported_18_0=ruleImport();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop452;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred205_InternalKim

    // $ANTLR start synpred207_InternalKim
    public final void synpred207_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_19=null;
        Token otherlv_21=null;
        EObject lv_owlImports_20_0 = null;

        EObject lv_owlImports_22_0 = null;


        // InternalKim.g:4795:4: ( ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) ) )
        // InternalKim.g:4795:4: ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) )
        {
        // InternalKim.g:4795:4: ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) )
        // InternalKim.g:4796:5: {...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred207_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 2)");
        }
        // InternalKim.g:4796:106: ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) )
        // InternalKim.g:4797:6: ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 2);
        // InternalKim.g:4800:9: ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) )
        // InternalKim.g:4800:10: {...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred207_InternalKim", "true");
        }
        // InternalKim.g:4800:19: (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* )
        // InternalKim.g:4800:20: otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )*
        {
        otherlv_19=(Token)match(input,94,FOLLOW_72); if (state.failed) return ;
        // InternalKim.g:4804:9: ( (lv_owlImports_20_0= ruleOwlImport ) )
        // InternalKim.g:4805:10: (lv_owlImports_20_0= ruleOwlImport )
        {
        // InternalKim.g:4805:10: (lv_owlImports_20_0= ruleOwlImport )
        // InternalKim.g:4806:11: lv_owlImports_20_0= ruleOwlImport
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getNamespaceAccess().getOwlImportsOwlImportParserRuleCall_5_2_1_0());
          										
        }
        pushFollow(FOLLOW_34);
        lv_owlImports_20_0=ruleOwlImport();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:4823:9: (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )*
        loop453:
        do {
            int alt453=2;
            int LA453_0 = input.LA(1);

            if ( (LA453_0==27) ) {
                alt453=1;
            }


            switch (alt453) {
        	case 1 :
        	    // InternalKim.g:4824:10: otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) )
        	    {
        	    otherlv_21=(Token)match(input,27,FOLLOW_72); if (state.failed) return ;
        	    // InternalKim.g:4828:10: ( (lv_owlImports_22_0= ruleOwlImport ) )
        	    // InternalKim.g:4829:11: (lv_owlImports_22_0= ruleOwlImport )
        	    {
        	    // InternalKim.g:4829:11: (lv_owlImports_22_0= ruleOwlImport )
        	    // InternalKim.g:4830:12: lv_owlImports_22_0= ruleOwlImport
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getNamespaceAccess().getOwlImportsOwlImportParserRuleCall_5_2_2_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_34);
        	    lv_owlImports_22_0=ruleOwlImport();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop453;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred207_InternalKim

    // $ANTLR start synpred210_InternalKim
    public final void synpred210_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_23=null;
        Token otherlv_25=null;
        EObject lv_coverage_24_0 = null;

        EObject lv_coverage_26_0 = null;


        // InternalKim.g:4854:4: ( ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) ) )
        // InternalKim.g:4854:4: ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) )
        {
        // InternalKim.g:4854:4: ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) )
        // InternalKim.g:4855:5: {...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 3) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred210_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 3)");
        }
        // InternalKim.g:4855:106: ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) )
        // InternalKim.g:4856:6: ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 3);
        // InternalKim.g:4859:9: ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) )
        // InternalKim.g:4859:10: {...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred210_InternalKim", "true");
        }
        // InternalKim.g:4859:19: (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* )
        // InternalKim.g:4859:20: otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )*
        {
        otherlv_23=(Token)match(input,95,FOLLOW_26); if (state.failed) return ;
        // InternalKim.g:4863:9: ( (lv_coverage_24_0= ruleFunction ) )
        // InternalKim.g:4864:10: (lv_coverage_24_0= ruleFunction )
        {
        // InternalKim.g:4864:10: (lv_coverage_24_0= ruleFunction )
        // InternalKim.g:4865:11: lv_coverage_24_0= ruleFunction
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getNamespaceAccess().getCoverageFunctionParserRuleCall_5_3_1_0());
          										
        }
        pushFollow(FOLLOW_34);
        lv_coverage_24_0=ruleFunction();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:4882:9: ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )*
        loop454:
        do {
            int alt454=2;
            int LA454_0 = input.LA(1);

            if ( (LA454_0==27) ) {
                alt454=1;
            }


            switch (alt454) {
        	case 1 :
        	    // InternalKim.g:4883:10: ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) )
        	    {
        	    // InternalKim.g:4883:10: ( ( ',' )=>otherlv_25= ',' )
        	    // InternalKim.g:4884:11: ( ',' )=>otherlv_25= ','
        	    {
        	    otherlv_25=(Token)match(input,27,FOLLOW_26); if (state.failed) return ;

        	    }

        	    // InternalKim.g:4890:10: ( (lv_coverage_26_0= ruleFunction ) )
        	    // InternalKim.g:4891:11: (lv_coverage_26_0= ruleFunction )
        	    {
        	    // InternalKim.g:4891:11: (lv_coverage_26_0= ruleFunction )
        	    // InternalKim.g:4892:12: lv_coverage_26_0= ruleFunction
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getNamespaceAccess().getCoverageFunctionParserRuleCall_5_3_2_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_34);
        	    lv_coverage_26_0=ruleFunction();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop454;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred210_InternalKim

    // $ANTLR start synpred212_InternalKim
    public final void synpred212_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_27=null;
        Token otherlv_28=null;
        Token lv_rootDomain_29_0=null;
        EObject lv_domainConcept_30_0 = null;


        // InternalKim.g:4916:4: ( ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) ) )
        // InternalKim.g:4916:4: ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) )
        {
        // InternalKim.g:4916:4: ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) )
        // InternalKim.g:4917:5: {...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 4) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred212_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 4)");
        }
        // InternalKim.g:4917:106: ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) )
        // InternalKim.g:4918:6: ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 4);
        // InternalKim.g:4921:9: ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) )
        // InternalKim.g:4921:10: {...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred212_InternalKim", "true");
        }
        // InternalKim.g:4921:19: (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) )
        // InternalKim.g:4921:20: otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) )
        {
        otherlv_27=(Token)match(input,48,FOLLOW_73); if (state.failed) return ;
        otherlv_28=(Token)match(input,96,FOLLOW_74); if (state.failed) return ;
        // InternalKim.g:4929:9: ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) )
        int alt455=2;
        int LA455_0 = input.LA(1);

        if ( (LA455_0==97) ) {
            alt455=1;
        }
        else if ( ((LA455_0>=RULE_LOWERCASE_ID && LA455_0<=RULE_UPPERCASE_ID)||LA455_0==RULE_CAMELCASE_ID||LA455_0==RULE_LOWERCASE_DASHID||LA455_0==RULE_UPPERCASE_PATH||LA455_0==38||(LA455_0>=132 && LA455_0<=133)||(LA455_0>=141 && LA455_0<=142)||(LA455_0>=144 && LA455_0<=149)||(LA455_0>=151 && LA455_0<=163)) ) {
            alt455=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 455, 0, input);

            throw nvae;
        }
        switch (alt455) {
            case 1 :
                // InternalKim.g:4930:10: ( (lv_rootDomain_29_0= 'root' ) )
                {
                // InternalKim.g:4930:10: ( (lv_rootDomain_29_0= 'root' ) )
                // InternalKim.g:4931:11: (lv_rootDomain_29_0= 'root' )
                {
                // InternalKim.g:4931:11: (lv_rootDomain_29_0= 'root' )
                // InternalKim.g:4932:12: lv_rootDomain_29_0= 'root'
                {
                lv_rootDomain_29_0=(Token)match(input,97,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:4945:10: ( (lv_domainConcept_30_0= ruleConcept ) )
                {
                // InternalKim.g:4945:10: ( (lv_domainConcept_30_0= ruleConcept ) )
                // InternalKim.g:4946:11: (lv_domainConcept_30_0= ruleConcept )
                {
                // InternalKim.g:4946:11: (lv_domainConcept_30_0= ruleConcept )
                // InternalKim.g:4947:12: lv_domainConcept_30_0= ruleConcept
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getNamespaceAccess().getDomainConceptConceptParserRuleCall_5_4_2_1_0());
                  											
                }
                pushFollow(FOLLOW_2);
                lv_domainConcept_30_0=ruleConcept();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred212_InternalKim

    // $ANTLR start synpred214_InternalKim
    public final void synpred214_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_31=null;
        Token otherlv_32=null;
        Token otherlv_34=null;
        AntlrDatatypeRuleToken lv_disjointNamespaces_33_0 = null;

        AntlrDatatypeRuleToken lv_disjointNamespaces_35_0 = null;


        // InternalKim.g:4971:4: ( ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) ) ) ) ) )
        // InternalKim.g:4971:4: ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) ) ) ) )
        {
        // InternalKim.g:4971:4: ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) ) ) ) )
        // InternalKim.g:4972:5: {...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 5) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred214_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 5)");
        }
        // InternalKim.g:4972:106: ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) ) ) )
        // InternalKim.g:4973:6: ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 5);
        // InternalKim.g:4976:9: ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) ) )
        // InternalKim.g:4976:10: {...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred214_InternalKim", "true");
        }
        // InternalKim.g:4976:19: (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) )
        // InternalKim.g:4976:20: otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* )
        {
        otherlv_31=(Token)match(input,98,FOLLOW_75); if (state.failed) return ;
        otherlv_32=(Token)match(input,99,FOLLOW_26); if (state.failed) return ;
        // InternalKim.g:4984:9: ( (lv_disjointNamespaces_33_0= rulePathName ) )
        // InternalKim.g:4985:10: (lv_disjointNamespaces_33_0= rulePathName )
        {
        // InternalKim.g:4985:10: (lv_disjointNamespaces_33_0= rulePathName )
        // InternalKim.g:4986:11: lv_disjointNamespaces_33_0= rulePathName
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getNamespaceAccess().getDisjointNamespacesPathNameParserRuleCall_5_5_2_0());
          										
        }
        pushFollow(FOLLOW_76);
        lv_disjointNamespaces_33_0=rulePathName();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:5003:9: (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* )
        // InternalKim.g:5004:10: otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )*
        {
        otherlv_34=(Token)match(input,27,FOLLOW_199); if (state.failed) return ;
        // InternalKim.g:5008:10: ( (lv_disjointNamespaces_35_0= rulePathName ) )*
        loop456:
        do {
            int alt456=2;
            int LA456_0 = input.LA(1);

            if ( ((LA456_0>=RULE_LOWERCASE_ID && LA456_0<=RULE_UPPERCASE_ID)||LA456_0==RULE_LOWERCASE_DASHID) ) {
                alt456=1;
            }


            switch (alt456) {
        	case 1 :
        	    // InternalKim.g:5009:11: (lv_disjointNamespaces_35_0= rulePathName )
        	    {
        	    // InternalKim.g:5009:11: (lv_disjointNamespaces_35_0= rulePathName )
        	    // InternalKim.g:5010:12: lv_disjointNamespaces_35_0= rulePathName
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getNamespaceAccess().getDisjointNamespacesPathNameParserRuleCall_5_5_3_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_199);
        	    lv_disjointNamespaces_35_0=rulePathName();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop456;
            }
        } while (true);


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred214_InternalKim

    // $ANTLR start synpred215_InternalKim
    public final void synpred215_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_36=null;
        AntlrDatatypeRuleToken lv_version_37_0 = null;


        // InternalKim.g:5034:4: ( ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) ) )
        // InternalKim.g:5034:4: ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) )
        {
        // InternalKim.g:5034:4: ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) )
        // InternalKim.g:5035:5: {...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 6) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred215_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 6)");
        }
        // InternalKim.g:5035:106: ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) )
        // InternalKim.g:5036:6: ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 6);
        // InternalKim.g:5039:9: ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) )
        // InternalKim.g:5039:10: {...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred215_InternalKim", "true");
        }
        // InternalKim.g:5039:19: (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) )
        // InternalKim.g:5039:20: otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) )
        {
        otherlv_36=(Token)match(input,100,FOLLOW_78); if (state.failed) return ;
        // InternalKim.g:5043:9: ( (lv_version_37_0= ruleVersionNumber ) )
        // InternalKim.g:5044:10: (lv_version_37_0= ruleVersionNumber )
        {
        // InternalKim.g:5044:10: (lv_version_37_0= ruleVersionNumber )
        // InternalKim.g:5045:11: lv_version_37_0= ruleVersionNumber
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getNamespaceAccess().getVersionVersionNumberParserRuleCall_5_6_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_version_37_0=ruleVersionNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred215_InternalKim

    // $ANTLR start synpred218_InternalKim
    public final void synpred218_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_39=null;
        Token otherlv_40=null;
        AntlrDatatypeRuleToken lv_lookupNamespace_41_0 = null;


        // InternalKim.g:5079:9: ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) )
        // InternalKim.g:5079:9: ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) )
        {
        // InternalKim.g:5079:9: ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) )
        // InternalKim.g:5080:10: {...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred218_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 0)");
        }
        // InternalKim.g:5080:113: ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) )
        // InternalKim.g:5081:11: ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 0);
        // InternalKim.g:5084:14: ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) )
        // InternalKim.g:5084:15: {...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred218_InternalKim", "true");
        }
        // InternalKim.g:5084:24: (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? )
        // InternalKim.g:5084:25: otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )?
        {
        otherlv_39=(Token)match(input,101,FOLLOW_200); if (state.failed) return ;
        // InternalKim.g:5088:14: (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )?
        int alt459=2;
        int LA459_0 = input.LA(1);

        if ( (LA459_0==102) ) {
            alt459=1;
        }
        switch (alt459) {
            case 1 :
                // InternalKim.g:5089:15: otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )*
                {
                otherlv_40=(Token)match(input,102,FOLLOW_199); if (state.failed) return ;
                // InternalKim.g:5093:15: ( (lv_lookupNamespace_41_0= rulePathName ) )*
                loop458:
                do {
                    int alt458=2;
                    int LA458_0 = input.LA(1);

                    if ( ((LA458_0>=RULE_LOWERCASE_ID && LA458_0<=RULE_UPPERCASE_ID)||LA458_0==RULE_LOWERCASE_DASHID) ) {
                        alt458=1;
                    }


                    switch (alt458) {
                	case 1 :
                	    // InternalKim.g:5094:16: (lv_lookupNamespace_41_0= rulePathName )
                	    {
                	    // InternalKim.g:5094:16: (lv_lookupNamespace_41_0= rulePathName )
                	    // InternalKim.g:5095:17: lv_lookupNamespace_41_0= rulePathName
                	    {
                	    if ( state.backtracking==0 ) {

                	      																	newCompositeNode(grammarAccess.getNamespaceAccess().getLookupNamespacePathNameParserRuleCall_5_7_0_1_1_0());
                	      																
                	    }
                	    pushFollow(FOLLOW_199);
                	    lv_lookupNamespace_41_0=rulePathName();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }
                	    break;

                	default :
                	    break loop458;
                    }
                } while (true);


                }
                break;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred218_InternalKim

    // $ANTLR start synpred220_InternalKim
    public final void synpred220_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_42=null;
        AntlrDatatypeRuleToken lv_blacklistNamespace_43_0 = null;


        // InternalKim.g:5119:9: ( ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) )
        // InternalKim.g:5119:9: ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) )
        {
        // InternalKim.g:5119:9: ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) )
        // InternalKim.g:5120:10: {...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred220_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 1)");
        }
        // InternalKim.g:5120:113: ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) )
        // InternalKim.g:5121:11: ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 1);
        // InternalKim.g:5124:14: ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) )
        // InternalKim.g:5124:15: {...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred220_InternalKim", "true");
        }
        // InternalKim.g:5124:24: (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* )
        // InternalKim.g:5124:25: otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )*
        {
        otherlv_42=(Token)match(input,103,FOLLOW_199); if (state.failed) return ;
        // InternalKim.g:5128:14: ( (lv_blacklistNamespace_43_0= rulePathName ) )*
        loop460:
        do {
            int alt460=2;
            int LA460_0 = input.LA(1);

            if ( ((LA460_0>=RULE_LOWERCASE_ID && LA460_0<=RULE_UPPERCASE_ID)||LA460_0==RULE_LOWERCASE_DASHID) ) {
                alt460=1;
            }


            switch (alt460) {
        	case 1 :
        	    // InternalKim.g:5129:15: (lv_blacklistNamespace_43_0= rulePathName )
        	    {
        	    // InternalKim.g:5129:15: (lv_blacklistNamespace_43_0= rulePathName )
        	    // InternalKim.g:5130:16: lv_blacklistNamespace_43_0= rulePathName
        	    {
        	    if ( state.backtracking==0 ) {

        	      																newCompositeNode(grammarAccess.getNamespaceAccess().getBlacklistNamespacePathNameParserRuleCall_5_7_1_1_0());
        	      															
        	    }
        	    pushFollow(FOLLOW_199);
        	    lv_blacklistNamespace_43_0=rulePathName();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop460;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred220_InternalKim

    // $ANTLR start synpred221_InternalKim
    public final void synpred221_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_44=null;
        EObject lv_weights_45_0 = null;


        // InternalKim.g:5153:9: ( ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )
        // InternalKim.g:5153:9: ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) )
        {
        // InternalKim.g:5153:9: ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) )
        // InternalKim.g:5154:10: {...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred221_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 2)");
        }
        // InternalKim.g:5154:113: ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) )
        // InternalKim.g:5155:11: ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 2);
        // InternalKim.g:5158:14: ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) )
        // InternalKim.g:5158:15: {...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred221_InternalKim", "true");
        }
        // InternalKim.g:5158:24: (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) )
        // InternalKim.g:5158:25: otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) )
        {
        otherlv_44=(Token)match(input,31,FOLLOW_33); if (state.failed) return ;
        // InternalKim.g:5162:14: ( (lv_weights_45_0= ruleMap ) )
        // InternalKim.g:5163:15: (lv_weights_45_0= ruleMap )
        {
        // InternalKim.g:5163:15: (lv_weights_45_0= ruleMap )
        // InternalKim.g:5164:16: lv_weights_45_0= ruleMap
        {
        if ( state.backtracking==0 ) {

          																newCompositeNode(grammarAccess.getNamespaceAccess().getWeightsMapParserRuleCall_5_7_2_1_0());
          															
        }
        pushFollow(FOLLOW_2);
        lv_weights_45_0=ruleMap();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred221_InternalKim

    // $ANTLR start synpred222_InternalKim
    public final void synpred222_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_39=null;
        Token otherlv_40=null;
        Token otherlv_42=null;
        Token otherlv_44=null;
        AntlrDatatypeRuleToken lv_lookupNamespace_41_0 = null;

        AntlrDatatypeRuleToken lv_blacklistNamespace_43_0 = null;

        EObject lv_weights_45_0 = null;


        // InternalKim.g:5068:4: ( ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )
        // InternalKim.g:5068:4: ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) ) ) ) )
        {
        // InternalKim.g:5068:4: ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) ) ) ) )
        // InternalKim.g:5069:5: {...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 7) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred222_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 7)");
        }
        // InternalKim.g:5069:106: ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) ) ) )
        // InternalKim.g:5070:6: ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 7);
        // InternalKim.g:5073:9: ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) ) )
        // InternalKim.g:5073:10: {...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred222_InternalKim", "true");
        }
        // InternalKim.g:5073:19: ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) )
        // InternalKim.g:5073:20: ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) )
        {
        // InternalKim.g:5073:20: ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) )
        // InternalKim.g:5074:10: ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?)
        {
        getUnorderedGroupHelper().enter(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7());
        // InternalKim.g:5077:10: ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?)
        // InternalKim.g:5078:11: ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?
        {
        // InternalKim.g:5078:11: ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+
        int cnt464=0;
        loop464:
        do {
            int alt464=4;
            int LA464_0 = input.LA(1);

            if ( LA464_0 == 101 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 0) ) {
                alt464=1;
            }
            else if ( LA464_0 == 103 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 1) ) {
                alt464=2;
            }
            else if ( LA464_0 == 31 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 2) ) {
                alt464=3;
            }


            switch (alt464) {
        	case 1 :
        	    // InternalKim.g:5079:9: ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) )
        	    {
        	    // InternalKim.g:5079:9: ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) )
        	    // InternalKim.g:5080:10: {...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 0) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred222_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 0)");
        	    }
        	    // InternalKim.g:5080:113: ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) )
        	    // InternalKim.g:5081:11: ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 0);
        	    // InternalKim.g:5084:14: ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) )
        	    // InternalKim.g:5084:15: {...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred222_InternalKim", "true");
        	    }
        	    // InternalKim.g:5084:24: (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? )
        	    // InternalKim.g:5084:25: otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )?
        	    {
        	    otherlv_39=(Token)match(input,101,FOLLOW_201); if (state.failed) return ;
        	    // InternalKim.g:5088:14: (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )?
        	    int alt462=2;
        	    int LA462_0 = input.LA(1);

        	    if ( (LA462_0==102) ) {
        	        alt462=1;
        	    }
        	    switch (alt462) {
        	        case 1 :
        	            // InternalKim.g:5089:15: otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )*
        	            {
        	            otherlv_40=(Token)match(input,102,FOLLOW_202); if (state.failed) return ;
        	            // InternalKim.g:5093:15: ( (lv_lookupNamespace_41_0= rulePathName ) )*
        	            loop461:
        	            do {
        	                int alt461=2;
        	                int LA461_0 = input.LA(1);

        	                if ( ((LA461_0>=RULE_LOWERCASE_ID && LA461_0<=RULE_UPPERCASE_ID)||LA461_0==RULE_LOWERCASE_DASHID) ) {
        	                    alt461=1;
        	                }


        	                switch (alt461) {
        	            	case 1 :
        	            	    // InternalKim.g:5094:16: (lv_lookupNamespace_41_0= rulePathName )
        	            	    {
        	            	    // InternalKim.g:5094:16: (lv_lookupNamespace_41_0= rulePathName )
        	            	    // InternalKim.g:5095:17: lv_lookupNamespace_41_0= rulePathName
        	            	    {
        	            	    if ( state.backtracking==0 ) {

        	            	      																	newCompositeNode(grammarAccess.getNamespaceAccess().getLookupNamespacePathNameParserRuleCall_5_7_0_1_1_0());
        	            	      																
        	            	    }
        	            	    pushFollow(FOLLOW_202);
        	            	    lv_lookupNamespace_41_0=rulePathName();

        	            	    state._fsp--;
        	            	    if (state.failed) return ;

        	            	    }


        	            	    }
        	            	    break;

        	            	default :
        	            	    break loop461;
        	                }
        	            } while (true);


        	            }
        	            break;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 2 :
        	    // InternalKim.g:5119:9: ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) )
        	    {
        	    // InternalKim.g:5119:9: ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) )
        	    // InternalKim.g:5120:10: {...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 1) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred222_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 1)");
        	    }
        	    // InternalKim.g:5120:113: ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) )
        	    // InternalKim.g:5121:11: ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 1);
        	    // InternalKim.g:5124:14: ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) )
        	    // InternalKim.g:5124:15: {...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred222_InternalKim", "true");
        	    }
        	    // InternalKim.g:5124:24: (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* )
        	    // InternalKim.g:5124:25: otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )*
        	    {
        	    otherlv_42=(Token)match(input,103,FOLLOW_202); if (state.failed) return ;
        	    // InternalKim.g:5128:14: ( (lv_blacklistNamespace_43_0= rulePathName ) )*
        	    loop463:
        	    do {
        	        int alt463=2;
        	        int LA463_0 = input.LA(1);

        	        if ( ((LA463_0>=RULE_LOWERCASE_ID && LA463_0<=RULE_UPPERCASE_ID)||LA463_0==RULE_LOWERCASE_DASHID) ) {
        	            alt463=1;
        	        }


        	        switch (alt463) {
        	    	case 1 :
        	    	    // InternalKim.g:5129:15: (lv_blacklistNamespace_43_0= rulePathName )
        	    	    {
        	    	    // InternalKim.g:5129:15: (lv_blacklistNamespace_43_0= rulePathName )
        	    	    // InternalKim.g:5130:16: lv_blacklistNamespace_43_0= rulePathName
        	    	    {
        	    	    if ( state.backtracking==0 ) {

        	    	      																newCompositeNode(grammarAccess.getNamespaceAccess().getBlacklistNamespacePathNameParserRuleCall_5_7_1_1_0());
        	    	      															
        	    	    }
        	    	    pushFollow(FOLLOW_202);
        	    	    lv_blacklistNamespace_43_0=rulePathName();

        	    	    state._fsp--;
        	    	    if (state.failed) return ;

        	    	    }


        	    	    }
        	    	    break;

        	    	default :
        	    	    break loop463;
        	        }
        	    } while (true);


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 3 :
        	    // InternalKim.g:5153:9: ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) )
        	    {
        	    // InternalKim.g:5153:9: ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) )
        	    // InternalKim.g:5154:10: {...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 2) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred222_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 2)");
        	    }
        	    // InternalKim.g:5154:113: ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) )
        	    // InternalKim.g:5155:11: ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 2);
        	    // InternalKim.g:5158:14: ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) )
        	    // InternalKim.g:5158:15: {...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred222_InternalKim", "true");
        	    }
        	    // InternalKim.g:5158:24: (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) )
        	    // InternalKim.g:5158:25: otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) )
        	    {
        	    otherlv_44=(Token)match(input,31,FOLLOW_33); if (state.failed) return ;
        	    // InternalKim.g:5162:14: ( (lv_weights_45_0= ruleMap ) )
        	    // InternalKim.g:5163:15: (lv_weights_45_0= ruleMap )
        	    {
        	    // InternalKim.g:5163:15: (lv_weights_45_0= ruleMap )
        	    // InternalKim.g:5164:16: lv_weights_45_0= ruleMap
        	    {
        	    if ( state.backtracking==0 ) {

        	      																newCompositeNode(grammarAccess.getNamespaceAccess().getWeightsMapParserRuleCall_5_7_2_1_0());
        	      															
        	    }
        	    pushFollow(FOLLOW_203);
        	    lv_weights_45_0=ruleMap();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;

        	default :
        	    if ( cnt464 >= 1 ) break loop464;
        	    if (state.backtracking>0) {state.failed=true; return ;}
                    EarlyExitException eee =
                        new EarlyExitException(464, input);
                    throw eee;
            }
            cnt464++;
        } while (true);

        if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7()) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred222_InternalKim", "getUnorderedGroupHelper().canLeave(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7())");
        }

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred222_InternalKim

    // $ANTLR start synpred245_InternalKim
    public final void synpred245_InternalKim_fragment() throws RecognitionException {   
        Token lv_docstring_4_0=null;

        // InternalKim.g:5900:9: ( (lv_docstring_4_0= RULE_STRING ) )
        // InternalKim.g:5900:9: (lv_docstring_4_0= RULE_STRING )
        {
        // InternalKim.g:5900:9: (lv_docstring_4_0= RULE_STRING )
        // InternalKim.g:5901:10: lv_docstring_4_0= RULE_STRING
        {
        lv_docstring_4_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred245_InternalKim

    // $ANTLR start synpred249_InternalKim
    public final void synpred249_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_states_11_0 = null;

        EObject lv_states_13_0 = null;


        // InternalKim.g:5974:9: ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) )
        // InternalKim.g:5974:9: ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) )
        {
        // InternalKim.g:5974:9: ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) )
        // InternalKim.g:5975:10: {...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred249_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 0)");
        }
        // InternalKim.g:5975:124: ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) )
        // InternalKim.g:5976:11: ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 0);
        // InternalKim.g:5979:14: ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) )
        // InternalKim.g:5979:15: {...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred249_InternalKim", "true");
        }
        // InternalKim.g:5979:24: (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )
        // InternalKim.g:5979:25: otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )*
        {
        otherlv_10=(Token)match(input,30,FOLLOW_95); if (state.failed) return ;
        // InternalKim.g:5983:14: ( (lv_states_11_0= ruleObservableSemantics ) )
        // InternalKim.g:5984:15: (lv_states_11_0= ruleObservableSemantics )
        {
        // InternalKim.g:5984:15: (lv_states_11_0= ruleObservableSemantics )
        // InternalKim.g:5985:16: lv_states_11_0= ruleObservableSemantics
        {
        if ( state.backtracking==0 ) {

          																newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getStatesObservableSemanticsParserRuleCall_0_4_0_1_0());
          															
        }
        pushFollow(FOLLOW_34);
        lv_states_11_0=ruleObservableSemantics();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:6002:14: (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )*
        loop473:
        do {
            int alt473=2;
            int LA473_0 = input.LA(1);

            if ( (LA473_0==27) ) {
                alt473=1;
            }


            switch (alt473) {
        	case 1 :
        	    // InternalKim.g:6003:15: otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) )
        	    {
        	    otherlv_12=(Token)match(input,27,FOLLOW_95); if (state.failed) return ;
        	    // InternalKim.g:6007:15: ( (lv_states_13_0= ruleObservableSemantics ) )
        	    // InternalKim.g:6008:16: (lv_states_13_0= ruleObservableSemantics )
        	    {
        	    // InternalKim.g:6008:16: (lv_states_13_0= ruleObservableSemantics )
        	    // InternalKim.g:6009:17: lv_states_13_0= ruleObservableSemantics
        	    {
        	    if ( state.backtracking==0 ) {

        	      																	newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getStatesObservableSemanticsParserRuleCall_0_4_0_2_1_0());
        	      																
        	    }
        	    pushFollow(FOLLOW_34);
        	    lv_states_13_0=ruleObservableSemantics();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop473;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred249_InternalKim

    // $ANTLR start synpred251_InternalKim
    public final void synpred251_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_14=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        EObject lv_observations_16_0 = null;

        EObject lv_observations_20_0 = null;


        // InternalKim.g:6033:9: ( ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )
        // InternalKim.g:6033:9: ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) )
        {
        // InternalKim.g:6033:9: ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) )
        // InternalKim.g:6034:10: {...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred251_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 1)");
        }
        // InternalKim.g:6034:124: ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) )
        // InternalKim.g:6035:11: ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 1);
        // InternalKim.g:6038:14: ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) )
        // InternalKim.g:6038:15: {...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred251_InternalKim", "true");
        }
        // InternalKim.g:6038:24: (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* )
        // InternalKim.g:6038:25: otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )*
        {
        otherlv_14=(Token)match(input,112,FOLLOW_40); if (state.failed) return ;
        // InternalKim.g:6042:14: (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' )
        // InternalKim.g:6043:15: otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')'
        {
        otherlv_15=(Token)match(input,38,FOLLOW_91); if (state.failed) return ;
        // InternalKim.g:6047:15: ( (lv_observations_16_0= ruleObserveStatementBody ) )
        // InternalKim.g:6048:16: (lv_observations_16_0= ruleObserveStatementBody )
        {
        // InternalKim.g:6048:16: (lv_observations_16_0= ruleObserveStatementBody )
        // InternalKim.g:6049:17: lv_observations_16_0= ruleObserveStatementBody
        {
        if ( state.backtracking==0 ) {

          																	newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getObservationsObserveStatementBodyParserRuleCall_0_4_1_1_1_0());
          																
        }
        pushFollow(FOLLOW_96);
        lv_observations_16_0=ruleObserveStatementBody();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_17=(Token)match(input,41,FOLLOW_34); if (state.failed) return ;

        }

        // InternalKim.g:6071:14: (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )*
        loop474:
        do {
            int alt474=2;
            int LA474_0 = input.LA(1);

            if ( (LA474_0==27) ) {
                alt474=1;
            }


            switch (alt474) {
        	case 1 :
        	    // InternalKim.g:6072:15: otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')'
        	    {
        	    otherlv_18=(Token)match(input,27,FOLLOW_40); if (state.failed) return ;
        	    otherlv_19=(Token)match(input,38,FOLLOW_91); if (state.failed) return ;
        	    // InternalKim.g:6080:15: ( (lv_observations_20_0= ruleObserveStatementBody ) )
        	    // InternalKim.g:6081:16: (lv_observations_20_0= ruleObserveStatementBody )
        	    {
        	    // InternalKim.g:6081:16: (lv_observations_20_0= ruleObserveStatementBody )
        	    // InternalKim.g:6082:17: lv_observations_20_0= ruleObserveStatementBody
        	    {
        	    if ( state.backtracking==0 ) {

        	      																	newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getObservationsObserveStatementBodyParserRuleCall_0_4_1_2_2_0());
        	      																
        	    }
        	    pushFollow(FOLLOW_96);
        	    lv_observations_20_0=ruleObserveStatementBody();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }

        	    otherlv_21=(Token)match(input,41,FOLLOW_34); if (state.failed) return ;

        	    }
        	    break;

        	default :
        	    break loop474;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred251_InternalKim

    // $ANTLR start synpred253_InternalKim
    public final void synpred253_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        Token lv_docstring_4_0=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        EObject lv_urn_1_0 = null;

        EObject lv_concept_3_0 = null;

        AntlrDatatypeRuleToken lv_parents_6_0 = null;

        AntlrDatatypeRuleToken lv_parents_8_0 = null;

        EObject lv_states_11_0 = null;

        EObject lv_states_13_0 = null;

        EObject lv_observations_16_0 = null;

        EObject lv_observations_20_0 = null;

        EObject lv_actions_22_0 = null;


        // InternalKim.g:5850:3: ( ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) ) ) )
        // InternalKim.g:5850:3: ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) ) )
        {
        // InternalKim.g:5850:3: ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) ) )
        // InternalKim.g:5851:4: {...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred253_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0)");
        }
        // InternalKim.g:5851:114: ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) )
        // InternalKim.g:5852:5: ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0);
        // InternalKim.g:5855:8: ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) )
        // InternalKim.g:5855:9: {...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred253_InternalKim", "true");
        }
        // InternalKim.g:5855:18: ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* )
        // InternalKim.g:5855:19: ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )*
        {
        // InternalKim.g:5855:19: ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )?
        int alt475=2;
        alt475 = dfa475.predict(input);
        switch (alt475) {
            case 1 :
                // InternalKim.g:5856:9: ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as'
                {
                // InternalKim.g:5856:9: ( (lv_urn_1_0= ruleUrn ) )
                // InternalKim.g:5857:10: (lv_urn_1_0= ruleUrn )
                {
                // InternalKim.g:5857:10: (lv_urn_1_0= ruleUrn )
                // InternalKim.g:5858:11: lv_urn_1_0= ruleUrn
                {
                if ( state.backtracking==0 ) {

                  											newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getUrnUrnParserRuleCall_0_0_0_0());
                  										
                }
                pushFollow(FOLLOW_11);
                lv_urn_1_0=ruleUrn();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                otherlv_2=(Token)match(input,25,FOLLOW_92); if (state.failed) return ;

                }
                break;

        }

        // InternalKim.g:5880:8: ( (lv_concept_3_0= ruleNamedObservableSemantics ) )
        // InternalKim.g:5881:9: (lv_concept_3_0= ruleNamedObservableSemantics )
        {
        // InternalKim.g:5881:9: (lv_concept_3_0= ruleNamedObservableSemantics )
        // InternalKim.g:5882:10: lv_concept_3_0= ruleNamedObservableSemantics
        {
        if ( state.backtracking==0 ) {

          										newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getConceptNamedObservableSemanticsParserRuleCall_0_1_0());
          									
        }
        pushFollow(FOLLOW_204);
        lv_concept_3_0=ruleNamedObservableSemantics();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:5899:8: ( (lv_docstring_4_0= RULE_STRING ) )?
        int alt476=2;
        int LA476_0 = input.LA(1);

        if ( (LA476_0==RULE_STRING) ) {
            alt476=1;
        }
        switch (alt476) {
            case 1 :
                // InternalKim.g:5900:9: (lv_docstring_4_0= RULE_STRING )
                {
                // InternalKim.g:5900:9: (lv_docstring_4_0= RULE_STRING )
                // InternalKim.g:5901:10: lv_docstring_4_0= RULE_STRING
                {
                lv_docstring_4_0=(Token)match(input,RULE_STRING,FOLLOW_205); if (state.failed) return ;

                }


                }
                break;

        }

        // InternalKim.g:5917:8: (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )?
        int alt478=2;
        int LA478_0 = input.LA(1);

        if ( (LA478_0==111) ) {
            alt478=1;
        }
        switch (alt478) {
            case 1 :
                // InternalKim.g:5918:9: otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )*
                {
                otherlv_5=(Token)match(input,111,FOLLOW_26); if (state.failed) return ;
                // InternalKim.g:5922:9: ( (lv_parents_6_0= rulePathName ) )
                // InternalKim.g:5923:10: (lv_parents_6_0= rulePathName )
                {
                // InternalKim.g:5923:10: (lv_parents_6_0= rulePathName )
                // InternalKim.g:5924:11: lv_parents_6_0= rulePathName
                {
                if ( state.backtracking==0 ) {

                  											newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getParentsPathNameParserRuleCall_0_3_1_0());
                  										
                }
                pushFollow(FOLLOW_206);
                lv_parents_6_0=rulePathName();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalKim.g:5941:9: (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )*
                loop477:
                do {
                    int alt477=2;
                    int LA477_0 = input.LA(1);

                    if ( (LA477_0==27) ) {
                        alt477=1;
                    }


                    switch (alt477) {
                	case 1 :
                	    // InternalKim.g:5942:10: otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) )
                	    {
                	    otherlv_7=(Token)match(input,27,FOLLOW_26); if (state.failed) return ;
                	    // InternalKim.g:5946:10: ( (lv_parents_8_0= rulePathName ) )
                	    // InternalKim.g:5947:11: (lv_parents_8_0= rulePathName )
                	    {
                	    // InternalKim.g:5947:11: (lv_parents_8_0= rulePathName )
                	    // InternalKim.g:5948:12: lv_parents_8_0= rulePathName
                	    {
                	    if ( state.backtracking==0 ) {

                	      												newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getParentsPathNameParserRuleCall_0_3_2_1_0());
                	      											
                	    }
                	    pushFollow(FOLLOW_206);
                	    lv_parents_8_0=rulePathName();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop477;
                    }
                } while (true);


                }
                break;

        }

        // InternalKim.g:5967:8: ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) )
        // InternalKim.g:5968:9: ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) )
        {
        // InternalKim.g:5968:9: ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) )
        // InternalKim.g:5969:10: ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* )
        {
        getUnorderedGroupHelper().enter(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4());
        // InternalKim.g:5972:10: ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* )
        // InternalKim.g:5973:11: ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )*
        {
        // InternalKim.g:5973:11: ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )*
        loop481:
        do {
            int alt481=3;
            int LA481_0 = input.LA(1);

            if ( LA481_0 == 30 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 0) ) {
                alt481=1;
            }
            else if ( LA481_0 == 112 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 1) ) {
                alt481=2;
            }


            switch (alt481) {
        	case 1 :
        	    // InternalKim.g:5974:9: ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) )
        	    {
        	    // InternalKim.g:5974:9: ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) )
        	    // InternalKim.g:5975:10: {...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 0) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred253_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 0)");
        	    }
        	    // InternalKim.g:5975:124: ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) )
        	    // InternalKim.g:5976:11: ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 0);
        	    // InternalKim.g:5979:14: ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) )
        	    // InternalKim.g:5979:15: {...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred253_InternalKim", "true");
        	    }
        	    // InternalKim.g:5979:24: (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )
        	    // InternalKim.g:5979:25: otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )*
        	    {
        	    otherlv_10=(Token)match(input,30,FOLLOW_95); if (state.failed) return ;
        	    // InternalKim.g:5983:14: ( (lv_states_11_0= ruleObservableSemantics ) )
        	    // InternalKim.g:5984:15: (lv_states_11_0= ruleObservableSemantics )
        	    {
        	    // InternalKim.g:5984:15: (lv_states_11_0= ruleObservableSemantics )
        	    // InternalKim.g:5985:16: lv_states_11_0= ruleObservableSemantics
        	    {
        	    if ( state.backtracking==0 ) {

        	      																newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getStatesObservableSemanticsParserRuleCall_0_4_0_1_0());
        	      															
        	    }
        	    pushFollow(FOLLOW_206);
        	    lv_states_11_0=ruleObservableSemantics();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }

        	    // InternalKim.g:6002:14: (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )*
        	    loop479:
        	    do {
        	        int alt479=2;
        	        int LA479_0 = input.LA(1);

        	        if ( (LA479_0==27) ) {
        	            alt479=1;
        	        }


        	        switch (alt479) {
        	    	case 1 :
        	    	    // InternalKim.g:6003:15: otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) )
        	    	    {
        	    	    otherlv_12=(Token)match(input,27,FOLLOW_95); if (state.failed) return ;
        	    	    // InternalKim.g:6007:15: ( (lv_states_13_0= ruleObservableSemantics ) )
        	    	    // InternalKim.g:6008:16: (lv_states_13_0= ruleObservableSemantics )
        	    	    {
        	    	    // InternalKim.g:6008:16: (lv_states_13_0= ruleObservableSemantics )
        	    	    // InternalKim.g:6009:17: lv_states_13_0= ruleObservableSemantics
        	    	    {
        	    	    if ( state.backtracking==0 ) {

        	    	      																	newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getStatesObservableSemanticsParserRuleCall_0_4_0_2_1_0());
        	    	      																
        	    	    }
        	    	    pushFollow(FOLLOW_206);
        	    	    lv_states_13_0=ruleObservableSemantics();

        	    	    state._fsp--;
        	    	    if (state.failed) return ;

        	    	    }


        	    	    }


        	    	    }
        	    	    break;

        	    	default :
        	    	    break loop479;
        	        }
        	    } while (true);


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 2 :
        	    // InternalKim.g:6033:9: ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) )
        	    {
        	    // InternalKim.g:6033:9: ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) )
        	    // InternalKim.g:6034:10: {...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 1) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred253_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 1)");
        	    }
        	    // InternalKim.g:6034:124: ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) )
        	    // InternalKim.g:6035:11: ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 1);
        	    // InternalKim.g:6038:14: ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) )
        	    // InternalKim.g:6038:15: {...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred253_InternalKim", "true");
        	    }
        	    // InternalKim.g:6038:24: (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* )
        	    // InternalKim.g:6038:25: otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )*
        	    {
        	    otherlv_14=(Token)match(input,112,FOLLOW_40); if (state.failed) return ;
        	    // InternalKim.g:6042:14: (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' )
        	    // InternalKim.g:6043:15: otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')'
        	    {
        	    otherlv_15=(Token)match(input,38,FOLLOW_91); if (state.failed) return ;
        	    // InternalKim.g:6047:15: ( (lv_observations_16_0= ruleObserveStatementBody ) )
        	    // InternalKim.g:6048:16: (lv_observations_16_0= ruleObserveStatementBody )
        	    {
        	    // InternalKim.g:6048:16: (lv_observations_16_0= ruleObserveStatementBody )
        	    // InternalKim.g:6049:17: lv_observations_16_0= ruleObserveStatementBody
        	    {
        	    if ( state.backtracking==0 ) {

        	      																	newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getObservationsObserveStatementBodyParserRuleCall_0_4_1_1_1_0());
        	      																
        	    }
        	    pushFollow(FOLLOW_96);
        	    lv_observations_16_0=ruleObserveStatementBody();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }

        	    otherlv_17=(Token)match(input,41,FOLLOW_206); if (state.failed) return ;

        	    }

        	    // InternalKim.g:6071:14: (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )*
        	    loop480:
        	    do {
        	        int alt480=2;
        	        int LA480_0 = input.LA(1);

        	        if ( (LA480_0==27) ) {
        	            alt480=1;
        	        }


        	        switch (alt480) {
        	    	case 1 :
        	    	    // InternalKim.g:6072:15: otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')'
        	    	    {
        	    	    otherlv_18=(Token)match(input,27,FOLLOW_40); if (state.failed) return ;
        	    	    otherlv_19=(Token)match(input,38,FOLLOW_91); if (state.failed) return ;
        	    	    // InternalKim.g:6080:15: ( (lv_observations_20_0= ruleObserveStatementBody ) )
        	    	    // InternalKim.g:6081:16: (lv_observations_20_0= ruleObserveStatementBody )
        	    	    {
        	    	    // InternalKim.g:6081:16: (lv_observations_20_0= ruleObserveStatementBody )
        	    	    // InternalKim.g:6082:17: lv_observations_20_0= ruleObserveStatementBody
        	    	    {
        	    	    if ( state.backtracking==0 ) {

        	    	      																	newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getObservationsObserveStatementBodyParserRuleCall_0_4_1_2_2_0());
        	    	      																
        	    	    }
        	    	    pushFollow(FOLLOW_96);
        	    	    lv_observations_20_0=ruleObserveStatementBody();

        	    	    state._fsp--;
        	    	    if (state.failed) return ;

        	    	    }


        	    	    }

        	    	    otherlv_21=(Token)match(input,41,FOLLOW_206); if (state.failed) return ;

        	    	    }
        	    	    break;

        	    	default :
        	    	    break loop480;
        	        }
        	    } while (true);


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop481;
            }
        } while (true);


        }


        }


        }

        // InternalKim.g:6117:8: ( (lv_actions_22_0= ruleActionSpecification ) )*
        loop482:
        do {
            int alt482=2;
            int LA482_0 = input.LA(1);

            if ( ((LA482_0>=54 && LA482_0<=56)||(LA482_0>=62 && LA482_0<=67)) ) {
                alt482=1;
            }


            switch (alt482) {
        	case 1 :
        	    // InternalKim.g:6118:9: (lv_actions_22_0= ruleActionSpecification )
        	    {
        	    // InternalKim.g:6118:9: (lv_actions_22_0= ruleActionSpecification )
        	    // InternalKim.g:6119:10: lv_actions_22_0= ruleActionSpecification
        	    {
        	    if ( state.backtracking==0 ) {

        	      										newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getActionsActionSpecificationParserRuleCall_0_5_0());
        	      									
        	    }
        	    pushFollow(FOLLOW_207);
        	    lv_actions_22_0=ruleActionSpecification();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop482;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred253_InternalKim

    // $ANTLR start synpred255_InternalKim
    public final void synpred255_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_23=null;
        EObject lv_accessor_24_0 = null;


        // InternalKim.g:6142:3: ( ({...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) ) ) )
        // InternalKim.g:6142:3: ({...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) ) )
        {
        // InternalKim.g:6142:3: ({...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) ) )
        // InternalKim.g:6143:4: {...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred255_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1)");
        }
        // InternalKim.g:6143:114: ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) )
        // InternalKim.g:6144:5: ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1);
        // InternalKim.g:6147:8: ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) )
        // InternalKim.g:6147:9: {...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred255_InternalKim", "true");
        }
        // InternalKim.g:6147:18: (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? )
        // InternalKim.g:6147:19: otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )?
        {
        otherlv_23=(Token)match(input,31,FOLLOW_199); if (state.failed) return ;
        // InternalKim.g:6151:8: ( (lv_accessor_24_0= ruleFunction ) )?
        int alt483=2;
        int LA483_0 = input.LA(1);

        if ( ((LA483_0>=RULE_LOWERCASE_ID && LA483_0<=RULE_UPPERCASE_ID)||LA483_0==RULE_LOWERCASE_DASHID) ) {
            alt483=1;
        }
        switch (alt483) {
            case 1 :
                // InternalKim.g:6152:9: (lv_accessor_24_0= ruleFunction )
                {
                // InternalKim.g:6152:9: (lv_accessor_24_0= ruleFunction )
                // InternalKim.g:6153:10: lv_accessor_24_0= ruleFunction
                {
                if ( state.backtracking==0 ) {

                  										newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getAccessorFunctionParserRuleCall_1_1_0());
                  									
                }
                pushFollow(FOLLOW_2);
                lv_accessor_24_0=ruleFunction();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred255_InternalKim

    // $ANTLR start synpred256_InternalKim
    public final void synpred256_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_25=null;
        EObject lv_metadata_26_0 = null;


        // InternalKim.g:6176:3: ( ({...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) ) ) ) ) ) )
        // InternalKim.g:6176:3: ({...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) ) ) ) ) )
        {
        // InternalKim.g:6176:3: ({...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) ) ) ) ) )
        // InternalKim.g:6177:4: {...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred256_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 2)");
        }
        // InternalKim.g:6177:114: ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) ) ) ) )
        // InternalKim.g:6178:5: ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 2);
        // InternalKim.g:6181:8: ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) ) ) )
        // InternalKim.g:6181:9: {...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred256_InternalKim", "true");
        }
        // InternalKim.g:6181:18: (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) ) )
        // InternalKim.g:6181:19: otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) )
        {
        otherlv_25=(Token)match(input,42,FOLLOW_33); if (state.failed) return ;
        // InternalKim.g:6185:8: ( (lv_metadata_26_0= ruleMap ) )
        // InternalKim.g:6186:9: (lv_metadata_26_0= ruleMap )
        {
        // InternalKim.g:6186:9: (lv_metadata_26_0= ruleMap )
        // InternalKim.g:6187:10: lv_metadata_26_0= ruleMap
        {
        if ( state.backtracking==0 ) {

          										newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getMetadataMapParserRuleCall_2_1_0());
          									
        }
        pushFollow(FOLLOW_2);
        lv_metadata_26_0=ruleMap();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred256_InternalKim

    // $ANTLR start synpred257_InternalKim
    public final void synpred257_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        EObject lv_value_0_0 = null;


        // InternalKim.g:6250:4: ( ( (lv_value_0_0= ruleValue ) ) otherlv_1= 'as' )
        // InternalKim.g:6250:4: ( (lv_value_0_0= ruleValue ) ) otherlv_1= 'as'
        {
        // InternalKim.g:6250:4: ( (lv_value_0_0= ruleValue ) )
        // InternalKim.g:6251:5: (lv_value_0_0= ruleValue )
        {
        // InternalKim.g:6251:5: (lv_value_0_0= ruleValue )
        // InternalKim.g:6252:6: lv_value_0_0= ruleValue
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getObservableSemanticsAccess().getValueValueParserRuleCall_0_0_0());
          					
        }
        pushFollow(FOLLOW_11);
        lv_value_0_0=ruleValue();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_1=(Token)match(input,25,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred257_InternalKim

    // $ANTLR start synpred259_InternalKim
    public final void synpred259_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_5=null;
        Token otherlv_6=null;
        AntlrDatatypeRuleToken lv_accordingTo_7_0 = null;


        // InternalKim.g:6314:4: ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) )
        // InternalKim.g:6314:4: ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) )
        {
        // InternalKim.g:6314:4: ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) )
        // InternalKim.g:6315:5: {...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred259_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 0)");
        }
        // InternalKim.g:6315:116: ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) )
        // InternalKim.g:6316:6: ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 0);
        // InternalKim.g:6319:9: ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) )
        // InternalKim.g:6319:10: {...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred259_InternalKim", "true");
        }
        // InternalKim.g:6319:19: (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) )
        // InternalKim.g:6319:20: otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) )
        {
        otherlv_5=(Token)match(input,35,FOLLOW_25); if (state.failed) return ;
        otherlv_6=(Token)match(input,36,FOLLOW_26); if (state.failed) return ;
        // InternalKim.g:6327:9: ( (lv_accordingTo_7_0= rulePropertyId ) )
        // InternalKim.g:6328:10: (lv_accordingTo_7_0= rulePropertyId )
        {
        // InternalKim.g:6328:10: (lv_accordingTo_7_0= rulePropertyId )
        // InternalKim.g:6329:11: lv_accordingTo_7_0= rulePropertyId
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getAccordingToPropertyIdParserRuleCall_3_0_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_accordingTo_7_0=rulePropertyId();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred259_InternalKim

    // $ANTLR start synpred263_InternalKim
    public final void synpred263_InternalKim_fragment() throws RecognitionException {   
        // InternalKim.g:6410:11: ( 'per' )
        // InternalKim.g:6410:12: 'per'
        {
        match(input,114,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred263_InternalKim

    // $ANTLR start synpred264_InternalKim
    public final void synpred264_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_8=null;
        Token otherlv_11=null;
        EObject lv_unit_9_0 = null;

        EObject lv_currency_10_0 = null;

        EObject lv_unit_12_0 = null;


        // InternalKim.g:6352:4: ( ({...}? => ( ({...}? => ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) )
        // InternalKim.g:6352:4: ({...}? => ( ({...}? => ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) )
        {
        // InternalKim.g:6352:4: ({...}? => ( ({...}? => ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) )
        // InternalKim.g:6353:5: {...}? => ( ({...}? => ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred264_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 1)");
        }
        // InternalKim.g:6353:116: ( ({...}? => ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) ) ) )
        // InternalKim.g:6354:6: ({...}? => ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 1);
        // InternalKim.g:6357:9: ({...}? => ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) ) )
        // InternalKim.g:6357:10: {...}? => ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred264_InternalKim", "true");
        }
        // InternalKim.g:6357:19: ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) )
        int alt486=2;
        int LA486_0 = input.LA(1);

        if ( (LA486_0==48) ) {
            alt486=1;
        }
        else if ( (LA486_0==114) && (synpred263_InternalKim())) {
            alt486=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 486, 0, input);

            throw nvae;
        }
        switch (alt486) {
            case 1 :
                // InternalKim.g:6357:20: ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) )
                {
                // InternalKim.g:6357:20: ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) )
                // InternalKim.g:6358:10: ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) )
                {
                // InternalKim.g:6358:10: ( ( 'in' )=>otherlv_8= 'in' )
                // InternalKim.g:6359:11: ( 'in' )=>otherlv_8= 'in'
                {
                otherlv_8=(Token)match(input,48,FOLLOW_101); if (state.failed) return ;

                }

                // InternalKim.g:6365:10: ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) )
                int alt485=2;
                int LA485_0 = input.LA(1);

                if ( (LA485_0==EOF||LA485_0==RULE_LOWERCASE_ID||LA485_0==RULE_CAMELCASE_ID||LA485_0==RULE_BACKCASE_ID||LA485_0==38||LA485_0==40||LA485_0==108||LA485_0==259) ) {
                    alt485=1;
                }
                else if ( (LA485_0==RULE_UPPERCASE_ID) ) {
                    int LA485_2 = input.LA(2);

                    if ( (LA485_2==EOF||LA485_2==40||LA485_2==108||LA485_2==259) ) {
                        alt485=1;
                    }
                    else if ( (LA485_2==250) ) {
                        alt485=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 485, 2, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 485, 0, input);

                    throw nvae;
                }
                switch (alt485) {
                    case 1 :
                        // InternalKim.g:6366:11: ( (lv_unit_9_0= ruleUnit ) )
                        {
                        // InternalKim.g:6366:11: ( (lv_unit_9_0= ruleUnit ) )
                        // InternalKim.g:6367:12: (lv_unit_9_0= ruleUnit )
                        {
                        // InternalKim.g:6367:12: (lv_unit_9_0= ruleUnit )
                        // InternalKim.g:6368:13: lv_unit_9_0= ruleUnit
                        {
                        if ( state.backtracking==0 ) {

                          													newCompositeNode(grammarAccess.getObservableSemanticsAccess().getUnitUnitParserRuleCall_3_1_0_1_0_0());
                          												
                        }
                        pushFollow(FOLLOW_2);
                        lv_unit_9_0=ruleUnit();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;
                    case 2 :
                        // InternalKim.g:6386:11: ( (lv_currency_10_0= ruleCurrency ) )
                        {
                        // InternalKim.g:6386:11: ( (lv_currency_10_0= ruleCurrency ) )
                        // InternalKim.g:6387:12: (lv_currency_10_0= ruleCurrency )
                        {
                        // InternalKim.g:6387:12: (lv_currency_10_0= ruleCurrency )
                        // InternalKim.g:6388:13: lv_currency_10_0= ruleCurrency
                        {
                        if ( state.backtracking==0 ) {

                          													newCompositeNode(grammarAccess.getObservableSemanticsAccess().getCurrencyCurrencyParserRuleCall_3_1_0_1_1_0());
                          												
                        }
                        pushFollow(FOLLOW_2);
                        lv_currency_10_0=ruleCurrency();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:6408:9: ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) )
                {
                // InternalKim.g:6408:9: ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) )
                // InternalKim.g:6409:10: ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) )
                {
                // InternalKim.g:6409:10: ( ( 'per' )=>otherlv_11= 'per' )
                // InternalKim.g:6410:11: ( 'per' )=>otherlv_11= 'per'
                {
                otherlv_11=(Token)match(input,114,FOLLOW_208); if (state.failed) return ;

                }

                // InternalKim.g:6416:10: ( (lv_unit_12_0= ruleUnit ) )
                // InternalKim.g:6417:11: (lv_unit_12_0= ruleUnit )
                {
                // InternalKim.g:6417:11: (lv_unit_12_0= ruleUnit )
                // InternalKim.g:6418:12: lv_unit_12_0= ruleUnit
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getObservableSemanticsAccess().getUnitUnitParserRuleCall_3_1_1_1_0());
                  											
                }
                pushFollow(FOLLOW_2);
                lv_unit_12_0=ruleUnit();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }


                }
                break;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred264_InternalKim

    // $ANTLR start synpred265_InternalKim
    public final void synpred265_InternalKim_fragment() throws RecognitionException {   
        EObject lv_valueOperators_14_0 = null;


        // InternalKim.g:6467:10: ( (lv_valueOperators_14_0= ruleValueOperator ) )
        // InternalKim.g:6467:10: (lv_valueOperators_14_0= ruleValueOperator )
        {
        // InternalKim.g:6467:10: (lv_valueOperators_14_0= ruleValueOperator )
        // InternalKim.g:6468:11: lv_valueOperators_14_0= ruleValueOperator
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_3_2_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_valueOperators_14_0=ruleValueOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred265_InternalKim

    // $ANTLR start synpred266_InternalKim
    public final void synpred266_InternalKim_fragment() throws RecognitionException {   
        EObject lv_valueOperators_13_0 = null;

        EObject lv_valueOperators_14_0 = null;


        // InternalKim.g:6442:4: ( ({...}? => ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) ) )
        // InternalKim.g:6442:4: ({...}? => ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) )
        {
        // InternalKim.g:6442:4: ({...}? => ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) )
        // InternalKim.g:6443:5: {...}? => ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred266_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2)");
        }
        // InternalKim.g:6443:116: ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) )
        // InternalKim.g:6444:6: ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2);
        // InternalKim.g:6447:9: ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) )
        // InternalKim.g:6447:10: {...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred266_InternalKim", "true");
        }
        // InternalKim.g:6447:19: ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* )
        // InternalKim.g:6447:20: ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )*
        {
        // InternalKim.g:6447:20: ( (lv_valueOperators_13_0= ruleValueOperator ) )
        // InternalKim.g:6448:10: (lv_valueOperators_13_0= ruleValueOperator )
        {
        // InternalKim.g:6448:10: (lv_valueOperators_13_0= ruleValueOperator )
        // InternalKim.g:6449:11: lv_valueOperators_13_0= ruleValueOperator
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_3_2_0_0());
          										
        }
        pushFollow(FOLLOW_209);
        lv_valueOperators_13_0=ruleValueOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:6466:9: ( (lv_valueOperators_14_0= ruleValueOperator ) )*
        loop487:
        do {
            int alt487=2;
            int LA487_0 = input.LA(1);

            if ( (LA487_0==55||(LA487_0>=76 && LA487_0<=89)||(LA487_0>=119 && LA487_0<=122)) ) {
                alt487=1;
            }


            switch (alt487) {
        	case 1 :
        	    // InternalKim.g:6467:10: (lv_valueOperators_14_0= ruleValueOperator )
        	    {
        	    // InternalKim.g:6467:10: (lv_valueOperators_14_0= ruleValueOperator )
        	    // InternalKim.g:6468:11: lv_valueOperators_14_0= ruleValueOperator
        	    {
        	    if ( state.backtracking==0 ) {

        	      											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_3_2_1_0());
        	      										
        	    }
        	    pushFollow(FOLLOW_209);
        	    lv_valueOperators_14_0=ruleValueOperator();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop487;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred266_InternalKim

    // $ANTLR start synpred268_InternalKim
    public final void synpred268_InternalKim_fragment() throws RecognitionException {   
        Token lv_optional_15_0=null;
        Token otherlv_16=null;

        // InternalKim.g:6491:4: ( ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) ) )
        // InternalKim.g:6491:4: ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) )
        {
        // InternalKim.g:6491:4: ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) )
        // InternalKim.g:6492:5: {...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred268_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 3)");
        }
        // InternalKim.g:6492:116: ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) )
        // InternalKim.g:6493:6: ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 3);
        // InternalKim.g:6496:9: ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) )
        // InternalKim.g:6496:10: {...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred268_InternalKim", "true");
        }
        // InternalKim.g:6496:19: ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' )
        int alt488=2;
        int LA488_0 = input.LA(1);

        if ( (LA488_0==115) ) {
            alt488=1;
        }
        else if ( (LA488_0==116) ) {
            alt488=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 488, 0, input);

            throw nvae;
        }
        switch (alt488) {
            case 1 :
                // InternalKim.g:6496:20: ( (lv_optional_15_0= 'optional' ) )
                {
                // InternalKim.g:6496:20: ( (lv_optional_15_0= 'optional' ) )
                // InternalKim.g:6497:10: (lv_optional_15_0= 'optional' )
                {
                // InternalKim.g:6497:10: (lv_optional_15_0= 'optional' )
                // InternalKim.g:6498:11: lv_optional_15_0= 'optional'
                {
                lv_optional_15_0=(Token)match(input,115,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:6511:9: otherlv_16= 'required'
                {
                otherlv_16=(Token)match(input,116,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred268_InternalKim

    // $ANTLR start synpred269_InternalKim
    public final void synpred269_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_18=null;
        EObject lv_from_17_0 = null;

        EObject lv_to_19_0 = null;


        // InternalKim.g:6521:4: ( ({...}? => ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) ) ) )
        // InternalKim.g:6521:4: ({...}? => ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) ) )
        {
        // InternalKim.g:6521:4: ({...}? => ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) ) )
        // InternalKim.g:6522:5: {...}? => ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 4) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred269_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 4)");
        }
        // InternalKim.g:6522:116: ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) )
        // InternalKim.g:6523:6: ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 4);
        // InternalKim.g:6526:9: ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) )
        // InternalKim.g:6526:10: {...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred269_InternalKim", "true");
        }
        // InternalKim.g:6526:19: ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) )
        // InternalKim.g:6526:20: ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) )
        {
        // InternalKim.g:6526:20: ( (lv_from_17_0= ruleNumber ) )
        // InternalKim.g:6527:10: (lv_from_17_0= ruleNumber )
        {
        // InternalKim.g:6527:10: (lv_from_17_0= ruleNumber )
        // InternalKim.g:6528:11: lv_from_17_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getFromNumberParserRuleCall_3_4_0_0());
          										
        }
        pushFollow(FOLLOW_25);
        lv_from_17_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_18=(Token)match(input,36,FOLLOW_38); if (state.failed) return ;
        // InternalKim.g:6549:9: ( (lv_to_19_0= ruleNumber ) )
        // InternalKim.g:6550:10: (lv_to_19_0= ruleNumber )
        {
        // InternalKim.g:6550:10: (lv_to_19_0= ruleNumber )
        // InternalKim.g:6551:11: lv_to_19_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getToNumberParserRuleCall_3_4_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_to_19_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred269_InternalKim

    // $ANTLR start synpred271_InternalKim
    public final void synpred271_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_20=null;
        Token lv_name_21_1=null;
        Token lv_name_21_2=null;

        // InternalKim.g:6574:4: ( ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )
        // InternalKim.g:6574:4: ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) )
        {
        // InternalKim.g:6574:4: ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) )
        // InternalKim.g:6575:5: {...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred271_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5)");
        }
        // InternalKim.g:6575:116: ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) )
        // InternalKim.g:6576:6: ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5);
        // InternalKim.g:6579:9: ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) )
        // InternalKim.g:6579:10: {...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred271_InternalKim", "true");
        }
        // InternalKim.g:6579:19: (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) )
        // InternalKim.g:6579:20: otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) )
        {
        otherlv_20=(Token)match(input,117,FOLLOW_46); if (state.failed) return ;
        // InternalKim.g:6583:9: ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) )
        // InternalKim.g:6584:10: ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) )
        {
        // InternalKim.g:6584:10: ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) )
        // InternalKim.g:6585:11: (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING )
        {
        // InternalKim.g:6585:11: (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING )
        int alt489=2;
        int LA489_0 = input.LA(1);

        if ( (LA489_0==RULE_LOWERCASE_ID) ) {
            alt489=1;
        }
        else if ( (LA489_0==RULE_STRING) ) {
            alt489=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 489, 0, input);

            throw nvae;
        }
        switch (alt489) {
            case 1 :
                // InternalKim.g:6586:12: lv_name_21_1= RULE_LOWERCASE_ID
                {
                lv_name_21_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:6601:12: lv_name_21_2= RULE_STRING
                {
                lv_name_21_2=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred271_InternalKim

    // $ANTLR start synpred281_InternalKim
    public final void synpred281_InternalKim_fragment() throws RecognitionException {   
        // InternalKim.g:6816:12: ( 'per' )
        // InternalKim.g:6816:13: 'per'
        {
        match(input,114,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred281_InternalKim

    // $ANTLR start synpred282_InternalKim
    public final void synpred282_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_5=null;
        Token otherlv_8=null;
        EObject lv_unit_6_0 = null;

        EObject lv_currency_7_0 = null;

        EObject lv_unit_9_0 = null;


        // InternalKim.g:6735:4: ( ({...}? => ( ({...}? => ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) ) ) ) ) )
        // InternalKim.g:6735:4: ({...}? => ( ({...}? => ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) ) ) ) )
        {
        // InternalKim.g:6735:4: ({...}? => ( ({...}? => ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) ) ) ) )
        // InternalKim.g:6736:5: {...}? => ( ({...}? => ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred282_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 0)");
        }
        // InternalKim.g:6736:122: ( ({...}? => ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) ) ) )
        // InternalKim.g:6737:6: ({...}? => ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 0);
        // InternalKim.g:6740:9: ({...}? => ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) ) )
        // InternalKim.g:6740:10: {...}? => ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred282_InternalKim", "true");
        }
        // InternalKim.g:6740:19: ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) )
        // InternalKim.g:6740:20: ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) )
        {
        // InternalKim.g:6740:20: ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) )
        int alt493=2;
        int LA493_0 = input.LA(1);

        if ( (LA493_0==48) ) {
            alt493=1;
        }
        else if ( (LA493_0==114) && (synpred281_InternalKim())) {
            alt493=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 493, 0, input);

            throw nvae;
        }
        switch (alt493) {
            case 1 :
                // InternalKim.g:6741:10: ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) )
                {
                // InternalKim.g:6741:10: ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) )
                // InternalKim.g:6742:11: ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) )
                {
                // InternalKim.g:6762:11: ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) )
                // InternalKim.g:6763:12: ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) )
                {
                // InternalKim.g:6763:12: ( ( 'in' )=>otherlv_5= 'in' )
                // InternalKim.g:6764:13: ( 'in' )=>otherlv_5= 'in'
                {
                otherlv_5=(Token)match(input,48,FOLLOW_101); if (state.failed) return ;

                }

                // InternalKim.g:6770:12: ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) )
                int alt492=2;
                int LA492_0 = input.LA(1);

                if ( (LA492_0==EOF||LA492_0==RULE_LOWERCASE_ID||LA492_0==RULE_CAMELCASE_ID||LA492_0==RULE_BACKCASE_ID||LA492_0==38||LA492_0==40||LA492_0==108||LA492_0==259) ) {
                    alt492=1;
                }
                else if ( (LA492_0==RULE_UPPERCASE_ID) ) {
                    int LA492_2 = input.LA(2);

                    if ( (LA492_2==EOF||LA492_2==40||LA492_2==108||LA492_2==259) ) {
                        alt492=1;
                    }
                    else if ( (LA492_2==250) ) {
                        alt492=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 492, 2, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 492, 0, input);

                    throw nvae;
                }
                switch (alt492) {
                    case 1 :
                        // InternalKim.g:6771:13: ( (lv_unit_6_0= ruleUnit ) )
                        {
                        // InternalKim.g:6771:13: ( (lv_unit_6_0= ruleUnit ) )
                        // InternalKim.g:6772:14: (lv_unit_6_0= ruleUnit )
                        {
                        // InternalKim.g:6772:14: (lv_unit_6_0= ruleUnit )
                        // InternalKim.g:6773:15: lv_unit_6_0= ruleUnit
                        {
                        if ( state.backtracking==0 ) {

                          															newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getUnitUnitParserRuleCall_2_0_0_0_0_1_0_0());
                          														
                        }
                        pushFollow(FOLLOW_2);
                        lv_unit_6_0=ruleUnit();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;
                    case 2 :
                        // InternalKim.g:6791:13: ( (lv_currency_7_0= ruleCurrency ) )
                        {
                        // InternalKim.g:6791:13: ( (lv_currency_7_0= ruleCurrency ) )
                        // InternalKim.g:6792:14: (lv_currency_7_0= ruleCurrency )
                        {
                        // InternalKim.g:6792:14: (lv_currency_7_0= ruleCurrency )
                        // InternalKim.g:6793:15: lv_currency_7_0= ruleCurrency
                        {
                        if ( state.backtracking==0 ) {

                          															newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getCurrencyCurrencyParserRuleCall_2_0_0_0_0_1_1_0());
                          														
                        }
                        pushFollow(FOLLOW_2);
                        lv_currency_7_0=ruleCurrency();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;

                }


                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:6814:10: ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) )
                {
                // InternalKim.g:6814:10: ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) )
                // InternalKim.g:6815:11: ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) )
                {
                // InternalKim.g:6815:11: ( ( 'per' )=>otherlv_8= 'per' )
                // InternalKim.g:6816:12: ( 'per' )=>otherlv_8= 'per'
                {
                otherlv_8=(Token)match(input,114,FOLLOW_208); if (state.failed) return ;

                }

                // InternalKim.g:6822:11: ( (lv_unit_9_0= ruleUnit ) )
                // InternalKim.g:6823:12: (lv_unit_9_0= ruleUnit )
                {
                // InternalKim.g:6823:12: (lv_unit_9_0= ruleUnit )
                // InternalKim.g:6824:13: lv_unit_9_0= ruleUnit
                {
                if ( state.backtracking==0 ) {

                  													newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getUnitUnitParserRuleCall_2_0_0_1_1_0());
                  												
                }
                pushFollow(FOLLOW_2);
                lv_unit_9_0=ruleUnit();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }


                }
                break;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred282_InternalKim

    // $ANTLR start synpred283_InternalKim
    public final void synpred283_InternalKim_fragment() throws RecognitionException {   
        EObject lv_valueOperators_11_0 = null;


        // InternalKim.g:6874:10: ( (lv_valueOperators_11_0= ruleValueOperator ) )
        // InternalKim.g:6874:10: (lv_valueOperators_11_0= ruleValueOperator )
        {
        // InternalKim.g:6874:10: (lv_valueOperators_11_0= ruleValueOperator )
        // InternalKim.g:6875:11: lv_valueOperators_11_0= ruleValueOperator
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_2_1_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_valueOperators_11_0=ruleValueOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred283_InternalKim

    // $ANTLR start synpred284_InternalKim
    public final void synpred284_InternalKim_fragment() throws RecognitionException {   
        EObject lv_valueOperators_10_0 = null;

        EObject lv_valueOperators_11_0 = null;


        // InternalKim.g:6849:4: ( ({...}? => ( ({...}? => ( ( (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* ) ) ) ) )
        // InternalKim.g:6849:4: ({...}? => ( ({...}? => ( ( (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* ) ) ) )
        {
        // InternalKim.g:6849:4: ({...}? => ( ({...}? => ( ( (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* ) ) ) )
        // InternalKim.g:6850:5: {...}? => ( ({...}? => ( ( (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred284_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 1)");
        }
        // InternalKim.g:6850:122: ( ({...}? => ( ( (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* ) ) )
        // InternalKim.g:6851:6: ({...}? => ( ( (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 1);
        // InternalKim.g:6854:9: ({...}? => ( ( (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* ) )
        // InternalKim.g:6854:10: {...}? => ( ( (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred284_InternalKim", "true");
        }
        // InternalKim.g:6854:19: ( ( (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* )
        // InternalKim.g:6854:20: ( (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )*
        {
        // InternalKim.g:6854:20: ( (lv_valueOperators_10_0= ruleValueOperator ) )
        // InternalKim.g:6855:10: (lv_valueOperators_10_0= ruleValueOperator )
        {
        // InternalKim.g:6855:10: (lv_valueOperators_10_0= ruleValueOperator )
        // InternalKim.g:6856:11: lv_valueOperators_10_0= ruleValueOperator
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_2_1_0_0());
          										
        }
        pushFollow(FOLLOW_209);
        lv_valueOperators_10_0=ruleValueOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:6873:9: ( (lv_valueOperators_11_0= ruleValueOperator ) )*
        loop494:
        do {
            int alt494=2;
            int LA494_0 = input.LA(1);

            if ( (LA494_0==55||(LA494_0>=76 && LA494_0<=89)||(LA494_0>=119 && LA494_0<=122)) ) {
                alt494=1;
            }


            switch (alt494) {
        	case 1 :
        	    // InternalKim.g:6874:10: (lv_valueOperators_11_0= ruleValueOperator )
        	    {
        	    // InternalKim.g:6874:10: (lv_valueOperators_11_0= ruleValueOperator )
        	    // InternalKim.g:6875:11: lv_valueOperators_11_0= ruleValueOperator
        	    {
        	    if ( state.backtracking==0 ) {

        	      											newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_2_1_1_0());
        	      										
        	    }
        	    pushFollow(FOLLOW_209);
        	    lv_valueOperators_11_0=ruleValueOperator();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop494;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred284_InternalKim

    // $ANTLR start synpred285_InternalKim
    public final void synpred285_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_13=null;
        EObject lv_from_12_0 = null;

        EObject lv_to_14_0 = null;


        // InternalKim.g:6898:4: ( ({...}? => ( ({...}? => ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) ) ) ) ) )
        // InternalKim.g:6898:4: ({...}? => ( ({...}? => ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) ) ) ) )
        {
        // InternalKim.g:6898:4: ({...}? => ( ({...}? => ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) ) ) ) )
        // InternalKim.g:6899:5: {...}? => ( ({...}? => ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred285_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 2)");
        }
        // InternalKim.g:6899:122: ( ({...}? => ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) ) ) )
        // InternalKim.g:6900:6: ({...}? => ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 2);
        // InternalKim.g:6903:9: ({...}? => ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) ) )
        // InternalKim.g:6903:10: {...}? => ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred285_InternalKim", "true");
        }
        // InternalKim.g:6903:19: ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) )
        // InternalKim.g:6903:20: ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) )
        {
        // InternalKim.g:6903:20: ( (lv_from_12_0= ruleNumber ) )
        // InternalKim.g:6904:10: (lv_from_12_0= ruleNumber )
        {
        // InternalKim.g:6904:10: (lv_from_12_0= ruleNumber )
        // InternalKim.g:6905:11: lv_from_12_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getFromNumberParserRuleCall_2_2_0_0());
          										
        }
        pushFollow(FOLLOW_25);
        lv_from_12_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_13=(Token)match(input,36,FOLLOW_38); if (state.failed) return ;
        // InternalKim.g:6926:9: ( (lv_to_14_0= ruleNumber ) )
        // InternalKim.g:6927:10: (lv_to_14_0= ruleNumber )
        {
        // InternalKim.g:6927:10: (lv_to_14_0= ruleNumber )
        // InternalKim.g:6928:11: lv_to_14_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getToNumberParserRuleCall_2_2_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_to_14_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred285_InternalKim

    // $ANTLR start synpred287_InternalKim
    public final void synpred287_InternalKim_fragment() throws RecognitionException {   
        EObject lv_comparisonValue_3_0 = null;


        // InternalKim.g:7024:5: ( ( (lv_comparisonValue_3_0= ruleNumber ) ) )
        // InternalKim.g:7024:5: ( (lv_comparisonValue_3_0= ruleNumber ) )
        {
        // InternalKim.g:7024:5: ( (lv_comparisonValue_3_0= ruleNumber ) )
        // InternalKim.g:7025:6: (lv_comparisonValue_3_0= ruleNumber )
        {
        // InternalKim.g:7025:6: (lv_comparisonValue_3_0= ruleNumber )
        // InternalKim.g:7026:7: lv_comparisonValue_3_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getValueOperatorAccess().getComparisonValueNumberParserRuleCall_0_1_0_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_comparisonValue_3_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred287_InternalKim

    // $ANTLR start synpred288_InternalKim
    public final void synpred288_InternalKim_fragment() throws RecognitionException {   
        EObject lv_comparisonQuantity_4_0 = null;


        // InternalKim.g:7044:5: ( ( (lv_comparisonQuantity_4_0= ruleQuantity ) ) )
        // InternalKim.g:7044:5: ( (lv_comparisonQuantity_4_0= ruleQuantity ) )
        {
        // InternalKim.g:7044:5: ( (lv_comparisonQuantity_4_0= ruleQuantity ) )
        // InternalKim.g:7045:6: (lv_comparisonQuantity_4_0= ruleQuantity )
        {
        // InternalKim.g:7045:6: (lv_comparisonQuantity_4_0= ruleQuantity )
        // InternalKim.g:7046:7: lv_comparisonQuantity_4_0= ruleQuantity
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getValueOperatorAccess().getComparisonQuantityQuantityParserRuleCall_0_1_1_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_comparisonQuantity_4_0=ruleQuantity();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred288_InternalKim

    // $ANTLR start synpred289_InternalKim
    public final void synpred289_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_6=null;
        EObject lv_comparisonConcept_7_0 = null;


        // InternalKim.g:7085:7: (otherlv_6= ',' ( (lv_comparisonConcept_7_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:7085:7: otherlv_6= ',' ( (lv_comparisonConcept_7_0= ruleConceptDeclaration ) )
        {
        otherlv_6=(Token)match(input,27,FOLLOW_23); if (state.failed) return ;
        // InternalKim.g:7089:7: ( (lv_comparisonConcept_7_0= ruleConceptDeclaration ) )
        // InternalKim.g:7090:8: (lv_comparisonConcept_7_0= ruleConceptDeclaration )
        {
        // InternalKim.g:7090:8: (lv_comparisonConcept_7_0= ruleConceptDeclaration )
        // InternalKim.g:7091:9: lv_comparisonConcept_7_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          									newCompositeNode(grammarAccess.getValueOperatorAccess().getComparisonConceptConceptDeclarationParserRuleCall_0_1_2_1_1_0());
          								
        }
        pushFollow(FOLLOW_2);
        lv_comparisonConcept_7_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred289_InternalKim

    // $ANTLR start synpred290_InternalKim
    public final void synpred290_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_6=null;
        EObject lv_comparisonConcept_5_0 = null;

        EObject lv_comparisonConcept_7_0 = null;


        // InternalKim.g:7064:5: ( ( ( (lv_comparisonConcept_5_0= ruleConceptDeclaration ) ) (otherlv_6= ',' ( (lv_comparisonConcept_7_0= ruleConceptDeclaration ) ) )* ) )
        // InternalKim.g:7064:5: ( ( (lv_comparisonConcept_5_0= ruleConceptDeclaration ) ) (otherlv_6= ',' ( (lv_comparisonConcept_7_0= ruleConceptDeclaration ) ) )* )
        {
        // InternalKim.g:7064:5: ( ( (lv_comparisonConcept_5_0= ruleConceptDeclaration ) ) (otherlv_6= ',' ( (lv_comparisonConcept_7_0= ruleConceptDeclaration ) ) )* )
        // InternalKim.g:7065:6: ( (lv_comparisonConcept_5_0= ruleConceptDeclaration ) ) (otherlv_6= ',' ( (lv_comparisonConcept_7_0= ruleConceptDeclaration ) ) )*
        {
        // InternalKim.g:7065:6: ( (lv_comparisonConcept_5_0= ruleConceptDeclaration ) )
        // InternalKim.g:7066:7: (lv_comparisonConcept_5_0= ruleConceptDeclaration )
        {
        // InternalKim.g:7066:7: (lv_comparisonConcept_5_0= ruleConceptDeclaration )
        // InternalKim.g:7067:8: lv_comparisonConcept_5_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getValueOperatorAccess().getComparisonConceptConceptDeclarationParserRuleCall_0_1_2_0_0());
          							
        }
        pushFollow(FOLLOW_34);
        lv_comparisonConcept_5_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:7084:6: (otherlv_6= ',' ( (lv_comparisonConcept_7_0= ruleConceptDeclaration ) ) )*
        loop495:
        do {
            int alt495=2;
            int LA495_0 = input.LA(1);

            if ( (LA495_0==27) ) {
                alt495=1;
            }


            switch (alt495) {
        	case 1 :
        	    // InternalKim.g:7085:7: otherlv_6= ',' ( (lv_comparisonConcept_7_0= ruleConceptDeclaration ) )
        	    {
        	    otherlv_6=(Token)match(input,27,FOLLOW_23); if (state.failed) return ;
        	    // InternalKim.g:7089:7: ( (lv_comparisonConcept_7_0= ruleConceptDeclaration ) )
        	    // InternalKim.g:7090:8: (lv_comparisonConcept_7_0= ruleConceptDeclaration )
        	    {
        	    // InternalKim.g:7090:8: (lv_comparisonConcept_7_0= ruleConceptDeclaration )
        	    // InternalKim.g:7091:9: lv_comparisonConcept_7_0= ruleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      									newCompositeNode(grammarAccess.getValueOperatorAccess().getComparisonConceptConceptDeclarationParserRuleCall_0_1_2_1_1_0());
        	      								
        	    }
        	    pushFollow(FOLLOW_34);
        	    lv_comparisonConcept_7_0=ruleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop495;
            }
        } while (true);


        }


        }
    }
    // $ANTLR end synpred290_InternalKim

    // $ANTLR start synpred295_InternalKim
    public final void synpred295_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        EObject lv_value_1_0 = null;


        // InternalKim.g:7236:4: ( ( (lv_value_1_0= ruleValue ) ) otherlv_2= 'as' )
        // InternalKim.g:7236:4: ( (lv_value_1_0= ruleValue ) ) otherlv_2= 'as'
        {
        // InternalKim.g:7236:4: ( (lv_value_1_0= ruleValue ) )
        // InternalKim.g:7237:5: (lv_value_1_0= ruleValue )
        {
        // InternalKim.g:7237:5: (lv_value_1_0= ruleValue )
        // InternalKim.g:7238:6: lv_value_1_0= ruleValue
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getValueValueParserRuleCall_1_0_0());
          					
        }
        pushFollow(FOLLOW_11);
        lv_value_1_0=ruleValue();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_2=(Token)match(input,25,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred295_InternalKim

    // $ANTLR start synpred297_InternalKim
    public final void synpred297_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_6=null;
        Token otherlv_7=null;
        AntlrDatatypeRuleToken lv_accordingTo_8_0 = null;


        // InternalKim.g:7300:4: ( ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) ) )
        // InternalKim.g:7300:4: ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) )
        {
        // InternalKim.g:7300:4: ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) )
        // InternalKim.g:7301:5: {...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred297_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 0)");
        }
        // InternalKim.g:7301:125: ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) )
        // InternalKim.g:7302:6: ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 0);
        // InternalKim.g:7305:9: ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) )
        // InternalKim.g:7305:10: {...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred297_InternalKim", "true");
        }
        // InternalKim.g:7305:19: (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) )
        // InternalKim.g:7305:20: otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) )
        {
        otherlv_6=(Token)match(input,35,FOLLOW_25); if (state.failed) return ;
        otherlv_7=(Token)match(input,36,FOLLOW_26); if (state.failed) return ;
        // InternalKim.g:7313:9: ( (lv_accordingTo_8_0= rulePropertyId ) )
        // InternalKim.g:7314:10: (lv_accordingTo_8_0= rulePropertyId )
        {
        // InternalKim.g:7314:10: (lv_accordingTo_8_0= rulePropertyId )
        // InternalKim.g:7315:11: lv_accordingTo_8_0= rulePropertyId
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getAccordingToPropertyIdParserRuleCall_4_0_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_accordingTo_8_0=rulePropertyId();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred297_InternalKim

    // $ANTLR start synpred300_InternalKim
    public final void synpred300_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_9=null;
        Token otherlv_12=null;
        EObject lv_unit_10_0 = null;

        EObject lv_currency_11_0 = null;

        EObject lv_unit_13_0 = null;


        // InternalKim.g:7338:4: ( ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) ) )
        // InternalKim.g:7338:4: ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) )
        {
        // InternalKim.g:7338:4: ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) )
        // InternalKim.g:7339:5: {...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred300_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 1)");
        }
        // InternalKim.g:7339:125: ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) )
        // InternalKim.g:7340:6: ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 1);
        // InternalKim.g:7343:9: ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) )
        // InternalKim.g:7343:10: {...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred300_InternalKim", "true");
        }
        // InternalKim.g:7343:19: ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) )
        int alt501=2;
        int LA501_0 = input.LA(1);

        if ( (LA501_0==48) ) {
            alt501=1;
        }
        else if ( (LA501_0==114) ) {
            alt501=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 501, 0, input);

            throw nvae;
        }
        switch (alt501) {
            case 1 :
                // InternalKim.g:7343:20: (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) )
                {
                // InternalKim.g:7343:20: (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) )
                // InternalKim.g:7344:10: otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) )
                {
                otherlv_9=(Token)match(input,48,FOLLOW_101); if (state.failed) return ;
                // InternalKim.g:7348:10: ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) )
                int alt500=2;
                int LA500_0 = input.LA(1);

                if ( (LA500_0==EOF||LA500_0==RULE_LOWERCASE_ID||LA500_0==RULE_CAMELCASE_ID||LA500_0==RULE_BACKCASE_ID||LA500_0==38||LA500_0==40||LA500_0==108||LA500_0==259) ) {
                    alt500=1;
                }
                else if ( (LA500_0==RULE_UPPERCASE_ID) ) {
                    int LA500_2 = input.LA(2);

                    if ( (LA500_2==EOF||LA500_2==40||LA500_2==108||LA500_2==259) ) {
                        alt500=1;
                    }
                    else if ( (LA500_2==250) ) {
                        alt500=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 500, 2, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 500, 0, input);

                    throw nvae;
                }
                switch (alt500) {
                    case 1 :
                        // InternalKim.g:7349:11: ( (lv_unit_10_0= ruleUnit ) )
                        {
                        // InternalKim.g:7349:11: ( (lv_unit_10_0= ruleUnit ) )
                        // InternalKim.g:7350:12: (lv_unit_10_0= ruleUnit )
                        {
                        // InternalKim.g:7350:12: (lv_unit_10_0= ruleUnit )
                        // InternalKim.g:7351:13: lv_unit_10_0= ruleUnit
                        {
                        if ( state.backtracking==0 ) {

                          													newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnitUnitParserRuleCall_4_1_0_1_0_0());
                          												
                        }
                        pushFollow(FOLLOW_2);
                        lv_unit_10_0=ruleUnit();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;
                    case 2 :
                        // InternalKim.g:7369:11: ( (lv_currency_11_0= ruleCurrency ) )
                        {
                        // InternalKim.g:7369:11: ( (lv_currency_11_0= ruleCurrency ) )
                        // InternalKim.g:7370:12: (lv_currency_11_0= ruleCurrency )
                        {
                        // InternalKim.g:7370:12: (lv_currency_11_0= ruleCurrency )
                        // InternalKim.g:7371:13: lv_currency_11_0= ruleCurrency
                        {
                        if ( state.backtracking==0 ) {

                          													newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getCurrencyCurrencyParserRuleCall_4_1_0_1_1_0());
                          												
                        }
                        pushFollow(FOLLOW_2);
                        lv_currency_11_0=ruleCurrency();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:7391:9: (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) )
                {
                // InternalKim.g:7391:9: (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) )
                // InternalKim.g:7392:10: otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) )
                {
                otherlv_12=(Token)match(input,114,FOLLOW_208); if (state.failed) return ;
                // InternalKim.g:7396:10: ( (lv_unit_13_0= ruleUnit ) )
                // InternalKim.g:7397:11: (lv_unit_13_0= ruleUnit )
                {
                // InternalKim.g:7397:11: (lv_unit_13_0= ruleUnit )
                // InternalKim.g:7398:12: lv_unit_13_0= ruleUnit
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnitUnitParserRuleCall_4_1_1_1_0());
                  											
                }
                pushFollow(FOLLOW_2);
                lv_unit_13_0=ruleUnit();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }


                }
                break;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred300_InternalKim

    // $ANTLR start synpred301_InternalKim
    public final void synpred301_InternalKim_fragment() throws RecognitionException {   
        EObject lv_valueOperators_15_0 = null;


        // InternalKim.g:7447:10: ( (lv_valueOperators_15_0= ruleValueOperator ) )
        // InternalKim.g:7447:10: (lv_valueOperators_15_0= ruleValueOperator )
        {
        // InternalKim.g:7447:10: (lv_valueOperators_15_0= ruleValueOperator )
        // InternalKim.g:7448:11: lv_valueOperators_15_0= ruleValueOperator
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_4_2_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_valueOperators_15_0=ruleValueOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred301_InternalKim

    // $ANTLR start synpred302_InternalKim
    public final void synpred302_InternalKim_fragment() throws RecognitionException {   
        EObject lv_valueOperators_14_0 = null;

        EObject lv_valueOperators_15_0 = null;


        // InternalKim.g:7422:4: ( ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) ) )
        // InternalKim.g:7422:4: ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) )
        {
        // InternalKim.g:7422:4: ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) )
        // InternalKim.g:7423:5: {...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred302_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2)");
        }
        // InternalKim.g:7423:125: ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) )
        // InternalKim.g:7424:6: ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2);
        // InternalKim.g:7427:9: ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) )
        // InternalKim.g:7427:10: {...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred302_InternalKim", "true");
        }
        // InternalKim.g:7427:19: ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* )
        // InternalKim.g:7427:20: ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )*
        {
        // InternalKim.g:7427:20: ( (lv_valueOperators_14_0= ruleValueOperator ) )
        // InternalKim.g:7428:10: (lv_valueOperators_14_0= ruleValueOperator )
        {
        // InternalKim.g:7428:10: (lv_valueOperators_14_0= ruleValueOperator )
        // InternalKim.g:7429:11: lv_valueOperators_14_0= ruleValueOperator
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_4_2_0_0());
          										
        }
        pushFollow(FOLLOW_209);
        lv_valueOperators_14_0=ruleValueOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:7446:9: ( (lv_valueOperators_15_0= ruleValueOperator ) )*
        loop502:
        do {
            int alt502=2;
            int LA502_0 = input.LA(1);

            if ( (LA502_0==55||(LA502_0>=76 && LA502_0<=89)||(LA502_0>=119 && LA502_0<=122)) ) {
                alt502=1;
            }


            switch (alt502) {
        	case 1 :
        	    // InternalKim.g:7447:10: (lv_valueOperators_15_0= ruleValueOperator )
        	    {
        	    // InternalKim.g:7447:10: (lv_valueOperators_15_0= ruleValueOperator )
        	    // InternalKim.g:7448:11: lv_valueOperators_15_0= ruleValueOperator
        	    {
        	    if ( state.backtracking==0 ) {

        	      											newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_4_2_1_0());
        	      										
        	    }
        	    pushFollow(FOLLOW_209);
        	    lv_valueOperators_15_0=ruleValueOperator();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop502;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred302_InternalKim

    // $ANTLR start synpred304_InternalKim
    public final void synpred304_InternalKim_fragment() throws RecognitionException {   
        Token lv_optional_16_0=null;
        Token otherlv_17=null;

        // InternalKim.g:7471:4: ( ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) ) )
        // InternalKim.g:7471:4: ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) )
        {
        // InternalKim.g:7471:4: ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) )
        // InternalKim.g:7472:5: {...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 3) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred304_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 3)");
        }
        // InternalKim.g:7472:125: ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) )
        // InternalKim.g:7473:6: ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 3);
        // InternalKim.g:7476:9: ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) )
        // InternalKim.g:7476:10: {...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred304_InternalKim", "true");
        }
        // InternalKim.g:7476:19: ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' )
        int alt503=2;
        int LA503_0 = input.LA(1);

        if ( (LA503_0==115) ) {
            alt503=1;
        }
        else if ( (LA503_0==116) ) {
            alt503=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 503, 0, input);

            throw nvae;
        }
        switch (alt503) {
            case 1 :
                // InternalKim.g:7476:20: ( (lv_optional_16_0= 'optional' ) )
                {
                // InternalKim.g:7476:20: ( (lv_optional_16_0= 'optional' ) )
                // InternalKim.g:7477:10: (lv_optional_16_0= 'optional' )
                {
                // InternalKim.g:7477:10: (lv_optional_16_0= 'optional' )
                // InternalKim.g:7478:11: lv_optional_16_0= 'optional'
                {
                lv_optional_16_0=(Token)match(input,115,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:7491:9: otherlv_17= 'required'
                {
                otherlv_17=(Token)match(input,116,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred304_InternalKim

    // $ANTLR start synpred305_InternalKim
    public final void synpred305_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_19=null;
        EObject lv_from_18_0 = null;

        EObject lv_to_20_0 = null;


        // InternalKim.g:7501:4: ( ({...}? => ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) ) ) )
        // InternalKim.g:7501:4: ({...}? => ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) ) )
        {
        // InternalKim.g:7501:4: ({...}? => ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) ) )
        // InternalKim.g:7502:5: {...}? => ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 4) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred305_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 4)");
        }
        // InternalKim.g:7502:125: ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) )
        // InternalKim.g:7503:6: ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 4);
        // InternalKim.g:7506:9: ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) )
        // InternalKim.g:7506:10: {...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred305_InternalKim", "true");
        }
        // InternalKim.g:7506:19: ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) )
        // InternalKim.g:7506:20: ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) )
        {
        // InternalKim.g:7506:20: ( (lv_from_18_0= ruleNumber ) )
        // InternalKim.g:7507:10: (lv_from_18_0= ruleNumber )
        {
        // InternalKim.g:7507:10: (lv_from_18_0= ruleNumber )
        // InternalKim.g:7508:11: lv_from_18_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getFromNumberParserRuleCall_4_4_0_0());
          										
        }
        pushFollow(FOLLOW_25);
        lv_from_18_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_19=(Token)match(input,36,FOLLOW_38); if (state.failed) return ;
        // InternalKim.g:7529:9: ( (lv_to_20_0= ruleNumber ) )
        // InternalKim.g:7530:10: (lv_to_20_0= ruleNumber )
        {
        // InternalKim.g:7530:10: (lv_to_20_0= ruleNumber )
        // InternalKim.g:7531:11: lv_to_20_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getToNumberParserRuleCall_4_4_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_to_20_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred305_InternalKim

    // $ANTLR start synpred307_InternalKim
    public final void synpred307_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_21=null;
        Token lv_name_22_1=null;
        Token lv_name_22_2=null;

        // InternalKim.g:7554:4: ( ({...}? => ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) ) ) )
        // InternalKim.g:7554:4: ({...}? => ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) ) )
        {
        // InternalKim.g:7554:4: ({...}? => ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) ) )
        // InternalKim.g:7555:5: {...}? => ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 5) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred307_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 5)");
        }
        // InternalKim.g:7555:125: ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) )
        // InternalKim.g:7556:6: ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 5);
        // InternalKim.g:7559:9: ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) )
        // InternalKim.g:7559:10: {...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred307_InternalKim", "true");
        }
        // InternalKim.g:7559:19: (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) )
        // InternalKim.g:7559:20: otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) )
        {
        otherlv_21=(Token)match(input,117,FOLLOW_46); if (state.failed) return ;
        // InternalKim.g:7563:9: ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) )
        // InternalKim.g:7564:10: ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) )
        {
        // InternalKim.g:7564:10: ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) )
        // InternalKim.g:7565:11: (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING )
        {
        // InternalKim.g:7565:11: (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING )
        int alt504=2;
        int LA504_0 = input.LA(1);

        if ( (LA504_0==RULE_LOWERCASE_ID) ) {
            alt504=1;
        }
        else if ( (LA504_0==RULE_STRING) ) {
            alt504=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 504, 0, input);

            throw nvae;
        }
        switch (alt504) {
            case 1 :
                // InternalKim.g:7566:12: lv_name_22_1= RULE_LOWERCASE_ID
                {
                lv_name_22_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:7581:12: lv_name_22_2= RULE_STRING
                {
                lv_name_22_2=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred307_InternalKim

    // $ANTLR start synpred309_InternalKim
    public final void synpred309_InternalKim_fragment() throws RecognitionException {   
        Token lv_modelReference_1_1=null;

        // InternalKim.g:7667:8: (lv_modelReference_1_1= RULE_LOWERCASE_ID )
        // InternalKim.g:7667:8: lv_modelReference_1_1= RULE_LOWERCASE_ID
        {
        lv_modelReference_1_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred309_InternalKim

    // $ANTLR start synpred310_InternalKim
    public final void synpred310_InternalKim_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken lv_modelReference_1_2 = null;


        // InternalKim.g:7682:8: (lv_modelReference_1_2= rulePathName )
        // InternalKim.g:7682:8: lv_modelReference_1_2= rulePathName
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getDependencyAccess().getModelReferencePathNameParserRuleCall_1_0_0_0_1());
          							
        }
        pushFollow(FOLLOW_2);
        lv_modelReference_1_2=rulePathName();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred310_InternalKim

    // $ANTLR start synpred313_InternalKim
    public final void synpred313_InternalKim_fragment() throws RecognitionException {   
        Token lv_modelReference_1_1=null;
        Token lv_modelReference_1_4=null;
        AntlrDatatypeRuleToken lv_modelReference_1_2 = null;

        AntlrDatatypeRuleToken lv_modelReference_1_3 = null;

        EObject lv_observable_2_0 = null;


        // InternalKim.g:7663:4: ( ( ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) ) | ( (lv_observable_2_0= ruleDependencyObservableSemantics ) ) ) )
        // InternalKim.g:7663:4: ( ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) ) | ( (lv_observable_2_0= ruleDependencyObservableSemantics ) ) )
        {
        // InternalKim.g:7663:4: ( ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) ) | ( (lv_observable_2_0= ruleDependencyObservableSemantics ) ) )
        int alt507=2;
        alt507 = dfa507.predict(input);
        switch (alt507) {
            case 1 :
                // InternalKim.g:7664:5: ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) )
                {
                // InternalKim.g:7664:5: ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) )
                // InternalKim.g:7665:6: ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) )
                {
                // InternalKim.g:7665:6: ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) )
                // InternalKim.g:7666:7: (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING )
                {
                // InternalKim.g:7666:7: (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING )
                int alt506=4;
                alt506 = dfa506.predict(input);
                switch (alt506) {
                    case 1 :
                        // InternalKim.g:7667:8: lv_modelReference_1_1= RULE_LOWERCASE_ID
                        {
                        lv_modelReference_1_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

                        }
                        break;
                    case 2 :
                        // InternalKim.g:7682:8: lv_modelReference_1_2= rulePathName
                        {
                        pushFollow(FOLLOW_2);
                        lv_modelReference_1_2=rulePathName();

                        state._fsp--;
                        if (state.failed) return ;

                        }
                        break;
                    case 3 :
                        // InternalKim.g:7698:8: lv_modelReference_1_3= ruleUrnId
                        {
                        pushFollow(FOLLOW_2);
                        lv_modelReference_1_3=ruleUrnId();

                        state._fsp--;
                        if (state.failed) return ;

                        }
                        break;
                    case 4 :
                        // InternalKim.g:7714:8: lv_modelReference_1_4= RULE_STRING
                        {
                        lv_modelReference_1_4=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;

                        }
                        break;

                }


                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:7732:5: ( (lv_observable_2_0= ruleDependencyObservableSemantics ) )
                {
                // InternalKim.g:7732:5: ( (lv_observable_2_0= ruleDependencyObservableSemantics ) )
                // InternalKim.g:7733:6: (lv_observable_2_0= ruleDependencyObservableSemantics )
                {
                // InternalKim.g:7733:6: (lv_observable_2_0= ruleDependencyObservableSemantics )
                // InternalKim.g:7734:7: lv_observable_2_0= ruleDependencyObservableSemantics
                {
                if ( state.backtracking==0 ) {

                  							newCompositeNode(grammarAccess.getDependencyAccess().getObservableDependencyObservableSemanticsParserRuleCall_1_0_1_0());
                  						
                }
                pushFollow(FOLLOW_2);
                lv_observable_2_0=ruleDependencyObservableSemantics();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }


        }
    }
    // $ANTLR end synpred313_InternalKim

    // $ANTLR start synpred317_InternalKim
    public final void synpred317_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token lv_optional_9_0=null;
        Token otherlv_10=null;
        EObject lv_alternativeObservables_5_0 = null;

        EObject lv_alternativeObservables_7_0 = null;


        // InternalKim.g:7760:5: ( ({...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) ) ) )
        // InternalKim.g:7760:5: ({...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) ) )
        {
        // InternalKim.g:7760:5: ({...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) ) )
        // InternalKim.g:7761:6: {...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred317_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1(), 0)");
        }
        // InternalKim.g:7761:110: ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) )
        // InternalKim.g:7762:7: ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1(), 0);
        // InternalKim.g:7765:10: ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) )
        // InternalKim.g:7765:11: {...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred317_InternalKim", "true");
        }
        // InternalKim.g:7765:20: (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? )
        // InternalKim.g:7765:21: otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )?
        {
        otherlv_4=(Token)match(input,38,FOLLOW_106); if (state.failed) return ;
        // InternalKim.g:7769:10: ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) )
        // InternalKim.g:7770:11: (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics )
        {
        // InternalKim.g:7770:11: (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics )
        // InternalKim.g:7771:12: lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics
        {
        if ( state.backtracking==0 ) {

          												newCompositeNode(grammarAccess.getDependencyAccess().getAlternativeObservablesAlternativeDependencyObservableSemanticsParserRuleCall_1_1_0_1_0());
          											
        }
        pushFollow(FOLLOW_29);
        lv_alternativeObservables_5_0=ruleAlternativeDependencyObservableSemantics();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:7788:10: (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )*
        loop508:
        do {
            int alt508=2;
            int LA508_0 = input.LA(1);

            if ( (LA508_0==27) ) {
                alt508=1;
            }


            switch (alt508) {
        	case 1 :
        	    // InternalKim.g:7789:11: otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) )
        	    {
        	    otherlv_6=(Token)match(input,27,FOLLOW_106); if (state.failed) return ;
        	    // InternalKim.g:7793:11: ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) )
        	    // InternalKim.g:7794:12: (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics )
        	    {
        	    // InternalKim.g:7794:12: (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics )
        	    // InternalKim.g:7795:13: lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics
        	    {
        	    if ( state.backtracking==0 ) {

        	      													newCompositeNode(grammarAccess.getDependencyAccess().getAlternativeObservablesAlternativeDependencyObservableSemanticsParserRuleCall_1_1_0_2_1_0());
        	      												
        	    }
        	    pushFollow(FOLLOW_29);
        	    lv_alternativeObservables_7_0=ruleAlternativeDependencyObservableSemantics();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop508;
            }
        } while (true);

        otherlv_8=(Token)match(input,41,FOLLOW_210); if (state.failed) return ;
        // InternalKim.g:7817:10: ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )?
        int alt509=3;
        int LA509_0 = input.LA(1);

        if ( (LA509_0==115) ) {
            alt509=1;
        }
        else if ( (LA509_0==116) ) {
            alt509=2;
        }
        switch (alt509) {
            case 1 :
                // InternalKim.g:7818:11: ( (lv_optional_9_0= 'optional' ) )
                {
                // InternalKim.g:7818:11: ( (lv_optional_9_0= 'optional' ) )
                // InternalKim.g:7819:12: (lv_optional_9_0= 'optional' )
                {
                // InternalKim.g:7819:12: (lv_optional_9_0= 'optional' )
                // InternalKim.g:7820:13: lv_optional_9_0= 'optional'
                {
                lv_optional_9_0=(Token)match(input,115,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:7833:11: otherlv_10= 'required'
                {
                otherlv_10=(Token)match(input,116,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred317_InternalKim

    // $ANTLR start synpred319_InternalKim
    public final void synpred319_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_11=null;
        Token lv_name_12_1=null;
        Token lv_name_12_2=null;

        // InternalKim.g:7844:5: ( ({...}? => ( ({...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) ) ) ) ) )
        // InternalKim.g:7844:5: ({...}? => ( ({...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) ) ) ) )
        {
        // InternalKim.g:7844:5: ({...}? => ( ({...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) ) ) ) )
        // InternalKim.g:7845:6: {...}? => ( ({...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred319_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1(), 1)");
        }
        // InternalKim.g:7845:110: ( ({...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) ) ) )
        // InternalKim.g:7846:7: ({...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1(), 1);
        // InternalKim.g:7849:10: ({...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) ) )
        // InternalKim.g:7849:11: {...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred319_InternalKim", "true");
        }
        // InternalKim.g:7849:20: (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) )
        // InternalKim.g:7849:21: otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) )
        {
        otherlv_11=(Token)match(input,117,FOLLOW_46); if (state.failed) return ;
        // InternalKim.g:7853:10: ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) )
        // InternalKim.g:7854:11: ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) )
        {
        // InternalKim.g:7854:11: ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) )
        // InternalKim.g:7855:12: (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING )
        {
        // InternalKim.g:7855:12: (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING )
        int alt510=2;
        int LA510_0 = input.LA(1);

        if ( (LA510_0==RULE_LOWERCASE_ID) ) {
            alt510=1;
        }
        else if ( (LA510_0==RULE_STRING) ) {
            alt510=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 510, 0, input);

            throw nvae;
        }
        switch (alt510) {
            case 1 :
                // InternalKim.g:7856:13: lv_name_12_1= RULE_LOWERCASE_ID
                {
                lv_name_12_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:7871:13: lv_name_12_2= RULE_STRING
                {
                lv_name_12_2=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred319_InternalKim

    // $ANTLR start synpred320_InternalKim
    public final void synpred320_InternalKim_fragment() throws RecognitionException {   
        EObject lv_main_0_0 = null;


        // InternalKim.g:7936:4: ( (lv_main_0_0= ruleConcept ) )
        // InternalKim.g:7936:4: (lv_main_0_0= ruleConcept )
        {
        // InternalKim.g:7936:4: (lv_main_0_0= ruleConcept )
        // InternalKim.g:7937:5: lv_main_0_0= ruleConcept
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getConceptDeclarationAccess().getMainConceptParserRuleCall_0_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_main_0_0=ruleConcept();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred320_InternalKim

    // $ANTLR start synpred322_InternalKim
    public final void synpred322_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        Token lv_distributedOfInherency_3_0=null;
        EObject lv_inherency_4_0 = null;


        // InternalKim.g:7961:4: ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) )
        // InternalKim.g:7961:4: ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        {
        // InternalKim.g:7961:4: ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:7962:5: {...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred322_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 0)");
        }
        // InternalKim.g:7962:115: ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:7963:6: ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 0);
        // InternalKim.g:7966:9: ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:7966:10: {...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred322_InternalKim", "true");
        }
        // InternalKim.g:7966:19: (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:7966:20: otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) )
        {
        otherlv_2=(Token)match(input,123,FOLLOW_110); if (state.failed) return ;
        // InternalKim.g:7970:9: ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:7971:10: ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) )
        {
        // InternalKim.g:7971:10: ( (lv_distributedOfInherency_3_0= 'each' ) )?
        int alt511=2;
        int LA511_0 = input.LA(1);

        if ( (LA511_0==26) ) {
            alt511=1;
        }
        switch (alt511) {
            case 1 :
                // InternalKim.g:7972:11: (lv_distributedOfInherency_3_0= 'each' )
                {
                // InternalKim.g:7972:11: (lv_distributedOfInherency_3_0= 'each' )
                // InternalKim.g:7973:12: lv_distributedOfInherency_3_0= 'each'
                {
                lv_distributedOfInherency_3_0=(Token)match(input,26,FOLLOW_110); if (state.failed) return ;

                }


                }
                break;

        }

        // InternalKim.g:7985:10: ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:7986:11: (lv_inherency_4_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:7986:11: (lv_inherency_4_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:7987:12: lv_inherency_4_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          												newCompositeNode(grammarAccess.getConceptDeclarationAccess().getInherencySimpleConceptDeclarationParserRuleCall_1_0_1_1_0());
          											
        }
        pushFollow(FOLLOW_2);
        lv_inherency_4_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred322_InternalKim

    // $ANTLR start synpred324_InternalKim
    public final void synpred324_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_5=null;
        Token lv_distributedForInherency_6_0=null;
        EObject lv_motivation_7_0 = null;


        // InternalKim.g:8011:4: ( ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) )
        // InternalKim.g:8011:4: ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        {
        // InternalKim.g:8011:4: ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:8012:5: {...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred324_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 1)");
        }
        // InternalKim.g:8012:115: ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:8013:6: ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 1);
        // InternalKim.g:8016:9: ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:8016:10: {...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred324_InternalKim", "true");
        }
        // InternalKim.g:8016:19: (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:8016:20: otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) )
        {
        otherlv_5=(Token)match(input,69,FOLLOW_110); if (state.failed) return ;
        // InternalKim.g:8020:9: ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:8021:10: ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) )
        {
        // InternalKim.g:8021:10: ( (lv_distributedForInherency_6_0= 'each' ) )?
        int alt512=2;
        int LA512_0 = input.LA(1);

        if ( (LA512_0==26) ) {
            alt512=1;
        }
        switch (alt512) {
            case 1 :
                // InternalKim.g:8022:11: (lv_distributedForInherency_6_0= 'each' )
                {
                // InternalKim.g:8022:11: (lv_distributedForInherency_6_0= 'each' )
                // InternalKim.g:8023:12: lv_distributedForInherency_6_0= 'each'
                {
                lv_distributedForInherency_6_0=(Token)match(input,26,FOLLOW_110); if (state.failed) return ;

                }


                }
                break;

        }

        // InternalKim.g:8035:10: ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:8036:11: (lv_motivation_7_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:8036:11: (lv_motivation_7_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:8037:12: lv_motivation_7_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          												newCompositeNode(grammarAccess.getConceptDeclarationAccess().getMotivationSimpleConceptDeclarationParserRuleCall_1_1_1_1_0());
          											
        }
        pushFollow(FOLLOW_2);
        lv_motivation_7_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred324_InternalKim

    // $ANTLR start synpred325_InternalKim
    public final void synpred325_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_8=null;
        EObject lv_compresent_9_0 = null;


        // InternalKim.g:8061:4: ( ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:8061:4: ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:8061:4: ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:8062:5: {...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred325_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 2)");
        }
        // InternalKim.g:8062:115: ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:8063:6: ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 2);
        // InternalKim.g:8066:9: ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:8066:10: {...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred325_InternalKim", "true");
        }
        // InternalKim.g:8066:19: (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:8066:20: otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) )
        {
        otherlv_8=(Token)match(input,99,FOLLOW_110); if (state.failed) return ;
        // InternalKim.g:8070:9: ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:8071:10: (lv_compresent_9_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:8071:10: (lv_compresent_9_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:8072:11: lv_compresent_9_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getCompresentSimpleConceptDeclarationParserRuleCall_1_2_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_compresent_9_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred325_InternalKim

    // $ANTLR start synpred326_InternalKim
    public final void synpred326_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_10=null;
        Token otherlv_11=null;
        EObject lv_causant_12_0 = null;


        // InternalKim.g:8095:4: ( ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:8095:4: ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:8095:4: ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:8096:5: {...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 3) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred326_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 3)");
        }
        // InternalKim.g:8096:115: ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:8097:6: ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 3);
        // InternalKim.g:8100:9: ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:8100:10: {...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred326_InternalKim", "true");
        }
        // InternalKim.g:8100:19: (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:8100:20: otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) )
        {
        otherlv_10=(Token)match(input,124,FOLLOW_112); if (state.failed) return ;
        otherlv_11=(Token)match(input,89,FOLLOW_110); if (state.failed) return ;
        // InternalKim.g:8108:9: ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:8109:10: (lv_causant_12_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:8109:10: (lv_causant_12_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:8110:11: lv_causant_12_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getCausantSimpleConceptDeclarationParserRuleCall_1_3_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_causant_12_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred326_InternalKim

    // $ANTLR start synpred327_InternalKim
    public final void synpred327_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_13=null;
        Token otherlv_14=null;
        EObject lv_adjacent_15_0 = null;


        // InternalKim.g:8133:4: ( ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:8133:4: ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:8133:4: ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:8134:5: {...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 4) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred327_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 4)");
        }
        // InternalKim.g:8134:115: ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:8135:6: ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 4);
        // InternalKim.g:8138:9: ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:8138:10: {...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred327_InternalKim", "true");
        }
        // InternalKim.g:8138:19: (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:8138:20: otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) )
        {
        otherlv_13=(Token)match(input,125,FOLLOW_25); if (state.failed) return ;
        otherlv_14=(Token)match(input,36,FOLLOW_110); if (state.failed) return ;
        // InternalKim.g:8146:9: ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:8147:10: (lv_adjacent_15_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:8147:10: (lv_adjacent_15_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:8148:11: lv_adjacent_15_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getAdjacentSimpleConceptDeclarationParserRuleCall_1_4_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_adjacent_15_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred327_InternalKim

    // $ANTLR start synpred328_InternalKim
    public final void synpred328_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_16=null;
        Token otherlv_17=null;
        EObject lv_container_18_0 = null;


        // InternalKim.g:8171:4: ( ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:8171:4: ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:8171:4: ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:8172:5: {...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 5) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred328_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 5)");
        }
        // InternalKim.g:8172:115: ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:8173:6: ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 5);
        // InternalKim.g:8176:9: ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:8176:10: {...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred328_InternalKim", "true");
        }
        // InternalKim.g:8176:19: (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:8176:20: otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) )
        {
        otherlv_16=(Token)match(input,126,FOLLOW_113); if (state.failed) return ;
        otherlv_17=(Token)match(input,48,FOLLOW_110); if (state.failed) return ;
        // InternalKim.g:8184:9: ( (lv_container_18_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:8185:10: (lv_container_18_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:8185:10: (lv_container_18_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:8186:11: lv_container_18_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getContainerSimpleConceptDeclarationParserRuleCall_1_5_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_container_18_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred328_InternalKim

    // $ANTLR start synpred329_InternalKim
    public final void synpred329_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_19=null;
        EObject lv_contained_20_0 = null;


        // InternalKim.g:8209:4: ( ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:8209:4: ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:8209:4: ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:8210:5: {...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 6) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred329_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 6)");
        }
        // InternalKim.g:8210:115: ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:8211:6: ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 6);
        // InternalKim.g:8214:9: ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:8214:10: {...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred329_InternalKim", "true");
        }
        // InternalKim.g:8214:19: (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:8214:20: otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) )
        {
        otherlv_19=(Token)match(input,127,FOLLOW_110); if (state.failed) return ;
        // InternalKim.g:8218:9: ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:8219:10: (lv_contained_20_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:8219:10: (lv_contained_20_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:8220:11: lv_contained_20_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getContainedSimpleConceptDeclarationParserRuleCall_1_6_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_contained_20_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred329_InternalKim

    // $ANTLR start synpred330_InternalKim
    public final void synpred330_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_21=null;
        EObject lv_caused_22_0 = null;


        // InternalKim.g:8243:4: ( ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:8243:4: ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:8243:4: ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:8244:5: {...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 7) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred330_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 7)");
        }
        // InternalKim.g:8244:115: ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:8245:6: ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 7);
        // InternalKim.g:8248:9: ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:8248:10: {...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred330_InternalKim", "true");
        }
        // InternalKim.g:8248:19: (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:8248:20: otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) )
        {
        otherlv_21=(Token)match(input,128,FOLLOW_110); if (state.failed) return ;
        // InternalKim.g:8252:9: ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:8253:10: (lv_caused_22_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:8253:10: (lv_caused_22_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:8254:11: lv_caused_22_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getCausedSimpleConceptDeclarationParserRuleCall_1_7_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_caused_22_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred330_InternalKim

    // $ANTLR start synpred332_InternalKim
    public final void synpred332_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_23=null;
        Token lv_distributedTemporalInherency_24_0=null;
        EObject lv_during_25_0 = null;


        // InternalKim.g:8277:4: ( ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) )
        // InternalKim.g:8277:4: ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        {
        // InternalKim.g:8277:4: ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:8278:5: {...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 8) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred332_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 8)");
        }
        // InternalKim.g:8278:115: ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:8279:6: ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 8);
        // InternalKim.g:8282:9: ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:8282:10: {...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred332_InternalKim", "true");
        }
        // InternalKim.g:8282:19: (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:8282:20: otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) )
        {
        otherlv_23=(Token)match(input,129,FOLLOW_110); if (state.failed) return ;
        // InternalKim.g:8286:9: ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:8287:10: ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) )
        {
        // InternalKim.g:8287:10: ( (lv_distributedTemporalInherency_24_0= 'each' ) )?
        int alt513=2;
        int LA513_0 = input.LA(1);

        if ( (LA513_0==26) ) {
            alt513=1;
        }
        switch (alt513) {
            case 1 :
                // InternalKim.g:8288:11: (lv_distributedTemporalInherency_24_0= 'each' )
                {
                // InternalKim.g:8288:11: (lv_distributedTemporalInherency_24_0= 'each' )
                // InternalKim.g:8289:12: lv_distributedTemporalInherency_24_0= 'each'
                {
                lv_distributedTemporalInherency_24_0=(Token)match(input,26,FOLLOW_110); if (state.failed) return ;

                }


                }
                break;

        }

        // InternalKim.g:8301:10: ( (lv_during_25_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:8302:11: (lv_during_25_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:8302:11: (lv_during_25_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:8303:12: lv_during_25_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          												newCompositeNode(grammarAccess.getConceptDeclarationAccess().getDuringSimpleConceptDeclarationParserRuleCall_1_8_1_1_0());
          											
        }
        pushFollow(FOLLOW_2);
        lv_during_25_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred332_InternalKim

    // $ANTLR start synpred334_InternalKim
    public final void synpred334_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_26=null;
        Token lv_distributedWithinInherency_27_0=null;
        EObject lv_context_28_0 = null;


        // InternalKim.g:8327:4: ( ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) )
        // InternalKim.g:8327:4: ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        {
        // InternalKim.g:8327:4: ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:8328:5: {...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 9) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred334_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 9)");
        }
        // InternalKim.g:8328:115: ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:8329:6: ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 9);
        // InternalKim.g:8332:9: ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:8332:10: {...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred334_InternalKim", "true");
        }
        // InternalKim.g:8332:19: (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:8332:20: otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) )
        {
        otherlv_26=(Token)match(input,130,FOLLOW_110); if (state.failed) return ;
        // InternalKim.g:8336:9: ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:8337:10: ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) )
        {
        // InternalKim.g:8337:10: ( (lv_distributedWithinInherency_27_0= 'each' ) )?
        int alt514=2;
        int LA514_0 = input.LA(1);

        if ( (LA514_0==26) ) {
            alt514=1;
        }
        switch (alt514) {
            case 1 :
                // InternalKim.g:8338:11: (lv_distributedWithinInherency_27_0= 'each' )
                {
                // InternalKim.g:8338:11: (lv_distributedWithinInherency_27_0= 'each' )
                // InternalKim.g:8339:12: lv_distributedWithinInherency_27_0= 'each'
                {
                lv_distributedWithinInherency_27_0=(Token)match(input,26,FOLLOW_110); if (state.failed) return ;

                }


                }
                break;

        }

        // InternalKim.g:8351:10: ( (lv_context_28_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:8352:11: (lv_context_28_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:8352:11: (lv_context_28_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:8353:12: lv_context_28_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          												newCompositeNode(grammarAccess.getConceptDeclarationAccess().getContextSimpleConceptDeclarationParserRuleCall_1_9_1_1_0());
          											
        }
        pushFollow(FOLLOW_2);
        lv_context_28_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred334_InternalKim

    // $ANTLR start synpred335_InternalKim
    public final void synpred335_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_29=null;
        Token otherlv_31=null;
        EObject lv_relationshipSource_30_0 = null;

        EObject lv_relationshipTarget_32_0 = null;


        // InternalKim.g:8377:4: ( ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:8377:4: ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:8377:4: ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:8378:5: {...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 10) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred335_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 10)");
        }
        // InternalKim.g:8378:116: ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:8379:6: ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 10);
        // InternalKim.g:8382:9: ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:8382:10: {...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred335_InternalKim", "true");
        }
        // InternalKim.g:8382:19: (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:8382:20: otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) )
        {
        otherlv_29=(Token)match(input,131,FOLLOW_110); if (state.failed) return ;
        // InternalKim.g:8386:9: ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:8387:10: (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:8387:10: (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:8388:11: lv_relationshipSource_30_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getRelationshipSourceSimpleConceptDeclarationParserRuleCall_1_10_1_0());
          										
        }
        pushFollow(FOLLOW_25);
        lv_relationshipSource_30_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_31=(Token)match(input,36,FOLLOW_110); if (state.failed) return ;
        // InternalKim.g:8409:9: ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:8410:10: (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:8410:10: (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:8411:11: lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getRelationshipTargetSimpleConceptDeclarationParserRuleCall_1_10_3_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_relationshipTarget_32_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred335_InternalKim

    // $ANTLR start synpred336_InternalKim
    public final void synpred336_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        Token lv_distributedOfInherency_3_0=null;
        Token otherlv_5=null;
        Token lv_distributedForInherency_6_0=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token otherlv_23=null;
        Token lv_distributedTemporalInherency_24_0=null;
        Token otherlv_26=null;
        Token lv_distributedWithinInherency_27_0=null;
        Token otherlv_29=null;
        Token otherlv_31=null;
        EObject lv_inherency_4_0 = null;

        EObject lv_motivation_7_0 = null;

        EObject lv_compresent_9_0 = null;

        EObject lv_causant_12_0 = null;

        EObject lv_adjacent_15_0 = null;

        EObject lv_container_18_0 = null;

        EObject lv_contained_20_0 = null;

        EObject lv_caused_22_0 = null;

        EObject lv_during_25_0 = null;

        EObject lv_context_28_0 = null;

        EObject lv_relationshipSource_30_0 = null;

        EObject lv_relationshipTarget_32_0 = null;


        // InternalKim.g:7955:4: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) ) )
        // InternalKim.g:7955:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) )
        {
        // InternalKim.g:7955:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) )
        // InternalKim.g:7956:5: ( ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* )
        {
        getUnorderedGroupHelper().enter(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());
        // InternalKim.g:7959:5: ( ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* )
        // InternalKim.g:7960:6: ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )*
        {
        // InternalKim.g:7960:6: ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )*
        loop519:
        do {
            int alt519=12;
            alt519 = dfa519.predict(input);
            switch (alt519) {
        	case 1 :
        	    // InternalKim.g:7961:4: ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        	    {
        	    // InternalKim.g:7961:4: ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        	    // InternalKim.g:7962:5: {...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 0) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred336_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 0)");
        	    }
        	    // InternalKim.g:7962:115: ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    // InternalKim.g:7963:6: ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 0);
        	    // InternalKim.g:7966:9: ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    // InternalKim.g:7966:10: {...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred336_InternalKim", "true");
        	    }
        	    // InternalKim.g:7966:19: (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) )
        	    // InternalKim.g:7966:20: otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) )
        	    {
        	    otherlv_2=(Token)match(input,123,FOLLOW_110); if (state.failed) return ;
        	    // InternalKim.g:7970:9: ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) )
        	    // InternalKim.g:7971:10: ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) )
        	    {
        	    // InternalKim.g:7971:10: ( (lv_distributedOfInherency_3_0= 'each' ) )?
        	    int alt515=2;
        	    int LA515_0 = input.LA(1);

        	    if ( (LA515_0==26) ) {
        	        alt515=1;
        	    }
        	    switch (alt515) {
        	        case 1 :
        	            // InternalKim.g:7972:11: (lv_distributedOfInherency_3_0= 'each' )
        	            {
        	            // InternalKim.g:7972:11: (lv_distributedOfInherency_3_0= 'each' )
        	            // InternalKim.g:7973:12: lv_distributedOfInherency_3_0= 'each'
        	            {
        	            lv_distributedOfInherency_3_0=(Token)match(input,26,FOLLOW_110); if (state.failed) return ;

        	            }


        	            }
        	            break;

        	    }

        	    // InternalKim.g:7985:10: ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:7986:11: (lv_inherency_4_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:7986:11: (lv_inherency_4_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:7987:12: lv_inherency_4_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptDeclarationAccess().getInherencySimpleConceptDeclarationParserRuleCall_1_0_1_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_111);
        	    lv_inherency_4_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 2 :
        	    // InternalKim.g:8011:4: ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        	    {
        	    // InternalKim.g:8011:4: ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        	    // InternalKim.g:8012:5: {...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 1) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred336_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 1)");
        	    }
        	    // InternalKim.g:8012:115: ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    // InternalKim.g:8013:6: ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 1);
        	    // InternalKim.g:8016:9: ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    // InternalKim.g:8016:10: {...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred336_InternalKim", "true");
        	    }
        	    // InternalKim.g:8016:19: (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) )
        	    // InternalKim.g:8016:20: otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) )
        	    {
        	    otherlv_5=(Token)match(input,69,FOLLOW_110); if (state.failed) return ;
        	    // InternalKim.g:8020:9: ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) )
        	    // InternalKim.g:8021:10: ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) )
        	    {
        	    // InternalKim.g:8021:10: ( (lv_distributedForInherency_6_0= 'each' ) )?
        	    int alt516=2;
        	    int LA516_0 = input.LA(1);

        	    if ( (LA516_0==26) ) {
        	        alt516=1;
        	    }
        	    switch (alt516) {
        	        case 1 :
        	            // InternalKim.g:8022:11: (lv_distributedForInherency_6_0= 'each' )
        	            {
        	            // InternalKim.g:8022:11: (lv_distributedForInherency_6_0= 'each' )
        	            // InternalKim.g:8023:12: lv_distributedForInherency_6_0= 'each'
        	            {
        	            lv_distributedForInherency_6_0=(Token)match(input,26,FOLLOW_110); if (state.failed) return ;

        	            }


        	            }
        	            break;

        	    }

        	    // InternalKim.g:8035:10: ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:8036:11: (lv_motivation_7_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:8036:11: (lv_motivation_7_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:8037:12: lv_motivation_7_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptDeclarationAccess().getMotivationSimpleConceptDeclarationParserRuleCall_1_1_1_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_111);
        	    lv_motivation_7_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 3 :
        	    // InternalKim.g:8061:4: ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    {
        	    // InternalKim.g:8061:4: ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    // InternalKim.g:8062:5: {...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 2) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred336_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 2)");
        	    }
        	    // InternalKim.g:8062:115: ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    // InternalKim.g:8063:6: ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 2);
        	    // InternalKim.g:8066:9: ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) )
        	    // InternalKim.g:8066:10: {...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred336_InternalKim", "true");
        	    }
        	    // InternalKim.g:8066:19: (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) )
        	    // InternalKim.g:8066:20: otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) )
        	    {
        	    otherlv_8=(Token)match(input,99,FOLLOW_110); if (state.failed) return ;
        	    // InternalKim.g:8070:9: ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:8071:10: (lv_compresent_9_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:8071:10: (lv_compresent_9_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:8072:11: lv_compresent_9_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getCompresentSimpleConceptDeclarationParserRuleCall_1_2_1_0());
        	      										
        	    }
        	    pushFollow(FOLLOW_111);
        	    lv_compresent_9_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 4 :
        	    // InternalKim.g:8095:4: ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    {
        	    // InternalKim.g:8095:4: ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    // InternalKim.g:8096:5: {...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 3) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred336_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 3)");
        	    }
        	    // InternalKim.g:8096:115: ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    // InternalKim.g:8097:6: ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 3);
        	    // InternalKim.g:8100:9: ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) )
        	    // InternalKim.g:8100:10: {...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred336_InternalKim", "true");
        	    }
        	    // InternalKim.g:8100:19: (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) )
        	    // InternalKim.g:8100:20: otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) )
        	    {
        	    otherlv_10=(Token)match(input,124,FOLLOW_112); if (state.failed) return ;
        	    otherlv_11=(Token)match(input,89,FOLLOW_110); if (state.failed) return ;
        	    // InternalKim.g:8108:9: ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:8109:10: (lv_causant_12_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:8109:10: (lv_causant_12_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:8110:11: lv_causant_12_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getCausantSimpleConceptDeclarationParserRuleCall_1_3_2_0());
        	      										
        	    }
        	    pushFollow(FOLLOW_111);
        	    lv_causant_12_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 5 :
        	    // InternalKim.g:8133:4: ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    {
        	    // InternalKim.g:8133:4: ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    // InternalKim.g:8134:5: {...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 4) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred336_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 4)");
        	    }
        	    // InternalKim.g:8134:115: ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    // InternalKim.g:8135:6: ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 4);
        	    // InternalKim.g:8138:9: ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) )
        	    // InternalKim.g:8138:10: {...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred336_InternalKim", "true");
        	    }
        	    // InternalKim.g:8138:19: (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) )
        	    // InternalKim.g:8138:20: otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) )
        	    {
        	    otherlv_13=(Token)match(input,125,FOLLOW_25); if (state.failed) return ;
        	    otherlv_14=(Token)match(input,36,FOLLOW_110); if (state.failed) return ;
        	    // InternalKim.g:8146:9: ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:8147:10: (lv_adjacent_15_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:8147:10: (lv_adjacent_15_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:8148:11: lv_adjacent_15_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getAdjacentSimpleConceptDeclarationParserRuleCall_1_4_2_0());
        	      										
        	    }
        	    pushFollow(FOLLOW_111);
        	    lv_adjacent_15_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 6 :
        	    // InternalKim.g:8171:4: ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    {
        	    // InternalKim.g:8171:4: ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    // InternalKim.g:8172:5: {...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 5) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred336_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 5)");
        	    }
        	    // InternalKim.g:8172:115: ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    // InternalKim.g:8173:6: ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 5);
        	    // InternalKim.g:8176:9: ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) )
        	    // InternalKim.g:8176:10: {...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred336_InternalKim", "true");
        	    }
        	    // InternalKim.g:8176:19: (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) )
        	    // InternalKim.g:8176:20: otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) )
        	    {
        	    otherlv_16=(Token)match(input,126,FOLLOW_113); if (state.failed) return ;
        	    otherlv_17=(Token)match(input,48,FOLLOW_110); if (state.failed) return ;
        	    // InternalKim.g:8184:9: ( (lv_container_18_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:8185:10: (lv_container_18_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:8185:10: (lv_container_18_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:8186:11: lv_container_18_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getContainerSimpleConceptDeclarationParserRuleCall_1_5_2_0());
        	      										
        	    }
        	    pushFollow(FOLLOW_111);
        	    lv_container_18_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 7 :
        	    // InternalKim.g:8209:4: ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    {
        	    // InternalKim.g:8209:4: ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    // InternalKim.g:8210:5: {...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 6) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred336_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 6)");
        	    }
        	    // InternalKim.g:8210:115: ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    // InternalKim.g:8211:6: ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 6);
        	    // InternalKim.g:8214:9: ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) )
        	    // InternalKim.g:8214:10: {...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred336_InternalKim", "true");
        	    }
        	    // InternalKim.g:8214:19: (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) )
        	    // InternalKim.g:8214:20: otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) )
        	    {
        	    otherlv_19=(Token)match(input,127,FOLLOW_110); if (state.failed) return ;
        	    // InternalKim.g:8218:9: ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:8219:10: (lv_contained_20_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:8219:10: (lv_contained_20_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:8220:11: lv_contained_20_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getContainedSimpleConceptDeclarationParserRuleCall_1_6_1_0());
        	      										
        	    }
        	    pushFollow(FOLLOW_111);
        	    lv_contained_20_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 8 :
        	    // InternalKim.g:8243:4: ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    {
        	    // InternalKim.g:8243:4: ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    // InternalKim.g:8244:5: {...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 7) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred336_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 7)");
        	    }
        	    // InternalKim.g:8244:115: ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    // InternalKim.g:8245:6: ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 7);
        	    // InternalKim.g:8248:9: ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) )
        	    // InternalKim.g:8248:10: {...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred336_InternalKim", "true");
        	    }
        	    // InternalKim.g:8248:19: (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) )
        	    // InternalKim.g:8248:20: otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) )
        	    {
        	    otherlv_21=(Token)match(input,128,FOLLOW_110); if (state.failed) return ;
        	    // InternalKim.g:8252:9: ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:8253:10: (lv_caused_22_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:8253:10: (lv_caused_22_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:8254:11: lv_caused_22_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getCausedSimpleConceptDeclarationParserRuleCall_1_7_1_0());
        	      										
        	    }
        	    pushFollow(FOLLOW_111);
        	    lv_caused_22_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 9 :
        	    // InternalKim.g:8277:4: ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        	    {
        	    // InternalKim.g:8277:4: ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        	    // InternalKim.g:8278:5: {...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 8) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred336_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 8)");
        	    }
        	    // InternalKim.g:8278:115: ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    // InternalKim.g:8279:6: ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 8);
        	    // InternalKim.g:8282:9: ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    // InternalKim.g:8282:10: {...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred336_InternalKim", "true");
        	    }
        	    // InternalKim.g:8282:19: (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) )
        	    // InternalKim.g:8282:20: otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) )
        	    {
        	    otherlv_23=(Token)match(input,129,FOLLOW_110); if (state.failed) return ;
        	    // InternalKim.g:8286:9: ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) )
        	    // InternalKim.g:8287:10: ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) )
        	    {
        	    // InternalKim.g:8287:10: ( (lv_distributedTemporalInherency_24_0= 'each' ) )?
        	    int alt517=2;
        	    int LA517_0 = input.LA(1);

        	    if ( (LA517_0==26) ) {
        	        alt517=1;
        	    }
        	    switch (alt517) {
        	        case 1 :
        	            // InternalKim.g:8288:11: (lv_distributedTemporalInherency_24_0= 'each' )
        	            {
        	            // InternalKim.g:8288:11: (lv_distributedTemporalInherency_24_0= 'each' )
        	            // InternalKim.g:8289:12: lv_distributedTemporalInherency_24_0= 'each'
        	            {
        	            lv_distributedTemporalInherency_24_0=(Token)match(input,26,FOLLOW_110); if (state.failed) return ;

        	            }


        	            }
        	            break;

        	    }

        	    // InternalKim.g:8301:10: ( (lv_during_25_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:8302:11: (lv_during_25_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:8302:11: (lv_during_25_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:8303:12: lv_during_25_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptDeclarationAccess().getDuringSimpleConceptDeclarationParserRuleCall_1_8_1_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_111);
        	    lv_during_25_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 10 :
        	    // InternalKim.g:8327:4: ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        	    {
        	    // InternalKim.g:8327:4: ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        	    // InternalKim.g:8328:5: {...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 9) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred336_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 9)");
        	    }
        	    // InternalKim.g:8328:115: ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    // InternalKim.g:8329:6: ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 9);
        	    // InternalKim.g:8332:9: ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    // InternalKim.g:8332:10: {...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred336_InternalKim", "true");
        	    }
        	    // InternalKim.g:8332:19: (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) )
        	    // InternalKim.g:8332:20: otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) )
        	    {
        	    otherlv_26=(Token)match(input,130,FOLLOW_110); if (state.failed) return ;
        	    // InternalKim.g:8336:9: ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) )
        	    // InternalKim.g:8337:10: ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) )
        	    {
        	    // InternalKim.g:8337:10: ( (lv_distributedWithinInherency_27_0= 'each' ) )?
        	    int alt518=2;
        	    int LA518_0 = input.LA(1);

        	    if ( (LA518_0==26) ) {
        	        alt518=1;
        	    }
        	    switch (alt518) {
        	        case 1 :
        	            // InternalKim.g:8338:11: (lv_distributedWithinInherency_27_0= 'each' )
        	            {
        	            // InternalKim.g:8338:11: (lv_distributedWithinInherency_27_0= 'each' )
        	            // InternalKim.g:8339:12: lv_distributedWithinInherency_27_0= 'each'
        	            {
        	            lv_distributedWithinInherency_27_0=(Token)match(input,26,FOLLOW_110); if (state.failed) return ;

        	            }


        	            }
        	            break;

        	    }

        	    // InternalKim.g:8351:10: ( (lv_context_28_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:8352:11: (lv_context_28_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:8352:11: (lv_context_28_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:8353:12: lv_context_28_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptDeclarationAccess().getContextSimpleConceptDeclarationParserRuleCall_1_9_1_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_111);
        	    lv_context_28_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 11 :
        	    // InternalKim.g:8377:4: ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    {
        	    // InternalKim.g:8377:4: ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    // InternalKim.g:8378:5: {...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 10) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred336_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 10)");
        	    }
        	    // InternalKim.g:8378:116: ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    // InternalKim.g:8379:6: ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 10);
        	    // InternalKim.g:8382:9: ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) )
        	    // InternalKim.g:8382:10: {...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred336_InternalKim", "true");
        	    }
        	    // InternalKim.g:8382:19: (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) )
        	    // InternalKim.g:8382:20: otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) )
        	    {
        	    otherlv_29=(Token)match(input,131,FOLLOW_110); if (state.failed) return ;
        	    // InternalKim.g:8386:9: ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:8387:10: (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:8387:10: (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:8388:11: lv_relationshipSource_30_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getRelationshipSourceSimpleConceptDeclarationParserRuleCall_1_10_1_0());
        	      										
        	    }
        	    pushFollow(FOLLOW_25);
        	    lv_relationshipSource_30_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }

        	    otherlv_31=(Token)match(input,36,FOLLOW_110); if (state.failed) return ;
        	    // InternalKim.g:8409:9: ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:8410:10: (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:8410:10: (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:8411:11: lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getRelationshipTargetSimpleConceptDeclarationParserRuleCall_1_10_3_0());
        	      										
        	    }
        	    pushFollow(FOLLOW_111);
        	    lv_relationshipTarget_32_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop519;
            }
        } while (true);


        }


        }


        }
    }
    // $ANTLR end synpred336_InternalKim

    // $ANTLR start synpred393_InternalKim
    public final void synpred393_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_48=null;
        EObject lv_other_49_0 = null;


        // InternalKim.g:10025:5: ( ( ( 'in' )=>otherlv_48= 'in' ) ( (lv_other_49_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:10025:5: ( ( 'in' )=>otherlv_48= 'in' ) ( (lv_other_49_0= ruleSimpleConceptDeclaration ) )
        {
        // InternalKim.g:10025:5: ( ( 'in' )=>otherlv_48= 'in' )
        // InternalKim.g:10026:6: ( 'in' )=>otherlv_48= 'in'
        {
        otherlv_48=(Token)match(input,48,FOLLOW_110); if (state.failed) return ;

        }

        // InternalKim.g:10032:5: ( (lv_other_49_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:10033:6: (lv_other_49_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:10033:6: (lv_other_49_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:10034:7: lv_other_49_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getConceptAccess().getOtherSimpleConceptDeclarationParserRuleCall_12_3_1_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_other_49_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred393_InternalKim

    // $ANTLR start synpred396_InternalKim
    public final void synpred396_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_53=null;
        EObject lv_other_54_0 = null;


        // InternalKim.g:10093:5: ( ( ( 'in' )=>otherlv_53= 'in' ) ( (lv_other_54_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:10093:5: ( ( 'in' )=>otherlv_53= 'in' ) ( (lv_other_54_0= ruleSimpleConceptDeclaration ) )
        {
        // InternalKim.g:10093:5: ( ( 'in' )=>otherlv_53= 'in' )
        // InternalKim.g:10094:6: ( 'in' )=>otherlv_53= 'in'
        {
        otherlv_53=(Token)match(input,48,FOLLOW_110); if (state.failed) return ;

        }

        // InternalKim.g:10100:5: ( (lv_other_54_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:10101:6: (lv_other_54_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:10101:6: (lv_other_54_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:10102:7: lv_other_54_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getConceptAccess().getOtherSimpleConceptDeclarationParserRuleCall_13_3_1_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_other_54_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred396_InternalKim

    // $ANTLR start synpred402_InternalKim
    public final void synpred402_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_64=null;
        EObject lv_other_65_0 = null;


        // InternalKim.g:10241:5: ( ( ( 'over' )=>otherlv_64= 'over' ) ( (lv_other_65_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:10241:5: ( ( 'over' )=>otherlv_64= 'over' ) ( (lv_other_65_0= ruleSimpleConceptDeclaration ) )
        {
        // InternalKim.g:10241:5: ( ( 'over' )=>otherlv_64= 'over' )
        // InternalKim.g:10242:6: ( 'over' )=>otherlv_64= 'over'
        {
        otherlv_64=(Token)match(input,55,FOLLOW_110); if (state.failed) return ;

        }

        // InternalKim.g:10248:5: ( (lv_other_65_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:10249:6: (lv_other_65_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:10249:6: (lv_other_65_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:10250:7: lv_other_65_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getConceptAccess().getOtherSimpleConceptDeclarationParserRuleCall_15_4_1_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_other_65_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred402_InternalKim

    // $ANTLR start synpred411_InternalKim
    public final void synpred411_InternalKim_fragment() throws RecognitionException {   
        Token lv_operators_1_0=null;
        EObject lv_operands_2_0 = null;


        // InternalKim.g:10540:4: ( ( (lv_operators_1_0= 'or' ) ) ( (lv_operands_2_0= ruleFactor ) ) )
        // InternalKim.g:10540:4: ( (lv_operators_1_0= 'or' ) ) ( (lv_operands_2_0= ruleFactor ) )
        {
        // InternalKim.g:10540:4: ( (lv_operators_1_0= 'or' ) )
        // InternalKim.g:10541:5: (lv_operators_1_0= 'or' )
        {
        // InternalKim.g:10541:5: (lv_operators_1_0= 'or' )
        // InternalKim.g:10542:6: lv_operators_1_0= 'or'
        {
        lv_operators_1_0=(Token)match(input,164,FOLLOW_23); if (state.failed) return ;

        }


        }

        // InternalKim.g:10554:4: ( (lv_operands_2_0= ruleFactor ) )
        // InternalKim.g:10555:5: (lv_operands_2_0= ruleFactor )
        {
        // InternalKim.g:10555:5: (lv_operands_2_0= ruleFactor )
        // InternalKim.g:10556:6: lv_operands_2_0= ruleFactor
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getTermAccess().getOperandsFactorParserRuleCall_1_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_operands_2_0=ruleFactor();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred411_InternalKim

    // $ANTLR start synpred413_InternalKim
    public final void synpred413_InternalKim_fragment() throws RecognitionException {   
        Token lv_operators_1_1=null;
        Token lv_operators_1_2=null;
        EObject lv_operands_2_0 = null;


        // InternalKim.g:10605:4: ( ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) ) ( (lv_operands_2_0= ruleTerm ) ) )
        // InternalKim.g:10605:4: ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) ) ( (lv_operands_2_0= ruleTerm ) )
        {
        // InternalKim.g:10605:4: ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) )
        // InternalKim.g:10606:5: ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) )
        {
        // InternalKim.g:10606:5: ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) )
        // InternalKim.g:10607:6: (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' )
        {
        // InternalKim.g:10607:6: (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' )
        int alt552=2;
        int LA552_0 = input.LA(1);

        if ( (LA552_0==165) ) {
            alt552=1;
        }
        else if ( (LA552_0==166) ) {
            alt552=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 552, 0, input);

            throw nvae;
        }
        switch (alt552) {
            case 1 :
                // InternalKim.g:10608:7: lv_operators_1_1= 'and'
                {
                lv_operators_1_1=(Token)match(input,165,FOLLOW_23); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:10619:7: lv_operators_1_2= 'follows'
                {
                lv_operators_1_2=(Token)match(input,166,FOLLOW_23); if (state.failed) return ;

                }
                break;

        }


        }


        }

        // InternalKim.g:10632:4: ( (lv_operands_2_0= ruleTerm ) )
        // InternalKim.g:10633:5: (lv_operands_2_0= ruleTerm )
        {
        // InternalKim.g:10633:5: (lv_operands_2_0= ruleTerm )
        // InternalKim.g:10634:6: lv_operands_2_0= ruleTerm
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getFactorAccess().getOperandsTermParserRuleCall_1_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_operands_2_0=ruleTerm();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred413_InternalKim

    // $ANTLR start synpred415_InternalKim
    public final void synpred415_InternalKim_fragment() throws RecognitionException {   
        EObject lv_main_1_0 = null;


        // InternalKim.g:10690:4: ( (lv_main_1_0= ruleConcept ) )
        // InternalKim.g:10690:4: (lv_main_1_0= ruleConcept )
        {
        // InternalKim.g:10690:4: (lv_main_1_0= ruleConcept )
        // InternalKim.g:10691:5: lv_main_1_0= ruleConcept
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getSimpleConceptDeclarationAccess().getMainConceptParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_main_1_0=ruleConcept();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred415_InternalKim

    // $ANTLR start synpred425_InternalKim
    public final void synpred425_InternalKim_fragment() throws RecognitionException {   
        Token lv_abstract_2_0=null;

        // InternalKim.g:11005:4: ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) )
        // InternalKim.g:11005:4: ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) )
        {
        // InternalKim.g:11005:4: ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) )
        // InternalKim.g:11006:5: {...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred425_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 0)");
        }
        // InternalKim.g:11006:113: ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) )
        // InternalKim.g:11007:6: ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 0);
        // InternalKim.g:11010:9: ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) )
        // InternalKim.g:11010:10: {...}? => ( (lv_abstract_2_0= 'abstract' ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred425_InternalKim", "true");
        }
        // InternalKim.g:11010:19: ( (lv_abstract_2_0= 'abstract' ) )
        // InternalKim.g:11010:20: (lv_abstract_2_0= 'abstract' )
        {
        // InternalKim.g:11010:20: (lv_abstract_2_0= 'abstract' )
        // InternalKim.g:11011:10: lv_abstract_2_0= 'abstract'
        {
        lv_abstract_2_0=(Token)match(input,172,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred425_InternalKim

    // $ANTLR start synpred426_InternalKim
    public final void synpred426_InternalKim_fragment() throws RecognitionException {   
        Token lv_deniable_3_0=null;

        // InternalKim.g:11028:4: ( ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) )
        // InternalKim.g:11028:4: ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) )
        {
        // InternalKim.g:11028:4: ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) )
        // InternalKim.g:11029:5: {...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred426_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 1)");
        }
        // InternalKim.g:11029:113: ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) )
        // InternalKim.g:11030:6: ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 1);
        // InternalKim.g:11033:9: ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) )
        // InternalKim.g:11033:10: {...}? => ( (lv_deniable_3_0= 'deniable' ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred426_InternalKim", "true");
        }
        // InternalKim.g:11033:19: ( (lv_deniable_3_0= 'deniable' ) )
        // InternalKim.g:11033:20: (lv_deniable_3_0= 'deniable' )
        {
        // InternalKim.g:11033:20: (lv_deniable_3_0= 'deniable' )
        // InternalKim.g:11034:10: lv_deniable_3_0= 'deniable'
        {
        lv_deniable_3_0=(Token)match(input,173,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred426_InternalKim

    // $ANTLR start synpred427_InternalKim
    public final void synpred427_InternalKim_fragment() throws RecognitionException {   
        Token lv_subjective_4_0=null;

        // InternalKim.g:11051:4: ( ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) )
        // InternalKim.g:11051:4: ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) )
        {
        // InternalKim.g:11051:4: ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) )
        // InternalKim.g:11052:5: {...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred427_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 2)");
        }
        // InternalKim.g:11052:113: ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) )
        // InternalKim.g:11053:6: ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 2);
        // InternalKim.g:11056:9: ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) )
        // InternalKim.g:11056:10: {...}? => ( (lv_subjective_4_0= 'subjective' ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred427_InternalKim", "true");
        }
        // InternalKim.g:11056:19: ( (lv_subjective_4_0= 'subjective' ) )
        // InternalKim.g:11056:20: (lv_subjective_4_0= 'subjective' )
        {
        // InternalKim.g:11056:20: (lv_subjective_4_0= 'subjective' )
        // InternalKim.g:11057:10: lv_subjective_4_0= 'subjective'
        {
        lv_subjective_4_0=(Token)match(input,174,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred427_InternalKim

    // $ANTLR start synpred431_InternalKim
    public final void synpred431_InternalKim_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken lv_propertySpecifiers_7_0 = null;


        // InternalKim.g:11139:11: ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )
        // InternalKim.g:11139:11: (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE )
        {
        // InternalKim.g:11139:11: (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE )
        // InternalKim.g:11140:12: lv_propertySpecifiers_7_0= rulePROPERTY_TYPE
        {
        if ( state.backtracking==0 ) {

          												newCompositeNode(grammarAccess.getConceptStatementAccess().getPropertySpecifiersPROPERTY_TYPEParserRuleCall_1_3_1_1_0());
          											
        }
        pushFollow(FOLLOW_2);
        lv_propertySpecifiers_7_0=rulePROPERTY_TYPE();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred431_InternalKim

    // $ANTLR start synpred433_InternalKim
    public final void synpred433_InternalKim_fragment() throws RecognitionException {   
        Token lv_agentSpecifier_5_1=null;
        Token lv_agentSpecifier_5_2=null;
        Token lv_agentSpecifier_5_3=null;
        Token lv_attributeSpecifier_8_0=null;
        AntlrDatatypeRuleToken lv_propertySpecifiers_6_0 = null;

        AntlrDatatypeRuleToken lv_propertySpecifiers_7_0 = null;


        // InternalKim.g:11074:4: ( ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) ) )
        // InternalKim.g:11074:4: ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) )
        {
        // InternalKim.g:11074:4: ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) )
        // InternalKim.g:11075:5: {...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred433_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3)");
        }
        // InternalKim.g:11075:113: ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) )
        // InternalKim.g:11076:6: ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3);
        // InternalKim.g:11079:9: ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) )
        // InternalKim.g:11079:10: {...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred433_InternalKim", "true");
        }
        // InternalKim.g:11079:19: ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) )
        int alt564=3;
        switch ( input.LA(1) ) {
        case 167:
        case 168:
        case 169:
            {
            alt564=1;
            }
            break;
        case 248:
        case 249:
            {
            alt564=2;
            }
            break;
        case 175:
            {
            alt564=3;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 564, 0, input);

            throw nvae;
        }

        switch (alt564) {
            case 1 :
                // InternalKim.g:11079:20: ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) )
                {
                // InternalKim.g:11079:20: ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) )
                // InternalKim.g:11080:10: ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) )
                {
                // InternalKim.g:11080:10: ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) )
                // InternalKim.g:11081:11: (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' )
                {
                // InternalKim.g:11081:11: (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' )
                int alt562=3;
                switch ( input.LA(1) ) {
                case 167:
                    {
                    alt562=1;
                    }
                    break;
                case 168:
                    {
                    alt562=2;
                    }
                    break;
                case 169:
                    {
                    alt562=3;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 562, 0, input);

                    throw nvae;
                }

                switch (alt562) {
                    case 1 :
                        // InternalKim.g:11082:12: lv_agentSpecifier_5_1= 'deliberative'
                        {
                        lv_agentSpecifier_5_1=(Token)match(input,167,FOLLOW_2); if (state.failed) return ;

                        }
                        break;
                    case 2 :
                        // InternalKim.g:11093:12: lv_agentSpecifier_5_2= 'interactive'
                        {
                        lv_agentSpecifier_5_2=(Token)match(input,168,FOLLOW_2); if (state.failed) return ;

                        }
                        break;
                    case 3 :
                        // InternalKim.g:11104:12: lv_agentSpecifier_5_3= 'reactive'
                        {
                        lv_agentSpecifier_5_3=(Token)match(input,169,FOLLOW_2); if (state.failed) return ;

                        }
                        break;

                }


                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:11118:9: ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* )
                {
                // InternalKim.g:11118:9: ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* )
                // InternalKim.g:11119:10: ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )*
                {
                // InternalKim.g:11119:10: ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) )
                // InternalKim.g:11120:11: (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE )
                {
                // InternalKim.g:11120:11: (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE )
                // InternalKim.g:11121:12: lv_propertySpecifiers_6_0= rulePROPERTY_TYPE
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getConceptStatementAccess().getPropertySpecifiersPROPERTY_TYPEParserRuleCall_1_3_1_0_0());
                  											
                }
                pushFollow(FOLLOW_211);
                lv_propertySpecifiers_6_0=rulePROPERTY_TYPE();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalKim.g:11138:10: ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )*
                loop563:
                do {
                    int alt563=2;
                    int LA563_0 = input.LA(1);

                    if ( ((LA563_0>=248 && LA563_0<=249)) ) {
                        alt563=1;
                    }


                    switch (alt563) {
                	case 1 :
                	    // InternalKim.g:11139:11: (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE )
                	    {
                	    // InternalKim.g:11139:11: (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE )
                	    // InternalKim.g:11140:12: lv_propertySpecifiers_7_0= rulePROPERTY_TYPE
                	    {
                	    if ( state.backtracking==0 ) {

                	      												newCompositeNode(grammarAccess.getConceptStatementAccess().getPropertySpecifiersPROPERTY_TYPEParserRuleCall_1_3_1_1_0());
                	      											
                	    }
                	    pushFollow(FOLLOW_211);
                	    lv_propertySpecifiers_7_0=rulePROPERTY_TYPE();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }
                	    break;

                	default :
                	    break loop563;
                    }
                } while (true);


                }


                }
                break;
            case 3 :
                // InternalKim.g:11159:9: ( (lv_attributeSpecifier_8_0= 'rescaling' ) )
                {
                // InternalKim.g:11159:9: ( (lv_attributeSpecifier_8_0= 'rescaling' ) )
                // InternalKim.g:11160:10: (lv_attributeSpecifier_8_0= 'rescaling' )
                {
                // InternalKim.g:11160:10: (lv_attributeSpecifier_8_0= 'rescaling' )
                // InternalKim.g:11161:11: lv_attributeSpecifier_8_0= 'rescaling'
                {
                lv_attributeSpecifier_8_0=(Token)match(input,175,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred433_InternalKim

    // $ANTLR start synpred442_InternalKim
    public final void synpred442_InternalKim_fragment() throws RecognitionException {   
        Token lv_docstring_11_0=null;

        // InternalKim.g:11463:4: ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) )
        // InternalKim.g:11463:4: ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) )
        {
        // InternalKim.g:11463:4: ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) )
        // InternalKim.g:11464:5: {...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred442_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 0)");
        }
        // InternalKim.g:11464:117: ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) )
        // InternalKim.g:11465:6: ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 0);
        // InternalKim.g:11468:9: ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) )
        // InternalKim.g:11468:10: {...}? => ( (lv_docstring_11_0= RULE_STRING ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred442_InternalKim", "true");
        }
        // InternalKim.g:11468:19: ( (lv_docstring_11_0= RULE_STRING ) )
        // InternalKim.g:11468:20: (lv_docstring_11_0= RULE_STRING )
        {
        // InternalKim.g:11468:20: (lv_docstring_11_0= RULE_STRING )
        // InternalKim.g:11469:10: lv_docstring_11_0= RULE_STRING
        {
        lv_docstring_11_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred442_InternalKim

    // $ANTLR start synpred449_InternalKim
    public final void synpred449_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_12=null;
        Token lv_alias_13_0=null;
        Token lv_coreConcept_14_0=null;
        Token lv_nothing_15_0=null;
        Token lv_connectors_17_1=null;
        Token lv_connectors_17_2=null;
        Token lv_connectors_17_3=null;
        EObject lv_parents_16_0 = null;

        EObject lv_parents_18_0 = null;


        // InternalKim.g:11490:4: ( ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) )
        // InternalKim.g:11490:4: ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) )
        {
        // InternalKim.g:11490:4: ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) )
        // InternalKim.g:11491:5: {...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred449_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 1)");
        }
        // InternalKim.g:11491:117: ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
        // InternalKim.g:11492:6: ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 1);
        // InternalKim.g:11495:9: ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) )
        // InternalKim.g:11495:10: {...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred449_InternalKim", "true");
        }
        // InternalKim.g:11495:19: ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) )
        // InternalKim.g:11495:20: ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) )
        {
        // InternalKim.g:11495:20: ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? )
        // InternalKim.g:11496:10: (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )?
        {
        // InternalKim.g:11496:10: (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) )
        int alt570=2;
        int LA570_0 = input.LA(1);

        if ( (LA570_0==176) ) {
            alt570=1;
        }
        else if ( (LA570_0==177) ) {
            alt570=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 570, 0, input);

            throw nvae;
        }
        switch (alt570) {
            case 1 :
                // InternalKim.g:11497:11: otherlv_12= 'is'
                {
                otherlv_12=(Token)match(input,176,FOLLOW_140); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:11502:11: ( (lv_alias_13_0= 'equals' ) )
                {
                // InternalKim.g:11502:11: ( (lv_alias_13_0= 'equals' ) )
                // InternalKim.g:11503:12: (lv_alias_13_0= 'equals' )
                {
                // InternalKim.g:11503:12: (lv_alias_13_0= 'equals' )
                // InternalKim.g:11504:13: lv_alias_13_0= 'equals'
                {
                lv_alias_13_0=(Token)match(input,177,FOLLOW_140); if (state.failed) return ;

                }


                }


                }
                break;

        }

        // InternalKim.g:11517:10: ( (lv_coreConcept_14_0= 'core' ) )?
        int alt571=2;
        int LA571_0 = input.LA(1);

        if ( (LA571_0==178) ) {
            alt571=1;
        }
        switch (alt571) {
            case 1 :
                // InternalKim.g:11518:11: (lv_coreConcept_14_0= 'core' )
                {
                // InternalKim.g:11518:11: (lv_coreConcept_14_0= 'core' )
                // InternalKim.g:11519:12: lv_coreConcept_14_0= 'core'
                {
                lv_coreConcept_14_0=(Token)match(input,178,FOLLOW_141); if (state.failed) return ;

                }


                }
                break;

        }


        }

        // InternalKim.g:11532:9: ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) )
        int alt574=2;
        int LA574_0 = input.LA(1);

        if ( (LA574_0==179) ) {
            alt574=1;
        }
        else if ( ((LA574_0>=RULE_LOWERCASE_ID && LA574_0<=RULE_UPPERCASE_ID)||LA574_0==RULE_CAMELCASE_ID||LA574_0==RULE_LOWERCASE_DASHID||LA574_0==RULE_UPPERCASE_PATH||LA574_0==38||(LA574_0>=132 && LA574_0<=133)||(LA574_0>=141 && LA574_0<=142)||(LA574_0>=144 && LA574_0<=149)||(LA574_0>=151 && LA574_0<=163)) ) {
            alt574=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 574, 0, input);

            throw nvae;
        }
        switch (alt574) {
            case 1 :
                // InternalKim.g:11533:10: ( (lv_nothing_15_0= 'nothing' ) )
                {
                // InternalKim.g:11533:10: ( (lv_nothing_15_0= 'nothing' ) )
                // InternalKim.g:11534:11: (lv_nothing_15_0= 'nothing' )
                {
                // InternalKim.g:11534:11: (lv_nothing_15_0= 'nothing' )
                // InternalKim.g:11535:12: lv_nothing_15_0= 'nothing'
                {
                lv_nothing_15_0=(Token)match(input,179,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:11548:10: ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* )
                {
                // InternalKim.g:11548:10: ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* )
                // InternalKim.g:11549:11: ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )*
                {
                // InternalKim.g:11549:11: ( (lv_parents_16_0= ruleConceptDeclaration ) )
                // InternalKim.g:11550:12: (lv_parents_16_0= ruleConceptDeclaration )
                {
                // InternalKim.g:11550:12: (lv_parents_16_0= ruleConceptDeclaration )
                // InternalKim.g:11551:13: lv_parents_16_0= ruleConceptDeclaration
                {
                if ( state.backtracking==0 ) {

                  													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getParentsConceptDeclarationParserRuleCall_3_1_1_1_0_0());
                  												
                }
                pushFollow(FOLLOW_212);
                lv_parents_16_0=ruleConceptDeclaration();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalKim.g:11568:11: ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )*
                loop573:
                do {
                    int alt573=2;
                    int LA573_0 = input.LA(1);

                    if ( (LA573_0==27||(LA573_0>=164 && LA573_0<=165)) ) {
                        alt573=1;
                    }


                    switch (alt573) {
                	case 1 :
                	    // InternalKim.g:11569:12: ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) )
                	    {
                	    // InternalKim.g:11569:12: ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) )
                	    // InternalKim.g:11570:13: ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) )
                	    {
                	    // InternalKim.g:11570:13: ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) )
                	    // InternalKim.g:11571:14: (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' )
                	    {
                	    // InternalKim.g:11571:14: (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' )
                	    int alt572=3;
                	    switch ( input.LA(1) ) {
                	    case 27:
                	        {
                	        alt572=1;
                	        }
                	        break;
                	    case 164:
                	        {
                	        alt572=2;
                	        }
                	        break;
                	    case 165:
                	        {
                	        alt572=3;
                	        }
                	        break;
                	    default:
                	        if (state.backtracking>0) {state.failed=true; return ;}
                	        NoViableAltException nvae =
                	            new NoViableAltException("", 572, 0, input);

                	        throw nvae;
                	    }

                	    switch (alt572) {
                	        case 1 :
                	            // InternalKim.g:11572:15: lv_connectors_17_1= ','
                	            {
                	            lv_connectors_17_1=(Token)match(input,27,FOLLOW_23); if (state.failed) return ;

                	            }
                	            break;
                	        case 2 :
                	            // InternalKim.g:11583:15: lv_connectors_17_2= 'or'
                	            {
                	            lv_connectors_17_2=(Token)match(input,164,FOLLOW_23); if (state.failed) return ;

                	            }
                	            break;
                	        case 3 :
                	            // InternalKim.g:11594:15: lv_connectors_17_3= 'and'
                	            {
                	            lv_connectors_17_3=(Token)match(input,165,FOLLOW_23); if (state.failed) return ;

                	            }
                	            break;

                	    }


                	    }


                	    }

                	    // InternalKim.g:11607:12: ( (lv_parents_18_0= ruleConceptDeclaration ) )
                	    // InternalKim.g:11608:13: (lv_parents_18_0= ruleConceptDeclaration )
                	    {
                	    // InternalKim.g:11608:13: (lv_parents_18_0= ruleConceptDeclaration )
                	    // InternalKim.g:11609:14: lv_parents_18_0= ruleConceptDeclaration
                	    {
                	    if ( state.backtracking==0 ) {

                	      														newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getParentsConceptDeclarationParserRuleCall_3_1_1_1_1_1_0());
                	      													
                	    }
                	    pushFollow(FOLLOW_212);
                	    lv_parents_18_0=ruleConceptDeclaration();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop573;
                    }
                } while (true);


                }


                }
                break;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred449_InternalKim

    // $ANTLR start synpred453_InternalKim
    public final void synpred453_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token lv_specific_23_0=null;
        Token otherlv_25=null;
        EObject lv_contextualizedTraits_20_0 = null;

        EObject lv_contextualizedTraits_22_0 = null;

        EObject lv_contextualizesTraits_24_0 = null;

        EObject lv_contextualizesTraits_26_0 = null;


        // InternalKim.g:11635:4: ( ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) )
        // InternalKim.g:11635:4: ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
        {
        // InternalKim.g:11635:4: ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
        // InternalKim.g:11636:5: {...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred453_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 2)");
        }
        // InternalKim.g:11636:117: ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) )
        // InternalKim.g:11637:6: ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 2);
        // InternalKim.g:11640:9: ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) )
        // InternalKim.g:11640:10: {...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred453_InternalKim", "true");
        }
        // InternalKim.g:11640:19: ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) )
        int alt578=2;
        int LA578_0 = input.LA(1);

        if ( (LA578_0==180) ) {
            alt578=1;
        }
        else if ( (LA578_0==181) ) {
            alt578=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 578, 0, input);

            throw nvae;
        }
        switch (alt578) {
            case 1 :
                // InternalKim.g:11640:20: (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* )
                {
                // InternalKim.g:11640:20: (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* )
                // InternalKim.g:11641:10: otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )*
                {
                otherlv_19=(Token)match(input,180,FOLLOW_95); if (state.failed) return ;
                // InternalKim.g:11645:10: ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) )
                // InternalKim.g:11646:11: (lv_contextualizedTraits_20_0= ruleObservableSemantics )
                {
                // InternalKim.g:11646:11: (lv_contextualizedTraits_20_0= ruleObservableSemantics )
                // InternalKim.g:11647:12: lv_contextualizedTraits_20_0= ruleObservableSemantics
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getContextualizedTraitsObservableSemanticsParserRuleCall_3_2_0_1_0());
                  											
                }
                pushFollow(FOLLOW_34);
                lv_contextualizedTraits_20_0=ruleObservableSemantics();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalKim.g:11664:10: (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )*
                loop576:
                do {
                    int alt576=2;
                    int LA576_0 = input.LA(1);

                    if ( (LA576_0==27) ) {
                        alt576=1;
                    }


                    switch (alt576) {
                	case 1 :
                	    // InternalKim.g:11665:11: otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) )
                	    {
                	    otherlv_21=(Token)match(input,27,FOLLOW_95); if (state.failed) return ;
                	    // InternalKim.g:11669:11: ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) )
                	    // InternalKim.g:11670:12: (lv_contextualizedTraits_22_0= ruleObservableSemantics )
                	    {
                	    // InternalKim.g:11670:12: (lv_contextualizedTraits_22_0= ruleObservableSemantics )
                	    // InternalKim.g:11671:13: lv_contextualizedTraits_22_0= ruleObservableSemantics
                	    {
                	    if ( state.backtracking==0 ) {

                	      													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getContextualizedTraitsObservableSemanticsParserRuleCall_3_2_0_2_1_0());
                	      												
                	    }
                	    pushFollow(FOLLOW_34);
                	    lv_contextualizedTraits_22_0=ruleObservableSemantics();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop576;
                    }
                } while (true);


                }


                }
                break;
            case 2 :
                // InternalKim.g:11691:9: ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* )
                {
                // InternalKim.g:11691:9: ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* )
                // InternalKim.g:11692:10: ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )*
                {
                // InternalKim.g:11692:10: ( (lv_specific_23_0= 'exposing' ) )
                // InternalKim.g:11693:11: (lv_specific_23_0= 'exposing' )
                {
                // InternalKim.g:11693:11: (lv_specific_23_0= 'exposing' )
                // InternalKim.g:11694:12: lv_specific_23_0= 'exposing'
                {
                lv_specific_23_0=(Token)match(input,181,FOLLOW_23); if (state.failed) return ;

                }


                }

                // InternalKim.g:11706:10: ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) )
                // InternalKim.g:11707:11: (lv_contextualizesTraits_24_0= ruleConceptDeclaration )
                {
                // InternalKim.g:11707:11: (lv_contextualizesTraits_24_0= ruleConceptDeclaration )
                // InternalKim.g:11708:12: lv_contextualizesTraits_24_0= ruleConceptDeclaration
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getContextualizesTraitsConceptDeclarationParserRuleCall_3_2_1_1_0());
                  											
                }
                pushFollow(FOLLOW_34);
                lv_contextualizesTraits_24_0=ruleConceptDeclaration();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalKim.g:11725:10: (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )*
                loop577:
                do {
                    int alt577=2;
                    int LA577_0 = input.LA(1);

                    if ( (LA577_0==27) ) {
                        alt577=1;
                    }


                    switch (alt577) {
                	case 1 :
                	    // InternalKim.g:11726:11: otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) )
                	    {
                	    otherlv_25=(Token)match(input,27,FOLLOW_23); if (state.failed) return ;
                	    // InternalKim.g:11730:11: ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) )
                	    // InternalKim.g:11731:12: (lv_contextualizesTraits_26_0= ruleConceptDeclaration )
                	    {
                	    // InternalKim.g:11731:12: (lv_contextualizesTraits_26_0= ruleConceptDeclaration )
                	    // InternalKim.g:11732:13: lv_contextualizesTraits_26_0= ruleConceptDeclaration
                	    {
                	    if ( state.backtracking==0 ) {

                	      													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getContextualizesTraitsConceptDeclarationParserRuleCall_3_2_1_2_1_0());
                	      												
                	    }
                	    pushFollow(FOLLOW_34);
                	    lv_contextualizesTraits_26_0=ruleConceptDeclaration();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop577;
                    }
                } while (true);


                }


                }
                break;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred453_InternalKim

    // $ANTLR start synpred456_InternalKim
    public final void synpred456_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_27=null;
        Token otherlv_28=null;
        Token lv_definedAuthority_29_1=null;
        Token lv_definedAuthority_29_2=null;
        EObject lv_upperConcept_30_0 = null;


        // InternalKim.g:11757:4: ( ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( ( (lv_definedAuthority_29_1= RULE_UPPERCASE_ID | lv_definedAuthority_29_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) )
        // InternalKim.g:11757:4: ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( ( (lv_definedAuthority_29_1= RULE_UPPERCASE_ID | lv_definedAuthority_29_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) )
        {
        // InternalKim.g:11757:4: ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( ( (lv_definedAuthority_29_1= RULE_UPPERCASE_ID | lv_definedAuthority_29_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) )
        // InternalKim.g:11758:5: {...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( ( (lv_definedAuthority_29_1= RULE_UPPERCASE_ID | lv_definedAuthority_29_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 3) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred456_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 3)");
        }
        // InternalKim.g:11758:117: ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( ( (lv_definedAuthority_29_1= RULE_UPPERCASE_ID | lv_definedAuthority_29_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) )
        // InternalKim.g:11759:6: ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( ( (lv_definedAuthority_29_1= RULE_UPPERCASE_ID | lv_definedAuthority_29_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 3);
        // InternalKim.g:11762:9: ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( ( (lv_definedAuthority_29_1= RULE_UPPERCASE_ID | lv_definedAuthority_29_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) )
        // InternalKim.g:11762:10: {...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( ( (lv_definedAuthority_29_1= RULE_UPPERCASE_ID | lv_definedAuthority_29_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred456_InternalKim", "true");
        }
        // InternalKim.g:11762:19: (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( ( (lv_definedAuthority_29_1= RULE_UPPERCASE_ID | lv_definedAuthority_29_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) )
        // InternalKim.g:11762:20: otherlv_27= 'defines' ( (otherlv_28= 'authority' ( ( (lv_definedAuthority_29_1= RULE_UPPERCASE_ID | lv_definedAuthority_29_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) )
        {
        otherlv_27=(Token)match(input,182,FOLLOW_144); if (state.failed) return ;
        // InternalKim.g:11766:9: ( (otherlv_28= 'authority' ( ( (lv_definedAuthority_29_1= RULE_UPPERCASE_ID | lv_definedAuthority_29_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) )
        int alt581=2;
        int LA581_0 = input.LA(1);

        if ( (LA581_0==183) ) {
            alt581=1;
        }
        else if ( ((LA581_0>=RULE_LOWERCASE_ID && LA581_0<=RULE_UPPERCASE_ID)||LA581_0==RULE_CAMELCASE_ID||LA581_0==RULE_LOWERCASE_DASHID||LA581_0==RULE_UPPERCASE_PATH||LA581_0==38||(LA581_0>=132 && LA581_0<=133)||(LA581_0>=141 && LA581_0<=142)||(LA581_0>=144 && LA581_0<=149)||(LA581_0>=151 && LA581_0<=163)) ) {
            alt581=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 581, 0, input);

            throw nvae;
        }
        switch (alt581) {
            case 1 :
                // InternalKim.g:11767:10: (otherlv_28= 'authority' ( ( (lv_definedAuthority_29_1= RULE_UPPERCASE_ID | lv_definedAuthority_29_2= RULE_UPPERCASE_PATH ) ) ) )
                {
                // InternalKim.g:11767:10: (otherlv_28= 'authority' ( ( (lv_definedAuthority_29_1= RULE_UPPERCASE_ID | lv_definedAuthority_29_2= RULE_UPPERCASE_PATH ) ) ) )
                // InternalKim.g:11768:11: otherlv_28= 'authority' ( ( (lv_definedAuthority_29_1= RULE_UPPERCASE_ID | lv_definedAuthority_29_2= RULE_UPPERCASE_PATH ) ) )
                {
                otherlv_28=(Token)match(input,183,FOLLOW_120); if (state.failed) return ;
                // InternalKim.g:11772:11: ( ( (lv_definedAuthority_29_1= RULE_UPPERCASE_ID | lv_definedAuthority_29_2= RULE_UPPERCASE_PATH ) ) )
                // InternalKim.g:11773:12: ( (lv_definedAuthority_29_1= RULE_UPPERCASE_ID | lv_definedAuthority_29_2= RULE_UPPERCASE_PATH ) )
                {
                // InternalKim.g:11773:12: ( (lv_definedAuthority_29_1= RULE_UPPERCASE_ID | lv_definedAuthority_29_2= RULE_UPPERCASE_PATH ) )
                // InternalKim.g:11774:13: (lv_definedAuthority_29_1= RULE_UPPERCASE_ID | lv_definedAuthority_29_2= RULE_UPPERCASE_PATH )
                {
                // InternalKim.g:11774:13: (lv_definedAuthority_29_1= RULE_UPPERCASE_ID | lv_definedAuthority_29_2= RULE_UPPERCASE_PATH )
                int alt580=2;
                int LA580_0 = input.LA(1);

                if ( (LA580_0==RULE_UPPERCASE_ID) ) {
                    alt580=1;
                }
                else if ( (LA580_0==RULE_UPPERCASE_PATH) ) {
                    alt580=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 580, 0, input);

                    throw nvae;
                }
                switch (alt580) {
                    case 1 :
                        // InternalKim.g:11775:14: lv_definedAuthority_29_1= RULE_UPPERCASE_ID
                        {
                        lv_definedAuthority_29_1=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return ;

                        }
                        break;
                    case 2 :
                        // InternalKim.g:11790:14: lv_definedAuthority_29_2= RULE_UPPERCASE_PATH
                        {
                        lv_definedAuthority_29_2=(Token)match(input,RULE_UPPERCASE_PATH,FOLLOW_2); if (state.failed) return ;

                        }
                        break;

                }


                }


                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:11809:10: ( (lv_upperConcept_30_0= ruleConcept ) )
                {
                // InternalKim.g:11809:10: ( (lv_upperConcept_30_0= ruleConcept ) )
                // InternalKim.g:11810:11: (lv_upperConcept_30_0= ruleConcept )
                {
                // InternalKim.g:11810:11: (lv_upperConcept_30_0= ruleConcept )
                // InternalKim.g:11811:12: lv_upperConcept_30_0= ruleConcept
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getUpperConceptConceptParserRuleCall_3_3_1_1_0());
                  											
                }
                pushFollow(FOLLOW_2);
                lv_upperConcept_30_0=ruleConcept();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred456_InternalKim

    // $ANTLR start synpred458_InternalKim
    public final void synpred458_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_31=null;
        Token otherlv_33=null;
        EObject lv_requirements_32_0 = null;

        EObject lv_requirements_34_0 = null;


        // InternalKim.g:11835:4: ( ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) )
        // InternalKim.g:11835:4: ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) )
        {
        // InternalKim.g:11835:4: ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) )
        // InternalKim.g:11836:5: {...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 4) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred458_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 4)");
        }
        // InternalKim.g:11836:117: ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) )
        // InternalKim.g:11837:6: ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 4);
        // InternalKim.g:11840:9: ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) )
        // InternalKim.g:11840:10: {...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred458_InternalKim", "true");
        }
        // InternalKim.g:11840:19: (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* )
        // InternalKim.g:11840:20: otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )*
        {
        otherlv_31=(Token)match(input,184,FOLLOW_145); if (state.failed) return ;
        // InternalKim.g:11844:9: ( (lv_requirements_32_0= ruleIdentityRequirement ) )
        // InternalKim.g:11845:10: (lv_requirements_32_0= ruleIdentityRequirement )
        {
        // InternalKim.g:11845:10: (lv_requirements_32_0= ruleIdentityRequirement )
        // InternalKim.g:11846:11: lv_requirements_32_0= ruleIdentityRequirement
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRequirementsIdentityRequirementParserRuleCall_3_4_1_0());
          										
        }
        pushFollow(FOLLOW_34);
        lv_requirements_32_0=ruleIdentityRequirement();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:11863:9: (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )*
        loop582:
        do {
            int alt582=2;
            int LA582_0 = input.LA(1);

            if ( (LA582_0==27) ) {
                alt582=1;
            }


            switch (alt582) {
        	case 1 :
        	    // InternalKim.g:11864:10: otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) )
        	    {
        	    otherlv_33=(Token)match(input,27,FOLLOW_145); if (state.failed) return ;
        	    // InternalKim.g:11868:10: ( (lv_requirements_34_0= ruleIdentityRequirement ) )
        	    // InternalKim.g:11869:11: (lv_requirements_34_0= ruleIdentityRequirement )
        	    {
        	    // InternalKim.g:11869:11: (lv_requirements_34_0= ruleIdentityRequirement )
        	    // InternalKim.g:11870:12: lv_requirements_34_0= ruleIdentityRequirement
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRequirementsIdentityRequirementParserRuleCall_3_4_2_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_34);
        	    lv_requirements_34_0=ruleIdentityRequirement();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop582;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred458_InternalKim

    // $ANTLR start synpred459_InternalKim
    public final void synpred459_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_35=null;
        EObject lv_describedQuality_36_0 = null;


        // InternalKim.g:11894:4: ( ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:11894:4: ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:11894:4: ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:11895:5: {...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 5) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred459_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 5)");
        }
        // InternalKim.g:11895:117: ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) )
        // InternalKim.g:11896:6: ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 5);
        // InternalKim.g:11899:9: ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) )
        // InternalKim.g:11899:10: {...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred459_InternalKim", "true");
        }
        // InternalKim.g:11899:19: (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:11899:20: otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) )
        {
        otherlv_35=(Token)match(input,185,FOLLOW_23); if (state.failed) return ;
        // InternalKim.g:11903:9: ( (lv_describedQuality_36_0= ruleConceptDeclaration ) )
        // InternalKim.g:11904:10: (lv_describedQuality_36_0= ruleConceptDeclaration )
        {
        // InternalKim.g:11904:10: (lv_describedQuality_36_0= ruleConceptDeclaration )
        // InternalKim.g:11905:11: lv_describedQuality_36_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDescribedQualityConceptDeclarationParserRuleCall_3_5_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_describedQuality_36_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred459_InternalKim

    // $ANTLR start synpred460_InternalKim
    public final void synpred460_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_37=null;
        Token otherlv_38=null;
        EObject lv_describedProportionality_39_0 = null;


        // InternalKim.g:11928:4: ( ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:11928:4: ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:11928:4: ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:11929:5: {...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 6) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred460_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 6)");
        }
        // InternalKim.g:11929:117: ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) )
        // InternalKim.g:11930:6: ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 6);
        // InternalKim.g:11933:9: ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) )
        // InternalKim.g:11933:10: {...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred460_InternalKim", "true");
        }
        // InternalKim.g:11933:19: (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:11933:20: otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) )
        {
        otherlv_37=(Token)match(input,186,FOLLOW_75); if (state.failed) return ;
        otherlv_38=(Token)match(input,99,FOLLOW_23); if (state.failed) return ;
        // InternalKim.g:11941:9: ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) )
        // InternalKim.g:11942:10: (lv_describedProportionality_39_0= ruleConceptDeclaration )
        {
        // InternalKim.g:11942:10: (lv_describedProportionality_39_0= ruleConceptDeclaration )
        // InternalKim.g:11943:11: lv_describedProportionality_39_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDescribedProportionalityConceptDeclarationParserRuleCall_3_6_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_describedProportionality_39_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred460_InternalKim

    // $ANTLR start synpred461_InternalKim
    public final void synpred461_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_40=null;
        Token otherlv_41=null;
        EObject lv_describedInverseProportionalityQuality_42_0 = null;


        // InternalKim.g:11966:4: ( ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:11966:4: ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:11966:4: ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:11967:5: {...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 7) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred461_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 7)");
        }
        // InternalKim.g:11967:117: ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) )
        // InternalKim.g:11968:6: ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 7);
        // InternalKim.g:11971:9: ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) )
        // InternalKim.g:11971:10: {...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred461_InternalKim", "true");
        }
        // InternalKim.g:11971:19: (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:11971:20: otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) )
        {
        otherlv_40=(Token)match(input,187,FOLLOW_75); if (state.failed) return ;
        otherlv_41=(Token)match(input,99,FOLLOW_23); if (state.failed) return ;
        // InternalKim.g:11979:9: ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) )
        // InternalKim.g:11980:10: (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration )
        {
        // InternalKim.g:11980:10: (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration )
        // InternalKim.g:11981:11: lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDescribedInverseProportionalityQualityConceptDeclarationParserRuleCall_3_7_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_describedInverseProportionalityQuality_42_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred461_InternalKim

    // $ANTLR start synpred462_InternalKim
    public final void synpred462_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_43=null;
        EObject lv_describedNonzeroQuality_44_0 = null;


        // InternalKim.g:12004:4: ( ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:12004:4: ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:12004:4: ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:12005:5: {...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 8) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred462_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 8)");
        }
        // InternalKim.g:12005:117: ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) )
        // InternalKim.g:12006:6: ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 8);
        // InternalKim.g:12009:9: ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) )
        // InternalKim.g:12009:10: {...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred462_InternalKim", "true");
        }
        // InternalKim.g:12009:19: (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:12009:20: otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) )
        {
        otherlv_43=(Token)match(input,188,FOLLOW_23); if (state.failed) return ;
        // InternalKim.g:12013:9: ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) )
        // InternalKim.g:12014:10: (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration )
        {
        // InternalKim.g:12014:10: (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration )
        // InternalKim.g:12015:11: lv_describedNonzeroQuality_44_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDescribedNonzeroQualityConceptDeclarationParserRuleCall_3_8_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_describedNonzeroQuality_44_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred462_InternalKim

    // $ANTLR start synpred463_InternalKim
    public final void synpred463_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_45=null;
        EObject lv_classifiesQuality_46_0 = null;


        // InternalKim.g:12038:4: ( ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:12038:4: ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:12038:4: ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:12039:5: {...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 9) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred463_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 9)");
        }
        // InternalKim.g:12039:117: ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) )
        // InternalKim.g:12040:6: ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 9);
        // InternalKim.g:12043:9: ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) )
        // InternalKim.g:12043:10: {...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred463_InternalKim", "true");
        }
        // InternalKim.g:12043:19: (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:12043:20: otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) )
        {
        otherlv_45=(Token)match(input,189,FOLLOW_23); if (state.failed) return ;
        // InternalKim.g:12047:9: ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) )
        // InternalKim.g:12048:10: (lv_classifiesQuality_46_0= ruleConceptDeclaration )
        {
        // InternalKim.g:12048:10: (lv_classifiesQuality_46_0= ruleConceptDeclaration )
        // InternalKim.g:12049:11: lv_classifiesQuality_46_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getClassifiesQualityConceptDeclarationParserRuleCall_3_9_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_classifiesQuality_46_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred463_InternalKim

    // $ANTLR start synpred464_InternalKim
    public final void synpred464_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_47=null;
        EObject lv_discretizesQuality_48_0 = null;


        // InternalKim.g:12072:4: ( ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:12072:4: ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:12072:4: ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:12073:5: {...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 10) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred464_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 10)");
        }
        // InternalKim.g:12073:118: ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) )
        // InternalKim.g:12074:6: ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 10);
        // InternalKim.g:12077:9: ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) )
        // InternalKim.g:12077:10: {...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred464_InternalKim", "true");
        }
        // InternalKim.g:12077:19: (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:12077:20: otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) )
        {
        otherlv_47=(Token)match(input,190,FOLLOW_23); if (state.failed) return ;
        // InternalKim.g:12081:9: ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) )
        // InternalKim.g:12082:10: (lv_discretizesQuality_48_0= ruleConceptDeclaration )
        {
        // InternalKim.g:12082:10: (lv_discretizesQuality_48_0= ruleConceptDeclaration )
        // InternalKim.g:12083:11: lv_discretizesQuality_48_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDiscretizesQualityConceptDeclarationParserRuleCall_3_10_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_discretizesQuality_48_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred464_InternalKim

    // $ANTLR start synpred466_InternalKim
    public final void synpred466_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_49=null;
        Token otherlv_51=null;
        EObject lv_actuallyInheritedTraits_50_0 = null;

        EObject lv_actuallyInheritedTraits_52_0 = null;


        // InternalKim.g:12106:4: ( ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
        // InternalKim.g:12106:4: ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) )
        {
        // InternalKim.g:12106:4: ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) )
        // InternalKim.g:12107:5: {...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 11) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred466_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 11)");
        }
        // InternalKim.g:12107:118: ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) )
        // InternalKim.g:12108:6: ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 11);
        // InternalKim.g:12111:9: ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) )
        // InternalKim.g:12111:10: {...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred466_InternalKim", "true");
        }
        // InternalKim.g:12111:19: (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* )
        // InternalKim.g:12111:20: otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )*
        {
        otherlv_49=(Token)match(input,191,FOLLOW_23); if (state.failed) return ;
        // InternalKim.g:12115:9: ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) )
        // InternalKim.g:12116:10: (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration )
        {
        // InternalKim.g:12116:10: (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration )
        // InternalKim.g:12117:11: lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getActuallyInheritedTraitsConceptDeclarationParserRuleCall_3_11_1_0());
          										
        }
        pushFollow(FOLLOW_34);
        lv_actuallyInheritedTraits_50_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:12134:9: (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )*
        loop583:
        do {
            int alt583=2;
            int LA583_0 = input.LA(1);

            if ( (LA583_0==27) ) {
                alt583=1;
            }


            switch (alt583) {
        	case 1 :
        	    // InternalKim.g:12135:10: otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) )
        	    {
        	    otherlv_51=(Token)match(input,27,FOLLOW_23); if (state.failed) return ;
        	    // InternalKim.g:12139:10: ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) )
        	    // InternalKim.g:12140:11: (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration )
        	    {
        	    // InternalKim.g:12140:11: (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration )
        	    // InternalKim.g:12141:12: lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getActuallyInheritedTraitsConceptDeclarationParserRuleCall_3_11_2_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_34);
        	    lv_actuallyInheritedTraits_52_0=ruleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop583;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred466_InternalKim

    // $ANTLR start synpred471_InternalKim
    public final void synpred471_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_53=null;
        Token otherlv_54=null;
        Token otherlv_56=null;
        Token otherlv_58=null;
        Token otherlv_60=null;
        Token otherlv_62=null;
        Token otherlv_64=null;
        EObject lv_roles_55_0 = null;

        EObject lv_roles_57_0 = null;

        EObject lv_targetObservables_59_0 = null;

        EObject lv_targetObservables_61_0 = null;

        EObject lv_restrictedObservables_63_0 = null;

        EObject lv_restrictedObservables_65_0 = null;


        // InternalKim.g:12165:4: ( ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) )
        // InternalKim.g:12165:4: ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
        {
        // InternalKim.g:12165:4: ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
        // InternalKim.g:12166:5: {...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 12) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred471_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 12)");
        }
        // InternalKim.g:12166:118: ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) )
        // InternalKim.g:12167:6: ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 12);
        // InternalKim.g:12170:9: ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) )
        // InternalKim.g:12170:10: {...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred471_InternalKim", "true");
        }
        // InternalKim.g:12170:19: (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) )
        // InternalKim.g:12170:20: otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* )
        {
        otherlv_53=(Token)match(input,192,FOLLOW_146); if (state.failed) return ;
        otherlv_54=(Token)match(input,193,FOLLOW_23); if (state.failed) return ;
        // InternalKim.g:12178:9: ( (lv_roles_55_0= ruleConceptDeclaration ) )
        // InternalKim.g:12179:10: (lv_roles_55_0= ruleConceptDeclaration )
        {
        // InternalKim.g:12179:10: (lv_roles_55_0= ruleConceptDeclaration )
        // InternalKim.g:12180:11: lv_roles_55_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRolesConceptDeclarationParserRuleCall_3_12_2_0());
          										
        }
        pushFollow(FOLLOW_147);
        lv_roles_55_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:12197:9: (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )*
        loop585:
        do {
            int alt585=2;
            int LA585_0 = input.LA(1);

            if ( (LA585_0==27) ) {
                alt585=1;
            }


            switch (alt585) {
        	case 1 :
        	    // InternalKim.g:12198:10: otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) )
        	    {
        	    otherlv_56=(Token)match(input,27,FOLLOW_23); if (state.failed) return ;
        	    // InternalKim.g:12202:10: ( (lv_roles_57_0= ruleConceptDeclaration ) )
        	    // InternalKim.g:12203:11: (lv_roles_57_0= ruleConceptDeclaration )
        	    {
        	    // InternalKim.g:12203:11: (lv_roles_57_0= ruleConceptDeclaration )
        	    // InternalKim.g:12204:12: lv_roles_57_0= ruleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRolesConceptDeclarationParserRuleCall_3_12_3_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_147);
        	    lv_roles_57_0=ruleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop585;
            }
        } while (true);

        // InternalKim.g:12222:9: (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )?
        int alt587=2;
        int LA587_0 = input.LA(1);

        if ( (LA587_0==194) ) {
            alt587=1;
        }
        switch (alt587) {
            case 1 :
                // InternalKim.g:12223:10: otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )*
                {
                otherlv_58=(Token)match(input,194,FOLLOW_23); if (state.failed) return ;
                // InternalKim.g:12227:10: ( (lv_targetObservables_59_0= ruleConceptDeclaration ) )
                // InternalKim.g:12228:11: (lv_targetObservables_59_0= ruleConceptDeclaration )
                {
                // InternalKim.g:12228:11: (lv_targetObservables_59_0= ruleConceptDeclaration )
                // InternalKim.g:12229:12: lv_targetObservables_59_0= ruleConceptDeclaration
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getTargetObservablesConceptDeclarationParserRuleCall_3_12_4_1_0());
                  											
                }
                pushFollow(FOLLOW_148);
                lv_targetObservables_59_0=ruleConceptDeclaration();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalKim.g:12246:10: (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )*
                loop586:
                do {
                    int alt586=2;
                    int LA586_0 = input.LA(1);

                    if ( (LA586_0==27) ) {
                        alt586=1;
                    }


                    switch (alt586) {
                	case 1 :
                	    // InternalKim.g:12247:11: otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) )
                	    {
                	    otherlv_60=(Token)match(input,27,FOLLOW_23); if (state.failed) return ;
                	    // InternalKim.g:12251:11: ( (lv_targetObservables_61_0= ruleConceptDeclaration ) )
                	    // InternalKim.g:12252:12: (lv_targetObservables_61_0= ruleConceptDeclaration )
                	    {
                	    // InternalKim.g:12252:12: (lv_targetObservables_61_0= ruleConceptDeclaration )
                	    // InternalKim.g:12253:13: lv_targetObservables_61_0= ruleConceptDeclaration
                	    {
                	    if ( state.backtracking==0 ) {

                	      													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getTargetObservablesConceptDeclarationParserRuleCall_3_12_4_2_1_0());
                	      												
                	    }
                	    pushFollow(FOLLOW_148);
                	    lv_targetObservables_61_0=ruleConceptDeclaration();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop586;
                    }
                } while (true);


                }
                break;

        }

        // InternalKim.g:12272:9: (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* )
        // InternalKim.g:12273:10: otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )*
        {
        otherlv_62=(Token)match(input,48,FOLLOW_23); if (state.failed) return ;
        // InternalKim.g:12277:10: ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) )
        // InternalKim.g:12278:11: (lv_restrictedObservables_63_0= ruleConceptDeclaration )
        {
        // InternalKim.g:12278:11: (lv_restrictedObservables_63_0= ruleConceptDeclaration )
        // InternalKim.g:12279:12: lv_restrictedObservables_63_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRestrictedObservablesConceptDeclarationParserRuleCall_3_12_5_1_0());
          											
        }
        pushFollow(FOLLOW_34);
        lv_restrictedObservables_63_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:12296:10: (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )*
        loop588:
        do {
            int alt588=2;
            int LA588_0 = input.LA(1);

            if ( (LA588_0==27) ) {
                alt588=1;
            }


            switch (alt588) {
        	case 1 :
        	    // InternalKim.g:12297:11: otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) )
        	    {
        	    otherlv_64=(Token)match(input,27,FOLLOW_23); if (state.failed) return ;
        	    // InternalKim.g:12301:11: ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) )
        	    // InternalKim.g:12302:12: (lv_restrictedObservables_65_0= ruleConceptDeclaration )
        	    {
        	    // InternalKim.g:12302:12: (lv_restrictedObservables_65_0= ruleConceptDeclaration )
        	    // InternalKim.g:12303:13: lv_restrictedObservables_65_0= ruleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRestrictedObservablesConceptDeclarationParserRuleCall_3_12_5_2_1_0());
        	      												
        	    }
        	    pushFollow(FOLLOW_34);
        	    lv_restrictedObservables_65_0=ruleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop588;
            }
        } while (true);


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred471_InternalKim

    // $ANTLR start synpred475_InternalKim
    public final void synpred475_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_66=null;
        Token otherlv_68=null;
        Token otherlv_70=null;
        Token otherlv_72=null;
        EObject lv_conferredTraits_67_0 = null;

        EObject lv_conferredTraits_69_0 = null;

        EObject lv_conferredTargets_71_0 = null;

        EObject lv_conferredTargets_73_0 = null;


        // InternalKim.g:12328:4: ( ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) )
        // InternalKim.g:12328:4: ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) )
        {
        // InternalKim.g:12328:4: ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) )
        // InternalKim.g:12329:5: {...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 13) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred475_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 13)");
        }
        // InternalKim.g:12329:118: ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) )
        // InternalKim.g:12330:6: ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 13);
        // InternalKim.g:12333:9: ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) )
        // InternalKim.g:12333:10: {...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred475_InternalKim", "true");
        }
        // InternalKim.g:12333:19: (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? )
        // InternalKim.g:12333:20: otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )?
        {
        otherlv_66=(Token)match(input,195,FOLLOW_23); if (state.failed) return ;
        // InternalKim.g:12337:9: ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) )
        // InternalKim.g:12338:10: (lv_conferredTraits_67_0= ruleConceptDeclaration )
        {
        // InternalKim.g:12338:10: (lv_conferredTraits_67_0= ruleConceptDeclaration )
        // InternalKim.g:12339:11: lv_conferredTraits_67_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getConferredTraitsConceptDeclarationParserRuleCall_3_13_1_0());
          										
        }
        pushFollow(FOLLOW_213);
        lv_conferredTraits_67_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:12356:9: (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )*
        loop590:
        do {
            int alt590=2;
            int LA590_0 = input.LA(1);

            if ( (LA590_0==27) ) {
                alt590=1;
            }


            switch (alt590) {
        	case 1 :
        	    // InternalKim.g:12357:10: otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) )
        	    {
        	    otherlv_68=(Token)match(input,27,FOLLOW_23); if (state.failed) return ;
        	    // InternalKim.g:12361:10: ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) )
        	    // InternalKim.g:12362:11: (lv_conferredTraits_69_0= ruleConceptDeclaration )
        	    {
        	    // InternalKim.g:12362:11: (lv_conferredTraits_69_0= ruleConceptDeclaration )
        	    // InternalKim.g:12363:12: lv_conferredTraits_69_0= ruleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getConferredTraitsConceptDeclarationParserRuleCall_3_13_2_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_213);
        	    lv_conferredTraits_69_0=ruleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop590;
            }
        } while (true);

        // InternalKim.g:12381:9: (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )?
        int alt592=2;
        int LA592_0 = input.LA(1);

        if ( (LA592_0==36) ) {
            alt592=1;
        }
        switch (alt592) {
            case 1 :
                // InternalKim.g:12382:10: otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )*
                {
                otherlv_70=(Token)match(input,36,FOLLOW_23); if (state.failed) return ;
                // InternalKim.g:12386:10: ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) )
                // InternalKim.g:12387:11: (lv_conferredTargets_71_0= ruleConceptDeclaration )
                {
                // InternalKim.g:12387:11: (lv_conferredTargets_71_0= ruleConceptDeclaration )
                // InternalKim.g:12388:12: lv_conferredTargets_71_0= ruleConceptDeclaration
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getConferredTargetsConceptDeclarationParserRuleCall_3_13_3_1_0());
                  											
                }
                pushFollow(FOLLOW_34);
                lv_conferredTargets_71_0=ruleConceptDeclaration();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalKim.g:12405:10: (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )*
                loop591:
                do {
                    int alt591=2;
                    int LA591_0 = input.LA(1);

                    if ( (LA591_0==27) ) {
                        alt591=1;
                    }


                    switch (alt591) {
                	case 1 :
                	    // InternalKim.g:12406:11: otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) )
                	    {
                	    otherlv_72=(Token)match(input,27,FOLLOW_23); if (state.failed) return ;
                	    // InternalKim.g:12410:11: ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) )
                	    // InternalKim.g:12411:12: (lv_conferredTargets_73_0= ruleConceptDeclaration )
                	    {
                	    // InternalKim.g:12411:12: (lv_conferredTargets_73_0= ruleConceptDeclaration )
                	    // InternalKim.g:12412:13: lv_conferredTargets_73_0= ruleConceptDeclaration
                	    {
                	    if ( state.backtracking==0 ) {

                	      													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getConferredTargetsConceptDeclarationParserRuleCall_3_13_3_2_1_0());
                	      												
                	    }
                	    pushFollow(FOLLOW_34);
                	    lv_conferredTargets_73_0=ruleConceptDeclaration();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop591;
                    }
                } while (true);


                }
                break;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred475_InternalKim

    // $ANTLR start synpred478_InternalKim
    public final void synpred478_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_74=null;
        Token lv_constituent_75_0=null;
        Token lv_constitutes_76_0=null;
        Token lv_partOf_77_0=null;
        EObject lv_whole_78_0 = null;


        // InternalKim.g:12437:4: ( ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:12437:4: ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:12437:4: ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:12438:5: {...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 14) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred478_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 14)");
        }
        // InternalKim.g:12438:118: ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) )
        // InternalKim.g:12439:6: ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 14);
        // InternalKim.g:12442:9: ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) )
        // InternalKim.g:12442:10: {...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred478_InternalKim", "true");
        }
        // InternalKim.g:12442:19: ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:12442:20: (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) )
        {
        // InternalKim.g:12442:20: (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) )
        int alt593=3;
        switch ( input.LA(1) ) {
        case 196:
            {
            alt593=1;
            }
            break;
        case 197:
            {
            alt593=2;
            }
            break;
        case 198:
            {
            alt593=3;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 593, 0, input);

            throw nvae;
        }

        switch (alt593) {
            case 1 :
                // InternalKim.g:12443:10: otherlv_74= 'part'
                {
                otherlv_74=(Token)match(input,196,FOLLOW_121); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:12448:10: ( (lv_constituent_75_0= 'constituent' ) )
                {
                // InternalKim.g:12448:10: ( (lv_constituent_75_0= 'constituent' ) )
                // InternalKim.g:12449:11: (lv_constituent_75_0= 'constituent' )
                {
                // InternalKim.g:12449:11: (lv_constituent_75_0= 'constituent' )
                // InternalKim.g:12450:12: lv_constituent_75_0= 'constituent'
                {
                lv_constituent_75_0=(Token)match(input,197,FOLLOW_121); if (state.failed) return ;

                }


                }


                }
                break;
            case 3 :
                // InternalKim.g:12463:10: ( (lv_constitutes_76_0= 'consists' ) )
                {
                // InternalKim.g:12463:10: ( (lv_constitutes_76_0= 'consists' ) )
                // InternalKim.g:12464:11: (lv_constitutes_76_0= 'consists' )
                {
                // InternalKim.g:12464:11: (lv_constitutes_76_0= 'consists' )
                // InternalKim.g:12465:12: lv_constitutes_76_0= 'consists'
                {
                lv_constitutes_76_0=(Token)match(input,198,FOLLOW_121); if (state.failed) return ;

                }


                }


                }
                break;

        }

        // InternalKim.g:12478:9: ( (lv_partOf_77_0= 'of' ) )
        // InternalKim.g:12479:10: (lv_partOf_77_0= 'of' )
        {
        // InternalKim.g:12479:10: (lv_partOf_77_0= 'of' )
        // InternalKim.g:12480:11: lv_partOf_77_0= 'of'
        {
        lv_partOf_77_0=(Token)match(input,123,FOLLOW_23); if (state.failed) return ;

        }


        }

        // InternalKim.g:12492:9: ( (lv_whole_78_0= ruleConceptDeclaration ) )
        // InternalKim.g:12493:10: (lv_whole_78_0= ruleConceptDeclaration )
        {
        // InternalKim.g:12493:10: (lv_whole_78_0= ruleConceptDeclaration )
        // InternalKim.g:12494:11: lv_whole_78_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getWholeConceptDeclarationParserRuleCall_3_14_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_whole_78_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred478_InternalKim

    // $ANTLR start synpred480_InternalKim
    public final void synpred480_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_79=null;
        Token otherlv_81=null;
        EObject lv_creates_80_0 = null;

        EObject lv_creates_82_0 = null;


        // InternalKim.g:12517:4: ( ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
        // InternalKim.g:12517:4: ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) )
        {
        // InternalKim.g:12517:4: ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) )
        // InternalKim.g:12518:5: {...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 15) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred480_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 15)");
        }
        // InternalKim.g:12518:118: ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) )
        // InternalKim.g:12519:6: ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 15);
        // InternalKim.g:12522:9: ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) )
        // InternalKim.g:12522:10: {...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred480_InternalKim", "true");
        }
        // InternalKim.g:12522:19: (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* )
        // InternalKim.g:12522:20: otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )*
        {
        otherlv_79=(Token)match(input,199,FOLLOW_23); if (state.failed) return ;
        // InternalKim.g:12526:9: ( (lv_creates_80_0= ruleConceptDeclaration ) )
        // InternalKim.g:12527:10: (lv_creates_80_0= ruleConceptDeclaration )
        {
        // InternalKim.g:12527:10: (lv_creates_80_0= ruleConceptDeclaration )
        // InternalKim.g:12528:11: lv_creates_80_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getCreatesConceptDeclarationParserRuleCall_3_15_1_0());
          										
        }
        pushFollow(FOLLOW_34);
        lv_creates_80_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:12545:9: (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )*
        loop594:
        do {
            int alt594=2;
            int LA594_0 = input.LA(1);

            if ( (LA594_0==27) ) {
                alt594=1;
            }


            switch (alt594) {
        	case 1 :
        	    // InternalKim.g:12546:10: otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) )
        	    {
        	    otherlv_81=(Token)match(input,27,FOLLOW_23); if (state.failed) return ;
        	    // InternalKim.g:12550:10: ( (lv_creates_82_0= ruleConceptDeclaration ) )
        	    // InternalKim.g:12551:11: (lv_creates_82_0= ruleConceptDeclaration )
        	    {
        	    // InternalKim.g:12551:11: (lv_creates_82_0= ruleConceptDeclaration )
        	    // InternalKim.g:12552:12: lv_creates_82_0= ruleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getCreatesConceptDeclarationParserRuleCall_3_15_2_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_34);
        	    lv_creates_82_0=ruleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop594;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred480_InternalKim

    // $ANTLR start synpred482_InternalKim
    public final void synpred482_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_83=null;
        Token otherlv_84=null;
        Token otherlv_86=null;
        EObject lv_traitTargets_85_0 = null;

        EObject lv_traitTargets_87_0 = null;


        // InternalKim.g:12576:4: ( ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) )
        // InternalKim.g:12576:4: ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) )
        {
        // InternalKim.g:12576:4: ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) )
        // InternalKim.g:12577:5: {...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 16) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred482_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 16)");
        }
        // InternalKim.g:12577:118: ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) )
        // InternalKim.g:12578:6: ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 16);
        // InternalKim.g:12581:9: ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) )
        // InternalKim.g:12581:10: {...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred482_InternalKim", "true");
        }
        // InternalKim.g:12581:19: (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* )
        // InternalKim.g:12581:20: otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )*
        {
        otherlv_83=(Token)match(input,200,FOLLOW_25); if (state.failed) return ;
        otherlv_84=(Token)match(input,36,FOLLOW_23); if (state.failed) return ;
        // InternalKim.g:12589:9: ( (lv_traitTargets_85_0= ruleApplicableTarget ) )
        // InternalKim.g:12590:10: (lv_traitTargets_85_0= ruleApplicableTarget )
        {
        // InternalKim.g:12590:10: (lv_traitTargets_85_0= ruleApplicableTarget )
        // InternalKim.g:12591:11: lv_traitTargets_85_0= ruleApplicableTarget
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getTraitTargetsApplicableTargetParserRuleCall_3_16_2_0());
          										
        }
        pushFollow(FOLLOW_34);
        lv_traitTargets_85_0=ruleApplicableTarget();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:12608:9: (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )*
        loop595:
        do {
            int alt595=2;
            int LA595_0 = input.LA(1);

            if ( (LA595_0==27) ) {
                alt595=1;
            }


            switch (alt595) {
        	case 1 :
        	    // InternalKim.g:12609:10: otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) )
        	    {
        	    otherlv_86=(Token)match(input,27,FOLLOW_23); if (state.failed) return ;
        	    // InternalKim.g:12613:10: ( (lv_traitTargets_87_0= ruleApplicableTarget ) )
        	    // InternalKim.g:12614:11: (lv_traitTargets_87_0= ruleApplicableTarget )
        	    {
        	    // InternalKim.g:12614:11: (lv_traitTargets_87_0= ruleApplicableTarget )
        	    // InternalKim.g:12615:12: lv_traitTargets_87_0= ruleApplicableTarget
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getTraitTargetsApplicableTargetParserRuleCall_3_16_3_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_34);
        	    lv_traitTargets_87_0=ruleApplicableTarget();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop595;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred482_InternalKim

    // $ANTLR start synpred486_InternalKim
    public final void synpred486_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_88=null;
        Token otherlv_90=null;
        Token otherlv_92=null;
        Token otherlv_94=null;
        EObject lv_domains_89_0 = null;

        EObject lv_ranges_91_0 = null;

        EObject lv_domains_93_0 = null;

        EObject lv_ranges_95_0 = null;


        // InternalKim.g:12639:4: ( ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) )
        // InternalKim.g:12639:4: ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) )
        {
        // InternalKim.g:12639:4: ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) )
        // InternalKim.g:12640:5: {...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 17) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred486_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 17)");
        }
        // InternalKim.g:12640:118: ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) )
        // InternalKim.g:12641:6: ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 17);
        // InternalKim.g:12644:9: ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) )
        // InternalKim.g:12644:10: {...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred486_InternalKim", "true");
        }
        // InternalKim.g:12644:19: (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* )
        // InternalKim.g:12644:20: otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )*
        {
        otherlv_88=(Token)match(input,201,FOLLOW_110); if (state.failed) return ;
        // InternalKim.g:12648:9: ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:12649:10: (lv_domains_89_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:12649:10: (lv_domains_89_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:12650:11: lv_domains_89_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDomainsSimpleConceptDeclarationParserRuleCall_3_17_1_0());
          										
        }
        pushFollow(FOLLOW_25);
        lv_domains_89_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:12667:9: ( ( 'to' )=>otherlv_90= 'to' )
        // InternalKim.g:12668:10: ( 'to' )=>otherlv_90= 'to'
        {
        otherlv_90=(Token)match(input,36,FOLLOW_110); if (state.failed) return ;

        }

        // InternalKim.g:12674:9: ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:12675:10: (lv_ranges_91_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:12675:10: (lv_ranges_91_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:12676:11: lv_ranges_91_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRangesSimpleConceptDeclarationParserRuleCall_3_17_3_0());
          										
        }
        pushFollow(FOLLOW_34);
        lv_ranges_91_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:12693:9: (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )*
        loop596:
        do {
            int alt596=2;
            int LA596_0 = input.LA(1);

            if ( (LA596_0==27) ) {
                alt596=1;
            }


            switch (alt596) {
        	case 1 :
        	    // InternalKim.g:12694:10: otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) )
        	    {
        	    otherlv_92=(Token)match(input,27,FOLLOW_110); if (state.failed) return ;
        	    // InternalKim.g:12698:10: ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:12699:11: (lv_domains_93_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:12699:11: (lv_domains_93_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:12700:12: lv_domains_93_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDomainsSimpleConceptDeclarationParserRuleCall_3_17_4_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_25);
        	    lv_domains_93_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }

        	    // InternalKim.g:12717:10: ( ( 'to' )=>otherlv_94= 'to' )
        	    // InternalKim.g:12718:11: ( 'to' )=>otherlv_94= 'to'
        	    {
        	    otherlv_94=(Token)match(input,36,FOLLOW_110); if (state.failed) return ;

        	    }

        	    // InternalKim.g:12724:10: ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:12725:11: (lv_ranges_95_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:12725:11: (lv_ranges_95_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:12726:12: lv_ranges_95_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRangesSimpleConceptDeclarationParserRuleCall_3_17_4_3_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_34);
        	    lv_ranges_95_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop596;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred486_InternalKim

    // $ANTLR start synpred487_InternalKim
    public final void synpred487_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_96=null;
        Token otherlv_97=null;
        EObject lv_inverse_98_0 = null;


        // InternalKim.g:12750:4: ( ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:12750:4: ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:12750:4: ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:12751:5: {...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 18) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred487_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 18)");
        }
        // InternalKim.g:12751:118: ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) )
        // InternalKim.g:12752:6: ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 18);
        // InternalKim.g:12755:9: ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) )
        // InternalKim.g:12755:10: {...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred487_InternalKim", "true");
        }
        // InternalKim.g:12755:19: (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:12755:20: otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) )
        {
        otherlv_96=(Token)match(input,202,FOLLOW_121); if (state.failed) return ;
        otherlv_97=(Token)match(input,123,FOLLOW_23); if (state.failed) return ;
        // InternalKim.g:12763:9: ( (lv_inverse_98_0= ruleConceptDeclaration ) )
        // InternalKim.g:12764:10: (lv_inverse_98_0= ruleConceptDeclaration )
        {
        // InternalKim.g:12764:10: (lv_inverse_98_0= ruleConceptDeclaration )
        // InternalKim.g:12765:11: lv_inverse_98_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getInverseConceptDeclarationParserRuleCall_3_18_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_inverse_98_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred487_InternalKim

    // $ANTLR start synpred489_InternalKim
    public final void synpred489_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_99=null;
        Token otherlv_101=null;
        EObject lv_qualitiesAffected_100_0 = null;

        EObject lv_qualitiesAffected_102_0 = null;


        // InternalKim.g:12788:4: ( ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
        // InternalKim.g:12788:4: ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) )
        {
        // InternalKim.g:12788:4: ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) )
        // InternalKim.g:12789:5: {...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 19) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred489_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 19)");
        }
        // InternalKim.g:12789:118: ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) )
        // InternalKim.g:12790:6: ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 19);
        // InternalKim.g:12793:9: ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) )
        // InternalKim.g:12793:10: {...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred489_InternalKim", "true");
        }
        // InternalKim.g:12793:19: (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* )
        // InternalKim.g:12793:20: otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )*
        {
        otherlv_99=(Token)match(input,203,FOLLOW_23); if (state.failed) return ;
        // InternalKim.g:12797:9: ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) )
        // InternalKim.g:12798:10: (lv_qualitiesAffected_100_0= ruleConceptDeclaration )
        {
        // InternalKim.g:12798:10: (lv_qualitiesAffected_100_0= ruleConceptDeclaration )
        // InternalKim.g:12799:11: lv_qualitiesAffected_100_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getQualitiesAffectedConceptDeclarationParserRuleCall_3_19_1_0());
          										
        }
        pushFollow(FOLLOW_34);
        lv_qualitiesAffected_100_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:12816:9: (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )*
        loop597:
        do {
            int alt597=2;
            int LA597_0 = input.LA(1);

            if ( (LA597_0==27) ) {
                alt597=1;
            }


            switch (alt597) {
        	case 1 :
        	    // InternalKim.g:12817:10: otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) )
        	    {
        	    otherlv_101=(Token)match(input,27,FOLLOW_23); if (state.failed) return ;
        	    // InternalKim.g:12821:10: ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) )
        	    // InternalKim.g:12822:11: (lv_qualitiesAffected_102_0= ruleConceptDeclaration )
        	    {
        	    // InternalKim.g:12822:11: (lv_qualitiesAffected_102_0= ruleConceptDeclaration )
        	    // InternalKim.g:12823:12: lv_qualitiesAffected_102_0= ruleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getQualitiesAffectedConceptDeclarationParserRuleCall_3_19_2_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_34);
        	    lv_qualitiesAffected_102_0=ruleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop597;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred489_InternalKim

    // $ANTLR start synpred492_InternalKim
    public final void synpred492_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_103=null;
        Token lv_disjoint_104_0=null;
        Token otherlv_105=null;
        Token otherlv_107=null;
        EObject lv_children_106_0 = null;

        EObject lv_children_108_0 = null;


        // InternalKim.g:12847:4: ( ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) )
        // InternalKim.g:12847:4: ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) )
        {
        // InternalKim.g:12847:4: ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) )
        // InternalKim.g:12848:5: {...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 20) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred492_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 20)");
        }
        // InternalKim.g:12848:118: ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) )
        // InternalKim.g:12849:6: ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 20);
        // InternalKim.g:12852:9: ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) )
        // InternalKim.g:12852:10: {...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred492_InternalKim", "true");
        }
        // InternalKim.g:12852:19: (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* )
        // InternalKim.g:12852:20: otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )*
        {
        otherlv_103=(Token)match(input,192,FOLLOW_150); if (state.failed) return ;
        // InternalKim.g:12856:9: ( (lv_disjoint_104_0= 'disjoint' ) )?
        int alt598=2;
        int LA598_0 = input.LA(1);

        if ( (LA598_0==98) ) {
            alt598=1;
        }
        switch (alt598) {
            case 1 :
                // InternalKim.g:12857:10: (lv_disjoint_104_0= 'disjoint' )
                {
                // InternalKim.g:12857:10: (lv_disjoint_104_0= 'disjoint' )
                // InternalKim.g:12858:11: lv_disjoint_104_0= 'disjoint'
                {
                lv_disjoint_104_0=(Token)match(input,98,FOLLOW_151); if (state.failed) return ;

                }


                }
                break;

        }

        otherlv_105=(Token)match(input,112,FOLLOW_152); if (state.failed) return ;
        // InternalKim.g:12874:9: ( (lv_children_106_0= ruleChildConcept ) )
        // InternalKim.g:12875:10: (lv_children_106_0= ruleChildConcept )
        {
        // InternalKim.g:12875:10: (lv_children_106_0= ruleChildConcept )
        // InternalKim.g:12876:11: lv_children_106_0= ruleChildConcept
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getChildrenChildConceptParserRuleCall_3_20_3_0());
          										
        }
        pushFollow(FOLLOW_34);
        lv_children_106_0=ruleChildConcept();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:12893:9: (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )*
        loop599:
        do {
            int alt599=2;
            int LA599_0 = input.LA(1);

            if ( (LA599_0==27) ) {
                alt599=1;
            }


            switch (alt599) {
        	case 1 :
        	    // InternalKim.g:12894:10: otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) )
        	    {
        	    otherlv_107=(Token)match(input,27,FOLLOW_152); if (state.failed) return ;
        	    // InternalKim.g:12898:10: ( (lv_children_108_0= ruleChildConcept ) )
        	    // InternalKim.g:12899:11: (lv_children_108_0= ruleChildConcept )
        	    {
        	    // InternalKim.g:12899:11: (lv_children_108_0= ruleChildConcept )
        	    // InternalKim.g:12900:12: lv_children_108_0= ruleChildConcept
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getChildrenChildConceptParserRuleCall_3_20_4_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_34);
        	    lv_children_108_0=ruleChildConcept();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop599;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred492_InternalKim

    // $ANTLR start synpred494_InternalKim
    public final void synpred494_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_109=null;
        Token otherlv_111=null;
        EObject lv_implications_110_0 = null;

        EObject lv_implications_112_0 = null;


        // InternalKim.g:12924:4: ( ({...}? => ( ({...}? => (otherlv_109= 'implies' ( (lv_implications_110_0= ruleImplication ) ) (otherlv_111= ',' ( (lv_implications_112_0= ruleImplication ) ) )* ) ) ) ) )
        // InternalKim.g:12924:4: ({...}? => ( ({...}? => (otherlv_109= 'implies' ( (lv_implications_110_0= ruleImplication ) ) (otherlv_111= ',' ( (lv_implications_112_0= ruleImplication ) ) )* ) ) ) )
        {
        // InternalKim.g:12924:4: ({...}? => ( ({...}? => (otherlv_109= 'implies' ( (lv_implications_110_0= ruleImplication ) ) (otherlv_111= ',' ( (lv_implications_112_0= ruleImplication ) ) )* ) ) ) )
        // InternalKim.g:12925:5: {...}? => ( ({...}? => (otherlv_109= 'implies' ( (lv_implications_110_0= ruleImplication ) ) (otherlv_111= ',' ( (lv_implications_112_0= ruleImplication ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred494_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21)");
        }
        // InternalKim.g:12925:118: ( ({...}? => (otherlv_109= 'implies' ( (lv_implications_110_0= ruleImplication ) ) (otherlv_111= ',' ( (lv_implications_112_0= ruleImplication ) ) )* ) ) )
        // InternalKim.g:12926:6: ({...}? => (otherlv_109= 'implies' ( (lv_implications_110_0= ruleImplication ) ) (otherlv_111= ',' ( (lv_implications_112_0= ruleImplication ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21);
        // InternalKim.g:12929:9: ({...}? => (otherlv_109= 'implies' ( (lv_implications_110_0= ruleImplication ) ) (otherlv_111= ',' ( (lv_implications_112_0= ruleImplication ) ) )* ) )
        // InternalKim.g:12929:10: {...}? => (otherlv_109= 'implies' ( (lv_implications_110_0= ruleImplication ) ) (otherlv_111= ',' ( (lv_implications_112_0= ruleImplication ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred494_InternalKim", "true");
        }
        // InternalKim.g:12929:19: (otherlv_109= 'implies' ( (lv_implications_110_0= ruleImplication ) ) (otherlv_111= ',' ( (lv_implications_112_0= ruleImplication ) ) )* )
        // InternalKim.g:12929:20: otherlv_109= 'implies' ( (lv_implications_110_0= ruleImplication ) ) (otherlv_111= ',' ( (lv_implications_112_0= ruleImplication ) ) )*
        {
        otherlv_109=(Token)match(input,204,FOLLOW_153); if (state.failed) return ;
        // InternalKim.g:12933:9: ( (lv_implications_110_0= ruleImplication ) )
        // InternalKim.g:12934:10: (lv_implications_110_0= ruleImplication )
        {
        // InternalKim.g:12934:10: (lv_implications_110_0= ruleImplication )
        // InternalKim.g:12935:11: lv_implications_110_0= ruleImplication
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getImplicationsImplicationParserRuleCall_3_21_1_0());
          										
        }
        pushFollow(FOLLOW_34);
        lv_implications_110_0=ruleImplication();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:12952:9: (otherlv_111= ',' ( (lv_implications_112_0= ruleImplication ) ) )*
        loop600:
        do {
            int alt600=2;
            int LA600_0 = input.LA(1);

            if ( (LA600_0==27) ) {
                alt600=1;
            }


            switch (alt600) {
        	case 1 :
        	    // InternalKim.g:12953:10: otherlv_111= ',' ( (lv_implications_112_0= ruleImplication ) )
        	    {
        	    otherlv_111=(Token)match(input,27,FOLLOW_153); if (state.failed) return ;
        	    // InternalKim.g:12957:10: ( (lv_implications_112_0= ruleImplication ) )
        	    // InternalKim.g:12958:11: (lv_implications_112_0= ruleImplication )
        	    {
        	    // InternalKim.g:12958:11: (lv_implications_112_0= ruleImplication )
        	    // InternalKim.g:12959:12: lv_implications_112_0= ruleImplication
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getImplicationsImplicationParserRuleCall_3_21_2_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_34);
        	    lv_implications_112_0=ruleImplication();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop600;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred494_InternalKim

    // $ANTLR start synpred496_InternalKim
    public final void synpred496_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_113=null;
        Token otherlv_114=null;
        Token lv_authorities_115_1=null;
        Token lv_authorities_115_2=null;

        // InternalKim.g:12983:4: ( ({...}? => ( ({...}? => (otherlv_113= 'uses' otherlv_114= 'authority' ( ( (lv_authorities_115_1= RULE_UPPERCASE_ID | lv_authorities_115_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) ) )
        // InternalKim.g:12983:4: ({...}? => ( ({...}? => (otherlv_113= 'uses' otherlv_114= 'authority' ( ( (lv_authorities_115_1= RULE_UPPERCASE_ID | lv_authorities_115_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) )
        {
        // InternalKim.g:12983:4: ({...}? => ( ({...}? => (otherlv_113= 'uses' otherlv_114= 'authority' ( ( (lv_authorities_115_1= RULE_UPPERCASE_ID | lv_authorities_115_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) )
        // InternalKim.g:12984:5: {...}? => ( ({...}? => (otherlv_113= 'uses' otherlv_114= 'authority' ( ( (lv_authorities_115_1= RULE_UPPERCASE_ID | lv_authorities_115_2= RULE_UPPERCASE_PATH ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred496_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22)");
        }
        // InternalKim.g:12984:118: ( ({...}? => (otherlv_113= 'uses' otherlv_114= 'authority' ( ( (lv_authorities_115_1= RULE_UPPERCASE_ID | lv_authorities_115_2= RULE_UPPERCASE_PATH ) ) ) ) ) )
        // InternalKim.g:12985:6: ({...}? => (otherlv_113= 'uses' otherlv_114= 'authority' ( ( (lv_authorities_115_1= RULE_UPPERCASE_ID | lv_authorities_115_2= RULE_UPPERCASE_PATH ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22);
        // InternalKim.g:12988:9: ({...}? => (otherlv_113= 'uses' otherlv_114= 'authority' ( ( (lv_authorities_115_1= RULE_UPPERCASE_ID | lv_authorities_115_2= RULE_UPPERCASE_PATH ) ) ) ) )
        // InternalKim.g:12988:10: {...}? => (otherlv_113= 'uses' otherlv_114= 'authority' ( ( (lv_authorities_115_1= RULE_UPPERCASE_ID | lv_authorities_115_2= RULE_UPPERCASE_PATH ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred496_InternalKim", "true");
        }
        // InternalKim.g:12988:19: (otherlv_113= 'uses' otherlv_114= 'authority' ( ( (lv_authorities_115_1= RULE_UPPERCASE_ID | lv_authorities_115_2= RULE_UPPERCASE_PATH ) ) ) )
        // InternalKim.g:12988:20: otherlv_113= 'uses' otherlv_114= 'authority' ( ( (lv_authorities_115_1= RULE_UPPERCASE_ID | lv_authorities_115_2= RULE_UPPERCASE_PATH ) ) )
        {
        otherlv_113=(Token)match(input,205,FOLLOW_154); if (state.failed) return ;
        otherlv_114=(Token)match(input,183,FOLLOW_120); if (state.failed) return ;
        // InternalKim.g:12996:9: ( ( (lv_authorities_115_1= RULE_UPPERCASE_ID | lv_authorities_115_2= RULE_UPPERCASE_PATH ) ) )
        // InternalKim.g:12997:10: ( (lv_authorities_115_1= RULE_UPPERCASE_ID | lv_authorities_115_2= RULE_UPPERCASE_PATH ) )
        {
        // InternalKim.g:12997:10: ( (lv_authorities_115_1= RULE_UPPERCASE_ID | lv_authorities_115_2= RULE_UPPERCASE_PATH ) )
        // InternalKim.g:12998:11: (lv_authorities_115_1= RULE_UPPERCASE_ID | lv_authorities_115_2= RULE_UPPERCASE_PATH )
        {
        // InternalKim.g:12998:11: (lv_authorities_115_1= RULE_UPPERCASE_ID | lv_authorities_115_2= RULE_UPPERCASE_PATH )
        int alt601=2;
        int LA601_0 = input.LA(1);

        if ( (LA601_0==RULE_UPPERCASE_ID) ) {
            alt601=1;
        }
        else if ( (LA601_0==RULE_UPPERCASE_PATH) ) {
            alt601=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 601, 0, input);

            throw nvae;
        }
        switch (alt601) {
            case 1 :
                // InternalKim.g:12999:12: lv_authorities_115_1= RULE_UPPERCASE_ID
                {
                lv_authorities_115_1=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:13014:12: lv_authorities_115_2= RULE_UPPERCASE_PATH
                {
                lv_authorities_115_2=(Token)match(input,RULE_UPPERCASE_PATH,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred496_InternalKim

    // $ANTLR start synpred497_InternalKim
    public final void synpred497_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_116=null;
        EObject lv_metadata_117_0 = null;


        // InternalKim.g:13037:4: ( ({...}? => ( ({...}? => (otherlv_116= 'metadata' ( (lv_metadata_117_0= ruleMap ) ) ) ) ) ) )
        // InternalKim.g:13037:4: ({...}? => ( ({...}? => (otherlv_116= 'metadata' ( (lv_metadata_117_0= ruleMap ) ) ) ) ) )
        {
        // InternalKim.g:13037:4: ({...}? => ( ({...}? => (otherlv_116= 'metadata' ( (lv_metadata_117_0= ruleMap ) ) ) ) ) )
        // InternalKim.g:13038:5: {...}? => ( ({...}? => (otherlv_116= 'metadata' ( (lv_metadata_117_0= ruleMap ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred497_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23)");
        }
        // InternalKim.g:13038:118: ( ({...}? => (otherlv_116= 'metadata' ( (lv_metadata_117_0= ruleMap ) ) ) ) )
        // InternalKim.g:13039:6: ({...}? => (otherlv_116= 'metadata' ( (lv_metadata_117_0= ruleMap ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23);
        // InternalKim.g:13042:9: ({...}? => (otherlv_116= 'metadata' ( (lv_metadata_117_0= ruleMap ) ) ) )
        // InternalKim.g:13042:10: {...}? => (otherlv_116= 'metadata' ( (lv_metadata_117_0= ruleMap ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred497_InternalKim", "true");
        }
        // InternalKim.g:13042:19: (otherlv_116= 'metadata' ( (lv_metadata_117_0= ruleMap ) ) )
        // InternalKim.g:13042:20: otherlv_116= 'metadata' ( (lv_metadata_117_0= ruleMap ) )
        {
        otherlv_116=(Token)match(input,42,FOLLOW_33); if (state.failed) return ;
        // InternalKim.g:13046:9: ( (lv_metadata_117_0= ruleMap ) )
        // InternalKim.g:13047:10: (lv_metadata_117_0= ruleMap )
        {
        // InternalKim.g:13047:10: (lv_metadata_117_0= ruleMap )
        // InternalKim.g:13048:11: lv_metadata_117_0= ruleMap
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getMetadataMapParserRuleCall_3_23_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_metadata_117_0=ruleMap();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred497_InternalKim

    // $ANTLR start synpred498_InternalKim
    public final void synpred498_InternalKim_fragment() throws RecognitionException {   
        EObject lv_properties_118_0 = null;


        // InternalKim.g:13076:10: ({...}? => ( (lv_properties_118_0= rulePropertyStatement ) ) )
        // InternalKim.g:13076:10: {...}? => ( (lv_properties_118_0= rulePropertyStatement ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred498_InternalKim", "true");
        }
        // InternalKim.g:13076:19: ( (lv_properties_118_0= rulePropertyStatement ) )
        // InternalKim.g:13076:20: (lv_properties_118_0= rulePropertyStatement )
        {
        // InternalKim.g:13076:20: (lv_properties_118_0= rulePropertyStatement )
        // InternalKim.g:13077:10: lv_properties_118_0= rulePropertyStatement
        {
        if ( state.backtracking==0 ) {

          										newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getPropertiesPropertyStatementParserRuleCall_3_24_0());
          									
        }
        pushFollow(FOLLOW_2);
        lv_properties_118_0=rulePropertyStatement();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred498_InternalKim

    // $ANTLR start synpred499_InternalKim
    public final void synpred499_InternalKim_fragment() throws RecognitionException {   
        EObject lv_properties_118_0 = null;


        // InternalKim.g:13071:4: ( ({...}? => ( ({...}? => ( (lv_properties_118_0= rulePropertyStatement ) ) )+ ) ) )
        // InternalKim.g:13071:4: ({...}? => ( ({...}? => ( (lv_properties_118_0= rulePropertyStatement ) ) )+ ) )
        {
        // InternalKim.g:13071:4: ({...}? => ( ({...}? => ( (lv_properties_118_0= rulePropertyStatement ) ) )+ ) )
        // InternalKim.g:13072:5: {...}? => ( ({...}? => ( (lv_properties_118_0= rulePropertyStatement ) ) )+ )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred499_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24)");
        }
        // InternalKim.g:13072:118: ( ({...}? => ( (lv_properties_118_0= rulePropertyStatement ) ) )+ )
        // InternalKim.g:13073:6: ({...}? => ( (lv_properties_118_0= rulePropertyStatement ) ) )+
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24);
        // InternalKim.g:13076:9: ({...}? => ( (lv_properties_118_0= rulePropertyStatement ) ) )+
        int cnt602=0;
        loop602:
        do {
            int alt602=2;
            int LA602_0 = input.LA(1);

            if ( (LA602_0==RULE_LOWERCASE_ID) && ((true))) {
                alt602=1;
            }
            else if ( (LA602_0==RULE_UPPERCASE_ID) && ((true))) {
                alt602=1;
            }
            else if ( (LA602_0==RULE_LOWERCASE_DASHID) && ((true))) {
                alt602=1;
            }
            else if ( (LA602_0==RULE_BACKCASE_ID) && ((true))) {
                alt602=1;
            }
            else if ( (LA602_0==192) && ((true))) {
                alt602=1;
            }
            else if ( (LA602_0==211) && ((true))) {
                alt602=1;
            }
            else if ( (LA602_0==205) && ((true))) {
                alt602=1;
            }


            switch (alt602) {
        	case 1 :
        	    // InternalKim.g:13076:10: {...}? => ( (lv_properties_118_0= rulePropertyStatement ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred499_InternalKim", "true");
        	    }
        	    // InternalKim.g:13076:19: ( (lv_properties_118_0= rulePropertyStatement ) )
        	    // InternalKim.g:13076:20: (lv_properties_118_0= rulePropertyStatement )
        	    {
        	    // InternalKim.g:13076:20: (lv_properties_118_0= rulePropertyStatement )
        	    // InternalKim.g:13077:10: lv_properties_118_0= rulePropertyStatement
        	    {
        	    if ( state.backtracking==0 ) {

        	      										newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getPropertiesPropertyStatementParserRuleCall_3_24_0());
        	      									
        	    }
        	    pushFollow(FOLLOW_137);
        	    lv_properties_118_0=rulePropertyStatement();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    if ( cnt602 >= 1 ) break loop602;
        	    if (state.backtracking>0) {state.failed=true; return ;}
                    EarlyExitException eee =
                        new EarlyExitException(602, input);
                    throw eee;
            }
            cnt602++;
        } while (true);


        }


        }


        }
    }
    // $ANTLR end synpred499_InternalKim

    // $ANTLR start synpred500_InternalKim
    public final void synpred500_InternalKim_fragment() throws RecognitionException {   
        EObject lv_quantifier_0_0 = null;


        // InternalKim.g:13129:4: ( (lv_quantifier_0_0= ruleQuantification ) )
        // InternalKim.g:13129:4: (lv_quantifier_0_0= ruleQuantification )
        {
        // InternalKim.g:13129:4: (lv_quantifier_0_0= ruleQuantification )
        // InternalKim.g:13130:5: lv_quantifier_0_0= ruleQuantification
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getImplicationAccess().getQuantifierQuantificationParserRuleCall_0_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_quantifier_0_0=ruleQuantification();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred500_InternalKim

    // $ANTLR start synpred529_InternalKim
    public final void synpred529_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_parameters_2_0 = null;


        // InternalKim.g:13918:4: ( ( ( '(' )=>otherlv_1= '(' ) ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' )
        // InternalKim.g:13918:4: ( ( '(' )=>otherlv_1= '(' ) ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')'
        {
        // InternalKim.g:13918:4: ( ( '(' )=>otherlv_1= '(' )
        // InternalKim.g:13919:5: ( '(' )=>otherlv_1= '('
        {
        otherlv_1=(Token)match(input,38,FOLLOW_164); if (state.failed) return ;

        }

        // InternalKim.g:13925:4: ( (lv_parameters_2_0= ruleParameterList ) )?
        int alt615=2;
        int LA615_0 = input.LA(1);

        if ( ((LA615_0>=RULE_LOWERCASE_ID && LA615_0<=RULE_STRING)||(LA615_0>=RULE_EXPR && LA615_0<=RULE_LOWERCASE_DASHID)||LA615_0==RULE_UPPERCASE_PATH||(LA615_0>=28 && LA615_0<=29)||LA615_0==38||(LA615_0>=49 && LA615_0<=50)||(LA615_0>=76 && LA615_0<=79)||(LA615_0>=82 && LA615_0<=83)||LA615_0==85||LA615_0==113||LA615_0==118||(LA615_0>=132 && LA615_0<=133)||(LA615_0>=141 && LA615_0<=142)||(LA615_0>=144 && LA615_0<=149)||(LA615_0>=151 && LA615_0<=163)||LA615_0==216||(LA615_0>=251 && LA615_0<=252)) ) {
            alt615=1;
        }
        switch (alt615) {
            case 1 :
                // InternalKim.g:13926:5: (lv_parameters_2_0= ruleParameterList )
                {
                // InternalKim.g:13926:5: (lv_parameters_2_0= ruleParameterList )
                // InternalKim.g:13927:6: lv_parameters_2_0= ruleParameterList
                {
                if ( state.backtracking==0 ) {

                  						newCompositeNode(grammarAccess.getAnnotationAccess().getParametersParameterListParserRuleCall_1_1_0());
                  					
                }
                pushFollow(FOLLOW_96);
                lv_parameters_2_0=ruleParameterList();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }

        otherlv_3=(Token)match(input,41,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred529_InternalKim

    // $ANTLR start synpred530_InternalKim
    public final void synpred530_InternalKim_fragment() throws RecognitionException {   
        EObject lv_contents_2_0 = null;


        // InternalKim.g:13983:4: ( (lv_contents_2_0= ruleValueWithIdAndConcept ) )
        // InternalKim.g:13983:4: (lv_contents_2_0= ruleValueWithIdAndConcept )
        {
        // InternalKim.g:13983:4: (lv_contents_2_0= ruleValueWithIdAndConcept )
        // InternalKim.g:13984:5: lv_contents_2_0= ruleValueWithIdAndConcept
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getListAccess().getContentsValueWithIdAndConceptParserRuleCall_2_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_contents_2_0=ruleValueWithIdAndConcept();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred530_InternalKim

    // $ANTLR start synpred547_InternalKim
    public final void synpred547_InternalKim_fragment() throws RecognitionException {   
        // InternalKim.g:14395:6: ( ',' )
        // InternalKim.g:14395:7: ','
        {
        match(input,27,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred547_InternalKim

    // $ANTLR start synpred550_InternalKim
    public final void synpred550_InternalKim_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken lv_name_0_1 = null;


        // InternalKim.g:14510:6: (lv_name_0_1= rulePathName )
        // InternalKim.g:14510:6: lv_name_0_1= rulePathName
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getKeyValuePairAccess().getNamePathNameParserRuleCall_0_0_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_name_0_1=rulePathName();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred550_InternalKim

    // $ANTLR start synpred551_InternalKim
    public final void synpred551_InternalKim_fragment() throws RecognitionException {   
        Token lv_name_0_2=null;

        // InternalKim.g:14526:6: (lv_name_0_2= RULE_LOWERCASE_ID )
        // InternalKim.g:14526:6: lv_name_0_2= RULE_LOWERCASE_ID
        {
        lv_name_0_2=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred551_InternalKim

    // $ANTLR start synpred559_InternalKim
    public final void synpred559_InternalKim_fragment() throws RecognitionException {   
        EObject lv_list_0_0 = null;


        // InternalKim.g:14753:3: ( ( (lv_list_0_0= ruleList ) ) )
        // InternalKim.g:14753:3: ( (lv_list_0_0= ruleList ) )
        {
        // InternalKim.g:14753:3: ( (lv_list_0_0= ruleList ) )
        // InternalKim.g:14754:4: (lv_list_0_0= ruleList )
        {
        // InternalKim.g:14754:4: (lv_list_0_0= ruleList )
        // InternalKim.g:14755:5: lv_list_0_0= ruleList
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getListListParserRuleCall_0_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_list_0_0=ruleList();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred559_InternalKim

    // $ANTLR start synpred561_InternalKim
    public final void synpred561_InternalKim_fragment() throws RecognitionException {   
        EObject lv_concept_2_0 = null;


        // InternalKim.g:14793:3: ( ( (lv_concept_2_0= ruleSimpleObservableSemantics ) ) )
        // InternalKim.g:14793:3: ( (lv_concept_2_0= ruleSimpleObservableSemantics ) )
        {
        // InternalKim.g:14793:3: ( (lv_concept_2_0= ruleSimpleObservableSemantics ) )
        // InternalKim.g:14794:4: (lv_concept_2_0= ruleSimpleObservableSemantics )
        {
        // InternalKim.g:14794:4: (lv_concept_2_0= ruleSimpleObservableSemantics )
        // InternalKim.g:14795:5: lv_concept_2_0= ruleSimpleObservableSemantics
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getConceptSimpleObservableSemanticsParserRuleCall_2_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_concept_2_0=ruleSimpleObservableSemantics();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred561_InternalKim

    // $ANTLR start synpred562_InternalKim
    public final void synpred562_InternalKim_fragment() throws RecognitionException {   
        EObject lv_function_3_0 = null;


        // InternalKim.g:14813:3: ( ( (lv_function_3_0= ruleFunction ) ) )
        // InternalKim.g:14813:3: ( (lv_function_3_0= ruleFunction ) )
        {
        // InternalKim.g:14813:3: ( (lv_function_3_0= ruleFunction ) )
        // InternalKim.g:14814:4: (lv_function_3_0= ruleFunction )
        {
        // InternalKim.g:14814:4: (lv_function_3_0= ruleFunction )
        // InternalKim.g:14815:5: lv_function_3_0= ruleFunction
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getFunctionFunctionParserRuleCall_3_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_function_3_0=ruleFunction();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred562_InternalKim

    // $ANTLR start synpred563_InternalKim
    public final void synpred563_InternalKim_fragment() throws RecognitionException {   
        EObject lv_date_4_0 = null;


        // InternalKim.g:14833:3: ( ( (lv_date_4_0= ruleDate ) ) )
        // InternalKim.g:14833:3: ( (lv_date_4_0= ruleDate ) )
        {
        // InternalKim.g:14833:3: ( (lv_date_4_0= ruleDate ) )
        // InternalKim.g:14834:4: (lv_date_4_0= ruleDate )
        {
        // InternalKim.g:14834:4: (lv_date_4_0= ruleDate )
        // InternalKim.g:14835:5: lv_date_4_0= ruleDate
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getDateDateParserRuleCall_4_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_date_4_0=ruleDate();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred563_InternalKim

    // $ANTLR start synpred564_InternalKim
    public final void synpred564_InternalKim_fragment() throws RecognitionException {   
        EObject lv_literal_5_0 = null;


        // InternalKim.g:14853:3: ( ( (lv_literal_5_0= ruleLiteral ) ) )
        // InternalKim.g:14853:3: ( (lv_literal_5_0= ruleLiteral ) )
        {
        // InternalKim.g:14853:3: ( (lv_literal_5_0= ruleLiteral ) )
        // InternalKim.g:14854:4: (lv_literal_5_0= ruleLiteral )
        {
        // InternalKim.g:14854:4: (lv_literal_5_0= ruleLiteral )
        // InternalKim.g:14855:5: lv_literal_5_0= ruleLiteral
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getLiteralLiteralParserRuleCall_5_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_literal_5_0=ruleLiteral();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred564_InternalKim

    // $ANTLR start synpred566_InternalKim
    public final void synpred566_InternalKim_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken lv_id_7_1 = null;


        // InternalKim.g:14895:6: (lv_id_7_1= rulePathName )
        // InternalKim.g:14895:6: lv_id_7_1= rulePathName
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getIdPathNameParserRuleCall_7_0_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_id_7_1=rulePathName();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred566_InternalKim

    // $ANTLR start synpred567_InternalKim
    public final void synpred567_InternalKim_fragment() throws RecognitionException {   
        Token lv_id_7_2=null;

        // InternalKim.g:14911:6: (lv_id_7_2= RULE_LOWERCASE_ID )
        // InternalKim.g:14911:6: lv_id_7_2= RULE_LOWERCASE_ID
        {
        lv_id_7_2=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred567_InternalKim

    // $ANTLR start synpred568_InternalKim
    public final void synpred568_InternalKim_fragment() throws RecognitionException {   
        Token lv_id_7_3=null;

        // InternalKim.g:14926:6: (lv_id_7_3= RULE_UPPERCASE_ID )
        // InternalKim.g:14926:6: lv_id_7_3= RULE_UPPERCASE_ID
        {
        lv_id_7_3=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred568_InternalKim

    // $ANTLR start synpred569_InternalKim
    public final void synpred569_InternalKim_fragment() throws RecognitionException {   
        Token lv_id_7_2=null;
        Token lv_id_7_3=null;
        Token lv_id_7_4=null;
        AntlrDatatypeRuleToken lv_id_7_1 = null;


        // InternalKim.g:14892:3: ( ( ( (lv_id_7_1= rulePathName | lv_id_7_2= RULE_LOWERCASE_ID | lv_id_7_3= RULE_UPPERCASE_ID | lv_id_7_4= RULE_CAMELCASE_ID ) ) ) )
        // InternalKim.g:14892:3: ( ( (lv_id_7_1= rulePathName | lv_id_7_2= RULE_LOWERCASE_ID | lv_id_7_3= RULE_UPPERCASE_ID | lv_id_7_4= RULE_CAMELCASE_ID ) ) )
        {
        // InternalKim.g:14892:3: ( ( (lv_id_7_1= rulePathName | lv_id_7_2= RULE_LOWERCASE_ID | lv_id_7_3= RULE_UPPERCASE_ID | lv_id_7_4= RULE_CAMELCASE_ID ) ) )
        // InternalKim.g:14893:4: ( (lv_id_7_1= rulePathName | lv_id_7_2= RULE_LOWERCASE_ID | lv_id_7_3= RULE_UPPERCASE_ID | lv_id_7_4= RULE_CAMELCASE_ID ) )
        {
        // InternalKim.g:14893:4: ( (lv_id_7_1= rulePathName | lv_id_7_2= RULE_LOWERCASE_ID | lv_id_7_3= RULE_UPPERCASE_ID | lv_id_7_4= RULE_CAMELCASE_ID ) )
        // InternalKim.g:14894:5: (lv_id_7_1= rulePathName | lv_id_7_2= RULE_LOWERCASE_ID | lv_id_7_3= RULE_UPPERCASE_ID | lv_id_7_4= RULE_CAMELCASE_ID )
        {
        // InternalKim.g:14894:5: (lv_id_7_1= rulePathName | lv_id_7_2= RULE_LOWERCASE_ID | lv_id_7_3= RULE_UPPERCASE_ID | lv_id_7_4= RULE_CAMELCASE_ID )
        int alt623=4;
        switch ( input.LA(1) ) {
        case RULE_LOWERCASE_ID:
            {
            int LA623_1 = input.LA(2);

            if ( (synpred566_InternalKim()) ) {
                alt623=1;
            }
            else if ( (synpred567_InternalKim()) ) {
                alt623=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 623, 1, input);

                throw nvae;
            }
            }
            break;
        case RULE_UPPERCASE_ID:
            {
            int LA623_2 = input.LA(2);

            if ( (synpred566_InternalKim()) ) {
                alt623=1;
            }
            else if ( (synpred568_InternalKim()) ) {
                alt623=3;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 623, 2, input);

                throw nvae;
            }
            }
            break;
        case RULE_LOWERCASE_DASHID:
            {
            alt623=1;
            }
            break;
        case RULE_CAMELCASE_ID:
            {
            alt623=4;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 623, 0, input);

            throw nvae;
        }

        switch (alt623) {
            case 1 :
                // InternalKim.g:14895:6: lv_id_7_1= rulePathName
                {
                pushFollow(FOLLOW_2);
                lv_id_7_1=rulePathName();

                state._fsp--;
                if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:14911:6: lv_id_7_2= RULE_LOWERCASE_ID
                {
                lv_id_7_2=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 3 :
                // InternalKim.g:14926:6: lv_id_7_3= RULE_UPPERCASE_ID
                {
                lv_id_7_3=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 4 :
                // InternalKim.g:14941:6: lv_id_7_4= RULE_CAMELCASE_ID
                {
                lv_id_7_4=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }
    }
    // $ANTLR end synpred569_InternalKim

    // $ANTLR start synpred571_InternalKim
    public final void synpred571_InternalKim_fragment() throws RecognitionException {   
        EObject lv_quantity_9_0 = null;


        // InternalKim.g:14979:3: ( ( (lv_quantity_9_0= ruleQuantity ) ) )
        // InternalKim.g:14979:3: ( (lv_quantity_9_0= ruleQuantity ) )
        {
        // InternalKim.g:14979:3: ( (lv_quantity_9_0= ruleQuantity ) )
        // InternalKim.g:14980:4: (lv_quantity_9_0= ruleQuantity )
        {
        // InternalKim.g:14980:4: (lv_quantity_9_0= ruleQuantity )
        // InternalKim.g:14981:5: lv_quantity_9_0= ruleQuantity
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getQuantityQuantityParserRuleCall_9_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_quantity_9_0=ruleQuantity();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred571_InternalKim

    // $ANTLR start synpred573_InternalKim
    public final void synpred573_InternalKim_fragment() throws RecognitionException {   
        EObject lv_literal_0_0 = null;


        // InternalKim.g:15073:3: ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) )
        // InternalKim.g:15073:3: ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) )
        {
        // InternalKim.g:15073:3: ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) )
        // InternalKim.g:15074:4: (lv_literal_0_0= ruleLiteralOrIdOrComma )
        {
        // InternalKim.g:15074:4: (lv_literal_0_0= ruleLiteralOrIdOrComma )
        // InternalKim.g:15075:5: lv_literal_0_0= ruleLiteralOrIdOrComma
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getValueAccess().getLiteralLiteralOrIdOrCommaParserRuleCall_0_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_literal_0_0=ruleLiteralOrIdOrComma();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred573_InternalKim

    // $ANTLR start synpred574_InternalKim
    public final void synpred574_InternalKim_fragment() throws RecognitionException {   
        EObject lv_function_1_0 = null;


        // InternalKim.g:15093:3: ( ( (lv_function_1_0= ruleFunction ) ) )
        // InternalKim.g:15093:3: ( (lv_function_1_0= ruleFunction ) )
        {
        // InternalKim.g:15093:3: ( (lv_function_1_0= ruleFunction ) )
        // InternalKim.g:15094:4: (lv_function_1_0= ruleFunction )
        {
        // InternalKim.g:15094:4: (lv_function_1_0= ruleFunction )
        // InternalKim.g:15095:5: lv_function_1_0= ruleFunction
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getValueAccess().getFunctionFunctionParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_function_1_0=ruleFunction();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred574_InternalKim

    // $ANTLR start synpred579_InternalKim
    public final void synpred579_InternalKim_fragment() throws RecognitionException {   
        Token lv_id_5_1=null;
        Token lv_id_5_2=null;
        Token lv_id_5_3=null;

        // InternalKim.g:15158:3: ( ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) ) )
        // InternalKim.g:15158:3: ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) )
        {
        // InternalKim.g:15158:3: ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) )
        // InternalKim.g:15159:4: ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) )
        {
        // InternalKim.g:15159:4: ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) )
        // InternalKim.g:15160:5: (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID )
        {
        // InternalKim.g:15160:5: (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID )
        int alt625=3;
        switch ( input.LA(1) ) {
        case RULE_LOWERCASE_ID:
            {
            alt625=1;
            }
            break;
        case RULE_UPPERCASE_ID:
            {
            alt625=2;
            }
            break;
        case RULE_CAMELCASE_ID:
            {
            alt625=3;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 625, 0, input);

            throw nvae;
        }

        switch (alt625) {
            case 1 :
                // InternalKim.g:15161:6: lv_id_5_1= RULE_LOWERCASE_ID
                {
                lv_id_5_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:15176:6: lv_id_5_2= RULE_UPPERCASE_ID
                {
                lv_id_5_2=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 3 :
                // InternalKim.g:15191:6: lv_id_5_3= RULE_CAMELCASE_ID
                {
                lv_id_5_3=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }
    }
    // $ANTLR end synpred579_InternalKim

    // $ANTLR start synpred582_InternalKim
    public final void synpred582_InternalKim_fragment() throws RecognitionException {   
        EObject lv_quantity_8_0 = null;


        // InternalKim.g:15249:3: ( ( (lv_quantity_8_0= ruleQuantity ) ) )
        // InternalKim.g:15249:3: ( (lv_quantity_8_0= ruleQuantity ) )
        {
        // InternalKim.g:15249:3: ( (lv_quantity_8_0= ruleQuantity ) )
        // InternalKim.g:15250:4: (lv_quantity_8_0= ruleQuantity )
        {
        // InternalKim.g:15250:4: (lv_quantity_8_0= ruleQuantity )
        // InternalKim.g:15251:5: lv_quantity_8_0= ruleQuantity
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getValueAccess().getQuantityQuantityParserRuleCall_6_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_quantity_8_0=ruleQuantity();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred582_InternalKim

    // $ANTLR start synpred583_InternalKim
    public final void synpred583_InternalKim_fragment() throws RecognitionException {   
        EObject lv_date_9_0 = null;


        // InternalKim.g:15269:3: ( ( (lv_date_9_0= ruleDate ) ) )
        // InternalKim.g:15269:3: ( (lv_date_9_0= ruleDate ) )
        {
        // InternalKim.g:15269:3: ( (lv_date_9_0= ruleDate ) )
        // InternalKim.g:15270:4: (lv_date_9_0= ruleDate )
        {
        // InternalKim.g:15270:4: (lv_date_9_0= ruleDate )
        // InternalKim.g:15271:5: lv_date_9_0= ruleDate
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getValueAccess().getDateDateParserRuleCall_7_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_date_9_0=ruleDate();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred583_InternalKim

    // $ANTLR start synpred586_InternalKim
    public final void synpred586_InternalKim_fragment() throws RecognitionException {   
        EObject lv_concept_1_0 = null;


        // InternalKim.g:15362:3: ( ( (lv_concept_1_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:15362:3: ( (lv_concept_1_0= ruleConceptDeclaration ) )
        {
        // InternalKim.g:15362:3: ( (lv_concept_1_0= ruleConceptDeclaration ) )
        // InternalKim.g:15363:4: (lv_concept_1_0= ruleConceptDeclaration )
        {
        // InternalKim.g:15363:4: (lv_concept_1_0= ruleConceptDeclaration )
        // InternalKim.g:15364:5: lv_concept_1_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getLiteralValueWithConceptAccess().getConceptConceptDeclarationParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_concept_1_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred586_InternalKim

    // $ANTLR start synpred632_InternalKim
    public final void synpred632_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        EObject lv_value_0_0 = null;


        // InternalKim.g:16027:4: ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )
        // InternalKim.g:16027:4: ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as'
        {
        // InternalKim.g:16027:4: ( (lv_value_0_0= ruleLiteralValueWithConcept ) )
        // InternalKim.g:16028:5: (lv_value_0_0= ruleLiteralValueWithConcept )
        {
        // InternalKim.g:16028:5: (lv_value_0_0= ruleLiteralValueWithConcept )
        // InternalKim.g:16029:6: lv_value_0_0= ruleLiteralValueWithConcept
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getValueLiteralValueWithConceptParserRuleCall_0_0_0());
          					
        }
        pushFollow(FOLLOW_11);
        lv_value_0_0=ruleLiteralValueWithConcept();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_1=(Token)match(input,25,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred632_InternalKim

    // $ANTLR start synpred634_InternalKim
    public final void synpred634_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_5=null;
        Token otherlv_6=null;
        AntlrDatatypeRuleToken lv_accordingTo_7_0 = null;


        // InternalKim.g:16091:4: ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) )
        // InternalKim.g:16091:4: ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) )
        {
        // InternalKim.g:16091:4: ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) )
        // InternalKim.g:16092:5: {...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred634_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 0)");
        }
        // InternalKim.g:16092:126: ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) )
        // InternalKim.g:16093:6: ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 0);
        // InternalKim.g:16096:9: ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) )
        // InternalKim.g:16096:10: {...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred634_InternalKim", "true");
        }
        // InternalKim.g:16096:19: (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) )
        // InternalKim.g:16096:20: otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) )
        {
        otherlv_5=(Token)match(input,35,FOLLOW_25); if (state.failed) return ;
        otherlv_6=(Token)match(input,36,FOLLOW_26); if (state.failed) return ;
        // InternalKim.g:16104:9: ( (lv_accordingTo_7_0= rulePropertyId ) )
        // InternalKim.g:16105:10: (lv_accordingTo_7_0= rulePropertyId )
        {
        // InternalKim.g:16105:10: (lv_accordingTo_7_0= rulePropertyId )
        // InternalKim.g:16106:11: lv_accordingTo_7_0= rulePropertyId
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getAccordingToPropertyIdParserRuleCall_3_0_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_accordingTo_7_0=rulePropertyId();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred634_InternalKim

    // $ANTLR start synpred637_InternalKim
    public final void synpred637_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_8=null;
        Token otherlv_11=null;
        EObject lv_unit_9_0 = null;

        EObject lv_currency_10_0 = null;

        EObject lv_unit_12_0 = null;


        // InternalKim.g:16129:4: ( ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) )
        // InternalKim.g:16129:4: ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) )
        {
        // InternalKim.g:16129:4: ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) )
        // InternalKim.g:16130:5: {...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred637_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 1)");
        }
        // InternalKim.g:16130:126: ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) )
        // InternalKim.g:16131:6: ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 1);
        // InternalKim.g:16134:9: ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) )
        // InternalKim.g:16134:10: {...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred637_InternalKim", "true");
        }
        // InternalKim.g:16134:19: ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) )
        int alt628=2;
        int LA628_0 = input.LA(1);

        if ( (LA628_0==48) ) {
            alt628=1;
        }
        else if ( (LA628_0==114) ) {
            alt628=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 628, 0, input);

            throw nvae;
        }
        switch (alt628) {
            case 1 :
                // InternalKim.g:16134:20: (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) )
                {
                // InternalKim.g:16134:20: (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) )
                // InternalKim.g:16135:10: otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) )
                {
                otherlv_8=(Token)match(input,48,FOLLOW_101); if (state.failed) return ;
                // InternalKim.g:16139:10: ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) )
                int alt627=2;
                int LA627_0 = input.LA(1);

                if ( (LA627_0==EOF||LA627_0==RULE_LOWERCASE_ID||LA627_0==RULE_CAMELCASE_ID||LA627_0==RULE_BACKCASE_ID||LA627_0==38||LA627_0==40||LA627_0==108||LA627_0==259) ) {
                    alt627=1;
                }
                else if ( (LA627_0==RULE_UPPERCASE_ID) ) {
                    int LA627_2 = input.LA(2);

                    if ( (LA627_2==EOF||LA627_2==40||LA627_2==108||LA627_2==259) ) {
                        alt627=1;
                    }
                    else if ( (LA627_2==250) ) {
                        alt627=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 627, 2, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 627, 0, input);

                    throw nvae;
                }
                switch (alt627) {
                    case 1 :
                        // InternalKim.g:16140:11: ( (lv_unit_9_0= ruleUnit ) )
                        {
                        // InternalKim.g:16140:11: ( (lv_unit_9_0= ruleUnit ) )
                        // InternalKim.g:16141:12: (lv_unit_9_0= ruleUnit )
                        {
                        // InternalKim.g:16141:12: (lv_unit_9_0= ruleUnit )
                        // InternalKim.g:16142:13: lv_unit_9_0= ruleUnit
                        {
                        if ( state.backtracking==0 ) {

                          													newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getUnitUnitParserRuleCall_3_1_0_1_0_0());
                          												
                        }
                        pushFollow(FOLLOW_2);
                        lv_unit_9_0=ruleUnit();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;
                    case 2 :
                        // InternalKim.g:16160:11: ( (lv_currency_10_0= ruleCurrency ) )
                        {
                        // InternalKim.g:16160:11: ( (lv_currency_10_0= ruleCurrency ) )
                        // InternalKim.g:16161:12: (lv_currency_10_0= ruleCurrency )
                        {
                        // InternalKim.g:16161:12: (lv_currency_10_0= ruleCurrency )
                        // InternalKim.g:16162:13: lv_currency_10_0= ruleCurrency
                        {
                        if ( state.backtracking==0 ) {

                          													newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getCurrencyCurrencyParserRuleCall_3_1_0_1_1_0());
                          												
                        }
                        pushFollow(FOLLOW_2);
                        lv_currency_10_0=ruleCurrency();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:16182:9: (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) )
                {
                // InternalKim.g:16182:9: (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) )
                // InternalKim.g:16183:10: otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) )
                {
                otherlv_11=(Token)match(input,114,FOLLOW_208); if (state.failed) return ;
                // InternalKim.g:16187:10: ( (lv_unit_12_0= ruleUnit ) )
                // InternalKim.g:16188:11: (lv_unit_12_0= ruleUnit )
                {
                // InternalKim.g:16188:11: (lv_unit_12_0= ruleUnit )
                // InternalKim.g:16189:12: lv_unit_12_0= ruleUnit
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getUnitUnitParserRuleCall_3_1_1_1_0());
                  											
                }
                pushFollow(FOLLOW_2);
                lv_unit_12_0=ruleUnit();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }


                }
                break;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred637_InternalKim

    // $ANTLR start synpred638_InternalKim
    public final void synpred638_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_14=null;
        EObject lv_from_13_0 = null;

        EObject lv_to_15_0 = null;


        // InternalKim.g:16213:4: ( ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) )
        // InternalKim.g:16213:4: ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) )
        {
        // InternalKim.g:16213:4: ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) )
        // InternalKim.g:16214:5: {...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred638_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2)");
        }
        // InternalKim.g:16214:126: ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) )
        // InternalKim.g:16215:6: ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2);
        // InternalKim.g:16218:9: ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) )
        // InternalKim.g:16218:10: {...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred638_InternalKim", "true");
        }
        // InternalKim.g:16218:19: ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) )
        // InternalKim.g:16218:20: ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) )
        {
        // InternalKim.g:16218:20: ( (lv_from_13_0= ruleNumber ) )
        // InternalKim.g:16219:10: (lv_from_13_0= ruleNumber )
        {
        // InternalKim.g:16219:10: (lv_from_13_0= ruleNumber )
        // InternalKim.g:16220:11: lv_from_13_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getFromNumberParserRuleCall_3_2_0_0());
          										
        }
        pushFollow(FOLLOW_25);
        lv_from_13_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_14=(Token)match(input,36,FOLLOW_38); if (state.failed) return ;
        // InternalKim.g:16241:9: ( (lv_to_15_0= ruleNumber ) )
        // InternalKim.g:16242:10: (lv_to_15_0= ruleNumber )
        {
        // InternalKim.g:16242:10: (lv_to_15_0= ruleNumber )
        // InternalKim.g:16243:11: lv_to_15_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getToNumberParserRuleCall_3_2_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_to_15_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred638_InternalKim

    // $ANTLR start synpred639_InternalKim
    public final void synpred639_InternalKim_fragment() throws RecognitionException {   
        EObject lv_valueOperators_17_0 = null;


        // InternalKim.g:16291:10: ( (lv_valueOperators_17_0= ruleValueOperator ) )
        // InternalKim.g:16291:10: (lv_valueOperators_17_0= ruleValueOperator )
        {
        // InternalKim.g:16291:10: (lv_valueOperators_17_0= ruleValueOperator )
        // InternalKim.g:16292:11: lv_valueOperators_17_0= ruleValueOperator
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_3_3_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_valueOperators_17_0=ruleValueOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred639_InternalKim

    // $ANTLR start synpred640_InternalKim
    public final void synpred640_InternalKim_fragment() throws RecognitionException {   
        EObject lv_valueOperators_16_0 = null;

        EObject lv_valueOperators_17_0 = null;


        // InternalKim.g:16266:4: ( ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) )
        // InternalKim.g:16266:4: ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) )
        {
        // InternalKim.g:16266:4: ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) )
        // InternalKim.g:16267:5: {...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred640_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3)");
        }
        // InternalKim.g:16267:126: ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) )
        // InternalKim.g:16268:6: ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3);
        // InternalKim.g:16271:9: ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) )
        // InternalKim.g:16271:10: {...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred640_InternalKim", "true");
        }
        // InternalKim.g:16271:19: ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* )
        // InternalKim.g:16271:20: ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )*
        {
        // InternalKim.g:16271:20: ( (lv_valueOperators_16_0= ruleValueOperator ) )
        // InternalKim.g:16272:10: (lv_valueOperators_16_0= ruleValueOperator )
        {
        // InternalKim.g:16272:10: (lv_valueOperators_16_0= ruleValueOperator )
        // InternalKim.g:16273:11: lv_valueOperators_16_0= ruleValueOperator
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_3_3_0_0());
          										
        }
        pushFollow(FOLLOW_209);
        lv_valueOperators_16_0=ruleValueOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:16290:9: ( (lv_valueOperators_17_0= ruleValueOperator ) )*
        loop629:
        do {
            int alt629=2;
            int LA629_0 = input.LA(1);

            if ( (LA629_0==55||(LA629_0>=76 && LA629_0<=89)||(LA629_0>=119 && LA629_0<=122)) ) {
                alt629=1;
            }


            switch (alt629) {
        	case 1 :
        	    // InternalKim.g:16291:10: (lv_valueOperators_17_0= ruleValueOperator )
        	    {
        	    // InternalKim.g:16291:10: (lv_valueOperators_17_0= ruleValueOperator )
        	    // InternalKim.g:16292:11: lv_valueOperators_17_0= ruleValueOperator
        	    {
        	    if ( state.backtracking==0 ) {

        	      											newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_3_3_1_0());
        	      										
        	    }
        	    pushFollow(FOLLOW_209);
        	    lv_valueOperators_17_0=ruleValueOperator();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop629;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred640_InternalKim

    // $ANTLR start synpred642_InternalKim
    public final void synpred642_InternalKim_fragment() throws RecognitionException {   
        Token lv_optional_18_0=null;
        Token otherlv_19=null;

        // InternalKim.g:16315:4: ( ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) ) )
        // InternalKim.g:16315:4: ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) )
        {
        // InternalKim.g:16315:4: ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) )
        // InternalKim.g:16316:5: {...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 4) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred642_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 4)");
        }
        // InternalKim.g:16316:126: ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) )
        // InternalKim.g:16317:6: ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 4);
        // InternalKim.g:16320:9: ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) )
        // InternalKim.g:16320:10: {...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred642_InternalKim", "true");
        }
        // InternalKim.g:16320:19: ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' )
        int alt630=2;
        int LA630_0 = input.LA(1);

        if ( (LA630_0==115) ) {
            alt630=1;
        }
        else if ( (LA630_0==116) ) {
            alt630=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 630, 0, input);

            throw nvae;
        }
        switch (alt630) {
            case 1 :
                // InternalKim.g:16320:20: ( (lv_optional_18_0= 'optional' ) )
                {
                // InternalKim.g:16320:20: ( (lv_optional_18_0= 'optional' ) )
                // InternalKim.g:16321:10: (lv_optional_18_0= 'optional' )
                {
                // InternalKim.g:16321:10: (lv_optional_18_0= 'optional' )
                // InternalKim.g:16322:11: lv_optional_18_0= 'optional'
                {
                lv_optional_18_0=(Token)match(input,115,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:16335:9: otherlv_19= 'required'
                {
                otherlv_19=(Token)match(input,116,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred642_InternalKim

    // $ANTLR start synpred644_InternalKim
    public final void synpred644_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_20=null;
        Token lv_name_21_1=null;
        Token lv_name_21_2=null;

        // InternalKim.g:16345:4: ( ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )
        // InternalKim.g:16345:4: ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) )
        {
        // InternalKim.g:16345:4: ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) )
        // InternalKim.g:16346:5: {...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred644_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 5)");
        }
        // InternalKim.g:16346:126: ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) )
        // InternalKim.g:16347:6: ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 5);
        // InternalKim.g:16350:9: ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) )
        // InternalKim.g:16350:10: {...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred644_InternalKim", "true");
        }
        // InternalKim.g:16350:19: (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) )
        // InternalKim.g:16350:20: otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) )
        {
        otherlv_20=(Token)match(input,117,FOLLOW_46); if (state.failed) return ;
        // InternalKim.g:16354:9: ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) )
        // InternalKim.g:16355:10: ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) )
        {
        // InternalKim.g:16355:10: ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) )
        // InternalKim.g:16356:11: (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING )
        {
        // InternalKim.g:16356:11: (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING )
        int alt631=2;
        int LA631_0 = input.LA(1);

        if ( (LA631_0==RULE_LOWERCASE_ID) ) {
            alt631=1;
        }
        else if ( (LA631_0==RULE_STRING) ) {
            alt631=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 631, 0, input);

            throw nvae;
        }
        switch (alt631) {
            case 1 :
                // InternalKim.g:16357:12: lv_name_21_1= RULE_LOWERCASE_ID
                {
                lv_name_21_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:16372:12: lv_name_21_2= RULE_STRING
                {
                lv_name_21_2=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred644_InternalKim

    // $ANTLR start synpred645_InternalKim
    public final void synpred645_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        EObject lv_value_0_0 = null;


        // InternalKim.g:16435:4: ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )
        // InternalKim.g:16435:4: ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as'
        {
        // InternalKim.g:16435:4: ( (lv_value_0_0= ruleLiteralValueWithConcept ) )
        // InternalKim.g:16436:5: (lv_value_0_0= ruleLiteralValueWithConcept )
        {
        // InternalKim.g:16436:5: (lv_value_0_0= ruleLiteralValueWithConcept )
        // InternalKim.g:16437:6: lv_value_0_0= ruleLiteralValueWithConcept
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getValueLiteralValueWithConceptParserRuleCall_0_0_0());
          					
        }
        pushFollow(FOLLOW_11);
        lv_value_0_0=ruleLiteralValueWithConcept();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_1=(Token)match(input,25,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred645_InternalKim

    // $ANTLR start synpred647_InternalKim
    public final void synpred647_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_5=null;
        Token otherlv_6=null;
        AntlrDatatypeRuleToken lv_accordingTo_7_0 = null;


        // InternalKim.g:16499:4: ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) )
        // InternalKim.g:16499:4: ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) )
        {
        // InternalKim.g:16499:4: ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) )
        // InternalKim.g:16500:5: {...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred647_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 0)");
        }
        // InternalKim.g:16500:137: ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) )
        // InternalKim.g:16501:6: ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 0);
        // InternalKim.g:16504:9: ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) )
        // InternalKim.g:16504:10: {...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred647_InternalKim", "true");
        }
        // InternalKim.g:16504:19: (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) )
        // InternalKim.g:16504:20: otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) )
        {
        otherlv_5=(Token)match(input,35,FOLLOW_25); if (state.failed) return ;
        otherlv_6=(Token)match(input,36,FOLLOW_26); if (state.failed) return ;
        // InternalKim.g:16512:9: ( (lv_accordingTo_7_0= rulePropertyId ) )
        // InternalKim.g:16513:10: (lv_accordingTo_7_0= rulePropertyId )
        {
        // InternalKim.g:16513:10: (lv_accordingTo_7_0= rulePropertyId )
        // InternalKim.g:16514:11: lv_accordingTo_7_0= rulePropertyId
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getAccordingToPropertyIdParserRuleCall_3_0_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_accordingTo_7_0=rulePropertyId();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred647_InternalKim

    // $ANTLR start synpred650_InternalKim
    public final void synpred650_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_8=null;
        Token otherlv_11=null;
        EObject lv_unit_9_0 = null;

        EObject lv_currency_10_0 = null;

        EObject lv_unit_12_0 = null;


        // InternalKim.g:16537:4: ( ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) )
        // InternalKim.g:16537:4: ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) )
        {
        // InternalKim.g:16537:4: ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) )
        // InternalKim.g:16538:5: {...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred650_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 1)");
        }
        // InternalKim.g:16538:137: ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) )
        // InternalKim.g:16539:6: ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 1);
        // InternalKim.g:16542:9: ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) )
        // InternalKim.g:16542:10: {...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred650_InternalKim", "true");
        }
        // InternalKim.g:16542:19: ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) )
        int alt634=2;
        int LA634_0 = input.LA(1);

        if ( (LA634_0==48) ) {
            alt634=1;
        }
        else if ( (LA634_0==114) ) {
            alt634=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 634, 0, input);

            throw nvae;
        }
        switch (alt634) {
            case 1 :
                // InternalKim.g:16542:20: (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) )
                {
                // InternalKim.g:16542:20: (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) )
                // InternalKim.g:16543:10: otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) )
                {
                otherlv_8=(Token)match(input,48,FOLLOW_101); if (state.failed) return ;
                // InternalKim.g:16547:10: ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) )
                int alt633=2;
                int LA633_0 = input.LA(1);

                if ( (LA633_0==EOF||LA633_0==RULE_LOWERCASE_ID||LA633_0==RULE_CAMELCASE_ID||LA633_0==RULE_BACKCASE_ID||LA633_0==38||LA633_0==40||LA633_0==108||LA633_0==259) ) {
                    alt633=1;
                }
                else if ( (LA633_0==RULE_UPPERCASE_ID) ) {
                    int LA633_2 = input.LA(2);

                    if ( (LA633_2==EOF||LA633_2==40||LA633_2==108||LA633_2==259) ) {
                        alt633=1;
                    }
                    else if ( (LA633_2==250) ) {
                        alt633=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 633, 2, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 633, 0, input);

                    throw nvae;
                }
                switch (alt633) {
                    case 1 :
                        // InternalKim.g:16548:11: ( (lv_unit_9_0= ruleUnit ) )
                        {
                        // InternalKim.g:16548:11: ( (lv_unit_9_0= ruleUnit ) )
                        // InternalKim.g:16549:12: (lv_unit_9_0= ruleUnit )
                        {
                        // InternalKim.g:16549:12: (lv_unit_9_0= ruleUnit )
                        // InternalKim.g:16550:13: lv_unit_9_0= ruleUnit
                        {
                        if ( state.backtracking==0 ) {

                          													newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnitUnitParserRuleCall_3_1_0_1_0_0());
                          												
                        }
                        pushFollow(FOLLOW_2);
                        lv_unit_9_0=ruleUnit();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;
                    case 2 :
                        // InternalKim.g:16568:11: ( (lv_currency_10_0= ruleCurrency ) )
                        {
                        // InternalKim.g:16568:11: ( (lv_currency_10_0= ruleCurrency ) )
                        // InternalKim.g:16569:12: (lv_currency_10_0= ruleCurrency )
                        {
                        // InternalKim.g:16569:12: (lv_currency_10_0= ruleCurrency )
                        // InternalKim.g:16570:13: lv_currency_10_0= ruleCurrency
                        {
                        if ( state.backtracking==0 ) {

                          													newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getCurrencyCurrencyParserRuleCall_3_1_0_1_1_0());
                          												
                        }
                        pushFollow(FOLLOW_2);
                        lv_currency_10_0=ruleCurrency();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:16590:9: (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) )
                {
                // InternalKim.g:16590:9: (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) )
                // InternalKim.g:16591:10: otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) )
                {
                otherlv_11=(Token)match(input,114,FOLLOW_208); if (state.failed) return ;
                // InternalKim.g:16595:10: ( (lv_unit_12_0= ruleUnit ) )
                // InternalKim.g:16596:11: (lv_unit_12_0= ruleUnit )
                {
                // InternalKim.g:16596:11: (lv_unit_12_0= ruleUnit )
                // InternalKim.g:16597:12: lv_unit_12_0= ruleUnit
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnitUnitParserRuleCall_3_1_1_1_0());
                  											
                }
                pushFollow(FOLLOW_2);
                lv_unit_12_0=ruleUnit();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }


                }
                break;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred650_InternalKim

    // $ANTLR start synpred651_InternalKim
    public final void synpred651_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_14=null;
        EObject lv_from_13_0 = null;

        EObject lv_to_15_0 = null;


        // InternalKim.g:16621:4: ( ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) )
        // InternalKim.g:16621:4: ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) )
        {
        // InternalKim.g:16621:4: ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) )
        // InternalKim.g:16622:5: {...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred651_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2)");
        }
        // InternalKim.g:16622:137: ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) )
        // InternalKim.g:16623:6: ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2);
        // InternalKim.g:16626:9: ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) )
        // InternalKim.g:16626:10: {...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred651_InternalKim", "true");
        }
        // InternalKim.g:16626:19: ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) )
        // InternalKim.g:16626:20: ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) )
        {
        // InternalKim.g:16626:20: ( (lv_from_13_0= ruleNumber ) )
        // InternalKim.g:16627:10: (lv_from_13_0= ruleNumber )
        {
        // InternalKim.g:16627:10: (lv_from_13_0= ruleNumber )
        // InternalKim.g:16628:11: lv_from_13_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getFromNumberParserRuleCall_3_2_0_0());
          										
        }
        pushFollow(FOLLOW_25);
        lv_from_13_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_14=(Token)match(input,36,FOLLOW_38); if (state.failed) return ;
        // InternalKim.g:16649:9: ( (lv_to_15_0= ruleNumber ) )
        // InternalKim.g:16650:10: (lv_to_15_0= ruleNumber )
        {
        // InternalKim.g:16650:10: (lv_to_15_0= ruleNumber )
        // InternalKim.g:16651:11: lv_to_15_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getToNumberParserRuleCall_3_2_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_to_15_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred651_InternalKim

    // $ANTLR start synpred652_InternalKim
    public final void synpred652_InternalKim_fragment() throws RecognitionException {   
        EObject lv_valueOperators_17_0 = null;


        // InternalKim.g:16699:10: ( (lv_valueOperators_17_0= ruleValueOperator ) )
        // InternalKim.g:16699:10: (lv_valueOperators_17_0= ruleValueOperator )
        {
        // InternalKim.g:16699:10: (lv_valueOperators_17_0= ruleValueOperator )
        // InternalKim.g:16700:11: lv_valueOperators_17_0= ruleValueOperator
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_3_3_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_valueOperators_17_0=ruleValueOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred652_InternalKim

    // $ANTLR start synpred653_InternalKim
    public final void synpred653_InternalKim_fragment() throws RecognitionException {   
        EObject lv_valueOperators_16_0 = null;

        EObject lv_valueOperators_17_0 = null;


        // InternalKim.g:16674:4: ( ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) )
        // InternalKim.g:16674:4: ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) )
        {
        // InternalKim.g:16674:4: ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) )
        // InternalKim.g:16675:5: {...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred653_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3)");
        }
        // InternalKim.g:16675:137: ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) )
        // InternalKim.g:16676:6: ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3);
        // InternalKim.g:16679:9: ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) )
        // InternalKim.g:16679:10: {...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred653_InternalKim", "true");
        }
        // InternalKim.g:16679:19: ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* )
        // InternalKim.g:16679:20: ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )*
        {
        // InternalKim.g:16679:20: ( (lv_valueOperators_16_0= ruleValueOperator ) )
        // InternalKim.g:16680:10: (lv_valueOperators_16_0= ruleValueOperator )
        {
        // InternalKim.g:16680:10: (lv_valueOperators_16_0= ruleValueOperator )
        // InternalKim.g:16681:11: lv_valueOperators_16_0= ruleValueOperator
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_3_3_0_0());
          										
        }
        pushFollow(FOLLOW_209);
        lv_valueOperators_16_0=ruleValueOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:16698:9: ( (lv_valueOperators_17_0= ruleValueOperator ) )*
        loop635:
        do {
            int alt635=2;
            int LA635_0 = input.LA(1);

            if ( (LA635_0==55||(LA635_0>=76 && LA635_0<=89)||(LA635_0>=119 && LA635_0<=122)) ) {
                alt635=1;
            }


            switch (alt635) {
        	case 1 :
        	    // InternalKim.g:16699:10: (lv_valueOperators_17_0= ruleValueOperator )
        	    {
        	    // InternalKim.g:16699:10: (lv_valueOperators_17_0= ruleValueOperator )
        	    // InternalKim.g:16700:11: lv_valueOperators_17_0= ruleValueOperator
        	    {
        	    if ( state.backtracking==0 ) {

        	      											newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_3_3_1_0());
        	      										
        	    }
        	    pushFollow(FOLLOW_209);
        	    lv_valueOperators_17_0=ruleValueOperator();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop635;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred653_InternalKim

    // $ANTLR start synpred666_InternalKim
    public final void synpred666_InternalKim_fragment() throws RecognitionException {   
        EObject lv_root_1_0 = null;


        // InternalKim.g:17101:4: ( (lv_root_1_0= ruleUnitElement ) )
        // InternalKim.g:17101:4: (lv_root_1_0= ruleUnitElement )
        {
        // InternalKim.g:17101:4: (lv_root_1_0= ruleUnitElement )
        // InternalKim.g:17102:5: lv_root_1_0= ruleUnitElement
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getUnitAccess().getRootUnitElementParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_root_1_0=ruleUnitElement();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred666_InternalKim

    // $ANTLR start synpred673_InternalKim
    public final void synpred673_InternalKim_fragment() throws RecognitionException {   
        // InternalKim.g:17297:4: ( ( RULE_INT ) )
        // InternalKim.g:17297:5: ( RULE_INT )
        {
        // InternalKim.g:17297:5: ( RULE_INT )
        // InternalKim.g:17298:5: RULE_INT
        {
        match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred673_InternalKim

    // $ANTLR start synpred674_InternalKim
    public final void synpred674_InternalKim_fragment() throws RecognitionException {   
        // InternalKim.g:17319:4: ( ( 'l' ) )
        // InternalKim.g:17319:5: ( 'l' )
        {
        // InternalKim.g:17319:5: ( 'l' )
        // InternalKim.g:17320:5: 'l'
        {
        match(input,253,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred674_InternalKim

    // $ANTLR start synpred675_InternalKim
    public final void synpred675_InternalKim_fragment() throws RecognitionException {   
        // InternalKim.g:17337:4: ( ( ( ( '.' ) ) ( ( RULE_INT ) ) ) )
        // InternalKim.g:17337:5: ( ( ( '.' ) ) ( ( RULE_INT ) ) )
        {
        // InternalKim.g:17337:5: ( ( ( '.' ) ) ( ( RULE_INT ) ) )
        // InternalKim.g:17338:5: ( ( '.' ) ) ( ( RULE_INT ) )
        {
        // InternalKim.g:17338:5: ( ( '.' ) )
        // InternalKim.g:17339:6: ( '.' )
        {
        // InternalKim.g:17339:6: ( '.' )
        // InternalKim.g:17340:7: '.'
        {
        match(input,109,FOLLOW_78); if (state.failed) return ;

        }


        }

        // InternalKim.g:17343:5: ( ( RULE_INT ) )
        // InternalKim.g:17344:6: ( RULE_INT )
        {
        // InternalKim.g:17344:6: ( RULE_INT )
        // InternalKim.g:17345:7: RULE_INT
        {
        match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred675_InternalKim

    // $ANTLR start synpred679_InternalKim
    public final void synpred679_InternalKim_fragment() throws RecognitionException {   
        // InternalKim.g:17386:4: ( ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) ) )
        // InternalKim.g:17386:5: ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) )
        {
        // InternalKim.g:17386:5: ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) )
        // InternalKim.g:17387:5: ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) )
        {
        // InternalKim.g:17387:5: ( ( ( 'e' | 'E' ) ) )
        // InternalKim.g:17388:6: ( ( 'e' | 'E' ) )
        {
        // InternalKim.g:17388:6: ( ( 'e' | 'E' ) )
        // InternalKim.g:17389:7: ( 'e' | 'E' )
        {
        if ( (input.LA(1)>=254 && input.LA(1)<=255) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }


        }

        // InternalKim.g:17396:5: ( '+' | ( ( '-' ) ) )?
        int alt637=3;
        int LA637_0 = input.LA(1);

        if ( (LA637_0==251) ) {
            alt637=1;
        }
        else if ( (LA637_0==252) ) {
            alt637=2;
        }
        switch (alt637) {
            case 1 :
                // InternalKim.g:17397:6: '+'
                {
                match(input,251,FOLLOW_78); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:17399:6: ( ( '-' ) )
                {
                // InternalKim.g:17399:6: ( ( '-' ) )
                // InternalKim.g:17400:7: ( '-' )
                {
                // InternalKim.g:17400:7: ( '-' )
                // InternalKim.g:17401:8: '-'
                {
                match(input,252,FOLLOW_78); if (state.failed) return ;

                }


                }


                }
                break;

        }

        // InternalKim.g:17405:5: ( ( RULE_INT ) )
        // InternalKim.g:17406:6: ( RULE_INT )
        {
        // InternalKim.g:17406:6: ( RULE_INT )
        // InternalKim.g:17407:7: RULE_INT
        {
        match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred679_InternalKim

    // $ANTLR start synpred690_InternalKim
    public final void synpred690_InternalKim_fragment() throws RecognitionException {   
        Token lv_hour_8_0=null;
        Token otherlv_9=null;
        Token lv_min_10_0=null;
        Token otherlv_11=null;
        Token lv_sec_12_0=null;
        Token otherlv_13=null;
        Token lv_ms_14_0=null;

        // InternalKim.g:17689:4: ( ( (lv_hour_8_0= RULE_INT ) ) otherlv_9= ':' ( (lv_min_10_0= RULE_INT ) ) (otherlv_11= ':' ( (lv_sec_12_0= RULE_INT ) ) (otherlv_13= '.' ( (lv_ms_14_0= RULE_INT ) ) )? )? )
        // InternalKim.g:17689:4: ( (lv_hour_8_0= RULE_INT ) ) otherlv_9= ':' ( (lv_min_10_0= RULE_INT ) ) (otherlv_11= ':' ( (lv_sec_12_0= RULE_INT ) ) (otherlv_13= '.' ( (lv_ms_14_0= RULE_INT ) ) )? )?
        {
        // InternalKim.g:17689:4: ( (lv_hour_8_0= RULE_INT ) )
        // InternalKim.g:17690:5: (lv_hour_8_0= RULE_INT )
        {
        // InternalKim.g:17690:5: (lv_hour_8_0= RULE_INT )
        // InternalKim.g:17691:6: lv_hour_8_0= RULE_INT
        {
        lv_hour_8_0=(Token)match(input,RULE_INT,FOLLOW_82); if (state.failed) return ;

        }


        }

        otherlv_9=(Token)match(input,106,FOLLOW_78); if (state.failed) return ;
        // InternalKim.g:17711:4: ( (lv_min_10_0= RULE_INT ) )
        // InternalKim.g:17712:5: (lv_min_10_0= RULE_INT )
        {
        // InternalKim.g:17712:5: (lv_min_10_0= RULE_INT )
        // InternalKim.g:17713:6: lv_min_10_0= RULE_INT
        {
        lv_min_10_0=(Token)match(input,RULE_INT,FOLLOW_190); if (state.failed) return ;

        }


        }

        // InternalKim.g:17729:4: (otherlv_11= ':' ( (lv_sec_12_0= RULE_INT ) ) (otherlv_13= '.' ( (lv_ms_14_0= RULE_INT ) ) )? )?
        int alt640=2;
        int LA640_0 = input.LA(1);

        if ( (LA640_0==106) ) {
            alt640=1;
        }
        switch (alt640) {
            case 1 :
                // InternalKim.g:17730:5: otherlv_11= ':' ( (lv_sec_12_0= RULE_INT ) ) (otherlv_13= '.' ( (lv_ms_14_0= RULE_INT ) ) )?
                {
                otherlv_11=(Token)match(input,106,FOLLOW_78); if (state.failed) return ;
                // InternalKim.g:17734:5: ( (lv_sec_12_0= RULE_INT ) )
                // InternalKim.g:17735:6: (lv_sec_12_0= RULE_INT )
                {
                // InternalKim.g:17735:6: (lv_sec_12_0= RULE_INT )
                // InternalKim.g:17736:7: lv_sec_12_0= RULE_INT
                {
                lv_sec_12_0=(Token)match(input,RULE_INT,FOLLOW_191); if (state.failed) return ;

                }


                }

                // InternalKim.g:17752:5: (otherlv_13= '.' ( (lv_ms_14_0= RULE_INT ) ) )?
                int alt639=2;
                int LA639_0 = input.LA(1);

                if ( (LA639_0==109) ) {
                    alt639=1;
                }
                switch (alt639) {
                    case 1 :
                        // InternalKim.g:17753:6: otherlv_13= '.' ( (lv_ms_14_0= RULE_INT ) )
                        {
                        otherlv_13=(Token)match(input,109,FOLLOW_78); if (state.failed) return ;
                        // InternalKim.g:17757:6: ( (lv_ms_14_0= RULE_INT ) )
                        // InternalKim.g:17758:7: (lv_ms_14_0= RULE_INT )
                        {
                        // InternalKim.g:17758:7: (lv_ms_14_0= RULE_INT )
                        // InternalKim.g:17759:8: lv_ms_14_0= RULE_INT
                        {
                        lv_ms_14_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;

                        }


                        }


                        }
                        break;

                }


                }
                break;

        }


        }
    }
    // $ANTLR end synpred690_InternalKim

    // $ANTLR start synpred706_InternalKim
    public final void synpred706_InternalKim_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken this_PathName_0 = null;


        // InternalKim.g:18073:4: (this_PathName_0= rulePathName )
        // InternalKim.g:18073:4: this_PathName_0= rulePathName
        {
        if ( state.backtracking==0 ) {

          				newCompositeNode(grammarAccess.getPropertyIdAccess().getPathNameParserRuleCall_0_0());
          			
        }
        pushFollow(FOLLOW_2);
        this_PathName_0=rulePathName();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred706_InternalKim

    // $ANTLR start synpred712_InternalKim
    public final void synpred712_InternalKim_fragment() throws RecognitionException {   
        Token this_LOWERCASE_ID_6=null;

        // InternalKim.g:18184:4: (this_LOWERCASE_ID_6= RULE_LOWERCASE_ID )
        // InternalKim.g:18184:4: this_LOWERCASE_ID_6= RULE_LOWERCASE_ID
        {
        this_LOWERCASE_ID_6=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred712_InternalKim

    // $ANTLR start synpred713_InternalKim
    public final void synpred713_InternalKim_fragment() throws RecognitionException {   
        Token this_UPPERCASE_ID_7=null;

        // InternalKim.g:18192:4: (this_UPPERCASE_ID_7= RULE_UPPERCASE_ID )
        // InternalKim.g:18192:4: this_UPPERCASE_ID_7= RULE_UPPERCASE_ID
        {
        this_UPPERCASE_ID_7=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred713_InternalKim

    // Delegated rules

    public final boolean synpred22_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred22_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred313_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred313_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred65_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred65_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred164_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred164_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred310_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred310_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred317_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred317_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred319_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred319_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred62_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred62_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred20_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred20_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred666_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred666_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred396_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred396_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred586_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred586_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred500_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred500_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred582_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred582_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred393_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred393_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred583_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred583_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred285_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred285_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred427_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred427_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred283_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred283_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred287_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred287_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred284_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred284_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred157_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred157_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred58_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred58_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred271_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred271_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred653_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred653_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred197_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred197_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred198_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred198_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred281_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred281_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred282_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred282_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred547_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred547_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred24_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred24_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred651_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred651_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred99_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred99_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred559_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred559_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred652_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred652_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred13_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred13_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred130_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred130_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred324_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred324_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred325_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred325_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred302_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred302_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred304_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred304_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred153_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred153_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred174_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred174_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred322_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred322_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred326_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred326_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred327_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred327_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred301_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred301_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred305_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred305_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred320_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred320_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred328_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred328_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred329_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred329_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred59_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred59_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred300_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred300_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred307_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred307_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred634_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred634_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred637_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred637_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred679_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred679_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred269_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred269_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred309_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred309_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred402_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred402_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred289_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred289_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred268_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred268_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred639_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred639_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred245_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred245_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred288_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred288_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred425_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred425_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred426_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred426_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred202_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred202_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred638_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred638_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred489_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred489_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred712_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred712_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred466_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred466_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred487_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred487_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred713_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred713_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred205_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred205_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred249_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred249_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred464_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred464_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred486_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred486_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred462_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred462_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred207_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred207_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred442_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred442_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred463_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred463_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred480_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred480_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred460_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred460_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred461_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred461_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred482_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred482_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred335_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred335_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred336_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred336_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred529_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred529_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred640_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred640_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred334_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred334_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred332_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred332_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred5_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred5_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred644_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred644_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred84_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred84_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred566_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred566_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred4_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred4_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred645_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred645_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred564_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred564_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred330_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred330_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred563_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred563_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred647_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred647_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred2_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred2_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred413_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred413_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred81_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred81_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred561_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred561_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred214_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred214_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred257_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred257_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred415_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred415_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred80_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred80_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred562_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred562_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred458_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred458_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred256_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred256_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred222_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred222_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred459_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred459_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred221_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred221_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred210_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred210_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred212_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred212_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred253_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred253_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred255_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred255_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred266_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred266_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred264_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred264_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred297_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred297_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred265_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred265_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred449_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred449_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred251_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred251_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred220_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred220_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred295_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred295_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred263_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred263_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred290_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred290_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred567_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred567_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred675_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred675_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred6_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred6_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred632_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred632_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred79_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred79_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred579_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred579_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred674_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred674_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred568_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred568_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred569_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred569_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred7_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred7_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred642_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred642_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred673_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred673_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred10_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred10_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred12_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred12_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred690_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred690_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred72_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred72_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred650_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred650_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred54_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred54_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred574_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred574_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred550_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred550_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred571_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred571_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred530_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred530_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred119_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred119_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred573_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred573_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred551_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred551_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred478_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred478_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred215_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred215_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred456_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred456_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred499_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred499_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred433_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred433_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred259_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred259_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred498_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred498_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred496_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred496_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred411_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred411_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred475_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred475_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred497_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred497_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred706_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred706_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred218_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred218_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred431_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred431_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred453_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred453_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred492_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred492_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred494_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred494_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred471_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred471_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA1 dfa1 = new DFA1(this);
    protected DFA4 dfa4 = new DFA4(this);
    protected DFA18 dfa18 = new DFA18(this);
    protected DFA17 dfa17 = new DFA17(this);
    protected DFA44 dfa44 = new DFA44(this);
    protected DFA49 dfa49 = new DFA49(this);
    protected DFA48 dfa48 = new DFA48(this);
    protected DFA50 dfa50 = new DFA50(this);
    protected DFA54 dfa54 = new DFA54(this);
    protected DFA63 dfa63 = new DFA63(this);
    protected DFA67 dfa67 = new DFA67(this);
    protected DFA88 dfa88 = new DFA88(this);
    protected DFA95 dfa95 = new DFA95(this);
    protected DFA100 dfa100 = new DFA100(this);
    protected DFA102 dfa102 = new DFA102(this);
    protected DFA120 dfa120 = new DFA120(this);
    protected DFA128 dfa128 = new DFA128(this);
    protected DFA129 dfa129 = new DFA129(this);
    protected DFA149 dfa149 = new DFA149(this);
    protected DFA140 dfa140 = new DFA140(this);
    protected DFA148 dfa148 = new DFA148(this);
    protected DFA150 dfa150 = new DFA150(this);
    protected DFA157 dfa157 = new DFA157(this);
    protected DFA154 dfa154 = new DFA154(this);
    protected DFA162 dfa162 = new DFA162(this);
    protected DFA161 dfa161 = new DFA161(this);
    protected DFA165 dfa165 = new DFA165(this);
    protected DFA164 dfa164 = new DFA164(this);
    protected DFA168 dfa168 = new DFA168(this);
    protected DFA175 dfa175 = new DFA175(this);
    protected DFA172 dfa172 = new DFA172(this);
    protected DFA183 dfa183 = new DFA183(this);
    protected DFA178 dfa178 = new DFA178(this);
    protected DFA177 dfa177 = new DFA177(this);
    protected DFA184 dfa184 = new DFA184(this);
    protected DFA190 dfa190 = new DFA190(this);
    protected DFA189 dfa189 = new DFA189(this);
    protected DFA226 dfa226 = new DFA226(this);
    protected DFA231 dfa231 = new DFA231(this);
    protected DFA232 dfa232 = new DFA232(this);
    protected DFA238 dfa238 = new DFA238(this);
    protected DFA276 dfa276 = new DFA276(this);
    protected DFA275 dfa275 = new DFA275(this);
    protected DFA277 dfa277 = new DFA277(this);
    protected DFA297 dfa297 = new DFA297(this);
    protected DFA298 dfa298 = new DFA298(this);
    protected DFA302 dfa302 = new DFA302(this);
    protected DFA304 dfa304 = new DFA304(this);
    protected DFA313 dfa313 = new DFA313(this);
    protected DFA311 dfa311 = new DFA311(this);
    protected DFA315 dfa315 = new DFA315(this);
    protected DFA318 dfa318 = new DFA318(this);
    protected DFA320 dfa320 = new DFA320(this);
    protected DFA329 dfa329 = new DFA329(this);
    protected DFA336 dfa336 = new DFA336(this);
    protected DFA333 dfa333 = new DFA333(this);
    protected DFA337 dfa337 = new DFA337(this);
    protected DFA342 dfa342 = new DFA342(this);
    protected DFA341 dfa341 = new DFA341(this);
    protected DFA348 dfa348 = new DFA348(this);
    protected DFA387 dfa387 = new DFA387(this);
    protected DFA475 dfa475 = new DFA475(this);
    protected DFA507 dfa507 = new DFA507(this);
    protected DFA506 dfa506 = new DFA506(this);
    protected DFA519 dfa519 = new DFA519(this);
    static final String dfa_1s = "\100\uffff";
    static final String dfa_2s = "\1\10\77\uffff";
    static final String dfa_3s = "\1\17\4\0\73\uffff";
    static final String dfa_4s = "\1\u00f9\4\0\73\uffff";
    static final String dfa_5s = "\5\uffff\1\1\2\uffff\1\2\67\uffff";
    static final String dfa_6s = "\1\uffff\1\0\1\1\1\2\1\3\73\uffff}>";
    static final String[] dfa_7s = {
            "\1\1\5\uffff\1\4\1\2\1\3\1\10\55\uffff\6\10\16\uffff\3\5\3\uffff\1\10\15\uffff\1\10\64\uffff\1\10\3\uffff\11\10\21\uffff\1\10\23\uffff\3\10\2\uffff\40\10",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final short[] dfa_2 = DFA.unpackEncodedString(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final char[] dfa_4 = DFA.unpackEncodedStringToUnsignedChars(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[] dfa_6 = DFA.unpackEncodedString(dfa_6s);
    static final short[][] dfa_7 = unpackEncodedStringArray(dfa_7s);

    class DFA1 extends DFA {

        public DFA1(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 1;
            this.eot = dfa_1;
            this.eof = dfa_2;
            this.min = dfa_3;
            this.max = dfa_4;
            this.accept = dfa_5;
            this.special = dfa_6;
            this.transition = dfa_7;
        }
        public String getDescription() {
            return "109:4: ( (lv_namespace_1_0= ruleNamespace ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA1_1 = input.LA(1);

                         
                        int index1_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalKim()) ) {s = 5;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index1_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA1_2 = input.LA(1);

                         
                        int index1_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalKim()) ) {s = 5;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index1_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA1_3 = input.LA(1);

                         
                        int index1_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalKim()) ) {s = 5;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index1_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA1_4 = input.LA(1);

                         
                        int index1_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalKim()) ) {s = 5;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index1_4);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 1, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_8s = "\75\uffff";
    static final String dfa_9s = "\1\17\1\0\62\uffff\1\0\10\uffff";
    static final String dfa_10s = "\1\u00f9\1\0\62\uffff\1\0\10\uffff";
    static final String dfa_11s = "\2\uffff\1\1\56\uffff\1\2\10\uffff\1\4\1\5\1\3";
    static final String dfa_12s = "\1\uffff\1\0\62\uffff\1\1\10\uffff}>";
    static final String[] dfa_13s = {
            "\1\1\5\uffff\3\61\1\72\55\uffff\1\64\5\61\24\uffff\1\2\15\uffff\1\73\64\uffff\1\2\3\uffff\11\2\21\uffff\1\2\23\uffff\3\2\2\uffff\40\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_8 = DFA.unpackEncodedString(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final char[] dfa_10 = DFA.unpackEncodedStringToUnsignedChars(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[] dfa_12 = DFA.unpackEncodedString(dfa_12s);
    static final short[][] dfa_13 = unpackEncodedStringArray(dfa_13s);

    class DFA4 extends DFA {

        public DFA4(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 4;
            this.eot = dfa_8;
            this.eof = dfa_8;
            this.min = dfa_9;
            this.max = dfa_10;
            this.accept = dfa_11;
            this.special = dfa_12;
            this.transition = dfa_13;
        }
        public String getDescription() {
            return "166:2: ( ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' ) | ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' ) | ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' ) | ( ( (lv_defineStatement_6_0= ruleDefineStatement ) ) otherlv_7= ';' ) | ( ( (lv_observeStatement_8_0= ruleObserveStatement ) ) otherlv_9= ';' ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA4_1 = input.LA(1);

                         
                        int index4_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalKim()) ) {s = 2;}

                        else if ( (synpred5_InternalKim()) ) {s = 49;}

                        else if ( (synpred7_InternalKim()) ) {s = 58;}

                        else if ( (true) ) {s = 59;}

                         
                        input.seek(index4_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA4_52 = input.LA(1);

                         
                        int index4_52 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_InternalKim()) ) {s = 49;}

                        else if ( (synpred6_InternalKim()) ) {s = 60;}

                         
                        input.seek(index4_52);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 4, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_14s = "\55\uffff";
    static final String dfa_15s = "\1\4\3\0\1\uffff\40\0\10\uffff";
    static final String dfa_16s = "\1\u00fc\3\0\1\uffff\40\0\10\uffff";
    static final String dfa_17s = "\4\uffff\1\1\40\uffff\1\2\7\uffff";
    static final String dfa_18s = "\1\uffff\1\0\1\1\1\2\1\uffff\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\10\uffff}>";
    static final String[] dfa_19s = {
            "\1\1\1\2\1\6\1\uffff\1\45\1\5\1\11\1\3\1\45\1\14\1\uffff\1\45\13\uffff\1\45\1\43\1\44\10\uffff\1\42\12\uffff\2\45\66\uffff\1\4\7\uffff\1\45\22\uffff\1\15\1\16\7\uffff\1\12\1\13\1\uffff\1\17\1\20\1\21\1\22\1\23\1\24\1\uffff\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\64\uffff\1\45\42\uffff\1\7\1\10",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_14 = DFA.unpackEncodedString(dfa_14s);
    static final char[] dfa_15 = DFA.unpackEncodedStringToUnsignedChars(dfa_15s);
    static final char[] dfa_16 = DFA.unpackEncodedStringToUnsignedChars(dfa_16s);
    static final short[] dfa_17 = DFA.unpackEncodedString(dfa_17s);
    static final short[] dfa_18 = DFA.unpackEncodedString(dfa_18s);
    static final short[][] dfa_19 = unpackEncodedStringArray(dfa_19s);

    class DFA18 extends DFA {

        public DFA18(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 18;
            this.eot = dfa_14;
            this.eof = dfa_14;
            this.min = dfa_15;
            this.max = dfa_16;
            this.accept = dfa_17;
            this.special = dfa_18;
            this.transition = dfa_19;
        }
        public String getDescription() {
            return "692:3: ( ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_number_4_0= ruleNumber ) ) | ( (lv_concept_5_0= ruleConceptDeclaration ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) ) otherlv_7= 'as' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA18_1 = input.LA(1);

                         
                        int index18_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index18_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA18_2 = input.LA(1);

                         
                        int index18_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index18_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA18_3 = input.LA(1);

                         
                        int index18_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index18_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA18_5 = input.LA(1);

                         
                        int index18_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index18_5);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA18_6 = input.LA(1);

                         
                        int index18_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index18_6);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA18_7 = input.LA(1);

                         
                        int index18_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index18_7);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA18_8 = input.LA(1);

                         
                        int index18_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index18_8);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA18_9 = input.LA(1);

                         
                        int index18_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index18_9);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA18_10 = input.LA(1);

                         
                        int index18_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index18_10);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA18_11 = input.LA(1);

                         
                        int index18_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index18_11);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA18_12 = input.LA(1);

                         
                        int index18_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index18_12);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA18_13 = input.LA(1);

                         
                        int index18_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index18_13);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA18_14 = input.LA(1);

                         
                        int index18_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index18_14);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA18_15 = input.LA(1);

                         
                        int index18_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index18_15);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA18_16 = input.LA(1);

                         
                        int index18_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index18_16);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA18_17 = input.LA(1);

                         
                        int index18_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index18_17);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA18_18 = input.LA(1);

                         
                        int index18_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index18_18);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA18_19 = input.LA(1);

                         
                        int index18_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index18_19);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA18_20 = input.LA(1);

                         
                        int index18_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index18_20);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA18_21 = input.LA(1);

                         
                        int index18_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index18_21);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA18_22 = input.LA(1);

                         
                        int index18_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index18_22);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA18_23 = input.LA(1);

                         
                        int index18_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index18_23);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA18_24 = input.LA(1);

                         
                        int index18_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index18_24);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA18_25 = input.LA(1);

                         
                        int index18_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index18_25);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA18_26 = input.LA(1);

                         
                        int index18_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index18_26);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA18_27 = input.LA(1);

                         
                        int index18_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index18_27);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA18_28 = input.LA(1);

                         
                        int index18_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index18_28);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA18_29 = input.LA(1);

                         
                        int index18_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index18_29);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA18_30 = input.LA(1);

                         
                        int index18_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index18_30);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA18_31 = input.LA(1);

                         
                        int index18_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index18_31);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA18_32 = input.LA(1);

                         
                        int index18_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index18_32);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA18_33 = input.LA(1);

                         
                        int index18_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index18_33);
                        if ( s>=0 ) return s;
                        break;
                    case 32 : 
                        int LA18_34 = input.LA(1);

                         
                        int index18_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index18_34);
                        if ( s>=0 ) return s;
                        break;
                    case 33 : 
                        int LA18_35 = input.LA(1);

                         
                        int index18_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index18_35);
                        if ( s>=0 ) return s;
                        break;
                    case 34 : 
                        int LA18_36 = input.LA(1);

                         
                        int index18_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index18_36);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 18, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_20s = "\23\uffff";
    static final String dfa_21s = "\1\4\3\31\1\uffff\1\0\3\uffff\4\4\3\31\2\4\1\31";
    static final String dfa_22s = "\1\u00fc\3\155\1\uffff\1\0\3\uffff\4\13\3\155\2\u00a3\1\155";
    static final String dfa_23s = "\4\uffff\1\1\1\uffff\1\2\1\3\1\4\12\uffff";
    static final String dfa_24s = "\5\uffff\1\0\15\uffff}>";
    static final String[] dfa_25s = {
            "\1\1\1\2\1\4\2\uffff\1\5\1\6\1\3\1\uffff\1\7\16\uffff\2\10\10\uffff\1\7\102\uffff\1\4\32\uffff\2\7\7\uffff\2\7\1\uffff\6\7\1\uffff\15\7\127\uffff\2\6",
            "\1\4\1\uffff\1\4\31\uffff\1\4\64\uffff\1\12\1\uffff\1\4\1\11",
            "\1\4\1\uffff\1\4\116\uffff\1\13\2\uffff\1\14",
            "\1\4\1\uffff\1\4\31\uffff\1\4\64\uffff\1\12\1\uffff\1\4\1\11",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "\1\15\1\16\5\uffff\1\17",
            "\2\4\3\uffff\1\7\1\uffff\1\4",
            "\1\20\1\21\1\7\2\uffff\2\7\1\4",
            "\1\22\1\16\5\uffff\1\17",
            "\1\4\1\uffff\1\4\31\uffff\1\4\64\uffff\1\12\2\uffff\1\14",
            "\1\4\1\uffff\1\4\116\uffff\1\12\2\uffff\1\14",
            "\1\4\1\uffff\1\4\116\uffff\1\12\2\uffff\1\14",
            "\2\7\3\uffff\1\7\1\uffff\1\7\1\uffff\1\7\13\uffff\1\7\14\uffff\1\7\36\uffff\1\7\35\uffff\1\7\6\uffff\1\4\2\uffff\1\4\15\uffff\13\7\7\uffff\11\7\1\uffff\15\7",
            "\2\7\3\uffff\1\7\1\uffff\1\7\1\uffff\1\7\13\uffff\1\7\14\uffff\1\7\36\uffff\1\7\35\uffff\1\7\6\uffff\1\4\2\uffff\1\4\15\uffff\13\7\7\uffff\11\7\1\uffff\15\7",
            "\1\4\1\uffff\1\4\116\uffff\1\12\2\uffff\1\14"
    };

    static final short[] dfa_20 = DFA.unpackEncodedString(dfa_20s);
    static final char[] dfa_21 = DFA.unpackEncodedStringToUnsignedChars(dfa_21s);
    static final char[] dfa_22 = DFA.unpackEncodedStringToUnsignedChars(dfa_22s);
    static final short[] dfa_23 = DFA.unpackEncodedString(dfa_23s);
    static final short[] dfa_24 = DFA.unpackEncodedString(dfa_24s);
    static final short[][] dfa_25 = unpackEncodedStringArray(dfa_25s);

    class DFA17 extends DFA {

        public DFA17(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 17;
            this.eot = dfa_20;
            this.eof = dfa_20;
            this.min = dfa_21;
            this.max = dfa_22;
            this.accept = dfa_23;
            this.special = dfa_24;
            this.transition = dfa_25;
        }
        public String getDescription() {
            return "693:4: ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_number_4_0= ruleNumber ) ) | ( (lv_concept_5_0= ruleConceptDeclaration ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA17_5 = input.LA(1);

                         
                        int index17_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred20_InternalKim()) ) {s = 4;}

                        else if ( (synpred22_InternalKim()) ) {s = 7;}

                         
                        input.seek(index17_5);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 17, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_26s = "\60\uffff";
    static final String dfa_27s = "\1\4\2\uffff\3\0\36\uffff\1\0\13\uffff";
    static final String dfa_28s = "\1\u00fc\2\uffff\3\0\36\uffff\1\0\13\uffff";
    static final String dfa_29s = "\1\uffff\1\1\4\uffff\1\4\1\5\1\6\34\uffff\1\10\5\uffff\1\11\1\12\1\2\1\3\1\7";
    static final String dfa_30s = "\3\uffff\1\0\1\1\1\2\36\uffff\1\3\13\uffff}>";
    static final String[] dfa_31s = {
            "\2\10\1\7\2\uffff\1\10\1\5\1\10\1\uffff\1\10\16\uffff\2\1\10\uffff\1\44\1\uffff\1\54\7\uffff\1\6\1\53\32\uffff\4\45\2\uffff\1\45\2\uffff\1\45\56\uffff\2\10\7\uffff\2\10\1\uffff\6\10\1\uffff\15\10\127\uffff\1\3\1\4",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_26 = DFA.unpackEncodedString(dfa_26s);
    static final char[] dfa_27 = DFA.unpackEncodedStringToUnsignedChars(dfa_27s);
    static final char[] dfa_28 = DFA.unpackEncodedStringToUnsignedChars(dfa_28s);
    static final short[] dfa_29 = DFA.unpackEncodedString(dfa_29s);
    static final short[] dfa_30 = DFA.unpackEncodedString(dfa_30s);
    static final short[][] dfa_31 = unpackEncodedStringArray(dfa_31s);

    class DFA44 extends DFA {

        public DFA44(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 44;
            this.eot = dfa_26;
            this.eof = dfa_26;
            this.min = dfa_27;
            this.max = dfa_28;
            this.accept = dfa_29;
            this.special = dfa_30;
            this.transition = dfa_31;
        }
        public String getDescription() {
            return "1454:2: ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' ) | ( ( (lv_op_19_0= ruleREL_OPERATOR ) ) ( (lv_expression_20_0= ruleNumber ) ) ) | ( (lv_nodata_21_0= 'unknown' ) ) | ( (lv_star_22_0= '*' ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA44_3 = input.LA(1);

                         
                        int index44_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalKim()) ) {s = 45;}

                        else if ( (synpred59_InternalKim()) ) {s = 46;}

                         
                        input.seek(index44_3);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA44_4 = input.LA(1);

                         
                        int index44_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalKim()) ) {s = 45;}

                        else if ( (synpred59_InternalKim()) ) {s = 46;}

                         
                        input.seek(index44_4);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA44_5 = input.LA(1);

                         
                        int index44_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalKim()) ) {s = 45;}

                        else if ( (synpred59_InternalKim()) ) {s = 46;}

                         
                        input.seek(index44_5);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA44_36 = input.LA(1);

                         
                        int index44_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalKim()) ) {s = 8;}

                        else if ( (synpred65_InternalKim()) ) {s = 47;}

                         
                        input.seek(index44_36);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 44, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_32s = "\41\uffff";
    static final String dfa_33s = "\4\uffff\1\22\3\uffff\1\25\4\uffff\1\22\12\uffff\1\22\2\uffff\1\22\5\uffff";
    static final String dfa_34s = "\1\4\1\uffff\2\12\1\44\2\uffff\3\152\3\uffff\1\44\3\12\2\uffff\2\4\1\uffff\2\4\1\44\2\12\1\44\3\152\2\0";
    static final String dfa_35s = "\1\u00fc\1\uffff\2\12\1\u00ff\2\uffff\3\155\3\uffff\1\u00ff\1\12\2\u00fc\2\uffff\1\13\1\16\1\uffff\1\u00fc\1\16\1\u00ff\2\12\1\152\3\155\2\0";
    static final String dfa_36s = "\1\uffff\1\1\3\uffff\1\4\1\5\3\uffff\1\7\1\10\1\11\4\uffff\1\2\1\3\2\uffff\1\6\13\uffff";
    static final String dfa_37s = "\37\uffff\1\1\1\0}>";
    static final String[] dfa_38s = {
            "\1\10\1\7\1\5\2\uffff\1\6\1\4\1\11\1\uffff\1\6\16\uffff\2\1\10\uffff\1\6\1\uffff\1\14\10\uffff\1\13\32\uffff\4\12\2\uffff\1\12\2\uffff\1\12\56\uffff\2\6\7\uffff\2\6\1\uffff\6\6\1\uffff\15\6\127\uffff\1\2\1\3",
            "",
            "\1\4",
            "\1\4",
            "\1\21\11\uffff\2\21\72\uffff\1\22\2\uffff\1\16\u008f\uffff\1\15\1\17\1\20",
            "",
            "",
            "\1\24\2\uffff\1\23",
            "\1\26\2\uffff\1\23",
            "\1\27\2\uffff\1\23",
            "",
            "",
            "",
            "\1\21\11\uffff\2\21\72\uffff\1\22\2\uffff\1\16\u0090\uffff\1\17\1\20",
            "\1\30",
            "\1\33\u00f0\uffff\1\31\1\32",
            "\1\33\u00f0\uffff\1\31\1\32",
            "",
            "",
            "\1\34\1\35\5\uffff\1\36",
            "\1\37\2\6\2\uffff\2\6\1\25\2\uffff\1\25",
            "",
            "\3\25\1\uffff\1\25\1\40\2\25\1\uffff\2\25\15\uffff\2\25\10\uffff\1\25\12\uffff\2\25\31\uffff\4\25\2\uffff\2\25\1\uffff\1\25\33\uffff\1\25\4\uffff\1\25\15\uffff\2\25\7\uffff\2\25\1\uffff\6\25\1\uffff\15\25\64\uffff\1\25\42\uffff\2\25",
            "\1\25\4\uffff\1\6\1\uffff\1\25\2\uffff\1\25",
            "\1\21\11\uffff\2\21\72\uffff\1\22\u0093\uffff\1\17\1\20",
            "\1\33",
            "\1\33",
            "\1\21\11\uffff\2\21\72\uffff\1\22",
            "\1\27\2\uffff\1\23",
            "\1\27\2\uffff\1\23",
            "\1\27\2\uffff\1\23",
            "\1\uffff",
            "\1\uffff"
    };

    static final short[] dfa_32 = DFA.unpackEncodedString(dfa_32s);
    static final short[] dfa_33 = DFA.unpackEncodedString(dfa_33s);
    static final char[] dfa_34 = DFA.unpackEncodedStringToUnsignedChars(dfa_34s);
    static final char[] dfa_35 = DFA.unpackEncodedStringToUnsignedChars(dfa_35s);
    static final short[] dfa_36 = DFA.unpackEncodedString(dfa_36s);
    static final short[] dfa_37 = DFA.unpackEncodedString(dfa_37s);
    static final short[][] dfa_38 = unpackEncodedStringArray(dfa_38s);

    class DFA49 extends DFA {

        public DFA49(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 49;
            this.eot = dfa_32;
            this.eof = dfa_33;
            this.min = dfa_34;
            this.max = dfa_35;
            this.accept = dfa_36;
            this.special = dfa_37;
            this.transition = dfa_38;
        }
        public String getDescription() {
            return "1812:2: ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | ( (lv_string_10_0= RULE_STRING ) ) | ( (lv_concept_11_0= ruleConceptDeclaration ) ) | ( ( (lv_id_12_1= RULE_LOWERCASE_ID | lv_id_12_2= rulePropertyId ) ) ) | ( ( (lv_op_13_0= ruleREL_OPERATOR ) ) ( (lv_expression_14_0= ruleNumber ) ) ) | ( (lv_nodata_15_0= 'unknown' ) ) | ( (lv_star_16_0= '*' ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA49_32 = input.LA(1);

                         
                        int index49_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred79_InternalKim()) ) {s = 6;}

                        else if ( (synpred81_InternalKim()) ) {s = 21;}

                         
                        input.seek(index49_32);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA49_31 = input.LA(1);

                         
                        int index49_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred79_InternalKim()) ) {s = 6;}

                        else if ( (synpred81_InternalKim()) ) {s = 21;}

                         
                        input.seek(index49_31);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 49, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_39s = "\13\uffff";
    static final String dfa_40s = "\1\uffff\1\4\3\uffff\2\7\1\11\3\uffff";
    static final String dfa_41s = "\1\4\1\152\1\uffff\1\4\1\uffff\2\4\1\0\1\4\1\uffff\1\0";
    static final String dfa_42s = "\1\13\1\155\1\uffff\1\u00fc\1\uffff\2\u00fc\1\0\1\u00fc\1\uffff\1\0";
    static final String dfa_43s = "\2\uffff\1\2\1\uffff\1\1\4\uffff\1\1\1\uffff";
    static final String dfa_44s = "\12\uffff\1\0}>";
    static final String[] dfa_45s = {
            "\1\1\1\2\5\uffff\1\2",
            "\1\3\2\uffff\1\2",
            "",
            "\1\5\2\4\1\uffff\3\4\1\6\1\uffff\1\4\1\2\15\uffff\2\4\10\uffff\1\4\12\uffff\2\4\31\uffff\4\4\2\uffff\2\4\1\uffff\1\4\33\uffff\1\4\4\uffff\1\4\15\uffff\2\4\7\uffff\2\4\1\uffff\6\4\1\uffff\15\4\64\uffff\1\4\42\uffff\2\4",
            "",
            "\3\4\2\uffff\3\4\1\uffff\1\4\15\uffff\3\4\10\uffff\1\4\1\uffff\1\4\10\uffff\1\4\32\uffff\4\4\2\uffff\1\4\2\uffff\1\4\24\uffff\1\10\2\uffff\1\4\26\uffff\2\4\6\uffff\3\4\1\uffff\6\4\1\uffff\15\4\127\uffff\2\4",
            "\3\4\2\uffff\3\4\1\uffff\1\4\15\uffff\3\4\10\uffff\1\4\1\uffff\1\4\10\uffff\1\4\32\uffff\4\4\2\uffff\1\4\2\uffff\1\4\24\uffff\1\10\2\uffff\1\4\26\uffff\2\4\6\uffff\3\4\1\uffff\6\4\1\uffff\15\4\127\uffff\2\4",
            "\1\uffff",
            "\3\2\1\uffff\1\2\1\12\2\2\1\uffff\1\2\16\uffff\2\2\10\uffff\1\2\12\uffff\2\2\31\uffff\4\2\2\uffff\2\2\1\uffff\1\2\33\uffff\1\2\4\uffff\1\2\15\uffff\2\2\7\uffff\2\2\1\uffff\6\2\1\uffff\15\2\64\uffff\1\2\42\uffff\2\2",
            "",
            "\1\uffff"
    };

    static final short[] dfa_39 = DFA.unpackEncodedString(dfa_39s);
    static final short[] dfa_40 = DFA.unpackEncodedString(dfa_40s);
    static final char[] dfa_41 = DFA.unpackEncodedStringToUnsignedChars(dfa_41s);
    static final char[] dfa_42 = DFA.unpackEncodedStringToUnsignedChars(dfa_42s);
    static final short[] dfa_43 = DFA.unpackEncodedString(dfa_43s);
    static final short[] dfa_44 = DFA.unpackEncodedString(dfa_44s);
    static final short[][] dfa_45 = unpackEncodedStringArray(dfa_45s);

    class DFA48 extends DFA {

        public DFA48(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 48;
            this.eot = dfa_39;
            this.eof = dfa_40;
            this.min = dfa_41;
            this.max = dfa_42;
            this.accept = dfa_43;
            this.special = dfa_44;
            this.transition = dfa_45;
        }
        public String getDescription() {
            return "2000:5: (lv_id_12_1= RULE_LOWERCASE_ID | lv_id_12_2= rulePropertyId )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA48_10 = input.LA(1);

                         
                        int index48_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred80_InternalKim()) ) {s = 9;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index48_10);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 48, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_46s = "\2\uffff\1\6\5\uffff\3\6";
    static final String dfa_47s = "\1\4\1\152\1\31\1\152\3\uffff\1\4\3\31";
    static final String dfa_48s = "\1\151\3\155\3\uffff\1\13\3\155";
    static final String dfa_49s = "\4\uffff\1\2\1\3\1\1\4\uffff";
    static final String dfa_50s = "\1\uffff\1\0\1\uffff\1\1\7\uffff}>";
    static final String[] dfa_51s = {
            "\1\1\1\2\3\uffff\1\5\1\uffff\1\3\135\uffff\1\4",
            "\1\4\2\uffff\1\4",
            "\1\6\1\uffff\1\6\116\uffff\1\4\2\uffff\1\7",
            "\1\4\2\uffff\1\4",
            "",
            "",
            "",
            "\1\10\1\11\5\uffff\1\12",
            "\1\6\1\uffff\1\6\116\uffff\1\4\2\uffff\1\7",
            "\1\6\1\uffff\1\6\116\uffff\1\4\2\uffff\1\7",
            "\1\6\1\uffff\1\6\116\uffff\1\4\2\uffff\1\7"
    };
    static final short[] dfa_46 = DFA.unpackEncodedString(dfa_46s);
    static final char[] dfa_47 = DFA.unpackEncodedStringToUnsignedChars(dfa_47s);
    static final char[] dfa_48 = DFA.unpackEncodedStringToUnsignedChars(dfa_48s);
    static final short[] dfa_49 = DFA.unpackEncodedString(dfa_49s);
    static final short[] dfa_50 = DFA.unpackEncodedString(dfa_50s);
    static final short[][] dfa_51 = unpackEncodedStringArray(dfa_51s);

    class DFA50 extends DFA {

        public DFA50(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 50;
            this.eot = dfa_39;
            this.eof = dfa_46;
            this.min = dfa_47;
            this.max = dfa_48;
            this.accept = dfa_49;
            this.special = dfa_50;
            this.transition = dfa_51;
        }
        public String getDescription() {
            return "2126:5: (lv_name_0_1= rulePathName | lv_name_0_2= ruleUrnId | lv_name_0_3= ruleLocalFilePath )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA50_1 = input.LA(1);

                         
                        int index50_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA50_1==106||LA50_1==109) ) {s = 4;}

                        else if ( (synpred84_InternalKim()) ) {s = 6;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index50_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA50_3 = input.LA(1);

                         
                        int index50_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA50_3==106||LA50_3==109) ) {s = 4;}

                        else if ( (synpred84_InternalKim()) ) {s = 6;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index50_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 50, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_52s = "\10\uffff";
    static final String dfa_53s = "\2\uffff\1\3\4\uffff\1\3";
    static final String dfa_54s = "\1\4\2\7\2\uffff\1\4\2\7";
    static final String dfa_55s = "\1\u00fc\1\155\1\103\2\uffff\1\u00fc\1\155\1\103";
    static final String dfa_56s = "\3\uffff\1\2\1\1\3\uffff";
    static final String dfa_57s = "\10\uffff}>";
    static final String[] dfa_58s = {
            "\1\1\1\3\1\2\1\uffff\4\3\1\uffff\1\3\16\uffff\2\3\10\uffff\1\3\1\uffff\1\3\7\uffff\2\3\3\uffff\1\3\26\uffff\4\3\2\uffff\1\3\2\uffff\1\3\56\uffff\2\3\7\uffff\2\3\1\uffff\6\3\1\uffff\15\3\127\uffff\2\3",
            "\1\4\54\uffff\1\4\65\uffff\1\3\2\uffff\1\3",
            "\1\4\14\uffff\1\3\6\uffff\1\3\16\uffff\1\3\10\uffff\1\3\1\5\1\uffff\3\3\5\uffff\6\3",
            "",
            "",
            "\1\6\1\3\1\7\1\uffff\4\3\1\uffff\1\3\16\uffff\2\3\10\uffff\1\3\1\uffff\1\3\7\uffff\2\3\3\uffff\1\3\26\uffff\4\3\2\uffff\1\3\2\uffff\1\3\56\uffff\2\3\7\uffff\2\3\1\uffff\6\3\1\uffff\15\3\127\uffff\2\3",
            "\1\4\54\uffff\1\4\65\uffff\1\3\2\uffff\1\3",
            "\1\4\14\uffff\1\3\6\uffff\1\3\16\uffff\1\3\10\uffff\1\3\1\5\1\uffff\3\3\5\uffff\6\3"
    };

    static final short[] dfa_52 = DFA.unpackEncodedString(dfa_52s);
    static final short[] dfa_53 = DFA.unpackEncodedString(dfa_53s);
    static final char[] dfa_54 = DFA.unpackEncodedStringToUnsignedChars(dfa_54s);
    static final char[] dfa_55 = DFA.unpackEncodedStringToUnsignedChars(dfa_55s);
    static final short[] dfa_56 = DFA.unpackEncodedString(dfa_56s);
    static final short[] dfa_57 = DFA.unpackEncodedString(dfa_57s);
    static final short[][] dfa_58 = unpackEncodedStringArray(dfa_58s);

    class DFA54 extends DFA {

        public DFA54(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 54;
            this.eot = dfa_52;
            this.eof = dfa_53;
            this.min = dfa_54;
            this.max = dfa_55;
            this.accept = dfa_56;
            this.special = dfa_57;
            this.transition = dfa_58;
        }
        public String getDescription() {
            return "2271:3: ( ( (lv_headers_0_0= ruleHeaderRow ) ) this_SEPARATOR_1= RULE_SEPARATOR )?";
        }
    }
    static final String dfa_59s = "\32\uffff";
    static final String dfa_60s = "\4\uffff\1\25\10\uffff\2\25\1\22\6\uffff\1\25\2\uffff\1\25";
    static final String dfa_61s = "\1\4\1\uffff\2\12\1\24\10\uffff\2\24\1\4\2\12\4\uffff\1\24\2\12\1\24";
    static final String dfa_62s = "\1\u00fc\1\uffff\2\12\1\u0102\10\uffff\2\u00ff\1\u0103\2\u00fc\4\uffff\1\u00ff\2\12\1\155";
    static final String dfa_63s = "\1\uffff\1\1\3\uffff\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\5\uffff\1\4\1\2\1\5\1\3\4\uffff";
    static final String dfa_64s = "\32\uffff}>";
    static final String[] dfa_65s = {
            "\2\7\1\6\1\uffff\1\11\1\7\1\4\1\7\1\uffff\1\7\16\uffff\2\1\10\uffff\1\7\1\uffff\1\13\7\uffff\1\5\1\12\3\uffff\1\14\26\uffff\4\10\2\uffff\1\10\2\uffff\1\10\56\uffff\2\7\7\uffff\2\7\1\uffff\6\7\1\uffff\15\7\127\uffff\1\2\1\3",
            "",
            "\1\15",
            "\1\15",
            "\1\25\6\uffff\1\25\10\uffff\1\23\5\uffff\1\25\3\uffff\2\23\3\uffff\2\25\1\uffff\3\25\5\uffff\6\25\50\uffff\1\22\1\17\u008e\uffff\1\24\1\16\1\20\1\21\3\24",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\25\6\uffff\1\25\10\uffff\1\23\5\uffff\1\25\3\uffff\2\23\3\uffff\2\25\1\uffff\3\25\5\uffff\6\25\50\uffff\1\22\1\17\u008f\uffff\1\16\1\20\1\21",
            "\1\25\6\uffff\1\25\10\uffff\1\23\5\uffff\1\25\3\uffff\2\23\3\uffff\2\25\1\uffff\3\25\5\uffff\6\25\50\uffff\1\22\1\17\u0090\uffff\1\20\1\21",
            "\2\22\3\uffff\1\22\1\26\3\uffff\1\22\5\uffff\1\22\6\uffff\1\22\12\uffff\1\22\1\uffff\1\22\1\uffff\1\22\10\uffff\2\22\1\uffff\3\22\5\uffff\6\22\50\uffff\1\22\u0096\uffff\1\22",
            "\1\31\u00f0\uffff\1\27\1\30",
            "\1\31\u00f0\uffff\1\27\1\30",
            "",
            "",
            "",
            "",
            "\1\25\6\uffff\1\25\10\uffff\1\23\5\uffff\1\25\3\uffff\2\23\3\uffff\2\25\1\uffff\3\25\5\uffff\6\25\50\uffff\2\22\u0090\uffff\1\20\1\21",
            "\1\31",
            "\1\31",
            "\1\25\6\uffff\1\25\10\uffff\1\23\5\uffff\1\25\3\uffff\2\23\3\uffff\2\25\1\uffff\3\25\5\uffff\6\25\50\uffff\2\22"
    };

    static final short[] dfa_59 = DFA.unpackEncodedString(dfa_59s);
    static final short[] dfa_60 = DFA.unpackEncodedString(dfa_60s);
    static final char[] dfa_61 = DFA.unpackEncodedStringToUnsignedChars(dfa_61s);
    static final char[] dfa_62 = DFA.unpackEncodedStringToUnsignedChars(dfa_62s);
    static final short[] dfa_63 = DFA.unpackEncodedString(dfa_63s);
    static final short[] dfa_64 = DFA.unpackEncodedString(dfa_64s);
    static final short[][] dfa_65 = unpackEncodedStringArray(dfa_65s);

    class DFA63 extends DFA {

        public DFA63(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 63;
            this.eot = dfa_59;
            this.eof = dfa_60;
            this.min = dfa_61;
            this.max = dfa_62;
            this.accept = dfa_63;
            this.special = dfa_64;
            this.transition = dfa_65;
        }
        public String getDescription() {
            return "2516:2: ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | ( (lv_quantity_10_0= ruleQuantity ) ) | ( (lv_date_11_0= ruleDate ) ) | (otherlv_12= 'in' ( (lv_set_13_0= ruleList ) ) ) | ( (lv_string_14_0= RULE_STRING ) ) | ( (lv_concept_15_0= ruleConceptDeclaration ) ) | ( ( (lv_op_16_0= ruleREL_OPERATOR ) ) ( (lv_expression_17_0= ruleNumber ) ) ) | ( (lv_expr_18_0= RULE_EXPR ) ) | ( (lv_nodata_19_0= 'unknown' ) ) | ( (lv_star_20_0= '*' ) ) | ( (lv_anything_21_0= '#' ) ) )";
        }
    }
    static final String dfa_66s = "\57\uffff";
    static final String dfa_67s = "\1\7\56\uffff";
    static final String dfa_68s = "\1\4\6\0\50\uffff";
    static final String dfa_69s = "\1\u00a3\6\0\50\uffff";
    static final String dfa_70s = "\7\uffff\1\2\46\uffff\1\1";
    static final String dfa_71s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\50\uffff}>";
    static final String[] dfa_72s = {
            "\3\7\2\uffff\1\7\1\uffff\1\7\1\uffff\1\7\6\uffff\1\7\12\uffff\1\7\6\uffff\1\7\2\uffff\2\7\13\uffff\3\7\5\uffff\1\1\1\2\1\3\1\4\1\5\1\6\45\uffff\1\7\32\uffff\2\7\7\uffff\2\7\1\uffff\6\7\1\uffff\15\7",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_66 = DFA.unpackEncodedString(dfa_66s);
    static final short[] dfa_67 = DFA.unpackEncodedString(dfa_67s);
    static final char[] dfa_68 = DFA.unpackEncodedStringToUnsignedChars(dfa_68s);
    static final char[] dfa_69 = DFA.unpackEncodedStringToUnsignedChars(dfa_69s);
    static final short[] dfa_70 = DFA.unpackEncodedString(dfa_70s);
    static final short[] dfa_71 = DFA.unpackEncodedString(dfa_71s);
    static final short[][] dfa_72 = unpackEncodedStringArray(dfa_72s);

    class DFA67 extends DFA {

        public DFA67(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 67;
            this.eot = dfa_66;
            this.eof = dfa_67;
            this.min = dfa_68;
            this.max = dfa_69;
            this.accept = dfa_70;
            this.special = dfa_71;
            this.transition = dfa_72;
        }
        public String getDescription() {
            return "2967:4: ( ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )* )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA67_1 = input.LA(1);

                         
                        int index67_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index67_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA67_2 = input.LA(1);

                         
                        int index67_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index67_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA67_3 = input.LA(1);

                         
                        int index67_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index67_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA67_4 = input.LA(1);

                         
                        int index67_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index67_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA67_5 = input.LA(1);

                         
                        int index67_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index67_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA67_6 = input.LA(1);

                         
                        int index67_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index67_6);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 67, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_73s = "\71\uffff";
    static final String dfa_74s = "\1\22\70\uffff";
    static final String dfa_75s = "\1\4\3\uffff\1\0\3\uffff\4\0\1\uffff\2\0\52\uffff";
    static final String dfa_76s = "\1\u00fc\3\uffff\1\0\3\uffff\4\0\1\uffff\2\0\52\uffff";
    static final String dfa_77s = "\1\uffff\3\1\1\uffff\3\1\4\uffff\1\1\2\uffff\3\1\1\2\46\uffff";
    static final String dfa_78s = "\1\0\3\uffff\1\1\3\uffff\1\2\1\3\1\4\1\5\1\uffff\1\6\1\7\52\uffff}>";
    static final String[] dfa_79s = {
            "\1\11\1\12\1\4\1\uffff\1\14\1\15\1\3\1\13\1\7\1\22\6\uffff\1\22\6\uffff\1\10\1\5\1\6\1\uffff\1\22\6\uffff\1\16\2\uffff\2\22\6\uffff\1\21\1\17\3\uffff\3\22\5\uffff\6\22\45\uffff\1\22\32\uffff\2\22\7\uffff\2\22\1\uffff\6\22\1\uffff\15\22\64\uffff\1\20\42\uffff\1\1\1\2",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_73 = DFA.unpackEncodedString(dfa_73s);
    static final short[] dfa_74 = DFA.unpackEncodedString(dfa_74s);
    static final char[] dfa_75 = DFA.unpackEncodedStringToUnsignedChars(dfa_75s);
    static final char[] dfa_76 = DFA.unpackEncodedStringToUnsignedChars(dfa_76s);
    static final short[] dfa_77 = DFA.unpackEncodedString(dfa_77s);
    static final short[] dfa_78 = DFA.unpackEncodedString(dfa_78s);
    static final short[][] dfa_79 = unpackEncodedStringArray(dfa_79s);

    class DFA88 extends DFA {

        public DFA88(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 88;
            this.eot = dfa_73;
            this.eof = dfa_74;
            this.min = dfa_75;
            this.max = dfa_76;
            this.accept = dfa_77;
            this.special = dfa_78;
            this.transition = dfa_79;
        }
        public String getDescription() {
            return "3740:4: ( ( ( ruleValue ) )=> (lv_condition_24_0= ruleValue ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA88_0 = input.LA(1);

                         
                        int index88_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA88_0==251) && (synpred153_InternalKim())) {s = 1;}

                        else if ( (LA88_0==252) && (synpred153_InternalKim())) {s = 2;}

                        else if ( (LA88_0==RULE_INT) && (synpred153_InternalKim())) {s = 3;}

                        else if ( (LA88_0==RULE_STRING) ) {s = 4;}

                        else if ( (LA88_0==28) && (synpred153_InternalKim())) {s = 5;}

                        else if ( (LA88_0==29) && (synpred153_InternalKim())) {s = 6;}

                        else if ( (LA88_0==RULE_ID) && (synpred153_InternalKim())) {s = 7;}

                        else if ( (LA88_0==27) ) {s = 8;}

                        else if ( (LA88_0==RULE_LOWERCASE_ID) ) {s = 9;}

                        else if ( (LA88_0==RULE_UPPERCASE_ID) ) {s = 10;}

                        else if ( (LA88_0==RULE_LOWERCASE_DASHID) ) {s = 11;}

                        else if ( (LA88_0==RULE_EXPR) && (synpred153_InternalKim())) {s = 12;}

                        else if ( (LA88_0==RULE_CAMELCASE_ID) ) {s = 13;}

                        else if ( (LA88_0==38) ) {s = 14;}

                        else if ( (LA88_0==50) && (synpred153_InternalKim())) {s = 15;}

                        else if ( (LA88_0==216) && (synpred153_InternalKim())) {s = 16;}

                        else if ( (LA88_0==49) && (synpred153_InternalKim())) {s = 17;}

                        else if ( (LA88_0==EOF||LA88_0==RULE_UPPERCASE_PATH||LA88_0==20||LA88_0==31||(LA88_0>=41 && LA88_0<=42)||(LA88_0>=54 && LA88_0<=56)||(LA88_0>=62 && LA88_0<=67)||LA88_0==105||(LA88_0>=132 && LA88_0<=133)||(LA88_0>=141 && LA88_0<=142)||(LA88_0>=144 && LA88_0<=149)||(LA88_0>=151 && LA88_0<=163)) ) {s = 18;}

                         
                        input.seek(index88_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA88_4 = input.LA(1);

                         
                        int index88_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred153_InternalKim()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index88_4);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA88_8 = input.LA(1);

                         
                        int index88_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred153_InternalKim()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index88_8);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA88_9 = input.LA(1);

                         
                        int index88_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred153_InternalKim()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index88_9);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA88_10 = input.LA(1);

                         
                        int index88_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred153_InternalKim()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index88_10);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA88_11 = input.LA(1);

                         
                        int index88_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred153_InternalKim()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index88_11);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA88_13 = input.LA(1);

                         
                        int index88_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred153_InternalKim()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index88_13);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA88_14 = input.LA(1);

                         
                        int index88_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred153_InternalKim()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index88_14);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 88, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_80s = "\20\uffff";
    static final String dfa_81s = "\1\4\10\uffff\2\0\5\uffff";
    static final String dfa_82s = "\1\u00fc\10\uffff\2\0\5\uffff";
    static final String dfa_83s = "\1\uffff\1\1\11\uffff\1\2\1\3\1\4\1\5\1\6";
    static final String dfa_84s = "\11\uffff\1\0\1\1\5\uffff}>";
    static final String[] dfa_85s = {
            "\1\11\1\12\1\1\1\uffff\1\14\1\15\1\1\1\13\1\1\16\uffff\3\1\10\uffff\1\16\12\uffff\1\17\u00c9\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_80 = DFA.unpackEncodedString(dfa_80s);
    static final char[] dfa_81 = DFA.unpackEncodedStringToUnsignedChars(dfa_81s);
    static final char[] dfa_82 = DFA.unpackEncodedStringToUnsignedChars(dfa_82s);
    static final short[] dfa_83 = DFA.unpackEncodedString(dfa_83s);
    static final short[] dfa_84 = DFA.unpackEncodedString(dfa_84s);
    static final short[][] dfa_85 = unpackEncodedStringArray(dfa_85s);

    class DFA95 extends DFA {

        public DFA95(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 95;
            this.eot = dfa_80;
            this.eof = dfa_80;
            this.min = dfa_81;
            this.max = dfa_82;
            this.accept = dfa_83;
            this.special = dfa_84;
            this.transition = dfa_85;
        }
        public String getDescription() {
            return "3844:2: ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_6_0= ruleList ) ) | ( (lv_null_7_0= 'unknown' ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA95_9 = input.LA(1);

                         
                        int index95_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred157_InternalKim()) ) {s = 11;}

                        else if ( (synpred164_InternalKim()) ) {s = 13;}

                         
                        input.seek(index95_9);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA95_10 = input.LA(1);

                         
                        int index95_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred157_InternalKim()) ) {s = 11;}

                        else if ( (synpred164_InternalKim()) ) {s = 13;}

                         
                        input.seek(index95_10);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 95, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_86s = "\1\4\3\46\2\uffff\1\4\1\uffff\3\46";
    static final String dfa_87s = "\1\151\3\155\2\uffff\1\13\1\uffff\3\155";
    static final String dfa_88s = "\4\uffff\1\2\1\3\1\uffff\1\1\3\uffff";
    static final String dfa_89s = "\13\uffff}>";
    static final String[] dfa_90s = {
            "\1\1\1\2\1\5\1\uffff\1\4\2\uffff\1\3\135\uffff\1\5",
            "\1\7\103\uffff\1\5\2\uffff\1\6",
            "\1\7\103\uffff\1\5\2\uffff\1\6",
            "\1\7\103\uffff\1\5\2\uffff\1\6",
            "",
            "",
            "\1\10\1\11\5\uffff\1\12",
            "",
            "\1\7\103\uffff\1\5\2\uffff\1\6",
            "\1\7\103\uffff\1\5\2\uffff\1\6",
            "\1\7\103\uffff\1\5\2\uffff\1\6"
    };
    static final char[] dfa_86 = DFA.unpackEncodedStringToUnsignedChars(dfa_86s);
    static final char[] dfa_87 = DFA.unpackEncodedStringToUnsignedChars(dfa_87s);
    static final short[] dfa_88 = DFA.unpackEncodedString(dfa_88s);
    static final short[] dfa_89 = DFA.unpackEncodedString(dfa_89s);
    static final short[][] dfa_90 = unpackEncodedStringArray(dfa_90s);

    class DFA100 extends DFA {

        public DFA100(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 100;
            this.eot = dfa_39;
            this.eof = dfa_39;
            this.min = dfa_86;
            this.max = dfa_87;
            this.accept = dfa_88;
            this.special = dfa_89;
            this.transition = dfa_90;
        }
        public String getDescription() {
            return "4128:3: ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_expr_1_0= RULE_EXPR ) ) (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( ( (lv_urn_4_1= ruleUrnId | lv_urn_4_2= RULE_STRING ) ) ) )";
        }
    }
    static final String dfa_91s = "\66\uffff";
    static final String dfa_92s = "\1\3\65\uffff";
    static final String dfa_93s = "\1\4\2\0\63\uffff";
    static final String dfa_94s = "\1\u00a3\2\0\63\uffff";
    static final String dfa_95s = "\3\uffff\1\2\61\uffff\1\1";
    static final String dfa_96s = "\1\uffff\1\0\1\1\63\uffff}>";
    static final String[] dfa_97s = {
            "\3\3\2\uffff\1\3\1\uffff\1\3\1\uffff\1\3\6\uffff\1\3\6\uffff\1\3\3\uffff\3\3\3\uffff\2\3\2\uffff\2\3\1\uffff\1\1\1\2\10\uffff\3\3\5\uffff\6\3\1\uffff\1\3\43\uffff\1\3\32\uffff\2\3\7\uffff\2\3\1\uffff\6\3\1\uffff\15\3",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_91 = DFA.unpackEncodedString(dfa_91s);
    static final short[] dfa_92 = DFA.unpackEncodedString(dfa_92s);
    static final char[] dfa_93 = DFA.unpackEncodedStringToUnsignedChars(dfa_93s);
    static final char[] dfa_94 = DFA.unpackEncodedStringToUnsignedChars(dfa_94s);
    static final short[] dfa_95 = DFA.unpackEncodedString(dfa_95s);
    static final short[] dfa_96 = DFA.unpackEncodedString(dfa_96s);
    static final short[][] dfa_97 = unpackEncodedStringArray(dfa_97s);

    class DFA102 extends DFA {

        public DFA102(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 102;
            this.eot = dfa_91;
            this.eof = dfa_92;
            this.min = dfa_93;
            this.max = dfa_94;
            this.accept = dfa_95;
            this.special = dfa_96;
            this.transition = dfa_97;
        }
        public String getDescription() {
            return "4263:3: ( (otherlv_5= 'if' | ( (lv_conditionNegated_6_0= 'unless' ) ) ) ( (lv_condition_7_0= ruleValue ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA102_1 = input.LA(1);

                         
                        int index102_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_InternalKim()) ) {s = 53;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index102_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA102_2 = input.LA(1);

                         
                        int index102_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_InternalKim()) ) {s = 53;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index102_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 102, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_98s = "\21\uffff";
    static final String dfa_99s = "\1\24\1\uffff\1\4\16\uffff";
    static final String dfa_100s = "\1\150\1\uffff\1\u00d8\16\uffff";
    static final String dfa_101s = "\1\uffff\1\11\1\uffff\1\3\1\4\1\5\1\6\1\7\3\10\5\2\1\1";
    static final String dfa_102s = "\1\0\1\uffff\1\1\16\uffff}>";
    static final String[] dfa_103s = {
            "\1\1\12\uffff\1\2\12\uffff\1\1\5\uffff\1\5\55\uffff\1\3\1\4\2\uffff\1\6\1\uffff\1\7\1\10\1\uffff\1\11\1\1",
            "",
            "\1\15\1\16\5\uffff\1\17\32\uffff\1\13\1\uffff\1\14\64\uffff\1\20\172\uffff\1\12",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_98 = DFA.unpackEncodedString(dfa_98s);
    static final char[] dfa_99 = DFA.unpackEncodedStringToUnsignedChars(dfa_99s);
    static final char[] dfa_100 = DFA.unpackEncodedStringToUnsignedChars(dfa_100s);
    static final short[] dfa_101 = DFA.unpackEncodedString(dfa_101s);
    static final short[] dfa_102 = DFA.unpackEncodedString(dfa_102s);
    static final short[][] dfa_103 = unpackEncodedStringArray(dfa_103s);

    class DFA120 extends DFA {

        public DFA120(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 120;
            this.eot = dfa_98;
            this.eof = dfa_98;
            this.min = dfa_99;
            this.max = dfa_100;
            this.accept = dfa_101;
            this.special = dfa_102;
            this.transition = dfa_103;
        }
        public String getDescription() {
            return "()* loopback of 4695:6: ( ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA120_0 = input.LA(1);

                         
                        int index120_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA120_0==20||LA120_0==42||LA120_0==104) ) {s = 1;}

                        else if ( (LA120_0==31) ) {s = 2;}

                        else if ( LA120_0 == 94 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 2) ) {s = 3;}

                        else if ( LA120_0 == 95 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 3) ) {s = 4;}

                        else if ( LA120_0 == 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 4) ) {s = 5;}

                        else if ( LA120_0 == 98 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 5) ) {s = 6;}

                        else if ( LA120_0 == 100 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 6) ) {s = 7;}

                        else if ( LA120_0 == 101 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 7) ) {s = 8;}

                        else if ( LA120_0 == 103 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 7) ) {s = 9;}

                         
                        input.seek(index120_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA120_2 = input.LA(1);

                         
                        int index120_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA120_2 == 216 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 7) ) {s = 10;}

                        else if ( LA120_2 == 38 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 1) ) {s = 11;}

                        else if ( LA120_2 == 40 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 1) ) {s = 12;}

                        else if ( LA120_2 == RULE_LOWERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 1) ) {s = 13;}

                        else if ( LA120_2 == RULE_UPPERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 1) ) {s = 14;}

                        else if ( LA120_2 == RULE_LOWERCASE_DASHID && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 1) ) {s = 15;}

                        else if ( LA120_2 == 93 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 0) ) {s = 16;}

                         
                        input.seek(index120_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 120, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_104s = "\12\uffff";
    static final String dfa_105s = "\1\uffff\3\6\3\uffff\3\6";
    static final String dfa_106s = "\5\4\2\uffff\3\4";
    static final String dfa_107s = "\1\13\3\u00a3\1\13\2\uffff\3\u00a3";
    static final String dfa_108s = "\5\uffff\1\2\1\1\3\uffff";
    static final String dfa_109s = "\12\uffff}>";
    static final String[] dfa_110s = {
            "\1\1\1\2\5\uffff\1\3",
            "\3\6\2\uffff\1\6\1\uffff\1\6\1\uffff\1\6\6\uffff\1\6\4\uffff\1\6\1\uffff\1\6\3\uffff\3\6\3\uffff\2\6\2\uffff\2\6\1\uffff\2\6\10\uffff\3\6\5\uffff\6\6\1\uffff\1\6\14\uffff\1\5\26\uffff\1\6\1\uffff\2\6\1\4\26\uffff\2\6\7\uffff\2\6\1\uffff\6\6\1\uffff\15\6",
            "\3\6\2\uffff\1\6\1\uffff\1\6\1\uffff\1\6\6\uffff\1\6\4\uffff\1\6\1\uffff\1\6\3\uffff\3\6\3\uffff\2\6\2\uffff\2\6\1\uffff\2\6\10\uffff\3\6\5\uffff\6\6\1\uffff\1\6\14\uffff\1\5\26\uffff\1\6\1\uffff\2\6\1\4\26\uffff\2\6\7\uffff\2\6\1\uffff\6\6\1\uffff\15\6",
            "\3\6\2\uffff\1\6\1\uffff\1\6\1\uffff\1\6\6\uffff\1\6\4\uffff\1\6\1\uffff\1\6\3\uffff\3\6\3\uffff\2\6\2\uffff\2\6\1\uffff\2\6\10\uffff\3\6\5\uffff\6\6\1\uffff\1\6\14\uffff\1\5\26\uffff\1\6\1\uffff\2\6\1\4\26\uffff\2\6\7\uffff\2\6\1\uffff\6\6\1\uffff\15\6",
            "\1\7\1\10\5\uffff\1\11",
            "",
            "",
            "\3\6\2\uffff\1\6\1\uffff\1\6\1\uffff\1\6\6\uffff\1\6\4\uffff\1\6\1\uffff\1\6\3\uffff\3\6\3\uffff\2\6\2\uffff\2\6\1\uffff\2\6\10\uffff\3\6\5\uffff\6\6\1\uffff\1\6\14\uffff\1\5\26\uffff\1\6\1\uffff\2\6\1\4\26\uffff\2\6\7\uffff\2\6\1\uffff\6\6\1\uffff\15\6",
            "\3\6\2\uffff\1\6\1\uffff\1\6\1\uffff\1\6\6\uffff\1\6\4\uffff\1\6\1\uffff\1\6\3\uffff\3\6\3\uffff\2\6\2\uffff\2\6\1\uffff\2\6\10\uffff\3\6\5\uffff\6\6\1\uffff\1\6\14\uffff\1\5\26\uffff\1\6\1\uffff\2\6\1\4\26\uffff\2\6\7\uffff\2\6\1\uffff\6\6\1\uffff\15\6",
            "\3\6\2\uffff\1\6\1\uffff\1\6\1\uffff\1\6\6\uffff\1\6\4\uffff\1\6\1\uffff\1\6\3\uffff\3\6\3\uffff\2\6\2\uffff\2\6\1\uffff\2\6\10\uffff\3\6\5\uffff\6\6\1\uffff\1\6\14\uffff\1\5\26\uffff\1\6\1\uffff\2\6\1\4\26\uffff\2\6\7\uffff\2\6\1\uffff\6\6\1\uffff\15\6"
    };

    static final short[] dfa_104 = DFA.unpackEncodedString(dfa_104s);
    static final short[] dfa_105 = DFA.unpackEncodedString(dfa_105s);
    static final char[] dfa_106 = DFA.unpackEncodedStringToUnsignedChars(dfa_106s);
    static final char[] dfa_107 = DFA.unpackEncodedStringToUnsignedChars(dfa_107s);
    static final short[] dfa_108 = DFA.unpackEncodedString(dfa_108s);
    static final short[] dfa_109 = DFA.unpackEncodedString(dfa_109s);
    static final short[][] dfa_110 = unpackEncodedStringArray(dfa_110s);

    class DFA128 extends DFA {

        public DFA128(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 128;
            this.eot = dfa_104;
            this.eof = dfa_105;
            this.min = dfa_106;
            this.max = dfa_107;
            this.accept = dfa_108;
            this.special = dfa_109;
            this.transition = dfa_110;
        }
        public String getDescription() {
            return "5519:4: (this_Path_12= rulePath | this_UrnKvp_13= ruleUrnKvp )";
        }
    }
    static final String dfa_111s = "\1\uffff\3\5\3\uffff\3\5";
    static final String dfa_112s = "\5\uffff\1\1\1\2\3\uffff";
    static final String[] dfa_113s = {
            "\1\1\1\2\5\uffff\1\3",
            "\3\5\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\6\uffff\1\5\4\uffff\1\5\1\uffff\1\5\3\uffff\3\5\3\uffff\2\5\2\uffff\2\5\1\uffff\2\5\10\uffff\3\5\5\uffff\6\5\1\uffff\1\5\14\uffff\1\6\26\uffff\1\5\1\uffff\2\5\1\4\26\uffff\2\5\7\uffff\2\5\1\uffff\6\5\1\uffff\15\5",
            "\3\5\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\6\uffff\1\5\4\uffff\1\5\1\uffff\1\5\3\uffff\3\5\3\uffff\2\5\2\uffff\2\5\1\uffff\2\5\10\uffff\3\5\5\uffff\6\5\1\uffff\1\5\14\uffff\1\6\26\uffff\1\5\1\uffff\2\5\1\4\26\uffff\2\5\7\uffff\2\5\1\uffff\6\5\1\uffff\15\5",
            "\3\5\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\6\uffff\1\5\4\uffff\1\5\1\uffff\1\5\3\uffff\3\5\3\uffff\2\5\2\uffff\2\5\1\uffff\2\5\10\uffff\3\5\5\uffff\6\5\1\uffff\1\5\14\uffff\1\6\26\uffff\1\5\1\uffff\2\5\1\4\26\uffff\2\5\7\uffff\2\5\1\uffff\6\5\1\uffff\15\5",
            "\1\7\1\10\5\uffff\1\11",
            "",
            "",
            "\3\5\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\6\uffff\1\5\4\uffff\1\5\1\uffff\1\5\3\uffff\3\5\3\uffff\2\5\2\uffff\2\5\1\uffff\2\5\10\uffff\3\5\5\uffff\6\5\1\uffff\1\5\14\uffff\1\6\26\uffff\1\5\1\uffff\2\5\1\4\26\uffff\2\5\7\uffff\2\5\1\uffff\6\5\1\uffff\15\5",
            "\3\5\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\6\uffff\1\5\4\uffff\1\5\1\uffff\1\5\3\uffff\3\5\3\uffff\2\5\2\uffff\2\5\1\uffff\2\5\10\uffff\3\5\5\uffff\6\5\1\uffff\1\5\14\uffff\1\6\26\uffff\1\5\1\uffff\2\5\1\4\26\uffff\2\5\7\uffff\2\5\1\uffff\6\5\1\uffff\15\5",
            "\3\5\2\uffff\1\5\1\uffff\1\5\1\uffff\1\5\6\uffff\1\5\4\uffff\1\5\1\uffff\1\5\3\uffff\3\5\3\uffff\2\5\2\uffff\2\5\1\uffff\2\5\10\uffff\3\5\5\uffff\6\5\1\uffff\1\5\14\uffff\1\6\26\uffff\1\5\1\uffff\2\5\1\4\26\uffff\2\5\7\uffff\2\5\1\uffff\6\5\1\uffff\15\5"
    };
    static final short[] dfa_111 = DFA.unpackEncodedString(dfa_111s);
    static final short[] dfa_112 = DFA.unpackEncodedString(dfa_112s);
    static final short[][] dfa_113 = unpackEncodedStringArray(dfa_113s);

    class DFA129 extends DFA {

        public DFA129(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 129;
            this.eot = dfa_104;
            this.eof = dfa_111;
            this.min = dfa_106;
            this.max = dfa_107;
            this.accept = dfa_112;
            this.special = dfa_109;
            this.transition = dfa_113;
        }
        public String getDescription() {
            return "5548:5: (this_Path_15= rulePath | this_UrnKvp_16= ruleUrnKvp )";
        }
    }
    static final String dfa_114s = "\43\uffff";
    static final String dfa_115s = "\1\1\42\uffff";
    static final String dfa_116s = "\1\4\42\uffff";
    static final String dfa_117s = "\1\u00a3\42\uffff";
    static final String dfa_118s = "\1\uffff\1\4\37\1\1\2\1\3";
    static final String dfa_119s = "\1\0\42\uffff}>";
    static final String[] dfa_120s = {
            "\1\2\1\3\1\7\2\uffff\1\6\1\uffff\1\4\1\uffff\1\12\6\uffff\1\1\12\uffff\1\41\6\uffff\1\40\2\uffff\1\1\1\42\76\uffff\1\5\32\uffff\1\13\1\14\7\uffff\1\10\1\11\1\uffff\1\15\1\16\1\17\1\20\1\21\1\22\1\uffff\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_114 = DFA.unpackEncodedString(dfa_114s);
    static final short[] dfa_115 = DFA.unpackEncodedString(dfa_115s);
    static final char[] dfa_116 = DFA.unpackEncodedStringToUnsignedChars(dfa_116s);
    static final char[] dfa_117 = DFA.unpackEncodedStringToUnsignedChars(dfa_117s);
    static final short[] dfa_118 = DFA.unpackEncodedString(dfa_118s);
    static final short[] dfa_119 = DFA.unpackEncodedString(dfa_119s);
    static final short[][] dfa_120 = unpackEncodedStringArray(dfa_120s);

    class DFA149 extends DFA {

        public DFA149(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 149;
            this.eot = dfa_114;
            this.eof = dfa_115;
            this.min = dfa_116;
            this.max = dfa_117;
            this.accept = dfa_118;
            this.special = dfa_119;
            this.transition = dfa_120;
        }
        public String getDescription() {
            return "()+ loopback of 5849:5: ( ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) ) ) ) ) ) )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA149_0 = input.LA(1);

                         
                        int index149_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA149_0==EOF||LA149_0==20||LA149_0==41) ) {s = 1;}

                        else if ( LA149_0 == RULE_LOWERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 2;}

                        else if ( LA149_0 == RULE_UPPERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 3;}

                        else if ( LA149_0 == RULE_LOWERCASE_DASHID && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 4;}

                        else if ( LA149_0 == 105 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 5;}

                        else if ( LA149_0 == RULE_CAMELCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 6;}

                        else if ( LA149_0 == RULE_STRING && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 7;}

                        else if ( LA149_0 == 141 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 8;}

                        else if ( LA149_0 == 142 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 9;}

                        else if ( LA149_0 == RULE_UPPERCASE_PATH && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 10;}

                        else if ( LA149_0 == 132 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 11;}

                        else if ( LA149_0 == 133 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 12;}

                        else if ( LA149_0 == 144 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 13;}

                        else if ( LA149_0 == 145 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 14;}

                        else if ( LA149_0 == 146 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 15;}

                        else if ( LA149_0 == 147 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 16;}

                        else if ( LA149_0 == 148 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 17;}

                        else if ( LA149_0 == 149 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 18;}

                        else if ( LA149_0 == 151 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 19;}

                        else if ( LA149_0 == 152 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 20;}

                        else if ( LA149_0 == 153 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 21;}

                        else if ( LA149_0 == 154 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 22;}

                        else if ( LA149_0 == 155 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 23;}

                        else if ( LA149_0 == 156 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 24;}

                        else if ( LA149_0 == 157 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 25;}

                        else if ( LA149_0 == 158 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 26;}

                        else if ( LA149_0 == 159 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 27;}

                        else if ( LA149_0 == 160 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 28;}

                        else if ( LA149_0 == 161 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 29;}

                        else if ( LA149_0 == 162 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 30;}

                        else if ( LA149_0 == 163 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 31;}

                        else if ( LA149_0 == 38 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 32;}

                        else if ( LA149_0 == 31 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 33;}

                        else if ( LA149_0 == 42 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 2) ) {s = 34;}

                         
                        input.seek(index149_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 149, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_121s = "\1\4\3\31\1\uffff\1\4\1\uffff\4\4\4\31\2\4";
    static final String dfa_122s = "\1\u00a3\3\155\1\uffff\1\u00a3\1\uffff\4\13\4\155\2\u00a3";
    static final String dfa_123s = "\4\uffff\1\1\1\uffff\1\2\12\uffff";
    static final String dfa_124s = "\21\uffff}>";
    static final String[] dfa_125s = {
            "\1\1\1\2\1\4\2\uffff\1\5\1\uffff\1\3\1\uffff\1\6\30\uffff\1\6\102\uffff\1\4\32\uffff\2\6\7\uffff\2\6\1\uffff\6\6\1\uffff\15\6",
            "\1\4\33\uffff\1\4\64\uffff\1\10\1\uffff\1\4\1\7",
            "\1\4\120\uffff\1\12\2\uffff\1\11",
            "\1\4\33\uffff\1\4\64\uffff\1\10\1\uffff\1\4\1\7",
            "",
            "\2\6\3\uffff\1\6\1\uffff\1\6\1\uffff\1\6\13\uffff\1\4\14\uffff\1\6\16\uffff\1\4\17\uffff\1\6\35\uffff\1\6\10\uffff\2\4\7\uffff\1\6\5\uffff\13\6\7\uffff\11\6\1\uffff\15\6",
            "",
            "\1\13\1\14\5\uffff\1\15",
            "\2\4\3\uffff\1\6\1\uffff\1\4",
            "\1\16\1\14\5\uffff\1\15",
            "\1\17\1\20\1\6\2\uffff\2\6\1\4",
            "\1\4\33\uffff\1\4\64\uffff\1\10\2\uffff\1\11",
            "\1\4\120\uffff\1\10\2\uffff\1\11",
            "\1\4\120\uffff\1\10\2\uffff\1\11",
            "\1\4\120\uffff\1\10\2\uffff\1\11",
            "\2\6\3\uffff\1\6\1\uffff\1\6\1\uffff\1\6\30\uffff\1\6\36\uffff\1\6\35\uffff\1\6\6\uffff\1\4\2\uffff\1\4\7\uffff\1\6\5\uffff\13\6\7\uffff\11\6\1\uffff\15\6",
            "\2\6\3\uffff\1\6\1\uffff\1\6\1\uffff\1\6\30\uffff\1\6\36\uffff\1\6\35\uffff\1\6\6\uffff\1\4\2\uffff\1\4\7\uffff\1\6\5\uffff\13\6\7\uffff\11\6\1\uffff\15\6"
    };
    static final char[] dfa_121 = DFA.unpackEncodedStringToUnsignedChars(dfa_121s);
    static final char[] dfa_122 = DFA.unpackEncodedStringToUnsignedChars(dfa_122s);
    static final short[] dfa_123 = DFA.unpackEncodedString(dfa_123s);
    static final short[] dfa_124 = DFA.unpackEncodedString(dfa_124s);
    static final short[][] dfa_125 = unpackEncodedStringArray(dfa_125s);

    class DFA140 extends DFA {

        public DFA140(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 140;
            this.eot = dfa_98;
            this.eof = dfa_98;
            this.min = dfa_121;
            this.max = dfa_122;
            this.accept = dfa_123;
            this.special = dfa_124;
            this.transition = dfa_125;
        }
        public String getDescription() {
            return "5855:19: ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )?";
        }
    }
    static final String dfa_126s = "\14\uffff";
    static final String dfa_127s = "\1\4\13\uffff";
    static final String dfa_128s = "\1\4\3\31\1\uffff\1\4\1\uffff\1\4\4\31";
    static final String dfa_129s = "\1\u00a3\3\155\1\uffff\1\13\1\uffff\1\13\4\155";
    static final String dfa_130s = "\4\uffff\1\2\1\uffff\1\1\5\uffff";
    static final String dfa_131s = "\14\uffff}>";
    static final String[] dfa_132s = {
            "\1\1\1\2\1\4\2\uffff\1\4\1\uffff\1\3\1\uffff\1\4\6\uffff\1\4\12\uffff\1\4\6\uffff\1\4\2\uffff\2\4\76\uffff\1\4\32\uffff\2\4\7\uffff\2\4\1\uffff\6\4\1\uffff\15\4",
            "\1\4\14\uffff\1\6\16\uffff\1\4\64\uffff\1\4\1\uffff\1\4\1\5",
            "\1\4\14\uffff\1\6\103\uffff\1\4\2\uffff\1\7",
            "\1\4\14\uffff\1\6\16\uffff\1\4\64\uffff\1\4\1\uffff\1\4\1\5",
            "",
            "\1\10\1\11\5\uffff\1\12",
            "",
            "\1\13\1\11\5\uffff\1\12",
            "\1\4\14\uffff\1\6\16\uffff\1\4\64\uffff\1\4\2\uffff\1\7",
            "\1\4\14\uffff\1\6\103\uffff\1\4\2\uffff\1\7",
            "\1\4\14\uffff\1\6\103\uffff\1\4\2\uffff\1\7",
            "\1\4\14\uffff\1\6\103\uffff\1\4\2\uffff\1\7"
    };

    static final short[] dfa_126 = DFA.unpackEncodedString(dfa_126s);
    static final short[] dfa_127 = DFA.unpackEncodedString(dfa_127s);
    static final char[] dfa_128 = DFA.unpackEncodedStringToUnsignedChars(dfa_128s);
    static final char[] dfa_129 = DFA.unpackEncodedStringToUnsignedChars(dfa_129s);
    static final short[] dfa_130 = DFA.unpackEncodedString(dfa_130s);
    static final short[] dfa_131 = DFA.unpackEncodedString(dfa_131s);
    static final short[][] dfa_132 = unpackEncodedStringArray(dfa_132s);

    class DFA148 extends DFA {

        public DFA148(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 148;
            this.eot = dfa_126;
            this.eof = dfa_127;
            this.min = dfa_128;
            this.max = dfa_129;
            this.accept = dfa_130;
            this.special = dfa_131;
            this.transition = dfa_132;
        }
        public String getDescription() {
            return "6151:8: ( (lv_accessor_24_0= ruleFunction ) )?";
        }
    }
    static final String dfa_133s = "\53\uffff";
    static final String dfa_134s = "\1\4\10\uffff\3\0\1\uffff\2\0\34\uffff";
    static final String dfa_135s = "\1\u00fc\10\uffff\3\0\1\uffff\2\0\34\uffff";
    static final String dfa_136s = "\1\uffff\1\1\20\uffff\1\2\30\uffff";
    static final String dfa_137s = "\11\uffff\1\0\1\1\1\2\1\uffff\1\3\1\4\34\uffff}>";
    static final String[] dfa_138s = {
            "\1\11\1\12\1\1\1\uffff\1\1\1\15\1\1\1\13\1\1\1\22\15\uffff\3\1\10\uffff\1\16\12\uffff\2\1\76\uffff\1\22\22\uffff\2\22\7\uffff\2\22\1\uffff\6\22\1\uffff\15\22\64\uffff\1\1\42\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_133 = DFA.unpackEncodedString(dfa_133s);
    static final char[] dfa_134 = DFA.unpackEncodedStringToUnsignedChars(dfa_134s);
    static final char[] dfa_135 = DFA.unpackEncodedStringToUnsignedChars(dfa_135s);
    static final short[] dfa_136 = DFA.unpackEncodedString(dfa_136s);
    static final short[] dfa_137 = DFA.unpackEncodedString(dfa_137s);
    static final short[][] dfa_138 = unpackEncodedStringArray(dfa_138s);

    class DFA150 extends DFA {

        public DFA150(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 150;
            this.eot = dfa_133;
            this.eof = dfa_133;
            this.min = dfa_134;
            this.max = dfa_135;
            this.accept = dfa_136;
            this.special = dfa_137;
            this.transition = dfa_138;
        }
        public String getDescription() {
            return "6249:3: ( ( (lv_value_0_0= ruleValue ) ) otherlv_1= 'as' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA150_9 = input.LA(1);

                         
                        int index150_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred257_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index150_9);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA150_10 = input.LA(1);

                         
                        int index150_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred257_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index150_10);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA150_11 = input.LA(1);

                         
                        int index150_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred257_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index150_11);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA150_13 = input.LA(1);

                         
                        int index150_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred257_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index150_13);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA150_14 = input.LA(1);

                         
                        int index150_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred257_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index150_14);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 150, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_139s = "\u00b1\uffff";
    static final String dfa_140s = "\1\1\35\uffff\1\1\37\uffff\1\103\162\uffff";
    static final String dfa_141s = "\1\4\1\uffff\2\4\32\uffff\1\4\2\46\35\uffff\1\4\1\uffff\1\4\1\11\1\4\146\uffff\3\46\1\0\4\uffff";
    static final String dfa_142s = "\1\u00fc\1\uffff\1\u00fc\1\13\32\uffff\1\u00a3\2\155\35\uffff\1\u00fc\1\uffff\1\13\1\11\1\12\146\uffff\3\155\1\0\4\uffff";
    static final String dfa_143s = "\1\uffff\1\7\2\uffff\1\1\2\2\22\3\2\4\3\5\3\uffff\35\3\1\uffff\1\6\3\uffff\146\6\4\uffff\4\3";
    static final String dfa_144s = "\1\1\1\uffff\1\2\1\4\72\uffff\1\3\3\uffff\1\0\151\uffff\1\5\4\uffff}>";
    static final String[] dfa_145s = {
            "\3\1\2\uffff\1\1\1\35\1\1\1\uffff\2\1\5\uffff\1\1\6\uffff\1\1\2\uffff\2\1\3\uffff\1\4\2\uffff\1\1\2\uffff\2\1\5\uffff\1\5\5\uffff\1\1\1\2\1\1\5\uffff\6\1\10\uffff\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\17\uffff\1\1\6\uffff\1\1\1\uffff\1\6\1\31\1\32\1\3\1\uffff\1\25\1\26\1\27\1\30\11\uffff\2\1\7\uffff\2\1\1\uffff\6\1\1\uffff\15\1\14\uffff\2\1\2\uffff\3\1\1\uffff\11\1\2\uffff\13\1\5\uffff\1\1\47\uffff\1\33\1\34",
            "",
            "\1\36\1\37\3\uffff\1\47\1\43\1\40\1\uffff\1\46\30\uffff\1\75\135\uffff\1\50\1\51\7\uffff\1\44\1\45\1\uffff\1\52\1\53\1\54\1\55\1\56\1\57\1\uffff\1\60\1\61\1\62\1\63\1\64\1\65\1\66\1\67\1\70\1\71\1\72\1\73\1\74\127\uffff\1\41\1\42",
            "\1\76\1\1\1\77\4\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\3\1\2\uffff\1\1\1\uffff\1\1\1\uffff\1\1\6\uffff\1\1\6\uffff\1\1\3\uffff\1\1\6\uffff\1\1\2\uffff\2\1\13\uffff\3\1\5\uffff\6\1\45\uffff\1\1\1\101\2\uffff\1\100\26\uffff\2\1\7\uffff\2\1\1\uffff\6\1\1\uffff\15\1",
            "\1\1\103\uffff\1\102\2\uffff\1\100",
            "\1\1\103\uffff\1\101\2\uffff\1\100",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\120\1\121\1\125\2\uffff\1\124\1\u00a8\1\122\1\uffff\1\130\1\u008d\5\uffff\1\116\6\uffff\1\104\2\uffff\1\161\1\157\3\uffff\1\u008f\2\uffff\1\156\2\uffff\1\117\1\160\5\uffff\1\u0090\5\uffff\1\105\1\106\1\107\5\uffff\1\110\1\111\1\112\1\113\1\114\1\115\10\uffff\1\u0092\1\u0093\1\u0094\1\u0095\1\u0096\1\u0097\1\u0098\1\u0099\1\u009a\1\u009b\1\u009c\1\u009d\1\u009e\1\u009f\17\uffff\1\123\1\1\2\uffff\1\1\2\uffff\1\162\1\uffff\1\u0091\1\u00a4\1\u00a5\1\163\1\uffff\1\u00a0\1\u00a1\1\u00a2\1\u00a3\11\uffff\1\131\1\132\7\uffff\1\126\1\127\1\uffff\1\133\1\134\1\135\1\136\1\137\1\140\1\uffff\1\141\1\142\1\143\1\144\1\145\1\146\1\147\1\150\1\151\1\152\1\153\1\154\1\155\14\uffff\1\164\1\165\2\uffff\1\166\1\167\1\170\1\uffff\1\171\1\172\1\173\1\174\1\175\1\176\1\177\1\u0080\1\u0081\2\uffff\1\u0082\1\u0083\1\u0084\1\u0085\1\u0086\1\u0087\1\u0088\1\u0089\1\u008a\1\u008b\1\u008c\5\uffff\1\u008e\47\uffff\1\u00a6\1\u00a7",
            "",
            "\1\u00a9\1\u00aa\5\uffff\1\u00ab",
            "\1\u00ac",
            "\1\u00ad\1\u00ae\1\u00b0\2\uffff\1\u00ac\1\u00af",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\1\103\uffff\1\101\2\uffff\1\100",
            "\1\1\103\uffff\1\101\2\uffff\1\100",
            "\1\1\103\uffff\1\101\2\uffff\1\100",
            "\1\uffff",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_139 = DFA.unpackEncodedString(dfa_139s);
    static final short[] dfa_140 = DFA.unpackEncodedString(dfa_140s);
    static final char[] dfa_141 = DFA.unpackEncodedStringToUnsignedChars(dfa_141s);
    static final char[] dfa_142 = DFA.unpackEncodedStringToUnsignedChars(dfa_142s);
    static final short[] dfa_143 = DFA.unpackEncodedString(dfa_143s);
    static final short[] dfa_144 = DFA.unpackEncodedString(dfa_144s);
    static final short[][] dfa_145 = unpackEncodedStringArray(dfa_145s);

    class DFA157 extends DFA {

        public DFA157(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 157;
            this.eot = dfa_139;
            this.eof = dfa_140;
            this.min = dfa_141;
            this.max = dfa_142;
            this.accept = dfa_143;
            this.special = dfa_144;
            this.transition = dfa_145;
        }
        public String getDescription() {
            return "()* loopback of 6313:6: ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_17_0= ruleNumber ) ) otherlv_18= 'to' ( (lv_to_19_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA157_66 = input.LA(1);

                         
                        int index157_66 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA157_66==RULE_CAMELCASE_ID) ) {s = 172;}

                        else if ( LA157_66 == RULE_LOWERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 173;}

                        else if ( LA157_66 == RULE_UPPERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 174;}

                        else if ( LA157_66 == RULE_INT && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 175;}

                        else if ( LA157_66 == RULE_STRING && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 176;}

                         
                        input.seek(index157_66);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA157_0 = input.LA(1);

                         
                        int index157_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA157_0==EOF||(LA157_0>=RULE_LOWERCASE_ID && LA157_0<=RULE_STRING)||LA157_0==RULE_CAMELCASE_ID||LA157_0==RULE_LOWERCASE_DASHID||(LA157_0>=RULE_UPPERCASE_PATH && LA157_0<=RULE_BACKCASE_ID)||LA157_0==20||LA157_0==27||(LA157_0>=30 && LA157_0<=31)||LA157_0==38||(LA157_0>=41 && LA157_0<=42)||LA157_0==54||LA157_0==56||(LA157_0>=62 && LA157_0<=67)||LA157_0==105||LA157_0==112||(LA157_0>=132 && LA157_0<=133)||(LA157_0>=141 && LA157_0<=142)||(LA157_0>=144 && LA157_0<=149)||(LA157_0>=151 && LA157_0<=163)||(LA157_0>=176 && LA157_0<=177)||(LA157_0>=180 && LA157_0<=182)||(LA157_0>=184 && LA157_0<=192)||(LA157_0>=195 && LA157_0<=205)||LA157_0==211) ) {s = 1;}

                        else if ( (LA157_0==55) ) {s = 2;}

                        else if ( (LA157_0==117) ) {s = 3;}

                        else if ( LA157_0 == 35 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 0) ) {s = 4;}

                        else if ( LA157_0 == 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 1) ) {s = 5;}

                        else if ( LA157_0 == 114 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 1) ) {s = 6;}

                        else if ( LA157_0 == 76 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 7;}

                        else if ( LA157_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 8;}

                        else if ( LA157_0 == 78 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 9;}

                        else if ( LA157_0 == 79 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 10;}

                        else if ( LA157_0 == 80 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 11;}

                        else if ( LA157_0 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 12;}

                        else if ( LA157_0 == 82 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 13;}

                        else if ( LA157_0 == 83 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 14;}

                        else if ( LA157_0 == 84 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 15;}

                        else if ( LA157_0 == 85 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 16;}

                        else if ( LA157_0 == 86 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 17;}

                        else if ( LA157_0 == 87 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 18;}

                        else if ( LA157_0 == 88 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 19;}

                        else if ( LA157_0 == 89 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 20;}

                        else if ( LA157_0 == 119 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 21;}

                        else if ( LA157_0 == 120 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 22;}

                        else if ( LA157_0 == 121 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 23;}

                        else if ( LA157_0 == 122 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 24;}

                        else if ( LA157_0 == 115 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 25;}

                        else if ( LA157_0 == 116 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 26;}

                        else if ( LA157_0 == 251 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 4) ) {s = 27;}

                        else if ( LA157_0 == 252 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 4) ) {s = 28;}

                        else if ( LA157_0 == RULE_INT && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 4) ) {s = 29;}

                         
                        input.seek(index157_0);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA157_2 = input.LA(1);

                         
                        int index157_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA157_2==RULE_LOWERCASE_ID) ) {s = 30;}

                        else if ( (LA157_2==RULE_UPPERCASE_ID) ) {s = 31;}

                        else if ( (LA157_2==RULE_LOWERCASE_DASHID) ) {s = 32;}

                        else if ( LA157_2 == 251 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 33;}

                        else if ( LA157_2 == 252 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 34;}

                        else if ( LA157_2 == RULE_INT && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 35;}

                        else if ( LA157_2 == 141 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 36;}

                        else if ( LA157_2 == 142 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 37;}

                        else if ( LA157_2 == RULE_UPPERCASE_PATH && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 38;}

                        else if ( LA157_2 == RULE_CAMELCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 39;}

                        else if ( LA157_2 == 132 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 40;}

                        else if ( LA157_2 == 133 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 41;}

                        else if ( LA157_2 == 144 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 42;}

                        else if ( LA157_2 == 145 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 43;}

                        else if ( LA157_2 == 146 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 44;}

                        else if ( LA157_2 == 147 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 45;}

                        else if ( LA157_2 == 148 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 46;}

                        else if ( LA157_2 == 149 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 47;}

                        else if ( LA157_2 == 151 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 48;}

                        else if ( LA157_2 == 152 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 49;}

                        else if ( LA157_2 == 153 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 50;}

                        else if ( LA157_2 == 154 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 51;}

                        else if ( LA157_2 == 155 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 52;}

                        else if ( LA157_2 == 156 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 53;}

                        else if ( LA157_2 == 157 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 54;}

                        else if ( LA157_2 == 158 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 55;}

                        else if ( LA157_2 == 159 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 56;}

                        else if ( LA157_2 == 160 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 57;}

                        else if ( LA157_2 == 161 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 58;}

                        else if ( LA157_2 == 162 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 59;}

                        else if ( LA157_2 == 163 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 60;}

                        else if ( LA157_2 == 38 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 61;}

                         
                        input.seek(index157_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA157_62 = input.LA(1);

                         
                        int index157_62 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA157_62==106||LA157_62==109) ) {s = 1;}

                        else if ( LA157_62 == EOF && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 67;}

                        else if ( LA157_62 == 27 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 68;}

                        else if ( LA157_62 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 69;}

                        else if ( LA157_62 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 70;}

                        else if ( LA157_62 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 71;}

                        else if ( LA157_62 == 62 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 72;}

                        else if ( LA157_62 == 63 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 73;}

                        else if ( LA157_62 == 64 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 74;}

                        else if ( LA157_62 == 65 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 75;}

                        else if ( LA157_62 == 66 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 76;}

                        else if ( LA157_62 == 67 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 77;}

                        else if ( LA157_62 == 20 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 78;}

                        else if ( LA157_62 == 41 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 79;}

                        else if ( LA157_62 == RULE_LOWERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 80;}

                        else if ( LA157_62 == RULE_UPPERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 81;}

                        else if ( LA157_62 == RULE_LOWERCASE_DASHID && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 82;}

                        else if ( LA157_62 == 105 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 83;}

                        else if ( LA157_62 == RULE_CAMELCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 84;}

                        else if ( LA157_62 == RULE_STRING && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 85;}

                        else if ( LA157_62 == 141 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 86;}

                        else if ( LA157_62 == 142 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 87;}

                        else if ( LA157_62 == RULE_UPPERCASE_PATH && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 88;}

                        else if ( LA157_62 == 132 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 89;}

                        else if ( LA157_62 == 133 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 90;}

                        else if ( LA157_62 == 144 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 91;}

                        else if ( LA157_62 == 145 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 92;}

                        else if ( LA157_62 == 146 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 93;}

                        else if ( LA157_62 == 147 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 94;}

                        else if ( LA157_62 == 148 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 95;}

                        else if ( LA157_62 == 149 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 96;}

                        else if ( LA157_62 == 151 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 97;}

                        else if ( LA157_62 == 152 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 98;}

                        else if ( LA157_62 == 153 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 99;}

                        else if ( LA157_62 == 154 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 100;}

                        else if ( LA157_62 == 155 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 101;}

                        else if ( LA157_62 == 156 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 102;}

                        else if ( LA157_62 == 157 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 103;}

                        else if ( LA157_62 == 158 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 104;}

                        else if ( LA157_62 == 159 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 105;}

                        else if ( LA157_62 == 160 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 106;}

                        else if ( LA157_62 == 161 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 107;}

                        else if ( LA157_62 == 162 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 108;}

                        else if ( LA157_62 == 163 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 109;}

                        else if ( LA157_62 == 38 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 110;}

                        else if ( LA157_62 == 31 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 111;}

                        else if ( LA157_62 == 42 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 112;}

                        else if ( LA157_62 == 30 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 113;}

                        else if ( LA157_62 == 112 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 114;}

                        else if ( LA157_62 == 117 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 115;}

                        else if ( LA157_62 == 176 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 116;}

                        else if ( LA157_62 == 177 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 117;}

                        else if ( LA157_62 == 180 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 118;}

                        else if ( LA157_62 == 181 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 119;}

                        else if ( LA157_62 == 182 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 120;}

                        else if ( LA157_62 == 184 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 121;}

                        else if ( LA157_62 == 185 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 122;}

                        else if ( LA157_62 == 186 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 123;}

                        else if ( LA157_62 == 187 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 124;}

                        else if ( LA157_62 == 188 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 125;}

                        else if ( LA157_62 == 189 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 126;}

                        else if ( LA157_62 == 190 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 127;}

                        else if ( LA157_62 == 191 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 128;}

                        else if ( LA157_62 == 192 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 129;}

                        else if ( LA157_62 == 195 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 130;}

                        else if ( LA157_62 == 196 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 131;}

                        else if ( LA157_62 == 197 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 132;}

                        else if ( LA157_62 == 198 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 133;}

                        else if ( LA157_62 == 199 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 134;}

                        else if ( LA157_62 == 200 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 135;}

                        else if ( LA157_62 == 201 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 136;}

                        else if ( LA157_62 == 202 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 137;}

                        else if ( LA157_62 == 203 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 138;}

                        else if ( LA157_62 == 204 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 139;}

                        else if ( LA157_62 == 205 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 140;}

                        else if ( LA157_62 == RULE_BACKCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 141;}

                        else if ( LA157_62 == 211 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 142;}

                        else if ( LA157_62 == 35 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 143;}

                        else if ( LA157_62 == 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 144;}

                        else if ( LA157_62 == 114 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 145;}

                        else if ( LA157_62 == 76 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 146;}

                        else if ( LA157_62 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 147;}

                        else if ( LA157_62 == 78 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 148;}

                        else if ( LA157_62 == 79 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 149;}

                        else if ( LA157_62 == 80 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 150;}

                        else if ( LA157_62 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 151;}

                        else if ( LA157_62 == 82 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 152;}

                        else if ( LA157_62 == 83 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 153;}

                        else if ( LA157_62 == 84 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 154;}

                        else if ( LA157_62 == 85 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 155;}

                        else if ( LA157_62 == 86 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 156;}

                        else if ( LA157_62 == 87 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 157;}

                        else if ( LA157_62 == 88 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 158;}

                        else if ( LA157_62 == 89 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 159;}

                        else if ( LA157_62 == 119 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 160;}

                        else if ( LA157_62 == 120 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 161;}

                        else if ( LA157_62 == 121 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 162;}

                        else if ( LA157_62 == 122 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 163;}

                        else if ( LA157_62 == 115 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 164;}

                        else if ( LA157_62 == 116 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 165;}

                        else if ( LA157_62 == 251 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 166;}

                        else if ( LA157_62 == 252 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 167;}

                        else if ( LA157_62 == RULE_INT && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 168;}

                         
                        input.seek(index157_62);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA157_3 = input.LA(1);

                         
                        int index157_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA157_3==RULE_LOWERCASE_ID) ) {s = 62;}

                        else if ( LA157_3 == RULE_STRING && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 63;}

                        else if ( (LA157_3==RULE_UPPERCASE_ID||LA157_3==RULE_LOWERCASE_DASHID) ) {s = 1;}

                         
                        input.seek(index157_3);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA157_172 = input.LA(1);

                         
                        int index157_172 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred266_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 176;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index157_172);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 157, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_146s = "\150\uffff";
    static final String dfa_147s = "\1\1\147\uffff";
    static final String dfa_148s = "\1\4\3\uffff\1\0\113\uffff\22\0\6\uffff";
    static final String dfa_149s = "\1\u00fc\3\uffff\1\0\113\uffff\22\0\6\uffff";
    static final String dfa_150s = "\1\uffff\1\2\145\uffff\1\1";
    static final String dfa_151s = "\4\uffff\1\0\113\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\6\uffff}>";
    static final String[] dfa_152s = {
            "\3\1\2\uffff\3\1\1\uffff\2\1\5\uffff\1\1\6\uffff\1\1\2\uffff\2\1\3\uffff\1\1\2\uffff\1\1\2\uffff\2\1\5\uffff\1\1\5\uffff\1\1\1\4\1\1\5\uffff\6\1\10\uffff\1\120\1\121\1\122\1\123\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135\17\uffff\1\1\6\uffff\1\1\1\uffff\4\1\1\uffff\1\136\1\137\1\140\1\141\11\uffff\2\1\7\uffff\2\1\1\uffff\6\1\1\uffff\15\1\14\uffff\2\1\2\uffff\3\1\1\uffff\11\1\2\uffff\13\1\5\uffff\1\1\47\uffff\2\1",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_146 = DFA.unpackEncodedString(dfa_146s);
    static final short[] dfa_147 = DFA.unpackEncodedString(dfa_147s);
    static final char[] dfa_148 = DFA.unpackEncodedStringToUnsignedChars(dfa_148s);
    static final char[] dfa_149 = DFA.unpackEncodedStringToUnsignedChars(dfa_149s);
    static final short[] dfa_150 = DFA.unpackEncodedString(dfa_150s);
    static final short[] dfa_151 = DFA.unpackEncodedString(dfa_151s);
    static final short[][] dfa_152 = unpackEncodedStringArray(dfa_152s);

    class DFA154 extends DFA {

        public DFA154(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 154;
            this.eot = dfa_146;
            this.eof = dfa_147;
            this.min = dfa_148;
            this.max = dfa_149;
            this.accept = dfa_150;
            this.special = dfa_151;
            this.transition = dfa_152;
        }
        public String getDescription() {
            return "()* loopback of 6466:9: ( (lv_valueOperators_14_0= ruleValueOperator ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA154_4 = input.LA(1);

                         
                        int index154_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 103;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index154_4);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA154_80 = input.LA(1);

                         
                        int index154_80 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 103;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index154_80);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA154_81 = input.LA(1);

                         
                        int index154_81 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 103;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index154_81);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA154_82 = input.LA(1);

                         
                        int index154_82 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 103;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index154_82);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA154_83 = input.LA(1);

                         
                        int index154_83 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 103;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index154_83);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA154_84 = input.LA(1);

                         
                        int index154_84 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 103;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index154_84);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA154_85 = input.LA(1);

                         
                        int index154_85 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 103;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index154_85);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA154_86 = input.LA(1);

                         
                        int index154_86 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 103;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index154_86);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA154_87 = input.LA(1);

                         
                        int index154_87 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 103;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index154_87);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA154_88 = input.LA(1);

                         
                        int index154_88 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 103;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index154_88);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA154_89 = input.LA(1);

                         
                        int index154_89 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 103;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index154_89);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA154_90 = input.LA(1);

                         
                        int index154_90 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 103;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index154_90);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA154_91 = input.LA(1);

                         
                        int index154_91 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 103;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index154_91);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA154_92 = input.LA(1);

                         
                        int index154_92 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 103;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index154_92);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA154_93 = input.LA(1);

                         
                        int index154_93 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 103;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index154_93);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA154_94 = input.LA(1);

                         
                        int index154_94 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 103;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index154_94);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA154_95 = input.LA(1);

                         
                        int index154_95 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 103;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index154_95);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA154_96 = input.LA(1);

                         
                        int index154_96 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 103;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index154_96);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA154_97 = input.LA(1);

                         
                        int index154_97 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred265_InternalKim()) ) {s = 103;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index154_97);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 154, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_153s = "\105\uffff";
    static final String dfa_154s = "\1\1\104\uffff";
    static final String dfa_155s = "\1\4\6\uffff\1\0\34\uffff\3\0\5\uffff\6\0\23\uffff";
    static final String dfa_156s = "\1\u00fc\6\uffff\1\0\34\uffff\3\0\5\uffff\6\0\23\uffff";
    static final String dfa_157s = "\1\uffff\1\4\64\uffff\2\1\14\2\1\3";
    static final String dfa_158s = "\1\0\6\uffff\1\1\34\uffff\1\2\1\3\1\4\5\uffff\1\5\1\6\1\7\1\10\1\11\1\12\23\uffff}>";
    static final String[] dfa_159s = {
            "\3\1\1\uffff\2\1\1\44\1\1\1\uffff\1\1\15\uffff\3\1\10\uffff\1\1\1\uffff\2\1\6\uffff\1\66\2\1\4\uffff\1\76\24\uffff\1\54\1\61\1\60\1\55\1\70\1\71\1\56\1\7\1\72\1\57\1\73\1\74\1\75\1\77\27\uffff\1\1\1\67\3\uffff\1\1\1\100\1\101\1\102\1\103\11\uffff\2\1\6\uffff\3\1\1\uffff\6\1\1\uffff\15\1\64\uffff\1\1\42\uffff\1\45\1\46",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_153 = DFA.unpackEncodedString(dfa_153s);
    static final short[] dfa_154 = DFA.unpackEncodedString(dfa_154s);
    static final char[] dfa_155 = DFA.unpackEncodedStringToUnsignedChars(dfa_155s);
    static final char[] dfa_156 = DFA.unpackEncodedStringToUnsignedChars(dfa_156s);
    static final short[] dfa_157 = DFA.unpackEncodedString(dfa_157s);
    static final short[] dfa_158 = DFA.unpackEncodedString(dfa_158s);
    static final short[][] dfa_159 = unpackEncodedStringArray(dfa_159s);

    class DFA162 extends DFA {

        public DFA162(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 162;
            this.eot = dfa_153;
            this.eof = dfa_154;
            this.min = dfa_155;
            this.max = dfa_156;
            this.accept = dfa_157;
            this.special = dfa_158;
            this.transition = dfa_159;
        }
        public String getDescription() {
            return "()* loopback of 6734:6: ( ({...}? => ( ({...}? => ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA162_0 = input.LA(1);

                         
                        int index162_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA162_0==EOF||(LA162_0>=RULE_LOWERCASE_ID && LA162_0<=RULE_STRING)||(LA162_0>=RULE_EXPR && LA162_0<=RULE_CAMELCASE_ID)||LA162_0==RULE_LOWERCASE_DASHID||LA162_0==RULE_UPPERCASE_PATH||(LA162_0>=27 && LA162_0<=29)||LA162_0==38||(LA162_0>=40 && LA162_0<=41)||(LA162_0>=49 && LA162_0<=50)||LA162_0==113||LA162_0==118||(LA162_0>=132 && LA162_0<=133)||(LA162_0>=140 && LA162_0<=142)||(LA162_0>=144 && LA162_0<=149)||(LA162_0>=151 && LA162_0<=163)||LA162_0==216) ) {s = 1;}

                        else if ( (LA162_0==83) ) {s = 7;}

                        else if ( (LA162_0==RULE_INT) ) {s = 36;}

                        else if ( (LA162_0==251) ) {s = 37;}

                        else if ( (LA162_0==252) ) {s = 38;}

                        else if ( (LA162_0==76) ) {s = 44;}

                        else if ( (LA162_0==79) ) {s = 45;}

                        else if ( (LA162_0==82) ) {s = 46;}

                        else if ( (LA162_0==85) ) {s = 47;}

                        else if ( (LA162_0==78) ) {s = 48;}

                        else if ( (LA162_0==77) ) {s = 49;}

                        else if ( LA162_0 == 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 0) ) {s = 54;}

                        else if ( LA162_0 == 114 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 0) ) {s = 55;}

                        else if ( LA162_0 == 80 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 1) ) {s = 56;}

                        else if ( LA162_0 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 1) ) {s = 57;}

                        else if ( LA162_0 == 84 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 1) ) {s = 58;}

                        else if ( LA162_0 == 86 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 1) ) {s = 59;}

                        else if ( LA162_0 == 87 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 1) ) {s = 60;}

                        else if ( LA162_0 == 88 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 1) ) {s = 61;}

                        else if ( LA162_0 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 1) ) {s = 62;}

                        else if ( LA162_0 == 89 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 1) ) {s = 63;}

                        else if ( LA162_0 == 119 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 1) ) {s = 64;}

                        else if ( LA162_0 == 120 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 1) ) {s = 65;}

                        else if ( LA162_0 == 121 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 1) ) {s = 66;}

                        else if ( LA162_0 == 122 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 1) ) {s = 67;}

                         
                        input.seek(index162_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA162_7 = input.LA(1);

                         
                        int index162_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred284_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 1) ) {s = 67;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index162_7);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA162_36 = input.LA(1);

                         
                        int index162_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred285_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 2) ) {s = 68;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index162_36);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA162_37 = input.LA(1);

                         
                        int index162_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred285_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 2) ) {s = 68;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index162_37);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA162_38 = input.LA(1);

                         
                        int index162_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred285_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 2) ) {s = 68;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index162_38);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA162_44 = input.LA(1);

                         
                        int index162_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred284_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 1) ) {s = 67;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index162_44);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA162_45 = input.LA(1);

                         
                        int index162_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred284_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 1) ) {s = 67;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index162_45);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA162_46 = input.LA(1);

                         
                        int index162_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred284_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 1) ) {s = 67;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index162_46);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA162_47 = input.LA(1);

                         
                        int index162_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred284_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 1) ) {s = 67;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index162_47);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA162_48 = input.LA(1);

                         
                        int index162_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred284_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 1) ) {s = 67;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index162_48);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA162_49 = input.LA(1);

                         
                        int index162_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred284_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 1) ) {s = 67;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index162_49);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 162, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_160s = "\1\4\6\uffff\1\0\44\uffff\6\0\6\uffff\14\0\1\uffff";
    static final String dfa_161s = "\1\u00fc\6\uffff\1\0\44\uffff\6\0\6\uffff\14\0\1\uffff";
    static final String dfa_162s = "\1\uffff\1\2\102\uffff\1\1";
    static final String dfa_163s = "\7\uffff\1\0\44\uffff\1\1\1\2\1\3\1\4\1\5\1\6\6\uffff\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\uffff}>";
    static final String[] dfa_164s = {
            "\3\1\1\uffff\4\1\1\uffff\1\1\15\uffff\3\1\10\uffff\1\1\1\uffff\2\1\6\uffff\3\1\4\uffff\1\76\24\uffff\1\54\1\61\1\60\1\55\1\70\1\71\1\56\1\7\1\72\1\57\1\73\1\74\1\75\1\77\27\uffff\2\1\3\uffff\1\1\1\100\1\101\1\102\1\103\11\uffff\2\1\6\uffff\3\1\1\uffff\6\1\1\uffff\15\1\64\uffff\1\1\42\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };
    static final char[] dfa_160 = DFA.unpackEncodedStringToUnsignedChars(dfa_160s);
    static final char[] dfa_161 = DFA.unpackEncodedStringToUnsignedChars(dfa_161s);
    static final short[] dfa_162 = DFA.unpackEncodedString(dfa_162s);
    static final short[] dfa_163 = DFA.unpackEncodedString(dfa_163s);
    static final short[][] dfa_164 = unpackEncodedStringArray(dfa_164s);

    class DFA161 extends DFA {

        public DFA161(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 161;
            this.eot = dfa_153;
            this.eof = dfa_154;
            this.min = dfa_160;
            this.max = dfa_161;
            this.accept = dfa_162;
            this.special = dfa_163;
            this.transition = dfa_164;
        }
        public String getDescription() {
            return "()* loopback of 6873:9: ( (lv_valueOperators_11_0= ruleValueOperator ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA161_7 = input.LA(1);

                         
                        int index161_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalKim()) ) {s = 68;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index161_7);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA161_44 = input.LA(1);

                         
                        int index161_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalKim()) ) {s = 68;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index161_44);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA161_45 = input.LA(1);

                         
                        int index161_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalKim()) ) {s = 68;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index161_45);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA161_46 = input.LA(1);

                         
                        int index161_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalKim()) ) {s = 68;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index161_46);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA161_47 = input.LA(1);

                         
                        int index161_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalKim()) ) {s = 68;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index161_47);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA161_48 = input.LA(1);

                         
                        int index161_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalKim()) ) {s = 68;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index161_48);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA161_49 = input.LA(1);

                         
                        int index161_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalKim()) ) {s = 68;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index161_49);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA161_56 = input.LA(1);

                         
                        int index161_56 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalKim()) ) {s = 68;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index161_56);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA161_57 = input.LA(1);

                         
                        int index161_57 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalKim()) ) {s = 68;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index161_57);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA161_58 = input.LA(1);

                         
                        int index161_58 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalKim()) ) {s = 68;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index161_58);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA161_59 = input.LA(1);

                         
                        int index161_59 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalKim()) ) {s = 68;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index161_59);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA161_60 = input.LA(1);

                         
                        int index161_60 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalKim()) ) {s = 68;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index161_60);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA161_61 = input.LA(1);

                         
                        int index161_61 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalKim()) ) {s = 68;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index161_61);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA161_62 = input.LA(1);

                         
                        int index161_62 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalKim()) ) {s = 68;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index161_62);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA161_63 = input.LA(1);

                         
                        int index161_63 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalKim()) ) {s = 68;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index161_63);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA161_64 = input.LA(1);

                         
                        int index161_64 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalKim()) ) {s = 68;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index161_64);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA161_65 = input.LA(1);

                         
                        int index161_65 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalKim()) ) {s = 68;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index161_65);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA161_66 = input.LA(1);

                         
                        int index161_66 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalKim()) ) {s = 68;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index161_66);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA161_67 = input.LA(1);

                         
                        int index161_67 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalKim()) ) {s = 68;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index161_67);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 161, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_165s = "\44\uffff";
    static final String dfa_166s = "\1\4\3\0\34\uffff\1\0\3\uffff";
    static final String dfa_167s = "\1\u00fc\3\0\34\uffff\1\0\3\uffff";
    static final String dfa_168s = "\4\uffff\1\3\34\uffff\1\1\1\2\1\4";
    static final String dfa_169s = "\1\uffff\1\0\1\1\1\2\34\uffff\1\3\3\uffff}>";
    static final String[] dfa_170s = {
            "\2\4\3\uffff\1\4\1\3\1\4\1\uffff\1\4\30\uffff\1\40\135\uffff\2\4\7\uffff\2\4\1\uffff\6\4\1\uffff\15\4\127\uffff\1\1\1\2",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            ""
    };

    static final short[] dfa_165 = DFA.unpackEncodedString(dfa_165s);
    static final char[] dfa_166 = DFA.unpackEncodedStringToUnsignedChars(dfa_166s);
    static final char[] dfa_167 = DFA.unpackEncodedStringToUnsignedChars(dfa_167s);
    static final short[] dfa_168 = DFA.unpackEncodedString(dfa_168s);
    static final short[] dfa_169 = DFA.unpackEncodedString(dfa_169s);
    static final short[][] dfa_170 = unpackEncodedStringArray(dfa_170s);

    class DFA165 extends DFA {

        public DFA165(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 165;
            this.eot = dfa_165;
            this.eof = dfa_165;
            this.min = dfa_166;
            this.max = dfa_167;
            this.accept = dfa_168;
            this.special = dfa_169;
            this.transition = dfa_170;
        }
        public String getDescription() {
            return "7023:4: ( ( (lv_comparisonValue_3_0= ruleNumber ) ) | ( (lv_comparisonQuantity_4_0= ruleQuantity ) ) | ( ( (lv_comparisonConcept_5_0= ruleConceptDeclaration ) ) (otherlv_6= ',' ( (lv_comparisonConcept_7_0= ruleConceptDeclaration ) ) )* ) | (otherlv_8= '(' ( (lv_comparisonObservable_9_0= ruleObservableSemantics ) ) otherlv_10= ')' ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA165_1 = input.LA(1);

                         
                        int index165_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred287_InternalKim()) ) {s = 33;}

                        else if ( (synpred288_InternalKim()) ) {s = 34;}

                         
                        input.seek(index165_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA165_2 = input.LA(1);

                         
                        int index165_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred287_InternalKim()) ) {s = 33;}

                        else if ( (synpred288_InternalKim()) ) {s = 34;}

                         
                        input.seek(index165_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA165_3 = input.LA(1);

                         
                        int index165_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred287_InternalKim()) ) {s = 33;}

                        else if ( (synpred288_InternalKim()) ) {s = 34;}

                         
                        input.seek(index165_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA165_32 = input.LA(1);

                         
                        int index165_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred290_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 35;}

                         
                        input.seek(index165_32);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 165, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_171s = "\166\uffff";
    static final String dfa_172s = "\1\1\165\uffff";
    static final String dfa_173s = "\1\4\24\uffff\1\0\140\uffff";
    static final String dfa_174s = "\1\u00fc\24\uffff\1\0\140\uffff";
    static final String dfa_175s = "\1\uffff\1\2\163\uffff\1\1";
    static final String dfa_176s = "\25\uffff\1\0\140\uffff}>";
    static final String[] dfa_177s = {
            "\3\1\1\uffff\4\1\1\uffff\2\1\5\uffff\1\1\6\uffff\1\25\6\1\1\uffff\1\1\1\uffff\2\1\1\uffff\3\1\1\uffff\1\1\3\uffff\3\1\3\uffff\3\1\5\uffff\6\1\10\uffff\16\1\17\uffff\1\1\6\uffff\13\1\11\uffff\2\1\6\uffff\3\1\1\uffff\6\1\1\uffff\15\1\14\uffff\2\1\2\uffff\3\1\1\uffff\11\1\2\uffff\13\1\5\uffff\1\1\4\uffff\1\1\42\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_171 = DFA.unpackEncodedString(dfa_171s);
    static final short[] dfa_172 = DFA.unpackEncodedString(dfa_172s);
    static final char[] dfa_173 = DFA.unpackEncodedStringToUnsignedChars(dfa_173s);
    static final char[] dfa_174 = DFA.unpackEncodedStringToUnsignedChars(dfa_174s);
    static final short[] dfa_175 = DFA.unpackEncodedString(dfa_175s);
    static final short[] dfa_176 = DFA.unpackEncodedString(dfa_176s);
    static final short[][] dfa_177 = unpackEncodedStringArray(dfa_177s);

    class DFA164 extends DFA {

        public DFA164(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 164;
            this.eot = dfa_171;
            this.eof = dfa_172;
            this.min = dfa_173;
            this.max = dfa_174;
            this.accept = dfa_175;
            this.special = dfa_176;
            this.transition = dfa_177;
        }
        public String getDescription() {
            return "()* loopback of 7084:6: (otherlv_6= ',' ( (lv_comparisonConcept_7_0= ruleConceptDeclaration ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA164_21 = input.LA(1);

                         
                        int index164_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred289_InternalKim()) ) {s = 117;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index164_21);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 164, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA168 extends DFA {

        public DFA168(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 168;
            this.eot = dfa_133;
            this.eof = dfa_133;
            this.min = dfa_134;
            this.max = dfa_135;
            this.accept = dfa_136;
            this.special = dfa_137;
            this.transition = dfa_138;
        }
        public String getDescription() {
            return "7235:3: ( ( (lv_value_1_0= ruleValue ) ) otherlv_2= 'as' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA168_9 = input.LA(1);

                         
                        int index168_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred295_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index168_9);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA168_10 = input.LA(1);

                         
                        int index168_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred295_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index168_10);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA168_11 = input.LA(1);

                         
                        int index168_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred295_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index168_11);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA168_13 = input.LA(1);

                         
                        int index168_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred295_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index168_13);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA168_14 = input.LA(1);

                         
                        int index168_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred295_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index168_14);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 168, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_178s = "\111\uffff";
    static final String dfa_179s = "\1\1\45\uffff\1\1\42\uffff";
    static final String dfa_180s = "\1\6\1\uffff\1\4\41\uffff\1\46\1\uffff\1\24\1\46\26\uffff\2\4\1\11\3\46\1\0\4\uffff";
    static final String dfa_181s = "\1\u00fc\1\uffff\1\u00fc\41\uffff\1\155\1\uffff\2\155\26\uffff\1\13\1\12\1\11\3\155\1\0\4\uffff";
    static final String dfa_182s = "\1\uffff\1\7\1\uffff\1\1\2\2\22\3\2\4\3\5\1\6\6\3\1\uffff\1\3\2\uffff\26\3\7\uffff\4\3";
    static final String dfa_183s = "\1\1\1\uffff\1\0\74\uffff\1\2\4\uffff\1\3\4\uffff}>";
    static final String[] dfa_184s = {
            "\1\1\3\uffff\1\34\11\uffff\1\1\6\uffff\1\1\2\uffff\4\1\1\uffff\1\3\1\uffff\1\1\4\uffff\1\1\5\uffff\1\4\5\uffff\1\1\1\2\1\1\5\uffff\6\1\10\uffff\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\30\uffff\1\5\1\30\1\31\1\35\1\uffff\1\24\1\25\1\26\1\27\u0080\uffff\1\32\1\33",
            "",
            "\1\46\1\44\3\uffff\1\45\1\40\1\47\1\uffff\1\43\30\uffff\1\75\135\uffff\1\50\1\51\7\uffff\1\41\1\42\1\uffff\1\52\1\53\1\54\1\55\1\56\1\57\1\uffff\1\60\1\61\1\62\1\63\1\64\1\65\1\66\1\67\1\70\1\71\1\72\1\73\1\74\127\uffff\1\36\1\37",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\1\103\uffff\1\77\2\uffff\1\76",
            "",
            "\1\1\6\uffff\1\1\12\uffff\1\1\3\uffff\1\1\13\uffff\3\1\5\uffff\6\1\46\uffff\1\100\2\uffff\1\76",
            "\1\1\103\uffff\1\100\2\uffff\1\76",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\101\1\102\5\uffff\1\103",
            "\1\105\1\106\1\110\2\uffff\1\104\1\107",
            "\1\104",
            "\1\1\103\uffff\1\100\2\uffff\1\76",
            "\1\1\103\uffff\1\100\2\uffff\1\76",
            "\1\1\103\uffff\1\100\2\uffff\1\76",
            "\1\uffff",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_178 = DFA.unpackEncodedString(dfa_178s);
    static final short[] dfa_179 = DFA.unpackEncodedString(dfa_179s);
    static final char[] dfa_180 = DFA.unpackEncodedStringToUnsignedChars(dfa_180s);
    static final char[] dfa_181 = DFA.unpackEncodedStringToUnsignedChars(dfa_181s);
    static final short[] dfa_182 = DFA.unpackEncodedString(dfa_182s);
    static final short[] dfa_183 = DFA.unpackEncodedString(dfa_183s);
    static final short[][] dfa_184 = unpackEncodedStringArray(dfa_184s);

    class DFA175 extends DFA {

        public DFA175(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 175;
            this.eot = dfa_178;
            this.eof = dfa_179;
            this.min = dfa_180;
            this.max = dfa_181;
            this.accept = dfa_182;
            this.special = dfa_183;
            this.transition = dfa_184;
        }
        public String getDescription() {
            return "()* loopback of 7299:6: ( ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_18_0= ruleNumber ) ) otherlv_19= 'to' ( (lv_to_20_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'named' ( ( (lv_name_22_1= RULE_LOWERCASE_ID | lv_name_22_2= RULE_STRING ) ) ) ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA175_2 = input.LA(1);

                         
                        int index175_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA175_2 == 251 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 30;}

                        else if ( LA175_2 == 252 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 31;}

                        else if ( LA175_2 == RULE_INT && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 32;}

                        else if ( LA175_2 == 141 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 33;}

                        else if ( LA175_2 == 142 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 34;}

                        else if ( LA175_2 == RULE_UPPERCASE_PATH && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 35;}

                        else if ( (LA175_2==RULE_UPPERCASE_ID) ) {s = 36;}

                        else if ( LA175_2 == RULE_CAMELCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 37;}

                        else if ( (LA175_2==RULE_LOWERCASE_ID) ) {s = 38;}

                        else if ( (LA175_2==RULE_LOWERCASE_DASHID) ) {s = 39;}

                        else if ( LA175_2 == 132 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 40;}

                        else if ( LA175_2 == 133 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 41;}

                        else if ( LA175_2 == 144 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 42;}

                        else if ( LA175_2 == 145 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 43;}

                        else if ( LA175_2 == 146 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 44;}

                        else if ( LA175_2 == 147 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 45;}

                        else if ( LA175_2 == 148 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 46;}

                        else if ( LA175_2 == 149 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 47;}

                        else if ( LA175_2 == 151 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 48;}

                        else if ( LA175_2 == 152 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 49;}

                        else if ( LA175_2 == 153 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 50;}

                        else if ( LA175_2 == 154 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 51;}

                        else if ( LA175_2 == 155 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 52;}

                        else if ( LA175_2 == 156 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 53;}

                        else if ( LA175_2 == 157 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 54;}

                        else if ( LA175_2 == 158 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 55;}

                        else if ( LA175_2 == 159 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 56;}

                        else if ( LA175_2 == 160 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 57;}

                        else if ( LA175_2 == 161 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 58;}

                        else if ( LA175_2 == 162 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 59;}

                        else if ( LA175_2 == 163 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 60;}

                        else if ( LA175_2 == 38 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 61;}

                         
                        input.seek(index175_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA175_0 = input.LA(1);

                         
                        int index175_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA175_0==EOF||LA175_0==RULE_STRING||LA175_0==20||LA175_0==27||(LA175_0>=30 && LA175_0<=33)||LA175_0==37||LA175_0==42||LA175_0==54||LA175_0==56||(LA175_0>=62 && LA175_0<=67)) ) {s = 1;}

                        else if ( (LA175_0==55) ) {s = 2;}

                        else if ( LA175_0 == 35 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 0) ) {s = 3;}

                        else if ( LA175_0 == 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 1) ) {s = 4;}

                        else if ( LA175_0 == 114 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 1) ) {s = 5;}

                        else if ( LA175_0 == 76 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 6;}

                        else if ( LA175_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 7;}

                        else if ( LA175_0 == 78 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 8;}

                        else if ( LA175_0 == 79 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 9;}

                        else if ( LA175_0 == 80 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 10;}

                        else if ( LA175_0 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 11;}

                        else if ( LA175_0 == 82 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 12;}

                        else if ( LA175_0 == 83 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 13;}

                        else if ( LA175_0 == 84 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 14;}

                        else if ( LA175_0 == 85 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 15;}

                        else if ( LA175_0 == 86 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 16;}

                        else if ( LA175_0 == 87 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 17;}

                        else if ( LA175_0 == 88 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 18;}

                        else if ( LA175_0 == 89 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 19;}

                        else if ( LA175_0 == 119 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 20;}

                        else if ( LA175_0 == 120 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 21;}

                        else if ( LA175_0 == 121 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 22;}

                        else if ( LA175_0 == 122 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 23;}

                        else if ( LA175_0 == 115 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 3) ) {s = 24;}

                        else if ( LA175_0 == 116 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 3) ) {s = 25;}

                        else if ( LA175_0 == 251 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 4) ) {s = 26;}

                        else if ( LA175_0 == 252 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 4) ) {s = 27;}

                        else if ( LA175_0 == RULE_INT && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 4) ) {s = 28;}

                        else if ( LA175_0 == 117 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 5) ) {s = 29;}

                         
                        input.seek(index175_0);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA175_63 = input.LA(1);

                         
                        int index175_63 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA175_63==RULE_CAMELCASE_ID) ) {s = 68;}

                        else if ( LA175_63 == RULE_LOWERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 69;}

                        else if ( LA175_63 == RULE_UPPERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 70;}

                        else if ( LA175_63 == RULE_INT && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 71;}

                        else if ( LA175_63 == RULE_STRING && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 72;}

                         
                        input.seek(index175_63);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA175_68 = input.LA(1);

                         
                        int index175_68 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred302_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 72;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index175_68);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 175, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_185s = "\1\1\57\uffff";
    static final String dfa_186s = "\1\6\10\uffff\1\0\15\uffff\22\0\7\uffff";
    static final String dfa_187s = "\1\u00fc\10\uffff\1\0\15\uffff\22\0\7\uffff";
    static final String dfa_188s = "\1\uffff\1\2\55\uffff\1\1";
    static final String dfa_189s = "\11\uffff\1\0\15\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\7\uffff}>";
    static final String[] dfa_190s = {
            "\1\1\3\uffff\1\1\11\uffff\1\1\6\uffff\1\1\2\uffff\4\1\1\uffff\1\1\1\uffff\1\1\4\uffff\1\1\5\uffff\1\1\5\uffff\1\1\1\11\1\1\5\uffff\6\1\10\uffff\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\30\uffff\4\1\1\uffff\1\45\1\46\1\47\1\50\u0080\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_185 = DFA.unpackEncodedString(dfa_185s);
    static final char[] dfa_186 = DFA.unpackEncodedStringToUnsignedChars(dfa_186s);
    static final char[] dfa_187 = DFA.unpackEncodedStringToUnsignedChars(dfa_187s);
    static final short[] dfa_188 = DFA.unpackEncodedString(dfa_188s);
    static final short[] dfa_189 = DFA.unpackEncodedString(dfa_189s);
    static final short[][] dfa_190 = unpackEncodedStringArray(dfa_190s);

    class DFA172 extends DFA {

        public DFA172(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 172;
            this.eot = dfa_26;
            this.eof = dfa_185;
            this.min = dfa_186;
            this.max = dfa_187;
            this.accept = dfa_188;
            this.special = dfa_189;
            this.transition = dfa_190;
        }
        public String getDescription() {
            return "()* loopback of 7446:9: ( (lv_valueOperators_15_0= ruleValueOperator ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA172_9 = input.LA(1);

                         
                        int index172_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred301_InternalKim()) ) {s = 47;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index172_9);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA172_23 = input.LA(1);

                         
                        int index172_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred301_InternalKim()) ) {s = 47;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index172_23);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA172_24 = input.LA(1);

                         
                        int index172_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred301_InternalKim()) ) {s = 47;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index172_24);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA172_25 = input.LA(1);

                         
                        int index172_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred301_InternalKim()) ) {s = 47;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index172_25);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA172_26 = input.LA(1);

                         
                        int index172_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred301_InternalKim()) ) {s = 47;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index172_26);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA172_27 = input.LA(1);

                         
                        int index172_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred301_InternalKim()) ) {s = 47;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index172_27);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA172_28 = input.LA(1);

                         
                        int index172_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred301_InternalKim()) ) {s = 47;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index172_28);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA172_29 = input.LA(1);

                         
                        int index172_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred301_InternalKim()) ) {s = 47;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index172_29);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA172_30 = input.LA(1);

                         
                        int index172_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred301_InternalKim()) ) {s = 47;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index172_30);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA172_31 = input.LA(1);

                         
                        int index172_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred301_InternalKim()) ) {s = 47;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index172_31);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA172_32 = input.LA(1);

                         
                        int index172_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred301_InternalKim()) ) {s = 47;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index172_32);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA172_33 = input.LA(1);

                         
                        int index172_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred301_InternalKim()) ) {s = 47;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index172_33);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA172_34 = input.LA(1);

                         
                        int index172_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred301_InternalKim()) ) {s = 47;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index172_34);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA172_35 = input.LA(1);

                         
                        int index172_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred301_InternalKim()) ) {s = 47;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index172_35);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA172_36 = input.LA(1);

                         
                        int index172_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred301_InternalKim()) ) {s = 47;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index172_36);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA172_37 = input.LA(1);

                         
                        int index172_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred301_InternalKim()) ) {s = 47;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index172_37);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA172_38 = input.LA(1);

                         
                        int index172_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred301_InternalKim()) ) {s = 47;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index172_38);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA172_39 = input.LA(1);

                         
                        int index172_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred301_InternalKim()) ) {s = 47;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index172_39);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA172_40 = input.LA(1);

                         
                        int index172_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred301_InternalKim()) ) {s = 47;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index172_40);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 172, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_191s = "\50\uffff";
    static final String dfa_192s = "\1\4\43\uffff\1\0\3\uffff";
    static final String dfa_193s = "\1\u00fc\43\uffff\1\0\3\uffff";
    static final String dfa_194s = "\1\uffff\1\1\45\uffff\1\2";
    static final String dfa_195s = "\44\uffff\1\0\3\uffff}>";
    static final String[] dfa_196s = {
            "\3\1\1\uffff\4\1\1\uffff\1\1\16\uffff\2\1\10\uffff\1\44\102\uffff\1\1\7\uffff\1\1\3\uffff\1\47\16\uffff\2\1\7\uffff\2\1\1\uffff\6\1\1\uffff\15\1\127\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            ""
    };

    static final short[] dfa_191 = DFA.unpackEncodedString(dfa_191s);
    static final char[] dfa_192 = DFA.unpackEncodedStringToUnsignedChars(dfa_192s);
    static final char[] dfa_193 = DFA.unpackEncodedStringToUnsignedChars(dfa_193s);
    static final short[] dfa_194 = DFA.unpackEncodedString(dfa_194s);
    static final short[] dfa_195 = DFA.unpackEncodedString(dfa_195s);
    static final short[][] dfa_196 = unpackEncodedStringArray(dfa_196s);

    class DFA183 extends DFA {

        public DFA183(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 183;
            this.eot = dfa_191;
            this.eof = dfa_191;
            this.min = dfa_192;
            this.max = dfa_193;
            this.accept = dfa_194;
            this.special = dfa_195;
            this.transition = dfa_196;
        }
        public String getDescription() {
            return "7662:3: ( ( ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) ) | ( (lv_observable_2_0= ruleDependencyObservableSemantics ) ) ) | ( ( ( ( ({...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'named' ( ( (lv_name_12_1= RULE_LOWERCASE_ID | lv_name_12_2= RULE_STRING ) ) ) ) ) ) ) )+ {...}?) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA183_36 = input.LA(1);

                         
                        int index183_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred313_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 39;}

                         
                        input.seek(index183_36);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 183, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_197s = "\17\uffff";
    static final String dfa_198s = "\1\uffff\3\4\1\uffff\1\4\4\uffff\3\4\2\6";
    static final String dfa_199s = "\1\4\3\24\1\uffff\1\24\1\uffff\3\4\3\24\2\4";
    static final String dfa_200s = "\1\u00fc\3\155\1\uffff\1\103\1\uffff\3\13\3\155\2\u00fc";
    static final String dfa_201s = "\4\uffff\1\1\1\uffff\1\2\10\uffff";
    static final String dfa_202s = "\17\uffff}>";
    static final String[] dfa_203s = {
            "\1\1\1\2\1\5\1\uffff\3\6\1\3\1\uffff\1\6\16\uffff\2\6\10\uffff\1\6\102\uffff\1\4\7\uffff\1\6\22\uffff\2\6\7\uffff\2\6\1\uffff\6\6\1\uffff\15\6\127\uffff\2\6",
            "\1\4\4\uffff\1\6\1\uffff\1\4\3\uffff\3\4\3\uffff\1\4\1\6\3\uffff\1\4\13\uffff\3\4\5\uffff\6\4\46\uffff\1\10\2\uffff\1\7",
            "\1\4\4\uffff\1\6\1\uffff\1\4\3\uffff\3\4\3\uffff\1\4\1\6\3\uffff\1\4\13\uffff\3\4\5\uffff\6\4\46\uffff\1\11\2\uffff\1\7",
            "\1\4\6\uffff\1\4\3\uffff\3\4\3\uffff\1\4\1\6\3\uffff\1\4\13\uffff\3\4\5\uffff\6\4\46\uffff\1\10\2\uffff\1\7",
            "",
            "\1\4\4\uffff\1\6\1\uffff\1\4\3\uffff\3\4\3\uffff\1\4\4\uffff\1\4\13\uffff\3\4\5\uffff\6\4",
            "",
            "\1\12\1\13\5\uffff\1\14",
            "\2\4\3\uffff\1\6\1\uffff\1\4",
            "\1\15\1\16\1\6\2\uffff\2\6\1\4",
            "\1\4\6\uffff\1\4\3\uffff\3\4\3\uffff\1\4\1\6\3\uffff\1\4\13\uffff\3\4\5\uffff\6\4\46\uffff\1\10\2\uffff\1\7",
            "\1\4\6\uffff\1\4\3\uffff\3\4\3\uffff\1\4\1\6\3\uffff\1\4\13\uffff\3\4\5\uffff\6\4\46\uffff\1\10\2\uffff\1\7",
            "\1\4\6\uffff\1\4\3\uffff\3\4\3\uffff\1\4\1\6\3\uffff\1\4\13\uffff\3\4\5\uffff\6\4\46\uffff\1\10\2\uffff\1\7",
            "\2\6\3\uffff\3\6\1\uffff\1\6\6\uffff\1\6\4\uffff\1\6\1\uffff\1\6\3\uffff\3\6\1\uffff\1\6\1\uffff\2\6\3\uffff\1\6\5\uffff\1\6\5\uffff\3\6\5\uffff\6\6\1\uffff\1\6\6\uffff\16\6\11\uffff\1\6\6\uffff\1\4\2\uffff\1\4\4\uffff\4\6\1\uffff\17\6\7\uffff\11\6\1\uffff\15\6\127\uffff\2\6",
            "\2\6\3\uffff\3\6\1\uffff\1\6\6\uffff\1\6\4\uffff\1\6\1\uffff\1\6\3\uffff\3\6\1\uffff\1\6\1\uffff\2\6\3\uffff\1\6\5\uffff\1\6\5\uffff\3\6\5\uffff\6\6\1\uffff\1\6\6\uffff\16\6\11\uffff\1\6\6\uffff\1\4\2\uffff\1\4\4\uffff\4\6\1\uffff\17\6\7\uffff\11\6\1\uffff\15\6\127\uffff\2\6"
    };

    static final short[] dfa_197 = DFA.unpackEncodedString(dfa_197s);
    static final short[] dfa_198 = DFA.unpackEncodedString(dfa_198s);
    static final char[] dfa_199 = DFA.unpackEncodedStringToUnsignedChars(dfa_199s);
    static final char[] dfa_200 = DFA.unpackEncodedStringToUnsignedChars(dfa_200s);
    static final short[] dfa_201 = DFA.unpackEncodedString(dfa_201s);
    static final short[] dfa_202 = DFA.unpackEncodedString(dfa_202s);
    static final short[][] dfa_203 = unpackEncodedStringArray(dfa_203s);

    class DFA178 extends DFA {

        public DFA178(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 178;
            this.eot = dfa_197;
            this.eof = dfa_198;
            this.min = dfa_199;
            this.max = dfa_200;
            this.accept = dfa_201;
            this.special = dfa_202;
            this.transition = dfa_203;
        }
        public String getDescription() {
            return "7663:4: ( ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) ) | ( (lv_observable_2_0= ruleDependencyObservableSemantics ) ) )";
        }
    }
    static final String dfa_204s = "\2\uffff\2\7\5\uffff\3\7";
    static final String dfa_205s = "\1\4\1\152\2\24\4\uffff\1\4\3\24";
    static final String dfa_206s = "\1\151\3\155\4\uffff\1\13\3\155";
    static final String dfa_207s = "\4\uffff\1\3\1\4\1\1\1\2\4\uffff";
    static final String dfa_208s = "\1\uffff\1\0\12\uffff}>";
    static final String[] dfa_209s = {
            "\1\1\1\2\1\5\4\uffff\1\3\135\uffff\1\4",
            "\1\4\2\uffff\1\4",
            "\1\7\6\uffff\1\7\3\uffff\3\7\3\uffff\1\7\4\uffff\1\7\13\uffff\3\7\5\uffff\6\7\46\uffff\1\4\2\uffff\1\10",
            "\1\7\6\uffff\1\7\3\uffff\3\7\3\uffff\1\7\4\uffff\1\7\13\uffff\3\7\5\uffff\6\7\46\uffff\1\4\2\uffff\1\10",
            "",
            "",
            "",
            "",
            "\1\11\1\12\5\uffff\1\13",
            "\1\7\6\uffff\1\7\3\uffff\3\7\3\uffff\1\7\4\uffff\1\7\13\uffff\3\7\5\uffff\6\7\46\uffff\1\4\2\uffff\1\10",
            "\1\7\6\uffff\1\7\3\uffff\3\7\3\uffff\1\7\4\uffff\1\7\13\uffff\3\7\5\uffff\6\7\46\uffff\1\4\2\uffff\1\10",
            "\1\7\6\uffff\1\7\3\uffff\3\7\3\uffff\1\7\4\uffff\1\7\13\uffff\3\7\5\uffff\6\7\46\uffff\1\4\2\uffff\1\10"
    };
    static final short[] dfa_204 = DFA.unpackEncodedString(dfa_204s);
    static final char[] dfa_205 = DFA.unpackEncodedStringToUnsignedChars(dfa_205s);
    static final char[] dfa_206 = DFA.unpackEncodedStringToUnsignedChars(dfa_206s);
    static final short[] dfa_207 = DFA.unpackEncodedString(dfa_207s);
    static final short[] dfa_208 = DFA.unpackEncodedString(dfa_208s);
    static final short[][] dfa_209 = unpackEncodedStringArray(dfa_209s);

    class DFA177 extends DFA {

        public DFA177(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 177;
            this.eot = dfa_126;
            this.eof = dfa_204;
            this.min = dfa_205;
            this.max = dfa_206;
            this.accept = dfa_207;
            this.special = dfa_208;
            this.transition = dfa_209;
        }
        public String getDescription() {
            return "7666:7: (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA177_1 = input.LA(1);

                         
                        int index177_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA177_1==106||LA177_1==109) ) {s = 4;}

                        else if ( (synpred309_InternalKim()) ) {s = 6;}

                        else if ( (synpred310_InternalKim()) ) {s = 7;}

                         
                        input.seek(index177_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 177, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_210s = "\u008d\uffff";
    static final String dfa_211s = "\1\1\u008c\uffff";
    static final String dfa_212s = "\1\4\42\uffff\1\0\32\uffff\3\0\1\uffff\1\0\1\uffff\30\0\61\uffff";
    static final String dfa_213s = "\1\u00fc\42\uffff\1\0\32\uffff\3\0\1\uffff\1\0\1\uffff\30\0\61\uffff";
    static final String dfa_214s = "\1\uffff\1\2\u008a\uffff\1\1";
    static final String dfa_215s = "\43\uffff\1\0\32\uffff\1\1\1\2\1\3\1\uffff\1\4\1\uffff\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\61\uffff}>";
    static final String[] dfa_216s = {
            "\1\76\1\77\1\1\1\uffff\1\1\1\102\1\1\1\100\1\uffff\1\106\1\1\5\uffff\1\1\4\uffff\1\1\1\uffff\7\1\1\uffff\3\1\1\43\1\uffff\6\1\2\uffff\5\1\1\uffff\3\1\5\uffff\6\1\1\uffff\1\1\6\uffff\16\1\11\uffff\1\1\5\uffff\2\1\5\uffff\24\1\1\107\1\110\6\uffff\1\1\1\104\1\105\1\uffff\1\111\1\112\1\113\1\114\1\115\1\116\1\uffff\1\117\1\120\1\121\1\122\1\123\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\3\1\11\uffff\2\1\2\uffff\3\1\1\uffff\11\1\1\uffff\14\1\5\uffff\2\1\3\uffff\1\1\42\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_210 = DFA.unpackEncodedString(dfa_210s);
    static final short[] dfa_211 = DFA.unpackEncodedString(dfa_211s);
    static final char[] dfa_212 = DFA.unpackEncodedStringToUnsignedChars(dfa_212s);
    static final char[] dfa_213 = DFA.unpackEncodedStringToUnsignedChars(dfa_213s);
    static final short[] dfa_214 = DFA.unpackEncodedString(dfa_214s);
    static final short[] dfa_215 = DFA.unpackEncodedString(dfa_215s);
    static final short[][] dfa_216 = unpackEncodedStringArray(dfa_216s);

    class DFA184 extends DFA {

        public DFA184(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 184;
            this.eot = dfa_210;
            this.eof = dfa_211;
            this.min = dfa_212;
            this.max = dfa_213;
            this.accept = dfa_214;
            this.special = dfa_215;
            this.transition = dfa_216;
        }
        public String getDescription() {
            return "()+ loopback of 7935:3: ( (lv_main_0_0= ruleConcept ) )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA184_35 = input.LA(1);

                         
                        int index184_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred320_InternalKim()) ) {s = 140;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index184_35);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA184_62 = input.LA(1);

                         
                        int index184_62 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred320_InternalKim()) ) {s = 140;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index184_62);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA184_63 = input.LA(1);

                         
                        int index184_63 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred320_InternalKim()) ) {s = 140;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index184_63);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA184_64 = input.LA(1);

                         
                        int index184_64 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred320_InternalKim()) ) {s = 140;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index184_64);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA184_66 = input.LA(1);

                         
                        int index184_66 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred320_InternalKim()) ) {s = 140;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index184_66);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA184_68 = input.LA(1);

                         
                        int index184_68 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred320_InternalKim()) ) {s = 140;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index184_68);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA184_69 = input.LA(1);

                         
                        int index184_69 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred320_InternalKim()) ) {s = 140;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index184_69);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA184_70 = input.LA(1);

                         
                        int index184_70 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred320_InternalKim()) ) {s = 140;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index184_70);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA184_71 = input.LA(1);

                         
                        int index184_71 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred320_InternalKim()) ) {s = 140;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index184_71);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA184_72 = input.LA(1);

                         
                        int index184_72 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred320_InternalKim()) ) {s = 140;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index184_72);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA184_73 = input.LA(1);

                         
                        int index184_73 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred320_InternalKim()) ) {s = 140;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index184_73);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA184_74 = input.LA(1);

                         
                        int index184_74 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred320_InternalKim()) ) {s = 140;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index184_74);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA184_75 = input.LA(1);

                         
                        int index184_75 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred320_InternalKim()) ) {s = 140;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index184_75);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA184_76 = input.LA(1);

                         
                        int index184_76 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred320_InternalKim()) ) {s = 140;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index184_76);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA184_77 = input.LA(1);

                         
                        int index184_77 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred320_InternalKim()) ) {s = 140;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index184_77);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA184_78 = input.LA(1);

                         
                        int index184_78 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred320_InternalKim()) ) {s = 140;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index184_78);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA184_79 = input.LA(1);

                         
                        int index184_79 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred320_InternalKim()) ) {s = 140;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index184_79);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA184_80 = input.LA(1);

                         
                        int index184_80 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred320_InternalKim()) ) {s = 140;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index184_80);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA184_81 = input.LA(1);

                         
                        int index184_81 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred320_InternalKim()) ) {s = 140;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index184_81);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA184_82 = input.LA(1);

                         
                        int index184_82 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred320_InternalKim()) ) {s = 140;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index184_82);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA184_83 = input.LA(1);

                         
                        int index184_83 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred320_InternalKim()) ) {s = 140;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index184_83);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA184_84 = input.LA(1);

                         
                        int index184_84 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred320_InternalKim()) ) {s = 140;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index184_84);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA184_85 = input.LA(1);

                         
                        int index184_85 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred320_InternalKim()) ) {s = 140;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index184_85);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA184_86 = input.LA(1);

                         
                        int index184_86 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred320_InternalKim()) ) {s = 140;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index184_86);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA184_87 = input.LA(1);

                         
                        int index184_87 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred320_InternalKim()) ) {s = 140;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index184_87);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA184_88 = input.LA(1);

                         
                        int index184_88 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred320_InternalKim()) ) {s = 140;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index184_88);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA184_89 = input.LA(1);

                         
                        int index184_89 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred320_InternalKim()) ) {s = 140;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index184_89);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA184_90 = input.LA(1);

                         
                        int index184_90 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred320_InternalKim()) ) {s = 140;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index184_90);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA184_91 = input.LA(1);

                         
                        int index184_91 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred320_InternalKim()) ) {s = 140;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index184_91);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 184, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_217s = "\1\35\u008c\uffff";
    static final String dfa_218s = "\1\4\13\uffff\u0080\0\1\uffff";
    static final String dfa_219s = "\1\u00fc\13\uffff\u0080\0\1\uffff";
    static final String dfa_220s = "\1\uffff\1\1\u008a\uffff\1\2";
    static final String dfa_221s = "\14\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\1\61\1\62\1\63\1\64\1\65\1\66\1\67\1\70\1\71\1\72\1\73\1\74\1\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107\1\110\1\111\1\112\1\113\1\114\1\115\1\116\1\117\1\120\1\121\1\122\1\123\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135\1\136\1\137\1\140\1\141\1\142\1\143\1\144\1\145\1\146\1\147\1\150\1\151\1\152\1\153\1\154\1\155\1\156\1\157\1\160\1\161\1\162\1\163\1\164\1\165\1\166\1\167\1\170\1\171\1\172\1\173\1\174\1\175\1\176\1\177\1\uffff}>";
    static final String[] dfa_222s = {
            "\1\76\1\77\1\103\1\uffff\1\177\1\102\1\74\1\100\1\uffff\1\106\1\170\5\uffff\1\34\4\uffff\1\14\1\uffff\1\20\1\175\1\176\1\135\1\134\1\u0084\1\u0085\1\uffff\1\44\1\u008a\1\21\1\43\1\uffff\1\u0082\1\36\1\33\1\15\1\16\1\17\2\uffff\1\42\1\u0081\1\u0080\1\41\1\40\1\uffff\1\22\1\23\1\24\5\uffff\1\25\1\26\1\27\1\30\1\31\1\32\1\uffff\1\1\6\uffff\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\1\61\1\62\1\63\11\uffff\1\1\5\uffff\1\101\1\37\5\uffff\1\136\1\173\1\45\1\70\1\71\1\75\1\174\1\64\1\65\1\66\1\67\11\1\1\107\1\110\6\uffff\1\u0083\1\104\1\105\1\uffff\1\111\1\112\1\113\1\114\1\115\1\116\1\uffff\1\117\1\120\1\121\1\122\1\123\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\u0088\1\u0086\1\u0087\11\uffff\1\137\1\140\2\uffff\1\141\1\142\1\143\1\uffff\1\144\1\145\1\146\1\147\1\150\1\151\1\152\1\153\1\154\1\uffff\1\u0089\1\155\1\156\1\157\1\160\1\161\1\162\1\163\1\164\1\165\1\166\1\167\5\uffff\1\171\1\u008b\3\uffff\1\172\42\uffff\1\72\1\73",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };
    static final short[] dfa_217 = DFA.unpackEncodedString(dfa_217s);
    static final char[] dfa_218 = DFA.unpackEncodedStringToUnsignedChars(dfa_218s);
    static final char[] dfa_219 = DFA.unpackEncodedStringToUnsignedChars(dfa_219s);
    static final short[] dfa_220 = DFA.unpackEncodedString(dfa_220s);
    static final short[] dfa_221 = DFA.unpackEncodedString(dfa_221s);
    static final short[][] dfa_222 = unpackEncodedStringArray(dfa_222s);

    class DFA190 extends DFA {

        public DFA190(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 190;
            this.eot = dfa_210;
            this.eof = dfa_217;
            this.min = dfa_218;
            this.max = dfa_219;
            this.accept = dfa_220;
            this.special = dfa_221;
            this.transition = dfa_222;
        }
        public String getDescription() {
            return "7954:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA190_12 = input.LA(1);

                         
                        int index190_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_12);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA190_13 = input.LA(1);

                         
                        int index190_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_13);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA190_14 = input.LA(1);

                         
                        int index190_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_14);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA190_15 = input.LA(1);

                         
                        int index190_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_15);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA190_16 = input.LA(1);

                         
                        int index190_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_16);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA190_17 = input.LA(1);

                         
                        int index190_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_17);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA190_18 = input.LA(1);

                         
                        int index190_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_18);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA190_19 = input.LA(1);

                         
                        int index190_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_19);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA190_20 = input.LA(1);

                         
                        int index190_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_20);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA190_21 = input.LA(1);

                         
                        int index190_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_21);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA190_22 = input.LA(1);

                         
                        int index190_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_22);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA190_23 = input.LA(1);

                         
                        int index190_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_23);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA190_24 = input.LA(1);

                         
                        int index190_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_24);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA190_25 = input.LA(1);

                         
                        int index190_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_25);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA190_26 = input.LA(1);

                         
                        int index190_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_26);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA190_27 = input.LA(1);

                         
                        int index190_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_27);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA190_28 = input.LA(1);

                         
                        int index190_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_28);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA190_29 = input.LA(1);

                         
                        int index190_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_29);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA190_30 = input.LA(1);

                         
                        int index190_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_30);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA190_31 = input.LA(1);

                         
                        int index190_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_31);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA190_32 = input.LA(1);

                         
                        int index190_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_32);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA190_33 = input.LA(1);

                         
                        int index190_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_33);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA190_34 = input.LA(1);

                         
                        int index190_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_34);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA190_35 = input.LA(1);

                         
                        int index190_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_35);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA190_36 = input.LA(1);

                         
                        int index190_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_36);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA190_37 = input.LA(1);

                         
                        int index190_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_37);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA190_38 = input.LA(1);

                         
                        int index190_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_38);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA190_39 = input.LA(1);

                         
                        int index190_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_39);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA190_40 = input.LA(1);

                         
                        int index190_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_40);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA190_41 = input.LA(1);

                         
                        int index190_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_41);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA190_42 = input.LA(1);

                         
                        int index190_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_42);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA190_43 = input.LA(1);

                         
                        int index190_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_43);
                        if ( s>=0 ) return s;
                        break;
                    case 32 : 
                        int LA190_44 = input.LA(1);

                         
                        int index190_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_44);
                        if ( s>=0 ) return s;
                        break;
                    case 33 : 
                        int LA190_45 = input.LA(1);

                         
                        int index190_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_45);
                        if ( s>=0 ) return s;
                        break;
                    case 34 : 
                        int LA190_46 = input.LA(1);

                         
                        int index190_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_46);
                        if ( s>=0 ) return s;
                        break;
                    case 35 : 
                        int LA190_47 = input.LA(1);

                         
                        int index190_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_47);
                        if ( s>=0 ) return s;
                        break;
                    case 36 : 
                        int LA190_48 = input.LA(1);

                         
                        int index190_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_48);
                        if ( s>=0 ) return s;
                        break;
                    case 37 : 
                        int LA190_49 = input.LA(1);

                         
                        int index190_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_49);
                        if ( s>=0 ) return s;
                        break;
                    case 38 : 
                        int LA190_50 = input.LA(1);

                         
                        int index190_50 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_50);
                        if ( s>=0 ) return s;
                        break;
                    case 39 : 
                        int LA190_51 = input.LA(1);

                         
                        int index190_51 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_51);
                        if ( s>=0 ) return s;
                        break;
                    case 40 : 
                        int LA190_52 = input.LA(1);

                         
                        int index190_52 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_52);
                        if ( s>=0 ) return s;
                        break;
                    case 41 : 
                        int LA190_53 = input.LA(1);

                         
                        int index190_53 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_53);
                        if ( s>=0 ) return s;
                        break;
                    case 42 : 
                        int LA190_54 = input.LA(1);

                         
                        int index190_54 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_54);
                        if ( s>=0 ) return s;
                        break;
                    case 43 : 
                        int LA190_55 = input.LA(1);

                         
                        int index190_55 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_55);
                        if ( s>=0 ) return s;
                        break;
                    case 44 : 
                        int LA190_56 = input.LA(1);

                         
                        int index190_56 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_56);
                        if ( s>=0 ) return s;
                        break;
                    case 45 : 
                        int LA190_57 = input.LA(1);

                         
                        int index190_57 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_57);
                        if ( s>=0 ) return s;
                        break;
                    case 46 : 
                        int LA190_58 = input.LA(1);

                         
                        int index190_58 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_58);
                        if ( s>=0 ) return s;
                        break;
                    case 47 : 
                        int LA190_59 = input.LA(1);

                         
                        int index190_59 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_59);
                        if ( s>=0 ) return s;
                        break;
                    case 48 : 
                        int LA190_60 = input.LA(1);

                         
                        int index190_60 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_60);
                        if ( s>=0 ) return s;
                        break;
                    case 49 : 
                        int LA190_61 = input.LA(1);

                         
                        int index190_61 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_61);
                        if ( s>=0 ) return s;
                        break;
                    case 50 : 
                        int LA190_62 = input.LA(1);

                         
                        int index190_62 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_62);
                        if ( s>=0 ) return s;
                        break;
                    case 51 : 
                        int LA190_63 = input.LA(1);

                         
                        int index190_63 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_63);
                        if ( s>=0 ) return s;
                        break;
                    case 52 : 
                        int LA190_64 = input.LA(1);

                         
                        int index190_64 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_64);
                        if ( s>=0 ) return s;
                        break;
                    case 53 : 
                        int LA190_65 = input.LA(1);

                         
                        int index190_65 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_65);
                        if ( s>=0 ) return s;
                        break;
                    case 54 : 
                        int LA190_66 = input.LA(1);

                         
                        int index190_66 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_66);
                        if ( s>=0 ) return s;
                        break;
                    case 55 : 
                        int LA190_67 = input.LA(1);

                         
                        int index190_67 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_67);
                        if ( s>=0 ) return s;
                        break;
                    case 56 : 
                        int LA190_68 = input.LA(1);

                         
                        int index190_68 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_68);
                        if ( s>=0 ) return s;
                        break;
                    case 57 : 
                        int LA190_69 = input.LA(1);

                         
                        int index190_69 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_69);
                        if ( s>=0 ) return s;
                        break;
                    case 58 : 
                        int LA190_70 = input.LA(1);

                         
                        int index190_70 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_70);
                        if ( s>=0 ) return s;
                        break;
                    case 59 : 
                        int LA190_71 = input.LA(1);

                         
                        int index190_71 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_71);
                        if ( s>=0 ) return s;
                        break;
                    case 60 : 
                        int LA190_72 = input.LA(1);

                         
                        int index190_72 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_72);
                        if ( s>=0 ) return s;
                        break;
                    case 61 : 
                        int LA190_73 = input.LA(1);

                         
                        int index190_73 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_73);
                        if ( s>=0 ) return s;
                        break;
                    case 62 : 
                        int LA190_74 = input.LA(1);

                         
                        int index190_74 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_74);
                        if ( s>=0 ) return s;
                        break;
                    case 63 : 
                        int LA190_75 = input.LA(1);

                         
                        int index190_75 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_75);
                        if ( s>=0 ) return s;
                        break;
                    case 64 : 
                        int LA190_76 = input.LA(1);

                         
                        int index190_76 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_76);
                        if ( s>=0 ) return s;
                        break;
                    case 65 : 
                        int LA190_77 = input.LA(1);

                         
                        int index190_77 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_77);
                        if ( s>=0 ) return s;
                        break;
                    case 66 : 
                        int LA190_78 = input.LA(1);

                         
                        int index190_78 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_78);
                        if ( s>=0 ) return s;
                        break;
                    case 67 : 
                        int LA190_79 = input.LA(1);

                         
                        int index190_79 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_79);
                        if ( s>=0 ) return s;
                        break;
                    case 68 : 
                        int LA190_80 = input.LA(1);

                         
                        int index190_80 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_80);
                        if ( s>=0 ) return s;
                        break;
                    case 69 : 
                        int LA190_81 = input.LA(1);

                         
                        int index190_81 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_81);
                        if ( s>=0 ) return s;
                        break;
                    case 70 : 
                        int LA190_82 = input.LA(1);

                         
                        int index190_82 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_82);
                        if ( s>=0 ) return s;
                        break;
                    case 71 : 
                        int LA190_83 = input.LA(1);

                         
                        int index190_83 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_83);
                        if ( s>=0 ) return s;
                        break;
                    case 72 : 
                        int LA190_84 = input.LA(1);

                         
                        int index190_84 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_84);
                        if ( s>=0 ) return s;
                        break;
                    case 73 : 
                        int LA190_85 = input.LA(1);

                         
                        int index190_85 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_85);
                        if ( s>=0 ) return s;
                        break;
                    case 74 : 
                        int LA190_86 = input.LA(1);

                         
                        int index190_86 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_86);
                        if ( s>=0 ) return s;
                        break;
                    case 75 : 
                        int LA190_87 = input.LA(1);

                         
                        int index190_87 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_87);
                        if ( s>=0 ) return s;
                        break;
                    case 76 : 
                        int LA190_88 = input.LA(1);

                         
                        int index190_88 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_88);
                        if ( s>=0 ) return s;
                        break;
                    case 77 : 
                        int LA190_89 = input.LA(1);

                         
                        int index190_89 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_89);
                        if ( s>=0 ) return s;
                        break;
                    case 78 : 
                        int LA190_90 = input.LA(1);

                         
                        int index190_90 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_90);
                        if ( s>=0 ) return s;
                        break;
                    case 79 : 
                        int LA190_91 = input.LA(1);

                         
                        int index190_91 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_91);
                        if ( s>=0 ) return s;
                        break;
                    case 80 : 
                        int LA190_92 = input.LA(1);

                         
                        int index190_92 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_92);
                        if ( s>=0 ) return s;
                        break;
                    case 81 : 
                        int LA190_93 = input.LA(1);

                         
                        int index190_93 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_93);
                        if ( s>=0 ) return s;
                        break;
                    case 82 : 
                        int LA190_94 = input.LA(1);

                         
                        int index190_94 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_94);
                        if ( s>=0 ) return s;
                        break;
                    case 83 : 
                        int LA190_95 = input.LA(1);

                         
                        int index190_95 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_95);
                        if ( s>=0 ) return s;
                        break;
                    case 84 : 
                        int LA190_96 = input.LA(1);

                         
                        int index190_96 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_96);
                        if ( s>=0 ) return s;
                        break;
                    case 85 : 
                        int LA190_97 = input.LA(1);

                         
                        int index190_97 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_97);
                        if ( s>=0 ) return s;
                        break;
                    case 86 : 
                        int LA190_98 = input.LA(1);

                         
                        int index190_98 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_98);
                        if ( s>=0 ) return s;
                        break;
                    case 87 : 
                        int LA190_99 = input.LA(1);

                         
                        int index190_99 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_99);
                        if ( s>=0 ) return s;
                        break;
                    case 88 : 
                        int LA190_100 = input.LA(1);

                         
                        int index190_100 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_100);
                        if ( s>=0 ) return s;
                        break;
                    case 89 : 
                        int LA190_101 = input.LA(1);

                         
                        int index190_101 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_101);
                        if ( s>=0 ) return s;
                        break;
                    case 90 : 
                        int LA190_102 = input.LA(1);

                         
                        int index190_102 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_102);
                        if ( s>=0 ) return s;
                        break;
                    case 91 : 
                        int LA190_103 = input.LA(1);

                         
                        int index190_103 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_103);
                        if ( s>=0 ) return s;
                        break;
                    case 92 : 
                        int LA190_104 = input.LA(1);

                         
                        int index190_104 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_104);
                        if ( s>=0 ) return s;
                        break;
                    case 93 : 
                        int LA190_105 = input.LA(1);

                         
                        int index190_105 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_105);
                        if ( s>=0 ) return s;
                        break;
                    case 94 : 
                        int LA190_106 = input.LA(1);

                         
                        int index190_106 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_106);
                        if ( s>=0 ) return s;
                        break;
                    case 95 : 
                        int LA190_107 = input.LA(1);

                         
                        int index190_107 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_107);
                        if ( s>=0 ) return s;
                        break;
                    case 96 : 
                        int LA190_108 = input.LA(1);

                         
                        int index190_108 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_108);
                        if ( s>=0 ) return s;
                        break;
                    case 97 : 
                        int LA190_109 = input.LA(1);

                         
                        int index190_109 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_109);
                        if ( s>=0 ) return s;
                        break;
                    case 98 : 
                        int LA190_110 = input.LA(1);

                         
                        int index190_110 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_110);
                        if ( s>=0 ) return s;
                        break;
                    case 99 : 
                        int LA190_111 = input.LA(1);

                         
                        int index190_111 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_111);
                        if ( s>=0 ) return s;
                        break;
                    case 100 : 
                        int LA190_112 = input.LA(1);

                         
                        int index190_112 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_112);
                        if ( s>=0 ) return s;
                        break;
                    case 101 : 
                        int LA190_113 = input.LA(1);

                         
                        int index190_113 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_113);
                        if ( s>=0 ) return s;
                        break;
                    case 102 : 
                        int LA190_114 = input.LA(1);

                         
                        int index190_114 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_114);
                        if ( s>=0 ) return s;
                        break;
                    case 103 : 
                        int LA190_115 = input.LA(1);

                         
                        int index190_115 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_115);
                        if ( s>=0 ) return s;
                        break;
                    case 104 : 
                        int LA190_116 = input.LA(1);

                         
                        int index190_116 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_116);
                        if ( s>=0 ) return s;
                        break;
                    case 105 : 
                        int LA190_117 = input.LA(1);

                         
                        int index190_117 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_117);
                        if ( s>=0 ) return s;
                        break;
                    case 106 : 
                        int LA190_118 = input.LA(1);

                         
                        int index190_118 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_118);
                        if ( s>=0 ) return s;
                        break;
                    case 107 : 
                        int LA190_119 = input.LA(1);

                         
                        int index190_119 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_119);
                        if ( s>=0 ) return s;
                        break;
                    case 108 : 
                        int LA190_120 = input.LA(1);

                         
                        int index190_120 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_120);
                        if ( s>=0 ) return s;
                        break;
                    case 109 : 
                        int LA190_121 = input.LA(1);

                         
                        int index190_121 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_121);
                        if ( s>=0 ) return s;
                        break;
                    case 110 : 
                        int LA190_122 = input.LA(1);

                         
                        int index190_122 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_122);
                        if ( s>=0 ) return s;
                        break;
                    case 111 : 
                        int LA190_123 = input.LA(1);

                         
                        int index190_123 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_123);
                        if ( s>=0 ) return s;
                        break;
                    case 112 : 
                        int LA190_124 = input.LA(1);

                         
                        int index190_124 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_124);
                        if ( s>=0 ) return s;
                        break;
                    case 113 : 
                        int LA190_125 = input.LA(1);

                         
                        int index190_125 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_125);
                        if ( s>=0 ) return s;
                        break;
                    case 114 : 
                        int LA190_126 = input.LA(1);

                         
                        int index190_126 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_126);
                        if ( s>=0 ) return s;
                        break;
                    case 115 : 
                        int LA190_127 = input.LA(1);

                         
                        int index190_127 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_127);
                        if ( s>=0 ) return s;
                        break;
                    case 116 : 
                        int LA190_128 = input.LA(1);

                         
                        int index190_128 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_128);
                        if ( s>=0 ) return s;
                        break;
                    case 117 : 
                        int LA190_129 = input.LA(1);

                         
                        int index190_129 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_129);
                        if ( s>=0 ) return s;
                        break;
                    case 118 : 
                        int LA190_130 = input.LA(1);

                         
                        int index190_130 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_130);
                        if ( s>=0 ) return s;
                        break;
                    case 119 : 
                        int LA190_131 = input.LA(1);

                         
                        int index190_131 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_131);
                        if ( s>=0 ) return s;
                        break;
                    case 120 : 
                        int LA190_132 = input.LA(1);

                         
                        int index190_132 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_132);
                        if ( s>=0 ) return s;
                        break;
                    case 121 : 
                        int LA190_133 = input.LA(1);

                         
                        int index190_133 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_133);
                        if ( s>=0 ) return s;
                        break;
                    case 122 : 
                        int LA190_134 = input.LA(1);

                         
                        int index190_134 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_134);
                        if ( s>=0 ) return s;
                        break;
                    case 123 : 
                        int LA190_135 = input.LA(1);

                         
                        int index190_135 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_135);
                        if ( s>=0 ) return s;
                        break;
                    case 124 : 
                        int LA190_136 = input.LA(1);

                         
                        int index190_136 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_136);
                        if ( s>=0 ) return s;
                        break;
                    case 125 : 
                        int LA190_137 = input.LA(1);

                         
                        int index190_137 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_137);
                        if ( s>=0 ) return s;
                        break;
                    case 126 : 
                        int LA190_138 = input.LA(1);

                         
                        int index190_138 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_138);
                        if ( s>=0 ) return s;
                        break;
                    case 127 : 
                        int LA190_139 = input.LA(1);

                         
                        int index190_139 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred336_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 140;}

                         
                        input.seek(index190_139);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 190, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_223s = "\15\uffff";
    static final String dfa_224s = "\1\1\14\uffff";
    static final String dfa_225s = "\1\4\14\uffff";
    static final String dfa_226s = "\1\u00fc\14\uffff";
    static final String dfa_227s = "\1\uffff\1\14\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13";
    static final String dfa_228s = "\1\0\14\uffff}>";
    static final String[] dfa_229s = {
            "\3\1\1\uffff\4\1\1\uffff\2\1\5\uffff\1\1\4\uffff\1\1\1\uffff\7\1\1\uffff\4\1\1\uffff\6\1\2\uffff\5\1\1\uffff\3\1\5\uffff\6\1\1\uffff\1\3\6\uffff\16\1\11\uffff\1\4\5\uffff\2\1\5\uffff\13\1\1\2\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\2\1\6\uffff\3\1\1\uffff\6\1\1\uffff\20\1\11\uffff\2\1\2\uffff\3\1\1\uffff\11\1\1\uffff\14\1\5\uffff\2\1\3\uffff\1\1\42\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_223 = DFA.unpackEncodedString(dfa_223s);
    static final short[] dfa_224 = DFA.unpackEncodedString(dfa_224s);
    static final char[] dfa_225 = DFA.unpackEncodedStringToUnsignedChars(dfa_225s);
    static final char[] dfa_226 = DFA.unpackEncodedStringToUnsignedChars(dfa_226s);
    static final short[] dfa_227 = DFA.unpackEncodedString(dfa_227s);
    static final short[] dfa_228 = DFA.unpackEncodedString(dfa_228s);
    static final short[][] dfa_229 = unpackEncodedStringArray(dfa_229s);

    class DFA189 extends DFA {

        public DFA189(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 189;
            this.eot = dfa_223;
            this.eof = dfa_224;
            this.min = dfa_225;
            this.max = dfa_226;
            this.accept = dfa_227;
            this.special = dfa_228;
            this.transition = dfa_229;
        }
        public String getDescription() {
            return "()* loopback of 7960:6: ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA189_0 = input.LA(1);

                         
                        int index189_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA189_0==EOF||(LA189_0>=RULE_LOWERCASE_ID && LA189_0<=RULE_STRING)||(LA189_0>=RULE_EXPR && LA189_0<=RULE_LOWERCASE_DASHID)||(LA189_0>=RULE_UPPERCASE_PATH && LA189_0<=RULE_BACKCASE_ID)||LA189_0==20||LA189_0==25||(LA189_0>=27 && LA189_0<=33)||(LA189_0>=35 && LA189_0<=38)||(LA189_0>=40 && LA189_0<=45)||(LA189_0>=48 && LA189_0<=52)||(LA189_0>=54 && LA189_0<=56)||(LA189_0>=62 && LA189_0<=67)||(LA189_0>=76 && LA189_0<=89)||(LA189_0>=105 && LA189_0<=106)||(LA189_0>=112 && LA189_0<=122)||(LA189_0>=132 && LA189_0<=133)||(LA189_0>=140 && LA189_0<=142)||(LA189_0>=144 && LA189_0<=149)||(LA189_0>=151 && LA189_0<=166)||(LA189_0>=176 && LA189_0<=177)||(LA189_0>=180 && LA189_0<=182)||(LA189_0>=184 && LA189_0<=192)||(LA189_0>=194 && LA189_0<=205)||(LA189_0>=211 && LA189_0<=212)||LA189_0==216||(LA189_0>=251 && LA189_0<=252)) ) {s = 1;}

                        else if ( LA189_0 == 123 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 0) ) {s = 2;}

                        else if ( LA189_0 == 69 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 1) ) {s = 3;}

                        else if ( LA189_0 == 99 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 2) ) {s = 4;}

                        else if ( LA189_0 == 124 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 3) ) {s = 5;}

                        else if ( LA189_0 == 125 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 4) ) {s = 6;}

                        else if ( LA189_0 == 126 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 5) ) {s = 7;}

                        else if ( LA189_0 == 127 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 6) ) {s = 8;}

                        else if ( LA189_0 == 128 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 7) ) {s = 9;}

                        else if ( LA189_0 == 129 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 8) ) {s = 10;}

                        else if ( LA189_0 == 130 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 9) ) {s = 11;}

                        else if ( LA189_0 == 131 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 10) ) {s = 12;}

                         
                        input.seek(index189_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 189, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_230s = "\u0094\uffff";
    static final String dfa_231s = "\1\1\u0093\uffff";
    static final String dfa_232s = "\1\4\27\uffff\1\0\32\uffff\3\0\1\uffff\1\0\1\uffff\30\0\103\uffff";
    static final String dfa_233s = "\1\u00fc\27\uffff\1\0\32\uffff\3\0\1\uffff\1\0\1\uffff\30\0\103\uffff";
    static final String dfa_234s = "\1\uffff\1\2\u0091\uffff\1\1";
    static final String dfa_235s = "\30\uffff\1\0\32\uffff\1\1\1\2\1\3\1\uffff\1\4\1\uffff\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\103\uffff}>";
    static final String[] dfa_236s = {
            "\1\63\1\64\1\1\1\uffff\1\1\1\67\1\1\1\65\1\uffff\1\73\1\1\5\uffff\1\1\4\uffff\1\1\1\uffff\7\1\1\uffff\3\1\1\30\1\uffff\6\1\2\uffff\5\1\1\uffff\3\1\5\uffff\6\1\1\uffff\1\1\6\uffff\16\1\4\uffff\2\1\2\uffff\4\1\1\uffff\4\1\5\uffff\24\1\1\74\1\75\6\uffff\1\1\1\71\1\72\1\uffff\1\76\1\77\1\100\1\101\1\102\1\103\1\uffff\1\104\1\105\1\106\1\107\1\110\1\111\1\112\1\113\1\114\1\115\1\116\1\117\1\120\3\1\11\uffff\2\1\2\uffff\3\1\1\uffff\11\1\1\uffff\14\1\5\uffff\2\1\3\uffff\1\1\42\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_230 = DFA.unpackEncodedString(dfa_230s);
    static final short[] dfa_231 = DFA.unpackEncodedString(dfa_231s);
    static final char[] dfa_232 = DFA.unpackEncodedStringToUnsignedChars(dfa_232s);
    static final char[] dfa_233 = DFA.unpackEncodedStringToUnsignedChars(dfa_233s);
    static final short[] dfa_234 = DFA.unpackEncodedString(dfa_234s);
    static final short[] dfa_235 = DFA.unpackEncodedString(dfa_235s);
    static final short[][] dfa_236 = unpackEncodedStringArray(dfa_236s);

    class DFA226 extends DFA {

        public DFA226(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 226;
            this.eot = dfa_230;
            this.eof = dfa_231;
            this.min = dfa_232;
            this.max = dfa_233;
            this.accept = dfa_234;
            this.special = dfa_235;
            this.transition = dfa_236;
        }
        public String getDescription() {
            return "()+ loopback of 10689:3: ( (lv_main_1_0= ruleConcept ) )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA226_24 = input.LA(1);

                         
                        int index226_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred415_InternalKim()) ) {s = 147;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index226_24);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA226_51 = input.LA(1);

                         
                        int index226_51 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred415_InternalKim()) ) {s = 147;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index226_51);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA226_52 = input.LA(1);

                         
                        int index226_52 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred415_InternalKim()) ) {s = 147;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index226_52);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA226_53 = input.LA(1);

                         
                        int index226_53 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred415_InternalKim()) ) {s = 147;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index226_53);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA226_55 = input.LA(1);

                         
                        int index226_55 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred415_InternalKim()) ) {s = 147;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index226_55);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA226_57 = input.LA(1);

                         
                        int index226_57 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred415_InternalKim()) ) {s = 147;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index226_57);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA226_58 = input.LA(1);

                         
                        int index226_58 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred415_InternalKim()) ) {s = 147;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index226_58);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA226_59 = input.LA(1);

                         
                        int index226_59 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred415_InternalKim()) ) {s = 147;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index226_59);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA226_60 = input.LA(1);

                         
                        int index226_60 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred415_InternalKim()) ) {s = 147;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index226_60);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA226_61 = input.LA(1);

                         
                        int index226_61 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred415_InternalKim()) ) {s = 147;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index226_61);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA226_62 = input.LA(1);

                         
                        int index226_62 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred415_InternalKim()) ) {s = 147;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index226_62);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA226_63 = input.LA(1);

                         
                        int index226_63 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred415_InternalKim()) ) {s = 147;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index226_63);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA226_64 = input.LA(1);

                         
                        int index226_64 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred415_InternalKim()) ) {s = 147;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index226_64);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA226_65 = input.LA(1);

                         
                        int index226_65 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred415_InternalKim()) ) {s = 147;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index226_65);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA226_66 = input.LA(1);

                         
                        int index226_66 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred415_InternalKim()) ) {s = 147;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index226_66);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA226_67 = input.LA(1);

                         
                        int index226_67 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred415_InternalKim()) ) {s = 147;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index226_67);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA226_68 = input.LA(1);

                         
                        int index226_68 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred415_InternalKim()) ) {s = 147;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index226_68);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA226_69 = input.LA(1);

                         
                        int index226_69 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred415_InternalKim()) ) {s = 147;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index226_69);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA226_70 = input.LA(1);

                         
                        int index226_70 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred415_InternalKim()) ) {s = 147;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index226_70);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA226_71 = input.LA(1);

                         
                        int index226_71 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred415_InternalKim()) ) {s = 147;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index226_71);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA226_72 = input.LA(1);

                         
                        int index226_72 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred415_InternalKim()) ) {s = 147;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index226_72);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA226_73 = input.LA(1);

                         
                        int index226_73 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred415_InternalKim()) ) {s = 147;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index226_73);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA226_74 = input.LA(1);

                         
                        int index226_74 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred415_InternalKim()) ) {s = 147;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index226_74);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA226_75 = input.LA(1);

                         
                        int index226_75 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred415_InternalKim()) ) {s = 147;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index226_75);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA226_76 = input.LA(1);

                         
                        int index226_76 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred415_InternalKim()) ) {s = 147;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index226_76);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA226_77 = input.LA(1);

                         
                        int index226_77 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred415_InternalKim()) ) {s = 147;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index226_77);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA226_78 = input.LA(1);

                         
                        int index226_78 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred415_InternalKim()) ) {s = 147;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index226_78);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA226_79 = input.LA(1);

                         
                        int index226_79 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred415_InternalKim()) ) {s = 147;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index226_79);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA226_80 = input.LA(1);

                         
                        int index226_80 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred415_InternalKim()) ) {s = 147;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index226_80);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 226, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_237s = "\1\4\3\152\2\4\3\152\2\uffff";
    static final String dfa_238s = "\1\13\3\155\1\13\1\16\3\155\2\uffff";
    static final String dfa_239s = "\11\uffff\1\1\1\2";
    static final String[] dfa_240s = {
            "\1\1\1\2\5\uffff\1\3",
            "\1\5\2\uffff\1\4",
            "\1\5\2\uffff\1\4",
            "\1\5\2\uffff\1\4",
            "\1\6\1\7\5\uffff\1\10",
            "\1\12\4\uffff\1\11\1\uffff\1\12\2\uffff\1\12",
            "\1\5\2\uffff\1\4",
            "\1\5\2\uffff\1\4",
            "\1\5\2\uffff\1\4",
            "",
            ""
    };
    static final char[] dfa_237 = DFA.unpackEncodedStringToUnsignedChars(dfa_237s);
    static final char[] dfa_238 = DFA.unpackEncodedStringToUnsignedChars(dfa_238s);
    static final short[] dfa_239 = DFA.unpackEncodedString(dfa_239s);
    static final short[][] dfa_240 = unpackEncodedStringArray(dfa_240s);

    class DFA231 extends DFA {

        public DFA231(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 231;
            this.eot = dfa_39;
            this.eof = dfa_39;
            this.min = dfa_237;
            this.max = dfa_238;
            this.accept = dfa_239;
            this.special = dfa_89;
            this.transition = dfa_240;
        }
        public String getDescription() {
            return "10850:7: (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId )";
        }
    }
    static final String dfa_241s = "\11\uffff\1\2\1\1";
    static final short[] dfa_241 = DFA.unpackEncodedString(dfa_241s);

    class DFA232 extends DFA {

        public DFA232(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 232;
            this.eot = dfa_39;
            this.eof = dfa_39;
            this.min = dfa_237;
            this.max = dfa_238;
            this.accept = dfa_241;
            this.special = dfa_89;
            this.transition = dfa_240;
        }
        public String getDescription() {
            return "10913:7: (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId )";
        }
    }
    static final String dfa_242s = "\1\140\12\uffff";
    static final String dfa_243s = "\1\u00f9\12\uffff";
    static final String dfa_244s = "\1\uffff\1\5\1\1\1\2\1\3\6\4";
    static final String dfa_245s = "\1\0\12\uffff}>";
    static final String[] dfa_246s = {
            "\1\1\102\uffff\1\1\3\uffff\1\5\1\6\1\7\2\1\1\2\1\3\1\4\1\12\21\uffff\1\1\23\uffff\3\1\2\uffff\36\1\1\10\1\11",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_242 = DFA.unpackEncodedStringToUnsignedChars(dfa_242s);
    static final char[] dfa_243 = DFA.unpackEncodedStringToUnsignedChars(dfa_243s);
    static final short[] dfa_244 = DFA.unpackEncodedString(dfa_244s);
    static final short[] dfa_245 = DFA.unpackEncodedString(dfa_245s);
    static final short[][] dfa_246 = unpackEncodedStringArray(dfa_246s);

    class DFA238 extends DFA {

        public DFA238(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 238;
            this.eot = dfa_39;
            this.eof = dfa_39;
            this.min = dfa_242;
            this.max = dfa_243;
            this.accept = dfa_244;
            this.special = dfa_245;
            this.transition = dfa_246;
        }
        public String getDescription() {
            return "()* loopback of 11004:6: ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA238_0 = input.LA(1);

                         
                        int index238_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA238_0==96||LA238_0==163||(LA238_0>=170 && LA238_0<=171)||LA238_0==193||(LA238_0>=213 && LA238_0<=215)||(LA238_0>=218 && LA238_0<=247)) ) {s = 1;}

                        else if ( LA238_0 == 172 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 0) ) {s = 2;}

                        else if ( LA238_0 == 173 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 1) ) {s = 3;}

                        else if ( LA238_0 == 174 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 2) ) {s = 4;}

                        else if ( LA238_0 == 167 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3) ) {s = 5;}

                        else if ( LA238_0 == 168 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3) ) {s = 6;}

                        else if ( LA238_0 == 169 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3) ) {s = 7;}

                        else if ( LA238_0 == 248 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3) ) {s = 8;}

                        else if ( LA238_0 == 249 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3) ) {s = 9;}

                        else if ( LA238_0 == 175 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3) ) {s = 10;}

                         
                        input.seek(index238_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 238, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_247s = "\110\uffff";
    static final String dfa_248s = "\1\1\107\uffff";
    static final String dfa_249s = "\1\4\17\uffff\1\4\12\uffff\1\4\54\uffff";
    static final String dfa_250s = "\1\u00d3\17\uffff\1\u00cf\12\uffff\1\u00cf\54\uffff";
    static final String dfa_251s = "\1\uffff\1\32\1\1\2\2\2\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\uffff\1\16\3\17\1\20\1\21\1\22\1\23\1\24\1\26\1\uffff\1\30\5\31\1\15\2\25\42\31\1\27";
    static final String dfa_252s = "\1\0\17\uffff\1\1\12\uffff\1\2\54\uffff}>";
    static final String[] dfa_253s = {
            "\1\35\1\36\1\2\4\uffff\1\37\2\uffff\1\40\5\uffff\1\1\24\uffff\1\1\1\34\112\uffff\1\1\72\uffff\1\3\1\4\2\uffff\1\5\1\6\1\7\1\uffff\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\2\uffff\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\5\uffff\1\41",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\57\1\55\1\51\2\uffff\1\56\1\50\1\60\1\uffff\1\54\30\uffff\1\106\54\uffff\1\45\16\uffff\1\43\15\uffff\1\44\23\uffff\1\61\1\62\7\uffff\1\52\1\53\1\uffff\1\63\1\64\1\65\1\66\1\67\1\70\1\uffff\1\71\1\72\1\73\1\74\1\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\35\uffff\1\42\14\uffff\1\46\1\47",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\57\1\55\1\51\2\uffff\1\56\1\50\1\60\1\uffff\1\54\30\uffff\1\106\54\uffff\1\45\60\uffff\1\61\1\62\7\uffff\1\52\1\53\1\uffff\1\63\1\64\1\65\1\66\1\67\1\70\1\uffff\1\71\1\72\1\73\1\74\1\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\23\uffff\1\107\26\uffff\1\46\1\47",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_247 = DFA.unpackEncodedString(dfa_247s);
    static final short[] dfa_248 = DFA.unpackEncodedString(dfa_248s);
    static final char[] dfa_249 = DFA.unpackEncodedStringToUnsignedChars(dfa_249s);
    static final char[] dfa_250 = DFA.unpackEncodedStringToUnsignedChars(dfa_250s);
    static final short[] dfa_251 = DFA.unpackEncodedString(dfa_251s);
    static final short[] dfa_252 = DFA.unpackEncodedString(dfa_252s);
    static final short[][] dfa_253 = unpackEncodedStringArray(dfa_253s);

    class DFA276 extends DFA {

        public DFA276(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 276;
            this.eot = dfa_247;
            this.eof = dfa_248;
            this.min = dfa_249;
            this.max = dfa_250;
            this.accept = dfa_251;
            this.special = dfa_252;
            this.transition = dfa_253;
        }
        public String getDescription() {
            return "()* loopback of 11462:6: ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( ( (lv_definedAuthority_29_1= RULE_UPPERCASE_ID | lv_definedAuthority_29_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'targeting' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_109= 'implies' ( (lv_implications_110_0= ruleImplication ) ) (otherlv_111= ',' ( (lv_implications_112_0= ruleImplication ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_113= 'uses' otherlv_114= 'authority' ( ( (lv_authorities_115_1= RULE_UPPERCASE_ID | lv_authorities_115_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_116= 'metadata' ( (lv_metadata_117_0= ruleMap ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_properties_118_0= rulePropertyStatement ) ) )+ ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA276_0 = input.LA(1);

                         
                        int index276_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA276_0==EOF||LA276_0==20||LA276_0==41||LA276_0==117) ) {s = 1;}

                        else if ( LA276_0 == RULE_STRING && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 0) ) {s = 2;}

                        else if ( LA276_0 == 176 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 1) ) {s = 3;}

                        else if ( LA276_0 == 177 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 1) ) {s = 4;}

                        else if ( LA276_0 == 180 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 2) ) {s = 5;}

                        else if ( LA276_0 == 181 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 2) ) {s = 6;}

                        else if ( LA276_0 == 182 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 3) ) {s = 7;}

                        else if ( LA276_0 == 184 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 4) ) {s = 8;}

                        else if ( LA276_0 == 185 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 5) ) {s = 9;}

                        else if ( LA276_0 == 186 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 6) ) {s = 10;}

                        else if ( LA276_0 == 187 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 7) ) {s = 11;}

                        else if ( LA276_0 == 188 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 8) ) {s = 12;}

                        else if ( LA276_0 == 189 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 9) ) {s = 13;}

                        else if ( LA276_0 == 190 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 10) ) {s = 14;}

                        else if ( LA276_0 == 191 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 11) ) {s = 15;}

                        else if ( (LA276_0==192) ) {s = 16;}

                        else if ( LA276_0 == 195 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 13) ) {s = 17;}

                        else if ( LA276_0 == 196 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 14) ) {s = 18;}

                        else if ( LA276_0 == 197 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 14) ) {s = 19;}

                        else if ( LA276_0 == 198 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 14) ) {s = 20;}

                        else if ( LA276_0 == 199 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 15) ) {s = 21;}

                        else if ( LA276_0 == 200 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 16) ) {s = 22;}

                        else if ( LA276_0 == 201 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 17) ) {s = 23;}

                        else if ( LA276_0 == 202 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 18) ) {s = 24;}

                        else if ( LA276_0 == 203 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 19) ) {s = 25;}

                        else if ( LA276_0 == 204 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 26;}

                        else if ( (LA276_0==205) ) {s = 27;}

                        else if ( LA276_0 == 42 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 23) ) {s = 28;}

                        else if ( LA276_0 == RULE_LOWERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 29;}

                        else if ( LA276_0 == RULE_UPPERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 30;}

                        else if ( LA276_0 == RULE_LOWERCASE_DASHID && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 31;}

                        else if ( LA276_0 == RULE_BACKCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 32;}

                        else if ( LA276_0 == 211 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 33;}

                         
                        input.seek(index276_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA276_16 = input.LA(1);

                         
                        int index276_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA276_16 == 193 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 12) ) {s = 34;}

                        else if ( LA276_16 == 98 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 20) ) {s = 35;}

                        else if ( LA276_16 == 112 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 20) ) {s = 36;}

                        else if ( LA276_16 == 83 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 37;}

                        else if ( LA276_16 == 206 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 38;}

                        else if ( LA276_16 == 207 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 39;}

                        else if ( LA276_16 == RULE_INT && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 40;}

                        else if ( LA276_16 == RULE_STRING && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 41;}

                        else if ( LA276_16 == 141 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 42;}

                        else if ( LA276_16 == 142 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 43;}

                        else if ( LA276_16 == RULE_UPPERCASE_PATH && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 44;}

                        else if ( LA276_16 == RULE_UPPERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 45;}

                        else if ( LA276_16 == RULE_CAMELCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 46;}

                        else if ( LA276_16 == RULE_LOWERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 47;}

                        else if ( LA276_16 == RULE_LOWERCASE_DASHID && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 48;}

                        else if ( LA276_16 == 132 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 49;}

                        else if ( LA276_16 == 133 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 50;}

                        else if ( LA276_16 == 144 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 51;}

                        else if ( LA276_16 == 145 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 52;}

                        else if ( LA276_16 == 146 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 53;}

                        else if ( LA276_16 == 147 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 54;}

                        else if ( LA276_16 == 148 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 55;}

                        else if ( LA276_16 == 149 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 56;}

                        else if ( LA276_16 == 151 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 57;}

                        else if ( LA276_16 == 152 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 58;}

                        else if ( LA276_16 == 153 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 59;}

                        else if ( LA276_16 == 154 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 60;}

                        else if ( LA276_16 == 155 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 61;}

                        else if ( LA276_16 == 156 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 62;}

                        else if ( LA276_16 == 157 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 63;}

                        else if ( LA276_16 == 158 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 64;}

                        else if ( LA276_16 == 159 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 65;}

                        else if ( LA276_16 == 160 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 66;}

                        else if ( LA276_16 == 161 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 67;}

                        else if ( LA276_16 == 162 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 68;}

                        else if ( LA276_16 == 163 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 69;}

                        else if ( LA276_16 == 38 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 70;}

                         
                        input.seek(index276_16);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA276_27 = input.LA(1);

                         
                        int index276_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA276_27 == 183 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 71;}

                        else if ( LA276_27 == 83 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 37;}

                        else if ( LA276_27 == 206 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 38;}

                        else if ( LA276_27 == 207 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 39;}

                        else if ( LA276_27 == RULE_INT && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 40;}

                        else if ( LA276_27 == RULE_STRING && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 41;}

                        else if ( LA276_27 == 141 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 42;}

                        else if ( LA276_27 == 142 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 43;}

                        else if ( LA276_27 == RULE_UPPERCASE_PATH && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 44;}

                        else if ( LA276_27 == RULE_UPPERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 45;}

                        else if ( LA276_27 == RULE_CAMELCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 46;}

                        else if ( LA276_27 == RULE_LOWERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 47;}

                        else if ( LA276_27 == RULE_LOWERCASE_DASHID && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 48;}

                        else if ( LA276_27 == 132 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 49;}

                        else if ( LA276_27 == 133 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 50;}

                        else if ( LA276_27 == 144 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 51;}

                        else if ( LA276_27 == 145 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 52;}

                        else if ( LA276_27 == 146 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 53;}

                        else if ( LA276_27 == 147 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 54;}

                        else if ( LA276_27 == 148 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 55;}

                        else if ( LA276_27 == 149 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 56;}

                        else if ( LA276_27 == 151 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 57;}

                        else if ( LA276_27 == 152 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 58;}

                        else if ( LA276_27 == 153 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 59;}

                        else if ( LA276_27 == 154 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 60;}

                        else if ( LA276_27 == 155 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 61;}

                        else if ( LA276_27 == 156 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 62;}

                        else if ( LA276_27 == 157 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 63;}

                        else if ( LA276_27 == 158 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 64;}

                        else if ( LA276_27 == 159 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 65;}

                        else if ( LA276_27 == 160 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 66;}

                        else if ( LA276_27 == 161 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 67;}

                        else if ( LA276_27 == 162 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 68;}

                        else if ( LA276_27 == 163 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 69;}

                        else if ( LA276_27 == 38 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 24) ) {s = 70;}

                         
                        input.seek(index276_27);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 276, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_254s = "\1\1\11\uffff";
    static final String dfa_255s = "\1\4\1\uffff\7\0\1\uffff";
    static final String dfa_256s = "\1\u00d3\1\uffff\7\0\1\uffff";
    static final String dfa_257s = "\1\uffff\1\2\7\uffff\1\1";
    static final String dfa_258s = "\2\uffff\1\2\1\4\1\6\1\3\1\1\1\0\1\5\1\uffff}>";
    static final String[] dfa_259s = {
            "\1\4\1\5\1\1\4\uffff\1\6\2\uffff\1\7\5\uffff\1\1\24\uffff\2\1\112\uffff\1\1\72\uffff\2\1\2\uffff\3\1\1\uffff\10\1\1\2\2\uffff\12\1\1\3\5\uffff\1\10",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };
    static final short[] dfa_254 = DFA.unpackEncodedString(dfa_254s);
    static final char[] dfa_255 = DFA.unpackEncodedStringToUnsignedChars(dfa_255s);
    static final char[] dfa_256 = DFA.unpackEncodedStringToUnsignedChars(dfa_256s);
    static final short[] dfa_257 = DFA.unpackEncodedString(dfa_257s);
    static final short[] dfa_258 = DFA.unpackEncodedString(dfa_258s);
    static final short[][] dfa_259 = unpackEncodedStringArray(dfa_259s);

    class DFA275 extends DFA {

        public DFA275(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 275;
            this.eot = dfa_104;
            this.eof = dfa_254;
            this.min = dfa_255;
            this.max = dfa_256;
            this.accept = dfa_257;
            this.special = dfa_258;
            this.transition = dfa_259;
        }
        public String getDescription() {
            return "()+ loopback of 13076:9: ({...}? => ( (lv_properties_118_0= rulePropertyStatement ) ) )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA275_7 = input.LA(1);

                         
                        int index275_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred498_InternalKim()&&(true))) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index275_7);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA275_6 = input.LA(1);

                         
                        int index275_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred498_InternalKim()&&(true))) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index275_6);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA275_2 = input.LA(1);

                         
                        int index275_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred498_InternalKim()&&(true))) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index275_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA275_5 = input.LA(1);

                         
                        int index275_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred498_InternalKim()&&(true))) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index275_5);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA275_3 = input.LA(1);

                         
                        int index275_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred498_InternalKim()&&(true))) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index275_3);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA275_8 = input.LA(1);

                         
                        int index275_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred498_InternalKim()&&(true))) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index275_8);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA275_4 = input.LA(1);

                         
                        int index275_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred498_InternalKim()&&(true))) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index275_4);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 275, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_260s = "\1\4\4\uffff\35\0\1\uffff";
    static final String dfa_261s = "\1\u00cf\4\uffff\35\0\1\uffff";
    static final String dfa_262s = "\1\uffff\1\1\40\uffff\1\2";
    static final String dfa_263s = "\5\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\uffff}>";
    static final String[] dfa_264s = {
            "\1\12\1\10\3\uffff\1\11\1\1\1\13\1\uffff\1\7\30\uffff\1\41\54\uffff\1\1\60\uffff\1\14\1\15\7\uffff\1\5\1\6\1\uffff\1\16\1\17\1\20\1\21\1\22\1\23\1\uffff\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\52\uffff\2\1",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };
    static final char[] dfa_260 = DFA.unpackEncodedStringToUnsignedChars(dfa_260s);
    static final char[] dfa_261 = DFA.unpackEncodedStringToUnsignedChars(dfa_261s);
    static final short[] dfa_262 = DFA.unpackEncodedString(dfa_262s);
    static final short[] dfa_263 = DFA.unpackEncodedString(dfa_263s);
    static final short[][] dfa_264 = unpackEncodedStringArray(dfa_264s);

    class DFA277 extends DFA {

        public DFA277(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 277;
            this.eot = dfa_114;
            this.eof = dfa_114;
            this.min = dfa_260;
            this.max = dfa_261;
            this.accept = dfa_262;
            this.special = dfa_263;
            this.transition = dfa_264;
        }
        public String getDescription() {
            return "13128:3: ( (lv_quantifier_0_0= ruleQuantification ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA277_5 = input.LA(1);

                         
                        int index277_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred500_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index277_5);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA277_6 = input.LA(1);

                         
                        int index277_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred500_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index277_6);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA277_7 = input.LA(1);

                         
                        int index277_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred500_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index277_7);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA277_8 = input.LA(1);

                         
                        int index277_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred500_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index277_8);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA277_9 = input.LA(1);

                         
                        int index277_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred500_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index277_9);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA277_10 = input.LA(1);

                         
                        int index277_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred500_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index277_10);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA277_11 = input.LA(1);

                         
                        int index277_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred500_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index277_11);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA277_12 = input.LA(1);

                         
                        int index277_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred500_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index277_12);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA277_13 = input.LA(1);

                         
                        int index277_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred500_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index277_13);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA277_14 = input.LA(1);

                         
                        int index277_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred500_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index277_14);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA277_15 = input.LA(1);

                         
                        int index277_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred500_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index277_15);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA277_16 = input.LA(1);

                         
                        int index277_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred500_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index277_16);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA277_17 = input.LA(1);

                         
                        int index277_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred500_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index277_17);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA277_18 = input.LA(1);

                         
                        int index277_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred500_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index277_18);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA277_19 = input.LA(1);

                         
                        int index277_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred500_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index277_19);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA277_20 = input.LA(1);

                         
                        int index277_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred500_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index277_20);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA277_21 = input.LA(1);

                         
                        int index277_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred500_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index277_21);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA277_22 = input.LA(1);

                         
                        int index277_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred500_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index277_22);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA277_23 = input.LA(1);

                         
                        int index277_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred500_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index277_23);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA277_24 = input.LA(1);

                         
                        int index277_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred500_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index277_24);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA277_25 = input.LA(1);

                         
                        int index277_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred500_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index277_25);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA277_26 = input.LA(1);

                         
                        int index277_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred500_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index277_26);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA277_27 = input.LA(1);

                         
                        int index277_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred500_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index277_27);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA277_28 = input.LA(1);

                         
                        int index277_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred500_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index277_28);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA277_29 = input.LA(1);

                         
                        int index277_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred500_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index277_29);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA277_30 = input.LA(1);

                         
                        int index277_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred500_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index277_30);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA277_31 = input.LA(1);

                         
                        int index277_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred500_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index277_31);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA277_32 = input.LA(1);

                         
                        int index277_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred500_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index277_32);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA277_33 = input.LA(1);

                         
                        int index277_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred500_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index277_33);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 277, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_265s = "\155\uffff";
    static final String dfa_266s = "\1\2\154\uffff";
    static final String dfa_267s = "\1\4\1\0\153\uffff";
    static final String dfa_268s = "\1\u00fc\1\0\153\uffff";
    static final String dfa_269s = "\2\uffff\1\2\151\uffff\1\1";
    static final String dfa_270s = "\1\uffff\1\0\153\uffff}>";
    static final String[] dfa_271s = {
            "\3\2\1\uffff\6\2\1\uffff\1\2\5\uffff\4\2\2\uffff\3\2\10\uffff\1\1\12\uffff\2\2\23\uffff\6\2\16\uffff\3\2\3\uffff\2\2\7\uffff\1\2\4\uffff\1\2\2\uffff\1\2\3\uffff\1\2\16\uffff\2\2\7\uffff\2\2\1\uffff\6\2\1\uffff\15\2\3\uffff\11\2\21\uffff\1\2\23\uffff\4\2\1\uffff\40\2\1\uffff\2\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_265 = DFA.unpackEncodedString(dfa_265s);
    static final short[] dfa_266 = DFA.unpackEncodedString(dfa_266s);
    static final char[] dfa_267 = DFA.unpackEncodedStringToUnsignedChars(dfa_267s);
    static final char[] dfa_268 = DFA.unpackEncodedStringToUnsignedChars(dfa_268s);
    static final short[] dfa_269 = DFA.unpackEncodedString(dfa_269s);
    static final short[] dfa_270 = DFA.unpackEncodedString(dfa_270s);
    static final short[][] dfa_271 = unpackEncodedStringArray(dfa_271s);

    class DFA297 extends DFA {

        public DFA297(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 297;
            this.eot = dfa_265;
            this.eof = dfa_266;
            this.min = dfa_267;
            this.max = dfa_268;
            this.accept = dfa_269;
            this.special = dfa_270;
            this.transition = dfa_271;
        }
        public String getDescription() {
            return "13917:3: ( ( ( '(' )=>otherlv_1= '(' ) ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA297_1 = input.LA(1);

                         
                        int index297_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred529_InternalKim()) ) {s = 108;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index297_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 297, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_272s = "\64\uffff";
    static final String dfa_273s = "\1\4\60\0\3\uffff";
    static final String dfa_274s = "\1\u00fc\60\0\3\uffff";
    static final String dfa_275s = "\61\uffff\1\2\1\uffff\1\1";
    static final String dfa_276s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\3\uffff}>";
    static final String[] dfa_277s = {
            "\1\13\1\11\1\45\1\uffff\1\50\1\12\1\42\1\14\1\uffff\1\10\15\uffff\1\61\1\46\1\47\10\uffff\1\1\2\uffff\1\61\7\uffff\1\60\1\51\31\uffff\1\52\1\57\1\56\1\53\2\uffff\1\54\1\5\1\uffff\1\55\33\uffff\1\3\4\uffff\1\4\15\uffff\1\15\1\16\7\uffff\1\6\1\7\1\uffff\1\17\1\20\1\21\1\22\1\23\1\24\1\uffff\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\64\uffff\1\2\42\uffff\1\43\1\44",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            ""
    };

    static final short[] dfa_272 = DFA.unpackEncodedString(dfa_272s);
    static final char[] dfa_273 = DFA.unpackEncodedStringToUnsignedChars(dfa_273s);
    static final char[] dfa_274 = DFA.unpackEncodedStringToUnsignedChars(dfa_274s);
    static final short[] dfa_275 = DFA.unpackEncodedString(dfa_275s);
    static final short[] dfa_276 = DFA.unpackEncodedString(dfa_276s);
    static final short[][] dfa_277 = unpackEncodedStringArray(dfa_277s);

    class DFA298 extends DFA {

        public DFA298(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 298;
            this.eot = dfa_272;
            this.eof = dfa_272;
            this.min = dfa_273;
            this.max = dfa_274;
            this.accept = dfa_275;
            this.special = dfa_276;
            this.transition = dfa_277;
        }
        public String getDescription() {
            return "13982:3: ( (lv_contents_2_0= ruleValueWithIdAndConcept ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA298_1 = input.LA(1);

                         
                        int index298_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred530_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index298_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA298_2 = input.LA(1);

                         
                        int index298_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred530_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index298_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA298_3 = input.LA(1);

                         
                        int index298_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred530_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index298_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA298_4 = input.LA(1);

                         
                        int index298_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred530_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index298_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA298_5 = input.LA(1);

                         
                        int index298_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred530_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index298_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA298_6 = input.LA(1);

                         
                        int index298_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred530_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index298_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA298_7 = input.LA(1);

                         
                        int index298_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred530_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index298_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA298_8 = input.LA(1);

                         
                        int index298_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred530_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index298_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA298_9 = input.LA(1);

                         
                        int index298_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred530_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index298_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA298_10 = input.LA(1);

                         
                        int index298_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred530_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index298_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA298_11 = input.LA(1);

                         
                        int index298_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred530_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index298_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA298_12 = input.LA(1);

                         
                        int index298_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred530_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index298_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA298_13 = input.LA(1);

                         
                        int index298_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred530_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index298_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA298_14 = input.LA(1);

                         
                        int index298_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred530_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index298_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA298_15 = input.LA(1);

                         
                        int index298_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred530_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index298_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA298_16 = input.LA(1);

                         
                        int index298_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred530_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index298_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA298_17 = input.LA(1);

                         
                        int index298_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred530_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index298_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA298_18 = input.LA(1);

                         
                        int index298_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred530_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index298_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA298_19 = input.LA(1);

                         
                        int index298_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred530_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index298_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA298_20 = input.LA(1);

                         
                        int index298_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred530_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index298_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA298_21 = input.LA(1);

                         
                        int index298_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred530_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index298_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA298_22 = input.LA(1);

                         
                        int index298_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred530_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index298_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA298_23 = input.LA(1);

                         
                        int index298_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred530_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index298_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA298_24 = input.LA(1);

                         
                        int index298_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred530_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index298_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA298_25 = input.LA(1);

                         
                        int index298_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred530_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index298_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA298_26 = input.LA(1);

                         
                        int index298_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred530_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index298_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA298_27 = input.LA(1);

                         
                        int index298_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred530_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index298_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA298_28 = input.LA(1);

                         
                        int index298_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred530_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index298_28);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA298_29 = input.LA(1);

                         
                        int index298_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred530_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index298_29);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA298_30 = input.LA(1);

                         
                        int index298_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred530_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index298_30);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA298_31 = input.LA(1);

                         
                        int index298_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred530_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index298_31);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA298_32 = input.LA(1);

                         
                        int index298_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred530_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index298_32);
                        if ( s>=0 ) return s;
                        break;
                    case 32 : 
                        int LA298_33 = input.LA(1);

                         
                        int index298_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred530_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index298_33);
                        if ( s>=0 ) return s;
                        break;
                    case 33 : 
                        int LA298_34 = input.LA(1);

                         
                        int index298_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred530_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index298_34);
                        if ( s>=0 ) return s;
                        break;
                    case 34 : 
                        int LA298_35 = input.LA(1);

                         
                        int index298_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred530_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index298_35);
                        if ( s>=0 ) return s;
                        break;
                    case 35 : 
                        int LA298_36 = input.LA(1);

                         
                        int index298_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred530_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index298_36);
                        if ( s>=0 ) return s;
                        break;
                    case 36 : 
                        int LA298_37 = input.LA(1);

                         
                        int index298_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred530_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index298_37);
                        if ( s>=0 ) return s;
                        break;
                    case 37 : 
                        int LA298_38 = input.LA(1);

                         
                        int index298_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred530_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index298_38);
                        if ( s>=0 ) return s;
                        break;
                    case 38 : 
                        int LA298_39 = input.LA(1);

                         
                        int index298_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred530_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index298_39);
                        if ( s>=0 ) return s;
                        break;
                    case 39 : 
                        int LA298_40 = input.LA(1);

                         
                        int index298_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred530_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index298_40);
                        if ( s>=0 ) return s;
                        break;
                    case 40 : 
                        int LA298_41 = input.LA(1);

                         
                        int index298_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred530_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index298_41);
                        if ( s>=0 ) return s;
                        break;
                    case 41 : 
                        int LA298_42 = input.LA(1);

                         
                        int index298_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred530_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index298_42);
                        if ( s>=0 ) return s;
                        break;
                    case 42 : 
                        int LA298_43 = input.LA(1);

                         
                        int index298_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred530_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index298_43);
                        if ( s>=0 ) return s;
                        break;
                    case 43 : 
                        int LA298_44 = input.LA(1);

                         
                        int index298_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred530_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index298_44);
                        if ( s>=0 ) return s;
                        break;
                    case 44 : 
                        int LA298_45 = input.LA(1);

                         
                        int index298_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred530_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index298_45);
                        if ( s>=0 ) return s;
                        break;
                    case 45 : 
                        int LA298_46 = input.LA(1);

                         
                        int index298_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred530_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index298_46);
                        if ( s>=0 ) return s;
                        break;
                    case 46 : 
                        int LA298_47 = input.LA(1);

                         
                        int index298_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred530_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index298_47);
                        if ( s>=0 ) return s;
                        break;
                    case 47 : 
                        int LA298_48 = input.LA(1);

                         
                        int index298_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred530_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index298_48);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 298, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_278s = "\3\uffff\1\12\2\uffff\1\12\5\uffff\1\12\2\uffff\1\12";
    static final String dfa_279s = "\1\6\2\12\1\4\2\uffff\1\4\3\12\2\uffff\1\4\2\12\1\4";
    static final String dfa_280s = "\1\u00fc\2\12\1\u00ff\2\uffff\1\u00ff\1\12\2\u00fc\2\uffff\1\u00ff\2\12\1\u00fc";
    static final String dfa_281s = "\4\uffff\1\3\1\4\4\uffff\1\2\1\1\4\uffff";
    static final String dfa_282s = "\20\uffff}>";
    static final String[] dfa_283s = {
            "\1\4\3\uffff\1\3\21\uffff\2\5\u00dd\uffff\1\1\1\2",
            "\1\3",
            "\1\3",
            "\3\12\1\uffff\4\12\1\uffff\1\12\13\uffff\1\12\1\uffff\3\12\6\uffff\1\13\1\uffff\1\12\1\uffff\2\12\7\uffff\2\12\31\uffff\4\12\2\uffff\2\12\1\uffff\1\12\27\uffff\1\7\3\uffff\1\12\4\uffff\1\12\15\uffff\2\12\6\uffff\3\12\1\uffff\6\12\1\uffff\15\12\64\uffff\1\12\42\uffff\2\12\1\6\1\10\1\11",
            "",
            "",
            "\3\12\1\uffff\4\12\1\uffff\1\12\13\uffff\1\12\1\uffff\3\12\6\uffff\1\13\1\uffff\1\12\1\uffff\2\12\7\uffff\2\12\31\uffff\4\12\2\uffff\2\12\1\uffff\1\12\27\uffff\1\7\3\uffff\1\12\4\uffff\1\12\15\uffff\2\12\6\uffff\3\12\1\uffff\6\12\1\uffff\15\12\64\uffff\1\12\42\uffff\2\12\1\uffff\1\10\1\11",
            "\1\14",
            "\1\17\u00f0\uffff\1\15\1\16",
            "\1\17\u00f0\uffff\1\15\1\16",
            "",
            "",
            "\3\12\1\uffff\4\12\1\uffff\1\12\13\uffff\1\12\1\uffff\3\12\6\uffff\1\13\1\uffff\1\12\1\uffff\2\12\7\uffff\2\12\31\uffff\4\12\2\uffff\2\12\1\uffff\1\12\33\uffff\1\12\4\uffff\1\12\15\uffff\2\12\6\uffff\3\12\1\uffff\6\12\1\uffff\15\12\64\uffff\1\12\42\uffff\2\12\1\uffff\1\10\1\11",
            "\1\17",
            "\1\17",
            "\3\12\1\uffff\4\12\1\uffff\1\12\13\uffff\1\12\1\uffff\3\12\6\uffff\1\13\1\uffff\1\12\1\uffff\2\12\7\uffff\2\12\31\uffff\4\12\2\uffff\2\12\1\uffff\1\12\33\uffff\1\12\4\uffff\1\12\15\uffff\2\12\6\uffff\3\12\1\uffff\6\12\1\uffff\15\12\64\uffff\1\12\42\uffff\2\12"
    };
    static final short[] dfa_278 = DFA.unpackEncodedString(dfa_278s);
    static final char[] dfa_279 = DFA.unpackEncodedStringToUnsignedChars(dfa_279s);
    static final char[] dfa_280 = DFA.unpackEncodedStringToUnsignedChars(dfa_280s);
    static final short[] dfa_281 = DFA.unpackEncodedString(dfa_281s);
    static final short[] dfa_282 = DFA.unpackEncodedString(dfa_282s);
    static final short[][] dfa_283 = unpackEncodedStringArray(dfa_283s);

    class DFA302 extends DFA {

        public DFA302(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 302;
            this.eot = dfa_80;
            this.eof = dfa_278;
            this.min = dfa_279;
            this.max = dfa_280;
            this.accept = dfa_281;
            this.special = dfa_282;
            this.transition = dfa_283;
        }
        public String getDescription() {
            return "14050:2: ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) )";
        }
    }
    static final String dfa_284s = "\22\uffff";
    static final String dfa_285s = "\3\uffff\1\14\4\uffff\1\14\5\uffff\1\14\2\uffff\1\14";
    static final String dfa_286s = "\1\6\2\12\1\4\4\uffff\1\4\3\12\2\uffff\1\4\2\12\1\4";
    static final String dfa_287s = "\1\u00fc\2\12\1\u00ff\4\uffff\1\u00ff\1\12\2\u00fc\2\uffff\1\u00ff\2\12\1\u00fc";
    static final String dfa_288s = "\4\uffff\1\3\1\4\1\5\1\6\4\uffff\1\2\1\1\4\uffff";
    static final String dfa_289s = "\22\uffff}>";
    static final String[] dfa_290s = {
            "\1\4\3\uffff\1\3\1\uffff\1\6\16\uffff\1\7\2\5\u00dd\uffff\1\1\1\2",
            "\1\3",
            "\1\3",
            "\3\14\1\uffff\6\14\6\uffff\1\14\4\uffff\1\14\1\uffff\3\14\1\uffff\3\14\2\uffff\1\15\2\14\2\uffff\2\14\1\uffff\2\14\3\uffff\2\14\3\uffff\3\14\5\uffff\6\14\1\uffff\1\14\43\uffff\1\14\3\uffff\1\11\26\uffff\2\14\7\uffff\2\14\1\uffff\6\14\1\uffff\15\14\64\uffff\1\14\42\uffff\2\14\1\10\1\12\1\13",
            "",
            "",
            "",
            "",
            "\3\14\1\uffff\6\14\6\uffff\1\14\4\uffff\1\14\1\uffff\3\14\1\uffff\3\14\2\uffff\1\15\2\14\2\uffff\2\14\1\uffff\2\14\3\uffff\2\14\3\uffff\3\14\5\uffff\6\14\1\uffff\1\14\43\uffff\1\14\3\uffff\1\11\26\uffff\2\14\7\uffff\2\14\1\uffff\6\14\1\uffff\15\14\64\uffff\1\14\42\uffff\2\14\1\uffff\1\12\1\13",
            "\1\16",
            "\1\21\u00f0\uffff\1\17\1\20",
            "\1\21\u00f0\uffff\1\17\1\20",
            "",
            "",
            "\3\14\1\uffff\6\14\6\uffff\1\14\4\uffff\1\14\1\uffff\3\14\1\uffff\3\14\2\uffff\1\15\2\14\2\uffff\2\14\1\uffff\2\14\3\uffff\2\14\3\uffff\3\14\5\uffff\6\14\1\uffff\1\14\43\uffff\1\14\32\uffff\2\14\7\uffff\2\14\1\uffff\6\14\1\uffff\15\14\64\uffff\1\14\42\uffff\2\14\1\uffff\1\12\1\13",
            "\1\21",
            "\1\21",
            "\3\14\1\uffff\6\14\6\uffff\1\14\4\uffff\1\14\1\uffff\3\14\1\uffff\3\14\2\uffff\1\15\2\14\2\uffff\2\14\1\uffff\2\14\3\uffff\2\14\3\uffff\3\14\5\uffff\6\14\1\uffff\1\14\43\uffff\1\14\32\uffff\2\14\7\uffff\2\14\1\uffff\6\14\1\uffff\15\14\64\uffff\1\14\42\uffff\2\14"
    };

    static final short[] dfa_284 = DFA.unpackEncodedString(dfa_284s);
    static final short[] dfa_285 = DFA.unpackEncodedString(dfa_285s);
    static final char[] dfa_286 = DFA.unpackEncodedStringToUnsignedChars(dfa_286s);
    static final char[] dfa_287 = DFA.unpackEncodedStringToUnsignedChars(dfa_287s);
    static final short[] dfa_288 = DFA.unpackEncodedString(dfa_288s);
    static final short[] dfa_289 = DFA.unpackEncodedString(dfa_289s);
    static final short[][] dfa_290 = unpackEncodedStringArray(dfa_290s);

    class DFA304 extends DFA {

        public DFA304(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 304;
            this.eot = dfa_284;
            this.eof = dfa_285;
            this.min = dfa_286;
            this.max = dfa_287;
            this.accept = dfa_288;
            this.special = dfa_289;
            this.transition = dfa_290;
        }
        public String getDescription() {
            return "14187:2: ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) | ( (lv_id_6_0= RULE_ID ) ) | ( (lv_comma_7_0= ',' ) ) )";
        }
    }
    static final String dfa_291s = "\1\uffff\3\5\4\uffff\3\5";
    static final String dfa_292s = "\1\4\3\33\1\122\1\uffff\1\4\1\uffff\3\33";
    static final String dfa_293s = "\1\u00fc\4\u00d9\1\uffff\1\13\1\uffff\3\u00d9";
    static final String dfa_294s = "\5\uffff\1\2\1\uffff\1\1\3\uffff";
    static final String[] dfa_295s = {
            "\1\1\1\2\1\5\1\uffff\3\5\1\3\1\uffff\1\5\16\uffff\2\5\10\uffff\1\5\12\uffff\2\5\31\uffff\4\5\2\uffff\2\5\1\uffff\1\5\33\uffff\1\5\4\uffff\1\5\15\uffff\2\5\7\uffff\2\5\1\uffff\6\5\1\uffff\12\5\1\4\2\5\64\uffff\1\5\42\uffff\2\5",
            "\1\5\12\uffff\1\5\2\uffff\1\5\50\uffff\1\7\27\uffff\1\5\2\uffff\1\6\153\uffff\1\7",
            "\1\5\12\uffff\1\5\2\uffff\1\5\50\uffff\1\7\27\uffff\1\5\2\uffff\1\6\153\uffff\1\7",
            "\1\5\12\uffff\1\5\2\uffff\1\5\50\uffff\1\7\27\uffff\1\5\2\uffff\1\6\153\uffff\1\7",
            "\1\7\50\uffff\1\5\135\uffff\1\7",
            "",
            "\1\10\1\11\5\uffff\1\12",
            "",
            "\1\5\12\uffff\1\5\2\uffff\1\5\50\uffff\1\7\27\uffff\1\5\2\uffff\1\6\153\uffff\1\7",
            "\1\5\12\uffff\1\5\2\uffff\1\5\50\uffff\1\7\27\uffff\1\5\2\uffff\1\6\153\uffff\1\7",
            "\1\5\12\uffff\1\5\2\uffff\1\5\50\uffff\1\7\27\uffff\1\5\2\uffff\1\6\153\uffff\1\7"
    };
    static final short[] dfa_291 = DFA.unpackEncodedString(dfa_291s);
    static final char[] dfa_292 = DFA.unpackEncodedStringToUnsignedChars(dfa_292s);
    static final char[] dfa_293 = DFA.unpackEncodedStringToUnsignedChars(dfa_293s);
    static final short[] dfa_294 = DFA.unpackEncodedString(dfa_294s);
    static final short[][] dfa_295 = unpackEncodedStringArray(dfa_295s);

    class DFA313 extends DFA {

        public DFA313(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 313;
            this.eot = dfa_39;
            this.eof = dfa_291;
            this.min = dfa_292;
            this.max = dfa_293;
            this.accept = dfa_294;
            this.special = dfa_89;
            this.transition = dfa_295;
        }
        public String getDescription() {
            return "14612:2: ( ( ( (lv_pairs_0_0= ruleKeyValuePair ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_pairs_2_0= ruleKeyValuePair ) ) )* ) | ( ( (lv_singleValue_3_0= ruleValueWithIdAndConcept ) ) ( ( ( ',' )=>otherlv_4= ',' ) ( ( (lv_singleValue_5_0= ruleValueWithIdAndConcept ) ) | ( (lv_pairs_6_0= ruleKeyValuePair ) ) ) )* ) )";
        }
    }
    static final String dfa_296s = "\2\uffff\3\1\3\uffff\3\1";
    static final String dfa_297s = "\1\4\1\uffff\3\33\1\122\1\4\1\uffff\3\33";
    static final String dfa_298s = "\1\u00fc\1\uffff\4\u00d9\1\13\1\uffff\3\u00d9";
    static final String dfa_299s = "\1\uffff\1\1\5\uffff\1\2\3\uffff";
    static final String[] dfa_300s = {
            "\1\3\1\2\1\1\1\uffff\3\1\1\4\1\uffff\1\1\16\uffff\2\1\10\uffff\1\1\12\uffff\2\1\31\uffff\4\1\2\uffff\2\1\1\uffff\1\1\33\uffff\1\1\4\uffff\1\1\15\uffff\2\1\7\uffff\2\1\1\uffff\6\1\1\uffff\12\1\1\5\2\1\64\uffff\1\1\42\uffff\2\1",
            "",
            "\1\1\12\uffff\1\1\2\uffff\1\1\50\uffff\1\7\27\uffff\1\1\2\uffff\1\6\153\uffff\1\7",
            "\1\1\12\uffff\1\1\2\uffff\1\1\50\uffff\1\7\27\uffff\1\1\2\uffff\1\6\153\uffff\1\7",
            "\1\1\12\uffff\1\1\2\uffff\1\1\50\uffff\1\7\27\uffff\1\1\2\uffff\1\6\153\uffff\1\7",
            "\1\7\50\uffff\1\1\135\uffff\1\7",
            "\1\10\1\11\5\uffff\1\12",
            "",
            "\1\1\12\uffff\1\1\2\uffff\1\1\50\uffff\1\7\27\uffff\1\1\2\uffff\1\6\153\uffff\1\7",
            "\1\1\12\uffff\1\1\2\uffff\1\1\50\uffff\1\7\27\uffff\1\1\2\uffff\1\6\153\uffff\1\7",
            "\1\1\12\uffff\1\1\2\uffff\1\1\50\uffff\1\7\27\uffff\1\1\2\uffff\1\6\153\uffff\1\7"
    };
    static final short[] dfa_296 = DFA.unpackEncodedString(dfa_296s);
    static final char[] dfa_297 = DFA.unpackEncodedStringToUnsignedChars(dfa_297s);
    static final char[] dfa_298 = DFA.unpackEncodedStringToUnsignedChars(dfa_298s);
    static final short[] dfa_299 = DFA.unpackEncodedString(dfa_299s);
    static final short[][] dfa_300 = unpackEncodedStringArray(dfa_300s);

    class DFA311 extends DFA {

        public DFA311(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 311;
            this.eot = dfa_39;
            this.eof = dfa_296;
            this.min = dfa_297;
            this.max = dfa_298;
            this.accept = dfa_299;
            this.special = dfa_89;
            this.transition = dfa_300;
        }
        public String getDescription() {
            return "14691:5: ( ( (lv_singleValue_5_0= ruleValueWithIdAndConcept ) ) | ( (lv_pairs_6_0= ruleKeyValuePair ) ) )";
        }
    }
    static final String dfa_301s = "\1\4\1\0\7\uffff\4\0\25\uffff\3\0\21\uffff";
    static final String dfa_302s = "\1\u00fc\1\0\7\uffff\4\0\25\uffff\3\0\21\uffff";
    static final String dfa_303s = "\2\uffff\1\2\1\3\41\uffff\1\6\2\uffff\1\7\1\11\1\13\5\uffff\1\14\1\1\1\4\1\10\1\5\1\12";
    static final String dfa_304s = "\1\uffff\1\0\7\uffff\1\1\1\2\1\3\1\4\25\uffff\1\5\1\6\1\7\21\uffff}>";
    static final String[] dfa_305s = {
            "\1\13\1\11\1\45\1\uffff\1\50\1\12\1\42\1\14\1\uffff\1\3\16\uffff\2\45\10\uffff\1\1\12\uffff\1\60\1\51\31\uffff\4\52\2\uffff\1\52\1\3\1\uffff\1\52\33\uffff\1\3\4\uffff\1\3\15\uffff\2\3\7\uffff\2\3\1\uffff\6\3\1\uffff\15\3\64\uffff\1\2\42\uffff\1\43\1\44",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_301 = DFA.unpackEncodedStringToUnsignedChars(dfa_301s);
    static final char[] dfa_302 = DFA.unpackEncodedStringToUnsignedChars(dfa_302s);
    static final short[] dfa_303 = DFA.unpackEncodedString(dfa_303s);
    static final short[] dfa_304 = DFA.unpackEncodedString(dfa_304s);
    static final short[][] dfa_305 = unpackEncodedStringArray(dfa_305s);

    class DFA315 extends DFA {

        public DFA315(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 315;
            this.eot = dfa_91;
            this.eof = dfa_91;
            this.min = dfa_301;
            this.max = dfa_302;
            this.accept = dfa_303;
            this.special = dfa_304;
            this.transition = dfa_305;
        }
        public String getDescription() {
            return "14752:2: ( ( (lv_list_0_0= ruleList ) ) | ( (lv_map_1_0= ruleMap ) ) | ( (lv_concept_2_0= ruleSimpleObservableSemantics ) ) | ( (lv_function_3_0= ruleFunction ) ) | ( (lv_date_4_0= ruleDate ) ) | ( (lv_literal_5_0= ruleLiteral ) ) | ( (lv_expr_6_0= RULE_EXPR ) ) | ( ( (lv_id_7_1= rulePathName | lv_id_7_2= RULE_LOWERCASE_ID | lv_id_7_3= RULE_UPPERCASE_ID | lv_id_7_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_table_8_0= ruleLookupTable ) ) | ( (lv_quantity_9_0= ruleQuantity ) ) | ( ( (lv_op_10_0= ruleREL_OPERATOR ) ) ( (lv_expression_11_0= ruleNumber ) ) ) | ( (lv_null_12_0= 'unknown' ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA315_1 = input.LA(1);

                         
                        int index315_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred559_InternalKim()) ) {s = 49;}

                        else if ( (synpred561_InternalKim()) ) {s = 3;}

                         
                        input.seek(index315_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA315_9 = input.LA(1);

                         
                        int index315_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred561_InternalKim()) ) {s = 3;}

                        else if ( (synpred562_InternalKim()) ) {s = 50;}

                        else if ( (synpred569_InternalKim()) ) {s = 51;}

                         
                        input.seek(index315_9);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA315_10 = input.LA(1);

                         
                        int index315_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred561_InternalKim()) ) {s = 3;}

                        else if ( (synpred569_InternalKim()) ) {s = 51;}

                         
                        input.seek(index315_10);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA315_11 = input.LA(1);

                         
                        int index315_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred561_InternalKim()) ) {s = 3;}

                        else if ( (synpred562_InternalKim()) ) {s = 50;}

                        else if ( (synpred569_InternalKim()) ) {s = 51;}

                         
                        input.seek(index315_11);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA315_12 = input.LA(1);

                         
                        int index315_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred561_InternalKim()) ) {s = 3;}

                        else if ( (synpred562_InternalKim()) ) {s = 50;}

                        else if ( (synpred569_InternalKim()) ) {s = 51;}

                         
                        input.seek(index315_12);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA315_34 = input.LA(1);

                         
                        int index315_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred563_InternalKim()) ) {s = 52;}

                        else if ( (synpred564_InternalKim()) ) {s = 37;}

                        else if ( (synpred571_InternalKim()) ) {s = 53;}

                         
                        input.seek(index315_34);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA315_35 = input.LA(1);

                         
                        int index315_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred564_InternalKim()) ) {s = 37;}

                        else if ( (synpred571_InternalKim()) ) {s = 53;}

                         
                        input.seek(index315_35);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA315_36 = input.LA(1);

                         
                        int index315_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred564_InternalKim()) ) {s = 37;}

                        else if ( (synpred571_InternalKim()) ) {s = 53;}

                         
                        input.seek(index315_36);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 315, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_306s = "\24\uffff";
    static final String dfa_307s = "\1\4\3\0\5\uffff\2\0\11\uffff";
    static final String dfa_308s = "\1\u00fc\3\0\5\uffff\2\0\11\uffff";
    static final String dfa_309s = "\4\uffff\1\1\6\uffff\1\2\1\3\1\4\1\5\1\6\1\11\1\12\1\7\1\10";
    static final String dfa_310s = "\1\uffff\1\0\1\1\1\2\5\uffff\1\3\1\4\11\uffff}>";
    static final String[] dfa_311s = {
            "\1\11\1\12\1\4\1\uffff\1\14\1\15\1\3\1\13\1\4\16\uffff\3\4\10\uffff\1\16\12\uffff\1\21\1\17\u00a5\uffff\1\20\42\uffff\1\1\1\2",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_306 = DFA.unpackEncodedString(dfa_306s);
    static final char[] dfa_307 = DFA.unpackEncodedStringToUnsignedChars(dfa_307s);
    static final char[] dfa_308 = DFA.unpackEncodedStringToUnsignedChars(dfa_308s);
    static final short[] dfa_309 = DFA.unpackEncodedString(dfa_309s);
    static final short[] dfa_310 = DFA.unpackEncodedString(dfa_310s);
    static final short[][] dfa_311 = unpackEncodedStringArray(dfa_311s);

    class DFA318 extends DFA {

        public DFA318(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 318;
            this.eot = dfa_306;
            this.eof = dfa_306;
            this.min = dfa_307;
            this.max = dfa_308;
            this.accept = dfa_309;
            this.special = dfa_310;
            this.transition = dfa_311;
        }
        public String getDescription() {
            return "15072:2: ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( (lv_language_4_0= RULE_UPPERCASE_ID ) ) )? ) | ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_6_0= ruleList ) ) | ( (lv_table_7_0= ruleLookupTable ) ) | ( (lv_quantity_8_0= ruleQuantity ) ) | ( (lv_date_9_0= ruleDate ) ) | ( (lv_map_10_0= ruleMap ) ) | ( (lv_null_11_0= 'unknown' ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA318_1 = input.LA(1);

                         
                        int index318_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred573_InternalKim()) ) {s = 4;}

                        else if ( (synpred582_InternalKim()) ) {s = 18;}

                         
                        input.seek(index318_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA318_2 = input.LA(1);

                         
                        int index318_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred573_InternalKim()) ) {s = 4;}

                        else if ( (synpred582_InternalKim()) ) {s = 18;}

                         
                        input.seek(index318_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA318_3 = input.LA(1);

                         
                        int index318_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred573_InternalKim()) ) {s = 4;}

                        else if ( (synpred582_InternalKim()) ) {s = 18;}

                        else if ( (synpred583_InternalKim()) ) {s = 19;}

                         
                        input.seek(index318_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA318_9 = input.LA(1);

                         
                        int index318_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred574_InternalKim()) ) {s = 11;}

                        else if ( (synpred579_InternalKim()) ) {s = 13;}

                         
                        input.seek(index318_9);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA318_10 = input.LA(1);

                         
                        int index318_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred574_InternalKim()) ) {s = 11;}

                        else if ( (synpred579_InternalKim()) ) {s = 13;}

                         
                        input.seek(index318_10);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 318, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_312s = "\34\uffff";
    static final String dfa_313s = "\3\uffff\1\4\2\uffff\1\22\1\uffff\1\22\2\uffff\2\4\1\20\7\uffff\1\4\2\uffff\1\4\3\uffff";
    static final String dfa_314s = "\1\4\2\12\1\31\2\uffff\1\31\1\0\1\31\1\46\1\uffff\2\31\1\4\2\12\3\uffff\1\4\1\uffff\1\31\2\12\1\31\3\46";
    static final String dfa_315s = "\1\u00fc\2\12\1\u0102\2\uffff\1\155\1\0\2\155\1\uffff\2\u00ff\1\u0103\2\u00fc\3\uffff\1\13\1\uffff\1\u00ff\2\12\4\155";
    static final String dfa_316s = "\4\uffff\1\1\1\2\4\uffff\1\4\5\uffff\1\5\1\6\1\7\1\uffff\1\3\7\uffff";
    static final String dfa_317s = "\7\uffff\1\0\24\uffff}>";
    static final String[] dfa_318s = {
            "\1\10\1\6\1\4\1\uffff\1\12\1\7\1\3\1\11\1\uffff\1\5\16\uffff\2\4\10\uffff\1\5\135\uffff\2\5\7\uffff\2\5\1\uffff\6\5\1\uffff\15\5\127\uffff\1\1\1\2",
            "\1\13",
            "\1\13",
            "\1\4\12\uffff\1\4\107\uffff\1\20\1\15\u008e\uffff\1\21\1\14\1\16\1\17\3\21",
            "",
            "",
            "\1\22\14\uffff\1\24\103\uffff\1\5\2\uffff\1\23",
            "\1\uffff",
            "\1\22\14\uffff\1\24\103\uffff\1\5\2\uffff\1\23",
            "\1\24\103\uffff\1\5\2\uffff\1\23",
            "",
            "\1\4\12\uffff\1\4\107\uffff\1\20\1\15\u008f\uffff\1\14\1\16\1\17",
            "\1\4\12\uffff\1\4\107\uffff\1\20\1\15\u0090\uffff\1\16\1\17",
            "\2\20\3\uffff\1\20\1\25\3\uffff\1\20\12\uffff\1\20\14\uffff\1\20\1\uffff\1\20\103\uffff\1\20\u0096\uffff\1\20",
            "\1\30\u00f0\uffff\1\26\1\27",
            "\1\30\u00f0\uffff\1\26\1\27",
            "",
            "",
            "",
            "\1\31\1\32\5\uffff\1\33",
            "",
            "\1\4\12\uffff\1\4\107\uffff\2\20\u0090\uffff\1\16\1\17",
            "\1\30",
            "\1\30",
            "\1\4\12\uffff\1\4\107\uffff\2\20",
            "\1\24\103\uffff\1\5\2\uffff\1\23",
            "\1\24\103\uffff\1\5\2\uffff\1\23",
            "\1\24\103\uffff\1\5\2\uffff\1\23"
    };

    static final short[] dfa_312 = DFA.unpackEncodedString(dfa_312s);
    static final short[] dfa_313 = DFA.unpackEncodedString(dfa_313s);
    static final char[] dfa_314 = DFA.unpackEncodedStringToUnsignedChars(dfa_314s);
    static final char[] dfa_315 = DFA.unpackEncodedStringToUnsignedChars(dfa_315s);
    static final short[] dfa_316 = DFA.unpackEncodedString(dfa_316s);
    static final short[] dfa_317 = DFA.unpackEncodedString(dfa_317s);
    static final short[][] dfa_318 = unpackEncodedStringArray(dfa_318s);

    class DFA320 extends DFA {

        public DFA320(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 320;
            this.eot = dfa_312;
            this.eof = dfa_313;
            this.min = dfa_314;
            this.max = dfa_315;
            this.accept = dfa_316;
            this.special = dfa_317;
            this.transition = dfa_318;
        }
        public String getDescription() {
            return "15341:2: ( ( (lv_literal_0_0= ruleLiteral ) ) | ( (lv_concept_1_0= ruleConceptDeclaration ) ) | ( (lv_function_2_0= ruleFunction ) ) | ( (lv_expr_3_0= RULE_EXPR ) ) | ( (lv_quantity_4_0= ruleQuantity ) ) | ( (lv_date_5_0= ruleDate ) ) | ( ( (lv_id_6_1= RULE_LOWERCASE_ID | lv_id_6_2= RULE_UPPERCASE_ID | lv_id_6_3= RULE_CAMELCASE_ID ) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA320_7 = input.LA(1);

                         
                        int index320_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred586_InternalKim()) ) {s = 5;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index320_7);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 320, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_319s = "\46\uffff";
    static final String dfa_320s = "\1\4\6\uffff\35\0\2\uffff";
    static final String dfa_321s = "\1\u00fc\6\uffff\35\0\2\uffff";
    static final String dfa_322s = "\1\uffff\1\1\43\uffff\1\2";
    static final String dfa_323s = "\7\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\2\uffff}>";
    static final String[] dfa_324s = {
            "\1\14\1\12\1\1\1\uffff\1\1\1\13\1\1\1\15\1\uffff\1\11\16\uffff\2\1\10\uffff\1\43\112\uffff\1\45\22\uffff\1\16\1\17\7\uffff\1\7\1\10\1\uffff\1\20\1\21\1\22\1\23\1\24\1\25\1\uffff\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\127\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };

    static final short[] dfa_319 = DFA.unpackEncodedString(dfa_319s);
    static final char[] dfa_320 = DFA.unpackEncodedStringToUnsignedChars(dfa_320s);
    static final char[] dfa_321 = DFA.unpackEncodedStringToUnsignedChars(dfa_321s);
    static final short[] dfa_322 = DFA.unpackEncodedString(dfa_322s);
    static final short[] dfa_323 = DFA.unpackEncodedString(dfa_323s);
    static final short[][] dfa_324 = unpackEncodedStringArray(dfa_324s);

    class DFA329 extends DFA {

        public DFA329(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 329;
            this.eot = dfa_319;
            this.eof = dfa_319;
            this.min = dfa_320;
            this.max = dfa_321;
            this.accept = dfa_322;
            this.special = dfa_323;
            this.transition = dfa_324;
        }
        public String getDescription() {
            return "16026:3: ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA329_7 = input.LA(1);

                         
                        int index329_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred632_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index329_7);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA329_8 = input.LA(1);

                         
                        int index329_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred632_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index329_8);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA329_9 = input.LA(1);

                         
                        int index329_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred632_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index329_9);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA329_10 = input.LA(1);

                         
                        int index329_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred632_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index329_10);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA329_11 = input.LA(1);

                         
                        int index329_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred632_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index329_11);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA329_12 = input.LA(1);

                         
                        int index329_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred632_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index329_12);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA329_13 = input.LA(1);

                         
                        int index329_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred632_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index329_13);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA329_14 = input.LA(1);

                         
                        int index329_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred632_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index329_14);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA329_15 = input.LA(1);

                         
                        int index329_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred632_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index329_15);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA329_16 = input.LA(1);

                         
                        int index329_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred632_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index329_16);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA329_17 = input.LA(1);

                         
                        int index329_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred632_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index329_17);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA329_18 = input.LA(1);

                         
                        int index329_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred632_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index329_18);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA329_19 = input.LA(1);

                         
                        int index329_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred632_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index329_19);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA329_20 = input.LA(1);

                         
                        int index329_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred632_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index329_20);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA329_21 = input.LA(1);

                         
                        int index329_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred632_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index329_21);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA329_22 = input.LA(1);

                         
                        int index329_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred632_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index329_22);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA329_23 = input.LA(1);

                         
                        int index329_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred632_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index329_23);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA329_24 = input.LA(1);

                         
                        int index329_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred632_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index329_24);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA329_25 = input.LA(1);

                         
                        int index329_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred632_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index329_25);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA329_26 = input.LA(1);

                         
                        int index329_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred632_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index329_26);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA329_27 = input.LA(1);

                         
                        int index329_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred632_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index329_27);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA329_28 = input.LA(1);

                         
                        int index329_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred632_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index329_28);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA329_29 = input.LA(1);

                         
                        int index329_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred632_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index329_29);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA329_30 = input.LA(1);

                         
                        int index329_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred632_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index329_30);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA329_31 = input.LA(1);

                         
                        int index329_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred632_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index329_31);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA329_32 = input.LA(1);

                         
                        int index329_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred632_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index329_32);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA329_33 = input.LA(1);

                         
                        int index329_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred632_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index329_33);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA329_34 = input.LA(1);

                         
                        int index329_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred632_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index329_34);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA329_35 = input.LA(1);

                         
                        int index329_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred632_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index329_35);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 329, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_325s = "\1\1\35\uffff\1\1\52\uffff";
    static final String dfa_326s = "\1\12\1\uffff\1\4\33\uffff\1\24\2\46\35\uffff\1\4\1\11\1\4\3\46\1\0\4\uffff";
    static final String dfa_327s = "\1\u00fc\1\uffff\1\u00fc\33\uffff\3\155\35\uffff\1\13\1\11\1\12\3\155\1\0\4\uffff";
    static final String dfa_328s = "\1\uffff\1\7\1\uffff\1\1\2\2\3\3\22\4\2\5\1\6\3\uffff\35\4\7\uffff\4\4";
    static final String dfa_329s = "\1\1\1\uffff\1\2\75\uffff\1\3\3\uffff\1\0\4\uffff}>";
    static final String[] dfa_330s = {
            "\1\10\11\uffff\1\1\6\uffff\1\1\3\uffff\3\1\1\uffff\1\3\1\uffff\1\1\4\uffff\1\1\5\uffff\1\4\5\uffff\1\1\1\2\1\1\5\uffff\6\1\10\uffff\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\30\uffff\1\5\1\33\1\34\1\35\1\uffff\1\27\1\30\1\31\1\32\u0080\uffff\1\6\1\7",
            "",
            "\1\36\1\37\3\uffff\1\47\1\43\1\40\1\uffff\1\46\30\uffff\1\75\135\uffff\1\50\1\51\7\uffff\1\44\1\45\1\uffff\1\52\1\53\1\54\1\55\1\56\1\57\1\uffff\1\60\1\61\1\62\1\63\1\64\1\65\1\66\1\67\1\70\1\71\1\72\1\73\1\74\127\uffff\1\41\1\42",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\1\6\uffff\1\1\12\uffff\1\1\3\uffff\1\1\13\uffff\3\1\5\uffff\6\1\46\uffff\1\77\2\uffff\1\76",
            "\1\1\103\uffff\1\100\2\uffff\1\76",
            "\1\1\103\uffff\1\77\2\uffff\1\76",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\101\1\102\5\uffff\1\103",
            "\1\104",
            "\1\105\1\106\1\110\2\uffff\1\104\1\107",
            "\1\1\103\uffff\1\77\2\uffff\1\76",
            "\1\1\103\uffff\1\77\2\uffff\1\76",
            "\1\1\103\uffff\1\77\2\uffff\1\76",
            "\1\uffff",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_325 = DFA.unpackEncodedString(dfa_325s);
    static final char[] dfa_326 = DFA.unpackEncodedStringToUnsignedChars(dfa_326s);
    static final char[] dfa_327 = DFA.unpackEncodedStringToUnsignedChars(dfa_327s);
    static final short[] dfa_328 = DFA.unpackEncodedString(dfa_328s);
    static final short[] dfa_329 = DFA.unpackEncodedString(dfa_329s);
    static final short[][] dfa_330 = unpackEncodedStringArray(dfa_330s);

    class DFA336 extends DFA {

        public DFA336(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 336;
            this.eot = dfa_178;
            this.eof = dfa_325;
            this.min = dfa_326;
            this.max = dfa_327;
            this.accept = dfa_328;
            this.special = dfa_329;
            this.transition = dfa_330;
        }
        public String getDescription() {
            return "()* loopback of 16090:6: ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'named' ( ( (lv_name_21_1= RULE_LOWERCASE_ID | lv_name_21_2= RULE_STRING ) ) ) ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA336_68 = input.LA(1);

                         
                        int index336_68 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred640_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 72;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index336_68);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA336_0 = input.LA(1);

                         
                        int index336_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA336_0==EOF||LA336_0==20||LA336_0==27||(LA336_0>=31 && LA336_0<=33)||LA336_0==37||LA336_0==42||LA336_0==54||LA336_0==56||(LA336_0>=62 && LA336_0<=67)) ) {s = 1;}

                        else if ( (LA336_0==55) ) {s = 2;}

                        else if ( LA336_0 == 35 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 0) ) {s = 3;}

                        else if ( LA336_0 == 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 1) ) {s = 4;}

                        else if ( LA336_0 == 114 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 1) ) {s = 5;}

                        else if ( LA336_0 == 251 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 6;}

                        else if ( LA336_0 == 252 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 7;}

                        else if ( LA336_0 == RULE_INT && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 8;}

                        else if ( LA336_0 == 76 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 9;}

                        else if ( LA336_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 10;}

                        else if ( LA336_0 == 78 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 11;}

                        else if ( LA336_0 == 79 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 12;}

                        else if ( LA336_0 == 80 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 13;}

                        else if ( LA336_0 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 14;}

                        else if ( LA336_0 == 82 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 15;}

                        else if ( LA336_0 == 83 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 16;}

                        else if ( LA336_0 == 84 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 17;}

                        else if ( LA336_0 == 85 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 18;}

                        else if ( LA336_0 == 86 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 19;}

                        else if ( LA336_0 == 87 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 20;}

                        else if ( LA336_0 == 88 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 21;}

                        else if ( LA336_0 == 89 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 22;}

                        else if ( LA336_0 == 119 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 23;}

                        else if ( LA336_0 == 120 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 24;}

                        else if ( LA336_0 == 121 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 25;}

                        else if ( LA336_0 == 122 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 26;}

                        else if ( LA336_0 == 115 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 4) ) {s = 27;}

                        else if ( LA336_0 == 116 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 4) ) {s = 28;}

                        else if ( LA336_0 == 117 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 29;}

                         
                        input.seek(index336_0);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA336_2 = input.LA(1);

                         
                        int index336_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA336_2==RULE_LOWERCASE_ID) ) {s = 30;}

                        else if ( (LA336_2==RULE_UPPERCASE_ID) ) {s = 31;}

                        else if ( (LA336_2==RULE_LOWERCASE_DASHID) ) {s = 32;}

                        else if ( LA336_2 == 251 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 33;}

                        else if ( LA336_2 == 252 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 34;}

                        else if ( LA336_2 == RULE_INT && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 35;}

                        else if ( LA336_2 == 141 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 36;}

                        else if ( LA336_2 == 142 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 37;}

                        else if ( LA336_2 == RULE_UPPERCASE_PATH && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 38;}

                        else if ( LA336_2 == RULE_CAMELCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 39;}

                        else if ( LA336_2 == 132 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 40;}

                        else if ( LA336_2 == 133 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 41;}

                        else if ( LA336_2 == 144 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 42;}

                        else if ( LA336_2 == 145 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 43;}

                        else if ( LA336_2 == 146 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 44;}

                        else if ( LA336_2 == 147 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 45;}

                        else if ( LA336_2 == 148 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 46;}

                        else if ( LA336_2 == 149 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 47;}

                        else if ( LA336_2 == 151 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 48;}

                        else if ( LA336_2 == 152 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 49;}

                        else if ( LA336_2 == 153 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 50;}

                        else if ( LA336_2 == 154 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 51;}

                        else if ( LA336_2 == 155 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 52;}

                        else if ( LA336_2 == 156 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 53;}

                        else if ( LA336_2 == 157 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 54;}

                        else if ( LA336_2 == 158 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 55;}

                        else if ( LA336_2 == 159 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 56;}

                        else if ( LA336_2 == 160 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 57;}

                        else if ( LA336_2 == 161 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 58;}

                        else if ( LA336_2 == 162 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 59;}

                        else if ( LA336_2 == 163 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 60;}

                        else if ( LA336_2 == 38 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 61;}

                         
                        input.seek(index336_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA336_64 = input.LA(1);

                         
                        int index336_64 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA336_64 == RULE_LOWERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 69;}

                        else if ( LA336_64 == RULE_UPPERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 70;}

                        else if ( LA336_64 == RULE_INT && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 71;}

                        else if ( LA336_64 == RULE_STRING && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 72;}

                        else if ( (LA336_64==RULE_CAMELCASE_ID) ) {s = 68;}

                         
                        input.seek(index336_64);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 336, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_331s = "\56\uffff";
    static final String dfa_332s = "\1\1\55\uffff";
    static final String dfa_333s = "\1\12\6\uffff\1\0\20\uffff\22\0\4\uffff";
    static final String dfa_334s = "\1\u00fc\6\uffff\1\0\20\uffff\22\0\4\uffff";
    static final String dfa_335s = "\1\uffff\1\2\53\uffff\1\1";
    static final String dfa_336s = "\7\uffff\1\0\20\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\4\uffff}>";
    static final String[] dfa_337s = {
            "\1\1\11\uffff\1\1\6\uffff\1\1\3\uffff\3\1\1\uffff\1\1\1\uffff\1\1\4\uffff\1\1\5\uffff\1\1\5\uffff\1\1\1\7\1\1\5\uffff\6\1\10\uffff\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45\30\uffff\4\1\1\uffff\1\46\1\47\1\50\1\51\u0080\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_331 = DFA.unpackEncodedString(dfa_331s);
    static final short[] dfa_332 = DFA.unpackEncodedString(dfa_332s);
    static final char[] dfa_333 = DFA.unpackEncodedStringToUnsignedChars(dfa_333s);
    static final char[] dfa_334 = DFA.unpackEncodedStringToUnsignedChars(dfa_334s);
    static final short[] dfa_335 = DFA.unpackEncodedString(dfa_335s);
    static final short[] dfa_336 = DFA.unpackEncodedString(dfa_336s);
    static final short[][] dfa_337 = unpackEncodedStringArray(dfa_337s);

    class DFA333 extends DFA {

        public DFA333(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 333;
            this.eot = dfa_331;
            this.eof = dfa_332;
            this.min = dfa_333;
            this.max = dfa_334;
            this.accept = dfa_335;
            this.special = dfa_336;
            this.transition = dfa_337;
        }
        public String getDescription() {
            return "()* loopback of 16290:9: ( (lv_valueOperators_17_0= ruleValueOperator ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA333_7 = input.LA(1);

                         
                        int index333_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred639_InternalKim()) ) {s = 45;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index333_7);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA333_24 = input.LA(1);

                         
                        int index333_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred639_InternalKim()) ) {s = 45;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index333_24);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA333_25 = input.LA(1);

                         
                        int index333_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred639_InternalKim()) ) {s = 45;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index333_25);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA333_26 = input.LA(1);

                         
                        int index333_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred639_InternalKim()) ) {s = 45;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index333_26);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA333_27 = input.LA(1);

                         
                        int index333_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred639_InternalKim()) ) {s = 45;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index333_27);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA333_28 = input.LA(1);

                         
                        int index333_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred639_InternalKim()) ) {s = 45;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index333_28);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA333_29 = input.LA(1);

                         
                        int index333_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred639_InternalKim()) ) {s = 45;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index333_29);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA333_30 = input.LA(1);

                         
                        int index333_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred639_InternalKim()) ) {s = 45;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index333_30);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA333_31 = input.LA(1);

                         
                        int index333_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred639_InternalKim()) ) {s = 45;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index333_31);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA333_32 = input.LA(1);

                         
                        int index333_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred639_InternalKim()) ) {s = 45;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index333_32);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA333_33 = input.LA(1);

                         
                        int index333_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred639_InternalKim()) ) {s = 45;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index333_33);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA333_34 = input.LA(1);

                         
                        int index333_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred639_InternalKim()) ) {s = 45;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index333_34);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA333_35 = input.LA(1);

                         
                        int index333_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred639_InternalKim()) ) {s = 45;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index333_35);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA333_36 = input.LA(1);

                         
                        int index333_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred639_InternalKim()) ) {s = 45;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index333_36);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA333_37 = input.LA(1);

                         
                        int index333_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred639_InternalKim()) ) {s = 45;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index333_37);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA333_38 = input.LA(1);

                         
                        int index333_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred639_InternalKim()) ) {s = 45;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index333_38);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA333_39 = input.LA(1);

                         
                        int index333_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred639_InternalKim()) ) {s = 45;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index333_39);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA333_40 = input.LA(1);

                         
                        int index333_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred639_InternalKim()) ) {s = 45;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index333_40);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA333_41 = input.LA(1);

                         
                        int index333_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred639_InternalKim()) ) {s = 45;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index333_41);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 333, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA337 extends DFA {

        public DFA337(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 337;
            this.eot = dfa_319;
            this.eof = dfa_319;
            this.min = dfa_320;
            this.max = dfa_321;
            this.accept = dfa_322;
            this.special = dfa_323;
            this.transition = dfa_324;
        }
        public String getDescription() {
            return "16434:3: ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA337_7 = input.LA(1);

                         
                        int index337_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred645_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index337_7);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA337_8 = input.LA(1);

                         
                        int index337_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred645_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index337_8);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA337_9 = input.LA(1);

                         
                        int index337_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred645_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index337_9);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA337_10 = input.LA(1);

                         
                        int index337_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred645_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index337_10);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA337_11 = input.LA(1);

                         
                        int index337_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred645_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index337_11);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA337_12 = input.LA(1);

                         
                        int index337_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred645_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index337_12);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA337_13 = input.LA(1);

                         
                        int index337_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred645_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index337_13);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA337_14 = input.LA(1);

                         
                        int index337_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred645_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index337_14);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA337_15 = input.LA(1);

                         
                        int index337_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred645_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index337_15);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA337_16 = input.LA(1);

                         
                        int index337_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred645_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index337_16);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA337_17 = input.LA(1);

                         
                        int index337_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred645_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index337_17);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA337_18 = input.LA(1);

                         
                        int index337_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred645_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index337_18);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA337_19 = input.LA(1);

                         
                        int index337_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred645_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index337_19);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA337_20 = input.LA(1);

                         
                        int index337_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred645_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index337_20);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA337_21 = input.LA(1);

                         
                        int index337_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred645_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index337_21);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA337_22 = input.LA(1);

                         
                        int index337_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred645_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index337_22);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA337_23 = input.LA(1);

                         
                        int index337_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred645_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index337_23);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA337_24 = input.LA(1);

                         
                        int index337_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred645_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index337_24);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA337_25 = input.LA(1);

                         
                        int index337_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred645_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index337_25);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA337_26 = input.LA(1);

                         
                        int index337_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred645_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index337_26);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA337_27 = input.LA(1);

                         
                        int index337_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred645_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index337_27);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA337_28 = input.LA(1);

                         
                        int index337_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred645_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index337_28);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA337_29 = input.LA(1);

                         
                        int index337_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred645_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index337_29);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA337_30 = input.LA(1);

                         
                        int index337_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred645_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index337_30);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA337_31 = input.LA(1);

                         
                        int index337_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred645_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index337_31);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA337_32 = input.LA(1);

                         
                        int index337_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred645_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index337_32);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA337_33 = input.LA(1);

                         
                        int index337_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred645_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index337_33);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA337_34 = input.LA(1);

                         
                        int index337_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred645_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index337_34);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA337_35 = input.LA(1);

                         
                        int index337_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred645_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index337_35);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 337, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_338s = "\33\uffff";
    static final String dfa_339s = "\1\1\32\uffff";
    static final String dfa_340s = "\1\12\32\uffff";
    static final String dfa_341s = "\1\u00fc\32\uffff";
    static final String dfa_342s = "\1\uffff\1\5\1\1\2\2\3\3\23\4";
    static final String dfa_343s = "\1\0\32\uffff}>";
    static final String[] dfa_344s = {
            "\1\7\20\uffff\1\1\7\uffff\1\2\5\uffff\1\1\2\uffff\1\1\3\uffff\1\3\6\uffff\1\25\24\uffff\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\26\30\uffff\1\4\4\uffff\1\27\1\30\1\31\1\32\u0080\uffff\1\5\1\6",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_338 = DFA.unpackEncodedString(dfa_338s);
    static final short[] dfa_339 = DFA.unpackEncodedString(dfa_339s);
    static final char[] dfa_340 = DFA.unpackEncodedStringToUnsignedChars(dfa_340s);
    static final char[] dfa_341 = DFA.unpackEncodedStringToUnsignedChars(dfa_341s);
    static final short[] dfa_342 = DFA.unpackEncodedString(dfa_342s);
    static final short[] dfa_343 = DFA.unpackEncodedString(dfa_343s);
    static final short[][] dfa_344 = unpackEncodedStringArray(dfa_344s);

    class DFA342 extends DFA {

        public DFA342(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 342;
            this.eot = dfa_338;
            this.eof = dfa_339;
            this.min = dfa_340;
            this.max = dfa_341;
            this.accept = dfa_342;
            this.special = dfa_343;
            this.transition = dfa_344;
        }
        public String getDescription() {
            return "()* loopback of 16498:6: ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA342_0 = input.LA(1);

                         
                        int index342_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA342_0==EOF||LA342_0==27||LA342_0==41||LA342_0==44) ) {s = 1;}

                        else if ( LA342_0 == 35 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 0) ) {s = 2;}

                        else if ( LA342_0 == 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 1) ) {s = 3;}

                        else if ( LA342_0 == 114 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 1) ) {s = 4;}

                        else if ( LA342_0 == 251 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 5;}

                        else if ( LA342_0 == 252 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 6;}

                        else if ( LA342_0 == RULE_INT && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 7;}

                        else if ( LA342_0 == 76 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 8;}

                        else if ( LA342_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 9;}

                        else if ( LA342_0 == 78 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 10;}

                        else if ( LA342_0 == 79 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 11;}

                        else if ( LA342_0 == 80 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 12;}

                        else if ( LA342_0 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 13;}

                        else if ( LA342_0 == 82 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 14;}

                        else if ( LA342_0 == 83 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 15;}

                        else if ( LA342_0 == 84 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 16;}

                        else if ( LA342_0 == 85 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 17;}

                        else if ( LA342_0 == 86 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 18;}

                        else if ( LA342_0 == 87 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 19;}

                        else if ( LA342_0 == 88 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 20;}

                        else if ( LA342_0 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 21;}

                        else if ( LA342_0 == 89 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 22;}

                        else if ( LA342_0 == 119 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 23;}

                        else if ( LA342_0 == 120 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 24;}

                        else if ( LA342_0 == 121 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 25;}

                        else if ( LA342_0 == 122 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 26;}

                         
                        input.seek(index342_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 342, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_345s = "\37\uffff";
    static final String dfa_346s = "\1\1\36\uffff";
    static final String dfa_347s = "\1\12\12\uffff\23\0\1\uffff";
    static final String dfa_348s = "\1\u00fc\12\uffff\23\0\1\uffff";
    static final String dfa_349s = "\1\uffff\1\2\34\uffff\1\1";
    static final String dfa_350s = "\13\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\uffff}>";
    static final String[] dfa_351s = {
            "\1\1\20\uffff\1\1\7\uffff\1\1\5\uffff\1\1\2\uffff\1\1\3\uffff\1\1\6\uffff\1\30\24\uffff\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\31\30\uffff\1\1\4\uffff\1\32\1\33\1\34\1\35\u0080\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };

    static final short[] dfa_345 = DFA.unpackEncodedString(dfa_345s);
    static final short[] dfa_346 = DFA.unpackEncodedString(dfa_346s);
    static final char[] dfa_347 = DFA.unpackEncodedStringToUnsignedChars(dfa_347s);
    static final char[] dfa_348 = DFA.unpackEncodedStringToUnsignedChars(dfa_348s);
    static final short[] dfa_349 = DFA.unpackEncodedString(dfa_349s);
    static final short[] dfa_350 = DFA.unpackEncodedString(dfa_350s);
    static final short[][] dfa_351 = unpackEncodedStringArray(dfa_351s);

    class DFA341 extends DFA {

        public DFA341(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 341;
            this.eot = dfa_345;
            this.eof = dfa_346;
            this.min = dfa_347;
            this.max = dfa_348;
            this.accept = dfa_349;
            this.special = dfa_350;
            this.transition = dfa_351;
        }
        public String getDescription() {
            return "()* loopback of 16698:9: ( (lv_valueOperators_17_0= ruleValueOperator ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA341_11 = input.LA(1);

                         
                        int index341_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred652_InternalKim()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index341_11);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA341_12 = input.LA(1);

                         
                        int index341_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred652_InternalKim()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index341_12);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA341_13 = input.LA(1);

                         
                        int index341_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred652_InternalKim()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index341_13);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA341_14 = input.LA(1);

                         
                        int index341_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred652_InternalKim()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index341_14);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA341_15 = input.LA(1);

                         
                        int index341_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred652_InternalKim()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index341_15);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA341_16 = input.LA(1);

                         
                        int index341_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred652_InternalKim()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index341_16);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA341_17 = input.LA(1);

                         
                        int index341_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred652_InternalKim()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index341_17);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA341_18 = input.LA(1);

                         
                        int index341_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred652_InternalKim()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index341_18);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA341_19 = input.LA(1);

                         
                        int index341_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred652_InternalKim()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index341_19);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA341_20 = input.LA(1);

                         
                        int index341_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred652_InternalKim()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index341_20);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA341_21 = input.LA(1);

                         
                        int index341_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred652_InternalKim()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index341_21);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA341_22 = input.LA(1);

                         
                        int index341_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred652_InternalKim()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index341_22);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA341_23 = input.LA(1);

                         
                        int index341_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred652_InternalKim()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index341_23);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA341_24 = input.LA(1);

                         
                        int index341_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred652_InternalKim()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index341_24);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA341_25 = input.LA(1);

                         
                        int index341_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred652_InternalKim()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index341_25);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA341_26 = input.LA(1);

                         
                        int index341_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred652_InternalKim()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index341_26);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA341_27 = input.LA(1);

                         
                        int index341_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred652_InternalKim()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index341_27);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA341_28 = input.LA(1);

                         
                        int index341_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred652_InternalKim()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index341_28);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA341_29 = input.LA(1);

                         
                        int index341_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred652_InternalKim()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index341_29);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 341, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_352s = "\176\uffff";
    static final String dfa_353s = "\1\6\175\uffff";
    static final String dfa_354s = "\1\4\5\0\170\uffff";
    static final String dfa_355s = "\1\u0103\5\0\170\uffff";
    static final String dfa_356s = "\6\uffff\1\2\166\uffff\1\1";
    static final String dfa_357s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\170\uffff}>";
    static final String[] dfa_358s = {
            "\1\2\1\3\1\6\1\uffff\1\6\1\1\4\6\1\4\5\uffff\1\6\4\uffff\1\6\1\uffff\7\6\1\uffff\1\6\1\uffff\1\6\1\5\1\uffff\3\6\1\uffff\2\6\2\uffff\5\6\1\uffff\3\6\5\uffff\6\6\1\uffff\1\6\6\uffff\16\6\17\uffff\1\6\2\uffff\1\6\3\uffff\13\6\11\uffff\2\6\6\uffff\3\6\1\uffff\6\6\1\uffff\15\6\14\uffff\2\6\2\uffff\3\6\1\uffff\11\6\2\uffff\13\6\5\uffff\1\6\4\uffff\1\6\42\uffff\2\6\6\uffff\1\6",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_352 = DFA.unpackEncodedString(dfa_352s);
    static final short[] dfa_353 = DFA.unpackEncodedString(dfa_353s);
    static final char[] dfa_354 = DFA.unpackEncodedStringToUnsignedChars(dfa_354s);
    static final char[] dfa_355 = DFA.unpackEncodedStringToUnsignedChars(dfa_355s);
    static final short[] dfa_356 = DFA.unpackEncodedString(dfa_356s);
    static final short[] dfa_357 = DFA.unpackEncodedString(dfa_357s);
    static final short[][] dfa_358 = unpackEncodedStringArray(dfa_358s);

    class DFA348 extends DFA {

        public DFA348(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 348;
            this.eot = dfa_352;
            this.eof = dfa_353;
            this.min = dfa_354;
            this.max = dfa_355;
            this.accept = dfa_356;
            this.special = dfa_357;
            this.transition = dfa_358;
        }
        public String getDescription() {
            return "17100:3: ( (lv_root_1_0= ruleUnitElement ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA348_1 = input.LA(1);

                         
                        int index348_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred666_InternalKim()) ) {s = 125;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index348_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA348_2 = input.LA(1);

                         
                        int index348_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred666_InternalKim()) ) {s = 125;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index348_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA348_3 = input.LA(1);

                         
                        int index348_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred666_InternalKim()) ) {s = 125;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index348_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA348_4 = input.LA(1);

                         
                        int index348_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred666_InternalKim()) ) {s = 125;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index348_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA348_5 = input.LA(1);

                         
                        int index348_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred666_InternalKim()) ) {s = 125;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index348_5);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 348, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_359s = "\1\4\3\31\1\uffff\1\0\3\uffff\4\4\4\31\2\4";
    static final String dfa_360s = "\1\u00fc\3\155\1\uffff\1\0\3\uffff\4\13\4\155\2\u00a3";
    static final String[] dfa_361s = {
            "\1\1\1\2\1\4\2\uffff\1\5\1\6\1\3\1\uffff\1\7\16\uffff\2\10\10\uffff\1\7\102\uffff\1\4\32\uffff\2\7\7\uffff\2\7\1\uffff\6\7\1\uffff\15\7\127\uffff\2\6",
            "\1\4\1\uffff\1\4\31\uffff\1\4\64\uffff\1\12\1\uffff\1\4\1\11",
            "\1\4\1\uffff\1\4\116\uffff\1\14\2\uffff\1\13",
            "\1\4\1\uffff\1\4\31\uffff\1\4\64\uffff\1\12\1\uffff\1\4\1\11",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "\1\15\1\16\5\uffff\1\17",
            "\2\4\3\uffff\1\7\1\uffff\1\4",
            "\1\20\1\16\5\uffff\1\17",
            "\1\21\1\22\1\7\2\uffff\2\7\1\4",
            "\1\4\1\uffff\1\4\31\uffff\1\4\64\uffff\1\12\2\uffff\1\13",
            "\1\4\1\uffff\1\4\116\uffff\1\12\2\uffff\1\13",
            "\1\4\1\uffff\1\4\116\uffff\1\12\2\uffff\1\13",
            "\1\4\1\uffff\1\4\116\uffff\1\12\2\uffff\1\13",
            "\2\7\3\uffff\1\7\1\uffff\1\7\1\uffff\1\7\13\uffff\1\7\14\uffff\1\7\36\uffff\1\7\35\uffff\1\7\6\uffff\1\4\2\uffff\1\4\15\uffff\13\7\7\uffff\11\7\1\uffff\15\7",
            "\2\7\3\uffff\1\7\1\uffff\1\7\1\uffff\1\7\13\uffff\1\7\14\uffff\1\7\36\uffff\1\7\35\uffff\1\7\6\uffff\1\4\2\uffff\1\4\15\uffff\13\7\7\uffff\11\7\1\uffff\15\7"
    };
    static final char[] dfa_359 = DFA.unpackEncodedStringToUnsignedChars(dfa_359s);
    static final char[] dfa_360 = DFA.unpackEncodedStringToUnsignedChars(dfa_360s);
    static final short[][] dfa_361 = unpackEncodedStringArray(dfa_361s);

    class DFA387 extends DFA {

        public DFA387(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 387;
            this.eot = dfa_20;
            this.eof = dfa_20;
            this.min = dfa_359;
            this.max = dfa_360;
            this.accept = dfa_23;
            this.special = dfa_24;
            this.transition = dfa_361;
        }
        public String getDescription() {
            return "693:4: ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_number_4_0= ruleNumber ) ) | ( (lv_concept_5_0= ruleConceptDeclaration ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA387_5 = input.LA(1);

                         
                        int index387_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred20_InternalKim()) ) {s = 4;}

                        else if ( (synpred22_InternalKim()) ) {s = 7;}

                         
                        input.seek(index387_5);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 387, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA475 extends DFA {

        public DFA475(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 475;
            this.eot = dfa_98;
            this.eof = dfa_98;
            this.min = dfa_121;
            this.max = dfa_122;
            this.accept = dfa_123;
            this.special = dfa_124;
            this.transition = dfa_125;
        }
        public String getDescription() {
            return "5855:19: ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )?";
        }
    }
    static final String dfa_362s = "\1\4\2\31\1\46\1\uffff\1\31\1\uffff\3\4\3\46\2\4";
    static final String dfa_363s = "\1\u00fc\3\155\1\uffff\1\31\1\uffff\3\13\3\155\2\u00fc";
    static final String[] dfa_364s = {
            "\1\1\1\2\1\5\1\uffff\3\6\1\3\1\uffff\1\6\16\uffff\2\6\10\uffff\1\6\102\uffff\1\4\7\uffff\1\6\22\uffff\2\6\7\uffff\2\6\1\uffff\6\6\1\uffff\15\6\127\uffff\2\6",
            "\1\6\14\uffff\1\6\103\uffff\1\10\2\uffff\1\7",
            "\1\6\14\uffff\1\6\103\uffff\1\11\2\uffff\1\7",
            "\1\6\103\uffff\1\10\2\uffff\1\7",
            "",
            "\1\6",
            "",
            "\1\12\1\13\5\uffff\1\14",
            "\2\4\3\uffff\1\6\1\uffff\1\4",
            "\1\15\1\16\1\6\2\uffff\2\6\1\4",
            "\1\6\103\uffff\1\10\2\uffff\1\7",
            "\1\6\103\uffff\1\10\2\uffff\1\7",
            "\1\6\103\uffff\1\10\2\uffff\1\7",
            "\2\6\3\uffff\3\6\1\uffff\1\6\13\uffff\1\6\11\uffff\1\6\2\uffff\1\6\11\uffff\1\6\6\uffff\1\6\15\uffff\1\6\6\uffff\16\6\11\uffff\1\6\6\uffff\1\4\2\uffff\1\4\4\uffff\4\6\1\uffff\17\6\7\uffff\11\6\1\uffff\15\6\127\uffff\2\6",
            "\2\6\3\uffff\3\6\1\uffff\1\6\13\uffff\1\6\11\uffff\1\6\2\uffff\1\6\11\uffff\1\6\6\uffff\1\6\15\uffff\1\6\6\uffff\16\6\11\uffff\1\6\6\uffff\1\4\2\uffff\1\4\4\uffff\4\6\1\uffff\17\6\7\uffff\11\6\1\uffff\15\6\127\uffff\2\6"
    };
    static final char[] dfa_362 = DFA.unpackEncodedStringToUnsignedChars(dfa_362s);
    static final char[] dfa_363 = DFA.unpackEncodedStringToUnsignedChars(dfa_363s);
    static final short[][] dfa_364 = unpackEncodedStringArray(dfa_364s);

    class DFA507 extends DFA {

        public DFA507(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 507;
            this.eot = dfa_197;
            this.eof = dfa_198;
            this.min = dfa_362;
            this.max = dfa_363;
            this.accept = dfa_201;
            this.special = dfa_202;
            this.transition = dfa_364;
        }
        public String getDescription() {
            return "7663:4: ( ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) ) | ( (lv_observable_2_0= ruleDependencyObservableSemantics ) ) )";
        }
    }
    static final String dfa_365s = "\1\4\3\152\4\uffff\1\4\3\152";
    static final String[] dfa_366s = {
            "\1\1\1\2\1\5\4\uffff\1\3\135\uffff\1\4",
            "\1\4\2\uffff\1\4",
            "\1\4\2\uffff\1\10",
            "\1\4\2\uffff\1\10",
            "",
            "",
            "",
            "",
            "\1\11\1\12\5\uffff\1\13",
            "\1\4\2\uffff\1\10",
            "\1\4\2\uffff\1\10",
            "\1\4\2\uffff\1\10"
    };
    static final char[] dfa_365 = DFA.unpackEncodedStringToUnsignedChars(dfa_365s);
    static final short[][] dfa_366 = unpackEncodedStringArray(dfa_366s);

    class DFA506 extends DFA {

        public DFA506(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 506;
            this.eot = dfa_126;
            this.eof = dfa_204;
            this.min = dfa_365;
            this.max = dfa_206;
            this.accept = dfa_207;
            this.special = dfa_208;
            this.transition = dfa_366;
        }
        public String getDescription() {
            return "7666:7: (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA506_1 = input.LA(1);

                         
                        int index506_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA506_1==106||LA506_1==109) ) {s = 4;}

                        else if ( (synpred309_InternalKim()) ) {s = 6;}

                        else if ( (synpred310_InternalKim()) ) {s = 7;}

                         
                        input.seek(index506_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 506, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_367s = "\1\105\14\uffff";
    static final String dfa_368s = "\1\u0083\14\uffff";
    static final String[] dfa_369s = {
            "\1\3\35\uffff\1\4\27\uffff\1\2\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_367 = DFA.unpackEncodedStringToUnsignedChars(dfa_367s);
    static final char[] dfa_368 = DFA.unpackEncodedStringToUnsignedChars(dfa_368s);
    static final short[][] dfa_369 = unpackEncodedStringArray(dfa_369s);

    class DFA519 extends DFA {

        public DFA519(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 519;
            this.eot = dfa_223;
            this.eof = dfa_224;
            this.min = dfa_367;
            this.max = dfa_368;
            this.accept = dfa_227;
            this.special = dfa_228;
            this.transition = dfa_369;
        }
        public String getDescription() {
            return "()* loopback of 7960:6: ( ({...}? => ( ({...}? => (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA519_0 = input.LA(1);

                         
                        int index519_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA519_0==EOF) ) {s = 1;}

                        else if ( LA519_0 == 123 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 0) ) {s = 2;}

                        else if ( LA519_0 == 69 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 1) ) {s = 3;}

                        else if ( LA519_0 == 99 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 2) ) {s = 4;}

                        else if ( LA519_0 == 124 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 3) ) {s = 5;}

                        else if ( LA519_0 == 125 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 4) ) {s = 6;}

                        else if ( LA519_0 == 126 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 5) ) {s = 7;}

                        else if ( LA519_0 == 127 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 6) ) {s = 8;}

                        else if ( LA519_0 == 128 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 7) ) {s = 9;}

                        else if ( LA519_0 == 129 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 8) ) {s = 10;}

                        else if ( LA519_0 == 130 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 9) ) {s = 11;}

                        else if ( LA519_0 == 131 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 10) ) {s = 12;}

                         
                        input.seek(index519_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 519, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000000001E08002L,0x0000400100000FC0L,0x0000FF8800000000L,0x03FFFFFFFCE00002L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000000E08000L,0x0000000000000FC0L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000000E00000L,0x0000000000000FC0L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x000600403C00BF70L,0x0002020000000000L,0x0000000FFFBF6030L,0x1800000001000000L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000001008000L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0006004038001F70L,0x0000000000000000L,0x0000000000000000L,0x1800000001000000L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x000000000A000000L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000000000A70L,0x0000020000000000L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0xC1C00423C0000042L,0x000000000000000FL});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0xC1C00423C8000042L,0x000000000000000FL});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0xC1C00423C0000002L,0x000000000000000FL});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x000000403000AF70L,0x0022020000000000L,0x0000000FFFBF6030L,0x1800000000000000L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0xC1C0042388000002L,0x000000000000000FL});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000000000970L,0x0000020000000000L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0xC1C0042308000002L,0x000000000000000FL});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000000C00000000L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000004000002A30L,0x0000000000000000L,0x0000000FFFBF6030L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0xC1C0042000000002L,0x000000000000000FL});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000001000000000L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000000000000830L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000004400000000L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000018000000010L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000020008000000L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0023014030002F70L,0x000000000024F000L,0x0000000FFFBF6030L,0x1800000000000000L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0xC1C0040000000002L,0x000000000000000FL});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0000000008000002L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000380000000002L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0003014030002E70L,0x000000000024F000L,0x0000000FFFBF6030L,0x1800000000000000L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000C01000000000L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000000000000400L,0x0000000000000000L,0x0000000000000000L,0x1800000000000000L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0000C00000000002L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0000000000000042L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x002B014030002F70L,0x000000000024F000L,0x0000000FFFBF6030L,0x1800000000000000L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0008000000000000L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0010000000000002L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000000000000050L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0080000000000000L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0xC1C0000008000002L,0x000000000000000FL});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0xC1C0000000000000L,0x000000000000000FL});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0E00004000002A30L,0x0000000000000000L,0x0000000FFFBF6030L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0xC1C0004000000000L,0x000000000000000FL});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0xC1C1004000000000L,0x000000000000000FL});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x3000000000000000L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0002005038001F70L,0x0000000000000000L,0x0000000000000000L,0x1800000000000000L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0000300008000002L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0006004038001F70L,0x0000000000000010L,0x0000000000000000L,0x1800000001000000L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0006004038001F72L,0x0000000000000000L,0x0000000000000000L,0x1800000001000000L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0001000000000002L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0000000000000230L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000020L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0000300000000002L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0001300000000002L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x0000000000E08000L,0x000000001C000000L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0000000000E00000L,0x000000001C000000L});
    public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0001040080100040L,0x000001B4C0000000L});
    public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x0001040080100000L,0x000001B4C0000000L});
    public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x0000000000000000L,0x0000000020000000L});
    public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0000014000000830L});
    public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0001040088100000L,0x000001B4C0000000L});
    public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x0000000000000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x0000004000002A30L,0x0000000200000000L,0x0000000FFFBF6030L});
    public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0000000000000000L,0x0000000800000000L});
    public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x0001040080100830L,0x000001B4C0000000L});
    public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x0000000000000400L});
    public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x0001040080100000L,0x000001F4C0000000L});
    public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x0000040000100000L});
    public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x0000000000000000L,0x0000004000000000L});
    public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x0000000000000C30L});
    public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x0020000000000002L,0x0000040000000000L});
    public static final BitSet FOLLOW_85 = new BitSet(new long[]{0x0020000000000002L});
    public static final BitSet FOLLOW_86 = new BitSet(new long[]{0x0000000000000002L,0x0000080000000000L});
    public static final BitSet FOLLOW_87 = new BitSet(new long[]{0x0000000000000000L,0x0000000000040000L});
    public static final BitSet FOLLOW_88 = new BitSet(new long[]{0x0020000000000002L,0x0000300000000000L});
    public static final BitSet FOLLOW_89 = new BitSet(new long[]{0x0000000000000A10L});
    public static final BitSet FOLLOW_90 = new BitSet(new long[]{0x0000000000008000L,0x0000400000000000L});
    public static final BitSet FOLLOW_91 = new BitSet(new long[]{0x0000044080002A70L,0x0000020000000000L,0x0000000FFFBF6030L});
    public static final BitSet FOLLOW_92 = new BitSet(new long[]{0x0000004000002A70L,0x0000020000000000L,0x0000000FFFBF6030L});
    public static final BitSet FOLLOW_93 = new BitSet(new long[]{0xC1C00440C0002A72L,0x000182000000000FL,0x0000000FFFBF6030L});
    public static final BitSet FOLLOW_94 = new BitSet(new long[]{0xC1C00440C8002A72L,0x000102000000000FL,0x0000000FFFBF6030L});
    public static final BitSet FOLLOW_95 = new BitSet(new long[]{0x0006004038003F70L,0x0002000000000000L,0x0000000FFFBF6030L,0x1800000001000000L});
    public static final BitSet FOLLOW_96 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_97 = new BitSet(new long[]{0xC1C0044080002A72L,0x000002000000000FL,0x0000000FFFBF6030L});
    public static final BitSet FOLLOW_98 = new BitSet(new long[]{0x0000044080002A72L,0x0000020000000000L,0x0000000FFFBF6030L});
    public static final BitSet FOLLOW_99 = new BitSet(new long[]{0x0000004000002A30L,0x0002000000000000L,0x0000000FFFBF6030L});
    public static final BitSet FOLLOW_100 = new BitSet(new long[]{0x0081000800000402L,0x07BC000003FFF000L,0x0000000000000000L,0x1800000000000000L});
    public static final BitSet FOLLOW_101 = new BitSet(new long[]{0x0081014800004630L,0x07BC100003FFF000L,0x0000000000000000L,0x1800000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_102 = new BitSet(new long[]{0x0081000000000402L,0x0784000003FFF000L,0x0000000000000000L,0x1800000000000000L});
    public static final BitSet FOLLOW_103 = new BitSet(new long[]{0x0081014000004630L,0x0784100003FFF000L,0x0000000000000000L,0x1800000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_104 = new BitSet(new long[]{0x0000004000002E30L,0x0000000000000000L,0x0000000FFFBF6030L,0x1800000000000000L});
    public static final BitSet FOLLOW_105 = new BitSet(new long[]{0x000600403800BF70L,0x0002000000000000L,0x0000000FFFBF6030L,0x1800000001000000L});
    public static final BitSet FOLLOW_106 = new BitSet(new long[]{0x0000004030002F70L,0x0002000000000000L,0x0000000FFFBF6030L,0x1800000000000000L});
    public static final BitSet FOLLOW_107 = new BitSet(new long[]{0x0000004000000002L,0x0038000000000000L});
    public static final BitSet FOLLOW_108 = new BitSet(new long[]{0x0000004000000002L,0x0020000000000000L});
    public static final BitSet FOLLOW_109 = new BitSet(new long[]{0x0000004000002A32L,0xF800000800000020L,0x0000000FFFBF603FL});
    public static final BitSet FOLLOW_110 = new BitSet(new long[]{0x0000004004002A70L,0x0000000000000000L,0x0000000FFFBF6030L});
    public static final BitSet FOLLOW_111 = new BitSet(new long[]{0x0000000000000002L,0xF800000800000020L,0x000000000000000FL});
    public static final BitSet FOLLOW_112 = new BitSet(new long[]{0x0000000000000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_113 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_114 = new BitSet(new long[]{0x1000000000000000L,0x7000000000000000L,0x0000000000000FC0L});
    public static final BitSet FOLLOW_115 = new BitSet(new long[]{0x0000000000008000L,0x0000800100000000L,0x0000FF8800000000L,0x03FFFFFFFCE00002L});
    public static final BitSet FOLLOW_116 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000001000L});
    public static final BitSet FOLLOW_117 = new BitSet(new long[]{0x0000000000002A30L,0x0000000000000000L,0x0000000000006030L});
    public static final BitSet FOLLOW_118 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_119 = new BitSet(new long[]{0x0000000000001660L});
    public static final BitSet FOLLOW_120 = new BitSet(new long[]{0x0000000000002020L});
    public static final BitSet FOLLOW_121 = new BitSet(new long[]{0x0000000000000000L,0x0800000000000000L});
    public static final BitSet FOLLOW_122 = new BitSet(new long[]{0x0000001000000000L,0x0000004000000000L});
    public static final BitSet FOLLOW_123 = new BitSet(new long[]{0x0001000000000000L,0x0000000000000000L,0x0000000000400000L});
    public static final BitSet FOLLOW_124 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_125 = new BitSet(new long[]{0x0080000000000002L});
    public static final BitSet FOLLOW_126 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000001000000000L});
    public static final BitSet FOLLOW_127 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000006000000000L});
    public static final BitSet FOLLOW_128 = new BitSet(new long[]{0x0000004000002A32L,0x0000000000000000L,0x0000000FFFBF6030L});
    public static final BitSet FOLLOW_129 = new BitSet(new long[]{0x1000000080000000L,0x7000000000000000L,0x0000038000000FC0L,0x0300000000000000L});
    public static final BitSet FOLLOW_130 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_131 = new BitSet(new long[]{0x0000000080000000L});
    public static final BitSet FOLLOW_132 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000080000000000L,0x0300000000000000L});
    public static final BitSet FOLLOW_133 = new BitSet(new long[]{0x0000000000008000L,0x0000000100000000L,0x0000FF8800000000L,0x03FFFFFFFCE00002L});
    public static final BitSet FOLLOW_134 = new BitSet(new long[]{0x0000000000008200L,0x0000000200000000L,0x0000100000000000L});
    public static final BitSet FOLLOW_135 = new BitSet(new long[]{0x0000000000000002L,0x0020000000000000L});
    public static final BitSet FOLLOW_136 = new BitSet(new long[]{0x0000000000000200L,0x0000000200000000L});
    public static final BitSet FOLLOW_137 = new BitSet(new long[]{0x0000040000004872L,0x0000000000000000L,0xFF73000000000000L,0x0000000000083FF9L});
    public static final BitSet FOLLOW_138 = new BitSet(new long[]{0x0000040000004872L,0x0000000000000000L,0xFF73000000008000L,0x0000000000083FF9L});
    public static final BitSet FOLLOW_139 = new BitSet(new long[]{0x0000000000001440L});
    public static final BitSet FOLLOW_140 = new BitSet(new long[]{0x0000004000002A30L,0x0000000000000000L,0x000C000FFFBF6030L});
    public static final BitSet FOLLOW_141 = new BitSet(new long[]{0x0000004000002A30L,0x0000000000000000L,0x0008000FFFBF6030L});
    public static final BitSet FOLLOW_142 = new BitSet(new long[]{0x0000040008004872L,0x0000000000000000L,0xFF73003000000000L,0x0000000000083FF9L});
    public static final BitSet FOLLOW_143 = new BitSet(new long[]{0x0000040008004872L,0x0000000000000000L,0xFF73000000000000L,0x0000000000083FF9L});
    public static final BitSet FOLLOW_144 = new BitSet(new long[]{0x0000004000002A30L,0x0000000000000000L,0x0080000FFFBF6030L});
    public static final BitSet FOLLOW_145 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0080000800000000L,0x0000000000E00000L});
    public static final BitSet FOLLOW_146 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_147 = new BitSet(new long[]{0x0001000008000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_148 = new BitSet(new long[]{0x0001000008000000L});
    public static final BitSet FOLLOW_149 = new BitSet(new long[]{0x0000041008004872L,0x0000000000000000L,0xFF73000000000000L,0x0000000000083FF9L});
    public static final BitSet FOLLOW_150 = new BitSet(new long[]{0x0000000000000000L,0x0001000400000000L});
    public static final BitSet FOLLOW_151 = new BitSet(new long[]{0x0000000000000000L,0x0001000000000000L});
    public static final BitSet FOLLOW_152 = new BitSet(new long[]{0x0000004000000200L,0x0000000000000000L,0x0000100000000000L});
    public static final BitSet FOLLOW_153 = new BitSet(new long[]{0x0000004000002E30L,0x0000000000080000L,0x0000000FFFBF6030L,0x000000000000C000L});
    public static final BitSet FOLLOW_154 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0080000000000000L});
    public static final BitSet FOLLOW_155 = new BitSet(new long[]{0x0000000002000002L});
    public static final BitSet FOLLOW_156 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000030000L});
    public static final BitSet FOLLOW_157 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000040000L});
    public static final BitSet FOLLOW_158 = new BitSet(new long[]{0x0000004004002E70L,0x0000000000080000L,0x0000000FFFBF6030L,0x000000000000C000L});
    public static final BitSet FOLLOW_159 = new BitSet(new long[]{0x0000004004002A70L,0x0000000000000000L,0x0000001FFFBF6030L});
    public static final BitSet FOLLOW_160 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000100000L});
    public static final BitSet FOLLOW_161 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_162 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_163 = new BitSet(new long[]{0x0000004000000002L});
    public static final BitSet FOLLOW_164 = new BitSet(new long[]{0x0006024030002F70L,0x00420000002CF000L,0x0000000FFFBF6030L,0x1800000001000000L});
    public static final BitSet FOLLOW_165 = new BitSet(new long[]{0x0006024038002F70L,0x00420000002CF000L,0x0000000FFFBF6030L,0x1800000001000000L});
    public static final BitSet FOLLOW_166 = new BitSet(new long[]{0x0006004030002F70L,0x00420000002CF000L,0x0000000FFFBF6030L,0x1800000001000000L});
    public static final BitSet FOLLOW_167 = new BitSet(new long[]{0x0002014030002E70L,0x000000000024F000L,0x0000000FFFBF7030L,0x1800000000000000L});
    public static final BitSet FOLLOW_168 = new BitSet(new long[]{0x0002014038002E70L,0x000000000024F000L,0x0000000FFFBF7030L,0x1800000000000000L});
    public static final BitSet FOLLOW_169 = new BitSet(new long[]{0x0002014030002E70L,0x000000000024F000L,0x0000000FFFBF6030L,0x1800000000000000L});
    public static final BitSet FOLLOW_170 = new BitSet(new long[]{0x0000000000000000L,0x0000000000040000L,0x0000000000000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_171 = new BitSet(new long[]{0x0000000000000830L,0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_172 = new BitSet(new long[]{0x0081100800000402L,0x0784000003FFF000L,0x0000000000000000L,0x1800000000000000L});
    public static final BitSet FOLLOW_173 = new BitSet(new long[]{0x0081114800004630L,0x07BC100003FFF000L,0x0000000000000000L,0x1800000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_174 = new BitSet(new long[]{0x0081114800004630L,0x0784100003FFF000L,0x0000000000000000L,0x1800000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_175 = new BitSet(new long[]{0x0000000000000100L});
    public static final BitSet FOLLOW_176 = new BitSet(new long[]{0x0000000000000000L,0x0020000000000000L});
    public static final BitSet FOLLOW_177 = new BitSet(new long[]{0x0000000000000850L});
    public static final BitSet FOLLOW_178 = new BitSet(new long[]{0x0000034000004230L,0x0000100000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_179 = new BitSet(new long[]{0x0000010000000002L,0x0000100000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_180 = new BitSet(new long[]{0x0000004000004230L});
    public static final BitSet FOLLOW_181 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0400000000000000L});
    public static final BitSet FOLLOW_182 = new BitSet(new long[]{0x0000000000000002L,0x0000100000000000L});
    public static final BitSet FOLLOW_183 = new BitSet(new long[]{0x0000000000000002L,0x0000200000000000L,0x0000000000000000L,0xE000000000000000L});
    public static final BitSet FOLLOW_184 = new BitSet(new long[]{0x0000000000000002L,0x0000200000000000L,0x0000000000000000L,0xC000000000000000L});
    public static final BitSet FOLLOW_185 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0xC000000000000000L});
    public static final BitSet FOLLOW_186 = new BitSet(new long[]{0x0000000000000000L,0x0000300000000000L});
    public static final BitSet FOLLOW_187 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x1000000000000000L,0x0000000000000007L});
    public static final BitSet FOLLOW_188 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x1000000000000000L});
    public static final BitSet FOLLOW_189 = new BitSet(new long[]{0x0000000000000402L});
    public static final BitSet FOLLOW_190 = new BitSet(new long[]{0x0000000000000002L,0x0000040000000000L});
    public static final BitSet FOLLOW_191 = new BitSet(new long[]{0x0000000000000002L,0x0000200000000000L});
    public static final BitSet FOLLOW_192 = new BitSet(new long[]{0x0000000000000002L,0x0000300000000000L});
    public static final BitSet FOLLOW_193 = new BitSet(new long[]{0x0000000000000470L});
    public static final BitSet FOLLOW_194 = new BitSet(new long[]{0x0000000000004810L});
    public static final BitSet FOLLOW_195 = new BitSet(new long[]{0x0000000000000032L,0x0000200000000000L,0x0000000000000000L,0x1000000000000000L});
    public static final BitSet FOLLOW_196 = new BitSet(new long[]{0x0000000000000032L,0x0000000000000000L,0x0000000000000000L,0x1000000000000000L});
    public static final BitSet FOLLOW_197 = new BitSet(new long[]{0x0000000000000032L});
    public static final BitSet FOLLOW_198 = new BitSet(new long[]{0x0000000000E00002L});
    public static final BitSet FOLLOW_199 = new BitSet(new long[]{0x0000000000000832L});
    public static final BitSet FOLLOW_200 = new BitSet(new long[]{0x0000000000000002L,0x0000004000000000L});
    public static final BitSet FOLLOW_201 = new BitSet(new long[]{0x0000000080000002L,0x000000E000000000L});
    public static final BitSet FOLLOW_202 = new BitSet(new long[]{0x0000000080000832L,0x000000A000000000L});
    public static final BitSet FOLLOW_203 = new BitSet(new long[]{0x0000000080000002L,0x000000A000000000L});
    public static final BitSet FOLLOW_204 = new BitSet(new long[]{0xC1C0000040000042L,0x000180000000000FL});
    public static final BitSet FOLLOW_205 = new BitSet(new long[]{0xC1C0000040000002L,0x000180000000000FL});
    public static final BitSet FOLLOW_206 = new BitSet(new long[]{0xC1C0000048000002L,0x000100000000000FL});
    public static final BitSet FOLLOW_207 = new BitSet(new long[]{0xC1C0000000000002L,0x000000000000000FL});
    public static final BitSet FOLLOW_208 = new BitSet(new long[]{0x0000014000004230L,0x0000100000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_209 = new BitSet(new long[]{0x0080000000000002L,0x0780000003FFF000L});
    public static final BitSet FOLLOW_210 = new BitSet(new long[]{0x0000000000000002L,0x0018000000000000L});
    public static final BitSet FOLLOW_211 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0300000000000000L});
    public static final BitSet FOLLOW_212 = new BitSet(new long[]{0x0000000008000002L,0x0000000000000000L,0x0000003000000000L});
    public static final BitSet FOLLOW_213 = new BitSet(new long[]{0x0000001008000002L});

}
