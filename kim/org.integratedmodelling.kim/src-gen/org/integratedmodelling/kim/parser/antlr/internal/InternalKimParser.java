package org.integratedmodelling.kim.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.IUnorderedGroupHelper.UnorderedGroupState;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.integratedmodelling.kim.services.KimGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalKimParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_LOWERCASE_ID", "RULE_STRING", "RULE_EXPR", "RULE_UPPERCASE_ID", "RULE_CAMELCASE_ID", "RULE_LOWERCASE_DASHID", "RULE_ID", "RULE_INT", "RULE_UPPERCASE_PATH", "RULE_ANNOTATION_ID", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER", "';'", "'void'", "'private'", "'each'", "','", "'true'", "'false'", "'as'", "'observing'", "'using'", "'classified'", "'discretized'", "'into'", "'according'", "'to'", "'lookup'", "'('", "'?'", "'*'", "')'", "'with'", "'metadata'", "'documentation'", "'otherwise'", "'if'", "'unless'", "'inclusive'", "'exclusive'", "'in'", "'unknown'", "'{{'", "'}}'", "'|'", "'#'", "'aggregated'", "'over'", "'on'", "'definition'", "'resolution'", "'instantiation'", "'termination'", "'initialization'", "'context'", "'related'", "'change'", "'set'", "'integrate'", "'do'", "'move'", "'away'", "'model'", "'assess'", "'learn'", "'number'", "'text'", "'boolean'", "'namespace'", "'scenario'", "'worldview'", "'imports'", "'covering'", "'domain'", "'root'", "'disjoint'", "'version'", "'resolve'", "'from'", "'outside'", "'parameters'", "'urn:klab:'", "':'", "'/'", "'.'", "'observe'", "'extends'", "'any'", "'by'", "'down'", "'per'", "'optional'", "'required'", "'named'", "'of'", "'for'", "'caused'", "'adjacent'", "'contained'", "'containing'", "'causing'", "'within'", "'${'", "'#{'", "'inherent'", "'compresent'", "'container'", "'purpose'", "'causant'", "'}'", "'not'", "'no'", "'identified'", "'presence'", "'count'", "'distance'", "'probability'", "'assessment'", "'uncertainty'", "'type'", "'observability'", "'proportion'", "'ratio'", "'value'", "'occurrence'", "'or'", "'and'", "'follows'", "'deliberative'", "'interactive'", "'reactive'", "'agent'", "'relationship'", "'abstract'", "'deniable'", "'subjective'", "'is'", "'core'", "'equals'", "'nothing'", "'exposes'", "'exposing'", "'defines'", "'authority'", "'requires'", "'describes'", "'increases'", "'decreases'", "'marks'", "'classifies'", "'discretizes'", "'inherits'", "'has'", "'role'", "'confers'", "'part'", "'constituent'", "'consists'", "'creates'", "'applies'", "'links'", "'inverse'", "'affects'", "'children'", "'between'", "'identity'", "'attribute'", "'realm'", "'extent'", "'uses'", "'contains'", "'implies'", "'only'", "'exactly'", "'at'", "'least'", "'most'", "'inheriting'", "'{'", "'transition'", "'?='", "'='", "'quality'", "'class'", "'quantity'", "'configuration'", "'bond'", "'ordering'", "'amount'", "'length'", "'mass'", "'volume'", "'weight'", "'money'", "'duration'", "'area'", "'acceleration'", "'energy'", "'entropy'", "'priority'", "'electric-potential'", "'charge'", "'resistance'", "'resistivity'", "'pressure'", "'angle'", "'velocity'", "'temperature'", "'viscosity'", "'thing'", "'process'", "'event'", "'functional'", "'structural'", "'>'", "'<'", "'!='", "'<='", "'>='", "'@'", "'+'", "'-'", "'e'", "'E'", "'integer'", "'float'", "'date'", "'^'"
    };
    public static final int T__144=144;
    public static final int T__143=143;
    public static final int T__146=146;
    public static final int T__50=50;
    public static final int T__145=145;
    public static final int T__140=140;
    public static final int T__142=142;
    public static final int T__141=141;
    public static final int T__59=59;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__137=137;
    public static final int T__52=52;
    public static final int T__136=136;
    public static final int T__53=53;
    public static final int T__139=139;
    public static final int T__54=54;
    public static final int T__138=138;
    public static final int T__133=133;
    public static final int T__132=132;
    public static final int T__60=60;
    public static final int T__135=135;
    public static final int T__61=61;
    public static final int T__134=134;
    public static final int RULE_ID=10;
    public static final int T__131=131;
    public static final int T__130=130;
    public static final int RULE_INT=11;
    public static final int T__66=66;
    public static final int T__67=67;
    public static final int T__129=129;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__62=62;
    public static final int T__126=126;
    public static final int T__63=63;
    public static final int T__125=125;
    public static final int T__64=64;
    public static final int T__128=128;
    public static final int T__65=65;
    public static final int T__127=127;
    public static final int T__166=166;
    public static final int T__165=165;
    public static final int T__168=168;
    public static final int T__167=167;
    public static final int T__162=162;
    public static final int T__161=161;
    public static final int T__164=164;
    public static final int T__163=163;
    public static final int T__160=160;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__159=159;
    public static final int T__30=30;
    public static final int T__158=158;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int T__155=155;
    public static final int T__154=154;
    public static final int T__157=157;
    public static final int T__156=156;
    public static final int T__151=151;
    public static final int T__150=150;
    public static final int T__153=153;
    public static final int T__152=152;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int T__46=46;
    public static final int RULE_EXPR=6;
    public static final int T__47=47;
    public static final int T__40=40;
    public static final int T__148=148;
    public static final int T__41=41;
    public static final int T__147=147;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__149=149;
    public static final int T__100=100;
    public static final int T__221=221;
    public static final int T__220=220;
    public static final int T__102=102;
    public static final int T__223=223;
    public static final int T__101=101;
    public static final int T__222=222;
    public static final int T__19=19;
    public static final int T__18=18;
    public static final int T__218=218;
    public static final int T__217=217;
    public static final int T__219=219;
    public static final int T__214=214;
    public static final int T__213=213;
    public static final int T__216=216;
    public static final int T__215=215;
    public static final int T__210=210;
    public static final int T__212=212;
    public static final int T__211=211;
    public static final int RULE_CAMELCASE_ID=8;
    public static final int T__26=26;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int T__29=29;
    public static final int T__22=22;
    public static final int T__207=207;
    public static final int T__23=23;
    public static final int T__206=206;
    public static final int T__24=24;
    public static final int T__209=209;
    public static final int T__25=25;
    public static final int T__208=208;
    public static final int T__203=203;
    public static final int T__202=202;
    public static final int T__20=20;
    public static final int T__205=205;
    public static final int T__21=21;
    public static final int T__204=204;
    public static final int T__122=122;
    public static final int T__121=121;
    public static final int T__124=124;
    public static final int T__123=123;
    public static final int T__120=120;
    public static final int RULE_SL_COMMENT=15;
    public static final int T__119=119;
    public static final int T__118=118;
    public static final int T__115=115;
    public static final int EOF=-1;
    public static final int T__114=114;
    public static final int T__117=117;
    public static final int T__116=116;
    public static final int T__111=111;
    public static final int T__232=232;
    public static final int T__110=110;
    public static final int T__231=231;
    public static final int T__113=113;
    public static final int T__112=112;
    public static final int T__233=233;
    public static final int T__230=230;
    public static final int RULE_ANNOTATION_ID=13;
    public static final int T__108=108;
    public static final int T__229=229;
    public static final int T__107=107;
    public static final int T__228=228;
    public static final int T__109=109;
    public static final int T__104=104;
    public static final int T__225=225;
    public static final int T__103=103;
    public static final int T__224=224;
    public static final int T__106=106;
    public static final int T__227=227;
    public static final int T__105=105;
    public static final int T__226=226;
    public static final int RULE_UPPERCASE_ID=7;
    public static final int RULE_ML_COMMENT=14;
    public static final int T__201=201;
    public static final int T__200=200;
    public static final int RULE_UPPERCASE_PATH=12;
    public static final int T__91=91;
    public static final int T__188=188;
    public static final int T__92=92;
    public static final int T__187=187;
    public static final int T__93=93;
    public static final int T__94=94;
    public static final int T__189=189;
    public static final int T__184=184;
    public static final int T__183=183;
    public static final int T__186=186;
    public static final int T__90=90;
    public static final int T__185=185;
    public static final int T__180=180;
    public static final int T__182=182;
    public static final int T__181=181;
    public static final int T__99=99;
    public static final int T__95=95;
    public static final int T__96=96;
    public static final int T__97=97;
    public static final int T__98=98;
    public static final int T__177=177;
    public static final int T__176=176;
    public static final int T__179=179;
    public static final int T__178=178;
    public static final int T__173=173;
    public static final int T__172=172;
    public static final int RULE_LOWERCASE_DASHID=9;
    public static final int T__175=175;
    public static final int T__174=174;
    public static final int T__171=171;
    public static final int T__170=170;
    public static final int T__169=169;
    public static final int T__70=70;
    public static final int T__71=71;
    public static final int T__72=72;
    public static final int RULE_STRING=5;
    public static final int T__77=77;
    public static final int T__78=78;
    public static final int T__79=79;
    public static final int T__73=73;
    public static final int T__74=74;
    public static final int T__75=75;
    public static final int T__76=76;
    public static final int T__80=80;
    public static final int T__199=199;
    public static final int T__81=81;
    public static final int T__198=198;
    public static final int T__82=82;
    public static final int T__83=83;
    public static final int T__195=195;
    public static final int T__194=194;
    public static final int RULE_WS=16;
    public static final int T__197=197;
    public static final int T__196=196;
    public static final int T__191=191;
    public static final int T__190=190;
    public static final int T__193=193;
    public static final int T__192=192;
    public static final int RULE_ANY_OTHER=17;
    public static final int RULE_LOWERCASE_ID=4;
    public static final int T__88=88;
    public static final int T__89=89;
    public static final int T__84=84;
    public static final int T__85=85;
    public static final int T__86=86;
    public static final int T__87=87;

    // delegates
    // delegators


        public InternalKimParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalKimParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalKimParser.tokenNames; }
    public String getGrammarFileName() { return "InternalKim.g"; }



    /*
      This grammar contains a lot of empty actions to work around a bug in ANTLR.
      Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
    */

     	private KimGrammarAccess grammarAccess;

        public InternalKimParser(TokenStream input, KimGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }

        @Override
        protected String getFirstRuleName() {
        	return "Model";
       	}

       	@Override
       	protected KimGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}




    // $ANTLR start "entryRuleModel"
    // InternalKim.g:73:1: entryRuleModel returns [EObject current=null] : iv_ruleModel= ruleModel EOF ;
    public final EObject entryRuleModel() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleModel = null;


        try {
            // InternalKim.g:73:46: (iv_ruleModel= ruleModel EOF )
            // InternalKim.g:74:2: iv_ruleModel= ruleModel EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getModelRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleModel=ruleModel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleModel; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleModel"


    // $ANTLR start "ruleModel"
    // InternalKim.g:80:1: ruleModel returns [EObject current=null] : ( ( (lv_observable_0_0= ruleObservableSemantics ) ) | ( ( (lv_namespace_1_0= ruleNamespace ) )? ( (lv_statements_2_0= ruleStatement ) )* ) ) ;
    public final EObject ruleModel() throws RecognitionException {
        EObject current = null;

        EObject lv_observable_0_0 = null;

        EObject lv_namespace_1_0 = null;

        EObject lv_statements_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:86:2: ( ( ( (lv_observable_0_0= ruleObservableSemantics ) ) | ( ( (lv_namespace_1_0= ruleNamespace ) )? ( (lv_statements_2_0= ruleStatement ) )* ) ) )
            // InternalKim.g:87:2: ( ( (lv_observable_0_0= ruleObservableSemantics ) ) | ( ( (lv_namespace_1_0= ruleNamespace ) )? ( (lv_statements_2_0= ruleStatement ) )* ) )
            {
            // InternalKim.g:87:2: ( ( (lv_observable_0_0= ruleObservableSemantics ) ) | ( ( (lv_namespace_1_0= ruleNamespace ) )? ( (lv_statements_2_0= ruleStatement ) )* ) )
            int alt3=2;
            int LA3_0 = input.LA(1);

            if ( ((LA3_0>=RULE_LOWERCASE_ID && LA3_0<=RULE_CAMELCASE_ID)||(LA3_0>=RULE_ID && LA3_0<=RULE_INT)||(LA3_0>=22 && LA3_0<=24)||LA3_0==34||(LA3_0>=47 && LA3_0<=48)||LA3_0==93||(LA3_0>=108 && LA3_0<=109)||(LA3_0>=116 && LA3_0<=117)||(LA3_0>=119 && LA3_0<=130)||LA3_0==184||(LA3_0>=226 && LA3_0<=227)) ) {
                alt3=1;
            }
            else if ( (LA3_0==EOF||LA3_0==RULE_ANNOTATION_ID||(LA3_0>=19 && LA3_0<=20)||(LA3_0>=68 && LA3_0<=76)||LA3_0==79||LA3_0==91||(LA3_0>=134 && LA3_0<=141)||LA3_0==159||(LA3_0>=171 && LA3_0<=174)||(LA3_0>=188 && LA3_0<=219)) ) {
                alt3=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;
            }
            switch (alt3) {
                case 1 :
                    // InternalKim.g:88:3: ( (lv_observable_0_0= ruleObservableSemantics ) )
                    {
                    // InternalKim.g:88:3: ( (lv_observable_0_0= ruleObservableSemantics ) )
                    // InternalKim.g:89:4: (lv_observable_0_0= ruleObservableSemantics )
                    {
                    // InternalKim.g:89:4: (lv_observable_0_0= ruleObservableSemantics )
                    // InternalKim.g:90:5: lv_observable_0_0= ruleObservableSemantics
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getModelAccess().getObservableObservableSemanticsParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_observable_0_0=ruleObservableSemantics();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getModelRule());
                      					}
                      					set(
                      						current,
                      						"observable",
                      						lv_observable_0_0,
                      						"org.integratedmodelling.kim.Kim.ObservableSemantics");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:108:3: ( ( (lv_namespace_1_0= ruleNamespace ) )? ( (lv_statements_2_0= ruleStatement ) )* )
                    {
                    // InternalKim.g:108:3: ( ( (lv_namespace_1_0= ruleNamespace ) )? ( (lv_statements_2_0= ruleStatement ) )* )
                    // InternalKim.g:109:4: ( (lv_namespace_1_0= ruleNamespace ) )? ( (lv_statements_2_0= ruleStatement ) )*
                    {
                    // InternalKim.g:109:4: ( (lv_namespace_1_0= ruleNamespace ) )?
                    int alt1=2;
                    alt1 = dfa1.predict(input);
                    switch (alt1) {
                        case 1 :
                            // InternalKim.g:110:5: (lv_namespace_1_0= ruleNamespace )
                            {
                            // InternalKim.g:110:5: (lv_namespace_1_0= ruleNamespace )
                            // InternalKim.g:111:6: lv_namespace_1_0= ruleNamespace
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getModelAccess().getNamespaceNamespaceParserRuleCall_1_0_0());
                              					
                            }
                            pushFollow(FOLLOW_3);
                            lv_namespace_1_0=ruleNamespace();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getModelRule());
                              						}
                              						set(
                              							current,
                              							"namespace",
                              							lv_namespace_1_0,
                              							"org.integratedmodelling.kim.Kim.Namespace");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalKim.g:128:4: ( (lv_statements_2_0= ruleStatement ) )*
                    loop2:
                    do {
                        int alt2=2;
                        int LA2_0 = input.LA(1);

                        if ( (LA2_0==RULE_ANNOTATION_ID||(LA2_0>=19 && LA2_0<=20)||(LA2_0>=68 && LA2_0<=73)||LA2_0==79||LA2_0==91||(LA2_0>=134 && LA2_0<=141)||LA2_0==159||(LA2_0>=171 && LA2_0<=174)||(LA2_0>=188 && LA2_0<=219)) ) {
                            alt2=1;
                        }


                        switch (alt2) {
                    	case 1 :
                    	    // InternalKim.g:129:5: (lv_statements_2_0= ruleStatement )
                    	    {
                    	    // InternalKim.g:129:5: (lv_statements_2_0= ruleStatement )
                    	    // InternalKim.g:130:6: lv_statements_2_0= ruleStatement
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getModelAccess().getStatementsStatementParserRuleCall_1_1_0());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_3);
                    	    lv_statements_2_0=ruleStatement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getModelRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"statements",
                    	      							lv_statements_2_0,
                    	      							"org.integratedmodelling.kim.Kim.Statement");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop2;
                        }
                    } while (true);


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleModel"


    // $ANTLR start "entryRuleStatement"
    // InternalKim.g:152:1: entryRuleStatement returns [EObject current=null] : iv_ruleStatement= ruleStatement EOF ;
    public final EObject entryRuleStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStatement = null;


        try {
            // InternalKim.g:152:50: (iv_ruleStatement= ruleStatement EOF )
            // InternalKim.g:153:2: iv_ruleStatement= ruleStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStatement=ruleStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStatement"


    // $ANTLR start "ruleStatement"
    // InternalKim.g:159:1: ruleStatement returns [EObject current=null] : ( ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' ) | ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' ) | ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' ) | ( ( (lv_observeStatement_6_0= ruleObserveStatement ) ) otherlv_7= ';' ) ) ;
    public final EObject ruleStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_conceptStatement_0_0 = null;

        EObject lv_modelStatement_2_0 = null;

        EObject lv_upperOntologyStatement_4_0 = null;

        EObject lv_observeStatement_6_0 = null;



        	enterRule();

        try {
            // InternalKim.g:165:2: ( ( ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' ) | ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' ) | ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' ) | ( ( (lv_observeStatement_6_0= ruleObserveStatement ) ) otherlv_7= ';' ) ) )
            // InternalKim.g:166:2: ( ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' ) | ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' ) | ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' ) | ( ( (lv_observeStatement_6_0= ruleObserveStatement ) ) otherlv_7= ';' ) )
            {
            // InternalKim.g:166:2: ( ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' ) | ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' ) | ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' ) | ( ( (lv_observeStatement_6_0= ruleObserveStatement ) ) otherlv_7= ';' ) )
            int alt4=4;
            alt4 = dfa4.predict(input);
            switch (alt4) {
                case 1 :
                    // InternalKim.g:167:3: ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' )
                    {
                    // InternalKim.g:167:3: ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' )
                    // InternalKim.g:168:4: ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';'
                    {
                    // InternalKim.g:168:4: ( (lv_conceptStatement_0_0= ruleConceptStatement ) )
                    // InternalKim.g:169:5: (lv_conceptStatement_0_0= ruleConceptStatement )
                    {
                    // InternalKim.g:169:5: (lv_conceptStatement_0_0= ruleConceptStatement )
                    // InternalKim.g:170:6: lv_conceptStatement_0_0= ruleConceptStatement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStatementAccess().getConceptStatementConceptStatementParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_4);
                    lv_conceptStatement_0_0=ruleConceptStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStatementRule());
                      						}
                      						set(
                      							current,
                      							"conceptStatement",
                      							lv_conceptStatement_0_0,
                      							"org.integratedmodelling.kim.Kim.ConceptStatement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,18,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getStatementAccess().getSemicolonKeyword_0_1());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:193:3: ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' )
                    {
                    // InternalKim.g:193:3: ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' )
                    // InternalKim.g:194:4: ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';'
                    {
                    // InternalKim.g:194:4: ( (lv_modelStatement_2_0= ruleModelStatement ) )
                    // InternalKim.g:195:5: (lv_modelStatement_2_0= ruleModelStatement )
                    {
                    // InternalKim.g:195:5: (lv_modelStatement_2_0= ruleModelStatement )
                    // InternalKim.g:196:6: lv_modelStatement_2_0= ruleModelStatement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStatementAccess().getModelStatementModelStatementParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_4);
                    lv_modelStatement_2_0=ruleModelStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStatementRule());
                      						}
                      						set(
                      							current,
                      							"modelStatement",
                      							lv_modelStatement_2_0,
                      							"org.integratedmodelling.kim.Kim.ModelStatement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,18,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getStatementAccess().getSemicolonKeyword_1_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:219:3: ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' )
                    {
                    // InternalKim.g:219:3: ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' )
                    // InternalKim.g:220:4: ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';'
                    {
                    // InternalKim.g:220:4: ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) )
                    // InternalKim.g:221:5: (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition )
                    {
                    // InternalKim.g:221:5: (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition )
                    // InternalKim.g:222:6: lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStatementAccess().getUpperOntologyStatementUpperOntologyDefinitionParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_4);
                    lv_upperOntologyStatement_4_0=ruleUpperOntologyDefinition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStatementRule());
                      						}
                      						set(
                      							current,
                      							"upperOntologyStatement",
                      							lv_upperOntologyStatement_4_0,
                      							"org.integratedmodelling.kim.Kim.UpperOntologyDefinition");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,18,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getStatementAccess().getSemicolonKeyword_2_1());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:245:3: ( ( (lv_observeStatement_6_0= ruleObserveStatement ) ) otherlv_7= ';' )
                    {
                    // InternalKim.g:245:3: ( ( (lv_observeStatement_6_0= ruleObserveStatement ) ) otherlv_7= ';' )
                    // InternalKim.g:246:4: ( (lv_observeStatement_6_0= ruleObserveStatement ) ) otherlv_7= ';'
                    {
                    // InternalKim.g:246:4: ( (lv_observeStatement_6_0= ruleObserveStatement ) )
                    // InternalKim.g:247:5: (lv_observeStatement_6_0= ruleObserveStatement )
                    {
                    // InternalKim.g:247:5: (lv_observeStatement_6_0= ruleObserveStatement )
                    // InternalKim.g:248:6: lv_observeStatement_6_0= ruleObserveStatement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStatementAccess().getObserveStatementObserveStatementParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_4);
                    lv_observeStatement_6_0=ruleObserveStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStatementRule());
                      						}
                      						set(
                      							current,
                      							"observeStatement",
                      							lv_observeStatement_6_0,
                      							"org.integratedmodelling.kim.Kim.ObserveStatement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_7=(Token)match(input,18,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getStatementAccess().getSemicolonKeyword_3_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStatement"


    // $ANTLR start "entryRuleModelStatement"
    // InternalKim.g:274:1: entryRuleModelStatement returns [EObject current=null] : iv_ruleModelStatement= ruleModelStatement EOF ;
    public final EObject entryRuleModelStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleModelStatement = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getModelStatementAccess().getUnorderedGroup_1()
        	);

        try {
            // InternalKim.g:278:2: (iv_ruleModelStatement= ruleModelStatement EOF )
            // InternalKim.g:279:2: iv_ruleModelStatement= ruleModelStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getModelStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleModelStatement=ruleModelStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleModelStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleModelStatement"


    // $ANTLR start "ruleModelStatement"
    // InternalKim.g:288:1: ruleModelStatement returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_2_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_private_3_0= 'private' ) ) ) ) ) )* ) ) ) ( (lv_model_4_0= ruleMODEL_TYPE ) ) ( (lv_body_5_0= ruleModelBodyStatement ) ) ) ;
    public final EObject ruleModelStatement() throws RecognitionException {
        EObject current = null;

        Token lv_inactive_2_0=null;
        Token lv_private_3_0=null;
        EObject lv_annotations_0_0 = null;

        AntlrDatatypeRuleToken lv_model_4_0 = null;

        EObject lv_body_5_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getModelStatementAccess().getUnorderedGroup_1()
        	);

        try {
            // InternalKim.g:297:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_2_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_private_3_0= 'private' ) ) ) ) ) )* ) ) ) ( (lv_model_4_0= ruleMODEL_TYPE ) ) ( (lv_body_5_0= ruleModelBodyStatement ) ) ) )
            // InternalKim.g:298:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_2_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_private_3_0= 'private' ) ) ) ) ) )* ) ) ) ( (lv_model_4_0= ruleMODEL_TYPE ) ) ( (lv_body_5_0= ruleModelBodyStatement ) ) )
            {
            // InternalKim.g:298:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_2_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_private_3_0= 'private' ) ) ) ) ) )* ) ) ) ( (lv_model_4_0= ruleMODEL_TYPE ) ) ( (lv_body_5_0= ruleModelBodyStatement ) ) )
            // InternalKim.g:299:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_2_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_private_3_0= 'private' ) ) ) ) ) )* ) ) ) ( (lv_model_4_0= ruleMODEL_TYPE ) ) ( (lv_body_5_0= ruleModelBodyStatement ) )
            {
            // InternalKim.g:299:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop5:
            do {
                int alt5=2;
                int LA5_0 = input.LA(1);

                if ( (LA5_0==RULE_ANNOTATION_ID) ) {
                    alt5=1;
                }


                switch (alt5) {
            	case 1 :
            	    // InternalKim.g:300:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalKim.g:300:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalKim.g:301:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getModelStatementAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_5);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getModelStatementRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"org.integratedmodelling.kim.Kim.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop5;
                }
            } while (true);

            // InternalKim.g:318:3: ( ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_2_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_private_3_0= 'private' ) ) ) ) ) )* ) ) )
            // InternalKim.g:319:4: ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_2_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_private_3_0= 'private' ) ) ) ) ) )* ) )
            {
            // InternalKim.g:319:4: ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_2_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_private_3_0= 'private' ) ) ) ) ) )* ) )
            // InternalKim.g:320:5: ( ( ({...}? => ( ({...}? => ( (lv_inactive_2_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_private_3_0= 'private' ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getModelStatementAccess().getUnorderedGroup_1());
            // InternalKim.g:323:5: ( ( ({...}? => ( ({...}? => ( (lv_inactive_2_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_private_3_0= 'private' ) ) ) ) ) )* )
            // InternalKim.g:324:6: ( ({...}? => ( ({...}? => ( (lv_inactive_2_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_private_3_0= 'private' ) ) ) ) ) )*
            {
            // InternalKim.g:324:6: ( ({...}? => ( ({...}? => ( (lv_inactive_2_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_private_3_0= 'private' ) ) ) ) ) )*
            loop6:
            do {
                int alt6=3;
                int LA6_0 = input.LA(1);

                if ( LA6_0 == 19 && getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0) ) {
                    alt6=1;
                }
                else if ( LA6_0 == 20 && getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1) ) {
                    alt6=2;
                }


                switch (alt6) {
            	case 1 :
            	    // InternalKim.g:325:4: ({...}? => ( ({...}? => ( (lv_inactive_2_0= 'void' ) ) ) ) )
            	    {
            	    // InternalKim.g:325:4: ({...}? => ( ({...}? => ( (lv_inactive_2_0= 'void' ) ) ) ) )
            	    // InternalKim.g:326:5: {...}? => ( ({...}? => ( (lv_inactive_2_0= 'void' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleModelStatement", "getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0)");
            	    }
            	    // InternalKim.g:326:111: ( ({...}? => ( (lv_inactive_2_0= 'void' ) ) ) )
            	    // InternalKim.g:327:6: ({...}? => ( (lv_inactive_2_0= 'void' ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0);
            	    // InternalKim.g:330:9: ({...}? => ( (lv_inactive_2_0= 'void' ) ) )
            	    // InternalKim.g:330:10: {...}? => ( (lv_inactive_2_0= 'void' ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleModelStatement", "true");
            	    }
            	    // InternalKim.g:330:19: ( (lv_inactive_2_0= 'void' ) )
            	    // InternalKim.g:330:20: (lv_inactive_2_0= 'void' )
            	    {
            	    // InternalKim.g:330:20: (lv_inactive_2_0= 'void' )
            	    // InternalKim.g:331:10: lv_inactive_2_0= 'void'
            	    {
            	    lv_inactive_2_0=(Token)match(input,19,FOLLOW_5); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(lv_inactive_2_0, grammarAccess.getModelStatementAccess().getInactiveVoidKeyword_1_0_0());
            	      									
            	    }
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElement(grammarAccess.getModelStatementRule());
            	      										}
            	      										setWithLastConsumed(current, "inactive", true, "void");
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getModelStatementAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKim.g:348:4: ({...}? => ( ({...}? => ( (lv_private_3_0= 'private' ) ) ) ) )
            	    {
            	    // InternalKim.g:348:4: ({...}? => ( ({...}? => ( (lv_private_3_0= 'private' ) ) ) ) )
            	    // InternalKim.g:349:5: {...}? => ( ({...}? => ( (lv_private_3_0= 'private' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleModelStatement", "getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1)");
            	    }
            	    // InternalKim.g:349:111: ( ({...}? => ( (lv_private_3_0= 'private' ) ) ) )
            	    // InternalKim.g:350:6: ({...}? => ( (lv_private_3_0= 'private' ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1);
            	    // InternalKim.g:353:9: ({...}? => ( (lv_private_3_0= 'private' ) ) )
            	    // InternalKim.g:353:10: {...}? => ( (lv_private_3_0= 'private' ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleModelStatement", "true");
            	    }
            	    // InternalKim.g:353:19: ( (lv_private_3_0= 'private' ) )
            	    // InternalKim.g:353:20: (lv_private_3_0= 'private' )
            	    {
            	    // InternalKim.g:353:20: (lv_private_3_0= 'private' )
            	    // InternalKim.g:354:10: lv_private_3_0= 'private'
            	    {
            	    lv_private_3_0=(Token)match(input,20,FOLLOW_5); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(lv_private_3_0, grammarAccess.getModelStatementAccess().getPrivatePrivateKeyword_1_1_0());
            	      									
            	    }
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElement(grammarAccess.getModelStatementRule());
            	      										}
            	      										setWithLastConsumed(current, "private", true, "private");
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getModelStatementAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop6;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getModelStatementAccess().getUnorderedGroup_1());

            }

            // InternalKim.g:378:3: ( (lv_model_4_0= ruleMODEL_TYPE ) )
            // InternalKim.g:379:4: (lv_model_4_0= ruleMODEL_TYPE )
            {
            // InternalKim.g:379:4: (lv_model_4_0= ruleMODEL_TYPE )
            // InternalKim.g:380:5: lv_model_4_0= ruleMODEL_TYPE
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getModelStatementAccess().getModelMODEL_TYPEParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_6);
            lv_model_4_0=ruleMODEL_TYPE();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getModelStatementRule());
              					}
              					set(
              						current,
              						"model",
              						lv_model_4_0,
              						"org.integratedmodelling.kim.Kim.MODEL_TYPE");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:397:3: ( (lv_body_5_0= ruleModelBodyStatement ) )
            // InternalKim.g:398:4: (lv_body_5_0= ruleModelBodyStatement )
            {
            // InternalKim.g:398:4: (lv_body_5_0= ruleModelBodyStatement )
            // InternalKim.g:399:5: lv_body_5_0= ruleModelBodyStatement
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getModelStatementAccess().getBodyModelBodyStatementParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_body_5_0=ruleModelBodyStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getModelStatementRule());
              					}
              					set(
              						current,
              						"body",
              						lv_body_5_0,
              						"org.integratedmodelling.kim.Kim.ModelBodyStatement");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleModelStatement"


    // $ANTLR start "entryRuleModelBodyStatement"
    // InternalKim.g:423:1: entryRuleModelBodyStatement returns [EObject current=null] : iv_ruleModelBodyStatement= ruleModelBodyStatement EOF ;
    public final EObject entryRuleModelBodyStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleModelBodyStatement = null;


        try {
            // InternalKim.g:423:59: (iv_ruleModelBodyStatement= ruleModelBodyStatement EOF )
            // InternalKim.g:424:2: iv_ruleModelBodyStatement= ruleModelBodyStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getModelBodyStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleModelBodyStatement=ruleModelBodyStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleModelBodyStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleModelBodyStatement"


    // $ANTLR start "ruleModelBodyStatement"
    // InternalKim.g:430:1: ruleModelBodyStatement returns [EObject current=null] : ( ( (lv_instantiator_0_0= 'each' ) )? ( ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_function_4_0= ruleFunction ) ) | ( (lv_number_5_0= ruleNumber ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) | ( (lv_concept_7_0= ruleSimpleObservableSemantics ) ) ) otherlv_8= 'as' )? ( ( (lv_name_9_0= RULE_LOWERCASE_ID ) ) | ( ( (lv_observables_10_0= ruleObservableSemantics ) ) (otherlv_11= ',' ( (lv_observables_12_0= ruleObservableSemantics ) ) )* ) ) (otherlv_13= 'observing' ( (lv_dependencies_14_0= ruleDependency ) ) (otherlv_15= ',' ( (lv_dependencies_16_0= ruleDependency ) ) )* )? (otherlv_17= 'using' ( (lv_contextualizers_18_0= ruleValueExecution ) ) (otherlv_19= ',' ( (lv_contextualizers_20_0= ruleValueExecution ) ) )* )? ( ( (otherlv_21= 'classified' | ( (lv_discretization_22_0= 'discretized' ) ) ) (otherlv_23= 'into' ( (lv_classification_24_0= ruleClassification ) ) ) ) | (otherlv_25= 'according' otherlv_26= 'to' ( (lv_classificationProperty_27_0= rulePropertyId ) ) ) )? (otherlv_28= 'lookup' (otherlv_29= '(' ( ( (lv_lookupTableArgs_30_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_30_2= '?' | lv_lookupTableArgs_30_3= '*' ) ) ) (otherlv_31= ',' ( ( (lv_lookupTableArgs_32_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_32_2= '?' | lv_lookupTableArgs_32_3= '*' ) ) ) )* otherlv_33= ')' )? otherlv_34= 'into' ( ( (lv_lookupTable_35_0= ruleTable ) ) | ( (lv_lookupTableId_36_0= RULE_LOWERCASE_ID ) ) ) )? ( (lv_actions_37_0= ruleActionSpecification ) )* (otherlv_38= 'with' otherlv_39= 'metadata' ( (lv_metadata_40_0= ruleMetadata ) ) )? (otherlv_41= 'with' otherlv_42= 'documentation' ( (lv_documentation_43_0= ruleDocumentation ) ) )? ) ;
    public final EObject ruleModelBodyStatement() throws RecognitionException {
        EObject current = null;

        Token lv_instantiator_0_0=null;
        Token otherlv_2=null;
        Token lv_boolean_6_1=null;
        Token lv_boolean_6_2=null;
        Token otherlv_8=null;
        Token lv_name_9_0=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token lv_discretization_22_0=null;
        Token otherlv_23=null;
        Token otherlv_25=null;
        Token otherlv_26=null;
        Token otherlv_28=null;
        Token otherlv_29=null;
        Token lv_lookupTableArgs_30_1=null;
        Token lv_lookupTableArgs_30_2=null;
        Token lv_lookupTableArgs_30_3=null;
        Token otherlv_31=null;
        Token lv_lookupTableArgs_32_1=null;
        Token lv_lookupTableArgs_32_2=null;
        Token lv_lookupTableArgs_32_3=null;
        Token otherlv_33=null;
        Token otherlv_34=null;
        Token lv_lookupTableId_36_0=null;
        Token otherlv_38=null;
        Token otherlv_39=null;
        Token otherlv_41=null;
        Token otherlv_42=null;
        EObject lv_urns_1_0 = null;

        EObject lv_urns_3_0 = null;

        EObject lv_function_4_0 = null;

        EObject lv_number_5_0 = null;

        EObject lv_concept_7_0 = null;

        EObject lv_observables_10_0 = null;

        EObject lv_observables_12_0 = null;

        EObject lv_dependencies_14_0 = null;

        EObject lv_dependencies_16_0 = null;

        EObject lv_contextualizers_18_0 = null;

        EObject lv_contextualizers_20_0 = null;

        EObject lv_classification_24_0 = null;

        AntlrDatatypeRuleToken lv_classificationProperty_27_0 = null;

        EObject lv_lookupTable_35_0 = null;

        EObject lv_actions_37_0 = null;

        EObject lv_metadata_40_0 = null;

        EObject lv_documentation_43_0 = null;



        	enterRule();

        try {
            // InternalKim.g:436:2: ( ( ( (lv_instantiator_0_0= 'each' ) )? ( ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_function_4_0= ruleFunction ) ) | ( (lv_number_5_0= ruleNumber ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) | ( (lv_concept_7_0= ruleSimpleObservableSemantics ) ) ) otherlv_8= 'as' )? ( ( (lv_name_9_0= RULE_LOWERCASE_ID ) ) | ( ( (lv_observables_10_0= ruleObservableSemantics ) ) (otherlv_11= ',' ( (lv_observables_12_0= ruleObservableSemantics ) ) )* ) ) (otherlv_13= 'observing' ( (lv_dependencies_14_0= ruleDependency ) ) (otherlv_15= ',' ( (lv_dependencies_16_0= ruleDependency ) ) )* )? (otherlv_17= 'using' ( (lv_contextualizers_18_0= ruleValueExecution ) ) (otherlv_19= ',' ( (lv_contextualizers_20_0= ruleValueExecution ) ) )* )? ( ( (otherlv_21= 'classified' | ( (lv_discretization_22_0= 'discretized' ) ) ) (otherlv_23= 'into' ( (lv_classification_24_0= ruleClassification ) ) ) ) | (otherlv_25= 'according' otherlv_26= 'to' ( (lv_classificationProperty_27_0= rulePropertyId ) ) ) )? (otherlv_28= 'lookup' (otherlv_29= '(' ( ( (lv_lookupTableArgs_30_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_30_2= '?' | lv_lookupTableArgs_30_3= '*' ) ) ) (otherlv_31= ',' ( ( (lv_lookupTableArgs_32_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_32_2= '?' | lv_lookupTableArgs_32_3= '*' ) ) ) )* otherlv_33= ')' )? otherlv_34= 'into' ( ( (lv_lookupTable_35_0= ruleTable ) ) | ( (lv_lookupTableId_36_0= RULE_LOWERCASE_ID ) ) ) )? ( (lv_actions_37_0= ruleActionSpecification ) )* (otherlv_38= 'with' otherlv_39= 'metadata' ( (lv_metadata_40_0= ruleMetadata ) ) )? (otherlv_41= 'with' otherlv_42= 'documentation' ( (lv_documentation_43_0= ruleDocumentation ) ) )? ) )
            // InternalKim.g:437:2: ( ( (lv_instantiator_0_0= 'each' ) )? ( ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_function_4_0= ruleFunction ) ) | ( (lv_number_5_0= ruleNumber ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) | ( (lv_concept_7_0= ruleSimpleObservableSemantics ) ) ) otherlv_8= 'as' )? ( ( (lv_name_9_0= RULE_LOWERCASE_ID ) ) | ( ( (lv_observables_10_0= ruleObservableSemantics ) ) (otherlv_11= ',' ( (lv_observables_12_0= ruleObservableSemantics ) ) )* ) ) (otherlv_13= 'observing' ( (lv_dependencies_14_0= ruleDependency ) ) (otherlv_15= ',' ( (lv_dependencies_16_0= ruleDependency ) ) )* )? (otherlv_17= 'using' ( (lv_contextualizers_18_0= ruleValueExecution ) ) (otherlv_19= ',' ( (lv_contextualizers_20_0= ruleValueExecution ) ) )* )? ( ( (otherlv_21= 'classified' | ( (lv_discretization_22_0= 'discretized' ) ) ) (otherlv_23= 'into' ( (lv_classification_24_0= ruleClassification ) ) ) ) | (otherlv_25= 'according' otherlv_26= 'to' ( (lv_classificationProperty_27_0= rulePropertyId ) ) ) )? (otherlv_28= 'lookup' (otherlv_29= '(' ( ( (lv_lookupTableArgs_30_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_30_2= '?' | lv_lookupTableArgs_30_3= '*' ) ) ) (otherlv_31= ',' ( ( (lv_lookupTableArgs_32_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_32_2= '?' | lv_lookupTableArgs_32_3= '*' ) ) ) )* otherlv_33= ')' )? otherlv_34= 'into' ( ( (lv_lookupTable_35_0= ruleTable ) ) | ( (lv_lookupTableId_36_0= RULE_LOWERCASE_ID ) ) ) )? ( (lv_actions_37_0= ruleActionSpecification ) )* (otherlv_38= 'with' otherlv_39= 'metadata' ( (lv_metadata_40_0= ruleMetadata ) ) )? (otherlv_41= 'with' otherlv_42= 'documentation' ( (lv_documentation_43_0= ruleDocumentation ) ) )? )
            {
            // InternalKim.g:437:2: ( ( (lv_instantiator_0_0= 'each' ) )? ( ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_function_4_0= ruleFunction ) ) | ( (lv_number_5_0= ruleNumber ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) | ( (lv_concept_7_0= ruleSimpleObservableSemantics ) ) ) otherlv_8= 'as' )? ( ( (lv_name_9_0= RULE_LOWERCASE_ID ) ) | ( ( (lv_observables_10_0= ruleObservableSemantics ) ) (otherlv_11= ',' ( (lv_observables_12_0= ruleObservableSemantics ) ) )* ) ) (otherlv_13= 'observing' ( (lv_dependencies_14_0= ruleDependency ) ) (otherlv_15= ',' ( (lv_dependencies_16_0= ruleDependency ) ) )* )? (otherlv_17= 'using' ( (lv_contextualizers_18_0= ruleValueExecution ) ) (otherlv_19= ',' ( (lv_contextualizers_20_0= ruleValueExecution ) ) )* )? ( ( (otherlv_21= 'classified' | ( (lv_discretization_22_0= 'discretized' ) ) ) (otherlv_23= 'into' ( (lv_classification_24_0= ruleClassification ) ) ) ) | (otherlv_25= 'according' otherlv_26= 'to' ( (lv_classificationProperty_27_0= rulePropertyId ) ) ) )? (otherlv_28= 'lookup' (otherlv_29= '(' ( ( (lv_lookupTableArgs_30_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_30_2= '?' | lv_lookupTableArgs_30_3= '*' ) ) ) (otherlv_31= ',' ( ( (lv_lookupTableArgs_32_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_32_2= '?' | lv_lookupTableArgs_32_3= '*' ) ) ) )* otherlv_33= ')' )? otherlv_34= 'into' ( ( (lv_lookupTable_35_0= ruleTable ) ) | ( (lv_lookupTableId_36_0= RULE_LOWERCASE_ID ) ) ) )? ( (lv_actions_37_0= ruleActionSpecification ) )* (otherlv_38= 'with' otherlv_39= 'metadata' ( (lv_metadata_40_0= ruleMetadata ) ) )? (otherlv_41= 'with' otherlv_42= 'documentation' ( (lv_documentation_43_0= ruleDocumentation ) ) )? )
            // InternalKim.g:438:3: ( (lv_instantiator_0_0= 'each' ) )? ( ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_function_4_0= ruleFunction ) ) | ( (lv_number_5_0= ruleNumber ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) | ( (lv_concept_7_0= ruleSimpleObservableSemantics ) ) ) otherlv_8= 'as' )? ( ( (lv_name_9_0= RULE_LOWERCASE_ID ) ) | ( ( (lv_observables_10_0= ruleObservableSemantics ) ) (otherlv_11= ',' ( (lv_observables_12_0= ruleObservableSemantics ) ) )* ) ) (otherlv_13= 'observing' ( (lv_dependencies_14_0= ruleDependency ) ) (otherlv_15= ',' ( (lv_dependencies_16_0= ruleDependency ) ) )* )? (otherlv_17= 'using' ( (lv_contextualizers_18_0= ruleValueExecution ) ) (otherlv_19= ',' ( (lv_contextualizers_20_0= ruleValueExecution ) ) )* )? ( ( (otherlv_21= 'classified' | ( (lv_discretization_22_0= 'discretized' ) ) ) (otherlv_23= 'into' ( (lv_classification_24_0= ruleClassification ) ) ) ) | (otherlv_25= 'according' otherlv_26= 'to' ( (lv_classificationProperty_27_0= rulePropertyId ) ) ) )? (otherlv_28= 'lookup' (otherlv_29= '(' ( ( (lv_lookupTableArgs_30_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_30_2= '?' | lv_lookupTableArgs_30_3= '*' ) ) ) (otherlv_31= ',' ( ( (lv_lookupTableArgs_32_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_32_2= '?' | lv_lookupTableArgs_32_3= '*' ) ) ) )* otherlv_33= ')' )? otherlv_34= 'into' ( ( (lv_lookupTable_35_0= ruleTable ) ) | ( (lv_lookupTableId_36_0= RULE_LOWERCASE_ID ) ) ) )? ( (lv_actions_37_0= ruleActionSpecification ) )* (otherlv_38= 'with' otherlv_39= 'metadata' ( (lv_metadata_40_0= ruleMetadata ) ) )? (otherlv_41= 'with' otherlv_42= 'documentation' ( (lv_documentation_43_0= ruleDocumentation ) ) )?
            {
            // InternalKim.g:438:3: ( (lv_instantiator_0_0= 'each' ) )?
            int alt7=2;
            int LA7_0 = input.LA(1);

            if ( (LA7_0==21) ) {
                alt7=1;
            }
            switch (alt7) {
                case 1 :
                    // InternalKim.g:439:4: (lv_instantiator_0_0= 'each' )
                    {
                    // InternalKim.g:439:4: (lv_instantiator_0_0= 'each' )
                    // InternalKim.g:440:5: lv_instantiator_0_0= 'each'
                    {
                    lv_instantiator_0_0=(Token)match(input,21,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_instantiator_0_0, grammarAccess.getModelBodyStatementAccess().getInstantiatorEachKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getModelBodyStatementRule());
                      					}
                      					setWithLastConsumed(current, "instantiator", true, "each");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:452:3: ( ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_function_4_0= ruleFunction ) ) | ( (lv_number_5_0= ruleNumber ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) | ( (lv_concept_7_0= ruleSimpleObservableSemantics ) ) ) otherlv_8= 'as' )?
            int alt11=2;
            alt11 = dfa11.predict(input);
            switch (alt11) {
                case 1 :
                    // InternalKim.g:453:4: ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_function_4_0= ruleFunction ) ) | ( (lv_number_5_0= ruleNumber ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) | ( (lv_concept_7_0= ruleSimpleObservableSemantics ) ) ) otherlv_8= 'as'
                    {
                    // InternalKim.g:453:4: ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_function_4_0= ruleFunction ) ) | ( (lv_number_5_0= ruleNumber ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) | ( (lv_concept_7_0= ruleSimpleObservableSemantics ) ) )
                    int alt10=5;
                    alt10 = dfa10.predict(input);
                    switch (alt10) {
                        case 1 :
                            // InternalKim.g:454:5: ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* )
                            {
                            // InternalKim.g:454:5: ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* )
                            // InternalKim.g:455:6: ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )*
                            {
                            // InternalKim.g:455:6: ( (lv_urns_1_0= ruleUrn ) )
                            // InternalKim.g:456:7: (lv_urns_1_0= ruleUrn )
                            {
                            // InternalKim.g:456:7: (lv_urns_1_0= ruleUrn )
                            // InternalKim.g:457:8: lv_urns_1_0= ruleUrn
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getModelBodyStatementAccess().getUrnsUrnParserRuleCall_1_0_0_0_0());
                              							
                            }
                            pushFollow(FOLLOW_7);
                            lv_urns_1_0=ruleUrn();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                              								}
                              								add(
                              									current,
                              									"urns",
                              									lv_urns_1_0,
                              									"org.integratedmodelling.kim.Kim.Urn");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalKim.g:474:6: (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )*
                            loop8:
                            do {
                                int alt8=2;
                                int LA8_0 = input.LA(1);

                                if ( (LA8_0==22) ) {
                                    alt8=1;
                                }


                                switch (alt8) {
                            	case 1 :
                            	    // InternalKim.g:475:7: otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) )
                            	    {
                            	    otherlv_2=(Token)match(input,22,FOLLOW_8); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_2, grammarAccess.getModelBodyStatementAccess().getCommaKeyword_1_0_0_1_0());
                            	      						
                            	    }
                            	    // InternalKim.g:479:7: ( (lv_urns_3_0= ruleUrn ) )
                            	    // InternalKim.g:480:8: (lv_urns_3_0= ruleUrn )
                            	    {
                            	    // InternalKim.g:480:8: (lv_urns_3_0= ruleUrn )
                            	    // InternalKim.g:481:9: lv_urns_3_0= ruleUrn
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getModelBodyStatementAccess().getUrnsUrnParserRuleCall_1_0_0_1_1_0());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_7);
                            	    lv_urns_3_0=ruleUrn();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"urns",
                            	      										lv_urns_3_0,
                            	      										"org.integratedmodelling.kim.Kim.Urn");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop8;
                                }
                            } while (true);


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:501:5: ( (lv_function_4_0= ruleFunction ) )
                            {
                            // InternalKim.g:501:5: ( (lv_function_4_0= ruleFunction ) )
                            // InternalKim.g:502:6: (lv_function_4_0= ruleFunction )
                            {
                            // InternalKim.g:502:6: (lv_function_4_0= ruleFunction )
                            // InternalKim.g:503:7: lv_function_4_0= ruleFunction
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getFunctionFunctionParserRuleCall_1_0_1_0());
                              						
                            }
                            pushFollow(FOLLOW_9);
                            lv_function_4_0=ruleFunction();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                              							}
                              							set(
                              								current,
                              								"function",
                              								lv_function_4_0,
                              								"org.integratedmodelling.kim.Kim.Function");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 3 :
                            // InternalKim.g:521:5: ( (lv_number_5_0= ruleNumber ) )
                            {
                            // InternalKim.g:521:5: ( (lv_number_5_0= ruleNumber ) )
                            // InternalKim.g:522:6: (lv_number_5_0= ruleNumber )
                            {
                            // InternalKim.g:522:6: (lv_number_5_0= ruleNumber )
                            // InternalKim.g:523:7: lv_number_5_0= ruleNumber
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getNumberNumberParserRuleCall_1_0_2_0());
                              						
                            }
                            pushFollow(FOLLOW_9);
                            lv_number_5_0=ruleNumber();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                              							}
                              							set(
                              								current,
                              								"number",
                              								lv_number_5_0,
                              								"org.integratedmodelling.kim.Kim.Number");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 4 :
                            // InternalKim.g:541:5: ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) )
                            {
                            // InternalKim.g:541:5: ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) )
                            // InternalKim.g:542:6: ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) )
                            {
                            // InternalKim.g:542:6: ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) )
                            // InternalKim.g:543:7: (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' )
                            {
                            // InternalKim.g:543:7: (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' )
                            int alt9=2;
                            int LA9_0 = input.LA(1);

                            if ( (LA9_0==23) ) {
                                alt9=1;
                            }
                            else if ( (LA9_0==24) ) {
                                alt9=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 9, 0, input);

                                throw nvae;
                            }
                            switch (alt9) {
                                case 1 :
                                    // InternalKim.g:544:8: lv_boolean_6_1= 'true'
                                    {
                                    lv_boolean_6_1=(Token)match(input,23,FOLLOW_9); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_boolean_6_1, grammarAccess.getModelBodyStatementAccess().getBooleanTrueKeyword_1_0_3_0_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getModelBodyStatementRule());
                                      								}
                                      								setWithLastConsumed(current, "boolean", lv_boolean_6_1, null);
                                      							
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:555:8: lv_boolean_6_2= 'false'
                                    {
                                    lv_boolean_6_2=(Token)match(input,24,FOLLOW_9); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_boolean_6_2, grammarAccess.getModelBodyStatementAccess().getBooleanFalseKeyword_1_0_3_0_1());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getModelBodyStatementRule());
                                      								}
                                      								setWithLastConsumed(current, "boolean", lv_boolean_6_2, null);
                                      							
                                    }

                                    }
                                    break;

                            }


                            }


                            }


                            }
                            break;
                        case 5 :
                            // InternalKim.g:569:5: ( (lv_concept_7_0= ruleSimpleObservableSemantics ) )
                            {
                            // InternalKim.g:569:5: ( (lv_concept_7_0= ruleSimpleObservableSemantics ) )
                            // InternalKim.g:570:6: (lv_concept_7_0= ruleSimpleObservableSemantics )
                            {
                            // InternalKim.g:570:6: (lv_concept_7_0= ruleSimpleObservableSemantics )
                            // InternalKim.g:571:7: lv_concept_7_0= ruleSimpleObservableSemantics
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getConceptSimpleObservableSemanticsParserRuleCall_1_0_4_0());
                              						
                            }
                            pushFollow(FOLLOW_9);
                            lv_concept_7_0=ruleSimpleObservableSemantics();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                              							}
                              							set(
                              								current,
                              								"concept",
                              								lv_concept_7_0,
                              								"org.integratedmodelling.kim.Kim.SimpleObservableSemantics");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    otherlv_8=(Token)match(input,25,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getModelBodyStatementAccess().getAsKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:594:3: ( ( (lv_name_9_0= RULE_LOWERCASE_ID ) ) | ( ( (lv_observables_10_0= ruleObservableSemantics ) ) (otherlv_11= ',' ( (lv_observables_12_0= ruleObservableSemantics ) ) )* ) )
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( (LA13_0==RULE_LOWERCASE_ID) ) {
                int LA13_1 = input.LA(2);

                if ( (LA13_1==EOF||LA13_1==18||(LA13_1>=26 && LA13_1<=29)||LA13_1==31||LA13_1==33||LA13_1==38||(LA13_1>=52 && LA13_1<=54)) ) {
                    alt13=1;
                }
                else if ( (LA13_1==25||LA13_1==34||LA13_1==88||LA13_1==90) ) {
                    alt13=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 13, 1, input);

                    throw nvae;
                }
            }
            else if ( ((LA13_0>=RULE_STRING && LA13_0<=RULE_CAMELCASE_ID)||(LA13_0>=RULE_ID && LA13_0<=RULE_INT)||(LA13_0>=22 && LA13_0<=24)||LA13_0==34||(LA13_0>=47 && LA13_0<=48)||LA13_0==93||(LA13_0>=108 && LA13_0<=109)||(LA13_0>=116 && LA13_0<=117)||(LA13_0>=119 && LA13_0<=130)||LA13_0==184||(LA13_0>=226 && LA13_0<=227)) ) {
                alt13=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 13, 0, input);

                throw nvae;
            }
            switch (alt13) {
                case 1 :
                    // InternalKim.g:595:4: ( (lv_name_9_0= RULE_LOWERCASE_ID ) )
                    {
                    // InternalKim.g:595:4: ( (lv_name_9_0= RULE_LOWERCASE_ID ) )
                    // InternalKim.g:596:5: (lv_name_9_0= RULE_LOWERCASE_ID )
                    {
                    // InternalKim.g:596:5: (lv_name_9_0= RULE_LOWERCASE_ID )
                    // InternalKim.g:597:6: lv_name_9_0= RULE_LOWERCASE_ID
                    {
                    lv_name_9_0=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_9_0, grammarAccess.getModelBodyStatementAccess().getNameLOWERCASE_IDTerminalRuleCall_2_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getModelBodyStatementRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"name",
                      							lv_name_9_0,
                      							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:614:4: ( ( (lv_observables_10_0= ruleObservableSemantics ) ) (otherlv_11= ',' ( (lv_observables_12_0= ruleObservableSemantics ) ) )* )
                    {
                    // InternalKim.g:614:4: ( ( (lv_observables_10_0= ruleObservableSemantics ) ) (otherlv_11= ',' ( (lv_observables_12_0= ruleObservableSemantics ) ) )* )
                    // InternalKim.g:615:5: ( (lv_observables_10_0= ruleObservableSemantics ) ) (otherlv_11= ',' ( (lv_observables_12_0= ruleObservableSemantics ) ) )*
                    {
                    // InternalKim.g:615:5: ( (lv_observables_10_0= ruleObservableSemantics ) )
                    // InternalKim.g:616:6: (lv_observables_10_0= ruleObservableSemantics )
                    {
                    // InternalKim.g:616:6: (lv_observables_10_0= ruleObservableSemantics )
                    // InternalKim.g:617:7: lv_observables_10_0= ruleObservableSemantics
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getObservablesObservableSemanticsParserRuleCall_2_1_0_0());
                      						
                    }
                    pushFollow(FOLLOW_11);
                    lv_observables_10_0=ruleObservableSemantics();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                      							}
                      							add(
                      								current,
                      								"observables",
                      								lv_observables_10_0,
                      								"org.integratedmodelling.kim.Kim.ObservableSemantics");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalKim.g:634:5: (otherlv_11= ',' ( (lv_observables_12_0= ruleObservableSemantics ) ) )*
                    loop12:
                    do {
                        int alt12=2;
                        int LA12_0 = input.LA(1);

                        if ( (LA12_0==22) ) {
                            alt12=1;
                        }


                        switch (alt12) {
                    	case 1 :
                    	    // InternalKim.g:635:6: otherlv_11= ',' ( (lv_observables_12_0= ruleObservableSemantics ) )
                    	    {
                    	    otherlv_11=(Token)match(input,22,FOLLOW_6); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_11, grammarAccess.getModelBodyStatementAccess().getCommaKeyword_2_1_1_0());
                    	      					
                    	    }
                    	    // InternalKim.g:639:6: ( (lv_observables_12_0= ruleObservableSemantics ) )
                    	    // InternalKim.g:640:7: (lv_observables_12_0= ruleObservableSemantics )
                    	    {
                    	    // InternalKim.g:640:7: (lv_observables_12_0= ruleObservableSemantics )
                    	    // InternalKim.g:641:8: lv_observables_12_0= ruleObservableSemantics
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getModelBodyStatementAccess().getObservablesObservableSemanticsParserRuleCall_2_1_1_1_0());
                    	      							
                    	    }
                    	    pushFollow(FOLLOW_11);
                    	    lv_observables_12_0=ruleObservableSemantics();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"observables",
                    	      									lv_observables_12_0,
                    	      									"org.integratedmodelling.kim.Kim.ObservableSemantics");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop12;
                        }
                    } while (true);


                    }


                    }
                    break;

            }

            // InternalKim.g:661:3: (otherlv_13= 'observing' ( (lv_dependencies_14_0= ruleDependency ) ) (otherlv_15= ',' ( (lv_dependencies_16_0= ruleDependency ) ) )* )?
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( (LA15_0==26) ) {
                alt15=1;
            }
            switch (alt15) {
                case 1 :
                    // InternalKim.g:662:4: otherlv_13= 'observing' ( (lv_dependencies_14_0= ruleDependency ) ) (otherlv_15= ',' ( (lv_dependencies_16_0= ruleDependency ) ) )*
                    {
                    otherlv_13=(Token)match(input,26,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getModelBodyStatementAccess().getObservingKeyword_3_0());
                      			
                    }
                    // InternalKim.g:666:4: ( (lv_dependencies_14_0= ruleDependency ) )
                    // InternalKim.g:667:5: (lv_dependencies_14_0= ruleDependency )
                    {
                    // InternalKim.g:667:5: (lv_dependencies_14_0= ruleDependency )
                    // InternalKim.g:668:6: lv_dependencies_14_0= ruleDependency
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getModelBodyStatementAccess().getDependenciesDependencyParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_12);
                    lv_dependencies_14_0=ruleDependency();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                      						}
                      						add(
                      							current,
                      							"dependencies",
                      							lv_dependencies_14_0,
                      							"org.integratedmodelling.kim.Kim.Dependency");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:685:4: (otherlv_15= ',' ( (lv_dependencies_16_0= ruleDependency ) ) )*
                    loop14:
                    do {
                        int alt14=2;
                        int LA14_0 = input.LA(1);

                        if ( (LA14_0==22) ) {
                            alt14=1;
                        }


                        switch (alt14) {
                    	case 1 :
                    	    // InternalKim.g:686:5: otherlv_15= ',' ( (lv_dependencies_16_0= ruleDependency ) )
                    	    {
                    	    otherlv_15=(Token)match(input,22,FOLLOW_6); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_15, grammarAccess.getModelBodyStatementAccess().getCommaKeyword_3_2_0());
                    	      				
                    	    }
                    	    // InternalKim.g:690:5: ( (lv_dependencies_16_0= ruleDependency ) )
                    	    // InternalKim.g:691:6: (lv_dependencies_16_0= ruleDependency )
                    	    {
                    	    // InternalKim.g:691:6: (lv_dependencies_16_0= ruleDependency )
                    	    // InternalKim.g:692:7: lv_dependencies_16_0= ruleDependency
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getDependenciesDependencyParserRuleCall_3_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_12);
                    	    lv_dependencies_16_0=ruleDependency();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"dependencies",
                    	      								lv_dependencies_16_0,
                    	      								"org.integratedmodelling.kim.Kim.Dependency");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop14;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalKim.g:711:3: (otherlv_17= 'using' ( (lv_contextualizers_18_0= ruleValueExecution ) ) (otherlv_19= ',' ( (lv_contextualizers_20_0= ruleValueExecution ) ) )* )?
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( (LA17_0==27) ) {
                alt17=1;
            }
            switch (alt17) {
                case 1 :
                    // InternalKim.g:712:4: otherlv_17= 'using' ( (lv_contextualizers_18_0= ruleValueExecution ) ) (otherlv_19= ',' ( (lv_contextualizers_20_0= ruleValueExecution ) ) )*
                    {
                    otherlv_17=(Token)match(input,27,FOLLOW_13); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_17, grammarAccess.getModelBodyStatementAccess().getUsingKeyword_4_0());
                      			
                    }
                    // InternalKim.g:716:4: ( (lv_contextualizers_18_0= ruleValueExecution ) )
                    // InternalKim.g:717:5: (lv_contextualizers_18_0= ruleValueExecution )
                    {
                    // InternalKim.g:717:5: (lv_contextualizers_18_0= ruleValueExecution )
                    // InternalKim.g:718:6: lv_contextualizers_18_0= ruleValueExecution
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getModelBodyStatementAccess().getContextualizersValueExecutionParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_14);
                    lv_contextualizers_18_0=ruleValueExecution();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                      						}
                      						add(
                      							current,
                      							"contextualizers",
                      							lv_contextualizers_18_0,
                      							"org.integratedmodelling.kim.Kim.ValueExecution");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:735:4: (otherlv_19= ',' ( (lv_contextualizers_20_0= ruleValueExecution ) ) )*
                    loop16:
                    do {
                        int alt16=2;
                        int LA16_0 = input.LA(1);

                        if ( (LA16_0==22) ) {
                            alt16=1;
                        }


                        switch (alt16) {
                    	case 1 :
                    	    // InternalKim.g:736:5: otherlv_19= ',' ( (lv_contextualizers_20_0= ruleValueExecution ) )
                    	    {
                    	    otherlv_19=(Token)match(input,22,FOLLOW_13); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_19, grammarAccess.getModelBodyStatementAccess().getCommaKeyword_4_2_0());
                    	      				
                    	    }
                    	    // InternalKim.g:740:5: ( (lv_contextualizers_20_0= ruleValueExecution ) )
                    	    // InternalKim.g:741:6: (lv_contextualizers_20_0= ruleValueExecution )
                    	    {
                    	    // InternalKim.g:741:6: (lv_contextualizers_20_0= ruleValueExecution )
                    	    // InternalKim.g:742:7: lv_contextualizers_20_0= ruleValueExecution
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getContextualizersValueExecutionParserRuleCall_4_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_14);
                    	    lv_contextualizers_20_0=ruleValueExecution();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"contextualizers",
                    	      								lv_contextualizers_20_0,
                    	      								"org.integratedmodelling.kim.Kim.ValueExecution");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop16;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalKim.g:761:3: ( ( (otherlv_21= 'classified' | ( (lv_discretization_22_0= 'discretized' ) ) ) (otherlv_23= 'into' ( (lv_classification_24_0= ruleClassification ) ) ) ) | (otherlv_25= 'according' otherlv_26= 'to' ( (lv_classificationProperty_27_0= rulePropertyId ) ) ) )?
            int alt19=3;
            int LA19_0 = input.LA(1);

            if ( ((LA19_0>=28 && LA19_0<=29)) ) {
                alt19=1;
            }
            else if ( (LA19_0==31) ) {
                alt19=2;
            }
            switch (alt19) {
                case 1 :
                    // InternalKim.g:762:4: ( (otherlv_21= 'classified' | ( (lv_discretization_22_0= 'discretized' ) ) ) (otherlv_23= 'into' ( (lv_classification_24_0= ruleClassification ) ) ) )
                    {
                    // InternalKim.g:762:4: ( (otherlv_21= 'classified' | ( (lv_discretization_22_0= 'discretized' ) ) ) (otherlv_23= 'into' ( (lv_classification_24_0= ruleClassification ) ) ) )
                    // InternalKim.g:763:5: (otherlv_21= 'classified' | ( (lv_discretization_22_0= 'discretized' ) ) ) (otherlv_23= 'into' ( (lv_classification_24_0= ruleClassification ) ) )
                    {
                    // InternalKim.g:763:5: (otherlv_21= 'classified' | ( (lv_discretization_22_0= 'discretized' ) ) )
                    int alt18=2;
                    int LA18_0 = input.LA(1);

                    if ( (LA18_0==28) ) {
                        alt18=1;
                    }
                    else if ( (LA18_0==29) ) {
                        alt18=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 18, 0, input);

                        throw nvae;
                    }
                    switch (alt18) {
                        case 1 :
                            // InternalKim.g:764:6: otherlv_21= 'classified'
                            {
                            otherlv_21=(Token)match(input,28,FOLLOW_15); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_21, grammarAccess.getModelBodyStatementAccess().getClassifiedKeyword_5_0_0_0());
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:769:6: ( (lv_discretization_22_0= 'discretized' ) )
                            {
                            // InternalKim.g:769:6: ( (lv_discretization_22_0= 'discretized' ) )
                            // InternalKim.g:770:7: (lv_discretization_22_0= 'discretized' )
                            {
                            // InternalKim.g:770:7: (lv_discretization_22_0= 'discretized' )
                            // InternalKim.g:771:8: lv_discretization_22_0= 'discretized'
                            {
                            lv_discretization_22_0=(Token)match(input,29,FOLLOW_15); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_discretization_22_0, grammarAccess.getModelBodyStatementAccess().getDiscretizationDiscretizedKeyword_5_0_0_1_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getModelBodyStatementRule());
                              								}
                              								setWithLastConsumed(current, "discretization", true, "discretized");
                              							
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:784:5: (otherlv_23= 'into' ( (lv_classification_24_0= ruleClassification ) ) )
                    // InternalKim.g:785:6: otherlv_23= 'into' ( (lv_classification_24_0= ruleClassification ) )
                    {
                    otherlv_23=(Token)match(input,30,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_23, grammarAccess.getModelBodyStatementAccess().getIntoKeyword_5_0_1_0());
                      					
                    }
                    // InternalKim.g:789:6: ( (lv_classification_24_0= ruleClassification ) )
                    // InternalKim.g:790:7: (lv_classification_24_0= ruleClassification )
                    {
                    // InternalKim.g:790:7: (lv_classification_24_0= ruleClassification )
                    // InternalKim.g:791:8: lv_classification_24_0= ruleClassification
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getModelBodyStatementAccess().getClassificationClassificationParserRuleCall_5_0_1_1_0());
                      							
                    }
                    pushFollow(FOLLOW_17);
                    lv_classification_24_0=ruleClassification();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                      								}
                      								set(
                      									current,
                      									"classification",
                      									lv_classification_24_0,
                      									"org.integratedmodelling.kim.Kim.Classification");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:811:4: (otherlv_25= 'according' otherlv_26= 'to' ( (lv_classificationProperty_27_0= rulePropertyId ) ) )
                    {
                    // InternalKim.g:811:4: (otherlv_25= 'according' otherlv_26= 'to' ( (lv_classificationProperty_27_0= rulePropertyId ) ) )
                    // InternalKim.g:812:5: otherlv_25= 'according' otherlv_26= 'to' ( (lv_classificationProperty_27_0= rulePropertyId ) )
                    {
                    otherlv_25=(Token)match(input,31,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_25, grammarAccess.getModelBodyStatementAccess().getAccordingKeyword_5_1_0());
                      				
                    }
                    otherlv_26=(Token)match(input,32,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_26, grammarAccess.getModelBodyStatementAccess().getToKeyword_5_1_1());
                      				
                    }
                    // InternalKim.g:820:5: ( (lv_classificationProperty_27_0= rulePropertyId ) )
                    // InternalKim.g:821:6: (lv_classificationProperty_27_0= rulePropertyId )
                    {
                    // InternalKim.g:821:6: (lv_classificationProperty_27_0= rulePropertyId )
                    // InternalKim.g:822:7: lv_classificationProperty_27_0= rulePropertyId
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getClassificationPropertyPropertyIdParserRuleCall_5_1_2_0());
                      						
                    }
                    pushFollow(FOLLOW_17);
                    lv_classificationProperty_27_0=rulePropertyId();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                      							}
                      							set(
                      								current,
                      								"classificationProperty",
                      								lv_classificationProperty_27_0,
                      								"org.integratedmodelling.kim.Kim.PropertyId");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            // InternalKim.g:841:3: (otherlv_28= 'lookup' (otherlv_29= '(' ( ( (lv_lookupTableArgs_30_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_30_2= '?' | lv_lookupTableArgs_30_3= '*' ) ) ) (otherlv_31= ',' ( ( (lv_lookupTableArgs_32_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_32_2= '?' | lv_lookupTableArgs_32_3= '*' ) ) ) )* otherlv_33= ')' )? otherlv_34= 'into' ( ( (lv_lookupTable_35_0= ruleTable ) ) | ( (lv_lookupTableId_36_0= RULE_LOWERCASE_ID ) ) ) )?
            int alt25=2;
            int LA25_0 = input.LA(1);

            if ( (LA25_0==33) ) {
                alt25=1;
            }
            switch (alt25) {
                case 1 :
                    // InternalKim.g:842:4: otherlv_28= 'lookup' (otherlv_29= '(' ( ( (lv_lookupTableArgs_30_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_30_2= '?' | lv_lookupTableArgs_30_3= '*' ) ) ) (otherlv_31= ',' ( ( (lv_lookupTableArgs_32_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_32_2= '?' | lv_lookupTableArgs_32_3= '*' ) ) ) )* otherlv_33= ')' )? otherlv_34= 'into' ( ( (lv_lookupTable_35_0= ruleTable ) ) | ( (lv_lookupTableId_36_0= RULE_LOWERCASE_ID ) ) )
                    {
                    otherlv_28=(Token)match(input,33,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_28, grammarAccess.getModelBodyStatementAccess().getLookupKeyword_6_0());
                      			
                    }
                    // InternalKim.g:846:4: (otherlv_29= '(' ( ( (lv_lookupTableArgs_30_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_30_2= '?' | lv_lookupTableArgs_30_3= '*' ) ) ) (otherlv_31= ',' ( ( (lv_lookupTableArgs_32_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_32_2= '?' | lv_lookupTableArgs_32_3= '*' ) ) ) )* otherlv_33= ')' )?
                    int alt23=2;
                    int LA23_0 = input.LA(1);

                    if ( (LA23_0==34) ) {
                        alt23=1;
                    }
                    switch (alt23) {
                        case 1 :
                            // InternalKim.g:847:5: otherlv_29= '(' ( ( (lv_lookupTableArgs_30_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_30_2= '?' | lv_lookupTableArgs_30_3= '*' ) ) ) (otherlv_31= ',' ( ( (lv_lookupTableArgs_32_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_32_2= '?' | lv_lookupTableArgs_32_3= '*' ) ) ) )* otherlv_33= ')'
                            {
                            otherlv_29=(Token)match(input,34,FOLLOW_21); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_29, grammarAccess.getModelBodyStatementAccess().getLeftParenthesisKeyword_6_1_0());
                              				
                            }
                            // InternalKim.g:851:5: ( ( (lv_lookupTableArgs_30_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_30_2= '?' | lv_lookupTableArgs_30_3= '*' ) ) )
                            // InternalKim.g:852:6: ( (lv_lookupTableArgs_30_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_30_2= '?' | lv_lookupTableArgs_30_3= '*' ) )
                            {
                            // InternalKim.g:852:6: ( (lv_lookupTableArgs_30_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_30_2= '?' | lv_lookupTableArgs_30_3= '*' ) )
                            // InternalKim.g:853:7: (lv_lookupTableArgs_30_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_30_2= '?' | lv_lookupTableArgs_30_3= '*' )
                            {
                            // InternalKim.g:853:7: (lv_lookupTableArgs_30_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_30_2= '?' | lv_lookupTableArgs_30_3= '*' )
                            int alt20=3;
                            switch ( input.LA(1) ) {
                            case RULE_LOWERCASE_ID:
                                {
                                alt20=1;
                                }
                                break;
                            case 35:
                                {
                                alt20=2;
                                }
                                break;
                            case 36:
                                {
                                alt20=3;
                                }
                                break;
                            default:
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 20, 0, input);

                                throw nvae;
                            }

                            switch (alt20) {
                                case 1 :
                                    // InternalKim.g:854:8: lv_lookupTableArgs_30_1= RULE_LOWERCASE_ID
                                    {
                                    lv_lookupTableArgs_30_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_22); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_lookupTableArgs_30_1, grammarAccess.getModelBodyStatementAccess().getLookupTableArgsLOWERCASE_IDTerminalRuleCall_6_1_1_0_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getModelBodyStatementRule());
                                      								}
                                      								addWithLastConsumed(
                                      									current,
                                      									"lookupTableArgs",
                                      									lv_lookupTableArgs_30_1,
                                      									"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                                      							
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:869:8: lv_lookupTableArgs_30_2= '?'
                                    {
                                    lv_lookupTableArgs_30_2=(Token)match(input,35,FOLLOW_22); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_lookupTableArgs_30_2, grammarAccess.getModelBodyStatementAccess().getLookupTableArgsQuestionMarkKeyword_6_1_1_0_1());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getModelBodyStatementRule());
                                      								}
                                      								addWithLastConsumed(current, "lookupTableArgs", lv_lookupTableArgs_30_2, null);
                                      							
                                    }

                                    }
                                    break;
                                case 3 :
                                    // InternalKim.g:880:8: lv_lookupTableArgs_30_3= '*'
                                    {
                                    lv_lookupTableArgs_30_3=(Token)match(input,36,FOLLOW_22); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_lookupTableArgs_30_3, grammarAccess.getModelBodyStatementAccess().getLookupTableArgsAsteriskKeyword_6_1_1_0_2());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getModelBodyStatementRule());
                                      								}
                                      								addWithLastConsumed(current, "lookupTableArgs", lv_lookupTableArgs_30_3, null);
                                      							
                                    }

                                    }
                                    break;

                            }


                            }


                            }

                            // InternalKim.g:893:5: (otherlv_31= ',' ( ( (lv_lookupTableArgs_32_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_32_2= '?' | lv_lookupTableArgs_32_3= '*' ) ) ) )*
                            loop22:
                            do {
                                int alt22=2;
                                int LA22_0 = input.LA(1);

                                if ( (LA22_0==22) ) {
                                    alt22=1;
                                }


                                switch (alt22) {
                            	case 1 :
                            	    // InternalKim.g:894:6: otherlv_31= ',' ( ( (lv_lookupTableArgs_32_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_32_2= '?' | lv_lookupTableArgs_32_3= '*' ) ) )
                            	    {
                            	    otherlv_31=(Token)match(input,22,FOLLOW_21); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      						newLeafNode(otherlv_31, grammarAccess.getModelBodyStatementAccess().getCommaKeyword_6_1_2_0());
                            	      					
                            	    }
                            	    // InternalKim.g:898:6: ( ( (lv_lookupTableArgs_32_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_32_2= '?' | lv_lookupTableArgs_32_3= '*' ) ) )
                            	    // InternalKim.g:899:7: ( (lv_lookupTableArgs_32_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_32_2= '?' | lv_lookupTableArgs_32_3= '*' ) )
                            	    {
                            	    // InternalKim.g:899:7: ( (lv_lookupTableArgs_32_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_32_2= '?' | lv_lookupTableArgs_32_3= '*' ) )
                            	    // InternalKim.g:900:8: (lv_lookupTableArgs_32_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_32_2= '?' | lv_lookupTableArgs_32_3= '*' )
                            	    {
                            	    // InternalKim.g:900:8: (lv_lookupTableArgs_32_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_32_2= '?' | lv_lookupTableArgs_32_3= '*' )
                            	    int alt21=3;
                            	    switch ( input.LA(1) ) {
                            	    case RULE_LOWERCASE_ID:
                            	        {
                            	        alt21=1;
                            	        }
                            	        break;
                            	    case 35:
                            	        {
                            	        alt21=2;
                            	        }
                            	        break;
                            	    case 36:
                            	        {
                            	        alt21=3;
                            	        }
                            	        break;
                            	    default:
                            	        if (state.backtracking>0) {state.failed=true; return current;}
                            	        NoViableAltException nvae =
                            	            new NoViableAltException("", 21, 0, input);

                            	        throw nvae;
                            	    }

                            	    switch (alt21) {
                            	        case 1 :
                            	            // InternalKim.g:901:9: lv_lookupTableArgs_32_1= RULE_LOWERCASE_ID
                            	            {
                            	            lv_lookupTableArgs_32_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_22); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              									newLeafNode(lv_lookupTableArgs_32_1, grammarAccess.getModelBodyStatementAccess().getLookupTableArgsLOWERCASE_IDTerminalRuleCall_6_1_2_1_0_0());
                            	              								
                            	            }
                            	            if ( state.backtracking==0 ) {

                            	              									if (current==null) {
                            	              										current = createModelElement(grammarAccess.getModelBodyStatementRule());
                            	              									}
                            	              									addWithLastConsumed(
                            	              										current,
                            	              										"lookupTableArgs",
                            	              										lv_lookupTableArgs_32_1,
                            	              										"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                            	              								
                            	            }

                            	            }
                            	            break;
                            	        case 2 :
                            	            // InternalKim.g:916:9: lv_lookupTableArgs_32_2= '?'
                            	            {
                            	            lv_lookupTableArgs_32_2=(Token)match(input,35,FOLLOW_22); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              									newLeafNode(lv_lookupTableArgs_32_2, grammarAccess.getModelBodyStatementAccess().getLookupTableArgsQuestionMarkKeyword_6_1_2_1_0_1());
                            	              								
                            	            }
                            	            if ( state.backtracking==0 ) {

                            	              									if (current==null) {
                            	              										current = createModelElement(grammarAccess.getModelBodyStatementRule());
                            	              									}
                            	              									addWithLastConsumed(current, "lookupTableArgs", lv_lookupTableArgs_32_2, null);
                            	              								
                            	            }

                            	            }
                            	            break;
                            	        case 3 :
                            	            // InternalKim.g:927:9: lv_lookupTableArgs_32_3= '*'
                            	            {
                            	            lv_lookupTableArgs_32_3=(Token)match(input,36,FOLLOW_22); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              									newLeafNode(lv_lookupTableArgs_32_3, grammarAccess.getModelBodyStatementAccess().getLookupTableArgsAsteriskKeyword_6_1_2_1_0_2());
                            	              								
                            	            }
                            	            if ( state.backtracking==0 ) {

                            	              									if (current==null) {
                            	              										current = createModelElement(grammarAccess.getModelBodyStatementRule());
                            	              									}
                            	              									addWithLastConsumed(current, "lookupTableArgs", lv_lookupTableArgs_32_3, null);
                            	              								
                            	            }

                            	            }
                            	            break;

                            	    }


                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop22;
                                }
                            } while (true);

                            otherlv_33=(Token)match(input,37,FOLLOW_15); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_33, grammarAccess.getModelBodyStatementAccess().getRightParenthesisKeyword_6_1_3());
                              				
                            }

                            }
                            break;

                    }

                    otherlv_34=(Token)match(input,30,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_34, grammarAccess.getModelBodyStatementAccess().getIntoKeyword_6_2());
                      			
                    }
                    // InternalKim.g:950:4: ( ( (lv_lookupTable_35_0= ruleTable ) ) | ( (lv_lookupTableId_36_0= RULE_LOWERCASE_ID ) ) )
                    int alt24=2;
                    int LA24_0 = input.LA(1);

                    if ( ((LA24_0>=RULE_STRING && LA24_0<=RULE_EXPR)||LA24_0==RULE_CAMELCASE_ID||LA24_0==RULE_INT||(LA24_0>=23 && LA24_0<=24)||LA24_0==34||LA24_0==36||(LA24_0>=46 && LA24_0<=47)||LA24_0==51||(LA24_0>=108 && LA24_0<=109)||(LA24_0>=116 && LA24_0<=117)||(LA24_0>=119 && LA24_0<=130)||LA24_0==187||(LA24_0>=220 && LA24_0<=224)||(LA24_0>=226 && LA24_0<=227)) ) {
                        alt24=1;
                    }
                    else if ( (LA24_0==RULE_LOWERCASE_ID) ) {
                        int LA24_2 = input.LA(2);

                        if ( (LA24_2==EOF||LA24_2==18||LA24_2==38||(LA24_2>=52 && LA24_2<=54)) ) {
                            alt24=2;
                        }
                        else if ( (LA24_2==88||LA24_2==90) ) {
                            alt24=1;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 24, 2, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 24, 0, input);

                        throw nvae;
                    }
                    switch (alt24) {
                        case 1 :
                            // InternalKim.g:951:5: ( (lv_lookupTable_35_0= ruleTable ) )
                            {
                            // InternalKim.g:951:5: ( (lv_lookupTable_35_0= ruleTable ) )
                            // InternalKim.g:952:6: (lv_lookupTable_35_0= ruleTable )
                            {
                            // InternalKim.g:952:6: (lv_lookupTable_35_0= ruleTable )
                            // InternalKim.g:953:7: lv_lookupTable_35_0= ruleTable
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getLookupTableTableParserRuleCall_6_3_0_0());
                              						
                            }
                            pushFollow(FOLLOW_24);
                            lv_lookupTable_35_0=ruleTable();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                              							}
                              							set(
                              								current,
                              								"lookupTable",
                              								lv_lookupTable_35_0,
                              								"org.integratedmodelling.kim.Kim.Table");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:971:5: ( (lv_lookupTableId_36_0= RULE_LOWERCASE_ID ) )
                            {
                            // InternalKim.g:971:5: ( (lv_lookupTableId_36_0= RULE_LOWERCASE_ID ) )
                            // InternalKim.g:972:6: (lv_lookupTableId_36_0= RULE_LOWERCASE_ID )
                            {
                            // InternalKim.g:972:6: (lv_lookupTableId_36_0= RULE_LOWERCASE_ID )
                            // InternalKim.g:973:7: lv_lookupTableId_36_0= RULE_LOWERCASE_ID
                            {
                            lv_lookupTableId_36_0=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_24); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_lookupTableId_36_0, grammarAccess.getModelBodyStatementAccess().getLookupTableIdLOWERCASE_IDTerminalRuleCall_6_3_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getModelBodyStatementRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"lookupTableId",
                              								lv_lookupTableId_36_0,
                              								"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // InternalKim.g:991:3: ( (lv_actions_37_0= ruleActionSpecification ) )*
            loop26:
            do {
                int alt26=2;
                int LA26_0 = input.LA(1);

                if ( ((LA26_0>=52 && LA26_0<=54)) ) {
                    alt26=1;
                }


                switch (alt26) {
            	case 1 :
            	    // InternalKim.g:992:4: (lv_actions_37_0= ruleActionSpecification )
            	    {
            	    // InternalKim.g:992:4: (lv_actions_37_0= ruleActionSpecification )
            	    // InternalKim.g:993:5: lv_actions_37_0= ruleActionSpecification
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getModelBodyStatementAccess().getActionsActionSpecificationParserRuleCall_7_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_24);
            	    lv_actions_37_0=ruleActionSpecification();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
            	      					}
            	      					add(
            	      						current,
            	      						"actions",
            	      						lv_actions_37_0,
            	      						"org.integratedmodelling.kim.Kim.ActionSpecification");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop26;
                }
            } while (true);

            // InternalKim.g:1010:3: (otherlv_38= 'with' otherlv_39= 'metadata' ( (lv_metadata_40_0= ruleMetadata ) ) )?
            int alt27=2;
            int LA27_0 = input.LA(1);

            if ( (LA27_0==38) ) {
                int LA27_1 = input.LA(2);

                if ( (LA27_1==39) ) {
                    alt27=1;
                }
            }
            switch (alt27) {
                case 1 :
                    // InternalKim.g:1011:4: otherlv_38= 'with' otherlv_39= 'metadata' ( (lv_metadata_40_0= ruleMetadata ) )
                    {
                    otherlv_38=(Token)match(input,38,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_38, grammarAccess.getModelBodyStatementAccess().getWithKeyword_8_0());
                      			
                    }
                    otherlv_39=(Token)match(input,39,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_39, grammarAccess.getModelBodyStatementAccess().getMetadataKeyword_8_1());
                      			
                    }
                    // InternalKim.g:1019:4: ( (lv_metadata_40_0= ruleMetadata ) )
                    // InternalKim.g:1020:5: (lv_metadata_40_0= ruleMetadata )
                    {
                    // InternalKim.g:1020:5: (lv_metadata_40_0= ruleMetadata )
                    // InternalKim.g:1021:6: lv_metadata_40_0= ruleMetadata
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getModelBodyStatementAccess().getMetadataMetadataParserRuleCall_8_2_0());
                      					
                    }
                    pushFollow(FOLLOW_27);
                    lv_metadata_40_0=ruleMetadata();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                      						}
                      						set(
                      							current,
                      							"metadata",
                      							lv_metadata_40_0,
                      							"org.integratedmodelling.kim.Kim.Metadata");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalKim.g:1039:3: (otherlv_41= 'with' otherlv_42= 'documentation' ( (lv_documentation_43_0= ruleDocumentation ) ) )?
            int alt28=2;
            int LA28_0 = input.LA(1);

            if ( (LA28_0==38) ) {
                alt28=1;
            }
            switch (alt28) {
                case 1 :
                    // InternalKim.g:1040:4: otherlv_41= 'with' otherlv_42= 'documentation' ( (lv_documentation_43_0= ruleDocumentation ) )
                    {
                    otherlv_41=(Token)match(input,38,FOLLOW_28); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_41, grammarAccess.getModelBodyStatementAccess().getWithKeyword_9_0());
                      			
                    }
                    otherlv_42=(Token)match(input,40,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_42, grammarAccess.getModelBodyStatementAccess().getDocumentationKeyword_9_1());
                      			
                    }
                    // InternalKim.g:1048:4: ( (lv_documentation_43_0= ruleDocumentation ) )
                    // InternalKim.g:1049:5: (lv_documentation_43_0= ruleDocumentation )
                    {
                    // InternalKim.g:1049:5: (lv_documentation_43_0= ruleDocumentation )
                    // InternalKim.g:1050:6: lv_documentation_43_0= ruleDocumentation
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getModelBodyStatementAccess().getDocumentationDocumentationParserRuleCall_9_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_documentation_43_0=ruleDocumentation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                      						}
                      						set(
                      							current,
                      							"documentation",
                      							lv_documentation_43_0,
                      							"org.integratedmodelling.kim.Kim.Documentation");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleModelBodyStatement"


    // $ANTLR start "entryRuleClassification"
    // InternalKim.g:1072:1: entryRuleClassification returns [EObject current=null] : iv_ruleClassification= ruleClassification EOF ;
    public final EObject entryRuleClassification() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleClassification = null;


        try {
            // InternalKim.g:1072:55: (iv_ruleClassification= ruleClassification EOF )
            // InternalKim.g:1073:2: iv_ruleClassification= ruleClassification EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getClassificationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleClassification=ruleClassification();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleClassification; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleClassification"


    // $ANTLR start "ruleClassification"
    // InternalKim.g:1079:1: ruleClassification returns [EObject current=null] : ( ( (lv_classifiers_0_0= ruleClassifier ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_classifiers_2_0= ruleClassifier ) ) )* ) ;
    public final EObject ruleClassification() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_classifiers_0_0 = null;

        EObject lv_classifiers_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:1085:2: ( ( ( (lv_classifiers_0_0= ruleClassifier ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_classifiers_2_0= ruleClassifier ) ) )* ) )
            // InternalKim.g:1086:2: ( ( (lv_classifiers_0_0= ruleClassifier ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_classifiers_2_0= ruleClassifier ) ) )* )
            {
            // InternalKim.g:1086:2: ( ( (lv_classifiers_0_0= ruleClassifier ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_classifiers_2_0= ruleClassifier ) ) )* )
            // InternalKim.g:1087:3: ( (lv_classifiers_0_0= ruleClassifier ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_classifiers_2_0= ruleClassifier ) ) )*
            {
            // InternalKim.g:1087:3: ( (lv_classifiers_0_0= ruleClassifier ) )
            // InternalKim.g:1088:4: (lv_classifiers_0_0= ruleClassifier )
            {
            // InternalKim.g:1088:4: (lv_classifiers_0_0= ruleClassifier )
            // InternalKim.g:1089:5: lv_classifiers_0_0= ruleClassifier
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getClassificationAccess().getClassifiersClassifierParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_29);
            lv_classifiers_0_0=ruleClassifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getClassificationRule());
              					}
              					add(
              						current,
              						"classifiers",
              						lv_classifiers_0_0,
              						"org.integratedmodelling.kim.Kim.Classifier");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:1106:3: ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_classifiers_2_0= ruleClassifier ) ) )*
            loop29:
            do {
                int alt29=2;
                int LA29_0 = input.LA(1);

                if ( (LA29_0==22) ) {
                    alt29=1;
                }


                switch (alt29) {
            	case 1 :
            	    // InternalKim.g:1107:4: ( ( ',' )=>otherlv_1= ',' ) ( (lv_classifiers_2_0= ruleClassifier ) )
            	    {
            	    // InternalKim.g:1107:4: ( ( ',' )=>otherlv_1= ',' )
            	    // InternalKim.g:1108:5: ( ',' )=>otherlv_1= ','
            	    {
            	    otherlv_1=(Token)match(input,22,FOLLOW_16); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					newLeafNode(otherlv_1, grammarAccess.getClassificationAccess().getCommaKeyword_1_0());
            	      				
            	    }

            	    }

            	    // InternalKim.g:1114:4: ( (lv_classifiers_2_0= ruleClassifier ) )
            	    // InternalKim.g:1115:5: (lv_classifiers_2_0= ruleClassifier )
            	    {
            	    // InternalKim.g:1115:5: (lv_classifiers_2_0= ruleClassifier )
            	    // InternalKim.g:1116:6: lv_classifiers_2_0= ruleClassifier
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getClassificationAccess().getClassifiersClassifierParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_29);
            	    lv_classifiers_2_0=ruleClassifier();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getClassificationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"classifiers",
            	      							lv_classifiers_2_0,
            	      							"org.integratedmodelling.kim.Kim.Classifier");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop29;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassification"


    // $ANTLR start "entryRuleClassifier"
    // InternalKim.g:1138:1: entryRuleClassifier returns [EObject current=null] : iv_ruleClassifier= ruleClassifier EOF ;
    public final EObject entryRuleClassifier() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleClassifier = null;


        try {
            // InternalKim.g:1138:51: (iv_ruleClassifier= ruleClassifier EOF )
            // InternalKim.g:1139:2: iv_ruleClassifier= ruleClassifier EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getClassifierRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleClassifier=ruleClassifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleClassifier; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleClassifier"


    // $ANTLR start "ruleClassifier"
    // InternalKim.g:1145:1: ruleClassifier returns [EObject current=null] : ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) ( ( (lv_otherwise_1_0= 'otherwise' ) ) | ( (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) ) ( (lv_classifier_4_0= ruleClassifierRHS ) ) ) )? ) ;
    public final EObject ruleClassifier() throws RecognitionException {
        EObject current = null;

        Token lv_otherwise_1_0=null;
        Token otherlv_2=null;
        Token lv_negated_3_0=null;
        EObject lv_declaration_0_0 = null;

        EObject lv_classifier_4_0 = null;



        	enterRule();

        try {
            // InternalKim.g:1151:2: ( ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) ( ( (lv_otherwise_1_0= 'otherwise' ) ) | ( (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) ) ( (lv_classifier_4_0= ruleClassifierRHS ) ) ) )? ) )
            // InternalKim.g:1152:2: ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) ( ( (lv_otherwise_1_0= 'otherwise' ) ) | ( (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) ) ( (lv_classifier_4_0= ruleClassifierRHS ) ) ) )? )
            {
            // InternalKim.g:1152:2: ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) ( ( (lv_otherwise_1_0= 'otherwise' ) ) | ( (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) ) ( (lv_classifier_4_0= ruleClassifierRHS ) ) ) )? )
            // InternalKim.g:1153:3: ( (lv_declaration_0_0= ruleConceptDeclaration ) ) ( ( (lv_otherwise_1_0= 'otherwise' ) ) | ( (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) ) ( (lv_classifier_4_0= ruleClassifierRHS ) ) ) )?
            {
            // InternalKim.g:1153:3: ( (lv_declaration_0_0= ruleConceptDeclaration ) )
            // InternalKim.g:1154:4: (lv_declaration_0_0= ruleConceptDeclaration )
            {
            // InternalKim.g:1154:4: (lv_declaration_0_0= ruleConceptDeclaration )
            // InternalKim.g:1155:5: lv_declaration_0_0= ruleConceptDeclaration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getClassifierAccess().getDeclarationConceptDeclarationParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_30);
            lv_declaration_0_0=ruleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getClassifierRule());
              					}
              					set(
              						current,
              						"declaration",
              						lv_declaration_0_0,
              						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:1172:3: ( ( (lv_otherwise_1_0= 'otherwise' ) ) | ( (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) ) ( (lv_classifier_4_0= ruleClassifierRHS ) ) ) )?
            int alt31=3;
            int LA31_0 = input.LA(1);

            if ( (LA31_0==41) ) {
                alt31=1;
            }
            else if ( ((LA31_0>=42 && LA31_0<=43)) ) {
                alt31=2;
            }
            switch (alt31) {
                case 1 :
                    // InternalKim.g:1173:4: ( (lv_otherwise_1_0= 'otherwise' ) )
                    {
                    // InternalKim.g:1173:4: ( (lv_otherwise_1_0= 'otherwise' ) )
                    // InternalKim.g:1174:5: (lv_otherwise_1_0= 'otherwise' )
                    {
                    // InternalKim.g:1174:5: (lv_otherwise_1_0= 'otherwise' )
                    // InternalKim.g:1175:6: lv_otherwise_1_0= 'otherwise'
                    {
                    lv_otherwise_1_0=(Token)match(input,41,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_otherwise_1_0, grammarAccess.getClassifierAccess().getOtherwiseOtherwiseKeyword_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getClassifierRule());
                      						}
                      						setWithLastConsumed(current, "otherwise", true, "otherwise");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:1188:4: ( (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) ) ( (lv_classifier_4_0= ruleClassifierRHS ) ) )
                    {
                    // InternalKim.g:1188:4: ( (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) ) ( (lv_classifier_4_0= ruleClassifierRHS ) ) )
                    // InternalKim.g:1189:5: (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) ) ( (lv_classifier_4_0= ruleClassifierRHS ) )
                    {
                    // InternalKim.g:1189:5: (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) )
                    int alt30=2;
                    int LA30_0 = input.LA(1);

                    if ( (LA30_0==42) ) {
                        alt30=1;
                    }
                    else if ( (LA30_0==43) ) {
                        alt30=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 30, 0, input);

                        throw nvae;
                    }
                    switch (alt30) {
                        case 1 :
                            // InternalKim.g:1190:6: otherlv_2= 'if'
                            {
                            otherlv_2=(Token)match(input,42,FOLLOW_31); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_2, grammarAccess.getClassifierAccess().getIfKeyword_1_1_0_0());
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:1195:6: ( (lv_negated_3_0= 'unless' ) )
                            {
                            // InternalKim.g:1195:6: ( (lv_negated_3_0= 'unless' ) )
                            // InternalKim.g:1196:7: (lv_negated_3_0= 'unless' )
                            {
                            // InternalKim.g:1196:7: (lv_negated_3_0= 'unless' )
                            // InternalKim.g:1197:8: lv_negated_3_0= 'unless'
                            {
                            lv_negated_3_0=(Token)match(input,43,FOLLOW_31); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_negated_3_0, grammarAccess.getClassifierAccess().getNegatedUnlessKeyword_1_1_0_1_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getClassifierRule());
                              								}
                              								setWithLastConsumed(current, "negated", true, "unless");
                              							
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:1210:5: ( (lv_classifier_4_0= ruleClassifierRHS ) )
                    // InternalKim.g:1211:6: (lv_classifier_4_0= ruleClassifierRHS )
                    {
                    // InternalKim.g:1211:6: (lv_classifier_4_0= ruleClassifierRHS )
                    // InternalKim.g:1212:7: lv_classifier_4_0= ruleClassifierRHS
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getClassifierAccess().getClassifierClassifierRHSParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    lv_classifier_4_0=ruleClassifierRHS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getClassifierRule());
                      							}
                      							set(
                      								current,
                      								"classifier",
                      								lv_classifier_4_0,
                      								"org.integratedmodelling.kim.Kim.ClassifierRHS");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassifier"


    // $ANTLR start "entryRuleClassifierRHS"
    // InternalKim.g:1235:1: entryRuleClassifierRHS returns [EObject current=null] : iv_ruleClassifierRHS= ruleClassifierRHS EOF ;
    public final EObject entryRuleClassifierRHS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleClassifierRHS = null;


        try {
            // InternalKim.g:1235:54: (iv_ruleClassifierRHS= ruleClassifierRHS EOF )
            // InternalKim.g:1236:2: iv_ruleClassifierRHS= ruleClassifierRHS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getClassifierRHSRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleClassifierRHS=ruleClassifierRHS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleClassifierRHS; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleClassifierRHS"


    // $ANTLR start "ruleClassifierRHS"
    // InternalKim.g:1242:1: ruleClassifierRHS returns [EObject current=null] : ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' ) | ( ( (lv_op_19_0= ruleREL_OPERATOR ) ) ( (lv_expression_20_0= ruleNumber ) ) ) | ( (lv_nodata_21_0= 'unknown' ) ) | ( (lv_star_22_0= '*' ) ) ) ;
    public final EObject ruleClassifierRHS() throws RecognitionException {
        EObject current = null;

        Token lv_boolean_0_0=null;
        Token lv_boolean_1_0=null;
        Token lv_leftLimit_3_0=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token lv_rightLimit_7_0=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token lv_string_12_0=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token lv_nodata_21_0=null;
        Token lv_star_22_0=null;
        EObject lv_int0_2_0 = null;

        EObject lv_int1_6_0 = null;

        EObject lv_num_9_0 = null;

        EObject lv_set_11_0 = null;

        EObject lv_concept_13_0 = null;

        EObject lv_toResolve_15_0 = null;

        EObject lv_toResolve_17_0 = null;

        EObject lv_op_19_0 = null;

        EObject lv_expression_20_0 = null;



        	enterRule();

        try {
            // InternalKim.g:1248:2: ( ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' ) | ( ( (lv_op_19_0= ruleREL_OPERATOR ) ) ( (lv_expression_20_0= ruleNumber ) ) ) | ( (lv_nodata_21_0= 'unknown' ) ) | ( (lv_star_22_0= '*' ) ) ) )
            // InternalKim.g:1249:2: ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' ) | ( ( (lv_op_19_0= ruleREL_OPERATOR ) ) ( (lv_expression_20_0= ruleNumber ) ) ) | ( (lv_nodata_21_0= 'unknown' ) ) | ( (lv_star_22_0= '*' ) ) )
            {
            // InternalKim.g:1249:2: ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' ) | ( ( (lv_op_19_0= ruleREL_OPERATOR ) ) ( (lv_expression_20_0= ruleNumber ) ) ) | ( (lv_nodata_21_0= 'unknown' ) ) | ( (lv_star_22_0= '*' ) ) )
            int alt36=10;
            alt36 = dfa36.predict(input);
            switch (alt36) {
                case 1 :
                    // InternalKim.g:1250:3: ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) )
                    {
                    // InternalKim.g:1250:3: ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) )
                    int alt32=2;
                    int LA32_0 = input.LA(1);

                    if ( (LA32_0==23) ) {
                        alt32=1;
                    }
                    else if ( (LA32_0==24) ) {
                        alt32=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 32, 0, input);

                        throw nvae;
                    }
                    switch (alt32) {
                        case 1 :
                            // InternalKim.g:1251:4: ( (lv_boolean_0_0= 'true' ) )
                            {
                            // InternalKim.g:1251:4: ( (lv_boolean_0_0= 'true' ) )
                            // InternalKim.g:1252:5: (lv_boolean_0_0= 'true' )
                            {
                            // InternalKim.g:1252:5: (lv_boolean_0_0= 'true' )
                            // InternalKim.g:1253:6: lv_boolean_0_0= 'true'
                            {
                            lv_boolean_0_0=(Token)match(input,23,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_0_0, grammarAccess.getClassifierRHSAccess().getBooleanTrueKeyword_0_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getClassifierRHSRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_0_0, "true");
                              					
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:1266:4: ( (lv_boolean_1_0= 'false' ) )
                            {
                            // InternalKim.g:1266:4: ( (lv_boolean_1_0= 'false' ) )
                            // InternalKim.g:1267:5: (lv_boolean_1_0= 'false' )
                            {
                            // InternalKim.g:1267:5: (lv_boolean_1_0= 'false' )
                            // InternalKim.g:1268:6: lv_boolean_1_0= 'false'
                            {
                            lv_boolean_1_0=(Token)match(input,24,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_1_0, grammarAccess.getClassifierRHSAccess().getBooleanFalseKeyword_0_1_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getClassifierRHSRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_1_0, "false");
                              					
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:1282:3: ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? )
                    {
                    // InternalKim.g:1282:3: ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? )
                    // InternalKim.g:1283:4: ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )?
                    {
                    // InternalKim.g:1283:4: ( (lv_int0_2_0= ruleNumber ) )
                    // InternalKim.g:1284:5: (lv_int0_2_0= ruleNumber )
                    {
                    // InternalKim.g:1284:5: (lv_int0_2_0= ruleNumber )
                    // InternalKim.g:1285:6: lv_int0_2_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSAccess().getInt0NumberParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_32);
                    lv_int0_2_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
                      						}
                      						set(
                      							current,
                      							"int0",
                      							lv_int0_2_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:1302:4: ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )?
                    int alt33=3;
                    int LA33_0 = input.LA(1);

                    if ( (LA33_0==44) ) {
                        alt33=1;
                    }
                    else if ( (LA33_0==45) ) {
                        alt33=2;
                    }
                    switch (alt33) {
                        case 1 :
                            // InternalKim.g:1303:5: ( (lv_leftLimit_3_0= 'inclusive' ) )
                            {
                            // InternalKim.g:1303:5: ( (lv_leftLimit_3_0= 'inclusive' ) )
                            // InternalKim.g:1304:6: (lv_leftLimit_3_0= 'inclusive' )
                            {
                            // InternalKim.g:1304:6: (lv_leftLimit_3_0= 'inclusive' )
                            // InternalKim.g:1305:7: lv_leftLimit_3_0= 'inclusive'
                            {
                            lv_leftLimit_3_0=(Token)match(input,44,FOLLOW_18); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_leftLimit_3_0, grammarAccess.getClassifierRHSAccess().getLeftLimitInclusiveKeyword_1_1_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getClassifierRHSRule());
                              							}
                              							setWithLastConsumed(current, "leftLimit", lv_leftLimit_3_0, "inclusive");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:1318:5: otherlv_4= 'exclusive'
                            {
                            otherlv_4=(Token)match(input,45,FOLLOW_18); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_4, grammarAccess.getClassifierRHSAccess().getExclusiveKeyword_1_1_1());
                              				
                            }

                            }
                            break;

                    }

                    // InternalKim.g:1323:4: ( ( 'to' )=>otherlv_5= 'to' )
                    // InternalKim.g:1324:5: ( 'to' )=>otherlv_5= 'to'
                    {
                    otherlv_5=(Token)match(input,32,FOLLOW_33); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getClassifierRHSAccess().getToKeyword_1_2());
                      				
                    }

                    }

                    // InternalKim.g:1330:4: ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) )
                    // InternalKim.g:1331:5: ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber )
                    {
                    // InternalKim.g:1335:5: (lv_int1_6_0= ruleNumber )
                    // InternalKim.g:1336:6: lv_int1_6_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSAccess().getInt1NumberParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FOLLOW_34);
                    lv_int1_6_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
                      						}
                      						set(
                      							current,
                      							"int1",
                      							lv_int1_6_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:1353:4: ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )?
                    int alt34=3;
                    int LA34_0 = input.LA(1);

                    if ( (LA34_0==44) ) {
                        alt34=1;
                    }
                    else if ( (LA34_0==45) ) {
                        alt34=2;
                    }
                    switch (alt34) {
                        case 1 :
                            // InternalKim.g:1354:5: ( (lv_rightLimit_7_0= 'inclusive' ) )
                            {
                            // InternalKim.g:1354:5: ( (lv_rightLimit_7_0= 'inclusive' ) )
                            // InternalKim.g:1355:6: (lv_rightLimit_7_0= 'inclusive' )
                            {
                            // InternalKim.g:1355:6: (lv_rightLimit_7_0= 'inclusive' )
                            // InternalKim.g:1356:7: lv_rightLimit_7_0= 'inclusive'
                            {
                            lv_rightLimit_7_0=(Token)match(input,44,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_rightLimit_7_0, grammarAccess.getClassifierRHSAccess().getRightLimitInclusiveKeyword_1_4_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getClassifierRHSRule());
                              							}
                              							setWithLastConsumed(current, "rightLimit", lv_rightLimit_7_0, "inclusive");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:1369:5: otherlv_8= 'exclusive'
                            {
                            otherlv_8=(Token)match(input,45,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_8, grammarAccess.getClassifierRHSAccess().getExclusiveKeyword_1_4_1());
                              				
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:1376:3: ( (lv_num_9_0= ruleNumber ) )
                    {
                    // InternalKim.g:1376:3: ( (lv_num_9_0= ruleNumber ) )
                    // InternalKim.g:1377:4: (lv_num_9_0= ruleNumber )
                    {
                    // InternalKim.g:1377:4: (lv_num_9_0= ruleNumber )
                    // InternalKim.g:1378:5: lv_num_9_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getClassifierRHSAccess().getNumNumberParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_num_9_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
                      					}
                      					set(
                      						current,
                      						"num",
                      						lv_num_9_0,
                      						"org.integratedmodelling.kim.Kim.Number");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:1396:3: (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) )
                    {
                    // InternalKim.g:1396:3: (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) )
                    // InternalKim.g:1397:4: otherlv_10= 'in' ( (lv_set_11_0= ruleList ) )
                    {
                    otherlv_10=(Token)match(input,46,FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getClassifierRHSAccess().getInKeyword_3_0());
                      			
                    }
                    // InternalKim.g:1401:4: ( (lv_set_11_0= ruleList ) )
                    // InternalKim.g:1402:5: (lv_set_11_0= ruleList )
                    {
                    // InternalKim.g:1402:5: (lv_set_11_0= ruleList )
                    // InternalKim.g:1403:6: lv_set_11_0= ruleList
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSAccess().getSetListParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_set_11_0=ruleList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
                      						}
                      						set(
                      							current,
                      							"set",
                      							lv_set_11_0,
                      							"org.integratedmodelling.kim.Kim.List");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:1422:3: ( (lv_string_12_0= RULE_STRING ) )
                    {
                    // InternalKim.g:1422:3: ( (lv_string_12_0= RULE_STRING ) )
                    // InternalKim.g:1423:4: (lv_string_12_0= RULE_STRING )
                    {
                    // InternalKim.g:1423:4: (lv_string_12_0= RULE_STRING )
                    // InternalKim.g:1424:5: lv_string_12_0= RULE_STRING
                    {
                    lv_string_12_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_string_12_0, grammarAccess.getClassifierRHSAccess().getStringSTRINGTerminalRuleCall_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassifierRHSRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"string",
                      						lv_string_12_0,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:1441:3: ( (lv_concept_13_0= ruleConceptDeclaration ) )
                    {
                    // InternalKim.g:1441:3: ( (lv_concept_13_0= ruleConceptDeclaration ) )
                    // InternalKim.g:1442:4: (lv_concept_13_0= ruleConceptDeclaration )
                    {
                    // InternalKim.g:1442:4: (lv_concept_13_0= ruleConceptDeclaration )
                    // InternalKim.g:1443:5: lv_concept_13_0= ruleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getClassifierRHSAccess().getConceptConceptDeclarationParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_13_0=ruleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
                      					}
                      					set(
                      						current,
                      						"concept",
                      						lv_concept_13_0,
                      						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalKim.g:1461:3: (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' )
                    {
                    // InternalKim.g:1461:3: (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' )
                    // InternalKim.g:1462:4: otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')'
                    {
                    otherlv_14=(Token)match(input,34,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_14, grammarAccess.getClassifierRHSAccess().getLeftParenthesisKeyword_6_0());
                      			
                    }
                    // InternalKim.g:1466:4: ( (lv_toResolve_15_0= ruleConceptDeclaration ) )
                    // InternalKim.g:1467:5: (lv_toResolve_15_0= ruleConceptDeclaration )
                    {
                    // InternalKim.g:1467:5: (lv_toResolve_15_0= ruleConceptDeclaration )
                    // InternalKim.g:1468:6: lv_toResolve_15_0= ruleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSAccess().getToResolveConceptDeclarationParserRuleCall_6_1_0());
                      					
                    }
                    pushFollow(FOLLOW_22);
                    lv_toResolve_15_0=ruleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
                      						}
                      						add(
                      							current,
                      							"toResolve",
                      							lv_toResolve_15_0,
                      							"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:1485:4: ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )*
                    loop35:
                    do {
                        int alt35=2;
                        int LA35_0 = input.LA(1);

                        if ( (LA35_0==22) ) {
                            alt35=1;
                        }


                        switch (alt35) {
                    	case 1 :
                    	    // InternalKim.g:1486:5: ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) )
                    	    {
                    	    // InternalKim.g:1486:5: ( ( ',' )=>otherlv_16= ',' )
                    	    // InternalKim.g:1487:6: ( ',' )=>otherlv_16= ','
                    	    {
                    	    otherlv_16=(Token)match(input,22,FOLLOW_16); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_16, grammarAccess.getClassifierRHSAccess().getCommaKeyword_6_2_0());
                    	      					
                    	    }

                    	    }

                    	    // InternalKim.g:1493:5: ( (lv_toResolve_17_0= ruleConceptDeclaration ) )
                    	    // InternalKim.g:1494:6: (lv_toResolve_17_0= ruleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:1494:6: (lv_toResolve_17_0= ruleConceptDeclaration )
                    	    // InternalKim.g:1495:7: lv_toResolve_17_0= ruleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getClassifierRHSAccess().getToResolveConceptDeclarationParserRuleCall_6_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_22);
                    	    lv_toResolve_17_0=ruleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"toResolve",
                    	      								lv_toResolve_17_0,
                    	      								"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop35;
                        }
                    } while (true);

                    otherlv_18=(Token)match(input,37,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_18, grammarAccess.getClassifierRHSAccess().getRightParenthesisKeyword_6_3());
                      			
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalKim.g:1519:3: ( ( (lv_op_19_0= ruleREL_OPERATOR ) ) ( (lv_expression_20_0= ruleNumber ) ) )
                    {
                    // InternalKim.g:1519:3: ( ( (lv_op_19_0= ruleREL_OPERATOR ) ) ( (lv_expression_20_0= ruleNumber ) ) )
                    // InternalKim.g:1520:4: ( (lv_op_19_0= ruleREL_OPERATOR ) ) ( (lv_expression_20_0= ruleNumber ) )
                    {
                    // InternalKim.g:1520:4: ( (lv_op_19_0= ruleREL_OPERATOR ) )
                    // InternalKim.g:1521:5: (lv_op_19_0= ruleREL_OPERATOR )
                    {
                    // InternalKim.g:1521:5: (lv_op_19_0= ruleREL_OPERATOR )
                    // InternalKim.g:1522:6: lv_op_19_0= ruleREL_OPERATOR
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSAccess().getOpREL_OPERATORParserRuleCall_7_0_0());
                      					
                    }
                    pushFollow(FOLLOW_33);
                    lv_op_19_0=ruleREL_OPERATOR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
                      						}
                      						set(
                      							current,
                      							"op",
                      							lv_op_19_0,
                      							"org.integratedmodelling.kim.Kim.REL_OPERATOR");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:1539:4: ( (lv_expression_20_0= ruleNumber ) )
                    // InternalKim.g:1540:5: (lv_expression_20_0= ruleNumber )
                    {
                    // InternalKim.g:1540:5: (lv_expression_20_0= ruleNumber )
                    // InternalKim.g:1541:6: lv_expression_20_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSAccess().getExpressionNumberParserRuleCall_7_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_20_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_20_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 9 :
                    // InternalKim.g:1560:3: ( (lv_nodata_21_0= 'unknown' ) )
                    {
                    // InternalKim.g:1560:3: ( (lv_nodata_21_0= 'unknown' ) )
                    // InternalKim.g:1561:4: (lv_nodata_21_0= 'unknown' )
                    {
                    // InternalKim.g:1561:4: (lv_nodata_21_0= 'unknown' )
                    // InternalKim.g:1562:5: lv_nodata_21_0= 'unknown'
                    {
                    lv_nodata_21_0=(Token)match(input,47,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_nodata_21_0, grammarAccess.getClassifierRHSAccess().getNodataUnknownKeyword_8_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassifierRHSRule());
                      					}
                      					setWithLastConsumed(current, "nodata", lv_nodata_21_0, "unknown");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 10 :
                    // InternalKim.g:1575:3: ( (lv_star_22_0= '*' ) )
                    {
                    // InternalKim.g:1575:3: ( (lv_star_22_0= '*' ) )
                    // InternalKim.g:1576:4: (lv_star_22_0= '*' )
                    {
                    // InternalKim.g:1576:4: (lv_star_22_0= '*' )
                    // InternalKim.g:1577:5: lv_star_22_0= '*'
                    {
                    lv_star_22_0=(Token)match(input,36,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_star_22_0, grammarAccess.getClassifierRHSAccess().getStarAsteriskKeyword_9_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassifierRHSRule());
                      					}
                      					setWithLastConsumed(current, "star", true, "*");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassifierRHS"


    // $ANTLR start "entryRuleClassifierRHSWithId"
    // InternalKim.g:1593:1: entryRuleClassifierRHSWithId returns [EObject current=null] : iv_ruleClassifierRHSWithId= ruleClassifierRHSWithId EOF ;
    public final EObject entryRuleClassifierRHSWithId() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleClassifierRHSWithId = null;


        try {
            // InternalKim.g:1593:60: (iv_ruleClassifierRHSWithId= ruleClassifierRHSWithId EOF )
            // InternalKim.g:1594:2: iv_ruleClassifierRHSWithId= ruleClassifierRHSWithId EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getClassifierRHSWithIdRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleClassifierRHSWithId=ruleClassifierRHSWithId();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleClassifierRHSWithId; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleClassifierRHSWithId"


    // $ANTLR start "ruleClassifierRHSWithId"
    // InternalKim.g:1600:1: ruleClassifierRHSWithId returns [EObject current=null] : ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | ( ( (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId ) ) ) | ( ( (lv_op_15_0= ruleREL_OPERATOR ) ) ( (lv_expression_16_0= ruleNumber ) ) ) | ( (lv_nodata_17_0= 'unknown' ) ) | ( (lv_star_18_0= '*' ) ) ) ;
    public final EObject ruleClassifierRHSWithId() throws RecognitionException {
        EObject current = null;

        Token lv_boolean_0_0=null;
        Token lv_boolean_1_0=null;
        Token lv_leftLimit_3_0=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token lv_rightLimit_7_0=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token lv_string_12_0=null;
        Token lv_id_14_1=null;
        Token lv_nodata_17_0=null;
        Token lv_star_18_0=null;
        EObject lv_int0_2_0 = null;

        EObject lv_int1_6_0 = null;

        EObject lv_num_9_0 = null;

        EObject lv_set_11_0 = null;

        EObject lv_concept_13_0 = null;

        AntlrDatatypeRuleToken lv_id_14_2 = null;

        EObject lv_op_15_0 = null;

        EObject lv_expression_16_0 = null;



        	enterRule();

        try {
            // InternalKim.g:1606:2: ( ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | ( ( (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId ) ) ) | ( ( (lv_op_15_0= ruleREL_OPERATOR ) ) ( (lv_expression_16_0= ruleNumber ) ) ) | ( (lv_nodata_17_0= 'unknown' ) ) | ( (lv_star_18_0= '*' ) ) ) )
            // InternalKim.g:1607:2: ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | ( ( (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId ) ) ) | ( ( (lv_op_15_0= ruleREL_OPERATOR ) ) ( (lv_expression_16_0= ruleNumber ) ) ) | ( (lv_nodata_17_0= 'unknown' ) ) | ( (lv_star_18_0= '*' ) ) )
            {
            // InternalKim.g:1607:2: ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | ( ( (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId ) ) ) | ( ( (lv_op_15_0= ruleREL_OPERATOR ) ) ( (lv_expression_16_0= ruleNumber ) ) ) | ( (lv_nodata_17_0= 'unknown' ) ) | ( (lv_star_18_0= '*' ) ) )
            int alt41=10;
            alt41 = dfa41.predict(input);
            switch (alt41) {
                case 1 :
                    // InternalKim.g:1608:3: ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) )
                    {
                    // InternalKim.g:1608:3: ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) )
                    int alt37=2;
                    int LA37_0 = input.LA(1);

                    if ( (LA37_0==23) ) {
                        alt37=1;
                    }
                    else if ( (LA37_0==24) ) {
                        alt37=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 37, 0, input);

                        throw nvae;
                    }
                    switch (alt37) {
                        case 1 :
                            // InternalKim.g:1609:4: ( (lv_boolean_0_0= 'true' ) )
                            {
                            // InternalKim.g:1609:4: ( (lv_boolean_0_0= 'true' ) )
                            // InternalKim.g:1610:5: (lv_boolean_0_0= 'true' )
                            {
                            // InternalKim.g:1610:5: (lv_boolean_0_0= 'true' )
                            // InternalKim.g:1611:6: lv_boolean_0_0= 'true'
                            {
                            lv_boolean_0_0=(Token)match(input,23,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_0_0, grammarAccess.getClassifierRHSWithIdAccess().getBooleanTrueKeyword_0_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getClassifierRHSWithIdRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_0_0, "true");
                              					
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:1624:4: ( (lv_boolean_1_0= 'false' ) )
                            {
                            // InternalKim.g:1624:4: ( (lv_boolean_1_0= 'false' ) )
                            // InternalKim.g:1625:5: (lv_boolean_1_0= 'false' )
                            {
                            // InternalKim.g:1625:5: (lv_boolean_1_0= 'false' )
                            // InternalKim.g:1626:6: lv_boolean_1_0= 'false'
                            {
                            lv_boolean_1_0=(Token)match(input,24,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_1_0, grammarAccess.getClassifierRHSWithIdAccess().getBooleanFalseKeyword_0_1_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getClassifierRHSWithIdRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_1_0, "false");
                              					
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:1640:3: ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? )
                    {
                    // InternalKim.g:1640:3: ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? )
                    // InternalKim.g:1641:4: ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )?
                    {
                    // InternalKim.g:1641:4: ( (lv_int0_2_0= ruleNumber ) )
                    // InternalKim.g:1642:5: (lv_int0_2_0= ruleNumber )
                    {
                    // InternalKim.g:1642:5: (lv_int0_2_0= ruleNumber )
                    // InternalKim.g:1643:6: lv_int0_2_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSWithIdAccess().getInt0NumberParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_32);
                    lv_int0_2_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSWithIdRule());
                      						}
                      						set(
                      							current,
                      							"int0",
                      							lv_int0_2_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:1660:4: ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )?
                    int alt38=3;
                    int LA38_0 = input.LA(1);

                    if ( (LA38_0==44) ) {
                        alt38=1;
                    }
                    else if ( (LA38_0==45) ) {
                        alt38=2;
                    }
                    switch (alt38) {
                        case 1 :
                            // InternalKim.g:1661:5: ( (lv_leftLimit_3_0= 'inclusive' ) )
                            {
                            // InternalKim.g:1661:5: ( (lv_leftLimit_3_0= 'inclusive' ) )
                            // InternalKim.g:1662:6: (lv_leftLimit_3_0= 'inclusive' )
                            {
                            // InternalKim.g:1662:6: (lv_leftLimit_3_0= 'inclusive' )
                            // InternalKim.g:1663:7: lv_leftLimit_3_0= 'inclusive'
                            {
                            lv_leftLimit_3_0=(Token)match(input,44,FOLLOW_18); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_leftLimit_3_0, grammarAccess.getClassifierRHSWithIdAccess().getLeftLimitInclusiveKeyword_1_1_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getClassifierRHSWithIdRule());
                              							}
                              							setWithLastConsumed(current, "leftLimit", lv_leftLimit_3_0, "inclusive");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:1676:5: otherlv_4= 'exclusive'
                            {
                            otherlv_4=(Token)match(input,45,FOLLOW_18); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_4, grammarAccess.getClassifierRHSWithIdAccess().getExclusiveKeyword_1_1_1());
                              				
                            }

                            }
                            break;

                    }

                    // InternalKim.g:1681:4: ( ( 'to' )=>otherlv_5= 'to' )
                    // InternalKim.g:1682:5: ( 'to' )=>otherlv_5= 'to'
                    {
                    otherlv_5=(Token)match(input,32,FOLLOW_33); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getClassifierRHSWithIdAccess().getToKeyword_1_2());
                      				
                    }

                    }

                    // InternalKim.g:1688:4: ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) )
                    // InternalKim.g:1689:5: ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber )
                    {
                    // InternalKim.g:1693:5: (lv_int1_6_0= ruleNumber )
                    // InternalKim.g:1694:6: lv_int1_6_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSWithIdAccess().getInt1NumberParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FOLLOW_34);
                    lv_int1_6_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSWithIdRule());
                      						}
                      						set(
                      							current,
                      							"int1",
                      							lv_int1_6_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:1711:4: ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )?
                    int alt39=3;
                    int LA39_0 = input.LA(1);

                    if ( (LA39_0==44) ) {
                        alt39=1;
                    }
                    else if ( (LA39_0==45) ) {
                        alt39=2;
                    }
                    switch (alt39) {
                        case 1 :
                            // InternalKim.g:1712:5: ( (lv_rightLimit_7_0= 'inclusive' ) )
                            {
                            // InternalKim.g:1712:5: ( (lv_rightLimit_7_0= 'inclusive' ) )
                            // InternalKim.g:1713:6: (lv_rightLimit_7_0= 'inclusive' )
                            {
                            // InternalKim.g:1713:6: (lv_rightLimit_7_0= 'inclusive' )
                            // InternalKim.g:1714:7: lv_rightLimit_7_0= 'inclusive'
                            {
                            lv_rightLimit_7_0=(Token)match(input,44,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_rightLimit_7_0, grammarAccess.getClassifierRHSWithIdAccess().getRightLimitInclusiveKeyword_1_4_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getClassifierRHSWithIdRule());
                              							}
                              							setWithLastConsumed(current, "rightLimit", lv_rightLimit_7_0, "inclusive");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:1727:5: otherlv_8= 'exclusive'
                            {
                            otherlv_8=(Token)match(input,45,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_8, grammarAccess.getClassifierRHSWithIdAccess().getExclusiveKeyword_1_4_1());
                              				
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:1734:3: ( (lv_num_9_0= ruleNumber ) )
                    {
                    // InternalKim.g:1734:3: ( (lv_num_9_0= ruleNumber ) )
                    // InternalKim.g:1735:4: (lv_num_9_0= ruleNumber )
                    {
                    // InternalKim.g:1735:4: (lv_num_9_0= ruleNumber )
                    // InternalKim.g:1736:5: lv_num_9_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getClassifierRHSWithIdAccess().getNumNumberParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_num_9_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getClassifierRHSWithIdRule());
                      					}
                      					set(
                      						current,
                      						"num",
                      						lv_num_9_0,
                      						"org.integratedmodelling.kim.Kim.Number");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:1754:3: (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) )
                    {
                    // InternalKim.g:1754:3: (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) )
                    // InternalKim.g:1755:4: otherlv_10= 'in' ( (lv_set_11_0= ruleList ) )
                    {
                    otherlv_10=(Token)match(input,46,FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getClassifierRHSWithIdAccess().getInKeyword_3_0());
                      			
                    }
                    // InternalKim.g:1759:4: ( (lv_set_11_0= ruleList ) )
                    // InternalKim.g:1760:5: (lv_set_11_0= ruleList )
                    {
                    // InternalKim.g:1760:5: (lv_set_11_0= ruleList )
                    // InternalKim.g:1761:6: lv_set_11_0= ruleList
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSWithIdAccess().getSetListParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_set_11_0=ruleList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSWithIdRule());
                      						}
                      						set(
                      							current,
                      							"set",
                      							lv_set_11_0,
                      							"org.integratedmodelling.kim.Kim.List");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:1780:3: ( (lv_string_12_0= RULE_STRING ) )
                    {
                    // InternalKim.g:1780:3: ( (lv_string_12_0= RULE_STRING ) )
                    // InternalKim.g:1781:4: (lv_string_12_0= RULE_STRING )
                    {
                    // InternalKim.g:1781:4: (lv_string_12_0= RULE_STRING )
                    // InternalKim.g:1782:5: lv_string_12_0= RULE_STRING
                    {
                    lv_string_12_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_string_12_0, grammarAccess.getClassifierRHSWithIdAccess().getStringSTRINGTerminalRuleCall_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassifierRHSWithIdRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"string",
                      						lv_string_12_0,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:1799:3: ( (lv_concept_13_0= ruleConceptDeclaration ) )
                    {
                    // InternalKim.g:1799:3: ( (lv_concept_13_0= ruleConceptDeclaration ) )
                    // InternalKim.g:1800:4: (lv_concept_13_0= ruleConceptDeclaration )
                    {
                    // InternalKim.g:1800:4: (lv_concept_13_0= ruleConceptDeclaration )
                    // InternalKim.g:1801:5: lv_concept_13_0= ruleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getClassifierRHSWithIdAccess().getConceptConceptDeclarationParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_13_0=ruleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getClassifierRHSWithIdRule());
                      					}
                      					set(
                      						current,
                      						"concept",
                      						lv_concept_13_0,
                      						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalKim.g:1819:3: ( ( (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId ) ) )
                    {
                    // InternalKim.g:1819:3: ( ( (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId ) ) )
                    // InternalKim.g:1820:4: ( (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId ) )
                    {
                    // InternalKim.g:1820:4: ( (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId ) )
                    // InternalKim.g:1821:5: (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId )
                    {
                    // InternalKim.g:1821:5: (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId )
                    int alt40=2;
                    alt40 = dfa40.predict(input);
                    switch (alt40) {
                        case 1 :
                            // InternalKim.g:1822:6: lv_id_14_1= RULE_LOWERCASE_ID
                            {
                            lv_id_14_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_14_1, grammarAccess.getClassifierRHSWithIdAccess().getIdLOWERCASE_IDTerminalRuleCall_6_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getClassifierRHSWithIdRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_14_1,
                              							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:1837:6: lv_id_14_2= rulePropertyId
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getClassifierRHSWithIdAccess().getIdPropertyIdParserRuleCall_6_0_1());
                              					
                            }
                            pushFollow(FOLLOW_2);
                            lv_id_14_2=rulePropertyId();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getClassifierRHSWithIdRule());
                              						}
                              						set(
                              							current,
                              							"id",
                              							lv_id_14_2,
                              							"org.integratedmodelling.kim.Kim.PropertyId");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalKim.g:1856:3: ( ( (lv_op_15_0= ruleREL_OPERATOR ) ) ( (lv_expression_16_0= ruleNumber ) ) )
                    {
                    // InternalKim.g:1856:3: ( ( (lv_op_15_0= ruleREL_OPERATOR ) ) ( (lv_expression_16_0= ruleNumber ) ) )
                    // InternalKim.g:1857:4: ( (lv_op_15_0= ruleREL_OPERATOR ) ) ( (lv_expression_16_0= ruleNumber ) )
                    {
                    // InternalKim.g:1857:4: ( (lv_op_15_0= ruleREL_OPERATOR ) )
                    // InternalKim.g:1858:5: (lv_op_15_0= ruleREL_OPERATOR )
                    {
                    // InternalKim.g:1858:5: (lv_op_15_0= ruleREL_OPERATOR )
                    // InternalKim.g:1859:6: lv_op_15_0= ruleREL_OPERATOR
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSWithIdAccess().getOpREL_OPERATORParserRuleCall_7_0_0());
                      					
                    }
                    pushFollow(FOLLOW_33);
                    lv_op_15_0=ruleREL_OPERATOR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSWithIdRule());
                      						}
                      						set(
                      							current,
                      							"op",
                      							lv_op_15_0,
                      							"org.integratedmodelling.kim.Kim.REL_OPERATOR");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:1876:4: ( (lv_expression_16_0= ruleNumber ) )
                    // InternalKim.g:1877:5: (lv_expression_16_0= ruleNumber )
                    {
                    // InternalKim.g:1877:5: (lv_expression_16_0= ruleNumber )
                    // InternalKim.g:1878:6: lv_expression_16_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSWithIdAccess().getExpressionNumberParserRuleCall_7_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_16_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSWithIdRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_16_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 9 :
                    // InternalKim.g:1897:3: ( (lv_nodata_17_0= 'unknown' ) )
                    {
                    // InternalKim.g:1897:3: ( (lv_nodata_17_0= 'unknown' ) )
                    // InternalKim.g:1898:4: (lv_nodata_17_0= 'unknown' )
                    {
                    // InternalKim.g:1898:4: (lv_nodata_17_0= 'unknown' )
                    // InternalKim.g:1899:5: lv_nodata_17_0= 'unknown'
                    {
                    lv_nodata_17_0=(Token)match(input,47,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_nodata_17_0, grammarAccess.getClassifierRHSWithIdAccess().getNodataUnknownKeyword_8_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassifierRHSWithIdRule());
                      					}
                      					setWithLastConsumed(current, "nodata", lv_nodata_17_0, "unknown");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 10 :
                    // InternalKim.g:1912:3: ( (lv_star_18_0= '*' ) )
                    {
                    // InternalKim.g:1912:3: ( (lv_star_18_0= '*' ) )
                    // InternalKim.g:1913:4: (lv_star_18_0= '*' )
                    {
                    // InternalKim.g:1913:4: (lv_star_18_0= '*' )
                    // InternalKim.g:1914:5: lv_star_18_0= '*'
                    {
                    lv_star_18_0=(Token)match(input,36,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_star_18_0, grammarAccess.getClassifierRHSWithIdAccess().getStarAsteriskKeyword_9_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassifierRHSWithIdRule());
                      					}
                      					setWithLastConsumed(current, "star", true, "*");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassifierRHSWithId"


    // $ANTLR start "entryRuleUrn"
    // InternalKim.g:1930:1: entryRuleUrn returns [EObject current=null] : iv_ruleUrn= ruleUrn EOF ;
    public final EObject entryRuleUrn() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUrn = null;


        try {
            // InternalKim.g:1930:44: (iv_ruleUrn= ruleUrn EOF )
            // InternalKim.g:1931:2: iv_ruleUrn= ruleUrn EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUrnRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUrn=ruleUrn();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUrn; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUrn"


    // $ANTLR start "ruleUrn"
    // InternalKim.g:1937:1: ruleUrn returns [EObject current=null] : ( ( (lv_name_0_1= ruleUrnId | lv_name_0_2= RULE_STRING | lv_name_0_3= ruleLocalFilePath ) ) ) ;
    public final EObject ruleUrn() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_2=null;
        AntlrDatatypeRuleToken lv_name_0_1 = null;

        AntlrDatatypeRuleToken lv_name_0_3 = null;



        	enterRule();

        try {
            // InternalKim.g:1943:2: ( ( ( (lv_name_0_1= ruleUrnId | lv_name_0_2= RULE_STRING | lv_name_0_3= ruleLocalFilePath ) ) ) )
            // InternalKim.g:1944:2: ( ( (lv_name_0_1= ruleUrnId | lv_name_0_2= RULE_STRING | lv_name_0_3= ruleLocalFilePath ) ) )
            {
            // InternalKim.g:1944:2: ( ( (lv_name_0_1= ruleUrnId | lv_name_0_2= RULE_STRING | lv_name_0_3= ruleLocalFilePath ) ) )
            // InternalKim.g:1945:3: ( (lv_name_0_1= ruleUrnId | lv_name_0_2= RULE_STRING | lv_name_0_3= ruleLocalFilePath ) )
            {
            // InternalKim.g:1945:3: ( (lv_name_0_1= ruleUrnId | lv_name_0_2= RULE_STRING | lv_name_0_3= ruleLocalFilePath ) )
            // InternalKim.g:1946:4: (lv_name_0_1= ruleUrnId | lv_name_0_2= RULE_STRING | lv_name_0_3= ruleLocalFilePath )
            {
            // InternalKim.g:1946:4: (lv_name_0_1= ruleUrnId | lv_name_0_2= RULE_STRING | lv_name_0_3= ruleLocalFilePath )
            int alt42=3;
            switch ( input.LA(1) ) {
            case 87:
                {
                alt42=1;
                }
                break;
            case RULE_LOWERCASE_ID:
                {
                switch ( input.LA(2) ) {
                case EOF:
                case 22:
                case 25:
                case 51:
                case 89:
                    {
                    alt42=3;
                    }
                    break;
                case 90:
                    {
                    int LA42_5 = input.LA(3);

                    if ( (LA42_5==RULE_LOWERCASE_ID) ) {
                        int LA42_6 = input.LA(4);

                        if ( (LA42_6==88||LA42_6==90) ) {
                            alt42=1;
                        }
                        else if ( (LA42_6==EOF||LA42_6==22||LA42_6==25||LA42_6==51) ) {
                            alt42=3;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 42, 6, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 42, 5, input);

                        throw nvae;
                    }
                    }
                    break;
                case 88:
                    {
                    alt42=1;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 42, 2, input);

                    throw nvae;
                }

                }
                break;
            case RULE_STRING:
                {
                alt42=2;
                }
                break;
            case RULE_CAMELCASE_ID:
            case RULE_LOWERCASE_DASHID:
                {
                alt42=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 42, 0, input);

                throw nvae;
            }

            switch (alt42) {
                case 1 :
                    // InternalKim.g:1947:5: lv_name_0_1= ruleUrnId
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getUrnAccess().getNameUrnIdParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_name_0_1=ruleUrnId();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getUrnRule());
                      					}
                      					set(
                      						current,
                      						"name",
                      						lv_name_0_1,
                      						"org.integratedmodelling.kim.Kim.UrnId");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:1963:5: lv_name_0_2= RULE_STRING
                    {
                    lv_name_0_2=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_0_2, grammarAccess.getUrnAccess().getNameSTRINGTerminalRuleCall_0_1());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getUrnRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_0_2,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:1978:5: lv_name_0_3= ruleLocalFilePath
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getUrnAccess().getNameLocalFilePathParserRuleCall_0_2());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_name_0_3=ruleLocalFilePath();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getUrnRule());
                      					}
                      					set(
                      						current,
                      						"name",
                      						lv_name_0_3,
                      						"org.integratedmodelling.kim.Kim.LocalFilePath");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }
                    break;

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUrn"


    // $ANTLR start "entryRuleLookupTable"
    // InternalKim.g:1999:1: entryRuleLookupTable returns [EObject current=null] : iv_ruleLookupTable= ruleLookupTable EOF ;
    public final EObject entryRuleLookupTable() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLookupTable = null;


        try {
            // InternalKim.g:1999:52: (iv_ruleLookupTable= ruleLookupTable EOF )
            // InternalKim.g:2000:2: iv_ruleLookupTable= ruleLookupTable EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLookupTableRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLookupTable=ruleLookupTable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLookupTable; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLookupTable"


    // $ANTLR start "ruleLookupTable"
    // InternalKim.g:2006:1: ruleLookupTable returns [EObject current=null] : ( () otherlv_1= '{{' ( (lv_table_2_0= ruleTable ) )? otherlv_3= '}}' ) ;
    public final EObject ruleLookupTable() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_table_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:2012:2: ( ( () otherlv_1= '{{' ( (lv_table_2_0= ruleTable ) )? otherlv_3= '}}' ) )
            // InternalKim.g:2013:2: ( () otherlv_1= '{{' ( (lv_table_2_0= ruleTable ) )? otherlv_3= '}}' )
            {
            // InternalKim.g:2013:2: ( () otherlv_1= '{{' ( (lv_table_2_0= ruleTable ) )? otherlv_3= '}}' )
            // InternalKim.g:2014:3: () otherlv_1= '{{' ( (lv_table_2_0= ruleTable ) )? otherlv_3= '}}'
            {
            // InternalKim.g:2014:3: ()
            // InternalKim.g:2015:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getLookupTableAccess().getLookupTableAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,48,FOLLOW_36); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getLookupTableAccess().getLeftCurlyBracketLeftCurlyBracketKeyword_1());
              		
            }
            // InternalKim.g:2028:3: ( (lv_table_2_0= ruleTable ) )?
            int alt43=2;
            int LA43_0 = input.LA(1);

            if ( ((LA43_0>=RULE_LOWERCASE_ID && LA43_0<=RULE_EXPR)||LA43_0==RULE_CAMELCASE_ID||LA43_0==RULE_INT||(LA43_0>=23 && LA43_0<=24)||LA43_0==34||LA43_0==36||(LA43_0>=46 && LA43_0<=47)||LA43_0==51||(LA43_0>=108 && LA43_0<=109)||(LA43_0>=116 && LA43_0<=117)||(LA43_0>=119 && LA43_0<=130)||LA43_0==187||(LA43_0>=220 && LA43_0<=224)||(LA43_0>=226 && LA43_0<=227)) ) {
                alt43=1;
            }
            switch (alt43) {
                case 1 :
                    // InternalKim.g:2029:4: (lv_table_2_0= ruleTable )
                    {
                    // InternalKim.g:2029:4: (lv_table_2_0= ruleTable )
                    // InternalKim.g:2030:5: lv_table_2_0= ruleTable
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLookupTableAccess().getTableTableParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_37);
                    lv_table_2_0=ruleTable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLookupTableRule());
                      					}
                      					set(
                      						current,
                      						"table",
                      						lv_table_2_0,
                      						"org.integratedmodelling.kim.Kim.Table");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_3=(Token)match(input,49,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getLookupTableAccess().getRightCurlyBracketRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLookupTable"


    // $ANTLR start "entryRuleTable"
    // InternalKim.g:2055:1: entryRuleTable returns [EObject current=null] : iv_ruleTable= ruleTable EOF ;
    public final EObject entryRuleTable() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTable = null;


        try {
            // InternalKim.g:2055:46: (iv_ruleTable= ruleTable EOF )
            // InternalKim.g:2056:2: iv_ruleTable= ruleTable EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTableRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTable=ruleTable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTable; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTable"


    // $ANTLR start "ruleTable"
    // InternalKim.g:2062:1: ruleTable returns [EObject current=null] : ( ( (lv_rows_0_0= ruleTableRow ) ) (otherlv_1= ',' ( (lv_rows_2_0= ruleTableRow ) ) )* ) ;
    public final EObject ruleTable() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_rows_0_0 = null;

        EObject lv_rows_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:2068:2: ( ( ( (lv_rows_0_0= ruleTableRow ) ) (otherlv_1= ',' ( (lv_rows_2_0= ruleTableRow ) ) )* ) )
            // InternalKim.g:2069:2: ( ( (lv_rows_0_0= ruleTableRow ) ) (otherlv_1= ',' ( (lv_rows_2_0= ruleTableRow ) ) )* )
            {
            // InternalKim.g:2069:2: ( ( (lv_rows_0_0= ruleTableRow ) ) (otherlv_1= ',' ( (lv_rows_2_0= ruleTableRow ) ) )* )
            // InternalKim.g:2070:3: ( (lv_rows_0_0= ruleTableRow ) ) (otherlv_1= ',' ( (lv_rows_2_0= ruleTableRow ) ) )*
            {
            // InternalKim.g:2070:3: ( (lv_rows_0_0= ruleTableRow ) )
            // InternalKim.g:2071:4: (lv_rows_0_0= ruleTableRow )
            {
            // InternalKim.g:2071:4: (lv_rows_0_0= ruleTableRow )
            // InternalKim.g:2072:5: lv_rows_0_0= ruleTableRow
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTableAccess().getRowsTableRowParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_29);
            lv_rows_0_0=ruleTableRow();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTableRule());
              					}
              					add(
              						current,
              						"rows",
              						lv_rows_0_0,
              						"org.integratedmodelling.kim.Kim.TableRow");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:2089:3: (otherlv_1= ',' ( (lv_rows_2_0= ruleTableRow ) ) )*
            loop44:
            do {
                int alt44=2;
                int LA44_0 = input.LA(1);

                if ( (LA44_0==22) ) {
                    alt44=1;
                }


                switch (alt44) {
            	case 1 :
            	    // InternalKim.g:2090:4: otherlv_1= ',' ( (lv_rows_2_0= ruleTableRow ) )
            	    {
            	    otherlv_1=(Token)match(input,22,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getTableAccess().getCommaKeyword_1_0());
            	      			
            	    }
            	    // InternalKim.g:2094:4: ( (lv_rows_2_0= ruleTableRow ) )
            	    // InternalKim.g:2095:5: (lv_rows_2_0= ruleTableRow )
            	    {
            	    // InternalKim.g:2095:5: (lv_rows_2_0= ruleTableRow )
            	    // InternalKim.g:2096:6: lv_rows_2_0= ruleTableRow
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getTableAccess().getRowsTableRowParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_29);
            	    lv_rows_2_0=ruleTableRow();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getTableRule());
            	      						}
            	      						add(
            	      							current,
            	      							"rows",
            	      							lv_rows_2_0,
            	      							"org.integratedmodelling.kim.Kim.TableRow");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop44;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTable"


    // $ANTLR start "entryRuleTableRow"
    // InternalKim.g:2118:1: entryRuleTableRow returns [EObject current=null] : iv_ruleTableRow= ruleTableRow EOF ;
    public final EObject entryRuleTableRow() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTableRow = null;


        try {
            // InternalKim.g:2118:49: (iv_ruleTableRow= ruleTableRow EOF )
            // InternalKim.g:2119:2: iv_ruleTableRow= ruleTableRow EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTableRowRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTableRow=ruleTableRow();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTableRow; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTableRow"


    // $ANTLR start "ruleTableRow"
    // InternalKim.g:2125:1: ruleTableRow returns [EObject current=null] : ( ( (lv_elements_0_0= ruleTableClassifier ) ) (otherlv_1= '|' ( (lv_elements_2_0= ruleTableClassifier ) ) )* ) ;
    public final EObject ruleTableRow() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_elements_0_0 = null;

        EObject lv_elements_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:2131:2: ( ( ( (lv_elements_0_0= ruleTableClassifier ) ) (otherlv_1= '|' ( (lv_elements_2_0= ruleTableClassifier ) ) )* ) )
            // InternalKim.g:2132:2: ( ( (lv_elements_0_0= ruleTableClassifier ) ) (otherlv_1= '|' ( (lv_elements_2_0= ruleTableClassifier ) ) )* )
            {
            // InternalKim.g:2132:2: ( ( (lv_elements_0_0= ruleTableClassifier ) ) (otherlv_1= '|' ( (lv_elements_2_0= ruleTableClassifier ) ) )* )
            // InternalKim.g:2133:3: ( (lv_elements_0_0= ruleTableClassifier ) ) (otherlv_1= '|' ( (lv_elements_2_0= ruleTableClassifier ) ) )*
            {
            // InternalKim.g:2133:3: ( (lv_elements_0_0= ruleTableClassifier ) )
            // InternalKim.g:2134:4: (lv_elements_0_0= ruleTableClassifier )
            {
            // InternalKim.g:2134:4: (lv_elements_0_0= ruleTableClassifier )
            // InternalKim.g:2135:5: lv_elements_0_0= ruleTableClassifier
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTableRowAccess().getElementsTableClassifierParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_38);
            lv_elements_0_0=ruleTableClassifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTableRowRule());
              					}
              					add(
              						current,
              						"elements",
              						lv_elements_0_0,
              						"org.integratedmodelling.kim.Kim.TableClassifier");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:2152:3: (otherlv_1= '|' ( (lv_elements_2_0= ruleTableClassifier ) ) )*
            loop45:
            do {
                int alt45=2;
                int LA45_0 = input.LA(1);

                if ( (LA45_0==50) ) {
                    alt45=1;
                }


                switch (alt45) {
            	case 1 :
            	    // InternalKim.g:2153:4: otherlv_1= '|' ( (lv_elements_2_0= ruleTableClassifier ) )
            	    {
            	    otherlv_1=(Token)match(input,50,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getTableRowAccess().getVerticalLineKeyword_1_0());
            	      			
            	    }
            	    // InternalKim.g:2157:4: ( (lv_elements_2_0= ruleTableClassifier ) )
            	    // InternalKim.g:2158:5: (lv_elements_2_0= ruleTableClassifier )
            	    {
            	    // InternalKim.g:2158:5: (lv_elements_2_0= ruleTableClassifier )
            	    // InternalKim.g:2159:6: lv_elements_2_0= ruleTableClassifier
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getTableRowAccess().getElementsTableClassifierParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_38);
            	    lv_elements_2_0=ruleTableClassifier();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getTableRowRule());
            	      						}
            	      						add(
            	      							current,
            	      							"elements",
            	      							lv_elements_2_0,
            	      							"org.integratedmodelling.kim.Kim.TableClassifier");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop45;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTableRow"


    // $ANTLR start "entryRuleTableClassifier"
    // InternalKim.g:2181:1: entryRuleTableClassifier returns [EObject current=null] : iv_ruleTableClassifier= ruleTableClassifier EOF ;
    public final EObject entryRuleTableClassifier() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTableClassifier = null;


        try {
            // InternalKim.g:2181:56: (iv_ruleTableClassifier= ruleTableClassifier EOF )
            // InternalKim.g:2182:2: iv_ruleTableClassifier= ruleTableClassifier EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTableClassifierRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTableClassifier=ruleTableClassifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTableClassifier; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTableClassifier"


    // $ANTLR start "ruleTableClassifier"
    // InternalKim.g:2188:1: ruleTableClassifier returns [EObject current=null] : ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | ( ( (lv_op_14_0= ruleREL_OPERATOR ) ) ( (lv_expression_15_0= ruleNumber ) ) ) | ( (lv_expr_16_0= RULE_EXPR ) ) | ( (lv_nodata_17_0= 'unknown' ) ) | ( (lv_star_18_0= '*' ) ) | ( (lv_anything_19_0= '#' ) ) ) ;
    public final EObject ruleTableClassifier() throws RecognitionException {
        EObject current = null;

        Token lv_boolean_0_0=null;
        Token lv_boolean_1_0=null;
        Token lv_leftLimit_3_0=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token lv_rightLimit_7_0=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token lv_string_12_0=null;
        Token lv_expr_16_0=null;
        Token lv_nodata_17_0=null;
        Token lv_star_18_0=null;
        Token lv_anything_19_0=null;
        EObject lv_int0_2_0 = null;

        EObject lv_int1_6_0 = null;

        EObject lv_num_9_0 = null;

        EObject lv_set_11_0 = null;

        EObject lv_concept_13_0 = null;

        EObject lv_op_14_0 = null;

        EObject lv_expression_15_0 = null;



        	enterRule();

        try {
            // InternalKim.g:2194:2: ( ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | ( ( (lv_op_14_0= ruleREL_OPERATOR ) ) ( (lv_expression_15_0= ruleNumber ) ) ) | ( (lv_expr_16_0= RULE_EXPR ) ) | ( (lv_nodata_17_0= 'unknown' ) ) | ( (lv_star_18_0= '*' ) ) | ( (lv_anything_19_0= '#' ) ) ) )
            // InternalKim.g:2195:2: ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | ( ( (lv_op_14_0= ruleREL_OPERATOR ) ) ( (lv_expression_15_0= ruleNumber ) ) ) | ( (lv_expr_16_0= RULE_EXPR ) ) | ( (lv_nodata_17_0= 'unknown' ) ) | ( (lv_star_18_0= '*' ) ) | ( (lv_anything_19_0= '#' ) ) )
            {
            // InternalKim.g:2195:2: ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | ( ( (lv_op_14_0= ruleREL_OPERATOR ) ) ( (lv_expression_15_0= ruleNumber ) ) ) | ( (lv_expr_16_0= RULE_EXPR ) ) | ( (lv_nodata_17_0= 'unknown' ) ) | ( (lv_star_18_0= '*' ) ) | ( (lv_anything_19_0= '#' ) ) )
            int alt49=11;
            alt49 = dfa49.predict(input);
            switch (alt49) {
                case 1 :
                    // InternalKim.g:2196:3: ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) )
                    {
                    // InternalKim.g:2196:3: ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) )
                    int alt46=2;
                    int LA46_0 = input.LA(1);

                    if ( (LA46_0==23) ) {
                        alt46=1;
                    }
                    else if ( (LA46_0==24) ) {
                        alt46=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 46, 0, input);

                        throw nvae;
                    }
                    switch (alt46) {
                        case 1 :
                            // InternalKim.g:2197:4: ( (lv_boolean_0_0= 'true' ) )
                            {
                            // InternalKim.g:2197:4: ( (lv_boolean_0_0= 'true' ) )
                            // InternalKim.g:2198:5: (lv_boolean_0_0= 'true' )
                            {
                            // InternalKim.g:2198:5: (lv_boolean_0_0= 'true' )
                            // InternalKim.g:2199:6: lv_boolean_0_0= 'true'
                            {
                            lv_boolean_0_0=(Token)match(input,23,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_0_0, grammarAccess.getTableClassifierAccess().getBooleanTrueKeyword_0_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getTableClassifierRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_0_0, "true");
                              					
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:2212:4: ( (lv_boolean_1_0= 'false' ) )
                            {
                            // InternalKim.g:2212:4: ( (lv_boolean_1_0= 'false' ) )
                            // InternalKim.g:2213:5: (lv_boolean_1_0= 'false' )
                            {
                            // InternalKim.g:2213:5: (lv_boolean_1_0= 'false' )
                            // InternalKim.g:2214:6: lv_boolean_1_0= 'false'
                            {
                            lv_boolean_1_0=(Token)match(input,24,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_1_0, grammarAccess.getTableClassifierAccess().getBooleanFalseKeyword_0_1_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getTableClassifierRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_1_0, "false");
                              					
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:2228:3: ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? )
                    {
                    // InternalKim.g:2228:3: ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? )
                    // InternalKim.g:2229:4: ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )?
                    {
                    // InternalKim.g:2229:4: ( (lv_int0_2_0= ruleNumber ) )
                    // InternalKim.g:2230:5: (lv_int0_2_0= ruleNumber )
                    {
                    // InternalKim.g:2230:5: (lv_int0_2_0= ruleNumber )
                    // InternalKim.g:2231:6: lv_int0_2_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTableClassifierAccess().getInt0NumberParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_32);
                    lv_int0_2_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTableClassifierRule());
                      						}
                      						set(
                      							current,
                      							"int0",
                      							lv_int0_2_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:2248:4: ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )?
                    int alt47=3;
                    int LA47_0 = input.LA(1);

                    if ( (LA47_0==44) ) {
                        alt47=1;
                    }
                    else if ( (LA47_0==45) ) {
                        alt47=2;
                    }
                    switch (alt47) {
                        case 1 :
                            // InternalKim.g:2249:5: ( (lv_leftLimit_3_0= 'inclusive' ) )
                            {
                            // InternalKim.g:2249:5: ( (lv_leftLimit_3_0= 'inclusive' ) )
                            // InternalKim.g:2250:6: (lv_leftLimit_3_0= 'inclusive' )
                            {
                            // InternalKim.g:2250:6: (lv_leftLimit_3_0= 'inclusive' )
                            // InternalKim.g:2251:7: lv_leftLimit_3_0= 'inclusive'
                            {
                            lv_leftLimit_3_0=(Token)match(input,44,FOLLOW_18); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_leftLimit_3_0, grammarAccess.getTableClassifierAccess().getLeftLimitInclusiveKeyword_1_1_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getTableClassifierRule());
                              							}
                              							setWithLastConsumed(current, "leftLimit", lv_leftLimit_3_0, "inclusive");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:2264:5: otherlv_4= 'exclusive'
                            {
                            otherlv_4=(Token)match(input,45,FOLLOW_18); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_4, grammarAccess.getTableClassifierAccess().getExclusiveKeyword_1_1_1());
                              				
                            }

                            }
                            break;

                    }

                    // InternalKim.g:2269:4: ( ( 'to' )=>otherlv_5= 'to' )
                    // InternalKim.g:2270:5: ( 'to' )=>otherlv_5= 'to'
                    {
                    otherlv_5=(Token)match(input,32,FOLLOW_33); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getTableClassifierAccess().getToKeyword_1_2());
                      				
                    }

                    }

                    // InternalKim.g:2276:4: ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) )
                    // InternalKim.g:2277:5: ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber )
                    {
                    // InternalKim.g:2281:5: (lv_int1_6_0= ruleNumber )
                    // InternalKim.g:2282:6: lv_int1_6_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTableClassifierAccess().getInt1NumberParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FOLLOW_34);
                    lv_int1_6_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTableClassifierRule());
                      						}
                      						set(
                      							current,
                      							"int1",
                      							lv_int1_6_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:2299:4: ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )?
                    int alt48=3;
                    int LA48_0 = input.LA(1);

                    if ( (LA48_0==44) ) {
                        alt48=1;
                    }
                    else if ( (LA48_0==45) ) {
                        alt48=2;
                    }
                    switch (alt48) {
                        case 1 :
                            // InternalKim.g:2300:5: ( (lv_rightLimit_7_0= 'inclusive' ) )
                            {
                            // InternalKim.g:2300:5: ( (lv_rightLimit_7_0= 'inclusive' ) )
                            // InternalKim.g:2301:6: (lv_rightLimit_7_0= 'inclusive' )
                            {
                            // InternalKim.g:2301:6: (lv_rightLimit_7_0= 'inclusive' )
                            // InternalKim.g:2302:7: lv_rightLimit_7_0= 'inclusive'
                            {
                            lv_rightLimit_7_0=(Token)match(input,44,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_rightLimit_7_0, grammarAccess.getTableClassifierAccess().getRightLimitInclusiveKeyword_1_4_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getTableClassifierRule());
                              							}
                              							setWithLastConsumed(current, "rightLimit", lv_rightLimit_7_0, "inclusive");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:2315:5: otherlv_8= 'exclusive'
                            {
                            otherlv_8=(Token)match(input,45,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_8, grammarAccess.getTableClassifierAccess().getExclusiveKeyword_1_4_1());
                              				
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:2322:3: ( (lv_num_9_0= ruleNumber ) )
                    {
                    // InternalKim.g:2322:3: ( (lv_num_9_0= ruleNumber ) )
                    // InternalKim.g:2323:4: (lv_num_9_0= ruleNumber )
                    {
                    // InternalKim.g:2323:4: (lv_num_9_0= ruleNumber )
                    // InternalKim.g:2324:5: lv_num_9_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTableClassifierAccess().getNumNumberParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_num_9_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTableClassifierRule());
                      					}
                      					set(
                      						current,
                      						"num",
                      						lv_num_9_0,
                      						"org.integratedmodelling.kim.Kim.Number");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:2342:3: (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) )
                    {
                    // InternalKim.g:2342:3: (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) )
                    // InternalKim.g:2343:4: otherlv_10= 'in' ( (lv_set_11_0= ruleList ) )
                    {
                    otherlv_10=(Token)match(input,46,FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getTableClassifierAccess().getInKeyword_3_0());
                      			
                    }
                    // InternalKim.g:2347:4: ( (lv_set_11_0= ruleList ) )
                    // InternalKim.g:2348:5: (lv_set_11_0= ruleList )
                    {
                    // InternalKim.g:2348:5: (lv_set_11_0= ruleList )
                    // InternalKim.g:2349:6: lv_set_11_0= ruleList
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTableClassifierAccess().getSetListParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_set_11_0=ruleList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTableClassifierRule());
                      						}
                      						set(
                      							current,
                      							"set",
                      							lv_set_11_0,
                      							"org.integratedmodelling.kim.Kim.List");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:2368:3: ( (lv_string_12_0= RULE_STRING ) )
                    {
                    // InternalKim.g:2368:3: ( (lv_string_12_0= RULE_STRING ) )
                    // InternalKim.g:2369:4: (lv_string_12_0= RULE_STRING )
                    {
                    // InternalKim.g:2369:4: (lv_string_12_0= RULE_STRING )
                    // InternalKim.g:2370:5: lv_string_12_0= RULE_STRING
                    {
                    lv_string_12_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_string_12_0, grammarAccess.getTableClassifierAccess().getStringSTRINGTerminalRuleCall_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getTableClassifierRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"string",
                      						lv_string_12_0,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:2387:3: ( (lv_concept_13_0= ruleConceptDeclaration ) )
                    {
                    // InternalKim.g:2387:3: ( (lv_concept_13_0= ruleConceptDeclaration ) )
                    // InternalKim.g:2388:4: (lv_concept_13_0= ruleConceptDeclaration )
                    {
                    // InternalKim.g:2388:4: (lv_concept_13_0= ruleConceptDeclaration )
                    // InternalKim.g:2389:5: lv_concept_13_0= ruleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTableClassifierAccess().getConceptConceptDeclarationParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_13_0=ruleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTableClassifierRule());
                      					}
                      					set(
                      						current,
                      						"concept",
                      						lv_concept_13_0,
                      						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalKim.g:2407:3: ( ( (lv_op_14_0= ruleREL_OPERATOR ) ) ( (lv_expression_15_0= ruleNumber ) ) )
                    {
                    // InternalKim.g:2407:3: ( ( (lv_op_14_0= ruleREL_OPERATOR ) ) ( (lv_expression_15_0= ruleNumber ) ) )
                    // InternalKim.g:2408:4: ( (lv_op_14_0= ruleREL_OPERATOR ) ) ( (lv_expression_15_0= ruleNumber ) )
                    {
                    // InternalKim.g:2408:4: ( (lv_op_14_0= ruleREL_OPERATOR ) )
                    // InternalKim.g:2409:5: (lv_op_14_0= ruleREL_OPERATOR )
                    {
                    // InternalKim.g:2409:5: (lv_op_14_0= ruleREL_OPERATOR )
                    // InternalKim.g:2410:6: lv_op_14_0= ruleREL_OPERATOR
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTableClassifierAccess().getOpREL_OPERATORParserRuleCall_6_0_0());
                      					
                    }
                    pushFollow(FOLLOW_33);
                    lv_op_14_0=ruleREL_OPERATOR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTableClassifierRule());
                      						}
                      						set(
                      							current,
                      							"op",
                      							lv_op_14_0,
                      							"org.integratedmodelling.kim.Kim.REL_OPERATOR");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:2427:4: ( (lv_expression_15_0= ruleNumber ) )
                    // InternalKim.g:2428:5: (lv_expression_15_0= ruleNumber )
                    {
                    // InternalKim.g:2428:5: (lv_expression_15_0= ruleNumber )
                    // InternalKim.g:2429:6: lv_expression_15_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTableClassifierAccess().getExpressionNumberParserRuleCall_6_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_15_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTableClassifierRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_15_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalKim.g:2448:3: ( (lv_expr_16_0= RULE_EXPR ) )
                    {
                    // InternalKim.g:2448:3: ( (lv_expr_16_0= RULE_EXPR ) )
                    // InternalKim.g:2449:4: (lv_expr_16_0= RULE_EXPR )
                    {
                    // InternalKim.g:2449:4: (lv_expr_16_0= RULE_EXPR )
                    // InternalKim.g:2450:5: lv_expr_16_0= RULE_EXPR
                    {
                    lv_expr_16_0=(Token)match(input,RULE_EXPR,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_expr_16_0, grammarAccess.getTableClassifierAccess().getExprEXPRTerminalRuleCall_7_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getTableClassifierRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"expr",
                      						lv_expr_16_0,
                      						"org.integratedmodelling.kim.Kim.EXPR");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 9 :
                    // InternalKim.g:2467:3: ( (lv_nodata_17_0= 'unknown' ) )
                    {
                    // InternalKim.g:2467:3: ( (lv_nodata_17_0= 'unknown' ) )
                    // InternalKim.g:2468:4: (lv_nodata_17_0= 'unknown' )
                    {
                    // InternalKim.g:2468:4: (lv_nodata_17_0= 'unknown' )
                    // InternalKim.g:2469:5: lv_nodata_17_0= 'unknown'
                    {
                    lv_nodata_17_0=(Token)match(input,47,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_nodata_17_0, grammarAccess.getTableClassifierAccess().getNodataUnknownKeyword_8_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getTableClassifierRule());
                      					}
                      					setWithLastConsumed(current, "nodata", lv_nodata_17_0, "unknown");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 10 :
                    // InternalKim.g:2482:3: ( (lv_star_18_0= '*' ) )
                    {
                    // InternalKim.g:2482:3: ( (lv_star_18_0= '*' ) )
                    // InternalKim.g:2483:4: (lv_star_18_0= '*' )
                    {
                    // InternalKim.g:2483:4: (lv_star_18_0= '*' )
                    // InternalKim.g:2484:5: lv_star_18_0= '*'
                    {
                    lv_star_18_0=(Token)match(input,36,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_star_18_0, grammarAccess.getTableClassifierAccess().getStarAsteriskKeyword_9_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getTableClassifierRule());
                      					}
                      					setWithLastConsumed(current, "star", true, "*");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 11 :
                    // InternalKim.g:2497:3: ( (lv_anything_19_0= '#' ) )
                    {
                    // InternalKim.g:2497:3: ( (lv_anything_19_0= '#' ) )
                    // InternalKim.g:2498:4: (lv_anything_19_0= '#' )
                    {
                    // InternalKim.g:2498:4: (lv_anything_19_0= '#' )
                    // InternalKim.g:2499:5: lv_anything_19_0= '#'
                    {
                    lv_anything_19_0=(Token)match(input,51,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_anything_19_0, grammarAccess.getTableClassifierAccess().getAnythingNumberSignKeyword_10_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getTableClassifierRule());
                      					}
                      					setWithLastConsumed(current, "anything", true, "#");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTableClassifier"


    // $ANTLR start "entryRuleActionSpecification"
    // InternalKim.g:2515:1: entryRuleActionSpecification returns [EObject current=null] : iv_ruleActionSpecification= ruleActionSpecification EOF ;
    public final EObject entryRuleActionSpecification() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleActionSpecification = null;


        try {
            // InternalKim.g:2515:60: (iv_ruleActionSpecification= ruleActionSpecification EOF )
            // InternalKim.g:2516:2: iv_ruleActionSpecification= ruleActionSpecification EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getActionSpecificationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleActionSpecification=ruleActionSpecification();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleActionSpecification; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleActionSpecification"


    // $ANTLR start "ruleActionSpecification"
    // InternalKim.g:2522:1: ruleActionSpecification returns [EObject current=null] : ( ( ( (lv_integrated_0_0= 'aggregated' ) )? otherlv_1= 'over' ( (lv_domain_2_0= ruleFunctionOrID ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_domain_4_0= ruleFunctionOrID ) ) )* ( ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )* )? ) | ( ( (lv_trigger_8_0= 'on' ) ) ( ( (lv_initialization_9_0= 'definition' ) ) | ( (lv_resolution_10_0= 'resolution' ) ) | ( (lv_instantiation_11_0= 'instantiation' ) ) | ( (lv_termination_12_0= 'termination' ) ) | ( (lv_stateInitialization_13_0= 'initialization' ) ) | ( ( (lv_event_14_0= ruleConceptDeclaration ) ) (otherlv_15= 'in' ( ( (lv_anyContextEvent_16_0= 'context' ) ) | ( ( (lv_relatedEventContext_17_0= 'related' ) ) ( (lv_eventContext_18_0= ruleConceptDeclaration ) ) ) ) )? ) ) ( (lv_parameters_19_0= ruleList ) )? ( ( (lv_actions_20_0= ruleAction ) ) ( ( ( ',' )=>otherlv_21= ',' ) ( (lv_actions_22_0= ruleAction ) ) )* )? ) ) ;
    public final EObject ruleActionSpecification() throws RecognitionException {
        EObject current = null;

        Token lv_integrated_0_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_6=null;
        Token lv_trigger_8_0=null;
        Token lv_initialization_9_0=null;
        Token lv_resolution_10_0=null;
        Token lv_instantiation_11_0=null;
        Token lv_termination_12_0=null;
        Token lv_stateInitialization_13_0=null;
        Token otherlv_15=null;
        Token lv_anyContextEvent_16_0=null;
        Token lv_relatedEventContext_17_0=null;
        Token otherlv_21=null;
        EObject lv_domain_2_0 = null;

        EObject lv_domain_4_0 = null;

        EObject lv_actions_5_0 = null;

        EObject lv_actions_7_0 = null;

        EObject lv_event_14_0 = null;

        EObject lv_eventContext_18_0 = null;

        EObject lv_parameters_19_0 = null;

        EObject lv_actions_20_0 = null;

        EObject lv_actions_22_0 = null;



        	enterRule();

        try {
            // InternalKim.g:2528:2: ( ( ( ( (lv_integrated_0_0= 'aggregated' ) )? otherlv_1= 'over' ( (lv_domain_2_0= ruleFunctionOrID ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_domain_4_0= ruleFunctionOrID ) ) )* ( ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )* )? ) | ( ( (lv_trigger_8_0= 'on' ) ) ( ( (lv_initialization_9_0= 'definition' ) ) | ( (lv_resolution_10_0= 'resolution' ) ) | ( (lv_instantiation_11_0= 'instantiation' ) ) | ( (lv_termination_12_0= 'termination' ) ) | ( (lv_stateInitialization_13_0= 'initialization' ) ) | ( ( (lv_event_14_0= ruleConceptDeclaration ) ) (otherlv_15= 'in' ( ( (lv_anyContextEvent_16_0= 'context' ) ) | ( ( (lv_relatedEventContext_17_0= 'related' ) ) ( (lv_eventContext_18_0= ruleConceptDeclaration ) ) ) ) )? ) ) ( (lv_parameters_19_0= ruleList ) )? ( ( (lv_actions_20_0= ruleAction ) ) ( ( ( ',' )=>otherlv_21= ',' ) ( (lv_actions_22_0= ruleAction ) ) )* )? ) ) )
            // InternalKim.g:2529:2: ( ( ( (lv_integrated_0_0= 'aggregated' ) )? otherlv_1= 'over' ( (lv_domain_2_0= ruleFunctionOrID ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_domain_4_0= ruleFunctionOrID ) ) )* ( ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )* )? ) | ( ( (lv_trigger_8_0= 'on' ) ) ( ( (lv_initialization_9_0= 'definition' ) ) | ( (lv_resolution_10_0= 'resolution' ) ) | ( (lv_instantiation_11_0= 'instantiation' ) ) | ( (lv_termination_12_0= 'termination' ) ) | ( (lv_stateInitialization_13_0= 'initialization' ) ) | ( ( (lv_event_14_0= ruleConceptDeclaration ) ) (otherlv_15= 'in' ( ( (lv_anyContextEvent_16_0= 'context' ) ) | ( ( (lv_relatedEventContext_17_0= 'related' ) ) ( (lv_eventContext_18_0= ruleConceptDeclaration ) ) ) ) )? ) ) ( (lv_parameters_19_0= ruleList ) )? ( ( (lv_actions_20_0= ruleAction ) ) ( ( ( ',' )=>otherlv_21= ',' ) ( (lv_actions_22_0= ruleAction ) ) )* )? ) )
            {
            // InternalKim.g:2529:2: ( ( ( (lv_integrated_0_0= 'aggregated' ) )? otherlv_1= 'over' ( (lv_domain_2_0= ruleFunctionOrID ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_domain_4_0= ruleFunctionOrID ) ) )* ( ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )* )? ) | ( ( (lv_trigger_8_0= 'on' ) ) ( ( (lv_initialization_9_0= 'definition' ) ) | ( (lv_resolution_10_0= 'resolution' ) ) | ( (lv_instantiation_11_0= 'instantiation' ) ) | ( (lv_termination_12_0= 'termination' ) ) | ( (lv_stateInitialization_13_0= 'initialization' ) ) | ( ( (lv_event_14_0= ruleConceptDeclaration ) ) (otherlv_15= 'in' ( ( (lv_anyContextEvent_16_0= 'context' ) ) | ( ( (lv_relatedEventContext_17_0= 'related' ) ) ( (lv_eventContext_18_0= ruleConceptDeclaration ) ) ) ) )? ) ) ( (lv_parameters_19_0= ruleList ) )? ( ( (lv_actions_20_0= ruleAction ) ) ( ( ( ',' )=>otherlv_21= ',' ) ( (lv_actions_22_0= ruleAction ) ) )* )? ) )
            int alt60=2;
            int LA60_0 = input.LA(1);

            if ( ((LA60_0>=52 && LA60_0<=53)) ) {
                alt60=1;
            }
            else if ( (LA60_0==54) ) {
                alt60=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 60, 0, input);

                throw nvae;
            }
            switch (alt60) {
                case 1 :
                    // InternalKim.g:2530:3: ( ( (lv_integrated_0_0= 'aggregated' ) )? otherlv_1= 'over' ( (lv_domain_2_0= ruleFunctionOrID ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_domain_4_0= ruleFunctionOrID ) ) )* ( ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )* )? )
                    {
                    // InternalKim.g:2530:3: ( ( (lv_integrated_0_0= 'aggregated' ) )? otherlv_1= 'over' ( (lv_domain_2_0= ruleFunctionOrID ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_domain_4_0= ruleFunctionOrID ) ) )* ( ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )* )? )
                    // InternalKim.g:2531:4: ( (lv_integrated_0_0= 'aggregated' ) )? otherlv_1= 'over' ( (lv_domain_2_0= ruleFunctionOrID ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_domain_4_0= ruleFunctionOrID ) ) )* ( ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )* )?
                    {
                    // InternalKim.g:2531:4: ( (lv_integrated_0_0= 'aggregated' ) )?
                    int alt50=2;
                    int LA50_0 = input.LA(1);

                    if ( (LA50_0==52) ) {
                        alt50=1;
                    }
                    switch (alt50) {
                        case 1 :
                            // InternalKim.g:2532:5: (lv_integrated_0_0= 'aggregated' )
                            {
                            // InternalKim.g:2532:5: (lv_integrated_0_0= 'aggregated' )
                            // InternalKim.g:2533:6: lv_integrated_0_0= 'aggregated'
                            {
                            lv_integrated_0_0=(Token)match(input,52,FOLLOW_39); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_integrated_0_0, grammarAccess.getActionSpecificationAccess().getIntegratedAggregatedKeyword_0_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getActionSpecificationRule());
                              						}
                              						setWithLastConsumed(current, "integrated", true, "aggregated");
                              					
                            }

                            }


                            }
                            break;

                    }

                    otherlv_1=(Token)match(input,53,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getActionSpecificationAccess().getOverKeyword_0_1());
                      			
                    }
                    // InternalKim.g:2549:4: ( (lv_domain_2_0= ruleFunctionOrID ) )
                    // InternalKim.g:2550:5: (lv_domain_2_0= ruleFunctionOrID )
                    {
                    // InternalKim.g:2550:5: (lv_domain_2_0= ruleFunctionOrID )
                    // InternalKim.g:2551:6: lv_domain_2_0= ruleFunctionOrID
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getActionSpecificationAccess().getDomainFunctionOrIDParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_40);
                    lv_domain_2_0=ruleFunctionOrID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
                      						}
                      						add(
                      							current,
                      							"domain",
                      							lv_domain_2_0,
                      							"org.integratedmodelling.kim.Kim.FunctionOrID");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:2568:4: ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_domain_4_0= ruleFunctionOrID ) ) )*
                    loop51:
                    do {
                        int alt51=2;
                        int LA51_0 = input.LA(1);

                        if ( (LA51_0==22) ) {
                            alt51=1;
                        }


                        switch (alt51) {
                    	case 1 :
                    	    // InternalKim.g:2569:5: ( ( ',' )=>otherlv_3= ',' ) ( (lv_domain_4_0= ruleFunctionOrID ) )
                    	    {
                    	    // InternalKim.g:2569:5: ( ( ',' )=>otherlv_3= ',' )
                    	    // InternalKim.g:2570:6: ( ',' )=>otherlv_3= ','
                    	    {
                    	    otherlv_3=(Token)match(input,22,FOLLOW_19); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_3, grammarAccess.getActionSpecificationAccess().getCommaKeyword_0_3_0());
                    	      					
                    	    }

                    	    }

                    	    // InternalKim.g:2576:5: ( (lv_domain_4_0= ruleFunctionOrID ) )
                    	    // InternalKim.g:2577:6: (lv_domain_4_0= ruleFunctionOrID )
                    	    {
                    	    // InternalKim.g:2577:6: (lv_domain_4_0= ruleFunctionOrID )
                    	    // InternalKim.g:2578:7: lv_domain_4_0= ruleFunctionOrID
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getActionSpecificationAccess().getDomainFunctionOrIDParserRuleCall_0_3_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_40);
                    	    lv_domain_4_0=ruleFunctionOrID();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"domain",
                    	      								lv_domain_4_0,
                    	      								"org.integratedmodelling.kim.Kim.FunctionOrID");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop51;
                        }
                    } while (true);

                    // InternalKim.g:2596:4: ( ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )* )?
                    int alt53=2;
                    int LA53_0 = input.LA(1);

                    if ( ((LA53_0>=62 && LA53_0<=66)) ) {
                        alt53=1;
                    }
                    switch (alt53) {
                        case 1 :
                            // InternalKim.g:2597:5: ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )*
                            {
                            // InternalKim.g:2597:5: ( (lv_actions_5_0= ruleAction ) )
                            // InternalKim.g:2598:6: (lv_actions_5_0= ruleAction )
                            {
                            // InternalKim.g:2598:6: (lv_actions_5_0= ruleAction )
                            // InternalKim.g:2599:7: lv_actions_5_0= ruleAction
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getActionSpecificationAccess().getActionsActionParserRuleCall_0_4_0_0());
                              						
                            }
                            pushFollow(FOLLOW_29);
                            lv_actions_5_0=ruleAction();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
                              							}
                              							add(
                              								current,
                              								"actions",
                              								lv_actions_5_0,
                              								"org.integratedmodelling.kim.Kim.Action");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            // InternalKim.g:2616:5: ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )*
                            loop52:
                            do {
                                int alt52=2;
                                int LA52_0 = input.LA(1);

                                if ( (LA52_0==22) ) {
                                    alt52=1;
                                }


                                switch (alt52) {
                            	case 1 :
                            	    // InternalKim.g:2617:6: ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) )
                            	    {
                            	    // InternalKim.g:2617:6: ( ( ',' )=>otherlv_6= ',' )
                            	    // InternalKim.g:2618:7: ( ',' )=>otherlv_6= ','
                            	    {
                            	    otherlv_6=(Token)match(input,22,FOLLOW_41); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_6, grammarAccess.getActionSpecificationAccess().getCommaKeyword_0_4_1_0());
                            	      						
                            	    }

                            	    }

                            	    // InternalKim.g:2624:6: ( (lv_actions_7_0= ruleAction ) )
                            	    // InternalKim.g:2625:7: (lv_actions_7_0= ruleAction )
                            	    {
                            	    // InternalKim.g:2625:7: (lv_actions_7_0= ruleAction )
                            	    // InternalKim.g:2626:8: lv_actions_7_0= ruleAction
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getActionSpecificationAccess().getActionsActionParserRuleCall_0_4_1_1_0());
                            	      							
                            	    }
                            	    pushFollow(FOLLOW_29);
                            	    lv_actions_7_0=ruleAction();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"actions",
                            	      									lv_actions_7_0,
                            	      									"org.integratedmodelling.kim.Kim.Action");
                            	      								afterParserOrEnumRuleCall();
                            	      							
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop52;
                                }
                            } while (true);


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:2647:3: ( ( (lv_trigger_8_0= 'on' ) ) ( ( (lv_initialization_9_0= 'definition' ) ) | ( (lv_resolution_10_0= 'resolution' ) ) | ( (lv_instantiation_11_0= 'instantiation' ) ) | ( (lv_termination_12_0= 'termination' ) ) | ( (lv_stateInitialization_13_0= 'initialization' ) ) | ( ( (lv_event_14_0= ruleConceptDeclaration ) ) (otherlv_15= 'in' ( ( (lv_anyContextEvent_16_0= 'context' ) ) | ( ( (lv_relatedEventContext_17_0= 'related' ) ) ( (lv_eventContext_18_0= ruleConceptDeclaration ) ) ) ) )? ) ) ( (lv_parameters_19_0= ruleList ) )? ( ( (lv_actions_20_0= ruleAction ) ) ( ( ( ',' )=>otherlv_21= ',' ) ( (lv_actions_22_0= ruleAction ) ) )* )? )
                    {
                    // InternalKim.g:2647:3: ( ( (lv_trigger_8_0= 'on' ) ) ( ( (lv_initialization_9_0= 'definition' ) ) | ( (lv_resolution_10_0= 'resolution' ) ) | ( (lv_instantiation_11_0= 'instantiation' ) ) | ( (lv_termination_12_0= 'termination' ) ) | ( (lv_stateInitialization_13_0= 'initialization' ) ) | ( ( (lv_event_14_0= ruleConceptDeclaration ) ) (otherlv_15= 'in' ( ( (lv_anyContextEvent_16_0= 'context' ) ) | ( ( (lv_relatedEventContext_17_0= 'related' ) ) ( (lv_eventContext_18_0= ruleConceptDeclaration ) ) ) ) )? ) ) ( (lv_parameters_19_0= ruleList ) )? ( ( (lv_actions_20_0= ruleAction ) ) ( ( ( ',' )=>otherlv_21= ',' ) ( (lv_actions_22_0= ruleAction ) ) )* )? )
                    // InternalKim.g:2648:4: ( (lv_trigger_8_0= 'on' ) ) ( ( (lv_initialization_9_0= 'definition' ) ) | ( (lv_resolution_10_0= 'resolution' ) ) | ( (lv_instantiation_11_0= 'instantiation' ) ) | ( (lv_termination_12_0= 'termination' ) ) | ( (lv_stateInitialization_13_0= 'initialization' ) ) | ( ( (lv_event_14_0= ruleConceptDeclaration ) ) (otherlv_15= 'in' ( ( (lv_anyContextEvent_16_0= 'context' ) ) | ( ( (lv_relatedEventContext_17_0= 'related' ) ) ( (lv_eventContext_18_0= ruleConceptDeclaration ) ) ) ) )? ) ) ( (lv_parameters_19_0= ruleList ) )? ( ( (lv_actions_20_0= ruleAction ) ) ( ( ( ',' )=>otherlv_21= ',' ) ( (lv_actions_22_0= ruleAction ) ) )* )?
                    {
                    // InternalKim.g:2648:4: ( (lv_trigger_8_0= 'on' ) )
                    // InternalKim.g:2649:5: (lv_trigger_8_0= 'on' )
                    {
                    // InternalKim.g:2649:5: (lv_trigger_8_0= 'on' )
                    // InternalKim.g:2650:6: lv_trigger_8_0= 'on'
                    {
                    lv_trigger_8_0=(Token)match(input,54,FOLLOW_42); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_trigger_8_0, grammarAccess.getActionSpecificationAccess().getTriggerOnKeyword_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getActionSpecificationRule());
                      						}
                      						setWithLastConsumed(current, "trigger", true, "on");
                      					
                    }

                    }


                    }

                    // InternalKim.g:2662:4: ( ( (lv_initialization_9_0= 'definition' ) ) | ( (lv_resolution_10_0= 'resolution' ) ) | ( (lv_instantiation_11_0= 'instantiation' ) ) | ( (lv_termination_12_0= 'termination' ) ) | ( (lv_stateInitialization_13_0= 'initialization' ) ) | ( ( (lv_event_14_0= ruleConceptDeclaration ) ) (otherlv_15= 'in' ( ( (lv_anyContextEvent_16_0= 'context' ) ) | ( ( (lv_relatedEventContext_17_0= 'related' ) ) ( (lv_eventContext_18_0= ruleConceptDeclaration ) ) ) ) )? ) )
                    int alt56=6;
                    switch ( input.LA(1) ) {
                    case 55:
                        {
                        alt56=1;
                        }
                        break;
                    case 56:
                        {
                        alt56=2;
                        }
                        break;
                    case 57:
                        {
                        alt56=3;
                        }
                        break;
                    case 58:
                        {
                        alt56=4;
                        }
                        break;
                    case 59:
                        {
                        alt56=5;
                        }
                        break;
                    case RULE_LOWERCASE_ID:
                    case RULE_STRING:
                    case RULE_CAMELCASE_ID:
                    case 34:
                    case 108:
                    case 109:
                    case 116:
                    case 117:
                    case 119:
                    case 120:
                    case 121:
                    case 122:
                    case 123:
                    case 124:
                    case 125:
                    case 126:
                    case 127:
                    case 128:
                    case 129:
                    case 130:
                        {
                        alt56=6;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 56, 0, input);

                        throw nvae;
                    }

                    switch (alt56) {
                        case 1 :
                            // InternalKim.g:2663:5: ( (lv_initialization_9_0= 'definition' ) )
                            {
                            // InternalKim.g:2663:5: ( (lv_initialization_9_0= 'definition' ) )
                            // InternalKim.g:2664:6: (lv_initialization_9_0= 'definition' )
                            {
                            // InternalKim.g:2664:6: (lv_initialization_9_0= 'definition' )
                            // InternalKim.g:2665:7: lv_initialization_9_0= 'definition'
                            {
                            lv_initialization_9_0=(Token)match(input,55,FOLLOW_43); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_initialization_9_0, grammarAccess.getActionSpecificationAccess().getInitializationDefinitionKeyword_1_1_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getActionSpecificationRule());
                              							}
                              							setWithLastConsumed(current, "initialization", true, "definition");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:2678:5: ( (lv_resolution_10_0= 'resolution' ) )
                            {
                            // InternalKim.g:2678:5: ( (lv_resolution_10_0= 'resolution' ) )
                            // InternalKim.g:2679:6: (lv_resolution_10_0= 'resolution' )
                            {
                            // InternalKim.g:2679:6: (lv_resolution_10_0= 'resolution' )
                            // InternalKim.g:2680:7: lv_resolution_10_0= 'resolution'
                            {
                            lv_resolution_10_0=(Token)match(input,56,FOLLOW_43); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_resolution_10_0, grammarAccess.getActionSpecificationAccess().getResolutionResolutionKeyword_1_1_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getActionSpecificationRule());
                              							}
                              							setWithLastConsumed(current, "resolution", true, "resolution");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 3 :
                            // InternalKim.g:2693:5: ( (lv_instantiation_11_0= 'instantiation' ) )
                            {
                            // InternalKim.g:2693:5: ( (lv_instantiation_11_0= 'instantiation' ) )
                            // InternalKim.g:2694:6: (lv_instantiation_11_0= 'instantiation' )
                            {
                            // InternalKim.g:2694:6: (lv_instantiation_11_0= 'instantiation' )
                            // InternalKim.g:2695:7: lv_instantiation_11_0= 'instantiation'
                            {
                            lv_instantiation_11_0=(Token)match(input,57,FOLLOW_43); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_instantiation_11_0, grammarAccess.getActionSpecificationAccess().getInstantiationInstantiationKeyword_1_1_2_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getActionSpecificationRule());
                              							}
                              							setWithLastConsumed(current, "instantiation", true, "instantiation");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 4 :
                            // InternalKim.g:2708:5: ( (lv_termination_12_0= 'termination' ) )
                            {
                            // InternalKim.g:2708:5: ( (lv_termination_12_0= 'termination' ) )
                            // InternalKim.g:2709:6: (lv_termination_12_0= 'termination' )
                            {
                            // InternalKim.g:2709:6: (lv_termination_12_0= 'termination' )
                            // InternalKim.g:2710:7: lv_termination_12_0= 'termination'
                            {
                            lv_termination_12_0=(Token)match(input,58,FOLLOW_43); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_termination_12_0, grammarAccess.getActionSpecificationAccess().getTerminationTerminationKeyword_1_1_3_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getActionSpecificationRule());
                              							}
                              							setWithLastConsumed(current, "termination", true, "termination");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 5 :
                            // InternalKim.g:2723:5: ( (lv_stateInitialization_13_0= 'initialization' ) )
                            {
                            // InternalKim.g:2723:5: ( (lv_stateInitialization_13_0= 'initialization' ) )
                            // InternalKim.g:2724:6: (lv_stateInitialization_13_0= 'initialization' )
                            {
                            // InternalKim.g:2724:6: (lv_stateInitialization_13_0= 'initialization' )
                            // InternalKim.g:2725:7: lv_stateInitialization_13_0= 'initialization'
                            {
                            lv_stateInitialization_13_0=(Token)match(input,59,FOLLOW_43); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_stateInitialization_13_0, grammarAccess.getActionSpecificationAccess().getStateInitializationInitializationKeyword_1_1_4_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getActionSpecificationRule());
                              							}
                              							setWithLastConsumed(current, "stateInitialization", true, "initialization");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 6 :
                            // InternalKim.g:2738:5: ( ( (lv_event_14_0= ruleConceptDeclaration ) ) (otherlv_15= 'in' ( ( (lv_anyContextEvent_16_0= 'context' ) ) | ( ( (lv_relatedEventContext_17_0= 'related' ) ) ( (lv_eventContext_18_0= ruleConceptDeclaration ) ) ) ) )? )
                            {
                            // InternalKim.g:2738:5: ( ( (lv_event_14_0= ruleConceptDeclaration ) ) (otherlv_15= 'in' ( ( (lv_anyContextEvent_16_0= 'context' ) ) | ( ( (lv_relatedEventContext_17_0= 'related' ) ) ( (lv_eventContext_18_0= ruleConceptDeclaration ) ) ) ) )? )
                            // InternalKim.g:2739:6: ( (lv_event_14_0= ruleConceptDeclaration ) ) (otherlv_15= 'in' ( ( (lv_anyContextEvent_16_0= 'context' ) ) | ( ( (lv_relatedEventContext_17_0= 'related' ) ) ( (lv_eventContext_18_0= ruleConceptDeclaration ) ) ) ) )?
                            {
                            // InternalKim.g:2739:6: ( (lv_event_14_0= ruleConceptDeclaration ) )
                            // InternalKim.g:2740:7: (lv_event_14_0= ruleConceptDeclaration )
                            {
                            // InternalKim.g:2740:7: (lv_event_14_0= ruleConceptDeclaration )
                            // InternalKim.g:2741:8: lv_event_14_0= ruleConceptDeclaration
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getActionSpecificationAccess().getEventConceptDeclarationParserRuleCall_1_1_5_0_0());
                              							
                            }
                            pushFollow(FOLLOW_44);
                            lv_event_14_0=ruleConceptDeclaration();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
                              								}
                              								set(
                              									current,
                              									"event",
                              									lv_event_14_0,
                              									"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalKim.g:2758:6: (otherlv_15= 'in' ( ( (lv_anyContextEvent_16_0= 'context' ) ) | ( ( (lv_relatedEventContext_17_0= 'related' ) ) ( (lv_eventContext_18_0= ruleConceptDeclaration ) ) ) ) )?
                            int alt55=2;
                            int LA55_0 = input.LA(1);

                            if ( (LA55_0==46) ) {
                                alt55=1;
                            }
                            switch (alt55) {
                                case 1 :
                                    // InternalKim.g:2759:7: otherlv_15= 'in' ( ( (lv_anyContextEvent_16_0= 'context' ) ) | ( ( (lv_relatedEventContext_17_0= 'related' ) ) ( (lv_eventContext_18_0= ruleConceptDeclaration ) ) ) )
                                    {
                                    otherlv_15=(Token)match(input,46,FOLLOW_45); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(otherlv_15, grammarAccess.getActionSpecificationAccess().getInKeyword_1_1_5_1_0());
                                      						
                                    }
                                    // InternalKim.g:2763:7: ( ( (lv_anyContextEvent_16_0= 'context' ) ) | ( ( (lv_relatedEventContext_17_0= 'related' ) ) ( (lv_eventContext_18_0= ruleConceptDeclaration ) ) ) )
                                    int alt54=2;
                                    int LA54_0 = input.LA(1);

                                    if ( (LA54_0==60) ) {
                                        alt54=1;
                                    }
                                    else if ( (LA54_0==61) ) {
                                        alt54=2;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return current;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 54, 0, input);

                                        throw nvae;
                                    }
                                    switch (alt54) {
                                        case 1 :
                                            // InternalKim.g:2764:8: ( (lv_anyContextEvent_16_0= 'context' ) )
                                            {
                                            // InternalKim.g:2764:8: ( (lv_anyContextEvent_16_0= 'context' ) )
                                            // InternalKim.g:2765:9: (lv_anyContextEvent_16_0= 'context' )
                                            {
                                            // InternalKim.g:2765:9: (lv_anyContextEvent_16_0= 'context' )
                                            // InternalKim.g:2766:10: lv_anyContextEvent_16_0= 'context'
                                            {
                                            lv_anyContextEvent_16_0=(Token)match(input,60,FOLLOW_43); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              										newLeafNode(lv_anyContextEvent_16_0, grammarAccess.getActionSpecificationAccess().getAnyContextEventContextKeyword_1_1_5_1_1_0_0());
                                              									
                                            }
                                            if ( state.backtracking==0 ) {

                                              										if (current==null) {
                                              											current = createModelElement(grammarAccess.getActionSpecificationRule());
                                              										}
                                              										setWithLastConsumed(current, "anyContextEvent", true, "context");
                                              									
                                            }

                                            }


                                            }


                                            }
                                            break;
                                        case 2 :
                                            // InternalKim.g:2779:8: ( ( (lv_relatedEventContext_17_0= 'related' ) ) ( (lv_eventContext_18_0= ruleConceptDeclaration ) ) )
                                            {
                                            // InternalKim.g:2779:8: ( ( (lv_relatedEventContext_17_0= 'related' ) ) ( (lv_eventContext_18_0= ruleConceptDeclaration ) ) )
                                            // InternalKim.g:2780:9: ( (lv_relatedEventContext_17_0= 'related' ) ) ( (lv_eventContext_18_0= ruleConceptDeclaration ) )
                                            {
                                            // InternalKim.g:2780:9: ( (lv_relatedEventContext_17_0= 'related' ) )
                                            // InternalKim.g:2781:10: (lv_relatedEventContext_17_0= 'related' )
                                            {
                                            // InternalKim.g:2781:10: (lv_relatedEventContext_17_0= 'related' )
                                            // InternalKim.g:2782:11: lv_relatedEventContext_17_0= 'related'
                                            {
                                            lv_relatedEventContext_17_0=(Token)match(input,61,FOLLOW_16); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              											newLeafNode(lv_relatedEventContext_17_0, grammarAccess.getActionSpecificationAccess().getRelatedEventContextRelatedKeyword_1_1_5_1_1_1_0_0());
                                              										
                                            }
                                            if ( state.backtracking==0 ) {

                                              											if (current==null) {
                                              												current = createModelElement(grammarAccess.getActionSpecificationRule());
                                              											}
                                              											setWithLastConsumed(current, "relatedEventContext", true, "related");
                                              										
                                            }

                                            }


                                            }

                                            // InternalKim.g:2794:9: ( (lv_eventContext_18_0= ruleConceptDeclaration ) )
                                            // InternalKim.g:2795:10: (lv_eventContext_18_0= ruleConceptDeclaration )
                                            {
                                            // InternalKim.g:2795:10: (lv_eventContext_18_0= ruleConceptDeclaration )
                                            // InternalKim.g:2796:11: lv_eventContext_18_0= ruleConceptDeclaration
                                            {
                                            if ( state.backtracking==0 ) {

                                              											newCompositeNode(grammarAccess.getActionSpecificationAccess().getEventContextConceptDeclarationParserRuleCall_1_1_5_1_1_1_1_0());
                                              										
                                            }
                                            pushFollow(FOLLOW_43);
                                            lv_eventContext_18_0=ruleConceptDeclaration();

                                            state._fsp--;
                                            if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              											if (current==null) {
                                              												current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
                                              											}
                                              											set(
                                              												current,
                                              												"eventContext",
                                              												lv_eventContext_18_0,
                                              												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                                              											afterParserOrEnumRuleCall();
                                              										
                                            }

                                            }


                                            }


                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:2818:4: ( (lv_parameters_19_0= ruleList ) )?
                    int alt57=2;
                    alt57 = dfa57.predict(input);
                    switch (alt57) {
                        case 1 :
                            // InternalKim.g:2819:5: (lv_parameters_19_0= ruleList )
                            {
                            // InternalKim.g:2819:5: (lv_parameters_19_0= ruleList )
                            // InternalKim.g:2820:6: lv_parameters_19_0= ruleList
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getActionSpecificationAccess().getParametersListParserRuleCall_1_2_0());
                              					
                            }
                            pushFollow(FOLLOW_46);
                            lv_parameters_19_0=ruleList();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
                              						}
                              						set(
                              							current,
                              							"parameters",
                              							lv_parameters_19_0,
                              							"org.integratedmodelling.kim.Kim.List");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalKim.g:2837:4: ( ( (lv_actions_20_0= ruleAction ) ) ( ( ( ',' )=>otherlv_21= ',' ) ( (lv_actions_22_0= ruleAction ) ) )* )?
                    int alt59=2;
                    int LA59_0 = input.LA(1);

                    if ( ((LA59_0>=62 && LA59_0<=66)) ) {
                        alt59=1;
                    }
                    switch (alt59) {
                        case 1 :
                            // InternalKim.g:2838:5: ( (lv_actions_20_0= ruleAction ) ) ( ( ( ',' )=>otherlv_21= ',' ) ( (lv_actions_22_0= ruleAction ) ) )*
                            {
                            // InternalKim.g:2838:5: ( (lv_actions_20_0= ruleAction ) )
                            // InternalKim.g:2839:6: (lv_actions_20_0= ruleAction )
                            {
                            // InternalKim.g:2839:6: (lv_actions_20_0= ruleAction )
                            // InternalKim.g:2840:7: lv_actions_20_0= ruleAction
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getActionSpecificationAccess().getActionsActionParserRuleCall_1_3_0_0());
                              						
                            }
                            pushFollow(FOLLOW_29);
                            lv_actions_20_0=ruleAction();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
                              							}
                              							add(
                              								current,
                              								"actions",
                              								lv_actions_20_0,
                              								"org.integratedmodelling.kim.Kim.Action");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            // InternalKim.g:2857:5: ( ( ( ',' )=>otherlv_21= ',' ) ( (lv_actions_22_0= ruleAction ) ) )*
                            loop58:
                            do {
                                int alt58=2;
                                int LA58_0 = input.LA(1);

                                if ( (LA58_0==22) ) {
                                    alt58=1;
                                }


                                switch (alt58) {
                            	case 1 :
                            	    // InternalKim.g:2858:6: ( ( ',' )=>otherlv_21= ',' ) ( (lv_actions_22_0= ruleAction ) )
                            	    {
                            	    // InternalKim.g:2858:6: ( ( ',' )=>otherlv_21= ',' )
                            	    // InternalKim.g:2859:7: ( ',' )=>otherlv_21= ','
                            	    {
                            	    otherlv_21=(Token)match(input,22,FOLLOW_41); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_21, grammarAccess.getActionSpecificationAccess().getCommaKeyword_1_3_1_0());
                            	      						
                            	    }

                            	    }

                            	    // InternalKim.g:2865:6: ( (lv_actions_22_0= ruleAction ) )
                            	    // InternalKim.g:2866:7: (lv_actions_22_0= ruleAction )
                            	    {
                            	    // InternalKim.g:2866:7: (lv_actions_22_0= ruleAction )
                            	    // InternalKim.g:2867:8: lv_actions_22_0= ruleAction
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getActionSpecificationAccess().getActionsActionParserRuleCall_1_3_1_1_0());
                            	      							
                            	    }
                            	    pushFollow(FOLLOW_29);
                            	    lv_actions_22_0=ruleAction();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"actions",
                            	      									lv_actions_22_0,
                            	      									"org.integratedmodelling.kim.Kim.Action");
                            	      								afterParserOrEnumRuleCall();
                            	      							
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop58;
                                }
                            } while (true);


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleActionSpecification"


    // $ANTLR start "entryRuleFunctionOrID"
    // InternalKim.g:2891:1: entryRuleFunctionOrID returns [EObject current=null] : iv_ruleFunctionOrID= ruleFunctionOrID EOF ;
    public final EObject entryRuleFunctionOrID() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionOrID = null;


        try {
            // InternalKim.g:2891:53: (iv_ruleFunctionOrID= ruleFunctionOrID EOF )
            // InternalKim.g:2892:2: iv_ruleFunctionOrID= ruleFunctionOrID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionOrIDRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunctionOrID=ruleFunctionOrID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionOrID; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionOrID"


    // $ANTLR start "ruleFunctionOrID"
    // InternalKim.g:2898:1: ruleFunctionOrID returns [EObject current=null] : ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId ) ) ) ) ;
    public final EObject ruleFunctionOrID() throws RecognitionException {
        EObject current = null;

        Token lv_functionId_1_1=null;
        EObject lv_function_0_0 = null;

        AntlrDatatypeRuleToken lv_functionId_1_2 = null;



        	enterRule();

        try {
            // InternalKim.g:2904:2: ( ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId ) ) ) ) )
            // InternalKim.g:2905:2: ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId ) ) ) )
            {
            // InternalKim.g:2905:2: ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId ) ) ) )
            int alt62=2;
            int LA62_0 = input.LA(1);

            if ( (LA62_0==RULE_LOWERCASE_ID) ) {
                int LA62_1 = input.LA(2);

                if ( (synpred118_InternalKim()) ) {
                    alt62=1;
                }
                else if ( (true) ) {
                    alt62=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 62, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 62, 0, input);

                throw nvae;
            }
            switch (alt62) {
                case 1 :
                    // InternalKim.g:2906:3: ( (lv_function_0_0= ruleFunction ) )
                    {
                    // InternalKim.g:2906:3: ( (lv_function_0_0= ruleFunction ) )
                    // InternalKim.g:2907:4: (lv_function_0_0= ruleFunction )
                    {
                    // InternalKim.g:2907:4: (lv_function_0_0= ruleFunction )
                    // InternalKim.g:2908:5: lv_function_0_0= ruleFunction
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getFunctionOrIDAccess().getFunctionFunctionParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_function_0_0=ruleFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getFunctionOrIDRule());
                      					}
                      					set(
                      						current,
                      						"function",
                      						lv_function_0_0,
                      						"org.integratedmodelling.kim.Kim.Function");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:2926:3: ( ( (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId ) ) )
                    {
                    // InternalKim.g:2926:3: ( ( (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId ) ) )
                    // InternalKim.g:2927:4: ( (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId ) )
                    {
                    // InternalKim.g:2927:4: ( (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId ) )
                    // InternalKim.g:2928:5: (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId )
                    {
                    // InternalKim.g:2928:5: (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId )
                    int alt61=2;
                    int LA61_0 = input.LA(1);

                    if ( (LA61_0==RULE_LOWERCASE_ID) ) {
                        int LA61_1 = input.LA(2);

                        if ( (LA61_1==EOF||(LA61_1>=RULE_LOWERCASE_ID && LA61_1<=RULE_STRING)||LA61_1==RULE_CAMELCASE_ID||LA61_1==18||LA61_1==22||LA61_1==34||(LA61_1>=37 && LA61_1<=38)||(LA61_1>=52 && LA61_1<=54)||(LA61_1>=62 && LA61_1<=66)||(LA61_1>=108 && LA61_1<=109)||(LA61_1>=116 && LA61_1<=117)||(LA61_1>=119 && LA61_1<=130)) ) {
                            alt61=1;
                        }
                        else if ( (LA61_1==88||LA61_1==90) ) {
                            alt61=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 61, 1, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 61, 0, input);

                        throw nvae;
                    }
                    switch (alt61) {
                        case 1 :
                            // InternalKim.g:2929:6: lv_functionId_1_1= RULE_LOWERCASE_ID
                            {
                            lv_functionId_1_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_functionId_1_1, grammarAccess.getFunctionOrIDAccess().getFunctionIdLOWERCASE_IDTerminalRuleCall_1_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getFunctionOrIDRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"functionId",
                              							lv_functionId_1_1,
                              							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:2944:6: lv_functionId_1_2= ruleNamespaceId
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getFunctionOrIDAccess().getFunctionIdNamespaceIdParserRuleCall_1_0_1());
                              					
                            }
                            pushFollow(FOLLOW_2);
                            lv_functionId_1_2=ruleNamespaceId();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getFunctionOrIDRule());
                              						}
                              						set(
                              							current,
                              							"functionId",
                              							lv_functionId_1_2,
                              							"org.integratedmodelling.kim.Kim.NamespaceId");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionOrID"


    // $ANTLR start "entryRuleAction"
    // InternalKim.g:2966:1: entryRuleAction returns [EObject current=null] : iv_ruleAction= ruleAction EOF ;
    public final EObject entryRuleAction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAction = null;


        try {
            // InternalKim.g:2966:47: (iv_ruleAction= ruleAction EOF )
            // InternalKim.g:2967:2: iv_ruleAction= ruleAction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getActionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAction=ruleAction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAction"


    // $ANTLR start "ruleAction"
    // InternalKim.g:2973:1: ruleAction returns [EObject current=null] : ( ( ( ( (lv_change_0_0= 'change' ) ) | ( (lv_set_1_0= 'set' ) ) ) ( (lv_assignments_2_0= ruleValueAssignment ) ) (otherlv_3= ',' ( (lv_assignments_4_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_5= 'if' | ( (lv_conditionNegative_6_0= 'unless' ) ) ) ) ( (lv_condition_7_0= ruleValue ) ) )? ) | ( ( (lv_integrate_8_0= 'integrate' ) ) ( (lv_assignments_9_0= ruleValueAssignment ) ) (otherlv_10= ',' ( (lv_assignments_11_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_12= 'if' | ( (lv_conditionNegative_13_0= 'unless' ) ) ) ) ( (lv_condition_14_0= ruleValue ) ) )? ) | ( ( (lv_do_15_0= 'do' ) ) ( (lv_executed_16_0= ruleValueExecution ) ) (otherlv_17= ',' ( (lv_executed_18_0= ruleValueExecution ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_19= 'if' | ( (lv_conditionNegative_20_0= 'unless' ) ) ) ) ( (lv_condition_21_0= ruleValue ) ) )? ) | ( ( (lv_move_22_0= 'move' ) ) ( ( (lv_where_23_0= ruleValue ) ) | ( (lv_away_24_0= 'away' ) ) ) ( ( ( ruleValue ) )=> (lv_condition_25_0= ruleValue ) )? ) ) ;
    public final EObject ruleAction() throws RecognitionException {
        EObject current = null;

        Token lv_change_0_0=null;
        Token lv_set_1_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token lv_conditionNegative_6_0=null;
        Token lv_integrate_8_0=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token lv_conditionNegative_13_0=null;
        Token lv_do_15_0=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token lv_conditionNegative_20_0=null;
        Token lv_move_22_0=null;
        Token lv_away_24_0=null;
        EObject lv_assignments_2_0 = null;

        EObject lv_assignments_4_0 = null;

        EObject lv_condition_7_0 = null;

        EObject lv_assignments_9_0 = null;

        EObject lv_assignments_11_0 = null;

        EObject lv_condition_14_0 = null;

        EObject lv_executed_16_0 = null;

        EObject lv_executed_18_0 = null;

        EObject lv_condition_21_0 = null;

        EObject lv_where_23_0 = null;

        EObject lv_condition_25_0 = null;



        	enterRule();

        try {
            // InternalKim.g:2979:2: ( ( ( ( ( (lv_change_0_0= 'change' ) ) | ( (lv_set_1_0= 'set' ) ) ) ( (lv_assignments_2_0= ruleValueAssignment ) ) (otherlv_3= ',' ( (lv_assignments_4_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_5= 'if' | ( (lv_conditionNegative_6_0= 'unless' ) ) ) ) ( (lv_condition_7_0= ruleValue ) ) )? ) | ( ( (lv_integrate_8_0= 'integrate' ) ) ( (lv_assignments_9_0= ruleValueAssignment ) ) (otherlv_10= ',' ( (lv_assignments_11_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_12= 'if' | ( (lv_conditionNegative_13_0= 'unless' ) ) ) ) ( (lv_condition_14_0= ruleValue ) ) )? ) | ( ( (lv_do_15_0= 'do' ) ) ( (lv_executed_16_0= ruleValueExecution ) ) (otherlv_17= ',' ( (lv_executed_18_0= ruleValueExecution ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_19= 'if' | ( (lv_conditionNegative_20_0= 'unless' ) ) ) ) ( (lv_condition_21_0= ruleValue ) ) )? ) | ( ( (lv_move_22_0= 'move' ) ) ( ( (lv_where_23_0= ruleValue ) ) | ( (lv_away_24_0= 'away' ) ) ) ( ( ( ruleValue ) )=> (lv_condition_25_0= ruleValue ) )? ) ) )
            // InternalKim.g:2980:2: ( ( ( ( (lv_change_0_0= 'change' ) ) | ( (lv_set_1_0= 'set' ) ) ) ( (lv_assignments_2_0= ruleValueAssignment ) ) (otherlv_3= ',' ( (lv_assignments_4_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_5= 'if' | ( (lv_conditionNegative_6_0= 'unless' ) ) ) ) ( (lv_condition_7_0= ruleValue ) ) )? ) | ( ( (lv_integrate_8_0= 'integrate' ) ) ( (lv_assignments_9_0= ruleValueAssignment ) ) (otherlv_10= ',' ( (lv_assignments_11_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_12= 'if' | ( (lv_conditionNegative_13_0= 'unless' ) ) ) ) ( (lv_condition_14_0= ruleValue ) ) )? ) | ( ( (lv_do_15_0= 'do' ) ) ( (lv_executed_16_0= ruleValueExecution ) ) (otherlv_17= ',' ( (lv_executed_18_0= ruleValueExecution ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_19= 'if' | ( (lv_conditionNegative_20_0= 'unless' ) ) ) ) ( (lv_condition_21_0= ruleValue ) ) )? ) | ( ( (lv_move_22_0= 'move' ) ) ( ( (lv_where_23_0= ruleValue ) ) | ( (lv_away_24_0= 'away' ) ) ) ( ( ( ruleValue ) )=> (lv_condition_25_0= ruleValue ) )? ) )
            {
            // InternalKim.g:2980:2: ( ( ( ( (lv_change_0_0= 'change' ) ) | ( (lv_set_1_0= 'set' ) ) ) ( (lv_assignments_2_0= ruleValueAssignment ) ) (otherlv_3= ',' ( (lv_assignments_4_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_5= 'if' | ( (lv_conditionNegative_6_0= 'unless' ) ) ) ) ( (lv_condition_7_0= ruleValue ) ) )? ) | ( ( (lv_integrate_8_0= 'integrate' ) ) ( (lv_assignments_9_0= ruleValueAssignment ) ) (otherlv_10= ',' ( (lv_assignments_11_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_12= 'if' | ( (lv_conditionNegative_13_0= 'unless' ) ) ) ) ( (lv_condition_14_0= ruleValue ) ) )? ) | ( ( (lv_do_15_0= 'do' ) ) ( (lv_executed_16_0= ruleValueExecution ) ) (otherlv_17= ',' ( (lv_executed_18_0= ruleValueExecution ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_19= 'if' | ( (lv_conditionNegative_20_0= 'unless' ) ) ) ) ( (lv_condition_21_0= ruleValue ) ) )? ) | ( ( (lv_move_22_0= 'move' ) ) ( ( (lv_where_23_0= ruleValue ) ) | ( (lv_away_24_0= 'away' ) ) ) ( ( ( ruleValue ) )=> (lv_condition_25_0= ruleValue ) )? ) )
            int alt75=4;
            switch ( input.LA(1) ) {
            case 62:
            case 63:
                {
                alt75=1;
                }
                break;
            case 64:
                {
                alt75=2;
                }
                break;
            case 65:
                {
                alt75=3;
                }
                break;
            case 66:
                {
                alt75=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 75, 0, input);

                throw nvae;
            }

            switch (alt75) {
                case 1 :
                    // InternalKim.g:2981:3: ( ( ( (lv_change_0_0= 'change' ) ) | ( (lv_set_1_0= 'set' ) ) ) ( (lv_assignments_2_0= ruleValueAssignment ) ) (otherlv_3= ',' ( (lv_assignments_4_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_5= 'if' | ( (lv_conditionNegative_6_0= 'unless' ) ) ) ) ( (lv_condition_7_0= ruleValue ) ) )? )
                    {
                    // InternalKim.g:2981:3: ( ( ( (lv_change_0_0= 'change' ) ) | ( (lv_set_1_0= 'set' ) ) ) ( (lv_assignments_2_0= ruleValueAssignment ) ) (otherlv_3= ',' ( (lv_assignments_4_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_5= 'if' | ( (lv_conditionNegative_6_0= 'unless' ) ) ) ) ( (lv_condition_7_0= ruleValue ) ) )? )
                    // InternalKim.g:2982:4: ( ( (lv_change_0_0= 'change' ) ) | ( (lv_set_1_0= 'set' ) ) ) ( (lv_assignments_2_0= ruleValueAssignment ) ) (otherlv_3= ',' ( (lv_assignments_4_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_5= 'if' | ( (lv_conditionNegative_6_0= 'unless' ) ) ) ) ( (lv_condition_7_0= ruleValue ) ) )?
                    {
                    // InternalKim.g:2982:4: ( ( (lv_change_0_0= 'change' ) ) | ( (lv_set_1_0= 'set' ) ) )
                    int alt63=2;
                    int LA63_0 = input.LA(1);

                    if ( (LA63_0==62) ) {
                        alt63=1;
                    }
                    else if ( (LA63_0==63) ) {
                        alt63=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 63, 0, input);

                        throw nvae;
                    }
                    switch (alt63) {
                        case 1 :
                            // InternalKim.g:2983:5: ( (lv_change_0_0= 'change' ) )
                            {
                            // InternalKim.g:2983:5: ( (lv_change_0_0= 'change' ) )
                            // InternalKim.g:2984:6: (lv_change_0_0= 'change' )
                            {
                            // InternalKim.g:2984:6: (lv_change_0_0= 'change' )
                            // InternalKim.g:2985:7: lv_change_0_0= 'change'
                            {
                            lv_change_0_0=(Token)match(input,62,FOLLOW_47); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_change_0_0, grammarAccess.getActionAccess().getChangeChangeKeyword_0_0_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getActionRule());
                              							}
                              							setWithLastConsumed(current, "change", true, "change");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:2998:5: ( (lv_set_1_0= 'set' ) )
                            {
                            // InternalKim.g:2998:5: ( (lv_set_1_0= 'set' ) )
                            // InternalKim.g:2999:6: (lv_set_1_0= 'set' )
                            {
                            // InternalKim.g:2999:6: (lv_set_1_0= 'set' )
                            // InternalKim.g:3000:7: lv_set_1_0= 'set'
                            {
                            lv_set_1_0=(Token)match(input,63,FOLLOW_47); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_set_1_0, grammarAccess.getActionAccess().getSetSetKeyword_0_0_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getActionRule());
                              							}
                              							setWithLastConsumed(current, "set", true, "set");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:3013:4: ( (lv_assignments_2_0= ruleValueAssignment ) )
                    // InternalKim.g:3014:5: (lv_assignments_2_0= ruleValueAssignment )
                    {
                    // InternalKim.g:3014:5: (lv_assignments_2_0= ruleValueAssignment )
                    // InternalKim.g:3015:6: lv_assignments_2_0= ruleValueAssignment
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getActionAccess().getAssignmentsValueAssignmentParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_48);
                    lv_assignments_2_0=ruleValueAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getActionRule());
                      						}
                      						add(
                      							current,
                      							"assignments",
                      							lv_assignments_2_0,
                      							"org.integratedmodelling.kim.Kim.ValueAssignment");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:3032:4: (otherlv_3= ',' ( (lv_assignments_4_0= ruleValueAssignment ) ) )*
                    loop64:
                    do {
                        int alt64=2;
                        int LA64_0 = input.LA(1);

                        if ( (LA64_0==22) ) {
                            int LA64_2 = input.LA(2);

                            if ( ((LA64_2>=RULE_LOWERCASE_ID && LA64_2<=RULE_CAMELCASE_ID)||(LA64_2>=RULE_ID && LA64_2<=RULE_INT)||(LA64_2>=22 && LA64_2<=24)||LA64_2==32||LA64_2==34||LA64_2==47||(LA64_2>=226 && LA64_2<=227)) ) {
                                alt64=1;
                            }


                        }


                        switch (alt64) {
                    	case 1 :
                    	    // InternalKim.g:3033:5: otherlv_3= ',' ( (lv_assignments_4_0= ruleValueAssignment ) )
                    	    {
                    	    otherlv_3=(Token)match(input,22,FOLLOW_47); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_3, grammarAccess.getActionAccess().getCommaKeyword_0_2_0());
                    	      				
                    	    }
                    	    // InternalKim.g:3037:5: ( (lv_assignments_4_0= ruleValueAssignment ) )
                    	    // InternalKim.g:3038:6: (lv_assignments_4_0= ruleValueAssignment )
                    	    {
                    	    // InternalKim.g:3038:6: (lv_assignments_4_0= ruleValueAssignment )
                    	    // InternalKim.g:3039:7: lv_assignments_4_0= ruleValueAssignment
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getActionAccess().getAssignmentsValueAssignmentParserRuleCall_0_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_48);
                    	    lv_assignments_4_0=ruleValueAssignment();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getActionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"assignments",
                    	      								lv_assignments_4_0,
                    	      								"org.integratedmodelling.kim.Kim.ValueAssignment");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop64;
                        }
                    } while (true);

                    // InternalKim.g:3057:4: ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_5= 'if' | ( (lv_conditionNegative_6_0= 'unless' ) ) ) ) ( (lv_condition_7_0= ruleValue ) ) )?
                    int alt66=2;
                    int LA66_0 = input.LA(1);

                    if ( ((LA66_0>=42 && LA66_0<=43)) ) {
                        alt66=1;
                    }
                    switch (alt66) {
                        case 1 :
                            // InternalKim.g:3058:5: ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_5= 'if' | ( (lv_conditionNegative_6_0= 'unless' ) ) ) ) ( (lv_condition_7_0= ruleValue ) )
                            {
                            // InternalKim.g:3058:5: ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_5= 'if' | ( (lv_conditionNegative_6_0= 'unless' ) ) ) )
                            // InternalKim.g:3059:6: ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_5= 'if' | ( (lv_conditionNegative_6_0= 'unless' ) ) )
                            {
                            // InternalKim.g:3069:6: (otherlv_5= 'if' | ( (lv_conditionNegative_6_0= 'unless' ) ) )
                            int alt65=2;
                            int LA65_0 = input.LA(1);

                            if ( (LA65_0==42) ) {
                                alt65=1;
                            }
                            else if ( (LA65_0==43) ) {
                                alt65=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 65, 0, input);

                                throw nvae;
                            }
                            switch (alt65) {
                                case 1 :
                                    // InternalKim.g:3070:7: otherlv_5= 'if'
                                    {
                                    otherlv_5=(Token)match(input,42,FOLLOW_49); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(otherlv_5, grammarAccess.getActionAccess().getIfKeyword_0_3_0_0_0());
                                      						
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:3075:7: ( (lv_conditionNegative_6_0= 'unless' ) )
                                    {
                                    // InternalKim.g:3075:7: ( (lv_conditionNegative_6_0= 'unless' ) )
                                    // InternalKim.g:3076:8: (lv_conditionNegative_6_0= 'unless' )
                                    {
                                    // InternalKim.g:3076:8: (lv_conditionNegative_6_0= 'unless' )
                                    // InternalKim.g:3077:9: lv_conditionNegative_6_0= 'unless'
                                    {
                                    lv_conditionNegative_6_0=(Token)match(input,43,FOLLOW_49); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_conditionNegative_6_0, grammarAccess.getActionAccess().getConditionNegativeUnlessKeyword_0_3_0_0_1_0());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getActionRule());
                                      									}
                                      									setWithLastConsumed(current, "conditionNegative", true, "unless");
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }

                            // InternalKim.g:3091:5: ( (lv_condition_7_0= ruleValue ) )
                            // InternalKim.g:3092:6: (lv_condition_7_0= ruleValue )
                            {
                            // InternalKim.g:3092:6: (lv_condition_7_0= ruleValue )
                            // InternalKim.g:3093:7: lv_condition_7_0= ruleValue
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getActionAccess().getConditionValueParserRuleCall_0_3_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_condition_7_0=ruleValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getActionRule());
                              							}
                              							set(
                              								current,
                              								"condition",
                              								lv_condition_7_0,
                              								"org.integratedmodelling.kim.Kim.Value");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:3113:3: ( ( (lv_integrate_8_0= 'integrate' ) ) ( (lv_assignments_9_0= ruleValueAssignment ) ) (otherlv_10= ',' ( (lv_assignments_11_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_12= 'if' | ( (lv_conditionNegative_13_0= 'unless' ) ) ) ) ( (lv_condition_14_0= ruleValue ) ) )? )
                    {
                    // InternalKim.g:3113:3: ( ( (lv_integrate_8_0= 'integrate' ) ) ( (lv_assignments_9_0= ruleValueAssignment ) ) (otherlv_10= ',' ( (lv_assignments_11_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_12= 'if' | ( (lv_conditionNegative_13_0= 'unless' ) ) ) ) ( (lv_condition_14_0= ruleValue ) ) )? )
                    // InternalKim.g:3114:4: ( (lv_integrate_8_0= 'integrate' ) ) ( (lv_assignments_9_0= ruleValueAssignment ) ) (otherlv_10= ',' ( (lv_assignments_11_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_12= 'if' | ( (lv_conditionNegative_13_0= 'unless' ) ) ) ) ( (lv_condition_14_0= ruleValue ) ) )?
                    {
                    // InternalKim.g:3114:4: ( (lv_integrate_8_0= 'integrate' ) )
                    // InternalKim.g:3115:5: (lv_integrate_8_0= 'integrate' )
                    {
                    // InternalKim.g:3115:5: (lv_integrate_8_0= 'integrate' )
                    // InternalKim.g:3116:6: lv_integrate_8_0= 'integrate'
                    {
                    lv_integrate_8_0=(Token)match(input,64,FOLLOW_47); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_integrate_8_0, grammarAccess.getActionAccess().getIntegrateIntegrateKeyword_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getActionRule());
                      						}
                      						setWithLastConsumed(current, "integrate", true, "integrate");
                      					
                    }

                    }


                    }

                    // InternalKim.g:3128:4: ( (lv_assignments_9_0= ruleValueAssignment ) )
                    // InternalKim.g:3129:5: (lv_assignments_9_0= ruleValueAssignment )
                    {
                    // InternalKim.g:3129:5: (lv_assignments_9_0= ruleValueAssignment )
                    // InternalKim.g:3130:6: lv_assignments_9_0= ruleValueAssignment
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getActionAccess().getAssignmentsValueAssignmentParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_48);
                    lv_assignments_9_0=ruleValueAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getActionRule());
                      						}
                      						add(
                      							current,
                      							"assignments",
                      							lv_assignments_9_0,
                      							"org.integratedmodelling.kim.Kim.ValueAssignment");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:3147:4: (otherlv_10= ',' ( (lv_assignments_11_0= ruleValueAssignment ) ) )*
                    loop67:
                    do {
                        int alt67=2;
                        int LA67_0 = input.LA(1);

                        if ( (LA67_0==22) ) {
                            int LA67_2 = input.LA(2);

                            if ( ((LA67_2>=RULE_LOWERCASE_ID && LA67_2<=RULE_CAMELCASE_ID)||(LA67_2>=RULE_ID && LA67_2<=RULE_INT)||(LA67_2>=22 && LA67_2<=24)||LA67_2==32||LA67_2==34||LA67_2==47||(LA67_2>=226 && LA67_2<=227)) ) {
                                alt67=1;
                            }


                        }


                        switch (alt67) {
                    	case 1 :
                    	    // InternalKim.g:3148:5: otherlv_10= ',' ( (lv_assignments_11_0= ruleValueAssignment ) )
                    	    {
                    	    otherlv_10=(Token)match(input,22,FOLLOW_47); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_10, grammarAccess.getActionAccess().getCommaKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalKim.g:3152:5: ( (lv_assignments_11_0= ruleValueAssignment ) )
                    	    // InternalKim.g:3153:6: (lv_assignments_11_0= ruleValueAssignment )
                    	    {
                    	    // InternalKim.g:3153:6: (lv_assignments_11_0= ruleValueAssignment )
                    	    // InternalKim.g:3154:7: lv_assignments_11_0= ruleValueAssignment
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getActionAccess().getAssignmentsValueAssignmentParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_48);
                    	    lv_assignments_11_0=ruleValueAssignment();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getActionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"assignments",
                    	      								lv_assignments_11_0,
                    	      								"org.integratedmodelling.kim.Kim.ValueAssignment");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop67;
                        }
                    } while (true);

                    // InternalKim.g:3172:4: ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_12= 'if' | ( (lv_conditionNegative_13_0= 'unless' ) ) ) ) ( (lv_condition_14_0= ruleValue ) ) )?
                    int alt69=2;
                    int LA69_0 = input.LA(1);

                    if ( ((LA69_0>=42 && LA69_0<=43)) ) {
                        alt69=1;
                    }
                    switch (alt69) {
                        case 1 :
                            // InternalKim.g:3173:5: ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_12= 'if' | ( (lv_conditionNegative_13_0= 'unless' ) ) ) ) ( (lv_condition_14_0= ruleValue ) )
                            {
                            // InternalKim.g:3173:5: ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_12= 'if' | ( (lv_conditionNegative_13_0= 'unless' ) ) ) )
                            // InternalKim.g:3174:6: ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_12= 'if' | ( (lv_conditionNegative_13_0= 'unless' ) ) )
                            {
                            // InternalKim.g:3184:6: (otherlv_12= 'if' | ( (lv_conditionNegative_13_0= 'unless' ) ) )
                            int alt68=2;
                            int LA68_0 = input.LA(1);

                            if ( (LA68_0==42) ) {
                                alt68=1;
                            }
                            else if ( (LA68_0==43) ) {
                                alt68=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 68, 0, input);

                                throw nvae;
                            }
                            switch (alt68) {
                                case 1 :
                                    // InternalKim.g:3185:7: otherlv_12= 'if'
                                    {
                                    otherlv_12=(Token)match(input,42,FOLLOW_49); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(otherlv_12, grammarAccess.getActionAccess().getIfKeyword_1_3_0_0_0());
                                      						
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:3190:7: ( (lv_conditionNegative_13_0= 'unless' ) )
                                    {
                                    // InternalKim.g:3190:7: ( (lv_conditionNegative_13_0= 'unless' ) )
                                    // InternalKim.g:3191:8: (lv_conditionNegative_13_0= 'unless' )
                                    {
                                    // InternalKim.g:3191:8: (lv_conditionNegative_13_0= 'unless' )
                                    // InternalKim.g:3192:9: lv_conditionNegative_13_0= 'unless'
                                    {
                                    lv_conditionNegative_13_0=(Token)match(input,43,FOLLOW_49); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_conditionNegative_13_0, grammarAccess.getActionAccess().getConditionNegativeUnlessKeyword_1_3_0_0_1_0());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getActionRule());
                                      									}
                                      									setWithLastConsumed(current, "conditionNegative", true, "unless");
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }

                            // InternalKim.g:3206:5: ( (lv_condition_14_0= ruleValue ) )
                            // InternalKim.g:3207:6: (lv_condition_14_0= ruleValue )
                            {
                            // InternalKim.g:3207:6: (lv_condition_14_0= ruleValue )
                            // InternalKim.g:3208:7: lv_condition_14_0= ruleValue
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getActionAccess().getConditionValueParserRuleCall_1_3_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_condition_14_0=ruleValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getActionRule());
                              							}
                              							set(
                              								current,
                              								"condition",
                              								lv_condition_14_0,
                              								"org.integratedmodelling.kim.Kim.Value");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:3228:3: ( ( (lv_do_15_0= 'do' ) ) ( (lv_executed_16_0= ruleValueExecution ) ) (otherlv_17= ',' ( (lv_executed_18_0= ruleValueExecution ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_19= 'if' | ( (lv_conditionNegative_20_0= 'unless' ) ) ) ) ( (lv_condition_21_0= ruleValue ) ) )? )
                    {
                    // InternalKim.g:3228:3: ( ( (lv_do_15_0= 'do' ) ) ( (lv_executed_16_0= ruleValueExecution ) ) (otherlv_17= ',' ( (lv_executed_18_0= ruleValueExecution ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_19= 'if' | ( (lv_conditionNegative_20_0= 'unless' ) ) ) ) ( (lv_condition_21_0= ruleValue ) ) )? )
                    // InternalKim.g:3229:4: ( (lv_do_15_0= 'do' ) ) ( (lv_executed_16_0= ruleValueExecution ) ) (otherlv_17= ',' ( (lv_executed_18_0= ruleValueExecution ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_19= 'if' | ( (lv_conditionNegative_20_0= 'unless' ) ) ) ) ( (lv_condition_21_0= ruleValue ) ) )?
                    {
                    // InternalKim.g:3229:4: ( (lv_do_15_0= 'do' ) )
                    // InternalKim.g:3230:5: (lv_do_15_0= 'do' )
                    {
                    // InternalKim.g:3230:5: (lv_do_15_0= 'do' )
                    // InternalKim.g:3231:6: lv_do_15_0= 'do'
                    {
                    lv_do_15_0=(Token)match(input,65,FOLLOW_13); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_do_15_0, grammarAccess.getActionAccess().getDoDoKeyword_2_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getActionRule());
                      						}
                      						setWithLastConsumed(current, "do", true, "do");
                      					
                    }

                    }


                    }

                    // InternalKim.g:3243:4: ( (lv_executed_16_0= ruleValueExecution ) )
                    // InternalKim.g:3244:5: (lv_executed_16_0= ruleValueExecution )
                    {
                    // InternalKim.g:3244:5: (lv_executed_16_0= ruleValueExecution )
                    // InternalKim.g:3245:6: lv_executed_16_0= ruleValueExecution
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getActionAccess().getExecutedValueExecutionParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_48);
                    lv_executed_16_0=ruleValueExecution();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getActionRule());
                      						}
                      						add(
                      							current,
                      							"executed",
                      							lv_executed_16_0,
                      							"org.integratedmodelling.kim.Kim.ValueExecution");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:3262:4: (otherlv_17= ',' ( (lv_executed_18_0= ruleValueExecution ) ) )*
                    loop70:
                    do {
                        int alt70=2;
                        int LA70_0 = input.LA(1);

                        if ( (LA70_0==22) ) {
                            int LA70_2 = input.LA(2);

                            if ( (LA70_2==RULE_LOWERCASE_ID||LA70_2==RULE_EXPR||LA70_2==87) ) {
                                alt70=1;
                            }


                        }


                        switch (alt70) {
                    	case 1 :
                    	    // InternalKim.g:3263:5: otherlv_17= ',' ( (lv_executed_18_0= ruleValueExecution ) )
                    	    {
                    	    otherlv_17=(Token)match(input,22,FOLLOW_13); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_17, grammarAccess.getActionAccess().getCommaKeyword_2_2_0());
                    	      				
                    	    }
                    	    // InternalKim.g:3267:5: ( (lv_executed_18_0= ruleValueExecution ) )
                    	    // InternalKim.g:3268:6: (lv_executed_18_0= ruleValueExecution )
                    	    {
                    	    // InternalKim.g:3268:6: (lv_executed_18_0= ruleValueExecution )
                    	    // InternalKim.g:3269:7: lv_executed_18_0= ruleValueExecution
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getActionAccess().getExecutedValueExecutionParserRuleCall_2_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_48);
                    	    lv_executed_18_0=ruleValueExecution();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getActionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"executed",
                    	      								lv_executed_18_0,
                    	      								"org.integratedmodelling.kim.Kim.ValueExecution");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop70;
                        }
                    } while (true);

                    // InternalKim.g:3287:4: ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_19= 'if' | ( (lv_conditionNegative_20_0= 'unless' ) ) ) ) ( (lv_condition_21_0= ruleValue ) ) )?
                    int alt72=2;
                    int LA72_0 = input.LA(1);

                    if ( ((LA72_0>=42 && LA72_0<=43)) ) {
                        alt72=1;
                    }
                    switch (alt72) {
                        case 1 :
                            // InternalKim.g:3288:5: ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_19= 'if' | ( (lv_conditionNegative_20_0= 'unless' ) ) ) ) ( (lv_condition_21_0= ruleValue ) )
                            {
                            // InternalKim.g:3288:5: ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_19= 'if' | ( (lv_conditionNegative_20_0= 'unless' ) ) ) )
                            // InternalKim.g:3289:6: ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_19= 'if' | ( (lv_conditionNegative_20_0= 'unless' ) ) )
                            {
                            // InternalKim.g:3299:6: (otherlv_19= 'if' | ( (lv_conditionNegative_20_0= 'unless' ) ) )
                            int alt71=2;
                            int LA71_0 = input.LA(1);

                            if ( (LA71_0==42) ) {
                                alt71=1;
                            }
                            else if ( (LA71_0==43) ) {
                                alt71=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 71, 0, input);

                                throw nvae;
                            }
                            switch (alt71) {
                                case 1 :
                                    // InternalKim.g:3300:7: otherlv_19= 'if'
                                    {
                                    otherlv_19=(Token)match(input,42,FOLLOW_49); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(otherlv_19, grammarAccess.getActionAccess().getIfKeyword_2_3_0_0_0());
                                      						
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:3305:7: ( (lv_conditionNegative_20_0= 'unless' ) )
                                    {
                                    // InternalKim.g:3305:7: ( (lv_conditionNegative_20_0= 'unless' ) )
                                    // InternalKim.g:3306:8: (lv_conditionNegative_20_0= 'unless' )
                                    {
                                    // InternalKim.g:3306:8: (lv_conditionNegative_20_0= 'unless' )
                                    // InternalKim.g:3307:9: lv_conditionNegative_20_0= 'unless'
                                    {
                                    lv_conditionNegative_20_0=(Token)match(input,43,FOLLOW_49); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_conditionNegative_20_0, grammarAccess.getActionAccess().getConditionNegativeUnlessKeyword_2_3_0_0_1_0());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getActionRule());
                                      									}
                                      									setWithLastConsumed(current, "conditionNegative", true, "unless");
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }

                            // InternalKim.g:3321:5: ( (lv_condition_21_0= ruleValue ) )
                            // InternalKim.g:3322:6: (lv_condition_21_0= ruleValue )
                            {
                            // InternalKim.g:3322:6: (lv_condition_21_0= ruleValue )
                            // InternalKim.g:3323:7: lv_condition_21_0= ruleValue
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getActionAccess().getConditionValueParserRuleCall_2_3_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_condition_21_0=ruleValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getActionRule());
                              							}
                              							set(
                              								current,
                              								"condition",
                              								lv_condition_21_0,
                              								"org.integratedmodelling.kim.Kim.Value");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:3343:3: ( ( (lv_move_22_0= 'move' ) ) ( ( (lv_where_23_0= ruleValue ) ) | ( (lv_away_24_0= 'away' ) ) ) ( ( ( ruleValue ) )=> (lv_condition_25_0= ruleValue ) )? )
                    {
                    // InternalKim.g:3343:3: ( ( (lv_move_22_0= 'move' ) ) ( ( (lv_where_23_0= ruleValue ) ) | ( (lv_away_24_0= 'away' ) ) ) ( ( ( ruleValue ) )=> (lv_condition_25_0= ruleValue ) )? )
                    // InternalKim.g:3344:4: ( (lv_move_22_0= 'move' ) ) ( ( (lv_where_23_0= ruleValue ) ) | ( (lv_away_24_0= 'away' ) ) ) ( ( ( ruleValue ) )=> (lv_condition_25_0= ruleValue ) )?
                    {
                    // InternalKim.g:3344:4: ( (lv_move_22_0= 'move' ) )
                    // InternalKim.g:3345:5: (lv_move_22_0= 'move' )
                    {
                    // InternalKim.g:3345:5: (lv_move_22_0= 'move' )
                    // InternalKim.g:3346:6: lv_move_22_0= 'move'
                    {
                    lv_move_22_0=(Token)match(input,66,FOLLOW_50); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_move_22_0, grammarAccess.getActionAccess().getMoveMoveKeyword_3_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getActionRule());
                      						}
                      						setWithLastConsumed(current, "move", true, "move");
                      					
                    }

                    }


                    }

                    // InternalKim.g:3358:4: ( ( (lv_where_23_0= ruleValue ) ) | ( (lv_away_24_0= 'away' ) ) )
                    int alt73=2;
                    int LA73_0 = input.LA(1);

                    if ( ((LA73_0>=RULE_LOWERCASE_ID && LA73_0<=RULE_CAMELCASE_ID)||(LA73_0>=RULE_ID && LA73_0<=RULE_INT)||(LA73_0>=22 && LA73_0<=24)||LA73_0==34||(LA73_0>=47 && LA73_0<=48)||LA73_0==184||(LA73_0>=226 && LA73_0<=227)) ) {
                        alt73=1;
                    }
                    else if ( (LA73_0==67) ) {
                        alt73=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 73, 0, input);

                        throw nvae;
                    }
                    switch (alt73) {
                        case 1 :
                            // InternalKim.g:3359:5: ( (lv_where_23_0= ruleValue ) )
                            {
                            // InternalKim.g:3359:5: ( (lv_where_23_0= ruleValue ) )
                            // InternalKim.g:3360:6: (lv_where_23_0= ruleValue )
                            {
                            // InternalKim.g:3360:6: (lv_where_23_0= ruleValue )
                            // InternalKim.g:3361:7: lv_where_23_0= ruleValue
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getActionAccess().getWhereValueParserRuleCall_3_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_51);
                            lv_where_23_0=ruleValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getActionRule());
                              							}
                              							set(
                              								current,
                              								"where",
                              								lv_where_23_0,
                              								"org.integratedmodelling.kim.Kim.Value");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:3379:5: ( (lv_away_24_0= 'away' ) )
                            {
                            // InternalKim.g:3379:5: ( (lv_away_24_0= 'away' ) )
                            // InternalKim.g:3380:6: (lv_away_24_0= 'away' )
                            {
                            // InternalKim.g:3380:6: (lv_away_24_0= 'away' )
                            // InternalKim.g:3381:7: lv_away_24_0= 'away'
                            {
                            lv_away_24_0=(Token)match(input,67,FOLLOW_51); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_away_24_0, grammarAccess.getActionAccess().getAwayAwayKeyword_3_1_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getActionRule());
                              							}
                              							setWithLastConsumed(current, "away", true, "away");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:3394:4: ( ( ( ruleValue ) )=> (lv_condition_25_0= ruleValue ) )?
                    int alt74=2;
                    alt74 = dfa74.predict(input);
                    switch (alt74) {
                        case 1 :
                            // InternalKim.g:3395:5: ( ( ruleValue ) )=> (lv_condition_25_0= ruleValue )
                            {
                            // InternalKim.g:3399:5: (lv_condition_25_0= ruleValue )
                            // InternalKim.g:3400:6: lv_condition_25_0= ruleValue
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getActionAccess().getConditionValueParserRuleCall_3_2_0());
                              					
                            }
                            pushFollow(FOLLOW_2);
                            lv_condition_25_0=ruleValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getActionRule());
                              						}
                              						set(
                              							current,
                              							"condition",
                              							lv_condition_25_0,
                              							"org.integratedmodelling.kim.Kim.Value");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAction"


    // $ANTLR start "entryRuleValueAssignment"
    // InternalKim.g:3422:1: entryRuleValueAssignment returns [EObject current=null] : iv_ruleValueAssignment= ruleValueAssignment EOF ;
    public final EObject entryRuleValueAssignment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValueAssignment = null;


        try {
            // InternalKim.g:3422:56: (iv_ruleValueAssignment= ruleValueAssignment EOF )
            // InternalKim.g:3423:2: iv_ruleValueAssignment= ruleValueAssignment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValueAssignmentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleValueAssignment=ruleValueAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValueAssignment; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValueAssignment"


    // $ANTLR start "ruleValueAssignment"
    // InternalKim.g:3429:1: ruleValueAssignment returns [EObject current=null] : ( ( ( (lv_target_0_0= RULE_LOWERCASE_ID ) )? otherlv_1= 'to' )? ( (lv_assignedValue_2_0= ruleComputableValue ) ) ) ;
    public final EObject ruleValueAssignment() throws RecognitionException {
        EObject current = null;

        Token lv_target_0_0=null;
        Token otherlv_1=null;
        EObject lv_assignedValue_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:3435:2: ( ( ( ( (lv_target_0_0= RULE_LOWERCASE_ID ) )? otherlv_1= 'to' )? ( (lv_assignedValue_2_0= ruleComputableValue ) ) ) )
            // InternalKim.g:3436:2: ( ( ( (lv_target_0_0= RULE_LOWERCASE_ID ) )? otherlv_1= 'to' )? ( (lv_assignedValue_2_0= ruleComputableValue ) ) )
            {
            // InternalKim.g:3436:2: ( ( ( (lv_target_0_0= RULE_LOWERCASE_ID ) )? otherlv_1= 'to' )? ( (lv_assignedValue_2_0= ruleComputableValue ) ) )
            // InternalKim.g:3437:3: ( ( (lv_target_0_0= RULE_LOWERCASE_ID ) )? otherlv_1= 'to' )? ( (lv_assignedValue_2_0= ruleComputableValue ) )
            {
            // InternalKim.g:3437:3: ( ( (lv_target_0_0= RULE_LOWERCASE_ID ) )? otherlv_1= 'to' )?
            int alt77=2;
            int LA77_0 = input.LA(1);

            if ( (LA77_0==RULE_LOWERCASE_ID) ) {
                int LA77_1 = input.LA(2);

                if ( (LA77_1==32) ) {
                    alt77=1;
                }
            }
            else if ( (LA77_0==32) ) {
                alt77=1;
            }
            switch (alt77) {
                case 1 :
                    // InternalKim.g:3438:4: ( (lv_target_0_0= RULE_LOWERCASE_ID ) )? otherlv_1= 'to'
                    {
                    // InternalKim.g:3438:4: ( (lv_target_0_0= RULE_LOWERCASE_ID ) )?
                    int alt76=2;
                    int LA76_0 = input.LA(1);

                    if ( (LA76_0==RULE_LOWERCASE_ID) ) {
                        alt76=1;
                    }
                    switch (alt76) {
                        case 1 :
                            // InternalKim.g:3439:5: (lv_target_0_0= RULE_LOWERCASE_ID )
                            {
                            // InternalKim.g:3439:5: (lv_target_0_0= RULE_LOWERCASE_ID )
                            // InternalKim.g:3440:6: lv_target_0_0= RULE_LOWERCASE_ID
                            {
                            lv_target_0_0=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_18); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_target_0_0, grammarAccess.getValueAssignmentAccess().getTargetLOWERCASE_IDTerminalRuleCall_0_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getValueAssignmentRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"target",
                              							lv_target_0_0,
                              							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                              					
                            }

                            }


                            }
                            break;

                    }

                    otherlv_1=(Token)match(input,32,FOLLOW_47); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getValueAssignmentAccess().getToKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:3461:3: ( (lv_assignedValue_2_0= ruleComputableValue ) )
            // InternalKim.g:3462:4: (lv_assignedValue_2_0= ruleComputableValue )
            {
            // InternalKim.g:3462:4: (lv_assignedValue_2_0= ruleComputableValue )
            // InternalKim.g:3463:5: lv_assignedValue_2_0= ruleComputableValue
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getValueAssignmentAccess().getAssignedValueComputableValueParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_assignedValue_2_0=ruleComputableValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getValueAssignmentRule());
              					}
              					set(
              						current,
              						"assignedValue",
              						lv_assignedValue_2_0,
              						"org.integratedmodelling.kim.Kim.ComputableValue");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValueAssignment"


    // $ANTLR start "entryRuleComputableValue"
    // InternalKim.g:3484:1: entryRuleComputableValue returns [EObject current=null] : iv_ruleComputableValue= ruleComputableValue EOF ;
    public final EObject entryRuleComputableValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleComputableValue = null;


        try {
            // InternalKim.g:3484:56: (iv_ruleComputableValue= ruleComputableValue EOF )
            // InternalKim.g:3485:2: iv_ruleComputableValue= ruleComputableValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getComputableValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleComputableValue=ruleComputableValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleComputableValue; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleComputableValue"


    // $ANTLR start "ruleComputableValue"
    // InternalKim.g:3491:1: ruleComputableValue returns [EObject current=null] : ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_6_0= ruleList ) ) | ( (lv_null_7_0= 'unknown' ) ) ) ;
    public final EObject ruleComputableValue() throws RecognitionException {
        EObject current = null;

        Token lv_expr_2_0=null;
        Token otherlv_3=null;
        Token lv_language_4_1=null;
        Token lv_language_4_2=null;
        Token lv_language_4_3=null;
        Token lv_id_5_1=null;
        Token lv_id_5_2=null;
        Token lv_id_5_3=null;
        Token lv_null_7_0=null;
        EObject lv_literal_0_0 = null;

        EObject lv_function_1_0 = null;

        EObject lv_list_6_0 = null;



        	enterRule();

        try {
            // InternalKim.g:3497:2: ( ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_6_0= ruleList ) ) | ( (lv_null_7_0= 'unknown' ) ) ) )
            // InternalKim.g:3498:2: ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_6_0= ruleList ) ) | ( (lv_null_7_0= 'unknown' ) ) )
            {
            // InternalKim.g:3498:2: ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_6_0= ruleList ) ) | ( (lv_null_7_0= 'unknown' ) ) )
            int alt81=6;
            alt81 = dfa81.predict(input);
            switch (alt81) {
                case 1 :
                    // InternalKim.g:3499:3: ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) )
                    {
                    // InternalKim.g:3499:3: ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) )
                    // InternalKim.g:3500:4: (lv_literal_0_0= ruleLiteralOrIdOrComma )
                    {
                    // InternalKim.g:3500:4: (lv_literal_0_0= ruleLiteralOrIdOrComma )
                    // InternalKim.g:3501:5: lv_literal_0_0= ruleLiteralOrIdOrComma
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getComputableValueAccess().getLiteralLiteralOrIdOrCommaParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_literal_0_0=ruleLiteralOrIdOrComma();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getComputableValueRule());
                      					}
                      					set(
                      						current,
                      						"literal",
                      						lv_literal_0_0,
                      						"org.integratedmodelling.kim.Kim.LiteralOrIdOrComma");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:3519:3: ( (lv_function_1_0= ruleFunction ) )
                    {
                    // InternalKim.g:3519:3: ( (lv_function_1_0= ruleFunction ) )
                    // InternalKim.g:3520:4: (lv_function_1_0= ruleFunction )
                    {
                    // InternalKim.g:3520:4: (lv_function_1_0= ruleFunction )
                    // InternalKim.g:3521:5: lv_function_1_0= ruleFunction
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getComputableValueAccess().getFunctionFunctionParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_function_1_0=ruleFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getComputableValueRule());
                      					}
                      					set(
                      						current,
                      						"function",
                      						lv_function_1_0,
                      						"org.integratedmodelling.kim.Kim.Function");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:3539:3: ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) ) )? )
                    {
                    // InternalKim.g:3539:3: ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) ) )? )
                    // InternalKim.g:3540:4: ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) ) )?
                    {
                    // InternalKim.g:3540:4: ( (lv_expr_2_0= RULE_EXPR ) )
                    // InternalKim.g:3541:5: (lv_expr_2_0= RULE_EXPR )
                    {
                    // InternalKim.g:3541:5: (lv_expr_2_0= RULE_EXPR )
                    // InternalKim.g:3542:6: lv_expr_2_0= RULE_EXPR
                    {
                    lv_expr_2_0=(Token)match(input,RULE_EXPR,FOLLOW_52); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_expr_2_0, grammarAccess.getComputableValueAccess().getExprEXPRTerminalRuleCall_2_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getComputableValueRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"expr",
                      							lv_expr_2_0,
                      							"org.integratedmodelling.kim.Kim.EXPR");
                      					
                    }

                    }


                    }

                    // InternalKim.g:3558:4: (otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) ) )?
                    int alt79=2;
                    int LA79_0 = input.LA(1);

                    if ( (LA79_0==46) ) {
                        alt79=1;
                    }
                    switch (alt79) {
                        case 1 :
                            // InternalKim.g:3559:5: otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) )
                            {
                            otherlv_3=(Token)match(input,46,FOLLOW_53); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_3, grammarAccess.getComputableValueAccess().getInKeyword_2_1_0());
                              				
                            }
                            // InternalKim.g:3563:5: ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) )
                            // InternalKim.g:3564:6: ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) )
                            {
                            // InternalKim.g:3564:6: ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) )
                            // InternalKim.g:3565:7: (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID )
                            {
                            // InternalKim.g:3565:7: (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID )
                            int alt78=3;
                            switch ( input.LA(1) ) {
                            case RULE_LOWERCASE_ID:
                                {
                                alt78=1;
                                }
                                break;
                            case RULE_UPPERCASE_ID:
                                {
                                alt78=2;
                                }
                                break;
                            case RULE_CAMELCASE_ID:
                                {
                                alt78=3;
                                }
                                break;
                            default:
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 78, 0, input);

                                throw nvae;
                            }

                            switch (alt78) {
                                case 1 :
                                    // InternalKim.g:3566:8: lv_language_4_1= RULE_LOWERCASE_ID
                                    {
                                    lv_language_4_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_language_4_1, grammarAccess.getComputableValueAccess().getLanguageLOWERCASE_IDTerminalRuleCall_2_1_1_0_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getComputableValueRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"language",
                                      									lv_language_4_1,
                                      									"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                                      							
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:3581:8: lv_language_4_2= RULE_UPPERCASE_ID
                                    {
                                    lv_language_4_2=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_language_4_2, grammarAccess.getComputableValueAccess().getLanguageUPPERCASE_IDTerminalRuleCall_2_1_1_0_1());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getComputableValueRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"language",
                                      									lv_language_4_2,
                                      									"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                                      							
                                    }

                                    }
                                    break;
                                case 3 :
                                    // InternalKim.g:3596:8: lv_language_4_3= RULE_CAMELCASE_ID
                                    {
                                    lv_language_4_3=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_language_4_3, grammarAccess.getComputableValueAccess().getLanguageCAMELCASE_IDTerminalRuleCall_2_1_1_0_2());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getComputableValueRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"language",
                                      									lv_language_4_3,
                                      									"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                                      							
                                    }

                                    }
                                    break;

                            }


                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:3616:3: ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) )
                    {
                    // InternalKim.g:3616:3: ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) )
                    // InternalKim.g:3617:4: ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) )
                    {
                    // InternalKim.g:3617:4: ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) )
                    // InternalKim.g:3618:5: (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID )
                    {
                    // InternalKim.g:3618:5: (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID )
                    int alt80=3;
                    switch ( input.LA(1) ) {
                    case RULE_LOWERCASE_ID:
                        {
                        alt80=1;
                        }
                        break;
                    case RULE_UPPERCASE_ID:
                        {
                        alt80=2;
                        }
                        break;
                    case RULE_CAMELCASE_ID:
                        {
                        alt80=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 80, 0, input);

                        throw nvae;
                    }

                    switch (alt80) {
                        case 1 :
                            // InternalKim.g:3619:6: lv_id_5_1= RULE_LOWERCASE_ID
                            {
                            lv_id_5_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_5_1, grammarAccess.getComputableValueAccess().getIdLOWERCASE_IDTerminalRuleCall_3_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getComputableValueRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_5_1,
                              							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:3634:6: lv_id_5_2= RULE_UPPERCASE_ID
                            {
                            lv_id_5_2=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_5_2, grammarAccess.getComputableValueAccess().getIdUPPERCASE_IDTerminalRuleCall_3_0_1());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getComputableValueRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_5_2,
                              							"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 3 :
                            // InternalKim.g:3649:6: lv_id_5_3= RULE_CAMELCASE_ID
                            {
                            lv_id_5_3=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_5_3, grammarAccess.getComputableValueAccess().getIdCAMELCASE_IDTerminalRuleCall_3_0_2());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getComputableValueRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_5_3,
                              							"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:3667:3: ( (lv_list_6_0= ruleList ) )
                    {
                    // InternalKim.g:3667:3: ( (lv_list_6_0= ruleList ) )
                    // InternalKim.g:3668:4: (lv_list_6_0= ruleList )
                    {
                    // InternalKim.g:3668:4: (lv_list_6_0= ruleList )
                    // InternalKim.g:3669:5: lv_list_6_0= ruleList
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getComputableValueAccess().getListListParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_list_6_0=ruleList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getComputableValueRule());
                      					}
                      					set(
                      						current,
                      						"list",
                      						lv_list_6_0,
                      						"org.integratedmodelling.kim.Kim.List");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:3687:3: ( (lv_null_7_0= 'unknown' ) )
                    {
                    // InternalKim.g:3687:3: ( (lv_null_7_0= 'unknown' ) )
                    // InternalKim.g:3688:4: (lv_null_7_0= 'unknown' )
                    {
                    // InternalKim.g:3688:4: (lv_null_7_0= 'unknown' )
                    // InternalKim.g:3689:5: lv_null_7_0= 'unknown'
                    {
                    lv_null_7_0=(Token)match(input,47,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_null_7_0, grammarAccess.getComputableValueAccess().getNullUnknownKeyword_5_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getComputableValueRule());
                      					}
                      					setWithLastConsumed(current, "null", true, "unknown");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleComputableValue"


    // $ANTLR start "entryRuleValueExecution"
    // InternalKim.g:3705:1: entryRuleValueExecution returns [EObject current=null] : iv_ruleValueExecution= ruleValueExecution EOF ;
    public final EObject entryRuleValueExecution() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValueExecution = null;


        try {
            // InternalKim.g:3705:55: (iv_ruleValueExecution= ruleValueExecution EOF )
            // InternalKim.g:3706:2: iv_ruleValueExecution= ruleValueExecution EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValueExecutionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleValueExecution=ruleValueExecution();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValueExecution; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValueExecution"


    // $ANTLR start "ruleValueExecution"
    // InternalKim.g:3712:1: ruleValueExecution returns [EObject current=null] : ( ( (lv_execValue_0_0= ruleExecutableValue ) ) (otherlv_1= 'as' ( (lv_target_2_0= RULE_LOWERCASE_ID ) ) )? ) ;
    public final EObject ruleValueExecution() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_target_2_0=null;
        EObject lv_execValue_0_0 = null;



        	enterRule();

        try {
            // InternalKim.g:3718:2: ( ( ( (lv_execValue_0_0= ruleExecutableValue ) ) (otherlv_1= 'as' ( (lv_target_2_0= RULE_LOWERCASE_ID ) ) )? ) )
            // InternalKim.g:3719:2: ( ( (lv_execValue_0_0= ruleExecutableValue ) ) (otherlv_1= 'as' ( (lv_target_2_0= RULE_LOWERCASE_ID ) ) )? )
            {
            // InternalKim.g:3719:2: ( ( (lv_execValue_0_0= ruleExecutableValue ) ) (otherlv_1= 'as' ( (lv_target_2_0= RULE_LOWERCASE_ID ) ) )? )
            // InternalKim.g:3720:3: ( (lv_execValue_0_0= ruleExecutableValue ) ) (otherlv_1= 'as' ( (lv_target_2_0= RULE_LOWERCASE_ID ) ) )?
            {
            // InternalKim.g:3720:3: ( (lv_execValue_0_0= ruleExecutableValue ) )
            // InternalKim.g:3721:4: (lv_execValue_0_0= ruleExecutableValue )
            {
            // InternalKim.g:3721:4: (lv_execValue_0_0= ruleExecutableValue )
            // InternalKim.g:3722:5: lv_execValue_0_0= ruleExecutableValue
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getValueExecutionAccess().getExecValueExecutableValueParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_54);
            lv_execValue_0_0=ruleExecutableValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getValueExecutionRule());
              					}
              					set(
              						current,
              						"execValue",
              						lv_execValue_0_0,
              						"org.integratedmodelling.kim.Kim.ExecutableValue");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:3739:3: (otherlv_1= 'as' ( (lv_target_2_0= RULE_LOWERCASE_ID ) ) )?
            int alt82=2;
            int LA82_0 = input.LA(1);

            if ( (LA82_0==25) ) {
                alt82=1;
            }
            switch (alt82) {
                case 1 :
                    // InternalKim.g:3740:4: otherlv_1= 'as' ( (lv_target_2_0= RULE_LOWERCASE_ID ) )
                    {
                    otherlv_1=(Token)match(input,25,FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getValueExecutionAccess().getAsKeyword_1_0());
                      			
                    }
                    // InternalKim.g:3744:4: ( (lv_target_2_0= RULE_LOWERCASE_ID ) )
                    // InternalKim.g:3745:5: (lv_target_2_0= RULE_LOWERCASE_ID )
                    {
                    // InternalKim.g:3745:5: (lv_target_2_0= RULE_LOWERCASE_ID )
                    // InternalKim.g:3746:6: lv_target_2_0= RULE_LOWERCASE_ID
                    {
                    lv_target_2_0=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_target_2_0, grammarAccess.getValueExecutionAccess().getTargetLOWERCASE_IDTerminalRuleCall_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getValueExecutionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"target",
                      							lv_target_2_0,
                      							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValueExecution"


    // $ANTLR start "entryRuleExecutableValue"
    // InternalKim.g:3767:1: entryRuleExecutableValue returns [EObject current=null] : iv_ruleExecutableValue= ruleExecutableValue EOF ;
    public final EObject entryRuleExecutableValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExecutableValue = null;


        try {
            // InternalKim.g:3767:56: (iv_ruleExecutableValue= ruleExecutableValue EOF )
            // InternalKim.g:3768:2: iv_ruleExecutableValue= ruleExecutableValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExecutableValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExecutableValue=ruleExecutableValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExecutableValue; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExecutableValue"


    // $ANTLR start "ruleExecutableValue"
    // InternalKim.g:3774:1: ruleExecutableValue returns [EObject current=null] : ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_expr_1_0= RULE_EXPR ) ) (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( (lv_urn_4_0= ruleUrnId ) ) ) ;
    public final EObject ruleExecutableValue() throws RecognitionException {
        EObject current = null;

        Token lv_expr_1_0=null;
        Token otherlv_2=null;
        Token lv_language_3_1=null;
        Token lv_language_3_2=null;
        Token lv_language_3_3=null;
        EObject lv_function_0_0 = null;

        AntlrDatatypeRuleToken lv_urn_4_0 = null;



        	enterRule();

        try {
            // InternalKim.g:3780:2: ( ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_expr_1_0= RULE_EXPR ) ) (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( (lv_urn_4_0= ruleUrnId ) ) ) )
            // InternalKim.g:3781:2: ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_expr_1_0= RULE_EXPR ) ) (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( (lv_urn_4_0= ruleUrnId ) ) )
            {
            // InternalKim.g:3781:2: ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_expr_1_0= RULE_EXPR ) ) (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( (lv_urn_4_0= ruleUrnId ) ) )
            int alt85=3;
            alt85 = dfa85.predict(input);
            switch (alt85) {
                case 1 :
                    // InternalKim.g:3782:3: ( (lv_function_0_0= ruleFunction ) )
                    {
                    // InternalKim.g:3782:3: ( (lv_function_0_0= ruleFunction ) )
                    // InternalKim.g:3783:4: (lv_function_0_0= ruleFunction )
                    {
                    // InternalKim.g:3783:4: (lv_function_0_0= ruleFunction )
                    // InternalKim.g:3784:5: lv_function_0_0= ruleFunction
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getExecutableValueAccess().getFunctionFunctionParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_function_0_0=ruleFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getExecutableValueRule());
                      					}
                      					set(
                      						current,
                      						"function",
                      						lv_function_0_0,
                      						"org.integratedmodelling.kim.Kim.Function");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:3802:3: ( ( (lv_expr_1_0= RULE_EXPR ) ) (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )? )
                    {
                    // InternalKim.g:3802:3: ( ( (lv_expr_1_0= RULE_EXPR ) ) (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )? )
                    // InternalKim.g:3803:4: ( (lv_expr_1_0= RULE_EXPR ) ) (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )?
                    {
                    // InternalKim.g:3803:4: ( (lv_expr_1_0= RULE_EXPR ) )
                    // InternalKim.g:3804:5: (lv_expr_1_0= RULE_EXPR )
                    {
                    // InternalKim.g:3804:5: (lv_expr_1_0= RULE_EXPR )
                    // InternalKim.g:3805:6: lv_expr_1_0= RULE_EXPR
                    {
                    lv_expr_1_0=(Token)match(input,RULE_EXPR,FOLLOW_52); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_expr_1_0, grammarAccess.getExecutableValueAccess().getExprEXPRTerminalRuleCall_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getExecutableValueRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"expr",
                      							lv_expr_1_0,
                      							"org.integratedmodelling.kim.Kim.EXPR");
                      					
                    }

                    }


                    }

                    // InternalKim.g:3821:4: (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )?
                    int alt84=2;
                    int LA84_0 = input.LA(1);

                    if ( (LA84_0==46) ) {
                        alt84=1;
                    }
                    switch (alt84) {
                        case 1 :
                            // InternalKim.g:3822:5: otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) )
                            {
                            otherlv_2=(Token)match(input,46,FOLLOW_53); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_2, grammarAccess.getExecutableValueAccess().getInKeyword_1_1_0());
                              				
                            }
                            // InternalKim.g:3826:5: ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) )
                            // InternalKim.g:3827:6: ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) )
                            {
                            // InternalKim.g:3827:6: ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) )
                            // InternalKim.g:3828:7: (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID )
                            {
                            // InternalKim.g:3828:7: (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID )
                            int alt83=3;
                            switch ( input.LA(1) ) {
                            case RULE_LOWERCASE_ID:
                                {
                                alt83=1;
                                }
                                break;
                            case RULE_UPPERCASE_ID:
                                {
                                alt83=2;
                                }
                                break;
                            case RULE_CAMELCASE_ID:
                                {
                                alt83=3;
                                }
                                break;
                            default:
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 83, 0, input);

                                throw nvae;
                            }

                            switch (alt83) {
                                case 1 :
                                    // InternalKim.g:3829:8: lv_language_3_1= RULE_LOWERCASE_ID
                                    {
                                    lv_language_3_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_language_3_1, grammarAccess.getExecutableValueAccess().getLanguageLOWERCASE_IDTerminalRuleCall_1_1_1_0_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getExecutableValueRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"language",
                                      									lv_language_3_1,
                                      									"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                                      							
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:3844:8: lv_language_3_2= RULE_UPPERCASE_ID
                                    {
                                    lv_language_3_2=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_language_3_2, grammarAccess.getExecutableValueAccess().getLanguageUPPERCASE_IDTerminalRuleCall_1_1_1_0_1());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getExecutableValueRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"language",
                                      									lv_language_3_2,
                                      									"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                                      							
                                    }

                                    }
                                    break;
                                case 3 :
                                    // InternalKim.g:3859:8: lv_language_3_3= RULE_CAMELCASE_ID
                                    {
                                    lv_language_3_3=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_language_3_3, grammarAccess.getExecutableValueAccess().getLanguageCAMELCASE_IDTerminalRuleCall_1_1_1_0_2());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getExecutableValueRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"language",
                                      									lv_language_3_3,
                                      									"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                                      							
                                    }

                                    }
                                    break;

                            }


                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:3879:3: ( (lv_urn_4_0= ruleUrnId ) )
                    {
                    // InternalKim.g:3879:3: ( (lv_urn_4_0= ruleUrnId ) )
                    // InternalKim.g:3880:4: (lv_urn_4_0= ruleUrnId )
                    {
                    // InternalKim.g:3880:4: (lv_urn_4_0= ruleUrnId )
                    // InternalKim.g:3881:5: lv_urn_4_0= ruleUrnId
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getExecutableValueAccess().getUrnUrnIdParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_urn_4_0=ruleUrnId();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getExecutableValueRule());
                      					}
                      					set(
                      						current,
                      						"urn",
                      						lv_urn_4_0,
                      						"org.integratedmodelling.kim.Kim.UrnId");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExecutableValue"


    // $ANTLR start "entryRuleMODEL_TYPE"
    // InternalKim.g:3902:1: entryRuleMODEL_TYPE returns [String current=null] : iv_ruleMODEL_TYPE= ruleMODEL_TYPE EOF ;
    public final String entryRuleMODEL_TYPE() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleMODEL_TYPE = null;


        try {
            // InternalKim.g:3902:50: (iv_ruleMODEL_TYPE= ruleMODEL_TYPE EOF )
            // InternalKim.g:3903:2: iv_ruleMODEL_TYPE= ruleMODEL_TYPE EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMODEL_TYPERule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMODEL_TYPE=ruleMODEL_TYPE();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMODEL_TYPE.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMODEL_TYPE"


    // $ANTLR start "ruleMODEL_TYPE"
    // InternalKim.g:3909:1: ruleMODEL_TYPE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'model' | kw= 'assess' | kw= 'learn' | kw= 'number' | kw= 'text' | kw= 'boolean' ) ;
    public final AntlrDatatypeRuleToken ruleMODEL_TYPE() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKim.g:3915:2: ( (kw= 'model' | kw= 'assess' | kw= 'learn' | kw= 'number' | kw= 'text' | kw= 'boolean' ) )
            // InternalKim.g:3916:2: (kw= 'model' | kw= 'assess' | kw= 'learn' | kw= 'number' | kw= 'text' | kw= 'boolean' )
            {
            // InternalKim.g:3916:2: (kw= 'model' | kw= 'assess' | kw= 'learn' | kw= 'number' | kw= 'text' | kw= 'boolean' )
            int alt86=6;
            switch ( input.LA(1) ) {
            case 68:
                {
                alt86=1;
                }
                break;
            case 69:
                {
                alt86=2;
                }
                break;
            case 70:
                {
                alt86=3;
                }
                break;
            case 71:
                {
                alt86=4;
                }
                break;
            case 72:
                {
                alt86=5;
                }
                break;
            case 73:
                {
                alt86=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 86, 0, input);

                throw nvae;
            }

            switch (alt86) {
                case 1 :
                    // InternalKim.g:3917:3: kw= 'model'
                    {
                    kw=(Token)match(input,68,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMODEL_TYPEAccess().getModelKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:3923:3: kw= 'assess'
                    {
                    kw=(Token)match(input,69,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMODEL_TYPEAccess().getAssessKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:3929:3: kw= 'learn'
                    {
                    kw=(Token)match(input,70,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMODEL_TYPEAccess().getLearnKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKim.g:3935:3: kw= 'number'
                    {
                    kw=(Token)match(input,71,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMODEL_TYPEAccess().getNumberKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalKim.g:3941:3: kw= 'text'
                    {
                    kw=(Token)match(input,72,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMODEL_TYPEAccess().getTextKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalKim.g:3947:3: kw= 'boolean'
                    {
                    kw=(Token)match(input,73,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMODEL_TYPEAccess().getBooleanKeyword_5());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMODEL_TYPE"


    // $ANTLR start "entryRuleNamespace"
    // InternalKim.g:3956:1: entryRuleNamespace returns [EObject current=null] : iv_ruleNamespace= ruleNamespace EOF ;
    public final EObject entryRuleNamespace() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNamespace = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 
        	grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 
        	grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6()
        	);

        try {
            // InternalKim.g:3962:2: (iv_ruleNamespace= ruleNamespace EOF )
            // InternalKim.g:3963:2: iv_ruleNamespace= ruleNamespace EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNamespaceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNamespace=ruleNamespace();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNamespace; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleNamespace"


    // $ANTLR start "ruleNamespace"
    // InternalKim.g:3972:1: ruleNamespace returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( ({...}? => ( ({...}? => ( (lv_private_2_0= 'private' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) )* ) ) ) (otherlv_4= 'namespace' | ( (lv_scenario_5_0= 'scenario' ) ) | ( (lv_worldviewBound_6_0= 'worldview' ) ) ) ( (lv_name_7_0= rulePathName ) ) ( (lv_docstring_8_0= RULE_STRING ) )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* ) ) ) (otherlv_41= 'with' otherlv_42= 'parameters' ( (lv_parameters_43_0= ruleMetadata ) ) )? (otherlv_44= 'with' otherlv_45= 'metadata' ( (lv_metadata_46_0= ruleMetadata ) ) )? (otherlv_47= 'with' otherlv_48= 'documentation' ( (lv_documentation_49_0= ruleMetadata ) ) )? otherlv_50= ';' ) ;
    public final EObject ruleNamespace() throws RecognitionException {
        EObject current = null;

        Token lv_private_2_0=null;
        Token lv_inactive_3_0=null;
        Token otherlv_4=null;
        Token lv_scenario_5_0=null;
        Token lv_worldviewBound_6_0=null;
        Token lv_docstring_8_0=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        Token otherlv_23=null;
        Token lv_rootDomain_24_0=null;
        Token otherlv_26=null;
        Token otherlv_27=null;
        Token otherlv_29=null;
        Token otherlv_31=null;
        Token otherlv_34=null;
        Token otherlv_35=null;
        Token otherlv_37=null;
        Token otherlv_39=null;
        Token otherlv_41=null;
        Token otherlv_42=null;
        Token otherlv_44=null;
        Token otherlv_45=null;
        Token otherlv_47=null;
        Token otherlv_48=null;
        Token otherlv_50=null;
        EObject lv_annotations_0_0 = null;

        AntlrDatatypeRuleToken lv_name_7_0 = null;

        EObject lv_imported_11_0 = null;

        EObject lv_imported_13_0 = null;

        EObject lv_owlImports_15_0 = null;

        EObject lv_owlImports_17_0 = null;

        EObject lv_coverage_19_0 = null;

        EObject lv_coverage_21_0 = null;

        EObject lv_domainConcept_25_0 = null;

        AntlrDatatypeRuleToken lv_disjointNamespaces_28_0 = null;

        AntlrDatatypeRuleToken lv_disjointNamespaces_30_0 = null;

        AntlrDatatypeRuleToken lv_version_32_0 = null;

        AntlrDatatypeRuleToken lv_lookupNamespace_36_0 = null;

        AntlrDatatypeRuleToken lv_blacklistNamespace_38_0 = null;

        EObject lv_weights_40_0 = null;

        EObject lv_parameters_43_0 = null;

        EObject lv_metadata_46_0 = null;

        EObject lv_documentation_49_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 
        	grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 
        	grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6()
        	);

        try {
            // InternalKim.g:3983:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( ({...}? => ( ({...}? => ( (lv_private_2_0= 'private' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) )* ) ) ) (otherlv_4= 'namespace' | ( (lv_scenario_5_0= 'scenario' ) ) | ( (lv_worldviewBound_6_0= 'worldview' ) ) ) ( (lv_name_7_0= rulePathName ) ) ( (lv_docstring_8_0= RULE_STRING ) )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* ) ) ) (otherlv_41= 'with' otherlv_42= 'parameters' ( (lv_parameters_43_0= ruleMetadata ) ) )? (otherlv_44= 'with' otherlv_45= 'metadata' ( (lv_metadata_46_0= ruleMetadata ) ) )? (otherlv_47= 'with' otherlv_48= 'documentation' ( (lv_documentation_49_0= ruleMetadata ) ) )? otherlv_50= ';' ) )
            // InternalKim.g:3984:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( ({...}? => ( ({...}? => ( (lv_private_2_0= 'private' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) )* ) ) ) (otherlv_4= 'namespace' | ( (lv_scenario_5_0= 'scenario' ) ) | ( (lv_worldviewBound_6_0= 'worldview' ) ) ) ( (lv_name_7_0= rulePathName ) ) ( (lv_docstring_8_0= RULE_STRING ) )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* ) ) ) (otherlv_41= 'with' otherlv_42= 'parameters' ( (lv_parameters_43_0= ruleMetadata ) ) )? (otherlv_44= 'with' otherlv_45= 'metadata' ( (lv_metadata_46_0= ruleMetadata ) ) )? (otherlv_47= 'with' otherlv_48= 'documentation' ( (lv_documentation_49_0= ruleMetadata ) ) )? otherlv_50= ';' )
            {
            // InternalKim.g:3984:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( ({...}? => ( ({...}? => ( (lv_private_2_0= 'private' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) )* ) ) ) (otherlv_4= 'namespace' | ( (lv_scenario_5_0= 'scenario' ) ) | ( (lv_worldviewBound_6_0= 'worldview' ) ) ) ( (lv_name_7_0= rulePathName ) ) ( (lv_docstring_8_0= RULE_STRING ) )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* ) ) ) (otherlv_41= 'with' otherlv_42= 'parameters' ( (lv_parameters_43_0= ruleMetadata ) ) )? (otherlv_44= 'with' otherlv_45= 'metadata' ( (lv_metadata_46_0= ruleMetadata ) ) )? (otherlv_47= 'with' otherlv_48= 'documentation' ( (lv_documentation_49_0= ruleMetadata ) ) )? otherlv_50= ';' )
            // InternalKim.g:3985:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( ({...}? => ( ({...}? => ( (lv_private_2_0= 'private' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) )* ) ) ) (otherlv_4= 'namespace' | ( (lv_scenario_5_0= 'scenario' ) ) | ( (lv_worldviewBound_6_0= 'worldview' ) ) ) ( (lv_name_7_0= rulePathName ) ) ( (lv_docstring_8_0= RULE_STRING ) )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* ) ) ) (otherlv_41= 'with' otherlv_42= 'parameters' ( (lv_parameters_43_0= ruleMetadata ) ) )? (otherlv_44= 'with' otherlv_45= 'metadata' ( (lv_metadata_46_0= ruleMetadata ) ) )? (otherlv_47= 'with' otherlv_48= 'documentation' ( (lv_documentation_49_0= ruleMetadata ) ) )? otherlv_50= ';'
            {
            // InternalKim.g:3985:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop87:
            do {
                int alt87=2;
                int LA87_0 = input.LA(1);

                if ( (LA87_0==RULE_ANNOTATION_ID) ) {
                    alt87=1;
                }


                switch (alt87) {
            	case 1 :
            	    // InternalKim.g:3986:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalKim.g:3986:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalKim.g:3987:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getNamespaceAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_56);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"org.integratedmodelling.kim.Kim.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop87;
                }
            } while (true);

            // InternalKim.g:4004:3: ( ( ( ( ({...}? => ( ({...}? => ( (lv_private_2_0= 'private' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) )* ) ) )
            // InternalKim.g:4005:4: ( ( ( ({...}? => ( ({...}? => ( (lv_private_2_0= 'private' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) )* ) )
            {
            // InternalKim.g:4005:4: ( ( ( ({...}? => ( ({...}? => ( (lv_private_2_0= 'private' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) )* ) )
            // InternalKim.g:4006:5: ( ( ({...}? => ( ({...}? => ( (lv_private_2_0= 'private' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getNamespaceAccess().getUnorderedGroup_1());
            // InternalKim.g:4009:5: ( ( ({...}? => ( ({...}? => ( (lv_private_2_0= 'private' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) )* )
            // InternalKim.g:4010:6: ( ({...}? => ( ({...}? => ( (lv_private_2_0= 'private' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) )*
            {
            // InternalKim.g:4010:6: ( ({...}? => ( ({...}? => ( (lv_private_2_0= 'private' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) )*
            loop88:
            do {
                int alt88=3;
                int LA88_0 = input.LA(1);

                if ( LA88_0 == 20 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 0) ) {
                    alt88=1;
                }
                else if ( LA88_0 == 19 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 1) ) {
                    alt88=2;
                }


                switch (alt88) {
            	case 1 :
            	    // InternalKim.g:4011:4: ({...}? => ( ({...}? => ( (lv_private_2_0= 'private' ) ) ) ) )
            	    {
            	    // InternalKim.g:4011:4: ({...}? => ( ({...}? => ( (lv_private_2_0= 'private' ) ) ) ) )
            	    // InternalKim.g:4012:5: {...}? => ( ({...}? => ( (lv_private_2_0= 'private' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 0)");
            	    }
            	    // InternalKim.g:4012:106: ( ({...}? => ( (lv_private_2_0= 'private' ) ) ) )
            	    // InternalKim.g:4013:6: ({...}? => ( (lv_private_2_0= 'private' ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 0);
            	    // InternalKim.g:4016:9: ({...}? => ( (lv_private_2_0= 'private' ) ) )
            	    // InternalKim.g:4016:10: {...}? => ( (lv_private_2_0= 'private' ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:4016:19: ( (lv_private_2_0= 'private' ) )
            	    // InternalKim.g:4016:20: (lv_private_2_0= 'private' )
            	    {
            	    // InternalKim.g:4016:20: (lv_private_2_0= 'private' )
            	    // InternalKim.g:4017:10: lv_private_2_0= 'private'
            	    {
            	    lv_private_2_0=(Token)match(input,20,FOLLOW_57); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(lv_private_2_0, grammarAccess.getNamespaceAccess().getPrivatePrivateKeyword_1_0_0());
            	      									
            	    }
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElement(grammarAccess.getNamespaceRule());
            	      										}
            	      										setWithLastConsumed(current, "private", true, "private");
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKim.g:4034:4: ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) )
            	    {
            	    // InternalKim.g:4034:4: ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) )
            	    // InternalKim.g:4035:5: {...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 1)");
            	    }
            	    // InternalKim.g:4035:106: ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) )
            	    // InternalKim.g:4036:6: ({...}? => ( (lv_inactive_3_0= 'void' ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 1);
            	    // InternalKim.g:4039:9: ({...}? => ( (lv_inactive_3_0= 'void' ) ) )
            	    // InternalKim.g:4039:10: {...}? => ( (lv_inactive_3_0= 'void' ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:4039:19: ( (lv_inactive_3_0= 'void' ) )
            	    // InternalKim.g:4039:20: (lv_inactive_3_0= 'void' )
            	    {
            	    // InternalKim.g:4039:20: (lv_inactive_3_0= 'void' )
            	    // InternalKim.g:4040:10: lv_inactive_3_0= 'void'
            	    {
            	    lv_inactive_3_0=(Token)match(input,19,FOLLOW_57); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(lv_inactive_3_0, grammarAccess.getNamespaceAccess().getInactiveVoidKeyword_1_1_0());
            	      									
            	    }
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElement(grammarAccess.getNamespaceRule());
            	      										}
            	      										setWithLastConsumed(current, "inactive", true, "void");
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop88;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getNamespaceAccess().getUnorderedGroup_1());

            }

            // InternalKim.g:4064:3: (otherlv_4= 'namespace' | ( (lv_scenario_5_0= 'scenario' ) ) | ( (lv_worldviewBound_6_0= 'worldview' ) ) )
            int alt89=3;
            switch ( input.LA(1) ) {
            case 74:
                {
                alt89=1;
                }
                break;
            case 75:
                {
                alt89=2;
                }
                break;
            case 76:
                {
                alt89=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 89, 0, input);

                throw nvae;
            }

            switch (alt89) {
                case 1 :
                    // InternalKim.g:4065:4: otherlv_4= 'namespace'
                    {
                    otherlv_4=(Token)match(input,74,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getNamespaceAccess().getNamespaceKeyword_2_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:4070:4: ( (lv_scenario_5_0= 'scenario' ) )
                    {
                    // InternalKim.g:4070:4: ( (lv_scenario_5_0= 'scenario' ) )
                    // InternalKim.g:4071:5: (lv_scenario_5_0= 'scenario' )
                    {
                    // InternalKim.g:4071:5: (lv_scenario_5_0= 'scenario' )
                    // InternalKim.g:4072:6: lv_scenario_5_0= 'scenario'
                    {
                    lv_scenario_5_0=(Token)match(input,75,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_scenario_5_0, grammarAccess.getNamespaceAccess().getScenarioScenarioKeyword_2_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getNamespaceRule());
                      						}
                      						setWithLastConsumed(current, "scenario", true, "scenario");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:4085:4: ( (lv_worldviewBound_6_0= 'worldview' ) )
                    {
                    // InternalKim.g:4085:4: ( (lv_worldviewBound_6_0= 'worldview' ) )
                    // InternalKim.g:4086:5: (lv_worldviewBound_6_0= 'worldview' )
                    {
                    // InternalKim.g:4086:5: (lv_worldviewBound_6_0= 'worldview' )
                    // InternalKim.g:4087:6: lv_worldviewBound_6_0= 'worldview'
                    {
                    lv_worldviewBound_6_0=(Token)match(input,76,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_worldviewBound_6_0, grammarAccess.getNamespaceAccess().getWorldviewBoundWorldviewKeyword_2_2_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getNamespaceRule());
                      						}
                      						setWithLastConsumed(current, "worldviewBound", true, "worldview");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalKim.g:4100:3: ( (lv_name_7_0= rulePathName ) )
            // InternalKim.g:4101:4: (lv_name_7_0= rulePathName )
            {
            // InternalKim.g:4101:4: (lv_name_7_0= rulePathName )
            // InternalKim.g:4102:5: lv_name_7_0= rulePathName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getNamespaceAccess().getNamePathNameParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_58);
            lv_name_7_0=rulePathName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getNamespaceRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_7_0,
              						"org.integratedmodelling.kim.Kim.PathName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:4119:3: ( (lv_docstring_8_0= RULE_STRING ) )?
            int alt90=2;
            int LA90_0 = input.LA(1);

            if ( (LA90_0==RULE_STRING) ) {
                alt90=1;
            }
            switch (alt90) {
                case 1 :
                    // InternalKim.g:4120:4: (lv_docstring_8_0= RULE_STRING )
                    {
                    // InternalKim.g:4120:4: (lv_docstring_8_0= RULE_STRING )
                    // InternalKim.g:4121:5: lv_docstring_8_0= RULE_STRING
                    {
                    lv_docstring_8_0=(Token)match(input,RULE_STRING,FOLLOW_59); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_docstring_8_0, grammarAccess.getNamespaceAccess().getDocstringSTRINGTerminalRuleCall_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getNamespaceRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"docstring",
                      						lv_docstring_8_0,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:4137:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* ) ) )
            // InternalKim.g:4138:4: ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* ) )
            {
            // InternalKim.g:4138:4: ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* ) )
            // InternalKim.g:4139:5: ( ( ({...}? => ( ({...}? => (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());
            // InternalKim.g:4142:5: ( ( ({...}? => ( ({...}? => (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* )
            // InternalKim.g:4143:6: ( ({...}? => ( ({...}? => (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )*
            {
            // InternalKim.g:4143:6: ( ({...}? => ( ({...}? => (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )*
            loop100:
            do {
                int alt100=8;
                alt100 = dfa100.predict(input);
                switch (alt100) {
            	case 1 :
            	    // InternalKim.g:4144:4: ({...}? => ( ({...}? => (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:4144:4: ({...}? => ( ({...}? => (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* ) ) ) )
            	    // InternalKim.g:4145:5: {...}? => ( ({...}? => (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 0)");
            	    }
            	    // InternalKim.g:4145:106: ( ({...}? => (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* ) ) )
            	    // InternalKim.g:4146:6: ({...}? => (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 0);
            	    // InternalKim.g:4149:9: ({...}? => (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* ) )
            	    // InternalKim.g:4149:10: {...}? => (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:4149:19: (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* )
            	    // InternalKim.g:4149:20: otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )*
            	    {
            	    otherlv_10=(Token)match(input,27,FOLLOW_60); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_10, grammarAccess.getNamespaceAccess().getUsingKeyword_5_0_0());
            	      								
            	    }
            	    // InternalKim.g:4153:9: ( (lv_imported_11_0= ruleImport ) )
            	    // InternalKim.g:4154:10: (lv_imported_11_0= ruleImport )
            	    {
            	    // InternalKim.g:4154:10: (lv_imported_11_0= ruleImport )
            	    // InternalKim.g:4155:11: lv_imported_11_0= ruleImport
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getNamespaceAccess().getImportedImportParserRuleCall_5_0_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_61);
            	    lv_imported_11_0=ruleImport();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	      											}
            	      											add(
            	      												current,
            	      												"imported",
            	      												lv_imported_11_0,
            	      												"org.integratedmodelling.kim.Kim.Import");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:4172:9: ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )*
            	    loop91:
            	    do {
            	        int alt91=2;
            	        int LA91_0 = input.LA(1);

            	        if ( (LA91_0==22) ) {
            	            alt91=1;
            	        }


            	        switch (alt91) {
            	    	case 1 :
            	    	    // InternalKim.g:4173:10: ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) )
            	    	    {
            	    	    // InternalKim.g:4173:10: ( ( ',' )=>otherlv_12= ',' )
            	    	    // InternalKim.g:4174:11: ( ',' )=>otherlv_12= ','
            	    	    {
            	    	    otherlv_12=(Token)match(input,22,FOLLOW_60); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      											newLeafNode(otherlv_12, grammarAccess.getNamespaceAccess().getCommaKeyword_5_0_2_0());
            	    	      										
            	    	    }

            	    	    }

            	    	    // InternalKim.g:4180:10: ( (lv_imported_13_0= ruleImport ) )
            	    	    // InternalKim.g:4181:11: (lv_imported_13_0= ruleImport )
            	    	    {
            	    	    // InternalKim.g:4181:11: (lv_imported_13_0= ruleImport )
            	    	    // InternalKim.g:4182:12: lv_imported_13_0= ruleImport
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getNamespaceAccess().getImportedImportParserRuleCall_5_0_2_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_61);
            	    	    lv_imported_13_0=ruleImport();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"imported",
            	    	      													lv_imported_13_0,
            	    	      													"org.integratedmodelling.kim.Kim.Import");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop91;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKim.g:4206:4: ({...}? => ( ({...}? => (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:4206:4: ({...}? => ( ({...}? => (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* ) ) ) )
            	    // InternalKim.g:4207:5: {...}? => ( ({...}? => (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 1)");
            	    }
            	    // InternalKim.g:4207:106: ( ({...}? => (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* ) ) )
            	    // InternalKim.g:4208:6: ({...}? => (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 1);
            	    // InternalKim.g:4211:9: ({...}? => (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* ) )
            	    // InternalKim.g:4211:10: {...}? => (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:4211:19: (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* )
            	    // InternalKim.g:4211:20: otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )*
            	    {
            	    otherlv_14=(Token)match(input,77,FOLLOW_62); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_14, grammarAccess.getNamespaceAccess().getImportsKeyword_5_1_0());
            	      								
            	    }
            	    // InternalKim.g:4215:9: ( (lv_owlImports_15_0= ruleOwlImport ) )
            	    // InternalKim.g:4216:10: (lv_owlImports_15_0= ruleOwlImport )
            	    {
            	    // InternalKim.g:4216:10: (lv_owlImports_15_0= ruleOwlImport )
            	    // InternalKim.g:4217:11: lv_owlImports_15_0= ruleOwlImport
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getNamespaceAccess().getOwlImportsOwlImportParserRuleCall_5_1_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_61);
            	    lv_owlImports_15_0=ruleOwlImport();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	      											}
            	      											add(
            	      												current,
            	      												"owlImports",
            	      												lv_owlImports_15_0,
            	      												"org.integratedmodelling.kim.Kim.OwlImport");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:4234:9: (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )*
            	    loop92:
            	    do {
            	        int alt92=2;
            	        int LA92_0 = input.LA(1);

            	        if ( (LA92_0==22) ) {
            	            alt92=1;
            	        }


            	        switch (alt92) {
            	    	case 1 :
            	    	    // InternalKim.g:4235:10: otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) )
            	    	    {
            	    	    otherlv_16=(Token)match(input,22,FOLLOW_62); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_16, grammarAccess.getNamespaceAccess().getCommaKeyword_5_1_2_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:4239:10: ( (lv_owlImports_17_0= ruleOwlImport ) )
            	    	    // InternalKim.g:4240:11: (lv_owlImports_17_0= ruleOwlImport )
            	    	    {
            	    	    // InternalKim.g:4240:11: (lv_owlImports_17_0= ruleOwlImport )
            	    	    // InternalKim.g:4241:12: lv_owlImports_17_0= ruleOwlImport
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getNamespaceAccess().getOwlImportsOwlImportParserRuleCall_5_1_2_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_61);
            	    	    lv_owlImports_17_0=ruleOwlImport();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"owlImports",
            	    	      													lv_owlImports_17_0,
            	    	      													"org.integratedmodelling.kim.Kim.OwlImport");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop92;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalKim.g:4265:4: ({...}? => ( ({...}? => (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:4265:4: ({...}? => ( ({...}? => (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* ) ) ) )
            	    // InternalKim.g:4266:5: {...}? => ( ({...}? => (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 2)");
            	    }
            	    // InternalKim.g:4266:106: ( ({...}? => (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* ) ) )
            	    // InternalKim.g:4267:6: ({...}? => (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 2);
            	    // InternalKim.g:4270:9: ({...}? => (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* ) )
            	    // InternalKim.g:4270:10: {...}? => (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:4270:19: (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* )
            	    // InternalKim.g:4270:20: otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )*
            	    {
            	    otherlv_18=(Token)match(input,78,FOLLOW_19); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_18, grammarAccess.getNamespaceAccess().getCoveringKeyword_5_2_0());
            	      								
            	    }
            	    // InternalKim.g:4274:9: ( (lv_coverage_19_0= ruleFunction ) )
            	    // InternalKim.g:4275:10: (lv_coverage_19_0= ruleFunction )
            	    {
            	    // InternalKim.g:4275:10: (lv_coverage_19_0= ruleFunction )
            	    // InternalKim.g:4276:11: lv_coverage_19_0= ruleFunction
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getNamespaceAccess().getCoverageFunctionParserRuleCall_5_2_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_61);
            	    lv_coverage_19_0=ruleFunction();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	      											}
            	      											add(
            	      												current,
            	      												"coverage",
            	      												lv_coverage_19_0,
            	      												"org.integratedmodelling.kim.Kim.Function");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:4293:9: ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )*
            	    loop93:
            	    do {
            	        int alt93=2;
            	        int LA93_0 = input.LA(1);

            	        if ( (LA93_0==22) ) {
            	            alt93=1;
            	        }


            	        switch (alt93) {
            	    	case 1 :
            	    	    // InternalKim.g:4294:10: ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) )
            	    	    {
            	    	    // InternalKim.g:4294:10: ( ( ',' )=>otherlv_20= ',' )
            	    	    // InternalKim.g:4295:11: ( ',' )=>otherlv_20= ','
            	    	    {
            	    	    otherlv_20=(Token)match(input,22,FOLLOW_19); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      											newLeafNode(otherlv_20, grammarAccess.getNamespaceAccess().getCommaKeyword_5_2_2_0());
            	    	      										
            	    	    }

            	    	    }

            	    	    // InternalKim.g:4301:10: ( (lv_coverage_21_0= ruleFunction ) )
            	    	    // InternalKim.g:4302:11: (lv_coverage_21_0= ruleFunction )
            	    	    {
            	    	    // InternalKim.g:4302:11: (lv_coverage_21_0= ruleFunction )
            	    	    // InternalKim.g:4303:12: lv_coverage_21_0= ruleFunction
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getNamespaceAccess().getCoverageFunctionParserRuleCall_5_2_2_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_61);
            	    	    lv_coverage_21_0=ruleFunction();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"coverage",
            	    	      													lv_coverage_21_0,
            	    	      													"org.integratedmodelling.kim.Kim.Function");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop93;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalKim.g:4327:4: ({...}? => ( ({...}? => (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) ) ) ) )
            	    {
            	    // InternalKim.g:4327:4: ({...}? => ( ({...}? => (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) ) ) ) )
            	    // InternalKim.g:4328:5: {...}? => ( ({...}? => (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 3)");
            	    }
            	    // InternalKim.g:4328:106: ( ({...}? => (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) ) ) )
            	    // InternalKim.g:4329:6: ({...}? => (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 3);
            	    // InternalKim.g:4332:9: ({...}? => (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) ) )
            	    // InternalKim.g:4332:10: {...}? => (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:4332:19: (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) )
            	    // InternalKim.g:4332:20: otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) )
            	    {
            	    otherlv_22=(Token)match(input,46,FOLLOW_63); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_22, grammarAccess.getNamespaceAccess().getInKeyword_5_3_0());
            	      								
            	    }
            	    otherlv_23=(Token)match(input,79,FOLLOW_64); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_23, grammarAccess.getNamespaceAccess().getDomainKeyword_5_3_1());
            	      								
            	    }
            	    // InternalKim.g:4340:9: ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) )
            	    int alt94=2;
            	    int LA94_0 = input.LA(1);

            	    if ( (LA94_0==80) ) {
            	        alt94=1;
            	    }
            	    else if ( (LA94_0==RULE_LOWERCASE_ID||LA94_0==RULE_CAMELCASE_ID||LA94_0==34||(LA94_0>=108 && LA94_0<=109)||(LA94_0>=116 && LA94_0<=117)||(LA94_0>=119 && LA94_0<=130)) ) {
            	        alt94=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 94, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt94) {
            	        case 1 :
            	            // InternalKim.g:4341:10: ( (lv_rootDomain_24_0= 'root' ) )
            	            {
            	            // InternalKim.g:4341:10: ( (lv_rootDomain_24_0= 'root' ) )
            	            // InternalKim.g:4342:11: (lv_rootDomain_24_0= 'root' )
            	            {
            	            // InternalKim.g:4342:11: (lv_rootDomain_24_0= 'root' )
            	            // InternalKim.g:4343:12: lv_rootDomain_24_0= 'root'
            	            {
            	            lv_rootDomain_24_0=(Token)match(input,80,FOLLOW_59); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_rootDomain_24_0, grammarAccess.getNamespaceAccess().getRootDomainRootKeyword_5_3_2_0_0());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getNamespaceRule());
            	              												}
            	              												setWithLastConsumed(current, "rootDomain", true, "root");
            	              											
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:4356:10: ( (lv_domainConcept_25_0= ruleConcept ) )
            	            {
            	            // InternalKim.g:4356:10: ( (lv_domainConcept_25_0= ruleConcept ) )
            	            // InternalKim.g:4357:11: (lv_domainConcept_25_0= ruleConcept )
            	            {
            	            // InternalKim.g:4357:11: (lv_domainConcept_25_0= ruleConcept )
            	            // InternalKim.g:4358:12: lv_domainConcept_25_0= ruleConcept
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getNamespaceAccess().getDomainConceptConceptParserRuleCall_5_3_2_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_59);
            	            lv_domainConcept_25_0=ruleConcept();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	              												}
            	              												set(
            	              													current,
            	              													"domainConcept",
            	              													lv_domainConcept_25_0,
            	              													"org.integratedmodelling.kim.Kim.Concept");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalKim.g:4382:4: ({...}? => ( ({...}? => (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) ) ) ) )
            	    {
            	    // InternalKim.g:4382:4: ({...}? => ( ({...}? => (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) ) ) ) )
            	    // InternalKim.g:4383:5: {...}? => ( ({...}? => (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 4) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 4)");
            	    }
            	    // InternalKim.g:4383:106: ( ({...}? => (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) ) ) )
            	    // InternalKim.g:4384:6: ({...}? => (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 4);
            	    // InternalKim.g:4387:9: ({...}? => (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) ) )
            	    // InternalKim.g:4387:10: {...}? => (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:4387:19: (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) )
            	    // InternalKim.g:4387:20: otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* )
            	    {
            	    otherlv_26=(Token)match(input,81,FOLLOW_65); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_26, grammarAccess.getNamespaceAccess().getDisjointKeyword_5_4_0());
            	      								
            	    }
            	    otherlv_27=(Token)match(input,38,FOLLOW_19); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_27, grammarAccess.getNamespaceAccess().getWithKeyword_5_4_1());
            	      								
            	    }
            	    // InternalKim.g:4395:9: ( (lv_disjointNamespaces_28_0= rulePathName ) )
            	    // InternalKim.g:4396:10: (lv_disjointNamespaces_28_0= rulePathName )
            	    {
            	    // InternalKim.g:4396:10: (lv_disjointNamespaces_28_0= rulePathName )
            	    // InternalKim.g:4397:11: lv_disjointNamespaces_28_0= rulePathName
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getNamespaceAccess().getDisjointNamespacesPathNameParserRuleCall_5_4_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_66);
            	    lv_disjointNamespaces_28_0=rulePathName();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	      											}
            	      											add(
            	      												current,
            	      												"disjointNamespaces",
            	      												lv_disjointNamespaces_28_0,
            	      												"org.integratedmodelling.kim.Kim.PathName");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:4414:9: (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* )
            	    // InternalKim.g:4415:10: otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )*
            	    {
            	    otherlv_29=(Token)match(input,22,FOLLOW_67); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(otherlv_29, grammarAccess.getNamespaceAccess().getCommaKeyword_5_4_3_0());
            	      									
            	    }
            	    // InternalKim.g:4419:10: ( (lv_disjointNamespaces_30_0= rulePathName ) )*
            	    loop95:
            	    do {
            	        int alt95=2;
            	        int LA95_0 = input.LA(1);

            	        if ( (LA95_0==RULE_LOWERCASE_ID) ) {
            	            alt95=1;
            	        }


            	        switch (alt95) {
            	    	case 1 :
            	    	    // InternalKim.g:4420:11: (lv_disjointNamespaces_30_0= rulePathName )
            	    	    {
            	    	    // InternalKim.g:4420:11: (lv_disjointNamespaces_30_0= rulePathName )
            	    	    // InternalKim.g:4421:12: lv_disjointNamespaces_30_0= rulePathName
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getNamespaceAccess().getDisjointNamespacesPathNameParserRuleCall_5_4_3_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_67);
            	    	    lv_disjointNamespaces_30_0=rulePathName();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"disjointNamespaces",
            	    	      													lv_disjointNamespaces_30_0,
            	    	      													"org.integratedmodelling.kim.Kim.PathName");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop95;
            	        }
            	    } while (true);


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalKim.g:4445:4: ({...}? => ( ({...}? => (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) ) ) ) )
            	    {
            	    // InternalKim.g:4445:4: ({...}? => ( ({...}? => (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) ) ) ) )
            	    // InternalKim.g:4446:5: {...}? => ( ({...}? => (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 5) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 5)");
            	    }
            	    // InternalKim.g:4446:106: ( ({...}? => (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) ) ) )
            	    // InternalKim.g:4447:6: ({...}? => (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 5);
            	    // InternalKim.g:4450:9: ({...}? => (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) ) )
            	    // InternalKim.g:4450:10: {...}? => (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:4450:19: (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) )
            	    // InternalKim.g:4450:20: otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) )
            	    {
            	    otherlv_31=(Token)match(input,82,FOLLOW_68); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_31, grammarAccess.getNamespaceAccess().getVersionKeyword_5_5_0());
            	      								
            	    }
            	    // InternalKim.g:4454:9: ( (lv_version_32_0= ruleVersionNumber ) )
            	    // InternalKim.g:4455:10: (lv_version_32_0= ruleVersionNumber )
            	    {
            	    // InternalKim.g:4455:10: (lv_version_32_0= ruleVersionNumber )
            	    // InternalKim.g:4456:11: lv_version_32_0= ruleVersionNumber
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getNamespaceAccess().getVersionVersionNumberParserRuleCall_5_5_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_59);
            	    lv_version_32_0=ruleVersionNumber();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	      											}
            	      											set(
            	      												current,
            	      												"version",
            	      												lv_version_32_0,
            	      												"org.integratedmodelling.kim.Kim.VersionNumber");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 7 :
            	    // InternalKim.g:4479:4: ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) )
            	    {
            	    // InternalKim.g:4479:4: ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) )
            	    // InternalKim.g:4480:5: {...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 6) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 6)");
            	    }
            	    // InternalKim.g:4480:106: ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) )
            	    // InternalKim.g:4481:6: ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 6);
            	    // InternalKim.g:4484:9: ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) )
            	    // InternalKim.g:4484:10: {...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:4484:19: ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) )
            	    // InternalKim.g:4484:20: ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) )
            	    {
            	    // InternalKim.g:4484:20: ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) )
            	    // InternalKim.g:4485:10: ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?)
            	    {
            	    getUnorderedGroupHelper().enter(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6());
            	    // InternalKim.g:4488:10: ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?)
            	    // InternalKim.g:4489:11: ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?
            	    {
            	    // InternalKim.g:4489:11: ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+
            	    int cnt99=0;
            	    loop99:
            	    do {
            	        int alt99=4;
            	        switch ( input.LA(1) ) {
            	        case 27:
            	            {
            	            int LA99_2 = input.LA(2);

            	            if ( synpred188_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 2) ) {
            	                alt99=3;
            	            }


            	            }
            	            break;
            	        case 83:
            	            {
            	            int LA99_3 = input.LA(2);

            	            if ( synpred185_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 0) ) {
            	                alt99=1;
            	            }


            	            }
            	            break;
            	        case 85:
            	            {
            	            int LA99_4 = input.LA(2);

            	            if ( synpred187_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 1) ) {
            	                alt99=2;
            	            }


            	            }
            	            break;

            	        }

            	        switch (alt99) {
            	    	case 1 :
            	    	    // InternalKim.g:4490:9: ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) )
            	    	    {
            	    	    // InternalKim.g:4490:9: ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) )
            	    	    // InternalKim.g:4491:10: {...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) )
            	    	    {
            	    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 0) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 0)");
            	    	    }
            	    	    // InternalKim.g:4491:113: ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) )
            	    	    // InternalKim.g:4492:11: ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) )
            	    	    {
            	    	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 0);
            	    	    // InternalKim.g:4495:14: ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) )
            	    	    // InternalKim.g:4495:15: {...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? )
            	    	    {
            	    	    if ( !((true)) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    	    }
            	    	    // InternalKim.g:4495:24: (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? )
            	    	    // InternalKim.g:4495:25: otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )?
            	    	    {
            	    	    otherlv_34=(Token)match(input,83,FOLLOW_69); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      														newLeafNode(otherlv_34, grammarAccess.getNamespaceAccess().getResolveKeyword_5_6_0_0());
            	    	      													
            	    	    }
            	    	    // InternalKim.g:4499:14: (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )?
            	    	    int alt97=2;
            	    	    int LA97_0 = input.LA(1);

            	    	    if ( (LA97_0==84) ) {
            	    	        alt97=1;
            	    	    }
            	    	    switch (alt97) {
            	    	        case 1 :
            	    	            // InternalKim.g:4500:15: otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )*
            	    	            {
            	    	            otherlv_35=(Token)match(input,84,FOLLOW_67); if (state.failed) return current;
            	    	            if ( state.backtracking==0 ) {

            	    	              															newLeafNode(otherlv_35, grammarAccess.getNamespaceAccess().getFromKeyword_5_6_0_1_0());
            	    	              														
            	    	            }
            	    	            // InternalKim.g:4504:15: ( (lv_lookupNamespace_36_0= rulePathName ) )*
            	    	            loop96:
            	    	            do {
            	    	                int alt96=2;
            	    	                int LA96_0 = input.LA(1);

            	    	                if ( (LA96_0==RULE_LOWERCASE_ID) ) {
            	    	                    alt96=1;
            	    	                }


            	    	                switch (alt96) {
            	    	            	case 1 :
            	    	            	    // InternalKim.g:4505:16: (lv_lookupNamespace_36_0= rulePathName )
            	    	            	    {
            	    	            	    // InternalKim.g:4505:16: (lv_lookupNamespace_36_0= rulePathName )
            	    	            	    // InternalKim.g:4506:17: lv_lookupNamespace_36_0= rulePathName
            	    	            	    {
            	    	            	    if ( state.backtracking==0 ) {

            	    	            	      																	newCompositeNode(grammarAccess.getNamespaceAccess().getLookupNamespacePathNameParserRuleCall_5_6_0_1_1_0());
            	    	            	      																
            	    	            	    }
            	    	            	    pushFollow(FOLLOW_67);
            	    	            	    lv_lookupNamespace_36_0=rulePathName();

            	    	            	    state._fsp--;
            	    	            	    if (state.failed) return current;
            	    	            	    if ( state.backtracking==0 ) {

            	    	            	      																	if (current==null) {
            	    	            	      																		current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	    	            	      																	}
            	    	            	      																	add(
            	    	            	      																		current,
            	    	            	      																		"lookupNamespace",
            	    	            	      																		lv_lookupNamespace_36_0,
            	    	            	      																		"org.integratedmodelling.kim.Kim.PathName");
            	    	            	      																	afterParserOrEnumRuleCall();
            	    	            	      																
            	    	            	    }

            	    	            	    }


            	    	            	    }
            	    	            	    break;

            	    	            	default :
            	    	            	    break loop96;
            	    	                }
            	    	            } while (true);


            	    	            }
            	    	            break;

            	    	    }


            	    	    }


            	    	    }

            	    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6());

            	    	    }


            	    	    }


            	    	    }
            	    	    break;
            	    	case 2 :
            	    	    // InternalKim.g:4530:9: ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) )
            	    	    {
            	    	    // InternalKim.g:4530:9: ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) )
            	    	    // InternalKim.g:4531:10: {...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) )
            	    	    {
            	    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 1) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 1)");
            	    	    }
            	    	    // InternalKim.g:4531:113: ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) )
            	    	    // InternalKim.g:4532:11: ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) )
            	    	    {
            	    	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 1);
            	    	    // InternalKim.g:4535:14: ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) )
            	    	    // InternalKim.g:4535:15: {...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* )
            	    	    {
            	    	    if ( !((true)) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    	    }
            	    	    // InternalKim.g:4535:24: (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* )
            	    	    // InternalKim.g:4535:25: otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )*
            	    	    {
            	    	    otherlv_37=(Token)match(input,85,FOLLOW_67); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      														newLeafNode(otherlv_37, grammarAccess.getNamespaceAccess().getOutsideKeyword_5_6_1_0());
            	    	      													
            	    	    }
            	    	    // InternalKim.g:4539:14: ( (lv_blacklistNamespace_38_0= rulePathName ) )*
            	    	    loop98:
            	    	    do {
            	    	        int alt98=2;
            	    	        int LA98_0 = input.LA(1);

            	    	        if ( (LA98_0==RULE_LOWERCASE_ID) ) {
            	    	            alt98=1;
            	    	        }


            	    	        switch (alt98) {
            	    	    	case 1 :
            	    	    	    // InternalKim.g:4540:15: (lv_blacklistNamespace_38_0= rulePathName )
            	    	    	    {
            	    	    	    // InternalKim.g:4540:15: (lv_blacklistNamespace_38_0= rulePathName )
            	    	    	    // InternalKim.g:4541:16: lv_blacklistNamespace_38_0= rulePathName
            	    	    	    {
            	    	    	    if ( state.backtracking==0 ) {

            	    	    	      																newCompositeNode(grammarAccess.getNamespaceAccess().getBlacklistNamespacePathNameParserRuleCall_5_6_1_1_0());
            	    	    	      															
            	    	    	    }
            	    	    	    pushFollow(FOLLOW_67);
            	    	    	    lv_blacklistNamespace_38_0=rulePathName();

            	    	    	    state._fsp--;
            	    	    	    if (state.failed) return current;
            	    	    	    if ( state.backtracking==0 ) {

            	    	    	      																if (current==null) {
            	    	    	      																	current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	    	    	      																}
            	    	    	      																add(
            	    	    	      																	current,
            	    	    	      																	"blacklistNamespace",
            	    	    	      																	lv_blacklistNamespace_38_0,
            	    	    	      																	"org.integratedmodelling.kim.Kim.PathName");
            	    	    	      																afterParserOrEnumRuleCall();
            	    	    	      															
            	    	    	    }

            	    	    	    }


            	    	    	    }
            	    	    	    break;

            	    	    	default :
            	    	    	    break loop98;
            	    	        }
            	    	    } while (true);


            	    	    }


            	    	    }

            	    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6());

            	    	    }


            	    	    }


            	    	    }
            	    	    break;
            	    	case 3 :
            	    	    // InternalKim.g:4564:9: ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) )
            	    	    {
            	    	    // InternalKim.g:4564:9: ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) )
            	    	    // InternalKim.g:4565:10: {...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) )
            	    	    {
            	    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 2) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 2)");
            	    	    }
            	    	    // InternalKim.g:4565:113: ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) )
            	    	    // InternalKim.g:4566:11: ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) )
            	    	    {
            	    	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 2);
            	    	    // InternalKim.g:4569:14: ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) )
            	    	    // InternalKim.g:4569:15: {...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) )
            	    	    {
            	    	    if ( !((true)) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    	    }
            	    	    // InternalKim.g:4569:24: (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) )
            	    	    // InternalKim.g:4569:25: otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) )
            	    	    {
            	    	    otherlv_39=(Token)match(input,27,FOLLOW_26); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      														newLeafNode(otherlv_39, grammarAccess.getNamespaceAccess().getUsingKeyword_5_6_2_0());
            	    	      													
            	    	    }
            	    	    // InternalKim.g:4573:14: ( (lv_weights_40_0= ruleMetadata ) )
            	    	    // InternalKim.g:4574:15: (lv_weights_40_0= ruleMetadata )
            	    	    {
            	    	    // InternalKim.g:4574:15: (lv_weights_40_0= ruleMetadata )
            	    	    // InternalKim.g:4575:16: lv_weights_40_0= ruleMetadata
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      																newCompositeNode(grammarAccess.getNamespaceAccess().getWeightsMetadataParserRuleCall_5_6_2_1_0());
            	    	      															
            	    	    }
            	    	    pushFollow(FOLLOW_59);
            	    	    lv_weights_40_0=ruleMetadata();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      																if (current==null) {
            	    	      																	current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	    	      																}
            	    	      																set(
            	    	      																	current,
            	    	      																	"weights",
            	    	      																	lv_weights_40_0,
            	    	      																	"org.integratedmodelling.kim.Kim.Metadata");
            	    	      																afterParserOrEnumRuleCall();
            	    	      															
            	    	    }

            	    	    }


            	    	    }


            	    	    }


            	    	    }

            	    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6());

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt99 >= 1 ) break loop99;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(99, input);
            	                throw eee;
            	        }
            	        cnt99++;
            	    } while (true);

            	    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6()) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canLeave(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6())");
            	    }

            	    }


            	    }

            	    getUnorderedGroupHelper().leave(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6());

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop100;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());

            }

            // InternalKim.g:4618:3: (otherlv_41= 'with' otherlv_42= 'parameters' ( (lv_parameters_43_0= ruleMetadata ) ) )?
            int alt101=2;
            int LA101_0 = input.LA(1);

            if ( (LA101_0==38) ) {
                int LA101_1 = input.LA(2);

                if ( (LA101_1==86) ) {
                    alt101=1;
                }
            }
            switch (alt101) {
                case 1 :
                    // InternalKim.g:4619:4: otherlv_41= 'with' otherlv_42= 'parameters' ( (lv_parameters_43_0= ruleMetadata ) )
                    {
                    otherlv_41=(Token)match(input,38,FOLLOW_70); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_41, grammarAccess.getNamespaceAccess().getWithKeyword_6_0());
                      			
                    }
                    otherlv_42=(Token)match(input,86,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_42, grammarAccess.getNamespaceAccess().getParametersKeyword_6_1());
                      			
                    }
                    // InternalKim.g:4627:4: ( (lv_parameters_43_0= ruleMetadata ) )
                    // InternalKim.g:4628:5: (lv_parameters_43_0= ruleMetadata )
                    {
                    // InternalKim.g:4628:5: (lv_parameters_43_0= ruleMetadata )
                    // InternalKim.g:4629:6: lv_parameters_43_0= ruleMetadata
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNamespaceAccess().getParametersMetadataParserRuleCall_6_2_0());
                      					
                    }
                    pushFollow(FOLLOW_71);
                    lv_parameters_43_0=ruleMetadata();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNamespaceRule());
                      						}
                      						set(
                      							current,
                      							"parameters",
                      							lv_parameters_43_0,
                      							"org.integratedmodelling.kim.Kim.Metadata");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalKim.g:4647:3: (otherlv_44= 'with' otherlv_45= 'metadata' ( (lv_metadata_46_0= ruleMetadata ) ) )?
            int alt102=2;
            int LA102_0 = input.LA(1);

            if ( (LA102_0==38) ) {
                int LA102_1 = input.LA(2);

                if ( (LA102_1==39) ) {
                    alt102=1;
                }
            }
            switch (alt102) {
                case 1 :
                    // InternalKim.g:4648:4: otherlv_44= 'with' otherlv_45= 'metadata' ( (lv_metadata_46_0= ruleMetadata ) )
                    {
                    otherlv_44=(Token)match(input,38,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_44, grammarAccess.getNamespaceAccess().getWithKeyword_7_0());
                      			
                    }
                    otherlv_45=(Token)match(input,39,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_45, grammarAccess.getNamespaceAccess().getMetadataKeyword_7_1());
                      			
                    }
                    // InternalKim.g:4656:4: ( (lv_metadata_46_0= ruleMetadata ) )
                    // InternalKim.g:4657:5: (lv_metadata_46_0= ruleMetadata )
                    {
                    // InternalKim.g:4657:5: (lv_metadata_46_0= ruleMetadata )
                    // InternalKim.g:4658:6: lv_metadata_46_0= ruleMetadata
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNamespaceAccess().getMetadataMetadataParserRuleCall_7_2_0());
                      					
                    }
                    pushFollow(FOLLOW_71);
                    lv_metadata_46_0=ruleMetadata();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNamespaceRule());
                      						}
                      						set(
                      							current,
                      							"metadata",
                      							lv_metadata_46_0,
                      							"org.integratedmodelling.kim.Kim.Metadata");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalKim.g:4676:3: (otherlv_47= 'with' otherlv_48= 'documentation' ( (lv_documentation_49_0= ruleMetadata ) ) )?
            int alt103=2;
            int LA103_0 = input.LA(1);

            if ( (LA103_0==38) ) {
                alt103=1;
            }
            switch (alt103) {
                case 1 :
                    // InternalKim.g:4677:4: otherlv_47= 'with' otherlv_48= 'documentation' ( (lv_documentation_49_0= ruleMetadata ) )
                    {
                    otherlv_47=(Token)match(input,38,FOLLOW_28); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_47, grammarAccess.getNamespaceAccess().getWithKeyword_8_0());
                      			
                    }
                    otherlv_48=(Token)match(input,40,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_48, grammarAccess.getNamespaceAccess().getDocumentationKeyword_8_1());
                      			
                    }
                    // InternalKim.g:4685:4: ( (lv_documentation_49_0= ruleMetadata ) )
                    // InternalKim.g:4686:5: (lv_documentation_49_0= ruleMetadata )
                    {
                    // InternalKim.g:4686:5: (lv_documentation_49_0= ruleMetadata )
                    // InternalKim.g:4687:6: lv_documentation_49_0= ruleMetadata
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNamespaceAccess().getDocumentationMetadataParserRuleCall_8_2_0());
                      					
                    }
                    pushFollow(FOLLOW_4);
                    lv_documentation_49_0=ruleMetadata();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNamespaceRule());
                      						}
                      						set(
                      							current,
                      							"documentation",
                      							lv_documentation_49_0,
                      							"org.integratedmodelling.kim.Kim.Metadata");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_50=(Token)match(input,18,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_50, grammarAccess.getNamespaceAccess().getSemicolonKeyword_9());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleNamespace"


    // $ANTLR start "entryRuleOwlImport"
    // InternalKim.g:4716:1: entryRuleOwlImport returns [EObject current=null] : iv_ruleOwlImport= ruleOwlImport EOF ;
    public final EObject entryRuleOwlImport() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOwlImport = null;


        try {
            // InternalKim.g:4716:50: (iv_ruleOwlImport= ruleOwlImport EOF )
            // InternalKim.g:4717:2: iv_ruleOwlImport= ruleOwlImport EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOwlImportRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOwlImport=ruleOwlImport();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOwlImport; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOwlImport"


    // $ANTLR start "ruleOwlImport"
    // InternalKim.g:4723:1: ruleOwlImport returns [EObject current=null] : ( ( (lv_name_0_0= RULE_STRING ) ) (otherlv_1= 'as' ( (lv_prefix_2_0= RULE_LOWERCASE_ID ) ) ) ) ;
    public final EObject ruleOwlImport() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        Token lv_prefix_2_0=null;


        	enterRule();

        try {
            // InternalKim.g:4729:2: ( ( ( (lv_name_0_0= RULE_STRING ) ) (otherlv_1= 'as' ( (lv_prefix_2_0= RULE_LOWERCASE_ID ) ) ) ) )
            // InternalKim.g:4730:2: ( ( (lv_name_0_0= RULE_STRING ) ) (otherlv_1= 'as' ( (lv_prefix_2_0= RULE_LOWERCASE_ID ) ) ) )
            {
            // InternalKim.g:4730:2: ( ( (lv_name_0_0= RULE_STRING ) ) (otherlv_1= 'as' ( (lv_prefix_2_0= RULE_LOWERCASE_ID ) ) ) )
            // InternalKim.g:4731:3: ( (lv_name_0_0= RULE_STRING ) ) (otherlv_1= 'as' ( (lv_prefix_2_0= RULE_LOWERCASE_ID ) ) )
            {
            // InternalKim.g:4731:3: ( (lv_name_0_0= RULE_STRING ) )
            // InternalKim.g:4732:4: (lv_name_0_0= RULE_STRING )
            {
            // InternalKim.g:4732:4: (lv_name_0_0= RULE_STRING )
            // InternalKim.g:4733:5: lv_name_0_0= RULE_STRING
            {
            lv_name_0_0=(Token)match(input,RULE_STRING,FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_0_0, grammarAccess.getOwlImportAccess().getNameSTRINGTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getOwlImportRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_0_0,
              						"org.eclipse.xtext.common.Terminals.STRING");
              				
            }

            }


            }

            // InternalKim.g:4749:3: (otherlv_1= 'as' ( (lv_prefix_2_0= RULE_LOWERCASE_ID ) ) )
            // InternalKim.g:4750:4: otherlv_1= 'as' ( (lv_prefix_2_0= RULE_LOWERCASE_ID ) )
            {
            otherlv_1=(Token)match(input,25,FOLLOW_55); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_1, grammarAccess.getOwlImportAccess().getAsKeyword_1_0());
              			
            }
            // InternalKim.g:4754:4: ( (lv_prefix_2_0= RULE_LOWERCASE_ID ) )
            // InternalKim.g:4755:5: (lv_prefix_2_0= RULE_LOWERCASE_ID )
            {
            // InternalKim.g:4755:5: (lv_prefix_2_0= RULE_LOWERCASE_ID )
            // InternalKim.g:4756:6: lv_prefix_2_0= RULE_LOWERCASE_ID
            {
            lv_prefix_2_0=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              						newLeafNode(lv_prefix_2_0, grammarAccess.getOwlImportAccess().getPrefixLOWERCASE_IDTerminalRuleCall_1_1_0());
              					
            }
            if ( state.backtracking==0 ) {

              						if (current==null) {
              							current = createModelElement(grammarAccess.getOwlImportRule());
              						}
              						setWithLastConsumed(
              							current,
              							"prefix",
              							lv_prefix_2_0,
              							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
              					
            }

            }


            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOwlImport"


    // $ANTLR start "entryRuleImport"
    // InternalKim.g:4777:1: entryRuleImport returns [EObject current=null] : iv_ruleImport= ruleImport EOF ;
    public final EObject entryRuleImport() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleImport = null;


        try {
            // InternalKim.g:4777:47: (iv_ruleImport= ruleImport EOF )
            // InternalKim.g:4778:2: iv_ruleImport= ruleImport EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImportRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleImport=ruleImport();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImport; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleImport"


    // $ANTLR start "ruleImport"
    // InternalKim.g:4784:1: ruleImport returns [EObject current=null] : ( ( ( ( (lv_imports_0_0= ruleList ) ) | ( (lv_star_1_0= '*' ) ) ) otherlv_2= 'from' )? ( (lv_name_3_0= rulePathName ) ) ) ;
    public final EObject ruleImport() throws RecognitionException {
        EObject current = null;

        Token lv_star_1_0=null;
        Token otherlv_2=null;
        EObject lv_imports_0_0 = null;

        AntlrDatatypeRuleToken lv_name_3_0 = null;



        	enterRule();

        try {
            // InternalKim.g:4790:2: ( ( ( ( ( (lv_imports_0_0= ruleList ) ) | ( (lv_star_1_0= '*' ) ) ) otherlv_2= 'from' )? ( (lv_name_3_0= rulePathName ) ) ) )
            // InternalKim.g:4791:2: ( ( ( ( (lv_imports_0_0= ruleList ) ) | ( (lv_star_1_0= '*' ) ) ) otherlv_2= 'from' )? ( (lv_name_3_0= rulePathName ) ) )
            {
            // InternalKim.g:4791:2: ( ( ( ( (lv_imports_0_0= ruleList ) ) | ( (lv_star_1_0= '*' ) ) ) otherlv_2= 'from' )? ( (lv_name_3_0= rulePathName ) ) )
            // InternalKim.g:4792:3: ( ( ( (lv_imports_0_0= ruleList ) ) | ( (lv_star_1_0= '*' ) ) ) otherlv_2= 'from' )? ( (lv_name_3_0= rulePathName ) )
            {
            // InternalKim.g:4792:3: ( ( ( (lv_imports_0_0= ruleList ) ) | ( (lv_star_1_0= '*' ) ) ) otherlv_2= 'from' )?
            int alt105=2;
            int LA105_0 = input.LA(1);

            if ( (LA105_0==34||LA105_0==36) ) {
                alt105=1;
            }
            switch (alt105) {
                case 1 :
                    // InternalKim.g:4793:4: ( ( (lv_imports_0_0= ruleList ) ) | ( (lv_star_1_0= '*' ) ) ) otherlv_2= 'from'
                    {
                    // InternalKim.g:4793:4: ( ( (lv_imports_0_0= ruleList ) ) | ( (lv_star_1_0= '*' ) ) )
                    int alt104=2;
                    int LA104_0 = input.LA(1);

                    if ( (LA104_0==34) ) {
                        alt104=1;
                    }
                    else if ( (LA104_0==36) ) {
                        alt104=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 104, 0, input);

                        throw nvae;
                    }
                    switch (alt104) {
                        case 1 :
                            // InternalKim.g:4794:5: ( (lv_imports_0_0= ruleList ) )
                            {
                            // InternalKim.g:4794:5: ( (lv_imports_0_0= ruleList ) )
                            // InternalKim.g:4795:6: (lv_imports_0_0= ruleList )
                            {
                            // InternalKim.g:4795:6: (lv_imports_0_0= ruleList )
                            // InternalKim.g:4796:7: lv_imports_0_0= ruleList
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getImportAccess().getImportsListParserRuleCall_0_0_0_0());
                              						
                            }
                            pushFollow(FOLLOW_72);
                            lv_imports_0_0=ruleList();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getImportRule());
                              							}
                              							set(
                              								current,
                              								"imports",
                              								lv_imports_0_0,
                              								"org.integratedmodelling.kim.Kim.List");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:4814:5: ( (lv_star_1_0= '*' ) )
                            {
                            // InternalKim.g:4814:5: ( (lv_star_1_0= '*' ) )
                            // InternalKim.g:4815:6: (lv_star_1_0= '*' )
                            {
                            // InternalKim.g:4815:6: (lv_star_1_0= '*' )
                            // InternalKim.g:4816:7: lv_star_1_0= '*'
                            {
                            lv_star_1_0=(Token)match(input,36,FOLLOW_72); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_star_1_0, grammarAccess.getImportAccess().getStarAsteriskKeyword_0_0_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getImportRule());
                              							}
                              							setWithLastConsumed(current, "star", true, "*");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    otherlv_2=(Token)match(input,84,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getImportAccess().getFromKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:4834:3: ( (lv_name_3_0= rulePathName ) )
            // InternalKim.g:4835:4: (lv_name_3_0= rulePathName )
            {
            // InternalKim.g:4835:4: (lv_name_3_0= rulePathName )
            // InternalKim.g:4836:5: lv_name_3_0= rulePathName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getImportAccess().getNamePathNameParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_name_3_0=rulePathName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getImportRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_3_0,
              						"org.integratedmodelling.kim.Kim.PathName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImport"


    // $ANTLR start "entryRuleUrnId"
    // InternalKim.g:4857:1: entryRuleUrnId returns [String current=null] : iv_ruleUrnId= ruleUrnId EOF ;
    public final String entryRuleUrnId() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleUrnId = null;


        try {
            // InternalKim.g:4857:45: (iv_ruleUrnId= ruleUrnId EOF )
            // InternalKim.g:4858:2: iv_ruleUrnId= ruleUrnId EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUrnIdRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUrnId=ruleUrnId();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUrnId.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUrnId"


    // $ANTLR start "ruleUrnId"
    // InternalKim.g:4864:1: ruleUrnId returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (kw= 'urn:klab:' )? this_PathName_1= rulePathName kw= ':' this_PathName_3= rulePathName kw= ':' this_PathName_5= rulePathName kw= ':' this_Path_7= rulePath (kw= ':' this_VersionNumber_9= ruleVersionNumber )? (kw= '#' this_LOWERCASE_ID_11= RULE_LOWERCASE_ID )? ) ;
    public final AntlrDatatypeRuleToken ruleUrnId() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_LOWERCASE_ID_11=null;
        AntlrDatatypeRuleToken this_PathName_1 = null;

        AntlrDatatypeRuleToken this_PathName_3 = null;

        AntlrDatatypeRuleToken this_PathName_5 = null;

        AntlrDatatypeRuleToken this_Path_7 = null;

        AntlrDatatypeRuleToken this_VersionNumber_9 = null;



        	enterRule();

        try {
            // InternalKim.g:4870:2: ( ( (kw= 'urn:klab:' )? this_PathName_1= rulePathName kw= ':' this_PathName_3= rulePathName kw= ':' this_PathName_5= rulePathName kw= ':' this_Path_7= rulePath (kw= ':' this_VersionNumber_9= ruleVersionNumber )? (kw= '#' this_LOWERCASE_ID_11= RULE_LOWERCASE_ID )? ) )
            // InternalKim.g:4871:2: ( (kw= 'urn:klab:' )? this_PathName_1= rulePathName kw= ':' this_PathName_3= rulePathName kw= ':' this_PathName_5= rulePathName kw= ':' this_Path_7= rulePath (kw= ':' this_VersionNumber_9= ruleVersionNumber )? (kw= '#' this_LOWERCASE_ID_11= RULE_LOWERCASE_ID )? )
            {
            // InternalKim.g:4871:2: ( (kw= 'urn:klab:' )? this_PathName_1= rulePathName kw= ':' this_PathName_3= rulePathName kw= ':' this_PathName_5= rulePathName kw= ':' this_Path_7= rulePath (kw= ':' this_VersionNumber_9= ruleVersionNumber )? (kw= '#' this_LOWERCASE_ID_11= RULE_LOWERCASE_ID )? )
            // InternalKim.g:4872:3: (kw= 'urn:klab:' )? this_PathName_1= rulePathName kw= ':' this_PathName_3= rulePathName kw= ':' this_PathName_5= rulePathName kw= ':' this_Path_7= rulePath (kw= ':' this_VersionNumber_9= ruleVersionNumber )? (kw= '#' this_LOWERCASE_ID_11= RULE_LOWERCASE_ID )?
            {
            // InternalKim.g:4872:3: (kw= 'urn:klab:' )?
            int alt106=2;
            int LA106_0 = input.LA(1);

            if ( (LA106_0==87) ) {
                alt106=1;
            }
            switch (alt106) {
                case 1 :
                    // InternalKim.g:4873:4: kw= 'urn:klab:'
                    {
                    kw=(Token)match(input,87,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getUrnIdAccess().getUrnKlabKeyword_0());
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getUrnIdAccess().getPathNameParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_73);
            this_PathName_1=rulePathName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_PathName_1);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            kw=(Token)match(input,88,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getUrnIdAccess().getColonKeyword_2());
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getUrnIdAccess().getPathNameParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_73);
            this_PathName_3=rulePathName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_PathName_3);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            kw=(Token)match(input,88,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getUrnIdAccess().getColonKeyword_4());
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getUrnIdAccess().getPathNameParserRuleCall_5());
              		
            }
            pushFollow(FOLLOW_73);
            this_PathName_5=rulePathName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_PathName_5);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            kw=(Token)match(input,88,FOLLOW_55); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getUrnIdAccess().getColonKeyword_6());
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getUrnIdAccess().getPathParserRuleCall_7());
              		
            }
            pushFollow(FOLLOW_74);
            this_Path_7=rulePath();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_Path_7);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKim.g:4934:3: (kw= ':' this_VersionNumber_9= ruleVersionNumber )?
            int alt107=2;
            int LA107_0 = input.LA(1);

            if ( (LA107_0==88) ) {
                alt107=1;
            }
            switch (alt107) {
                case 1 :
                    // InternalKim.g:4935:4: kw= ':' this_VersionNumber_9= ruleVersionNumber
                    {
                    kw=(Token)match(input,88,FOLLOW_68); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getUrnIdAccess().getColonKeyword_8_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getUrnIdAccess().getVersionNumberParserRuleCall_8_1());
                      			
                    }
                    pushFollow(FOLLOW_75);
                    this_VersionNumber_9=ruleVersionNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_VersionNumber_9);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:4951:3: (kw= '#' this_LOWERCASE_ID_11= RULE_LOWERCASE_ID )?
            int alt108=2;
            int LA108_0 = input.LA(1);

            if ( (LA108_0==51) ) {
                alt108=1;
            }
            switch (alt108) {
                case 1 :
                    // InternalKim.g:4952:4: kw= '#' this_LOWERCASE_ID_11= RULE_LOWERCASE_ID
                    {
                    kw=(Token)match(input,51,FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getUrnIdAccess().getNumberSignKeyword_9_0());
                      			
                    }
                    this_LOWERCASE_ID_11=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_ID_11);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_ID_11, grammarAccess.getUrnIdAccess().getLOWERCASE_IDTerminalRuleCall_9_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUrnId"


    // $ANTLR start "entryRuleLocalFilePath"
    // InternalKim.g:4969:1: entryRuleLocalFilePath returns [String current=null] : iv_ruleLocalFilePath= ruleLocalFilePath EOF ;
    public final String entryRuleLocalFilePath() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleLocalFilePath = null;


        try {
            // InternalKim.g:4969:53: (iv_ruleLocalFilePath= ruleLocalFilePath EOF )
            // InternalKim.g:4970:2: iv_ruleLocalFilePath= ruleLocalFilePath EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLocalFilePathRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLocalFilePath=ruleLocalFilePath();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLocalFilePath.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLocalFilePath"


    // $ANTLR start "ruleLocalFilePath"
    // InternalKim.g:4976:1: ruleLocalFilePath returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (this_CAMELCASE_ID_0= RULE_CAMELCASE_ID | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) (kw= '/' (this_CAMELCASE_ID_4= RULE_CAMELCASE_ID | this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID ) )* (kw= '.' this_LOWERCASE_ID_8= RULE_LOWERCASE_ID )? (kw= '#' this_LOWERCASE_ID_10= RULE_LOWERCASE_ID )? ) ;
    public final AntlrDatatypeRuleToken ruleLocalFilePath() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_CAMELCASE_ID_0=null;
        Token this_LOWERCASE_ID_1=null;
        Token this_LOWERCASE_DASHID_2=null;
        Token kw=null;
        Token this_CAMELCASE_ID_4=null;
        Token this_LOWERCASE_ID_5=null;
        Token this_LOWERCASE_DASHID_6=null;
        Token this_LOWERCASE_ID_8=null;
        Token this_LOWERCASE_ID_10=null;


        	enterRule();

        try {
            // InternalKim.g:4982:2: ( ( (this_CAMELCASE_ID_0= RULE_CAMELCASE_ID | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) (kw= '/' (this_CAMELCASE_ID_4= RULE_CAMELCASE_ID | this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID ) )* (kw= '.' this_LOWERCASE_ID_8= RULE_LOWERCASE_ID )? (kw= '#' this_LOWERCASE_ID_10= RULE_LOWERCASE_ID )? ) )
            // InternalKim.g:4983:2: ( (this_CAMELCASE_ID_0= RULE_CAMELCASE_ID | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) (kw= '/' (this_CAMELCASE_ID_4= RULE_CAMELCASE_ID | this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID ) )* (kw= '.' this_LOWERCASE_ID_8= RULE_LOWERCASE_ID )? (kw= '#' this_LOWERCASE_ID_10= RULE_LOWERCASE_ID )? )
            {
            // InternalKim.g:4983:2: ( (this_CAMELCASE_ID_0= RULE_CAMELCASE_ID | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) (kw= '/' (this_CAMELCASE_ID_4= RULE_CAMELCASE_ID | this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID ) )* (kw= '.' this_LOWERCASE_ID_8= RULE_LOWERCASE_ID )? (kw= '#' this_LOWERCASE_ID_10= RULE_LOWERCASE_ID )? )
            // InternalKim.g:4984:3: (this_CAMELCASE_ID_0= RULE_CAMELCASE_ID | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) (kw= '/' (this_CAMELCASE_ID_4= RULE_CAMELCASE_ID | this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID ) )* (kw= '.' this_LOWERCASE_ID_8= RULE_LOWERCASE_ID )? (kw= '#' this_LOWERCASE_ID_10= RULE_LOWERCASE_ID )?
            {
            // InternalKim.g:4984:3: (this_CAMELCASE_ID_0= RULE_CAMELCASE_ID | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID )
            int alt109=3;
            switch ( input.LA(1) ) {
            case RULE_CAMELCASE_ID:
                {
                alt109=1;
                }
                break;
            case RULE_LOWERCASE_ID:
                {
                alt109=2;
                }
                break;
            case RULE_LOWERCASE_DASHID:
                {
                alt109=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 109, 0, input);

                throw nvae;
            }

            switch (alt109) {
                case 1 :
                    // InternalKim.g:4985:4: this_CAMELCASE_ID_0= RULE_CAMELCASE_ID
                    {
                    this_CAMELCASE_ID_0=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_76); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_CAMELCASE_ID_0);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_CAMELCASE_ID_0, grammarAccess.getLocalFilePathAccess().getCAMELCASE_IDTerminalRuleCall_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:4993:4: this_LOWERCASE_ID_1= RULE_LOWERCASE_ID
                    {
                    this_LOWERCASE_ID_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_76); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_ID_1);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_ID_1, grammarAccess.getLocalFilePathAccess().getLOWERCASE_IDTerminalRuleCall_0_1());
                      			
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:5001:4: this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID
                    {
                    this_LOWERCASE_DASHID_2=(Token)match(input,RULE_LOWERCASE_DASHID,FOLLOW_76); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_DASHID_2);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_DASHID_2, grammarAccess.getLocalFilePathAccess().getLOWERCASE_DASHIDTerminalRuleCall_0_2());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:5009:3: (kw= '/' (this_CAMELCASE_ID_4= RULE_CAMELCASE_ID | this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID ) )*
            loop111:
            do {
                int alt111=2;
                int LA111_0 = input.LA(1);

                if ( (LA111_0==89) ) {
                    alt111=1;
                }


                switch (alt111) {
            	case 1 :
            	    // InternalKim.g:5010:4: kw= '/' (this_CAMELCASE_ID_4= RULE_CAMELCASE_ID | this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID )
            	    {
            	    kw=(Token)match(input,89,FOLLOW_77); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(kw);
            	      				newLeafNode(kw, grammarAccess.getLocalFilePathAccess().getSolidusKeyword_1_0());
            	      			
            	    }
            	    // InternalKim.g:5015:4: (this_CAMELCASE_ID_4= RULE_CAMELCASE_ID | this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID )
            	    int alt110=3;
            	    switch ( input.LA(1) ) {
            	    case RULE_CAMELCASE_ID:
            	        {
            	        alt110=1;
            	        }
            	        break;
            	    case RULE_LOWERCASE_ID:
            	        {
            	        alt110=2;
            	        }
            	        break;
            	    case RULE_LOWERCASE_DASHID:
            	        {
            	        alt110=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 110, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt110) {
            	        case 1 :
            	            // InternalKim.g:5016:5: this_CAMELCASE_ID_4= RULE_CAMELCASE_ID
            	            {
            	            this_CAMELCASE_ID_4=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_76); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(this_CAMELCASE_ID_4);
            	              				
            	            }
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(this_CAMELCASE_ID_4, grammarAccess.getLocalFilePathAccess().getCAMELCASE_IDTerminalRuleCall_1_1_0());
            	              				
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:5024:5: this_LOWERCASE_ID_5= RULE_LOWERCASE_ID
            	            {
            	            this_LOWERCASE_ID_5=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_76); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(this_LOWERCASE_ID_5);
            	              				
            	            }
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(this_LOWERCASE_ID_5, grammarAccess.getLocalFilePathAccess().getLOWERCASE_IDTerminalRuleCall_1_1_1());
            	              				
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // InternalKim.g:5032:5: this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID
            	            {
            	            this_LOWERCASE_DASHID_6=(Token)match(input,RULE_LOWERCASE_DASHID,FOLLOW_76); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(this_LOWERCASE_DASHID_6);
            	              				
            	            }
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(this_LOWERCASE_DASHID_6, grammarAccess.getLocalFilePathAccess().getLOWERCASE_DASHIDTerminalRuleCall_1_1_2());
            	              				
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop111;
                }
            } while (true);

            // InternalKim.g:5041:3: (kw= '.' this_LOWERCASE_ID_8= RULE_LOWERCASE_ID )?
            int alt112=2;
            int LA112_0 = input.LA(1);

            if ( (LA112_0==90) ) {
                alt112=1;
            }
            switch (alt112) {
                case 1 :
                    // InternalKim.g:5042:4: kw= '.' this_LOWERCASE_ID_8= RULE_LOWERCASE_ID
                    {
                    kw=(Token)match(input,90,FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getLocalFilePathAccess().getFullStopKeyword_2_0());
                      			
                    }
                    this_LOWERCASE_ID_8=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_75); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_ID_8);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_ID_8, grammarAccess.getLocalFilePathAccess().getLOWERCASE_IDTerminalRuleCall_2_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:5055:3: (kw= '#' this_LOWERCASE_ID_10= RULE_LOWERCASE_ID )?
            int alt113=2;
            int LA113_0 = input.LA(1);

            if ( (LA113_0==51) ) {
                alt113=1;
            }
            switch (alt113) {
                case 1 :
                    // InternalKim.g:5056:4: kw= '#' this_LOWERCASE_ID_10= RULE_LOWERCASE_ID
                    {
                    kw=(Token)match(input,51,FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getLocalFilePathAccess().getNumberSignKeyword_3_0());
                      			
                    }
                    this_LOWERCASE_ID_10=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_ID_10);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_ID_10, grammarAccess.getLocalFilePathAccess().getLOWERCASE_IDTerminalRuleCall_3_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLocalFilePath"


    // $ANTLR start "entryRuleObserveStatement"
    // InternalKim.g:5073:1: entryRuleObserveStatement returns [EObject current=null] : iv_ruleObserveStatement= ruleObserveStatement EOF ;
    public final EObject entryRuleObserveStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleObserveStatement = null;


        try {
            // InternalKim.g:5073:57: (iv_ruleObserveStatement= ruleObserveStatement EOF )
            // InternalKim.g:5074:2: iv_ruleObserveStatement= ruleObserveStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getObserveStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleObserveStatement=ruleObserveStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleObserveStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleObserveStatement"


    // $ANTLR start "ruleObserveStatement"
    // InternalKim.g:5080:1: ruleObserveStatement returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'observe' ( (lv_body_2_0= ruleObserveStatementBody ) ) ) ;
    public final EObject ruleObserveStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_body_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:5086:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'observe' ( (lv_body_2_0= ruleObserveStatementBody ) ) ) )
            // InternalKim.g:5087:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'observe' ( (lv_body_2_0= ruleObserveStatementBody ) ) )
            {
            // InternalKim.g:5087:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'observe' ( (lv_body_2_0= ruleObserveStatementBody ) ) )
            // InternalKim.g:5088:3: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'observe' ( (lv_body_2_0= ruleObserveStatementBody ) )
            {
            // InternalKim.g:5088:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop114:
            do {
                int alt114=2;
                int LA114_0 = input.LA(1);

                if ( (LA114_0==RULE_ANNOTATION_ID) ) {
                    alt114=1;
                }


                switch (alt114) {
            	case 1 :
            	    // InternalKim.g:5089:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalKim.g:5089:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalKim.g:5090:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getObserveStatementAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_78);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getObserveStatementRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"org.integratedmodelling.kim.Kim.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop114;
                }
            } while (true);

            otherlv_1=(Token)match(input,91,FOLLOW_79); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getObserveStatementAccess().getObserveKeyword_1());
              		
            }
            // InternalKim.g:5111:3: ( (lv_body_2_0= ruleObserveStatementBody ) )
            // InternalKim.g:5112:4: (lv_body_2_0= ruleObserveStatementBody )
            {
            // InternalKim.g:5112:4: (lv_body_2_0= ruleObserveStatementBody )
            // InternalKim.g:5113:5: lv_body_2_0= ruleObserveStatementBody
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getObserveStatementAccess().getBodyObserveStatementBodyParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_body_2_0=ruleObserveStatementBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getObserveStatementRule());
              					}
              					set(
              						current,
              						"body",
              						lv_body_2_0,
              						"org.integratedmodelling.kim.Kim.ObserveStatementBody");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleObserveStatement"


    // $ANTLR start "entryRuleObserveStatementBody"
    // InternalKim.g:5134:1: entryRuleObserveStatementBody returns [EObject current=null] : iv_ruleObserveStatementBody= ruleObserveStatementBody EOF ;
    public final EObject entryRuleObserveStatementBody() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleObserveStatementBody = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup()
        	);

        try {
            // InternalKim.g:5138:2: (iv_ruleObserveStatementBody= ruleObserveStatementBody EOF )
            // InternalKim.g:5139:2: iv_ruleObserveStatementBody= ruleObserveStatementBody EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getObserveStatementBodyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleObserveStatementBody=ruleObserveStatementBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleObserveStatementBody; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleObserveStatementBody"


    // $ANTLR start "ruleObserveStatementBody"
    // InternalKim.g:5148:1: ruleObserveStatementBody returns [EObject current=null] : ( ( ( ( ({...}? => ( ({...}? => ( ( (lv_concept_1_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_2_0= RULE_STRING ) )? (otherlv_3= 'extends' ( (lv_parents_4_0= rulePathName ) ) (otherlv_5= ',' ( (lv_parents_6_0= rulePathName ) ) )* )? (otherlv_7= 'observing' ( (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' ) | ( (lv_states_11_0= ruleObservableSemantics ) ) ) (otherlv_12= ',' ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) | ( (lv_states_16_0= ruleObservableSemantics ) ) ) )* )? (otherlv_17= 'using' ( (lv_accessor_18_0= ruleFunction ) )? )? ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_actions_19_0= ruleActionSpecification ) )* (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )? ) ) ) ) )+ {...}?) ) ) ;
    public final EObject ruleObserveStatementBody() throws RecognitionException {
        EObject current = null;

        Token lv_docstring_2_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_20=null;
        Token otherlv_21=null;
        Token otherlv_23=null;
        Token otherlv_24=null;
        EObject lv_concept_1_0 = null;

        AntlrDatatypeRuleToken lv_parents_4_0 = null;

        AntlrDatatypeRuleToken lv_parents_6_0 = null;

        EObject lv_observations_9_0 = null;

        EObject lv_states_11_0 = null;

        EObject lv_observations_14_0 = null;

        EObject lv_states_16_0 = null;

        EObject lv_accessor_18_0 = null;

        EObject lv_actions_19_0 = null;

        EObject lv_metadata_22_0 = null;

        EObject lv_documentation_25_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup()
        	);

        try {
            // InternalKim.g:5157:2: ( ( ( ( ( ({...}? => ( ({...}? => ( ( (lv_concept_1_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_2_0= RULE_STRING ) )? (otherlv_3= 'extends' ( (lv_parents_4_0= rulePathName ) ) (otherlv_5= ',' ( (lv_parents_6_0= rulePathName ) ) )* )? (otherlv_7= 'observing' ( (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' ) | ( (lv_states_11_0= ruleObservableSemantics ) ) ) (otherlv_12= ',' ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) | ( (lv_states_16_0= ruleObservableSemantics ) ) ) )* )? (otherlv_17= 'using' ( (lv_accessor_18_0= ruleFunction ) )? )? ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_actions_19_0= ruleActionSpecification ) )* (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )? ) ) ) ) )+ {...}?) ) ) )
            // InternalKim.g:5158:2: ( ( ( ( ({...}? => ( ({...}? => ( ( (lv_concept_1_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_2_0= RULE_STRING ) )? (otherlv_3= 'extends' ( (lv_parents_4_0= rulePathName ) ) (otherlv_5= ',' ( (lv_parents_6_0= rulePathName ) ) )* )? (otherlv_7= 'observing' ( (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' ) | ( (lv_states_11_0= ruleObservableSemantics ) ) ) (otherlv_12= ',' ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) | ( (lv_states_16_0= ruleObservableSemantics ) ) ) )* )? (otherlv_17= 'using' ( (lv_accessor_18_0= ruleFunction ) )? )? ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_actions_19_0= ruleActionSpecification ) )* (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )? ) ) ) ) )+ {...}?) ) )
            {
            // InternalKim.g:5158:2: ( ( ( ( ({...}? => ( ({...}? => ( ( (lv_concept_1_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_2_0= RULE_STRING ) )? (otherlv_3= 'extends' ( (lv_parents_4_0= rulePathName ) ) (otherlv_5= ',' ( (lv_parents_6_0= rulePathName ) ) )* )? (otherlv_7= 'observing' ( (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' ) | ( (lv_states_11_0= ruleObservableSemantics ) ) ) (otherlv_12= ',' ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) | ( (lv_states_16_0= ruleObservableSemantics ) ) ) )* )? (otherlv_17= 'using' ( (lv_accessor_18_0= ruleFunction ) )? )? ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_actions_19_0= ruleActionSpecification ) )* (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )? ) ) ) ) )+ {...}?) ) )
            // InternalKim.g:5159:3: ( ( ( ({...}? => ( ({...}? => ( ( (lv_concept_1_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_2_0= RULE_STRING ) )? (otherlv_3= 'extends' ( (lv_parents_4_0= rulePathName ) ) (otherlv_5= ',' ( (lv_parents_6_0= rulePathName ) ) )* )? (otherlv_7= 'observing' ( (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' ) | ( (lv_states_11_0= ruleObservableSemantics ) ) ) (otherlv_12= ',' ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) | ( (lv_states_16_0= ruleObservableSemantics ) ) ) )* )? (otherlv_17= 'using' ( (lv_accessor_18_0= ruleFunction ) )? )? ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_actions_19_0= ruleActionSpecification ) )* (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )? ) ) ) ) )+ {...}?) )
            {
            // InternalKim.g:5159:3: ( ( ( ({...}? => ( ({...}? => ( ( (lv_concept_1_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_2_0= RULE_STRING ) )? (otherlv_3= 'extends' ( (lv_parents_4_0= rulePathName ) ) (otherlv_5= ',' ( (lv_parents_6_0= rulePathName ) ) )* )? (otherlv_7= 'observing' ( (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' ) | ( (lv_states_11_0= ruleObservableSemantics ) ) ) (otherlv_12= ',' ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) | ( (lv_states_16_0= ruleObservableSemantics ) ) ) )* )? (otherlv_17= 'using' ( (lv_accessor_18_0= ruleFunction ) )? )? ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_actions_19_0= ruleActionSpecification ) )* (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )? ) ) ) ) )+ {...}?) )
            // InternalKim.g:5160:4: ( ( ({...}? => ( ({...}? => ( ( (lv_concept_1_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_2_0= RULE_STRING ) )? (otherlv_3= 'extends' ( (lv_parents_4_0= rulePathName ) ) (otherlv_5= ',' ( (lv_parents_6_0= rulePathName ) ) )* )? (otherlv_7= 'observing' ( (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' ) | ( (lv_states_11_0= ruleObservableSemantics ) ) ) (otherlv_12= ',' ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) | ( (lv_states_16_0= ruleObservableSemantics ) ) ) )* )? (otherlv_17= 'using' ( (lv_accessor_18_0= ruleFunction ) )? )? ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_actions_19_0= ruleActionSpecification ) )* (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )? ) ) ) ) )+ {...}?)
            {
            getUnorderedGroupHelper().enter(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup());
            // InternalKim.g:5163:4: ( ( ({...}? => ( ({...}? => ( ( (lv_concept_1_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_2_0= RULE_STRING ) )? (otherlv_3= 'extends' ( (lv_parents_4_0= rulePathName ) ) (otherlv_5= ',' ( (lv_parents_6_0= rulePathName ) ) )* )? (otherlv_7= 'observing' ( (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' ) | ( (lv_states_11_0= ruleObservableSemantics ) ) ) (otherlv_12= ',' ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) | ( (lv_states_16_0= ruleObservableSemantics ) ) ) )* )? (otherlv_17= 'using' ( (lv_accessor_18_0= ruleFunction ) )? )? ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_actions_19_0= ruleActionSpecification ) )* (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )? ) ) ) ) )+ {...}?)
            // InternalKim.g:5164:5: ( ({...}? => ( ({...}? => ( ( (lv_concept_1_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_2_0= RULE_STRING ) )? (otherlv_3= 'extends' ( (lv_parents_4_0= rulePathName ) ) (otherlv_5= ',' ( (lv_parents_6_0= rulePathName ) ) )* )? (otherlv_7= 'observing' ( (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' ) | ( (lv_states_11_0= ruleObservableSemantics ) ) ) (otherlv_12= ',' ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) | ( (lv_states_16_0= ruleObservableSemantics ) ) ) )* )? (otherlv_17= 'using' ( (lv_accessor_18_0= ruleFunction ) )? )? ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_actions_19_0= ruleActionSpecification ) )* (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )? ) ) ) ) )+ {...}?
            {
            // InternalKim.g:5164:5: ( ({...}? => ( ({...}? => ( ( (lv_concept_1_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_2_0= RULE_STRING ) )? (otherlv_3= 'extends' ( (lv_parents_4_0= rulePathName ) ) (otherlv_5= ',' ( (lv_parents_6_0= rulePathName ) ) )* )? (otherlv_7= 'observing' ( (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' ) | ( (lv_states_11_0= ruleObservableSemantics ) ) ) (otherlv_12= ',' ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) | ( (lv_states_16_0= ruleObservableSemantics ) ) ) )* )? (otherlv_17= 'using' ( (lv_accessor_18_0= ruleFunction ) )? )? ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_actions_19_0= ruleActionSpecification ) )* (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )? ) ) ) ) )+
            int cnt127=0;
            loop127:
            do {
                int alt127=3;
                alt127 = dfa127.predict(input);
                switch (alt127) {
            	case 1 :
            	    // InternalKim.g:5165:3: ({...}? => ( ({...}? => ( ( (lv_concept_1_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_2_0= RULE_STRING ) )? (otherlv_3= 'extends' ( (lv_parents_4_0= rulePathName ) ) (otherlv_5= ',' ( (lv_parents_6_0= rulePathName ) ) )* )? (otherlv_7= 'observing' ( (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' ) | ( (lv_states_11_0= ruleObservableSemantics ) ) ) (otherlv_12= ',' ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) | ( (lv_states_16_0= ruleObservableSemantics ) ) ) )* )? (otherlv_17= 'using' ( (lv_accessor_18_0= ruleFunction ) )? )? ) ) ) )
            	    {
            	    // InternalKim.g:5165:3: ({...}? => ( ({...}? => ( ( (lv_concept_1_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_2_0= RULE_STRING ) )? (otherlv_3= 'extends' ( (lv_parents_4_0= rulePathName ) ) (otherlv_5= ',' ( (lv_parents_6_0= rulePathName ) ) )* )? (otherlv_7= 'observing' ( (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' ) | ( (lv_states_11_0= ruleObservableSemantics ) ) ) (otherlv_12= ',' ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) | ( (lv_states_16_0= ruleObservableSemantics ) ) ) )* )? (otherlv_17= 'using' ( (lv_accessor_18_0= ruleFunction ) )? )? ) ) ) )
            	    // InternalKim.g:5166:4: {...}? => ( ({...}? => ( ( (lv_concept_1_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_2_0= RULE_STRING ) )? (otherlv_3= 'extends' ( (lv_parents_4_0= rulePathName ) ) (otherlv_5= ',' ( (lv_parents_6_0= rulePathName ) ) )* )? (otherlv_7= 'observing' ( (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' ) | ( (lv_states_11_0= ruleObservableSemantics ) ) ) (otherlv_12= ',' ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) | ( (lv_states_16_0= ruleObservableSemantics ) ) ) )* )? (otherlv_17= 'using' ( (lv_accessor_18_0= ruleFunction ) )? )? ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObserveStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0)");
            	    }
            	    // InternalKim.g:5166:114: ( ({...}? => ( ( (lv_concept_1_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_2_0= RULE_STRING ) )? (otherlv_3= 'extends' ( (lv_parents_4_0= rulePathName ) ) (otherlv_5= ',' ( (lv_parents_6_0= rulePathName ) ) )* )? (otherlv_7= 'observing' ( (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' ) | ( (lv_states_11_0= ruleObservableSemantics ) ) ) (otherlv_12= ',' ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) | ( (lv_states_16_0= ruleObservableSemantics ) ) ) )* )? (otherlv_17= 'using' ( (lv_accessor_18_0= ruleFunction ) )? )? ) ) )
            	    // InternalKim.g:5167:5: ({...}? => ( ( (lv_concept_1_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_2_0= RULE_STRING ) )? (otherlv_3= 'extends' ( (lv_parents_4_0= rulePathName ) ) (otherlv_5= ',' ( (lv_parents_6_0= rulePathName ) ) )* )? (otherlv_7= 'observing' ( (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' ) | ( (lv_states_11_0= ruleObservableSemantics ) ) ) (otherlv_12= ',' ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) | ( (lv_states_16_0= ruleObservableSemantics ) ) ) )* )? (otherlv_17= 'using' ( (lv_accessor_18_0= ruleFunction ) )? )? ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0);
            	    // InternalKim.g:5170:8: ({...}? => ( ( (lv_concept_1_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_2_0= RULE_STRING ) )? (otherlv_3= 'extends' ( (lv_parents_4_0= rulePathName ) ) (otherlv_5= ',' ( (lv_parents_6_0= rulePathName ) ) )* )? (otherlv_7= 'observing' ( (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' ) | ( (lv_states_11_0= ruleObservableSemantics ) ) ) (otherlv_12= ',' ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) | ( (lv_states_16_0= ruleObservableSemantics ) ) ) )* )? (otherlv_17= 'using' ( (lv_accessor_18_0= ruleFunction ) )? )? ) )
            	    // InternalKim.g:5170:9: {...}? => ( ( (lv_concept_1_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_2_0= RULE_STRING ) )? (otherlv_3= 'extends' ( (lv_parents_4_0= rulePathName ) ) (otherlv_5= ',' ( (lv_parents_6_0= rulePathName ) ) )* )? (otherlv_7= 'observing' ( (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' ) | ( (lv_states_11_0= ruleObservableSemantics ) ) ) (otherlv_12= ',' ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) | ( (lv_states_16_0= ruleObservableSemantics ) ) ) )* )? (otherlv_17= 'using' ( (lv_accessor_18_0= ruleFunction ) )? )? )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObserveStatementBody", "true");
            	    }
            	    // InternalKim.g:5170:18: ( ( (lv_concept_1_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_2_0= RULE_STRING ) )? (otherlv_3= 'extends' ( (lv_parents_4_0= rulePathName ) ) (otherlv_5= ',' ( (lv_parents_6_0= rulePathName ) ) )* )? (otherlv_7= 'observing' ( (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' ) | ( (lv_states_11_0= ruleObservableSemantics ) ) ) (otherlv_12= ',' ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) | ( (lv_states_16_0= ruleObservableSemantics ) ) ) )* )? (otherlv_17= 'using' ( (lv_accessor_18_0= ruleFunction ) )? )? )
            	    // InternalKim.g:5170:19: ( (lv_concept_1_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_2_0= RULE_STRING ) )? (otherlv_3= 'extends' ( (lv_parents_4_0= rulePathName ) ) (otherlv_5= ',' ( (lv_parents_6_0= rulePathName ) ) )* )? (otherlv_7= 'observing' ( (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' ) | ( (lv_states_11_0= ruleObservableSemantics ) ) ) (otherlv_12= ',' ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) | ( (lv_states_16_0= ruleObservableSemantics ) ) ) )* )? (otherlv_17= 'using' ( (lv_accessor_18_0= ruleFunction ) )? )?
            	    {
            	    // InternalKim.g:5170:19: ( (lv_concept_1_0= ruleNamedObservableSemantics ) )
            	    // InternalKim.g:5171:9: (lv_concept_1_0= ruleNamedObservableSemantics )
            	    {
            	    // InternalKim.g:5171:9: (lv_concept_1_0= ruleNamedObservableSemantics )
            	    // InternalKim.g:5172:10: lv_concept_1_0= ruleNamedObservableSemantics
            	    {
            	    if ( state.backtracking==0 ) {

            	      										newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getConceptNamedObservableSemanticsParserRuleCall_0_0_0());
            	      									
            	    }
            	    pushFollow(FOLLOW_80);
            	    lv_concept_1_0=ruleNamedObservableSemantics();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	      										}
            	      										set(
            	      											current,
            	      											"concept",
            	      											lv_concept_1_0,
            	      											"org.integratedmodelling.kim.Kim.NamedObservableSemantics");
            	      										afterParserOrEnumRuleCall();
            	      									
            	    }

            	    }


            	    }

            	    // InternalKim.g:5189:8: ( (lv_docstring_2_0= RULE_STRING ) )?
            	    int alt115=2;
            	    int LA115_0 = input.LA(1);

            	    if ( (LA115_0==RULE_STRING) ) {
            	        int LA115_1 = input.LA(2);

            	        if ( (synpred206_InternalKim()) ) {
            	            alt115=1;
            	        }
            	    }
            	    switch (alt115) {
            	        case 1 :
            	            // InternalKim.g:5190:9: (lv_docstring_2_0= RULE_STRING )
            	            {
            	            // InternalKim.g:5190:9: (lv_docstring_2_0= RULE_STRING )
            	            // InternalKim.g:5191:10: lv_docstring_2_0= RULE_STRING
            	            {
            	            lv_docstring_2_0=(Token)match(input,RULE_STRING,FOLLOW_80); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(lv_docstring_2_0, grammarAccess.getObserveStatementBodyAccess().getDocstringSTRINGTerminalRuleCall_0_1_0());
            	              									
            	            }
            	            if ( state.backtracking==0 ) {

            	              										if (current==null) {
            	              											current = createModelElement(grammarAccess.getObserveStatementBodyRule());
            	              										}
            	              										setWithLastConsumed(
            	              											current,
            	              											"docstring",
            	              											lv_docstring_2_0,
            	              											"org.eclipse.xtext.common.Terminals.STRING");
            	              									
            	            }

            	            }


            	            }
            	            break;

            	    }

            	    // InternalKim.g:5207:8: (otherlv_3= 'extends' ( (lv_parents_4_0= rulePathName ) ) (otherlv_5= ',' ( (lv_parents_6_0= rulePathName ) ) )* )?
            	    int alt117=2;
            	    int LA117_0 = input.LA(1);

            	    if ( (LA117_0==92) ) {
            	        alt117=1;
            	    }
            	    switch (alt117) {
            	        case 1 :
            	            // InternalKim.g:5208:9: otherlv_3= 'extends' ( (lv_parents_4_0= rulePathName ) ) (otherlv_5= ',' ( (lv_parents_6_0= rulePathName ) ) )*
            	            {
            	            otherlv_3=(Token)match(input,92,FOLLOW_19); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(otherlv_3, grammarAccess.getObserveStatementBodyAccess().getExtendsKeyword_0_2_0());
            	              								
            	            }
            	            // InternalKim.g:5212:9: ( (lv_parents_4_0= rulePathName ) )
            	            // InternalKim.g:5213:10: (lv_parents_4_0= rulePathName )
            	            {
            	            // InternalKim.g:5213:10: (lv_parents_4_0= rulePathName )
            	            // InternalKim.g:5214:11: lv_parents_4_0= rulePathName
            	            {
            	            if ( state.backtracking==0 ) {

            	              											newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getParentsPathNameParserRuleCall_0_2_1_0());
            	              										
            	            }
            	            pushFollow(FOLLOW_81);
            	            lv_parents_4_0=rulePathName();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											if (current==null) {
            	              												current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	              											}
            	              											add(
            	              												current,
            	              												"parents",
            	              												lv_parents_4_0,
            	              												"org.integratedmodelling.kim.Kim.PathName");
            	              											afterParserOrEnumRuleCall();
            	              										
            	            }

            	            }


            	            }

            	            // InternalKim.g:5231:9: (otherlv_5= ',' ( (lv_parents_6_0= rulePathName ) ) )*
            	            loop116:
            	            do {
            	                int alt116=2;
            	                int LA116_0 = input.LA(1);

            	                if ( (LA116_0==22) ) {
            	                    alt116=1;
            	                }


            	                switch (alt116) {
            	            	case 1 :
            	            	    // InternalKim.g:5232:10: otherlv_5= ',' ( (lv_parents_6_0= rulePathName ) )
            	            	    {
            	            	    otherlv_5=(Token)match(input,22,FOLLOW_19); if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      										newLeafNode(otherlv_5, grammarAccess.getObserveStatementBodyAccess().getCommaKeyword_0_2_2_0());
            	            	      									
            	            	    }
            	            	    // InternalKim.g:5236:10: ( (lv_parents_6_0= rulePathName ) )
            	            	    // InternalKim.g:5237:11: (lv_parents_6_0= rulePathName )
            	            	    {
            	            	    // InternalKim.g:5237:11: (lv_parents_6_0= rulePathName )
            	            	    // InternalKim.g:5238:12: lv_parents_6_0= rulePathName
            	            	    {
            	            	    if ( state.backtracking==0 ) {

            	            	      												newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getParentsPathNameParserRuleCall_0_2_2_1_0());
            	            	      											
            	            	    }
            	            	    pushFollow(FOLLOW_81);
            	            	    lv_parents_6_0=rulePathName();

            	            	    state._fsp--;
            	            	    if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      												if (current==null) {
            	            	      													current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	            	      												}
            	            	      												add(
            	            	      													current,
            	            	      													"parents",
            	            	      													lv_parents_6_0,
            	            	      													"org.integratedmodelling.kim.Kim.PathName");
            	            	      												afterParserOrEnumRuleCall();
            	            	      											
            	            	    }

            	            	    }


            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop116;
            	                }
            	            } while (true);


            	            }
            	            break;

            	    }

            	    // InternalKim.g:5257:8: (otherlv_7= 'observing' ( (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' ) | ( (lv_states_11_0= ruleObservableSemantics ) ) ) (otherlv_12= ',' ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) | ( (lv_states_16_0= ruleObservableSemantics ) ) ) )* )?
            	    int alt121=2;
            	    int LA121_0 = input.LA(1);

            	    if ( (LA121_0==26) ) {
            	        alt121=1;
            	    }
            	    switch (alt121) {
            	        case 1 :
            	            // InternalKim.g:5258:9: otherlv_7= 'observing' ( (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' ) | ( (lv_states_11_0= ruleObservableSemantics ) ) ) (otherlv_12= ',' ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) | ( (lv_states_16_0= ruleObservableSemantics ) ) ) )*
            	            {
            	            otherlv_7=(Token)match(input,26,FOLLOW_6); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(otherlv_7, grammarAccess.getObserveStatementBodyAccess().getObservingKeyword_0_3_0());
            	              								
            	            }
            	            // InternalKim.g:5262:9: ( (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' ) | ( (lv_states_11_0= ruleObservableSemantics ) ) )
            	            int alt118=2;
            	            alt118 = dfa118.predict(input);
            	            switch (alt118) {
            	                case 1 :
            	                    // InternalKim.g:5263:10: (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' )
            	                    {
            	                    // InternalKim.g:5263:10: (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' )
            	                    // InternalKim.g:5264:11: otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')'
            	                    {
            	                    otherlv_8=(Token)match(input,34,FOLLOW_82); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      											newLeafNode(otherlv_8, grammarAccess.getObserveStatementBodyAccess().getLeftParenthesisKeyword_0_3_1_0_0());
            	                      										
            	                    }
            	                    // InternalKim.g:5268:11: ( (lv_observations_9_0= ruleObserveStatementBody ) )
            	                    // InternalKim.g:5269:12: (lv_observations_9_0= ruleObserveStatementBody )
            	                    {
            	                    // InternalKim.g:5269:12: (lv_observations_9_0= ruleObserveStatementBody )
            	                    // InternalKim.g:5270:13: lv_observations_9_0= ruleObserveStatementBody
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      													newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getObservationsObserveStatementBodyParserRuleCall_0_3_1_0_1_0());
            	                      												
            	                    }
            	                    pushFollow(FOLLOW_83);
            	                    lv_observations_9_0=ruleObserveStatementBody();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													if (current==null) {
            	                      														current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	                      													}
            	                      													add(
            	                      														current,
            	                      														"observations",
            	                      														lv_observations_9_0,
            	                      														"org.integratedmodelling.kim.Kim.ObserveStatementBody");
            	                      													afterParserOrEnumRuleCall();
            	                      												
            	                    }

            	                    }


            	                    }

            	                    otherlv_10=(Token)match(input,37,FOLLOW_84); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      											newLeafNode(otherlv_10, grammarAccess.getObserveStatementBodyAccess().getRightParenthesisKeyword_0_3_1_0_2());
            	                      										
            	                    }

            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalKim.g:5293:10: ( (lv_states_11_0= ruleObservableSemantics ) )
            	                    {
            	                    // InternalKim.g:5293:10: ( (lv_states_11_0= ruleObservableSemantics ) )
            	                    // InternalKim.g:5294:11: (lv_states_11_0= ruleObservableSemantics )
            	                    {
            	                    // InternalKim.g:5294:11: (lv_states_11_0= ruleObservableSemantics )
            	                    // InternalKim.g:5295:12: lv_states_11_0= ruleObservableSemantics
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      												newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getStatesObservableSemanticsParserRuleCall_0_3_1_1_0());
            	                      											
            	                    }
            	                    pushFollow(FOLLOW_84);
            	                    lv_states_11_0=ruleObservableSemantics();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      												if (current==null) {
            	                      													current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	                      												}
            	                      												add(
            	                      													current,
            	                      													"states",
            	                      													lv_states_11_0,
            	                      													"org.integratedmodelling.kim.Kim.ObservableSemantics");
            	                      												afterParserOrEnumRuleCall();
            	                      											
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }

            	            // InternalKim.g:5313:9: (otherlv_12= ',' ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) | ( (lv_states_16_0= ruleObservableSemantics ) ) ) )*
            	            loop120:
            	            do {
            	                int alt120=2;
            	                int LA120_0 = input.LA(1);

            	                if ( (LA120_0==22) ) {
            	                    alt120=1;
            	                }


            	                switch (alt120) {
            	            	case 1 :
            	            	    // InternalKim.g:5314:10: otherlv_12= ',' ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) | ( (lv_states_16_0= ruleObservableSemantics ) ) )
            	            	    {
            	            	    otherlv_12=(Token)match(input,22,FOLLOW_6); if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      										newLeafNode(otherlv_12, grammarAccess.getObserveStatementBodyAccess().getCommaKeyword_0_3_2_0());
            	            	      									
            	            	    }
            	            	    // InternalKim.g:5318:10: ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) | ( (lv_states_16_0= ruleObservableSemantics ) ) )
            	            	    int alt119=2;
            	            	    alt119 = dfa119.predict(input);
            	            	    switch (alt119) {
            	            	        case 1 :
            	            	            // InternalKim.g:5319:11: (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' )
            	            	            {
            	            	            // InternalKim.g:5319:11: (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' )
            	            	            // InternalKim.g:5320:12: otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')'
            	            	            {
            	            	            otherlv_13=(Token)match(input,34,FOLLOW_82); if (state.failed) return current;
            	            	            if ( state.backtracking==0 ) {

            	            	              												newLeafNode(otherlv_13, grammarAccess.getObserveStatementBodyAccess().getLeftParenthesisKeyword_0_3_2_1_0_0());
            	            	              											
            	            	            }
            	            	            // InternalKim.g:5324:12: ( (lv_observations_14_0= ruleObserveStatementBody ) )
            	            	            // InternalKim.g:5325:13: (lv_observations_14_0= ruleObserveStatementBody )
            	            	            {
            	            	            // InternalKim.g:5325:13: (lv_observations_14_0= ruleObserveStatementBody )
            	            	            // InternalKim.g:5326:14: lv_observations_14_0= ruleObserveStatementBody
            	            	            {
            	            	            if ( state.backtracking==0 ) {

            	            	              														newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getObservationsObserveStatementBodyParserRuleCall_0_3_2_1_0_1_0());
            	            	              													
            	            	            }
            	            	            pushFollow(FOLLOW_83);
            	            	            lv_observations_14_0=ruleObserveStatementBody();

            	            	            state._fsp--;
            	            	            if (state.failed) return current;
            	            	            if ( state.backtracking==0 ) {

            	            	              														if (current==null) {
            	            	              															current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	            	              														}
            	            	              														add(
            	            	              															current,
            	            	              															"observations",
            	            	              															lv_observations_14_0,
            	            	              															"org.integratedmodelling.kim.Kim.ObserveStatementBody");
            	            	              														afterParserOrEnumRuleCall();
            	            	              													
            	            	            }

            	            	            }


            	            	            }

            	            	            otherlv_15=(Token)match(input,37,FOLLOW_84); if (state.failed) return current;
            	            	            if ( state.backtracking==0 ) {

            	            	              												newLeafNode(otherlv_15, grammarAccess.getObserveStatementBodyAccess().getRightParenthesisKeyword_0_3_2_1_0_2());
            	            	              											
            	            	            }

            	            	            }


            	            	            }
            	            	            break;
            	            	        case 2 :
            	            	            // InternalKim.g:5349:11: ( (lv_states_16_0= ruleObservableSemantics ) )
            	            	            {
            	            	            // InternalKim.g:5349:11: ( (lv_states_16_0= ruleObservableSemantics ) )
            	            	            // InternalKim.g:5350:12: (lv_states_16_0= ruleObservableSemantics )
            	            	            {
            	            	            // InternalKim.g:5350:12: (lv_states_16_0= ruleObservableSemantics )
            	            	            // InternalKim.g:5351:13: lv_states_16_0= ruleObservableSemantics
            	            	            {
            	            	            if ( state.backtracking==0 ) {

            	            	              													newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getStatesObservableSemanticsParserRuleCall_0_3_2_1_1_0());
            	            	              												
            	            	            }
            	            	            pushFollow(FOLLOW_84);
            	            	            lv_states_16_0=ruleObservableSemantics();

            	            	            state._fsp--;
            	            	            if (state.failed) return current;
            	            	            if ( state.backtracking==0 ) {

            	            	              													if (current==null) {
            	            	              														current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	            	              													}
            	            	              													add(
            	            	              														current,
            	            	              														"states",
            	            	              														lv_states_16_0,
            	            	              														"org.integratedmodelling.kim.Kim.ObservableSemantics");
            	            	              													afterParserOrEnumRuleCall();
            	            	              												
            	            	            }

            	            	            }


            	            	            }


            	            	            }
            	            	            break;

            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop120;
            	                }
            	            } while (true);


            	            }
            	            break;

            	    }

            	    // InternalKim.g:5371:8: (otherlv_17= 'using' ( (lv_accessor_18_0= ruleFunction ) )? )?
            	    int alt123=2;
            	    int LA123_0 = input.LA(1);

            	    if ( (LA123_0==27) ) {
            	        alt123=1;
            	    }
            	    switch (alt123) {
            	        case 1 :
            	            // InternalKim.g:5372:9: otherlv_17= 'using' ( (lv_accessor_18_0= ruleFunction ) )?
            	            {
            	            otherlv_17=(Token)match(input,27,FOLLOW_85); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(otherlv_17, grammarAccess.getObserveStatementBodyAccess().getUsingKeyword_0_4_0());
            	              								
            	            }
            	            // InternalKim.g:5376:9: ( (lv_accessor_18_0= ruleFunction ) )?
            	            int alt122=2;
            	            alt122 = dfa122.predict(input);
            	            switch (alt122) {
            	                case 1 :
            	                    // InternalKim.g:5377:10: (lv_accessor_18_0= ruleFunction )
            	                    {
            	                    // InternalKim.g:5377:10: (lv_accessor_18_0= ruleFunction )
            	                    // InternalKim.g:5378:11: lv_accessor_18_0= ruleFunction
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      											newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getAccessorFunctionParserRuleCall_0_4_1_0());
            	                      										
            	                    }
            	                    pushFollow(FOLLOW_85);
            	                    lv_accessor_18_0=ruleFunction();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      											if (current==null) {
            	                      												current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	                      											}
            	                      											set(
            	                      												current,
            	                      												"accessor",
            	                      												lv_accessor_18_0,
            	                      												"org.integratedmodelling.kim.Kim.Function");
            	                      											afterParserOrEnumRuleCall();
            	                      										
            	                    }

            	                    }


            	                    }
            	                    break;

            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKim.g:5402:3: ({...}? => ( ({...}? => ( ( (lv_actions_19_0= ruleActionSpecification ) )* (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )? ) ) ) )
            	    {
            	    // InternalKim.g:5402:3: ({...}? => ( ({...}? => ( ( (lv_actions_19_0= ruleActionSpecification ) )* (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )? ) ) ) )
            	    // InternalKim.g:5403:4: {...}? => ( ({...}? => ( ( (lv_actions_19_0= ruleActionSpecification ) )* (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )? ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObserveStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1)");
            	    }
            	    // InternalKim.g:5403:114: ( ({...}? => ( ( (lv_actions_19_0= ruleActionSpecification ) )* (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )? ) ) )
            	    // InternalKim.g:5404:5: ({...}? => ( ( (lv_actions_19_0= ruleActionSpecification ) )* (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )? ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1);
            	    // InternalKim.g:5407:8: ({...}? => ( ( (lv_actions_19_0= ruleActionSpecification ) )* (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )? ) )
            	    // InternalKim.g:5407:9: {...}? => ( ( (lv_actions_19_0= ruleActionSpecification ) )* (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )? )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObserveStatementBody", "true");
            	    }
            	    // InternalKim.g:5407:18: ( ( (lv_actions_19_0= ruleActionSpecification ) )* (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )? )
            	    // InternalKim.g:5407:19: ( (lv_actions_19_0= ruleActionSpecification ) )* (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )?
            	    {
            	    // InternalKim.g:5407:19: ( (lv_actions_19_0= ruleActionSpecification ) )*
            	    loop124:
            	    do {
            	        int alt124=2;
            	        switch ( input.LA(1) ) {
            	        case 52:
            	            {
            	            int LA124_2 = input.LA(2);

            	            if ( (synpred216_InternalKim()) ) {
            	                alt124=1;
            	            }


            	            }
            	            break;
            	        case 53:
            	            {
            	            int LA124_3 = input.LA(2);

            	            if ( (synpred216_InternalKim()) ) {
            	                alt124=1;
            	            }


            	            }
            	            break;
            	        case 54:
            	            {
            	            int LA124_4 = input.LA(2);

            	            if ( (synpred216_InternalKim()) ) {
            	                alt124=1;
            	            }


            	            }
            	            break;

            	        }

            	        switch (alt124) {
            	    	case 1 :
            	    	    // InternalKim.g:5408:9: (lv_actions_19_0= ruleActionSpecification )
            	    	    {
            	    	    // InternalKim.g:5408:9: (lv_actions_19_0= ruleActionSpecification )
            	    	    // InternalKim.g:5409:10: lv_actions_19_0= ruleActionSpecification
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      										newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getActionsActionSpecificationParserRuleCall_1_0_0());
            	    	      									
            	    	    }
            	    	    pushFollow(FOLLOW_85);
            	    	    lv_actions_19_0=ruleActionSpecification();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										if (current==null) {
            	    	      											current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	    	      										}
            	    	      										add(
            	    	      											current,
            	    	      											"actions",
            	    	      											lv_actions_19_0,
            	    	      											"org.integratedmodelling.kim.Kim.ActionSpecification");
            	    	      										afterParserOrEnumRuleCall();
            	    	      									
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop124;
            	        }
            	    } while (true);

            	    // InternalKim.g:5426:8: (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )?
            	    int alt125=2;
            	    int LA125_0 = input.LA(1);

            	    if ( (LA125_0==38) ) {
            	        int LA125_1 = input.LA(2);

            	        if ( (synpred217_InternalKim()) ) {
            	            alt125=1;
            	        }
            	    }
            	    switch (alt125) {
            	        case 1 :
            	            // InternalKim.g:5427:9: otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) )
            	            {
            	            otherlv_20=(Token)match(input,38,FOLLOW_25); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(otherlv_20, grammarAccess.getObserveStatementBodyAccess().getWithKeyword_1_1_0());
            	              								
            	            }
            	            otherlv_21=(Token)match(input,39,FOLLOW_26); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(otherlv_21, grammarAccess.getObserveStatementBodyAccess().getMetadataKeyword_1_1_1());
            	              								
            	            }
            	            // InternalKim.g:5435:9: ( (lv_metadata_22_0= ruleMetadata ) )
            	            // InternalKim.g:5436:10: (lv_metadata_22_0= ruleMetadata )
            	            {
            	            // InternalKim.g:5436:10: (lv_metadata_22_0= ruleMetadata )
            	            // InternalKim.g:5437:11: lv_metadata_22_0= ruleMetadata
            	            {
            	            if ( state.backtracking==0 ) {

            	              											newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getMetadataMetadataParserRuleCall_1_1_2_0());
            	              										
            	            }
            	            pushFollow(FOLLOW_85);
            	            lv_metadata_22_0=ruleMetadata();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											if (current==null) {
            	              												current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	              											}
            	              											set(
            	              												current,
            	              												"metadata",
            	              												lv_metadata_22_0,
            	              												"org.integratedmodelling.kim.Kim.Metadata");
            	              											afterParserOrEnumRuleCall();
            	              										
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }

            	    // InternalKim.g:5455:8: (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )?
            	    int alt126=2;
            	    int LA126_0 = input.LA(1);

            	    if ( (LA126_0==38) ) {
            	        int LA126_1 = input.LA(2);

            	        if ( (synpred218_InternalKim()) ) {
            	            alt126=1;
            	        }
            	    }
            	    switch (alt126) {
            	        case 1 :
            	            // InternalKim.g:5456:9: otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) )
            	            {
            	            otherlv_23=(Token)match(input,38,FOLLOW_28); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(otherlv_23, grammarAccess.getObserveStatementBodyAccess().getWithKeyword_1_2_0());
            	              								
            	            }
            	            otherlv_24=(Token)match(input,40,FOLLOW_26); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(otherlv_24, grammarAccess.getObserveStatementBodyAccess().getDocumentationKeyword_1_2_1());
            	              								
            	            }
            	            // InternalKim.g:5464:9: ( (lv_documentation_25_0= ruleMetadata ) )
            	            // InternalKim.g:5465:10: (lv_documentation_25_0= ruleMetadata )
            	            {
            	            // InternalKim.g:5465:10: (lv_documentation_25_0= ruleMetadata )
            	            // InternalKim.g:5466:11: lv_documentation_25_0= ruleMetadata
            	            {
            	            if ( state.backtracking==0 ) {

            	              											newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getDocumentationMetadataParserRuleCall_1_2_2_0());
            	              										
            	            }
            	            pushFollow(FOLLOW_85);
            	            lv_documentation_25_0=ruleMetadata();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											if (current==null) {
            	              												current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	              											}
            	              											set(
            	              												current,
            	              												"documentation",
            	              												lv_documentation_25_0,
            	              												"org.integratedmodelling.kim.Kim.Metadata");
            	              											afterParserOrEnumRuleCall();
            	              										
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt127 >= 1 ) break loop127;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(127, input);
                        throw eee;
                }
                cnt127++;
            } while (true);

            if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup()) ) {
                if (state.backtracking>0) {state.failed=true; return current;}
                throw new FailedPredicateException(input, "ruleObserveStatementBody", "getUnorderedGroupHelper().canLeave(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup())");
            }

            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup());

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleObserveStatementBody"


    // $ANTLR start "entryRuleObservableSemantics"
    // InternalKim.g:5504:1: entryRuleObservableSemantics returns [EObject current=null] : iv_ruleObservableSemantics= ruleObservableSemantics EOF ;
    public final EObject entryRuleObservableSemantics() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleObservableSemantics = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3()
        	);

        try {
            // InternalKim.g:5508:2: (iv_ruleObservableSemantics= ruleObservableSemantics EOF )
            // InternalKim.g:5509:2: iv_ruleObservableSemantics= ruleObservableSemantics EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getObservableSemanticsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleObservableSemantics=ruleObservableSemantics();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleObservableSemantics; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleObservableSemantics"


    // $ANTLR start "ruleObservableSemantics"
    // InternalKim.g:5518:1: ruleObservableSemantics returns [EObject current=null] : ( ( ( (lv_value_0_0= ruleValue ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )* ) ) ) ) ;
    public final EObject ruleObservableSemantics() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_generic_2_0=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_18=null;
        Token lv_optional_20_0=null;
        Token otherlv_21=null;
        Token otherlv_23=null;
        Token otherlv_25=null;
        Token lv_name_26_0=null;
        EObject lv_value_0_0 = null;

        EObject lv_declaration_3_0 = null;

        EObject lv_by_6_0 = null;

        EObject lv_downTo_9_0 = null;

        EObject lv_role_11_0 = null;

        AntlrDatatypeRuleToken lv_accordingTo_14_0 = null;

        EObject lv_unit_16_0 = null;

        EObject lv_currency_17_0 = null;

        EObject lv_unit_19_0 = null;

        EObject lv_from_22_0 = null;

        EObject lv_to_24_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3()
        	);

        try {
            // InternalKim.g:5527:2: ( ( ( ( (lv_value_0_0= ruleValue ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )* ) ) ) ) )
            // InternalKim.g:5528:2: ( ( ( (lv_value_0_0= ruleValue ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )* ) ) ) )
            {
            // InternalKim.g:5528:2: ( ( ( (lv_value_0_0= ruleValue ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )* ) ) ) )
            // InternalKim.g:5529:3: ( ( (lv_value_0_0= ruleValue ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )* ) ) )
            {
            // InternalKim.g:5529:3: ( ( (lv_value_0_0= ruleValue ) ) otherlv_1= 'as' )?
            int alt128=2;
            alt128 = dfa128.predict(input);
            switch (alt128) {
                case 1 :
                    // InternalKim.g:5530:4: ( (lv_value_0_0= ruleValue ) ) otherlv_1= 'as'
                    {
                    // InternalKim.g:5530:4: ( (lv_value_0_0= ruleValue ) )
                    // InternalKim.g:5531:5: (lv_value_0_0= ruleValue )
                    {
                    // InternalKim.g:5531:5: (lv_value_0_0= ruleValue )
                    // InternalKim.g:5532:6: lv_value_0_0= ruleValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getObservableSemanticsAccess().getValueValueParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_9);
                    lv_value_0_0=ruleValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
                      						}
                      						set(
                      							current,
                      							"value",
                      							lv_value_0_0,
                      							"org.integratedmodelling.kim.Kim.Value");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,25,FOLLOW_86); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getObservableSemanticsAccess().getAsKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:5554:3: ( (lv_generic_2_0= 'any' ) )?
            int alt129=2;
            int LA129_0 = input.LA(1);

            if ( (LA129_0==93) ) {
                alt129=1;
            }
            switch (alt129) {
                case 1 :
                    // InternalKim.g:5555:4: (lv_generic_2_0= 'any' )
                    {
                    // InternalKim.g:5555:4: (lv_generic_2_0= 'any' )
                    // InternalKim.g:5556:5: lv_generic_2_0= 'any'
                    {
                    lv_generic_2_0=(Token)match(input,93,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_generic_2_0, grammarAccess.getObservableSemanticsAccess().getGenericAnyKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getObservableSemanticsRule());
                      					}
                      					setWithLastConsumed(current, "generic", true, "any");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:5568:3: ( (lv_declaration_3_0= ruleConceptDeclaration ) )
            // InternalKim.g:5569:4: (lv_declaration_3_0= ruleConceptDeclaration )
            {
            // InternalKim.g:5569:4: (lv_declaration_3_0= ruleConceptDeclaration )
            // InternalKim.g:5570:5: lv_declaration_3_0= ruleConceptDeclaration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getObservableSemanticsAccess().getDeclarationConceptDeclarationParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_87);
            lv_declaration_3_0=ruleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
              					}
              					set(
              						current,
              						"declaration",
              						lv_declaration_3_0,
              						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:5587:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )* ) ) )
            // InternalKim.g:5588:4: ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )* ) )
            {
            // InternalKim.g:5588:4: ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )* ) )
            // InternalKim.g:5589:5: ( ( ({...}? => ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());
            // InternalKim.g:5592:5: ( ( ({...}? => ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )* )
            // InternalKim.g:5593:6: ( ({...}? => ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )*
            {
            // InternalKim.g:5593:6: ( ({...}? => ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )*
            loop133:
            do {
                int alt133=9;
                alt133 = dfa133.predict(input);
                switch (alt133) {
            	case 1 :
            	    // InternalKim.g:5594:4: ({...}? => ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) ) )
            	    {
            	    // InternalKim.g:5594:4: ({...}? => ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) ) )
            	    // InternalKim.g:5595:5: {...}? => ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 0)");
            	    }
            	    // InternalKim.g:5595:116: ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) )
            	    // InternalKim.g:5596:6: ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 0);
            	    // InternalKim.g:5599:9: ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) )
            	    // InternalKim.g:5599:10: {...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:5599:19: (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) )
            	    // InternalKim.g:5599:20: otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) )
            	    {
            	    otherlv_5=(Token)match(input,94,FOLLOW_16); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_5, grammarAccess.getObservableSemanticsAccess().getByKeyword_3_0_0());
            	      								
            	    }
            	    // InternalKim.g:5603:9: ( (lv_by_6_0= ruleConcept ) )
            	    // InternalKim.g:5604:10: (lv_by_6_0= ruleConcept )
            	    {
            	    // InternalKim.g:5604:10: (lv_by_6_0= ruleConcept )
            	    // InternalKim.g:5605:11: lv_by_6_0= ruleConcept
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getByConceptParserRuleCall_3_0_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_87);
            	    lv_by_6_0=ruleConcept();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"by",
            	      												lv_by_6_0,
            	      												"org.integratedmodelling.kim.Kim.Concept");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKim.g:5628:4: ({...}? => ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) ) ) ) )
            	    {
            	    // InternalKim.g:5628:4: ({...}? => ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) ) ) ) )
            	    // InternalKim.g:5629:5: {...}? => ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 1)");
            	    }
            	    // InternalKim.g:5629:116: ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) ) ) )
            	    // InternalKim.g:5630:6: ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 1);
            	    // InternalKim.g:5633:9: ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) ) )
            	    // InternalKim.g:5633:10: {...}? => (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:5633:19: (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) )
            	    // InternalKim.g:5633:20: otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) )
            	    {
            	    otherlv_7=(Token)match(input,95,FOLLOW_18); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_7, grammarAccess.getObservableSemanticsAccess().getDownKeyword_3_1_0());
            	      								
            	    }
            	    otherlv_8=(Token)match(input,32,FOLLOW_16); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_8, grammarAccess.getObservableSemanticsAccess().getToKeyword_3_1_1());
            	      								
            	    }
            	    // InternalKim.g:5641:9: ( (lv_downTo_9_0= ruleConcept ) )
            	    // InternalKim.g:5642:10: (lv_downTo_9_0= ruleConcept )
            	    {
            	    // InternalKim.g:5642:10: (lv_downTo_9_0= ruleConcept )
            	    // InternalKim.g:5643:11: lv_downTo_9_0= ruleConcept
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getDownToConceptParserRuleCall_3_1_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_87);
            	    lv_downTo_9_0=ruleConcept();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"downTo",
            	      												lv_downTo_9_0,
            	      												"org.integratedmodelling.kim.Kim.Concept");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalKim.g:5666:4: ({...}? => ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) ) )
            	    {
            	    // InternalKim.g:5666:4: ({...}? => ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) ) )
            	    // InternalKim.g:5667:5: {...}? => ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2)");
            	    }
            	    // InternalKim.g:5667:116: ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) )
            	    // InternalKim.g:5668:6: ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2);
            	    // InternalKim.g:5671:9: ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) )
            	    // InternalKim.g:5671:10: {...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:5671:19: (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) )
            	    // InternalKim.g:5671:20: otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) )
            	    {
            	    otherlv_10=(Token)match(input,25,FOLLOW_16); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_10, grammarAccess.getObservableSemanticsAccess().getAsKeyword_3_2_0());
            	      								
            	    }
            	    // InternalKim.g:5675:9: ( (lv_role_11_0= ruleConcept ) )
            	    // InternalKim.g:5676:10: (lv_role_11_0= ruleConcept )
            	    {
            	    // InternalKim.g:5676:10: (lv_role_11_0= ruleConcept )
            	    // InternalKim.g:5677:11: lv_role_11_0= ruleConcept
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getRoleConceptParserRuleCall_3_2_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_87);
            	    lv_role_11_0=ruleConcept();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"role",
            	      												lv_role_11_0,
            	      												"org.integratedmodelling.kim.Kim.Concept");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalKim.g:5700:4: ({...}? => ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) ) )
            	    {
            	    // InternalKim.g:5700:4: ({...}? => ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) ) )
            	    // InternalKim.g:5701:5: {...}? => ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 3)");
            	    }
            	    // InternalKim.g:5701:116: ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) )
            	    // InternalKim.g:5702:6: ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 3);
            	    // InternalKim.g:5705:9: ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) )
            	    // InternalKim.g:5705:10: {...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:5705:19: (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) )
            	    // InternalKim.g:5705:20: otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) )
            	    {
            	    otherlv_12=(Token)match(input,31,FOLLOW_18); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_12, grammarAccess.getObservableSemanticsAccess().getAccordingKeyword_3_3_0());
            	      								
            	    }
            	    otherlv_13=(Token)match(input,32,FOLLOW_19); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_13, grammarAccess.getObservableSemanticsAccess().getToKeyword_3_3_1());
            	      								
            	    }
            	    // InternalKim.g:5713:9: ( (lv_accordingTo_14_0= rulePropertyId ) )
            	    // InternalKim.g:5714:10: (lv_accordingTo_14_0= rulePropertyId )
            	    {
            	    // InternalKim.g:5714:10: (lv_accordingTo_14_0= rulePropertyId )
            	    // InternalKim.g:5715:11: lv_accordingTo_14_0= rulePropertyId
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getAccordingToPropertyIdParserRuleCall_3_3_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_87);
            	    lv_accordingTo_14_0=rulePropertyId();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"accordingTo",
            	      												lv_accordingTo_14_0,
            	      												"org.integratedmodelling.kim.Kim.PropertyId");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalKim.g:5738:4: ({...}? => ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) ) )
            	    {
            	    // InternalKim.g:5738:4: ({...}? => ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) ) )
            	    // InternalKim.g:5739:5: {...}? => ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 4) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 4)");
            	    }
            	    // InternalKim.g:5739:116: ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) )
            	    // InternalKim.g:5740:6: ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 4);
            	    // InternalKim.g:5743:9: ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) )
            	    // InternalKim.g:5743:10: {...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:5743:19: ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) )
            	    int alt131=2;
            	    int LA131_0 = input.LA(1);

            	    if ( (LA131_0==46) ) {
            	        alt131=1;
            	    }
            	    else if ( (LA131_0==96) ) {
            	        alt131=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 131, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt131) {
            	        case 1 :
            	            // InternalKim.g:5743:20: (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) )
            	            {
            	            // InternalKim.g:5743:20: (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) )
            	            // InternalKim.g:5744:10: otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) )
            	            {
            	            otherlv_15=(Token)match(input,46,FOLLOW_88); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_15, grammarAccess.getObservableSemanticsAccess().getInKeyword_3_4_0_0());
            	              									
            	            }
            	            // InternalKim.g:5748:10: ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) )
            	            int alt130=2;
            	            alt130 = dfa130.predict(input);
            	            switch (alt130) {
            	                case 1 :
            	                    // InternalKim.g:5749:11: ( (lv_unit_16_0= ruleUnit ) )
            	                    {
            	                    // InternalKim.g:5749:11: ( (lv_unit_16_0= ruleUnit ) )
            	                    // InternalKim.g:5750:12: (lv_unit_16_0= ruleUnit )
            	                    {
            	                    // InternalKim.g:5750:12: (lv_unit_16_0= ruleUnit )
            	                    // InternalKim.g:5751:13: lv_unit_16_0= ruleUnit
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      													newCompositeNode(grammarAccess.getObservableSemanticsAccess().getUnitUnitParserRuleCall_3_4_0_1_0_0());
            	                      												
            	                    }
            	                    pushFollow(FOLLOW_87);
            	                    lv_unit_16_0=ruleUnit();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													if (current==null) {
            	                      														current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
            	                      													}
            	                      													set(
            	                      														current,
            	                      														"unit",
            	                      														lv_unit_16_0,
            	                      														"org.integratedmodelling.kim.Kim.Unit");
            	                      													afterParserOrEnumRuleCall();
            	                      												
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalKim.g:5769:11: ( (lv_currency_17_0= ruleCurrency ) )
            	                    {
            	                    // InternalKim.g:5769:11: ( (lv_currency_17_0= ruleCurrency ) )
            	                    // InternalKim.g:5770:12: (lv_currency_17_0= ruleCurrency )
            	                    {
            	                    // InternalKim.g:5770:12: (lv_currency_17_0= ruleCurrency )
            	                    // InternalKim.g:5771:13: lv_currency_17_0= ruleCurrency
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      													newCompositeNode(grammarAccess.getObservableSemanticsAccess().getCurrencyCurrencyParserRuleCall_3_4_0_1_1_0());
            	                      												
            	                    }
            	                    pushFollow(FOLLOW_87);
            	                    lv_currency_17_0=ruleCurrency();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													if (current==null) {
            	                      														current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
            	                      													}
            	                      													set(
            	                      														current,
            	                      														"currency",
            	                      														lv_currency_17_0,
            	                      														"org.integratedmodelling.kim.Kim.Currency");
            	                      													afterParserOrEnumRuleCall();
            	                      												
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:5791:9: (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) )
            	            {
            	            // InternalKim.g:5791:9: (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) )
            	            // InternalKim.g:5792:10: otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) )
            	            {
            	            otherlv_18=(Token)match(input,96,FOLLOW_89); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_18, grammarAccess.getObservableSemanticsAccess().getPerKeyword_3_4_1_0());
            	              									
            	            }
            	            // InternalKim.g:5796:10: ( (lv_unit_19_0= ruleUnit ) )
            	            // InternalKim.g:5797:11: (lv_unit_19_0= ruleUnit )
            	            {
            	            // InternalKim.g:5797:11: (lv_unit_19_0= ruleUnit )
            	            // InternalKim.g:5798:12: lv_unit_19_0= ruleUnit
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getObservableSemanticsAccess().getUnitUnitParserRuleCall_3_4_1_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_87);
            	            lv_unit_19_0=ruleUnit();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
            	              												}
            	              												set(
            	              													current,
            	              													"unit",
            	              													lv_unit_19_0,
            	              													"org.integratedmodelling.kim.Kim.Unit");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalKim.g:5822:4: ({...}? => ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) ) )
            	    {
            	    // InternalKim.g:5822:4: ({...}? => ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) ) )
            	    // InternalKim.g:5823:5: {...}? => ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5)");
            	    }
            	    // InternalKim.g:5823:116: ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) )
            	    // InternalKim.g:5824:6: ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5);
            	    // InternalKim.g:5827:9: ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) )
            	    // InternalKim.g:5827:10: {...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:5827:19: ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' )
            	    int alt132=2;
            	    int LA132_0 = input.LA(1);

            	    if ( (LA132_0==97) ) {
            	        alt132=1;
            	    }
            	    else if ( (LA132_0==98) ) {
            	        alt132=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 132, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt132) {
            	        case 1 :
            	            // InternalKim.g:5827:20: ( (lv_optional_20_0= 'optional' ) )
            	            {
            	            // InternalKim.g:5827:20: ( (lv_optional_20_0= 'optional' ) )
            	            // InternalKim.g:5828:10: (lv_optional_20_0= 'optional' )
            	            {
            	            // InternalKim.g:5828:10: (lv_optional_20_0= 'optional' )
            	            // InternalKim.g:5829:11: lv_optional_20_0= 'optional'
            	            {
            	            lv_optional_20_0=(Token)match(input,97,FOLLOW_87); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(lv_optional_20_0, grammarAccess.getObservableSemanticsAccess().getOptionalOptionalKeyword_3_5_0_0());
            	              										
            	            }
            	            if ( state.backtracking==0 ) {

            	              											if (current==null) {
            	              												current = createModelElement(grammarAccess.getObservableSemanticsRule());
            	              											}
            	              											setWithLastConsumed(current, "optional", true, "optional");
            	              										
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:5842:9: otherlv_21= 'required'
            	            {
            	            otherlv_21=(Token)match(input,98,FOLLOW_87); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(otherlv_21, grammarAccess.getObservableSemanticsAccess().getRequiredKeyword_3_5_1());
            	              								
            	            }

            	            }
            	            break;

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 7 :
            	    // InternalKim.g:5852:4: ({...}? => ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) ) )
            	    {
            	    // InternalKim.g:5852:4: ({...}? => ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) ) )
            	    // InternalKim.g:5853:5: {...}? => ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 6) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 6)");
            	    }
            	    // InternalKim.g:5853:116: ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) )
            	    // InternalKim.g:5854:6: ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 6);
            	    // InternalKim.g:5857:9: ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) )
            	    // InternalKim.g:5857:10: {...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:5857:19: ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) )
            	    // InternalKim.g:5857:20: ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) )
            	    {
            	    // InternalKim.g:5857:20: ( (lv_from_22_0= ruleNumber ) )
            	    // InternalKim.g:5858:10: (lv_from_22_0= ruleNumber )
            	    {
            	    // InternalKim.g:5858:10: (lv_from_22_0= ruleNumber )
            	    // InternalKim.g:5859:11: lv_from_22_0= ruleNumber
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getFromNumberParserRuleCall_3_6_0_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_18);
            	    lv_from_22_0=ruleNumber();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"from",
            	      												lv_from_22_0,
            	      												"org.integratedmodelling.kim.Kim.Number");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    otherlv_23=(Token)match(input,32,FOLLOW_33); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_23, grammarAccess.getObservableSemanticsAccess().getToKeyword_3_6_1());
            	      								
            	    }
            	    // InternalKim.g:5880:9: ( (lv_to_24_0= ruleNumber ) )
            	    // InternalKim.g:5881:10: (lv_to_24_0= ruleNumber )
            	    {
            	    // InternalKim.g:5881:10: (lv_to_24_0= ruleNumber )
            	    // InternalKim.g:5882:11: lv_to_24_0= ruleNumber
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getToNumberParserRuleCall_3_6_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_87);
            	    lv_to_24_0=ruleNumber();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"to",
            	      												lv_to_24_0,
            	      												"org.integratedmodelling.kim.Kim.Number");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 8 :
            	    // InternalKim.g:5905:4: ({...}? => ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) ) )
            	    {
            	    // InternalKim.g:5905:4: ({...}? => ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) ) )
            	    // InternalKim.g:5906:5: {...}? => ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7)");
            	    }
            	    // InternalKim.g:5906:116: ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) )
            	    // InternalKim.g:5907:6: ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7);
            	    // InternalKim.g:5910:9: ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) )
            	    // InternalKim.g:5910:10: {...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:5910:19: (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) )
            	    // InternalKim.g:5910:20: otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) )
            	    {
            	    otherlv_25=(Token)match(input,99,FOLLOW_55); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_25, grammarAccess.getObservableSemanticsAccess().getNamedKeyword_3_7_0());
            	      								
            	    }
            	    // InternalKim.g:5914:9: ( (lv_name_26_0= RULE_LOWERCASE_ID ) )
            	    // InternalKim.g:5915:10: (lv_name_26_0= RULE_LOWERCASE_ID )
            	    {
            	    // InternalKim.g:5915:10: (lv_name_26_0= RULE_LOWERCASE_ID )
            	    // InternalKim.g:5916:11: lv_name_26_0= RULE_LOWERCASE_ID
            	    {
            	    lv_name_26_0=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_87); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_name_26_0, grammarAccess.getObservableSemanticsAccess().getNameLOWERCASE_IDTerminalRuleCall_3_7_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getObservableSemanticsRule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"name",
            	      												lv_name_26_0,
            	      												"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop133;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleObservableSemantics"


    // $ANTLR start "entryRuleDependency"
    // InternalKim.g:5952:1: entryRuleDependency returns [EObject current=null] : iv_ruleDependency= ruleDependency EOF ;
    public final EObject entryRuleDependency() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDependency = null;


        try {
            // InternalKim.g:5952:51: (iv_ruleDependency= ruleDependency EOF )
            // InternalKim.g:5953:2: iv_ruleDependency= ruleDependency EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDependencyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDependency=ruleDependency();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDependency; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDependency"


    // $ANTLR start "ruleDependency"
    // InternalKim.g:5959:1: ruleDependency returns [EObject current=null] : ( ( ( (lv_modelReference_0_1= RULE_LOWERCASE_ID | lv_modelReference_0_2= rulePathName ) ) ) | ( (lv_observable_1_0= ruleObservableSemantics ) ) ) ;
    public final EObject ruleDependency() throws RecognitionException {
        EObject current = null;

        Token lv_modelReference_0_1=null;
        AntlrDatatypeRuleToken lv_modelReference_0_2 = null;

        EObject lv_observable_1_0 = null;



        	enterRule();

        try {
            // InternalKim.g:5965:2: ( ( ( ( (lv_modelReference_0_1= RULE_LOWERCASE_ID | lv_modelReference_0_2= rulePathName ) ) ) | ( (lv_observable_1_0= ruleObservableSemantics ) ) ) )
            // InternalKim.g:5966:2: ( ( ( (lv_modelReference_0_1= RULE_LOWERCASE_ID | lv_modelReference_0_2= rulePathName ) ) ) | ( (lv_observable_1_0= ruleObservableSemantics ) ) )
            {
            // InternalKim.g:5966:2: ( ( ( (lv_modelReference_0_1= RULE_LOWERCASE_ID | lv_modelReference_0_2= rulePathName ) ) ) | ( (lv_observable_1_0= ruleObservableSemantics ) ) )
            int alt135=2;
            alt135 = dfa135.predict(input);
            switch (alt135) {
                case 1 :
                    // InternalKim.g:5967:3: ( ( (lv_modelReference_0_1= RULE_LOWERCASE_ID | lv_modelReference_0_2= rulePathName ) ) )
                    {
                    // InternalKim.g:5967:3: ( ( (lv_modelReference_0_1= RULE_LOWERCASE_ID | lv_modelReference_0_2= rulePathName ) ) )
                    // InternalKim.g:5968:4: ( (lv_modelReference_0_1= RULE_LOWERCASE_ID | lv_modelReference_0_2= rulePathName ) )
                    {
                    // InternalKim.g:5968:4: ( (lv_modelReference_0_1= RULE_LOWERCASE_ID | lv_modelReference_0_2= rulePathName ) )
                    // InternalKim.g:5969:5: (lv_modelReference_0_1= RULE_LOWERCASE_ID | lv_modelReference_0_2= rulePathName )
                    {
                    // InternalKim.g:5969:5: (lv_modelReference_0_1= RULE_LOWERCASE_ID | lv_modelReference_0_2= rulePathName )
                    int alt134=2;
                    int LA134_0 = input.LA(1);

                    if ( (LA134_0==RULE_LOWERCASE_ID) ) {
                        int LA134_1 = input.LA(2);

                        if ( (synpred233_InternalKim()) ) {
                            alt134=1;
                        }
                        else if ( (true) ) {
                            alt134=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 134, 1, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 134, 0, input);

                        throw nvae;
                    }
                    switch (alt134) {
                        case 1 :
                            // InternalKim.g:5970:6: lv_modelReference_0_1= RULE_LOWERCASE_ID
                            {
                            lv_modelReference_0_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_modelReference_0_1, grammarAccess.getDependencyAccess().getModelReferenceLOWERCASE_IDTerminalRuleCall_0_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getDependencyRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"modelReference",
                              							lv_modelReference_0_1,
                              							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:5985:6: lv_modelReference_0_2= rulePathName
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getDependencyAccess().getModelReferencePathNameParserRuleCall_0_0_1());
                              					
                            }
                            pushFollow(FOLLOW_2);
                            lv_modelReference_0_2=rulePathName();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getDependencyRule());
                              						}
                              						set(
                              							current,
                              							"modelReference",
                              							lv_modelReference_0_2,
                              							"org.integratedmodelling.kim.Kim.PathName");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:6004:3: ( (lv_observable_1_0= ruleObservableSemantics ) )
                    {
                    // InternalKim.g:6004:3: ( (lv_observable_1_0= ruleObservableSemantics ) )
                    // InternalKim.g:6005:4: (lv_observable_1_0= ruleObservableSemantics )
                    {
                    // InternalKim.g:6005:4: (lv_observable_1_0= ruleObservableSemantics )
                    // InternalKim.g:6006:5: lv_observable_1_0= ruleObservableSemantics
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDependencyAccess().getObservableObservableSemanticsParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_observable_1_0=ruleObservableSemantics();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDependencyRule());
                      					}
                      					set(
                      						current,
                      						"observable",
                      						lv_observable_1_0,
                      						"org.integratedmodelling.kim.Kim.ObservableSemantics");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDependency"


    // $ANTLR start "entryRuleConceptDeclaration"
    // InternalKim.g:6027:1: entryRuleConceptDeclaration returns [EObject current=null] : iv_ruleConceptDeclaration= ruleConceptDeclaration EOF ;
    public final EObject entryRuleConceptDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConceptDeclaration = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2()
        	);

        try {
            // InternalKim.g:6031:2: (iv_ruleConceptDeclaration= ruleConceptDeclaration EOF )
            // InternalKim.g:6032:2: iv_ruleConceptDeclaration= ruleConceptDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConceptDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConceptDeclaration=ruleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConceptDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleConceptDeclaration"


    // $ANTLR start "ruleConceptDeclaration"
    // InternalKim.g:6041:1: ruleConceptDeclaration returns [EObject current=null] : ( ( (lv_name_0_0= RULE_STRING ) )? ( (lv_main_1_0= ruleConcept ) )+ ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) ) ) (otherlv_22= 'within' ( (lv_context_23_0= ruleSimpleConceptDeclaration ) ) )? ) ;
    public final EObject ruleConceptDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        EObject lv_main_1_0 = null;

        EObject lv_inherency_4_0 = null;

        EObject lv_motivation_6_0 = null;

        EObject lv_compresent_8_0 = null;

        EObject lv_causant_11_0 = null;

        EObject lv_adjacent_14_0 = null;

        EObject lv_container_17_0 = null;

        EObject lv_contained_19_0 = null;

        EObject lv_caused_21_0 = null;

        EObject lv_context_23_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2()
        	);

        try {
            // InternalKim.g:6050:2: ( ( ( (lv_name_0_0= RULE_STRING ) )? ( (lv_main_1_0= ruleConcept ) )+ ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) ) ) (otherlv_22= 'within' ( (lv_context_23_0= ruleSimpleConceptDeclaration ) ) )? ) )
            // InternalKim.g:6051:2: ( ( (lv_name_0_0= RULE_STRING ) )? ( (lv_main_1_0= ruleConcept ) )+ ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) ) ) (otherlv_22= 'within' ( (lv_context_23_0= ruleSimpleConceptDeclaration ) ) )? )
            {
            // InternalKim.g:6051:2: ( ( (lv_name_0_0= RULE_STRING ) )? ( (lv_main_1_0= ruleConcept ) )+ ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) ) ) (otherlv_22= 'within' ( (lv_context_23_0= ruleSimpleConceptDeclaration ) ) )? )
            // InternalKim.g:6052:3: ( (lv_name_0_0= RULE_STRING ) )? ( (lv_main_1_0= ruleConcept ) )+ ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) ) ) (otherlv_22= 'within' ( (lv_context_23_0= ruleSimpleConceptDeclaration ) ) )?
            {
            // InternalKim.g:6052:3: ( (lv_name_0_0= RULE_STRING ) )?
            int alt136=2;
            int LA136_0 = input.LA(1);

            if ( (LA136_0==RULE_STRING) ) {
                alt136=1;
            }
            switch (alt136) {
                case 1 :
                    // InternalKim.g:6053:4: (lv_name_0_0= RULE_STRING )
                    {
                    // InternalKim.g:6053:4: (lv_name_0_0= RULE_STRING )
                    // InternalKim.g:6054:5: lv_name_0_0= RULE_STRING
                    {
                    lv_name_0_0=(Token)match(input,RULE_STRING,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_0_0, grammarAccess.getConceptDeclarationAccess().getNameSTRINGTerminalRuleCall_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getConceptDeclarationRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_0_0,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:6070:3: ( (lv_main_1_0= ruleConcept ) )+
            int cnt137=0;
            loop137:
            do {
                int alt137=2;
                alt137 = dfa137.predict(input);
                switch (alt137) {
            	case 1 :
            	    // InternalKim.g:6071:4: (lv_main_1_0= ruleConcept )
            	    {
            	    // InternalKim.g:6071:4: (lv_main_1_0= ruleConcept )
            	    // InternalKim.g:6072:5: lv_main_1_0= ruleConcept
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getConceptDeclarationAccess().getMainConceptParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_90);
            	    lv_main_1_0=ruleConcept();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"main",
            	      						lv_main_1_0,
            	      						"org.integratedmodelling.kim.Kim.Concept");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt137 >= 1 ) break loop137;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(137, input);
                        throw eee;
                }
                cnt137++;
            } while (true);

            // InternalKim.g:6089:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) ) )
            // InternalKim.g:6090:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) )
            {
            // InternalKim.g:6090:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) )
            // InternalKim.g:6091:5: ( ( ({...}? => ( ({...}? => (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2());
            // InternalKim.g:6094:5: ( ( ({...}? => ( ({...}? => (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* )
            // InternalKim.g:6095:6: ( ({...}? => ( ({...}? => (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )*
            {
            // InternalKim.g:6095:6: ( ({...}? => ( ({...}? => (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )*
            loop138:
            do {
                int alt138=9;
                alt138 = dfa138.predict(input);
                switch (alt138) {
            	case 1 :
            	    // InternalKim.g:6096:4: ({...}? => ( ({...}? => (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:6096:4: ({...}? => ( ({...}? => (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:6097:5: {...}? => ( ({...}? => (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 0)");
            	    }
            	    // InternalKim.g:6097:115: ( ({...}? => (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:6098:6: ({...}? => (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 0);
            	    // InternalKim.g:6101:9: ({...}? => (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) )
            	    // InternalKim.g:6101:10: {...}? => (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
            	    }
            	    // InternalKim.g:6101:19: (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) )
            	    // InternalKim.g:6101:20: otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) )
            	    {
            	    otherlv_3=(Token)match(input,100,FOLLOW_16); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_3, grammarAccess.getConceptDeclarationAccess().getOfKeyword_2_0_0());
            	      								
            	    }
            	    // InternalKim.g:6105:9: ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) )
            	    // InternalKim.g:6106:10: (lv_inherency_4_0= ruleSimpleConceptDeclaration )
            	    {
            	    // InternalKim.g:6106:10: (lv_inherency_4_0= ruleSimpleConceptDeclaration )
            	    // InternalKim.g:6107:11: lv_inherency_4_0= ruleSimpleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getInherencySimpleConceptDeclarationParserRuleCall_2_0_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_91);
            	    lv_inherency_4_0=ruleSimpleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
            	      											}
            	      											set(
            	      												current,
            	      												"inherency",
            	      												lv_inherency_4_0,
            	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKim.g:6130:4: ({...}? => ( ({...}? => (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:6130:4: ({...}? => ( ({...}? => (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:6131:5: {...}? => ( ({...}? => (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 1)");
            	    }
            	    // InternalKim.g:6131:115: ( ({...}? => (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:6132:6: ({...}? => (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 1);
            	    // InternalKim.g:6135:9: ({...}? => (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) ) )
            	    // InternalKim.g:6135:10: {...}? => (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
            	    }
            	    // InternalKim.g:6135:19: (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) )
            	    // InternalKim.g:6135:20: otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) )
            	    {
            	    otherlv_5=(Token)match(input,101,FOLLOW_16); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_5, grammarAccess.getConceptDeclarationAccess().getForKeyword_2_1_0());
            	      								
            	    }
            	    // InternalKim.g:6139:9: ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) )
            	    // InternalKim.g:6140:10: (lv_motivation_6_0= ruleSimpleConceptDeclaration )
            	    {
            	    // InternalKim.g:6140:10: (lv_motivation_6_0= ruleSimpleConceptDeclaration )
            	    // InternalKim.g:6141:11: lv_motivation_6_0= ruleSimpleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getMotivationSimpleConceptDeclarationParserRuleCall_2_1_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_91);
            	    lv_motivation_6_0=ruleSimpleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
            	      											}
            	      											set(
            	      												current,
            	      												"motivation",
            	      												lv_motivation_6_0,
            	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalKim.g:6164:4: ({...}? => ( ({...}? => (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:6164:4: ({...}? => ( ({...}? => (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:6165:5: {...}? => ( ({...}? => (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 2)");
            	    }
            	    // InternalKim.g:6165:115: ( ({...}? => (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:6166:6: ({...}? => (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 2);
            	    // InternalKim.g:6169:9: ({...}? => (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) ) )
            	    // InternalKim.g:6169:10: {...}? => (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
            	    }
            	    // InternalKim.g:6169:19: (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) )
            	    // InternalKim.g:6169:20: otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) )
            	    {
            	    otherlv_7=(Token)match(input,38,FOLLOW_16); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_7, grammarAccess.getConceptDeclarationAccess().getWithKeyword_2_2_0());
            	      								
            	    }
            	    // InternalKim.g:6173:9: ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) )
            	    // InternalKim.g:6174:10: (lv_compresent_8_0= ruleSimpleConceptDeclaration )
            	    {
            	    // InternalKim.g:6174:10: (lv_compresent_8_0= ruleSimpleConceptDeclaration )
            	    // InternalKim.g:6175:11: lv_compresent_8_0= ruleSimpleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getCompresentSimpleConceptDeclarationParserRuleCall_2_2_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_91);
            	    lv_compresent_8_0=ruleSimpleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
            	      											}
            	      											set(
            	      												current,
            	      												"compresent",
            	      												lv_compresent_8_0,
            	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalKim.g:6198:4: ({...}? => ( ({...}? => (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:6198:4: ({...}? => ( ({...}? => (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:6199:5: {...}? => ( ({...}? => (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 3)");
            	    }
            	    // InternalKim.g:6199:115: ( ({...}? => (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:6200:6: ({...}? => (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 3);
            	    // InternalKim.g:6203:9: ({...}? => (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) ) )
            	    // InternalKim.g:6203:10: {...}? => (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
            	    }
            	    // InternalKim.g:6203:19: (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) )
            	    // InternalKim.g:6203:20: otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) )
            	    {
            	    otherlv_9=(Token)match(input,102,FOLLOW_92); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_9, grammarAccess.getConceptDeclarationAccess().getCausedKeyword_2_3_0());
            	      								
            	    }
            	    otherlv_10=(Token)match(input,94,FOLLOW_16); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_10, grammarAccess.getConceptDeclarationAccess().getByKeyword_2_3_1());
            	      								
            	    }
            	    // InternalKim.g:6211:9: ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) )
            	    // InternalKim.g:6212:10: (lv_causant_11_0= ruleSimpleConceptDeclaration )
            	    {
            	    // InternalKim.g:6212:10: (lv_causant_11_0= ruleSimpleConceptDeclaration )
            	    // InternalKim.g:6213:11: lv_causant_11_0= ruleSimpleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getCausantSimpleConceptDeclarationParserRuleCall_2_3_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_91);
            	    lv_causant_11_0=ruleSimpleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
            	      											}
            	      											set(
            	      												current,
            	      												"causant",
            	      												lv_causant_11_0,
            	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalKim.g:6236:4: ({...}? => ( ({...}? => (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:6236:4: ({...}? => ( ({...}? => (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:6237:5: {...}? => ( ({...}? => (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 4) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 4)");
            	    }
            	    // InternalKim.g:6237:115: ( ({...}? => (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:6238:6: ({...}? => (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 4);
            	    // InternalKim.g:6241:9: ({...}? => (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) ) )
            	    // InternalKim.g:6241:10: {...}? => (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
            	    }
            	    // InternalKim.g:6241:19: (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) )
            	    // InternalKim.g:6241:20: otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) )
            	    {
            	    otherlv_12=(Token)match(input,103,FOLLOW_18); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_12, grammarAccess.getConceptDeclarationAccess().getAdjacentKeyword_2_4_0());
            	      								
            	    }
            	    otherlv_13=(Token)match(input,32,FOLLOW_16); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_13, grammarAccess.getConceptDeclarationAccess().getToKeyword_2_4_1());
            	      								
            	    }
            	    // InternalKim.g:6249:9: ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) )
            	    // InternalKim.g:6250:10: (lv_adjacent_14_0= ruleSimpleConceptDeclaration )
            	    {
            	    // InternalKim.g:6250:10: (lv_adjacent_14_0= ruleSimpleConceptDeclaration )
            	    // InternalKim.g:6251:11: lv_adjacent_14_0= ruleSimpleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getAdjacentSimpleConceptDeclarationParserRuleCall_2_4_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_91);
            	    lv_adjacent_14_0=ruleSimpleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
            	      											}
            	      											set(
            	      												current,
            	      												"adjacent",
            	      												lv_adjacent_14_0,
            	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalKim.g:6274:4: ({...}? => ( ({...}? => (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:6274:4: ({...}? => ( ({...}? => (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:6275:5: {...}? => ( ({...}? => (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 5) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 5)");
            	    }
            	    // InternalKim.g:6275:115: ( ({...}? => (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:6276:6: ({...}? => (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 5);
            	    // InternalKim.g:6279:9: ({...}? => (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) ) )
            	    // InternalKim.g:6279:10: {...}? => (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
            	    }
            	    // InternalKim.g:6279:19: (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) )
            	    // InternalKim.g:6279:20: otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) )
            	    {
            	    otherlv_15=(Token)match(input,104,FOLLOW_93); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_15, grammarAccess.getConceptDeclarationAccess().getContainedKeyword_2_5_0());
            	      								
            	    }
            	    otherlv_16=(Token)match(input,46,FOLLOW_16); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_16, grammarAccess.getConceptDeclarationAccess().getInKeyword_2_5_1());
            	      								
            	    }
            	    // InternalKim.g:6287:9: ( (lv_container_17_0= ruleSimpleConceptDeclaration ) )
            	    // InternalKim.g:6288:10: (lv_container_17_0= ruleSimpleConceptDeclaration )
            	    {
            	    // InternalKim.g:6288:10: (lv_container_17_0= ruleSimpleConceptDeclaration )
            	    // InternalKim.g:6289:11: lv_container_17_0= ruleSimpleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getContainerSimpleConceptDeclarationParserRuleCall_2_5_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_91);
            	    lv_container_17_0=ruleSimpleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
            	      											}
            	      											set(
            	      												current,
            	      												"container",
            	      												lv_container_17_0,
            	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 7 :
            	    // InternalKim.g:6312:4: ({...}? => ( ({...}? => (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:6312:4: ({...}? => ( ({...}? => (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:6313:5: {...}? => ( ({...}? => (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 6) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 6)");
            	    }
            	    // InternalKim.g:6313:115: ( ({...}? => (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:6314:6: ({...}? => (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 6);
            	    // InternalKim.g:6317:9: ({...}? => (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) ) )
            	    // InternalKim.g:6317:10: {...}? => (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
            	    }
            	    // InternalKim.g:6317:19: (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) )
            	    // InternalKim.g:6317:20: otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) )
            	    {
            	    otherlv_18=(Token)match(input,105,FOLLOW_16); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_18, grammarAccess.getConceptDeclarationAccess().getContainingKeyword_2_6_0());
            	      								
            	    }
            	    // InternalKim.g:6321:9: ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) )
            	    // InternalKim.g:6322:10: (lv_contained_19_0= ruleSimpleConceptDeclaration )
            	    {
            	    // InternalKim.g:6322:10: (lv_contained_19_0= ruleSimpleConceptDeclaration )
            	    // InternalKim.g:6323:11: lv_contained_19_0= ruleSimpleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getContainedSimpleConceptDeclarationParserRuleCall_2_6_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_91);
            	    lv_contained_19_0=ruleSimpleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
            	      											}
            	      											set(
            	      												current,
            	      												"contained",
            	      												lv_contained_19_0,
            	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 8 :
            	    // InternalKim.g:6346:4: ({...}? => ( ({...}? => (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:6346:4: ({...}? => ( ({...}? => (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:6347:5: {...}? => ( ({...}? => (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 7) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 7)");
            	    }
            	    // InternalKim.g:6347:115: ( ({...}? => (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:6348:6: ({...}? => (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 7);
            	    // InternalKim.g:6351:9: ({...}? => (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) ) )
            	    // InternalKim.g:6351:10: {...}? => (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
            	    }
            	    // InternalKim.g:6351:19: (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) )
            	    // InternalKim.g:6351:20: otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) )
            	    {
            	    otherlv_20=(Token)match(input,106,FOLLOW_16); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_20, grammarAccess.getConceptDeclarationAccess().getCausingKeyword_2_7_0());
            	      								
            	    }
            	    // InternalKim.g:6355:9: ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) )
            	    // InternalKim.g:6356:10: (lv_caused_21_0= ruleSimpleConceptDeclaration )
            	    {
            	    // InternalKim.g:6356:10: (lv_caused_21_0= ruleSimpleConceptDeclaration )
            	    // InternalKim.g:6357:11: lv_caused_21_0= ruleSimpleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getCausedSimpleConceptDeclarationParserRuleCall_2_7_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_91);
            	    lv_caused_21_0=ruleSimpleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
            	      											}
            	      											set(
            	      												current,
            	      												"caused",
            	      												lv_caused_21_0,
            	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop138;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2());

            }

            // InternalKim.g:6387:3: (otherlv_22= 'within' ( (lv_context_23_0= ruleSimpleConceptDeclaration ) ) )?
            int alt139=2;
            int LA139_0 = input.LA(1);

            if ( (LA139_0==107) ) {
                alt139=1;
            }
            switch (alt139) {
                case 1 :
                    // InternalKim.g:6388:4: otherlv_22= 'within' ( (lv_context_23_0= ruleSimpleConceptDeclaration ) )
                    {
                    otherlv_22=(Token)match(input,107,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_22, grammarAccess.getConceptDeclarationAccess().getWithinKeyword_3_0());
                      			
                    }
                    // InternalKim.g:6392:4: ( (lv_context_23_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:6393:5: (lv_context_23_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:6393:5: (lv_context_23_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:6394:6: lv_context_23_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptDeclarationAccess().getContextSimpleConceptDeclarationParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_context_23_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
                      						}
                      						set(
                      							current,
                      							"context",
                      							lv_context_23_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleConceptDeclaration"


    // $ANTLR start "entryRuleConceptReference"
    // InternalKim.g:6419:1: entryRuleConceptReference returns [EObject current=null] : iv_ruleConceptReference= ruleConceptReference EOF ;
    public final EObject entryRuleConceptReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConceptReference = null;


        try {
            // InternalKim.g:6419:57: (iv_ruleConceptReference= ruleConceptReference EOF )
            // InternalKim.g:6420:2: iv_ruleConceptReference= ruleConceptReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConceptReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConceptReference=ruleConceptReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConceptReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConceptReference"


    // $ANTLR start "ruleConceptReference"
    // InternalKim.g:6426:1: ruleConceptReference returns [EObject current=null] : ( ( (lv_name_0_0= RULE_CAMELCASE_ID ) ) | ( (lv_name_1_0= ruleNamespaceId ) ) | ( ( ( (lv_templateType_2_1= '${' | lv_templateType_2_2= '#{' ) ) ) ( ( ( (lv_name_3_0= 'context' ) ) ( ( (lv_type_4_0= ruleCONCEPT_TYPE ) ) | (otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_7_0= 'inherent' ) ) ( ( (lv_type_8_0= ruleCONCEPT_TYPE ) ) | (otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_11_0= 'compresent' ) ) ( ( (lv_type_12_0= ruleCONCEPT_TYPE ) ) | (otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_15_0= 'adjacent' ) ) ( ( (lv_type_16_0= ruleCONCEPT_TYPE ) ) | (otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_19_0= 'container' ) ) ( ( (lv_type_20_0= ruleCONCEPT_TYPE ) ) | (otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_23_0= 'contained' ) ) ( ( (lv_type_24_0= ruleCONCEPT_TYPE ) ) | (otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_27_0= 'purpose' ) ) ( ( (lv_type_28_0= ruleCONCEPT_TYPE ) ) | (otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_31_0= 'causant' ) ) ( ( (lv_type_32_0= ruleCONCEPT_TYPE ) ) | (otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_35_0= 'caused' ) ) ( ( (lv_type_36_0= ruleCONCEPT_TYPE ) ) | (otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) ) ) ) ) ) ( (lv_template_39_0= '}' ) ) ) ) ;
    public final EObject ruleConceptReference() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token lv_templateType_2_1=null;
        Token lv_templateType_2_2=null;
        Token lv_name_3_0=null;
        Token otherlv_5=null;
        Token lv_name_7_0=null;
        Token otherlv_9=null;
        Token lv_name_11_0=null;
        Token otherlv_13=null;
        Token lv_name_15_0=null;
        Token otherlv_17=null;
        Token lv_name_19_0=null;
        Token otherlv_21=null;
        Token lv_name_23_0=null;
        Token otherlv_25=null;
        Token lv_name_27_0=null;
        Token otherlv_29=null;
        Token lv_name_31_0=null;
        Token otherlv_33=null;
        Token lv_name_35_0=null;
        Token otherlv_37=null;
        Token lv_template_39_0=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_type_4_0 = null;

        EObject lv_extends_6_0 = null;

        AntlrDatatypeRuleToken lv_type_8_0 = null;

        EObject lv_extends_10_0 = null;

        AntlrDatatypeRuleToken lv_type_12_0 = null;

        EObject lv_extends_14_0 = null;

        AntlrDatatypeRuleToken lv_type_16_0 = null;

        EObject lv_extends_18_0 = null;

        AntlrDatatypeRuleToken lv_type_20_0 = null;

        EObject lv_extends_22_0 = null;

        AntlrDatatypeRuleToken lv_type_24_0 = null;

        EObject lv_extends_26_0 = null;

        AntlrDatatypeRuleToken lv_type_28_0 = null;

        EObject lv_extends_30_0 = null;

        AntlrDatatypeRuleToken lv_type_32_0 = null;

        EObject lv_extends_34_0 = null;

        AntlrDatatypeRuleToken lv_type_36_0 = null;

        EObject lv_extends_38_0 = null;



        	enterRule();

        try {
            // InternalKim.g:6432:2: ( ( ( (lv_name_0_0= RULE_CAMELCASE_ID ) ) | ( (lv_name_1_0= ruleNamespaceId ) ) | ( ( ( (lv_templateType_2_1= '${' | lv_templateType_2_2= '#{' ) ) ) ( ( ( (lv_name_3_0= 'context' ) ) ( ( (lv_type_4_0= ruleCONCEPT_TYPE ) ) | (otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_7_0= 'inherent' ) ) ( ( (lv_type_8_0= ruleCONCEPT_TYPE ) ) | (otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_11_0= 'compresent' ) ) ( ( (lv_type_12_0= ruleCONCEPT_TYPE ) ) | (otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_15_0= 'adjacent' ) ) ( ( (lv_type_16_0= ruleCONCEPT_TYPE ) ) | (otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_19_0= 'container' ) ) ( ( (lv_type_20_0= ruleCONCEPT_TYPE ) ) | (otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_23_0= 'contained' ) ) ( ( (lv_type_24_0= ruleCONCEPT_TYPE ) ) | (otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_27_0= 'purpose' ) ) ( ( (lv_type_28_0= ruleCONCEPT_TYPE ) ) | (otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_31_0= 'causant' ) ) ( ( (lv_type_32_0= ruleCONCEPT_TYPE ) ) | (otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_35_0= 'caused' ) ) ( ( (lv_type_36_0= ruleCONCEPT_TYPE ) ) | (otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) ) ) ) ) ) ( (lv_template_39_0= '}' ) ) ) ) )
            // InternalKim.g:6433:2: ( ( (lv_name_0_0= RULE_CAMELCASE_ID ) ) | ( (lv_name_1_0= ruleNamespaceId ) ) | ( ( ( (lv_templateType_2_1= '${' | lv_templateType_2_2= '#{' ) ) ) ( ( ( (lv_name_3_0= 'context' ) ) ( ( (lv_type_4_0= ruleCONCEPT_TYPE ) ) | (otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_7_0= 'inherent' ) ) ( ( (lv_type_8_0= ruleCONCEPT_TYPE ) ) | (otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_11_0= 'compresent' ) ) ( ( (lv_type_12_0= ruleCONCEPT_TYPE ) ) | (otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_15_0= 'adjacent' ) ) ( ( (lv_type_16_0= ruleCONCEPT_TYPE ) ) | (otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_19_0= 'container' ) ) ( ( (lv_type_20_0= ruleCONCEPT_TYPE ) ) | (otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_23_0= 'contained' ) ) ( ( (lv_type_24_0= ruleCONCEPT_TYPE ) ) | (otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_27_0= 'purpose' ) ) ( ( (lv_type_28_0= ruleCONCEPT_TYPE ) ) | (otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_31_0= 'causant' ) ) ( ( (lv_type_32_0= ruleCONCEPT_TYPE ) ) | (otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_35_0= 'caused' ) ) ( ( (lv_type_36_0= ruleCONCEPT_TYPE ) ) | (otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) ) ) ) ) ) ( (lv_template_39_0= '}' ) ) ) )
            {
            // InternalKim.g:6433:2: ( ( (lv_name_0_0= RULE_CAMELCASE_ID ) ) | ( (lv_name_1_0= ruleNamespaceId ) ) | ( ( ( (lv_templateType_2_1= '${' | lv_templateType_2_2= '#{' ) ) ) ( ( ( (lv_name_3_0= 'context' ) ) ( ( (lv_type_4_0= ruleCONCEPT_TYPE ) ) | (otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_7_0= 'inherent' ) ) ( ( (lv_type_8_0= ruleCONCEPT_TYPE ) ) | (otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_11_0= 'compresent' ) ) ( ( (lv_type_12_0= ruleCONCEPT_TYPE ) ) | (otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_15_0= 'adjacent' ) ) ( ( (lv_type_16_0= ruleCONCEPT_TYPE ) ) | (otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_19_0= 'container' ) ) ( ( (lv_type_20_0= ruleCONCEPT_TYPE ) ) | (otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_23_0= 'contained' ) ) ( ( (lv_type_24_0= ruleCONCEPT_TYPE ) ) | (otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_27_0= 'purpose' ) ) ( ( (lv_type_28_0= ruleCONCEPT_TYPE ) ) | (otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_31_0= 'causant' ) ) ( ( (lv_type_32_0= ruleCONCEPT_TYPE ) ) | (otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_35_0= 'caused' ) ) ( ( (lv_type_36_0= ruleCONCEPT_TYPE ) ) | (otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) ) ) ) ) ) ( (lv_template_39_0= '}' ) ) ) )
            int alt151=3;
            switch ( input.LA(1) ) {
            case RULE_CAMELCASE_ID:
                {
                alt151=1;
                }
                break;
            case RULE_LOWERCASE_ID:
                {
                alt151=2;
                }
                break;
            case 108:
            case 109:
                {
                alt151=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 151, 0, input);

                throw nvae;
            }

            switch (alt151) {
                case 1 :
                    // InternalKim.g:6434:3: ( (lv_name_0_0= RULE_CAMELCASE_ID ) )
                    {
                    // InternalKim.g:6434:3: ( (lv_name_0_0= RULE_CAMELCASE_ID ) )
                    // InternalKim.g:6435:4: (lv_name_0_0= RULE_CAMELCASE_ID )
                    {
                    // InternalKim.g:6435:4: (lv_name_0_0= RULE_CAMELCASE_ID )
                    // InternalKim.g:6436:5: lv_name_0_0= RULE_CAMELCASE_ID
                    {
                    lv_name_0_0=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_0_0, grammarAccess.getConceptReferenceAccess().getNameCAMELCASE_IDTerminalRuleCall_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getConceptReferenceRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_0_0,
                      						"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:6453:3: ( (lv_name_1_0= ruleNamespaceId ) )
                    {
                    // InternalKim.g:6453:3: ( (lv_name_1_0= ruleNamespaceId ) )
                    // InternalKim.g:6454:4: (lv_name_1_0= ruleNamespaceId )
                    {
                    // InternalKim.g:6454:4: (lv_name_1_0= ruleNamespaceId )
                    // InternalKim.g:6455:5: lv_name_1_0= ruleNamespaceId
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getConceptReferenceAccess().getNameNamespaceIdParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_name_1_0=ruleNamespaceId();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                      					}
                      					set(
                      						current,
                      						"name",
                      						lv_name_1_0,
                      						"org.integratedmodelling.kim.Kim.NamespaceId");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:6473:3: ( ( ( (lv_templateType_2_1= '${' | lv_templateType_2_2= '#{' ) ) ) ( ( ( (lv_name_3_0= 'context' ) ) ( ( (lv_type_4_0= ruleCONCEPT_TYPE ) ) | (otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_7_0= 'inherent' ) ) ( ( (lv_type_8_0= ruleCONCEPT_TYPE ) ) | (otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_11_0= 'compresent' ) ) ( ( (lv_type_12_0= ruleCONCEPT_TYPE ) ) | (otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_15_0= 'adjacent' ) ) ( ( (lv_type_16_0= ruleCONCEPT_TYPE ) ) | (otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_19_0= 'container' ) ) ( ( (lv_type_20_0= ruleCONCEPT_TYPE ) ) | (otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_23_0= 'contained' ) ) ( ( (lv_type_24_0= ruleCONCEPT_TYPE ) ) | (otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_27_0= 'purpose' ) ) ( ( (lv_type_28_0= ruleCONCEPT_TYPE ) ) | (otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_31_0= 'causant' ) ) ( ( (lv_type_32_0= ruleCONCEPT_TYPE ) ) | (otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_35_0= 'caused' ) ) ( ( (lv_type_36_0= ruleCONCEPT_TYPE ) ) | (otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) ) ) ) ) ) ( (lv_template_39_0= '}' ) ) )
                    {
                    // InternalKim.g:6473:3: ( ( ( (lv_templateType_2_1= '${' | lv_templateType_2_2= '#{' ) ) ) ( ( ( (lv_name_3_0= 'context' ) ) ( ( (lv_type_4_0= ruleCONCEPT_TYPE ) ) | (otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_7_0= 'inherent' ) ) ( ( (lv_type_8_0= ruleCONCEPT_TYPE ) ) | (otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_11_0= 'compresent' ) ) ( ( (lv_type_12_0= ruleCONCEPT_TYPE ) ) | (otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_15_0= 'adjacent' ) ) ( ( (lv_type_16_0= ruleCONCEPT_TYPE ) ) | (otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_19_0= 'container' ) ) ( ( (lv_type_20_0= ruleCONCEPT_TYPE ) ) | (otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_23_0= 'contained' ) ) ( ( (lv_type_24_0= ruleCONCEPT_TYPE ) ) | (otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_27_0= 'purpose' ) ) ( ( (lv_type_28_0= ruleCONCEPT_TYPE ) ) | (otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_31_0= 'causant' ) ) ( ( (lv_type_32_0= ruleCONCEPT_TYPE ) ) | (otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_35_0= 'caused' ) ) ( ( (lv_type_36_0= ruleCONCEPT_TYPE ) ) | (otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) ) ) ) ) ) ( (lv_template_39_0= '}' ) ) )
                    // InternalKim.g:6474:4: ( ( (lv_templateType_2_1= '${' | lv_templateType_2_2= '#{' ) ) ) ( ( ( (lv_name_3_0= 'context' ) ) ( ( (lv_type_4_0= ruleCONCEPT_TYPE ) ) | (otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_7_0= 'inherent' ) ) ( ( (lv_type_8_0= ruleCONCEPT_TYPE ) ) | (otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_11_0= 'compresent' ) ) ( ( (lv_type_12_0= ruleCONCEPT_TYPE ) ) | (otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_15_0= 'adjacent' ) ) ( ( (lv_type_16_0= ruleCONCEPT_TYPE ) ) | (otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_19_0= 'container' ) ) ( ( (lv_type_20_0= ruleCONCEPT_TYPE ) ) | (otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_23_0= 'contained' ) ) ( ( (lv_type_24_0= ruleCONCEPT_TYPE ) ) | (otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_27_0= 'purpose' ) ) ( ( (lv_type_28_0= ruleCONCEPT_TYPE ) ) | (otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_31_0= 'causant' ) ) ( ( (lv_type_32_0= ruleCONCEPT_TYPE ) ) | (otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_35_0= 'caused' ) ) ( ( (lv_type_36_0= ruleCONCEPT_TYPE ) ) | (otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) ) ) ) ) ) ( (lv_template_39_0= '}' ) )
                    {
                    // InternalKim.g:6474:4: ( ( (lv_templateType_2_1= '${' | lv_templateType_2_2= '#{' ) ) )
                    // InternalKim.g:6475:5: ( (lv_templateType_2_1= '${' | lv_templateType_2_2= '#{' ) )
                    {
                    // InternalKim.g:6475:5: ( (lv_templateType_2_1= '${' | lv_templateType_2_2= '#{' ) )
                    // InternalKim.g:6476:6: (lv_templateType_2_1= '${' | lv_templateType_2_2= '#{' )
                    {
                    // InternalKim.g:6476:6: (lv_templateType_2_1= '${' | lv_templateType_2_2= '#{' )
                    int alt140=2;
                    int LA140_0 = input.LA(1);

                    if ( (LA140_0==108) ) {
                        alt140=1;
                    }
                    else if ( (LA140_0==109) ) {
                        alt140=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 140, 0, input);

                        throw nvae;
                    }
                    switch (alt140) {
                        case 1 :
                            // InternalKim.g:6477:7: lv_templateType_2_1= '${'
                            {
                            lv_templateType_2_1=(Token)match(input,108,FOLLOW_94); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_templateType_2_1, grammarAccess.getConceptReferenceAccess().getTemplateTypeDollarSignLeftCurlyBracketKeyword_2_0_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getConceptReferenceRule());
                              							}
                              							setWithLastConsumed(current, "templateType", lv_templateType_2_1, null);
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:6488:7: lv_templateType_2_2= '#{'
                            {
                            lv_templateType_2_2=(Token)match(input,109,FOLLOW_94); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_templateType_2_2, grammarAccess.getConceptReferenceAccess().getTemplateTypeNumberSignLeftCurlyBracketKeyword_2_0_0_1());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getConceptReferenceRule());
                              							}
                              							setWithLastConsumed(current, "templateType", lv_templateType_2_2, null);
                              						
                            }

                            }
                            break;

                    }


                    }


                    }

                    // InternalKim.g:6501:4: ( ( ( (lv_name_3_0= 'context' ) ) ( ( (lv_type_4_0= ruleCONCEPT_TYPE ) ) | (otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_7_0= 'inherent' ) ) ( ( (lv_type_8_0= ruleCONCEPT_TYPE ) ) | (otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_11_0= 'compresent' ) ) ( ( (lv_type_12_0= ruleCONCEPT_TYPE ) ) | (otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_15_0= 'adjacent' ) ) ( ( (lv_type_16_0= ruleCONCEPT_TYPE ) ) | (otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_19_0= 'container' ) ) ( ( (lv_type_20_0= ruleCONCEPT_TYPE ) ) | (otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_23_0= 'contained' ) ) ( ( (lv_type_24_0= ruleCONCEPT_TYPE ) ) | (otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_27_0= 'purpose' ) ) ( ( (lv_type_28_0= ruleCONCEPT_TYPE ) ) | (otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_31_0= 'causant' ) ) ( ( (lv_type_32_0= ruleCONCEPT_TYPE ) ) | (otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_35_0= 'caused' ) ) ( ( (lv_type_36_0= ruleCONCEPT_TYPE ) ) | (otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) ) ) ) ) )
                    int alt150=9;
                    switch ( input.LA(1) ) {
                    case 60:
                        {
                        alt150=1;
                        }
                        break;
                    case 110:
                        {
                        alt150=2;
                        }
                        break;
                    case 111:
                        {
                        alt150=3;
                        }
                        break;
                    case 103:
                        {
                        alt150=4;
                        }
                        break;
                    case 112:
                        {
                        alt150=5;
                        }
                        break;
                    case 104:
                        {
                        alt150=6;
                        }
                        break;
                    case 113:
                        {
                        alt150=7;
                        }
                        break;
                    case 114:
                        {
                        alt150=8;
                        }
                        break;
                    case 102:
                        {
                        alt150=9;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 150, 0, input);

                        throw nvae;
                    }

                    switch (alt150) {
                        case 1 :
                            // InternalKim.g:6502:5: ( ( (lv_name_3_0= 'context' ) ) ( ( (lv_type_4_0= ruleCONCEPT_TYPE ) ) | (otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) ) ) ) )
                            {
                            // InternalKim.g:6502:5: ( ( (lv_name_3_0= 'context' ) ) ( ( (lv_type_4_0= ruleCONCEPT_TYPE ) ) | (otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) ) ) ) )
                            // InternalKim.g:6503:6: ( (lv_name_3_0= 'context' ) ) ( ( (lv_type_4_0= ruleCONCEPT_TYPE ) ) | (otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) ) ) )
                            {
                            // InternalKim.g:6503:6: ( (lv_name_3_0= 'context' ) )
                            // InternalKim.g:6504:7: (lv_name_3_0= 'context' )
                            {
                            // InternalKim.g:6504:7: (lv_name_3_0= 'context' )
                            // InternalKim.g:6505:8: lv_name_3_0= 'context'
                            {
                            lv_name_3_0=(Token)match(input,60,FOLLOW_95); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_3_0, grammarAccess.getConceptReferenceAccess().getNameContextKeyword_2_1_0_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_3_0, "context");
                              							
                            }

                            }


                            }

                            // InternalKim.g:6517:6: ( ( (lv_type_4_0= ruleCONCEPT_TYPE ) ) | (otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) ) ) )
                            int alt141=2;
                            int LA141_0 = input.LA(1);

                            if ( (LA141_0==79||(LA141_0>=137 && LA141_0<=138)||LA141_0==159||(LA141_0>=171 && LA141_0<=174)||(LA141_0>=188 && LA141_0<=217)) ) {
                                alt141=1;
                            }
                            else if ( (LA141_0==92) ) {
                                alt141=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 141, 0, input);

                                throw nvae;
                            }
                            switch (alt141) {
                                case 1 :
                                    // InternalKim.g:6518:7: ( (lv_type_4_0= ruleCONCEPT_TYPE ) )
                                    {
                                    // InternalKim.g:6518:7: ( (lv_type_4_0= ruleCONCEPT_TYPE ) )
                                    // InternalKim.g:6519:8: (lv_type_4_0= ruleCONCEPT_TYPE )
                                    {
                                    // InternalKim.g:6519:8: (lv_type_4_0= ruleCONCEPT_TYPE )
                                    // InternalKim.g:6520:9: lv_type_4_0= ruleCONCEPT_TYPE
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getConceptReferenceAccess().getTypeCONCEPT_TYPEParserRuleCall_2_1_0_1_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_96);
                                    lv_type_4_0=ruleCONCEPT_TYPE();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      									}
                                      									set(
                                      										current,
                                      										"type",
                                      										lv_type_4_0,
                                      										"org.integratedmodelling.kim.Kim.CONCEPT_TYPE");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:6538:7: (otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) ) )
                                    {
                                    // InternalKim.g:6538:7: (otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) ) )
                                    // InternalKim.g:6539:8: otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) )
                                    {
                                    otherlv_5=(Token)match(input,92,FOLLOW_16); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_5, grammarAccess.getConceptReferenceAccess().getExtendsKeyword_2_1_0_1_1_0());
                                      							
                                    }
                                    // InternalKim.g:6543:8: ( (lv_extends_6_0= ruleConcept ) )
                                    // InternalKim.g:6544:9: (lv_extends_6_0= ruleConcept )
                                    {
                                    // InternalKim.g:6544:9: (lv_extends_6_0= ruleConcept )
                                    // InternalKim.g:6545:10: lv_extends_6_0= ruleConcept
                                    {
                                    if ( state.backtracking==0 ) {

                                      										newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_2_1_0_1_1_1_0());
                                      									
                                    }
                                    pushFollow(FOLLOW_96);
                                    lv_extends_6_0=ruleConcept();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      										}
                                      										set(
                                      											current,
                                      											"extends",
                                      											lv_extends_6_0,
                                      											"org.integratedmodelling.kim.Kim.Concept");
                                      										afterParserOrEnumRuleCall();
                                      									
                                    }

                                    }


                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:6566:5: ( ( (lv_name_7_0= 'inherent' ) ) ( ( (lv_type_8_0= ruleCONCEPT_TYPE ) ) | (otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) ) ) ) )
                            {
                            // InternalKim.g:6566:5: ( ( (lv_name_7_0= 'inherent' ) ) ( ( (lv_type_8_0= ruleCONCEPT_TYPE ) ) | (otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) ) ) ) )
                            // InternalKim.g:6567:6: ( (lv_name_7_0= 'inherent' ) ) ( ( (lv_type_8_0= ruleCONCEPT_TYPE ) ) | (otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) ) ) )
                            {
                            // InternalKim.g:6567:6: ( (lv_name_7_0= 'inherent' ) )
                            // InternalKim.g:6568:7: (lv_name_7_0= 'inherent' )
                            {
                            // InternalKim.g:6568:7: (lv_name_7_0= 'inherent' )
                            // InternalKim.g:6569:8: lv_name_7_0= 'inherent'
                            {
                            lv_name_7_0=(Token)match(input,110,FOLLOW_95); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_7_0, grammarAccess.getConceptReferenceAccess().getNameInherentKeyword_2_1_1_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_7_0, "inherent");
                              							
                            }

                            }


                            }

                            // InternalKim.g:6581:6: ( ( (lv_type_8_0= ruleCONCEPT_TYPE ) ) | (otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) ) ) )
                            int alt142=2;
                            int LA142_0 = input.LA(1);

                            if ( (LA142_0==79||(LA142_0>=137 && LA142_0<=138)||LA142_0==159||(LA142_0>=171 && LA142_0<=174)||(LA142_0>=188 && LA142_0<=217)) ) {
                                alt142=1;
                            }
                            else if ( (LA142_0==92) ) {
                                alt142=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 142, 0, input);

                                throw nvae;
                            }
                            switch (alt142) {
                                case 1 :
                                    // InternalKim.g:6582:7: ( (lv_type_8_0= ruleCONCEPT_TYPE ) )
                                    {
                                    // InternalKim.g:6582:7: ( (lv_type_8_0= ruleCONCEPT_TYPE ) )
                                    // InternalKim.g:6583:8: (lv_type_8_0= ruleCONCEPT_TYPE )
                                    {
                                    // InternalKim.g:6583:8: (lv_type_8_0= ruleCONCEPT_TYPE )
                                    // InternalKim.g:6584:9: lv_type_8_0= ruleCONCEPT_TYPE
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getConceptReferenceAccess().getTypeCONCEPT_TYPEParserRuleCall_2_1_1_1_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_96);
                                    lv_type_8_0=ruleCONCEPT_TYPE();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      									}
                                      									set(
                                      										current,
                                      										"type",
                                      										lv_type_8_0,
                                      										"org.integratedmodelling.kim.Kim.CONCEPT_TYPE");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:6602:7: (otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) ) )
                                    {
                                    // InternalKim.g:6602:7: (otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) ) )
                                    // InternalKim.g:6603:8: otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) )
                                    {
                                    otherlv_9=(Token)match(input,92,FOLLOW_16); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_9, grammarAccess.getConceptReferenceAccess().getExtendsKeyword_2_1_1_1_1_0());
                                      							
                                    }
                                    // InternalKim.g:6607:8: ( (lv_extends_10_0= ruleConcept ) )
                                    // InternalKim.g:6608:9: (lv_extends_10_0= ruleConcept )
                                    {
                                    // InternalKim.g:6608:9: (lv_extends_10_0= ruleConcept )
                                    // InternalKim.g:6609:10: lv_extends_10_0= ruleConcept
                                    {
                                    if ( state.backtracking==0 ) {

                                      										newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_2_1_1_1_1_1_0());
                                      									
                                    }
                                    pushFollow(FOLLOW_96);
                                    lv_extends_10_0=ruleConcept();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      										}
                                      										set(
                                      											current,
                                      											"extends",
                                      											lv_extends_10_0,
                                      											"org.integratedmodelling.kim.Kim.Concept");
                                      										afterParserOrEnumRuleCall();
                                      									
                                    }

                                    }


                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 3 :
                            // InternalKim.g:6630:5: ( ( (lv_name_11_0= 'compresent' ) ) ( ( (lv_type_12_0= ruleCONCEPT_TYPE ) ) | (otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) ) ) ) )
                            {
                            // InternalKim.g:6630:5: ( ( (lv_name_11_0= 'compresent' ) ) ( ( (lv_type_12_0= ruleCONCEPT_TYPE ) ) | (otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) ) ) ) )
                            // InternalKim.g:6631:6: ( (lv_name_11_0= 'compresent' ) ) ( ( (lv_type_12_0= ruleCONCEPT_TYPE ) ) | (otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) ) ) )
                            {
                            // InternalKim.g:6631:6: ( (lv_name_11_0= 'compresent' ) )
                            // InternalKim.g:6632:7: (lv_name_11_0= 'compresent' )
                            {
                            // InternalKim.g:6632:7: (lv_name_11_0= 'compresent' )
                            // InternalKim.g:6633:8: lv_name_11_0= 'compresent'
                            {
                            lv_name_11_0=(Token)match(input,111,FOLLOW_95); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_11_0, grammarAccess.getConceptReferenceAccess().getNameCompresentKeyword_2_1_2_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_11_0, "compresent");
                              							
                            }

                            }


                            }

                            // InternalKim.g:6645:6: ( ( (lv_type_12_0= ruleCONCEPT_TYPE ) ) | (otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) ) ) )
                            int alt143=2;
                            int LA143_0 = input.LA(1);

                            if ( (LA143_0==79||(LA143_0>=137 && LA143_0<=138)||LA143_0==159||(LA143_0>=171 && LA143_0<=174)||(LA143_0>=188 && LA143_0<=217)) ) {
                                alt143=1;
                            }
                            else if ( (LA143_0==92) ) {
                                alt143=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 143, 0, input);

                                throw nvae;
                            }
                            switch (alt143) {
                                case 1 :
                                    // InternalKim.g:6646:7: ( (lv_type_12_0= ruleCONCEPT_TYPE ) )
                                    {
                                    // InternalKim.g:6646:7: ( (lv_type_12_0= ruleCONCEPT_TYPE ) )
                                    // InternalKim.g:6647:8: (lv_type_12_0= ruleCONCEPT_TYPE )
                                    {
                                    // InternalKim.g:6647:8: (lv_type_12_0= ruleCONCEPT_TYPE )
                                    // InternalKim.g:6648:9: lv_type_12_0= ruleCONCEPT_TYPE
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getConceptReferenceAccess().getTypeCONCEPT_TYPEParserRuleCall_2_1_2_1_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_96);
                                    lv_type_12_0=ruleCONCEPT_TYPE();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      									}
                                      									set(
                                      										current,
                                      										"type",
                                      										lv_type_12_0,
                                      										"org.integratedmodelling.kim.Kim.CONCEPT_TYPE");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:6666:7: (otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) ) )
                                    {
                                    // InternalKim.g:6666:7: (otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) ) )
                                    // InternalKim.g:6667:8: otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) )
                                    {
                                    otherlv_13=(Token)match(input,92,FOLLOW_16); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_13, grammarAccess.getConceptReferenceAccess().getExtendsKeyword_2_1_2_1_1_0());
                                      							
                                    }
                                    // InternalKim.g:6671:8: ( (lv_extends_14_0= ruleConcept ) )
                                    // InternalKim.g:6672:9: (lv_extends_14_0= ruleConcept )
                                    {
                                    // InternalKim.g:6672:9: (lv_extends_14_0= ruleConcept )
                                    // InternalKim.g:6673:10: lv_extends_14_0= ruleConcept
                                    {
                                    if ( state.backtracking==0 ) {

                                      										newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_2_1_2_1_1_1_0());
                                      									
                                    }
                                    pushFollow(FOLLOW_96);
                                    lv_extends_14_0=ruleConcept();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      										}
                                      										set(
                                      											current,
                                      											"extends",
                                      											lv_extends_14_0,
                                      											"org.integratedmodelling.kim.Kim.Concept");
                                      										afterParserOrEnumRuleCall();
                                      									
                                    }

                                    }


                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 4 :
                            // InternalKim.g:6694:5: ( ( (lv_name_15_0= 'adjacent' ) ) ( ( (lv_type_16_0= ruleCONCEPT_TYPE ) ) | (otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) ) ) ) )
                            {
                            // InternalKim.g:6694:5: ( ( (lv_name_15_0= 'adjacent' ) ) ( ( (lv_type_16_0= ruleCONCEPT_TYPE ) ) | (otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) ) ) ) )
                            // InternalKim.g:6695:6: ( (lv_name_15_0= 'adjacent' ) ) ( ( (lv_type_16_0= ruleCONCEPT_TYPE ) ) | (otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) ) ) )
                            {
                            // InternalKim.g:6695:6: ( (lv_name_15_0= 'adjacent' ) )
                            // InternalKim.g:6696:7: (lv_name_15_0= 'adjacent' )
                            {
                            // InternalKim.g:6696:7: (lv_name_15_0= 'adjacent' )
                            // InternalKim.g:6697:8: lv_name_15_0= 'adjacent'
                            {
                            lv_name_15_0=(Token)match(input,103,FOLLOW_95); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_15_0, grammarAccess.getConceptReferenceAccess().getNameAdjacentKeyword_2_1_3_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_15_0, "adjacent");
                              							
                            }

                            }


                            }

                            // InternalKim.g:6709:6: ( ( (lv_type_16_0= ruleCONCEPT_TYPE ) ) | (otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) ) ) )
                            int alt144=2;
                            int LA144_0 = input.LA(1);

                            if ( (LA144_0==79||(LA144_0>=137 && LA144_0<=138)||LA144_0==159||(LA144_0>=171 && LA144_0<=174)||(LA144_0>=188 && LA144_0<=217)) ) {
                                alt144=1;
                            }
                            else if ( (LA144_0==92) ) {
                                alt144=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 144, 0, input);

                                throw nvae;
                            }
                            switch (alt144) {
                                case 1 :
                                    // InternalKim.g:6710:7: ( (lv_type_16_0= ruleCONCEPT_TYPE ) )
                                    {
                                    // InternalKim.g:6710:7: ( (lv_type_16_0= ruleCONCEPT_TYPE ) )
                                    // InternalKim.g:6711:8: (lv_type_16_0= ruleCONCEPT_TYPE )
                                    {
                                    // InternalKim.g:6711:8: (lv_type_16_0= ruleCONCEPT_TYPE )
                                    // InternalKim.g:6712:9: lv_type_16_0= ruleCONCEPT_TYPE
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getConceptReferenceAccess().getTypeCONCEPT_TYPEParserRuleCall_2_1_3_1_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_96);
                                    lv_type_16_0=ruleCONCEPT_TYPE();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      									}
                                      									set(
                                      										current,
                                      										"type",
                                      										lv_type_16_0,
                                      										"org.integratedmodelling.kim.Kim.CONCEPT_TYPE");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:6730:7: (otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) ) )
                                    {
                                    // InternalKim.g:6730:7: (otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) ) )
                                    // InternalKim.g:6731:8: otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) )
                                    {
                                    otherlv_17=(Token)match(input,92,FOLLOW_16); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_17, grammarAccess.getConceptReferenceAccess().getExtendsKeyword_2_1_3_1_1_0());
                                      							
                                    }
                                    // InternalKim.g:6735:8: ( (lv_extends_18_0= ruleConcept ) )
                                    // InternalKim.g:6736:9: (lv_extends_18_0= ruleConcept )
                                    {
                                    // InternalKim.g:6736:9: (lv_extends_18_0= ruleConcept )
                                    // InternalKim.g:6737:10: lv_extends_18_0= ruleConcept
                                    {
                                    if ( state.backtracking==0 ) {

                                      										newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_2_1_3_1_1_1_0());
                                      									
                                    }
                                    pushFollow(FOLLOW_96);
                                    lv_extends_18_0=ruleConcept();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      										}
                                      										set(
                                      											current,
                                      											"extends",
                                      											lv_extends_18_0,
                                      											"org.integratedmodelling.kim.Kim.Concept");
                                      										afterParserOrEnumRuleCall();
                                      									
                                    }

                                    }


                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 5 :
                            // InternalKim.g:6758:5: ( ( (lv_name_19_0= 'container' ) ) ( ( (lv_type_20_0= ruleCONCEPT_TYPE ) ) | (otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) ) ) ) )
                            {
                            // InternalKim.g:6758:5: ( ( (lv_name_19_0= 'container' ) ) ( ( (lv_type_20_0= ruleCONCEPT_TYPE ) ) | (otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) ) ) ) )
                            // InternalKim.g:6759:6: ( (lv_name_19_0= 'container' ) ) ( ( (lv_type_20_0= ruleCONCEPT_TYPE ) ) | (otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) ) ) )
                            {
                            // InternalKim.g:6759:6: ( (lv_name_19_0= 'container' ) )
                            // InternalKim.g:6760:7: (lv_name_19_0= 'container' )
                            {
                            // InternalKim.g:6760:7: (lv_name_19_0= 'container' )
                            // InternalKim.g:6761:8: lv_name_19_0= 'container'
                            {
                            lv_name_19_0=(Token)match(input,112,FOLLOW_95); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_19_0, grammarAccess.getConceptReferenceAccess().getNameContainerKeyword_2_1_4_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_19_0, "container");
                              							
                            }

                            }


                            }

                            // InternalKim.g:6773:6: ( ( (lv_type_20_0= ruleCONCEPT_TYPE ) ) | (otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) ) ) )
                            int alt145=2;
                            int LA145_0 = input.LA(1);

                            if ( (LA145_0==79||(LA145_0>=137 && LA145_0<=138)||LA145_0==159||(LA145_0>=171 && LA145_0<=174)||(LA145_0>=188 && LA145_0<=217)) ) {
                                alt145=1;
                            }
                            else if ( (LA145_0==92) ) {
                                alt145=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 145, 0, input);

                                throw nvae;
                            }
                            switch (alt145) {
                                case 1 :
                                    // InternalKim.g:6774:7: ( (lv_type_20_0= ruleCONCEPT_TYPE ) )
                                    {
                                    // InternalKim.g:6774:7: ( (lv_type_20_0= ruleCONCEPT_TYPE ) )
                                    // InternalKim.g:6775:8: (lv_type_20_0= ruleCONCEPT_TYPE )
                                    {
                                    // InternalKim.g:6775:8: (lv_type_20_0= ruleCONCEPT_TYPE )
                                    // InternalKim.g:6776:9: lv_type_20_0= ruleCONCEPT_TYPE
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getConceptReferenceAccess().getTypeCONCEPT_TYPEParserRuleCall_2_1_4_1_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_96);
                                    lv_type_20_0=ruleCONCEPT_TYPE();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      									}
                                      									set(
                                      										current,
                                      										"type",
                                      										lv_type_20_0,
                                      										"org.integratedmodelling.kim.Kim.CONCEPT_TYPE");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:6794:7: (otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) ) )
                                    {
                                    // InternalKim.g:6794:7: (otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) ) )
                                    // InternalKim.g:6795:8: otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) )
                                    {
                                    otherlv_21=(Token)match(input,92,FOLLOW_16); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_21, grammarAccess.getConceptReferenceAccess().getExtendsKeyword_2_1_4_1_1_0());
                                      							
                                    }
                                    // InternalKim.g:6799:8: ( (lv_extends_22_0= ruleConcept ) )
                                    // InternalKim.g:6800:9: (lv_extends_22_0= ruleConcept )
                                    {
                                    // InternalKim.g:6800:9: (lv_extends_22_0= ruleConcept )
                                    // InternalKim.g:6801:10: lv_extends_22_0= ruleConcept
                                    {
                                    if ( state.backtracking==0 ) {

                                      										newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_2_1_4_1_1_1_0());
                                      									
                                    }
                                    pushFollow(FOLLOW_96);
                                    lv_extends_22_0=ruleConcept();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      										}
                                      										set(
                                      											current,
                                      											"extends",
                                      											lv_extends_22_0,
                                      											"org.integratedmodelling.kim.Kim.Concept");
                                      										afterParserOrEnumRuleCall();
                                      									
                                    }

                                    }


                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 6 :
                            // InternalKim.g:6822:5: ( ( (lv_name_23_0= 'contained' ) ) ( ( (lv_type_24_0= ruleCONCEPT_TYPE ) ) | (otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) ) ) ) )
                            {
                            // InternalKim.g:6822:5: ( ( (lv_name_23_0= 'contained' ) ) ( ( (lv_type_24_0= ruleCONCEPT_TYPE ) ) | (otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) ) ) ) )
                            // InternalKim.g:6823:6: ( (lv_name_23_0= 'contained' ) ) ( ( (lv_type_24_0= ruleCONCEPT_TYPE ) ) | (otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) ) ) )
                            {
                            // InternalKim.g:6823:6: ( (lv_name_23_0= 'contained' ) )
                            // InternalKim.g:6824:7: (lv_name_23_0= 'contained' )
                            {
                            // InternalKim.g:6824:7: (lv_name_23_0= 'contained' )
                            // InternalKim.g:6825:8: lv_name_23_0= 'contained'
                            {
                            lv_name_23_0=(Token)match(input,104,FOLLOW_95); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_23_0, grammarAccess.getConceptReferenceAccess().getNameContainedKeyword_2_1_5_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_23_0, "contained");
                              							
                            }

                            }


                            }

                            // InternalKim.g:6837:6: ( ( (lv_type_24_0= ruleCONCEPT_TYPE ) ) | (otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) ) ) )
                            int alt146=2;
                            int LA146_0 = input.LA(1);

                            if ( (LA146_0==79||(LA146_0>=137 && LA146_0<=138)||LA146_0==159||(LA146_0>=171 && LA146_0<=174)||(LA146_0>=188 && LA146_0<=217)) ) {
                                alt146=1;
                            }
                            else if ( (LA146_0==92) ) {
                                alt146=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 146, 0, input);

                                throw nvae;
                            }
                            switch (alt146) {
                                case 1 :
                                    // InternalKim.g:6838:7: ( (lv_type_24_0= ruleCONCEPT_TYPE ) )
                                    {
                                    // InternalKim.g:6838:7: ( (lv_type_24_0= ruleCONCEPT_TYPE ) )
                                    // InternalKim.g:6839:8: (lv_type_24_0= ruleCONCEPT_TYPE )
                                    {
                                    // InternalKim.g:6839:8: (lv_type_24_0= ruleCONCEPT_TYPE )
                                    // InternalKim.g:6840:9: lv_type_24_0= ruleCONCEPT_TYPE
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getConceptReferenceAccess().getTypeCONCEPT_TYPEParserRuleCall_2_1_5_1_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_96);
                                    lv_type_24_0=ruleCONCEPT_TYPE();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      									}
                                      									set(
                                      										current,
                                      										"type",
                                      										lv_type_24_0,
                                      										"org.integratedmodelling.kim.Kim.CONCEPT_TYPE");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:6858:7: (otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) ) )
                                    {
                                    // InternalKim.g:6858:7: (otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) ) )
                                    // InternalKim.g:6859:8: otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) )
                                    {
                                    otherlv_25=(Token)match(input,92,FOLLOW_16); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_25, grammarAccess.getConceptReferenceAccess().getExtendsKeyword_2_1_5_1_1_0());
                                      							
                                    }
                                    // InternalKim.g:6863:8: ( (lv_extends_26_0= ruleConcept ) )
                                    // InternalKim.g:6864:9: (lv_extends_26_0= ruleConcept )
                                    {
                                    // InternalKim.g:6864:9: (lv_extends_26_0= ruleConcept )
                                    // InternalKim.g:6865:10: lv_extends_26_0= ruleConcept
                                    {
                                    if ( state.backtracking==0 ) {

                                      										newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_2_1_5_1_1_1_0());
                                      									
                                    }
                                    pushFollow(FOLLOW_96);
                                    lv_extends_26_0=ruleConcept();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      										}
                                      										set(
                                      											current,
                                      											"extends",
                                      											lv_extends_26_0,
                                      											"org.integratedmodelling.kim.Kim.Concept");
                                      										afterParserOrEnumRuleCall();
                                      									
                                    }

                                    }


                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 7 :
                            // InternalKim.g:6886:5: ( ( (lv_name_27_0= 'purpose' ) ) ( ( (lv_type_28_0= ruleCONCEPT_TYPE ) ) | (otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) ) ) ) )
                            {
                            // InternalKim.g:6886:5: ( ( (lv_name_27_0= 'purpose' ) ) ( ( (lv_type_28_0= ruleCONCEPT_TYPE ) ) | (otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) ) ) ) )
                            // InternalKim.g:6887:6: ( (lv_name_27_0= 'purpose' ) ) ( ( (lv_type_28_0= ruleCONCEPT_TYPE ) ) | (otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) ) ) )
                            {
                            // InternalKim.g:6887:6: ( (lv_name_27_0= 'purpose' ) )
                            // InternalKim.g:6888:7: (lv_name_27_0= 'purpose' )
                            {
                            // InternalKim.g:6888:7: (lv_name_27_0= 'purpose' )
                            // InternalKim.g:6889:8: lv_name_27_0= 'purpose'
                            {
                            lv_name_27_0=(Token)match(input,113,FOLLOW_95); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_27_0, grammarAccess.getConceptReferenceAccess().getNamePurposeKeyword_2_1_6_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_27_0, "purpose");
                              							
                            }

                            }


                            }

                            // InternalKim.g:6901:6: ( ( (lv_type_28_0= ruleCONCEPT_TYPE ) ) | (otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) ) ) )
                            int alt147=2;
                            int LA147_0 = input.LA(1);

                            if ( (LA147_0==79||(LA147_0>=137 && LA147_0<=138)||LA147_0==159||(LA147_0>=171 && LA147_0<=174)||(LA147_0>=188 && LA147_0<=217)) ) {
                                alt147=1;
                            }
                            else if ( (LA147_0==92) ) {
                                alt147=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 147, 0, input);

                                throw nvae;
                            }
                            switch (alt147) {
                                case 1 :
                                    // InternalKim.g:6902:7: ( (lv_type_28_0= ruleCONCEPT_TYPE ) )
                                    {
                                    // InternalKim.g:6902:7: ( (lv_type_28_0= ruleCONCEPT_TYPE ) )
                                    // InternalKim.g:6903:8: (lv_type_28_0= ruleCONCEPT_TYPE )
                                    {
                                    // InternalKim.g:6903:8: (lv_type_28_0= ruleCONCEPT_TYPE )
                                    // InternalKim.g:6904:9: lv_type_28_0= ruleCONCEPT_TYPE
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getConceptReferenceAccess().getTypeCONCEPT_TYPEParserRuleCall_2_1_6_1_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_96);
                                    lv_type_28_0=ruleCONCEPT_TYPE();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      									}
                                      									set(
                                      										current,
                                      										"type",
                                      										lv_type_28_0,
                                      										"org.integratedmodelling.kim.Kim.CONCEPT_TYPE");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:6922:7: (otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) ) )
                                    {
                                    // InternalKim.g:6922:7: (otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) ) )
                                    // InternalKim.g:6923:8: otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) )
                                    {
                                    otherlv_29=(Token)match(input,92,FOLLOW_16); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_29, grammarAccess.getConceptReferenceAccess().getExtendsKeyword_2_1_6_1_1_0());
                                      							
                                    }
                                    // InternalKim.g:6927:8: ( (lv_extends_30_0= ruleConcept ) )
                                    // InternalKim.g:6928:9: (lv_extends_30_0= ruleConcept )
                                    {
                                    // InternalKim.g:6928:9: (lv_extends_30_0= ruleConcept )
                                    // InternalKim.g:6929:10: lv_extends_30_0= ruleConcept
                                    {
                                    if ( state.backtracking==0 ) {

                                      										newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_2_1_6_1_1_1_0());
                                      									
                                    }
                                    pushFollow(FOLLOW_96);
                                    lv_extends_30_0=ruleConcept();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      										}
                                      										set(
                                      											current,
                                      											"extends",
                                      											lv_extends_30_0,
                                      											"org.integratedmodelling.kim.Kim.Concept");
                                      										afterParserOrEnumRuleCall();
                                      									
                                    }

                                    }


                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 8 :
                            // InternalKim.g:6950:5: ( ( (lv_name_31_0= 'causant' ) ) ( ( (lv_type_32_0= ruleCONCEPT_TYPE ) ) | (otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) ) ) ) )
                            {
                            // InternalKim.g:6950:5: ( ( (lv_name_31_0= 'causant' ) ) ( ( (lv_type_32_0= ruleCONCEPT_TYPE ) ) | (otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) ) ) ) )
                            // InternalKim.g:6951:6: ( (lv_name_31_0= 'causant' ) ) ( ( (lv_type_32_0= ruleCONCEPT_TYPE ) ) | (otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) ) ) )
                            {
                            // InternalKim.g:6951:6: ( (lv_name_31_0= 'causant' ) )
                            // InternalKim.g:6952:7: (lv_name_31_0= 'causant' )
                            {
                            // InternalKim.g:6952:7: (lv_name_31_0= 'causant' )
                            // InternalKim.g:6953:8: lv_name_31_0= 'causant'
                            {
                            lv_name_31_0=(Token)match(input,114,FOLLOW_95); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_31_0, grammarAccess.getConceptReferenceAccess().getNameCausantKeyword_2_1_7_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_31_0, "causant");
                              							
                            }

                            }


                            }

                            // InternalKim.g:6965:6: ( ( (lv_type_32_0= ruleCONCEPT_TYPE ) ) | (otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) ) ) )
                            int alt148=2;
                            int LA148_0 = input.LA(1);

                            if ( (LA148_0==79||(LA148_0>=137 && LA148_0<=138)||LA148_0==159||(LA148_0>=171 && LA148_0<=174)||(LA148_0>=188 && LA148_0<=217)) ) {
                                alt148=1;
                            }
                            else if ( (LA148_0==92) ) {
                                alt148=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 148, 0, input);

                                throw nvae;
                            }
                            switch (alt148) {
                                case 1 :
                                    // InternalKim.g:6966:7: ( (lv_type_32_0= ruleCONCEPT_TYPE ) )
                                    {
                                    // InternalKim.g:6966:7: ( (lv_type_32_0= ruleCONCEPT_TYPE ) )
                                    // InternalKim.g:6967:8: (lv_type_32_0= ruleCONCEPT_TYPE )
                                    {
                                    // InternalKim.g:6967:8: (lv_type_32_0= ruleCONCEPT_TYPE )
                                    // InternalKim.g:6968:9: lv_type_32_0= ruleCONCEPT_TYPE
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getConceptReferenceAccess().getTypeCONCEPT_TYPEParserRuleCall_2_1_7_1_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_96);
                                    lv_type_32_0=ruleCONCEPT_TYPE();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      									}
                                      									set(
                                      										current,
                                      										"type",
                                      										lv_type_32_0,
                                      										"org.integratedmodelling.kim.Kim.CONCEPT_TYPE");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:6986:7: (otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) ) )
                                    {
                                    // InternalKim.g:6986:7: (otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) ) )
                                    // InternalKim.g:6987:8: otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) )
                                    {
                                    otherlv_33=(Token)match(input,92,FOLLOW_16); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_33, grammarAccess.getConceptReferenceAccess().getExtendsKeyword_2_1_7_1_1_0());
                                      							
                                    }
                                    // InternalKim.g:6991:8: ( (lv_extends_34_0= ruleConcept ) )
                                    // InternalKim.g:6992:9: (lv_extends_34_0= ruleConcept )
                                    {
                                    // InternalKim.g:6992:9: (lv_extends_34_0= ruleConcept )
                                    // InternalKim.g:6993:10: lv_extends_34_0= ruleConcept
                                    {
                                    if ( state.backtracking==0 ) {

                                      										newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_2_1_7_1_1_1_0());
                                      									
                                    }
                                    pushFollow(FOLLOW_96);
                                    lv_extends_34_0=ruleConcept();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      										}
                                      										set(
                                      											current,
                                      											"extends",
                                      											lv_extends_34_0,
                                      											"org.integratedmodelling.kim.Kim.Concept");
                                      										afterParserOrEnumRuleCall();
                                      									
                                    }

                                    }


                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 9 :
                            // InternalKim.g:7014:5: ( ( (lv_name_35_0= 'caused' ) ) ( ( (lv_type_36_0= ruleCONCEPT_TYPE ) ) | (otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) ) ) ) )
                            {
                            // InternalKim.g:7014:5: ( ( (lv_name_35_0= 'caused' ) ) ( ( (lv_type_36_0= ruleCONCEPT_TYPE ) ) | (otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) ) ) ) )
                            // InternalKim.g:7015:6: ( (lv_name_35_0= 'caused' ) ) ( ( (lv_type_36_0= ruleCONCEPT_TYPE ) ) | (otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) ) ) )
                            {
                            // InternalKim.g:7015:6: ( (lv_name_35_0= 'caused' ) )
                            // InternalKim.g:7016:7: (lv_name_35_0= 'caused' )
                            {
                            // InternalKim.g:7016:7: (lv_name_35_0= 'caused' )
                            // InternalKim.g:7017:8: lv_name_35_0= 'caused'
                            {
                            lv_name_35_0=(Token)match(input,102,FOLLOW_95); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_35_0, grammarAccess.getConceptReferenceAccess().getNameCausedKeyword_2_1_8_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_35_0, "caused");
                              							
                            }

                            }


                            }

                            // InternalKim.g:7029:6: ( ( (lv_type_36_0= ruleCONCEPT_TYPE ) ) | (otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) ) ) )
                            int alt149=2;
                            int LA149_0 = input.LA(1);

                            if ( (LA149_0==79||(LA149_0>=137 && LA149_0<=138)||LA149_0==159||(LA149_0>=171 && LA149_0<=174)||(LA149_0>=188 && LA149_0<=217)) ) {
                                alt149=1;
                            }
                            else if ( (LA149_0==92) ) {
                                alt149=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 149, 0, input);

                                throw nvae;
                            }
                            switch (alt149) {
                                case 1 :
                                    // InternalKim.g:7030:7: ( (lv_type_36_0= ruleCONCEPT_TYPE ) )
                                    {
                                    // InternalKim.g:7030:7: ( (lv_type_36_0= ruleCONCEPT_TYPE ) )
                                    // InternalKim.g:7031:8: (lv_type_36_0= ruleCONCEPT_TYPE )
                                    {
                                    // InternalKim.g:7031:8: (lv_type_36_0= ruleCONCEPT_TYPE )
                                    // InternalKim.g:7032:9: lv_type_36_0= ruleCONCEPT_TYPE
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getConceptReferenceAccess().getTypeCONCEPT_TYPEParserRuleCall_2_1_8_1_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_96);
                                    lv_type_36_0=ruleCONCEPT_TYPE();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      									}
                                      									set(
                                      										current,
                                      										"type",
                                      										lv_type_36_0,
                                      										"org.integratedmodelling.kim.Kim.CONCEPT_TYPE");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:7050:7: (otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) ) )
                                    {
                                    // InternalKim.g:7050:7: (otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) ) )
                                    // InternalKim.g:7051:8: otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) )
                                    {
                                    otherlv_37=(Token)match(input,92,FOLLOW_16); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_37, grammarAccess.getConceptReferenceAccess().getExtendsKeyword_2_1_8_1_1_0());
                                      							
                                    }
                                    // InternalKim.g:7055:8: ( (lv_extends_38_0= ruleConcept ) )
                                    // InternalKim.g:7056:9: (lv_extends_38_0= ruleConcept )
                                    {
                                    // InternalKim.g:7056:9: (lv_extends_38_0= ruleConcept )
                                    // InternalKim.g:7057:10: lv_extends_38_0= ruleConcept
                                    {
                                    if ( state.backtracking==0 ) {

                                      										newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_2_1_8_1_1_1_0());
                                      									
                                    }
                                    pushFollow(FOLLOW_96);
                                    lv_extends_38_0=ruleConcept();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      										}
                                      										set(
                                      											current,
                                      											"extends",
                                      											lv_extends_38_0,
                                      											"org.integratedmodelling.kim.Kim.Concept");
                                      										afterParserOrEnumRuleCall();
                                      									
                                    }

                                    }


                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:7078:4: ( (lv_template_39_0= '}' ) )
                    // InternalKim.g:7079:5: (lv_template_39_0= '}' )
                    {
                    // InternalKim.g:7079:5: (lv_template_39_0= '}' )
                    // InternalKim.g:7080:6: lv_template_39_0= '}'
                    {
                    lv_template_39_0=(Token)match(input,115,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_template_39_0, grammarAccess.getConceptReferenceAccess().getTemplateRightCurlyBracketKeyword_2_2_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptReferenceRule());
                      						}
                      						setWithLastConsumed(current, "template", true, "}");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConceptReference"


    // $ANTLR start "entryRuleOPERATOR_TARGET"
    // InternalKim.g:7097:1: entryRuleOPERATOR_TARGET returns [String current=null] : iv_ruleOPERATOR_TARGET= ruleOPERATOR_TARGET EOF ;
    public final String entryRuleOPERATOR_TARGET() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOPERATOR_TARGET = null;


        try {
            // InternalKim.g:7097:55: (iv_ruleOPERATOR_TARGET= ruleOPERATOR_TARGET EOF )
            // InternalKim.g:7098:2: iv_ruleOPERATOR_TARGET= ruleOPERATOR_TARGET EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOPERATOR_TARGETRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOPERATOR_TARGET=ruleOPERATOR_TARGET();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOPERATOR_TARGET.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOPERATOR_TARGET"


    // $ANTLR start "ruleOPERATOR_TARGET"
    // InternalKim.g:7104:1: ruleOPERATOR_TARGET returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'context' | kw= 'inherent' | kw= 'compresent' | kw= 'adjacent' | kw= 'container' | kw= 'contained' | kw= 'purpose' | kw= 'causant' | kw= 'caused' ) ;
    public final AntlrDatatypeRuleToken ruleOPERATOR_TARGET() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKim.g:7110:2: ( (kw= 'context' | kw= 'inherent' | kw= 'compresent' | kw= 'adjacent' | kw= 'container' | kw= 'contained' | kw= 'purpose' | kw= 'causant' | kw= 'caused' ) )
            // InternalKim.g:7111:2: (kw= 'context' | kw= 'inherent' | kw= 'compresent' | kw= 'adjacent' | kw= 'container' | kw= 'contained' | kw= 'purpose' | kw= 'causant' | kw= 'caused' )
            {
            // InternalKim.g:7111:2: (kw= 'context' | kw= 'inherent' | kw= 'compresent' | kw= 'adjacent' | kw= 'container' | kw= 'contained' | kw= 'purpose' | kw= 'causant' | kw= 'caused' )
            int alt152=9;
            switch ( input.LA(1) ) {
            case 60:
                {
                alt152=1;
                }
                break;
            case 110:
                {
                alt152=2;
                }
                break;
            case 111:
                {
                alt152=3;
                }
                break;
            case 103:
                {
                alt152=4;
                }
                break;
            case 112:
                {
                alt152=5;
                }
                break;
            case 104:
                {
                alt152=6;
                }
                break;
            case 113:
                {
                alt152=7;
                }
                break;
            case 114:
                {
                alt152=8;
                }
                break;
            case 102:
                {
                alt152=9;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 152, 0, input);

                throw nvae;
            }

            switch (alt152) {
                case 1 :
                    // InternalKim.g:7112:3: kw= 'context'
                    {
                    kw=(Token)match(input,60,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getContextKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:7118:3: kw= 'inherent'
                    {
                    kw=(Token)match(input,110,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getInherentKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:7124:3: kw= 'compresent'
                    {
                    kw=(Token)match(input,111,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getCompresentKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKim.g:7130:3: kw= 'adjacent'
                    {
                    kw=(Token)match(input,103,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getAdjacentKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalKim.g:7136:3: kw= 'container'
                    {
                    kw=(Token)match(input,112,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getContainerKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalKim.g:7142:3: kw= 'contained'
                    {
                    kw=(Token)match(input,104,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getContainedKeyword_5());
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalKim.g:7148:3: kw= 'purpose'
                    {
                    kw=(Token)match(input,113,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getPurposeKeyword_6());
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalKim.g:7154:3: kw= 'causant'
                    {
                    kw=(Token)match(input,114,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getCausantKeyword_7());
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalKim.g:7160:3: kw= 'caused'
                    {
                    kw=(Token)match(input,102,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getCausedKeyword_8());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOPERATOR_TARGET"


    // $ANTLR start "entryRuleConcept"
    // InternalKim.g:7169:1: entryRuleConcept returns [EObject current=null] : iv_ruleConcept= ruleConcept EOF ;
    public final EObject entryRuleConcept() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConcept = null;


        try {
            // InternalKim.g:7169:48: (iv_ruleConcept= ruleConcept EOF )
            // InternalKim.g:7170:2: iv_ruleConcept= ruleConcept EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConceptRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConcept=ruleConcept();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConcept; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConcept"


    // $ANTLR start "ruleConcept"
    // InternalKim.g:7176:1: ruleConcept returns [EObject current=null] : ( ( ( ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) ) )? ( (lv_name_1_0= ruleConceptReference ) ) (otherlv_2= 'identified' otherlv_3= 'as' ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) ) otherlv_6= 'by' ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) ) )? ) | ( ( (lv_presence_8_0= 'presence' ) ) otherlv_9= 'of' ( (lv_concept_10_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_count_11_0= 'count' ) ) otherlv_12= 'of' ( (lv_concept_13_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_distance_14_0= 'distance' ) ) (otherlv_15= 'to' | otherlv_16= 'from' ) ( (lv_concept_17_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_probability_18_0= 'probability' ) ) otherlv_19= 'of' ( (lv_concept_20_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_assessment_21_0= 'assessment' ) ) otherlv_22= 'of' ( (lv_concept_23_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_uncertainty_24_0= 'uncertainty' ) ) otherlv_25= 'of' ( (lv_concept_26_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_type_27_0= 'type' ) ) otherlv_28= 'of' ( (lv_concept_29_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_observability_30_0= 'observability' ) ) otherlv_31= 'of' ( (lv_concept_32_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_proportion_33_0= 'proportion' ) ) otherlv_34= 'of' ( (lv_concept_35_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_36= 'in' ) ( (lv_other_37_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_ratio_38_0= 'ratio' ) ) otherlv_39= 'of' ( (lv_concept_40_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_41= 'to' ) ( (lv_other_42_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_value_43_0= 'value' ) ) otherlv_44= 'of' ( (lv_concept_45_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'over' )=>otherlv_46= 'over' ) ( (lv_other_47_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_occurrence_48_0= 'occurrence' ) ) otherlv_49= 'of' ( (lv_concept_50_0= ruleSimpleConceptDeclaration ) ) ) | (otherlv_51= '(' ( (lv_declaration_52_0= ruleExpression ) ) otherlv_53= ')' ) ) ;
    public final EObject ruleConcept() throws RecognitionException {
        EObject current = null;

        Token lv_negated_0_1=null;
        Token lv_negated_0_2=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token lv_stringIdentifier_4_1=null;
        Token lv_stringIdentifier_4_2=null;
        Token lv_intIdentifier_5_0=null;
        Token otherlv_6=null;
        Token lv_authority_7_1=null;
        Token lv_authority_7_2=null;
        Token lv_presence_8_0=null;
        Token otherlv_9=null;
        Token lv_count_11_0=null;
        Token otherlv_12=null;
        Token lv_distance_14_0=null;
        Token otherlv_15=null;
        Token otherlv_16=null;
        Token lv_probability_18_0=null;
        Token otherlv_19=null;
        Token lv_assessment_21_0=null;
        Token otherlv_22=null;
        Token lv_uncertainty_24_0=null;
        Token otherlv_25=null;
        Token lv_type_27_0=null;
        Token otherlv_28=null;
        Token lv_observability_30_0=null;
        Token otherlv_31=null;
        Token lv_proportion_33_0=null;
        Token otherlv_34=null;
        Token otherlv_36=null;
        Token lv_ratio_38_0=null;
        Token otherlv_39=null;
        Token otherlv_41=null;
        Token lv_value_43_0=null;
        Token otherlv_44=null;
        Token otherlv_46=null;
        Token lv_occurrence_48_0=null;
        Token otherlv_49=null;
        Token otherlv_51=null;
        Token otherlv_53=null;
        EObject lv_name_1_0 = null;

        EObject lv_concept_10_0 = null;

        EObject lv_concept_13_0 = null;

        EObject lv_concept_17_0 = null;

        EObject lv_concept_20_0 = null;

        EObject lv_concept_23_0 = null;

        EObject lv_concept_26_0 = null;

        EObject lv_concept_29_0 = null;

        EObject lv_concept_32_0 = null;

        EObject lv_concept_35_0 = null;

        EObject lv_other_37_0 = null;

        EObject lv_concept_40_0 = null;

        EObject lv_other_42_0 = null;

        EObject lv_concept_45_0 = null;

        EObject lv_other_47_0 = null;

        EObject lv_concept_50_0 = null;

        EObject lv_declaration_52_0 = null;



        	enterRule();

        try {
            // InternalKim.g:7182:2: ( ( ( ( ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) ) )? ( (lv_name_1_0= ruleConceptReference ) ) (otherlv_2= 'identified' otherlv_3= 'as' ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) ) otherlv_6= 'by' ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) ) )? ) | ( ( (lv_presence_8_0= 'presence' ) ) otherlv_9= 'of' ( (lv_concept_10_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_count_11_0= 'count' ) ) otherlv_12= 'of' ( (lv_concept_13_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_distance_14_0= 'distance' ) ) (otherlv_15= 'to' | otherlv_16= 'from' ) ( (lv_concept_17_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_probability_18_0= 'probability' ) ) otherlv_19= 'of' ( (lv_concept_20_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_assessment_21_0= 'assessment' ) ) otherlv_22= 'of' ( (lv_concept_23_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_uncertainty_24_0= 'uncertainty' ) ) otherlv_25= 'of' ( (lv_concept_26_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_type_27_0= 'type' ) ) otherlv_28= 'of' ( (lv_concept_29_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_observability_30_0= 'observability' ) ) otherlv_31= 'of' ( (lv_concept_32_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_proportion_33_0= 'proportion' ) ) otherlv_34= 'of' ( (lv_concept_35_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_36= 'in' ) ( (lv_other_37_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_ratio_38_0= 'ratio' ) ) otherlv_39= 'of' ( (lv_concept_40_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_41= 'to' ) ( (lv_other_42_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_value_43_0= 'value' ) ) otherlv_44= 'of' ( (lv_concept_45_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'over' )=>otherlv_46= 'over' ) ( (lv_other_47_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_occurrence_48_0= 'occurrence' ) ) otherlv_49= 'of' ( (lv_concept_50_0= ruleSimpleConceptDeclaration ) ) ) | (otherlv_51= '(' ( (lv_declaration_52_0= ruleExpression ) ) otherlv_53= ')' ) ) )
            // InternalKim.g:7183:2: ( ( ( ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) ) )? ( (lv_name_1_0= ruleConceptReference ) ) (otherlv_2= 'identified' otherlv_3= 'as' ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) ) otherlv_6= 'by' ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) ) )? ) | ( ( (lv_presence_8_0= 'presence' ) ) otherlv_9= 'of' ( (lv_concept_10_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_count_11_0= 'count' ) ) otherlv_12= 'of' ( (lv_concept_13_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_distance_14_0= 'distance' ) ) (otherlv_15= 'to' | otherlv_16= 'from' ) ( (lv_concept_17_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_probability_18_0= 'probability' ) ) otherlv_19= 'of' ( (lv_concept_20_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_assessment_21_0= 'assessment' ) ) otherlv_22= 'of' ( (lv_concept_23_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_uncertainty_24_0= 'uncertainty' ) ) otherlv_25= 'of' ( (lv_concept_26_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_type_27_0= 'type' ) ) otherlv_28= 'of' ( (lv_concept_29_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_observability_30_0= 'observability' ) ) otherlv_31= 'of' ( (lv_concept_32_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_proportion_33_0= 'proportion' ) ) otherlv_34= 'of' ( (lv_concept_35_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_36= 'in' ) ( (lv_other_37_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_ratio_38_0= 'ratio' ) ) otherlv_39= 'of' ( (lv_concept_40_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_41= 'to' ) ( (lv_other_42_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_value_43_0= 'value' ) ) otherlv_44= 'of' ( (lv_concept_45_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'over' )=>otherlv_46= 'over' ) ( (lv_other_47_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_occurrence_48_0= 'occurrence' ) ) otherlv_49= 'of' ( (lv_concept_50_0= ruleSimpleConceptDeclaration ) ) ) | (otherlv_51= '(' ( (lv_declaration_52_0= ruleExpression ) ) otherlv_53= ')' ) )
            {
            // InternalKim.g:7183:2: ( ( ( ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) ) )? ( (lv_name_1_0= ruleConceptReference ) ) (otherlv_2= 'identified' otherlv_3= 'as' ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) ) otherlv_6= 'by' ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) ) )? ) | ( ( (lv_presence_8_0= 'presence' ) ) otherlv_9= 'of' ( (lv_concept_10_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_count_11_0= 'count' ) ) otherlv_12= 'of' ( (lv_concept_13_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_distance_14_0= 'distance' ) ) (otherlv_15= 'to' | otherlv_16= 'from' ) ( (lv_concept_17_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_probability_18_0= 'probability' ) ) otherlv_19= 'of' ( (lv_concept_20_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_assessment_21_0= 'assessment' ) ) otherlv_22= 'of' ( (lv_concept_23_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_uncertainty_24_0= 'uncertainty' ) ) otherlv_25= 'of' ( (lv_concept_26_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_type_27_0= 'type' ) ) otherlv_28= 'of' ( (lv_concept_29_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_observability_30_0= 'observability' ) ) otherlv_31= 'of' ( (lv_concept_32_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_proportion_33_0= 'proportion' ) ) otherlv_34= 'of' ( (lv_concept_35_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_36= 'in' ) ( (lv_other_37_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_ratio_38_0= 'ratio' ) ) otherlv_39= 'of' ( (lv_concept_40_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_41= 'to' ) ( (lv_other_42_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_value_43_0= 'value' ) ) otherlv_44= 'of' ( (lv_concept_45_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'over' )=>otherlv_46= 'over' ) ( (lv_other_47_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_occurrence_48_0= 'occurrence' ) ) otherlv_49= 'of' ( (lv_concept_50_0= ruleSimpleConceptDeclaration ) ) ) | (otherlv_51= '(' ( (lv_declaration_52_0= ruleExpression ) ) otherlv_53= ')' ) )
            int alt162=14;
            switch ( input.LA(1) ) {
            case RULE_LOWERCASE_ID:
            case RULE_CAMELCASE_ID:
            case 108:
            case 109:
            case 116:
            case 117:
                {
                alt162=1;
                }
                break;
            case 119:
                {
                alt162=2;
                }
                break;
            case 120:
                {
                alt162=3;
                }
                break;
            case 121:
                {
                alt162=4;
                }
                break;
            case 122:
                {
                alt162=5;
                }
                break;
            case 123:
                {
                alt162=6;
                }
                break;
            case 124:
                {
                alt162=7;
                }
                break;
            case 125:
                {
                alt162=8;
                }
                break;
            case 126:
                {
                alt162=9;
                }
                break;
            case 127:
                {
                alt162=10;
                }
                break;
            case 128:
                {
                alt162=11;
                }
                break;
            case 129:
                {
                alt162=12;
                }
                break;
            case 130:
                {
                alt162=13;
                }
                break;
            case 34:
                {
                alt162=14;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 162, 0, input);

                throw nvae;
            }

            switch (alt162) {
                case 1 :
                    // InternalKim.g:7184:3: ( ( ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) ) )? ( (lv_name_1_0= ruleConceptReference ) ) (otherlv_2= 'identified' otherlv_3= 'as' ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) ) otherlv_6= 'by' ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) ) )? )
                    {
                    // InternalKim.g:7184:3: ( ( ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) ) )? ( (lv_name_1_0= ruleConceptReference ) ) (otherlv_2= 'identified' otherlv_3= 'as' ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) ) otherlv_6= 'by' ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) ) )? )
                    // InternalKim.g:7185:4: ( ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) ) )? ( (lv_name_1_0= ruleConceptReference ) ) (otherlv_2= 'identified' otherlv_3= 'as' ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) ) otherlv_6= 'by' ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) ) )?
                    {
                    // InternalKim.g:7185:4: ( ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) ) )?
                    int alt154=2;
                    int LA154_0 = input.LA(1);

                    if ( ((LA154_0>=116 && LA154_0<=117)) ) {
                        alt154=1;
                    }
                    switch (alt154) {
                        case 1 :
                            // InternalKim.g:7186:5: ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) )
                            {
                            // InternalKim.g:7186:5: ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) )
                            // InternalKim.g:7187:6: (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' )
                            {
                            // InternalKim.g:7187:6: (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' )
                            int alt153=2;
                            int LA153_0 = input.LA(1);

                            if ( (LA153_0==116) ) {
                                alt153=1;
                            }
                            else if ( (LA153_0==117) ) {
                                alt153=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 153, 0, input);

                                throw nvae;
                            }
                            switch (alt153) {
                                case 1 :
                                    // InternalKim.g:7188:7: lv_negated_0_1= 'not'
                                    {
                                    lv_negated_0_1=(Token)match(input,116,FOLLOW_97); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(lv_negated_0_1, grammarAccess.getConceptAccess().getNegatedNotKeyword_0_0_0_0());
                                      						
                                    }
                                    if ( state.backtracking==0 ) {

                                      							if (current==null) {
                                      								current = createModelElement(grammarAccess.getConceptRule());
                                      							}
                                      							setWithLastConsumed(current, "negated", true, null);
                                      						
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:7199:7: lv_negated_0_2= 'no'
                                    {
                                    lv_negated_0_2=(Token)match(input,117,FOLLOW_97); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(lv_negated_0_2, grammarAccess.getConceptAccess().getNegatedNoKeyword_0_0_0_1());
                                      						
                                    }
                                    if ( state.backtracking==0 ) {

                                      							if (current==null) {
                                      								current = createModelElement(grammarAccess.getConceptRule());
                                      							}
                                      							setWithLastConsumed(current, "negated", true, null);
                                      						
                                    }

                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:7212:4: ( (lv_name_1_0= ruleConceptReference ) )
                    // InternalKim.g:7213:5: (lv_name_1_0= ruleConceptReference )
                    {
                    // InternalKim.g:7213:5: (lv_name_1_0= ruleConceptReference )
                    // InternalKim.g:7214:6: lv_name_1_0= ruleConceptReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getNameConceptReferenceParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_98);
                    lv_name_1_0=ruleConceptReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"name",
                      							lv_name_1_0,
                      							"org.integratedmodelling.kim.Kim.ConceptReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:7231:4: (otherlv_2= 'identified' otherlv_3= 'as' ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) ) otherlv_6= 'by' ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) ) )?
                    int alt158=2;
                    int LA158_0 = input.LA(1);

                    if ( (LA158_0==118) ) {
                        alt158=1;
                    }
                    switch (alt158) {
                        case 1 :
                            // InternalKim.g:7232:5: otherlv_2= 'identified' otherlv_3= 'as' ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) ) otherlv_6= 'by' ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) )
                            {
                            otherlv_2=(Token)match(input,118,FOLLOW_9); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_2, grammarAccess.getConceptAccess().getIdentifiedKeyword_0_2_0());
                              				
                            }
                            otherlv_3=(Token)match(input,25,FOLLOW_99); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_3, grammarAccess.getConceptAccess().getAsKeyword_0_2_1());
                              				
                            }
                            // InternalKim.g:7240:5: ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) )
                            int alt156=2;
                            int LA156_0 = input.LA(1);

                            if ( (LA156_0==RULE_STRING||LA156_0==RULE_ID) ) {
                                alt156=1;
                            }
                            else if ( (LA156_0==RULE_INT) ) {
                                alt156=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 156, 0, input);

                                throw nvae;
                            }
                            switch (alt156) {
                                case 1 :
                                    // InternalKim.g:7241:6: ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING ) ) )
                                    {
                                    // InternalKim.g:7241:6: ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING ) ) )
                                    // InternalKim.g:7242:7: ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING ) )
                                    {
                                    // InternalKim.g:7242:7: ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING ) )
                                    // InternalKim.g:7243:8: (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING )
                                    {
                                    // InternalKim.g:7243:8: (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING )
                                    int alt155=2;
                                    int LA155_0 = input.LA(1);

                                    if ( (LA155_0==RULE_ID) ) {
                                        alt155=1;
                                    }
                                    else if ( (LA155_0==RULE_STRING) ) {
                                        alt155=2;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return current;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 155, 0, input);

                                        throw nvae;
                                    }
                                    switch (alt155) {
                                        case 1 :
                                            // InternalKim.g:7244:9: lv_stringIdentifier_4_1= RULE_ID
                                            {
                                            lv_stringIdentifier_4_1=(Token)match(input,RULE_ID,FOLLOW_92); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              									newLeafNode(lv_stringIdentifier_4_1, grammarAccess.getConceptAccess().getStringIdentifierIDTerminalRuleCall_0_2_2_0_0_0());
                                              								
                                            }
                                            if ( state.backtracking==0 ) {

                                              									if (current==null) {
                                              										current = createModelElement(grammarAccess.getConceptRule());
                                              									}
                                              									setWithLastConsumed(
                                              										current,
                                              										"stringIdentifier",
                                              										lv_stringIdentifier_4_1,
                                              										"org.eclipse.xtext.common.Terminals.ID");
                                              								
                                            }

                                            }
                                            break;
                                        case 2 :
                                            // InternalKim.g:7259:9: lv_stringIdentifier_4_2= RULE_STRING
                                            {
                                            lv_stringIdentifier_4_2=(Token)match(input,RULE_STRING,FOLLOW_92); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              									newLeafNode(lv_stringIdentifier_4_2, grammarAccess.getConceptAccess().getStringIdentifierSTRINGTerminalRuleCall_0_2_2_0_0_1());
                                              								
                                            }
                                            if ( state.backtracking==0 ) {

                                              									if (current==null) {
                                              										current = createModelElement(grammarAccess.getConceptRule());
                                              									}
                                              									setWithLastConsumed(
                                              										current,
                                              										"stringIdentifier",
                                              										lv_stringIdentifier_4_2,
                                              										"org.eclipse.xtext.common.Terminals.STRING");
                                              								
                                            }

                                            }
                                            break;

                                    }


                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:7277:6: ( (lv_intIdentifier_5_0= RULE_INT ) )
                                    {
                                    // InternalKim.g:7277:6: ( (lv_intIdentifier_5_0= RULE_INT ) )
                                    // InternalKim.g:7278:7: (lv_intIdentifier_5_0= RULE_INT )
                                    {
                                    // InternalKim.g:7278:7: (lv_intIdentifier_5_0= RULE_INT )
                                    // InternalKim.g:7279:8: lv_intIdentifier_5_0= RULE_INT
                                    {
                                    lv_intIdentifier_5_0=(Token)match(input,RULE_INT,FOLLOW_92); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_intIdentifier_5_0, grammarAccess.getConceptAccess().getIntIdentifierINTTerminalRuleCall_0_2_2_1_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getConceptRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"intIdentifier",
                                      									lv_intIdentifier_5_0,
                                      									"org.eclipse.xtext.common.Terminals.INT");
                                      							
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }

                            otherlv_6=(Token)match(input,94,FOLLOW_100); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_6, grammarAccess.getConceptAccess().getByKeyword_0_2_3());
                              				
                            }
                            // InternalKim.g:7300:5: ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) )
                            // InternalKim.g:7301:6: ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) )
                            {
                            // InternalKim.g:7301:6: ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) )
                            // InternalKim.g:7302:7: (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH )
                            {
                            // InternalKim.g:7302:7: (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH )
                            int alt157=2;
                            int LA157_0 = input.LA(1);

                            if ( (LA157_0==RULE_UPPERCASE_ID) ) {
                                alt157=1;
                            }
                            else if ( (LA157_0==RULE_UPPERCASE_PATH) ) {
                                alt157=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 157, 0, input);

                                throw nvae;
                            }
                            switch (alt157) {
                                case 1 :
                                    // InternalKim.g:7303:8: lv_authority_7_1= RULE_UPPERCASE_ID
                                    {
                                    lv_authority_7_1=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_authority_7_1, grammarAccess.getConceptAccess().getAuthorityUPPERCASE_IDTerminalRuleCall_0_2_4_0_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getConceptRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"authority",
                                      									lv_authority_7_1,
                                      									"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                                      							
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:7318:8: lv_authority_7_2= RULE_UPPERCASE_PATH
                                    {
                                    lv_authority_7_2=(Token)match(input,RULE_UPPERCASE_PATH,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_authority_7_2, grammarAccess.getConceptAccess().getAuthorityUPPERCASE_PATHTerminalRuleCall_0_2_4_0_1());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getConceptRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"authority",
                                      									lv_authority_7_2,
                                      									"org.integratedmodelling.kim.Kim.UPPERCASE_PATH");
                                      							
                                    }

                                    }
                                    break;

                            }


                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:7338:3: ( ( (lv_presence_8_0= 'presence' ) ) otherlv_9= 'of' ( (lv_concept_10_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:7338:3: ( ( (lv_presence_8_0= 'presence' ) ) otherlv_9= 'of' ( (lv_concept_10_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:7339:4: ( (lv_presence_8_0= 'presence' ) ) otherlv_9= 'of' ( (lv_concept_10_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:7339:4: ( (lv_presence_8_0= 'presence' ) )
                    // InternalKim.g:7340:5: (lv_presence_8_0= 'presence' )
                    {
                    // InternalKim.g:7340:5: (lv_presence_8_0= 'presence' )
                    // InternalKim.g:7341:6: lv_presence_8_0= 'presence'
                    {
                    lv_presence_8_0=(Token)match(input,119,FOLLOW_101); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_presence_8_0, grammarAccess.getConceptAccess().getPresencePresenceKeyword_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "presence", true, "presence");
                      					
                    }

                    }


                    }

                    otherlv_9=(Token)match(input,100,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getConceptAccess().getOfKeyword_1_1());
                      			
                    }
                    // InternalKim.g:7357:4: ( (lv_concept_10_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:7358:5: (lv_concept_10_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:7358:5: (lv_concept_10_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:7359:6: lv_concept_10_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_10_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_10_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:7378:3: ( ( (lv_count_11_0= 'count' ) ) otherlv_12= 'of' ( (lv_concept_13_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:7378:3: ( ( (lv_count_11_0= 'count' ) ) otherlv_12= 'of' ( (lv_concept_13_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:7379:4: ( (lv_count_11_0= 'count' ) ) otherlv_12= 'of' ( (lv_concept_13_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:7379:4: ( (lv_count_11_0= 'count' ) )
                    // InternalKim.g:7380:5: (lv_count_11_0= 'count' )
                    {
                    // InternalKim.g:7380:5: (lv_count_11_0= 'count' )
                    // InternalKim.g:7381:6: lv_count_11_0= 'count'
                    {
                    lv_count_11_0=(Token)match(input,120,FOLLOW_101); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_count_11_0, grammarAccess.getConceptAccess().getCountCountKeyword_2_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "count", true, "count");
                      					
                    }

                    }


                    }

                    otherlv_12=(Token)match(input,100,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getConceptAccess().getOfKeyword_2_1());
                      			
                    }
                    // InternalKim.g:7397:4: ( (lv_concept_13_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:7398:5: (lv_concept_13_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:7398:5: (lv_concept_13_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:7399:6: lv_concept_13_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_2_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_13_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_13_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:7418:3: ( ( (lv_distance_14_0= 'distance' ) ) (otherlv_15= 'to' | otherlv_16= 'from' ) ( (lv_concept_17_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:7418:3: ( ( (lv_distance_14_0= 'distance' ) ) (otherlv_15= 'to' | otherlv_16= 'from' ) ( (lv_concept_17_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:7419:4: ( (lv_distance_14_0= 'distance' ) ) (otherlv_15= 'to' | otherlv_16= 'from' ) ( (lv_concept_17_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:7419:4: ( (lv_distance_14_0= 'distance' ) )
                    // InternalKim.g:7420:5: (lv_distance_14_0= 'distance' )
                    {
                    // InternalKim.g:7420:5: (lv_distance_14_0= 'distance' )
                    // InternalKim.g:7421:6: lv_distance_14_0= 'distance'
                    {
                    lv_distance_14_0=(Token)match(input,121,FOLLOW_102); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_distance_14_0, grammarAccess.getConceptAccess().getDistanceDistanceKeyword_3_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "distance", true, "distance");
                      					
                    }

                    }


                    }

                    // InternalKim.g:7433:4: (otherlv_15= 'to' | otherlv_16= 'from' )
                    int alt159=2;
                    int LA159_0 = input.LA(1);

                    if ( (LA159_0==32) ) {
                        alt159=1;
                    }
                    else if ( (LA159_0==84) ) {
                        alt159=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 159, 0, input);

                        throw nvae;
                    }
                    switch (alt159) {
                        case 1 :
                            // InternalKim.g:7434:5: otherlv_15= 'to'
                            {
                            otherlv_15=(Token)match(input,32,FOLLOW_16); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_15, grammarAccess.getConceptAccess().getToKeyword_3_1_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:7439:5: otherlv_16= 'from'
                            {
                            otherlv_16=(Token)match(input,84,FOLLOW_16); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_16, grammarAccess.getConceptAccess().getFromKeyword_3_1_1());
                              				
                            }

                            }
                            break;

                    }

                    // InternalKim.g:7444:4: ( (lv_concept_17_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:7445:5: (lv_concept_17_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:7445:5: (lv_concept_17_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:7446:6: lv_concept_17_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_3_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_17_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_17_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:7465:3: ( ( (lv_probability_18_0= 'probability' ) ) otherlv_19= 'of' ( (lv_concept_20_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:7465:3: ( ( (lv_probability_18_0= 'probability' ) ) otherlv_19= 'of' ( (lv_concept_20_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:7466:4: ( (lv_probability_18_0= 'probability' ) ) otherlv_19= 'of' ( (lv_concept_20_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:7466:4: ( (lv_probability_18_0= 'probability' ) )
                    // InternalKim.g:7467:5: (lv_probability_18_0= 'probability' )
                    {
                    // InternalKim.g:7467:5: (lv_probability_18_0= 'probability' )
                    // InternalKim.g:7468:6: lv_probability_18_0= 'probability'
                    {
                    lv_probability_18_0=(Token)match(input,122,FOLLOW_101); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_probability_18_0, grammarAccess.getConceptAccess().getProbabilityProbabilityKeyword_4_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "probability", true, "probability");
                      					
                    }

                    }


                    }

                    otherlv_19=(Token)match(input,100,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_19, grammarAccess.getConceptAccess().getOfKeyword_4_1());
                      			
                    }
                    // InternalKim.g:7484:4: ( (lv_concept_20_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:7485:5: (lv_concept_20_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:7485:5: (lv_concept_20_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:7486:6: lv_concept_20_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_4_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_20_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_20_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:7505:3: ( ( (lv_assessment_21_0= 'assessment' ) ) otherlv_22= 'of' ( (lv_concept_23_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:7505:3: ( ( (lv_assessment_21_0= 'assessment' ) ) otherlv_22= 'of' ( (lv_concept_23_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:7506:4: ( (lv_assessment_21_0= 'assessment' ) ) otherlv_22= 'of' ( (lv_concept_23_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:7506:4: ( (lv_assessment_21_0= 'assessment' ) )
                    // InternalKim.g:7507:5: (lv_assessment_21_0= 'assessment' )
                    {
                    // InternalKim.g:7507:5: (lv_assessment_21_0= 'assessment' )
                    // InternalKim.g:7508:6: lv_assessment_21_0= 'assessment'
                    {
                    lv_assessment_21_0=(Token)match(input,123,FOLLOW_101); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_assessment_21_0, grammarAccess.getConceptAccess().getAssessmentAssessmentKeyword_5_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "assessment", true, "assessment");
                      					
                    }

                    }


                    }

                    otherlv_22=(Token)match(input,100,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_22, grammarAccess.getConceptAccess().getOfKeyword_5_1());
                      			
                    }
                    // InternalKim.g:7524:4: ( (lv_concept_23_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:7525:5: (lv_concept_23_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:7525:5: (lv_concept_23_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:7526:6: lv_concept_23_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_5_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_23_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_23_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalKim.g:7545:3: ( ( (lv_uncertainty_24_0= 'uncertainty' ) ) otherlv_25= 'of' ( (lv_concept_26_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:7545:3: ( ( (lv_uncertainty_24_0= 'uncertainty' ) ) otherlv_25= 'of' ( (lv_concept_26_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:7546:4: ( (lv_uncertainty_24_0= 'uncertainty' ) ) otherlv_25= 'of' ( (lv_concept_26_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:7546:4: ( (lv_uncertainty_24_0= 'uncertainty' ) )
                    // InternalKim.g:7547:5: (lv_uncertainty_24_0= 'uncertainty' )
                    {
                    // InternalKim.g:7547:5: (lv_uncertainty_24_0= 'uncertainty' )
                    // InternalKim.g:7548:6: lv_uncertainty_24_0= 'uncertainty'
                    {
                    lv_uncertainty_24_0=(Token)match(input,124,FOLLOW_101); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_uncertainty_24_0, grammarAccess.getConceptAccess().getUncertaintyUncertaintyKeyword_6_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "uncertainty", true, "uncertainty");
                      					
                    }

                    }


                    }

                    otherlv_25=(Token)match(input,100,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_25, grammarAccess.getConceptAccess().getOfKeyword_6_1());
                      			
                    }
                    // InternalKim.g:7564:4: ( (lv_concept_26_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:7565:5: (lv_concept_26_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:7565:5: (lv_concept_26_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:7566:6: lv_concept_26_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_6_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_26_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_26_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalKim.g:7585:3: ( ( (lv_type_27_0= 'type' ) ) otherlv_28= 'of' ( (lv_concept_29_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:7585:3: ( ( (lv_type_27_0= 'type' ) ) otherlv_28= 'of' ( (lv_concept_29_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:7586:4: ( (lv_type_27_0= 'type' ) ) otherlv_28= 'of' ( (lv_concept_29_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:7586:4: ( (lv_type_27_0= 'type' ) )
                    // InternalKim.g:7587:5: (lv_type_27_0= 'type' )
                    {
                    // InternalKim.g:7587:5: (lv_type_27_0= 'type' )
                    // InternalKim.g:7588:6: lv_type_27_0= 'type'
                    {
                    lv_type_27_0=(Token)match(input,125,FOLLOW_101); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_type_27_0, grammarAccess.getConceptAccess().getTypeTypeKeyword_7_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "type", true, "type");
                      					
                    }

                    }


                    }

                    otherlv_28=(Token)match(input,100,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_28, grammarAccess.getConceptAccess().getOfKeyword_7_1());
                      			
                    }
                    // InternalKim.g:7604:4: ( (lv_concept_29_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:7605:5: (lv_concept_29_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:7605:5: (lv_concept_29_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:7606:6: lv_concept_29_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_7_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_29_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_29_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 9 :
                    // InternalKim.g:7625:3: ( ( (lv_observability_30_0= 'observability' ) ) otherlv_31= 'of' ( (lv_concept_32_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:7625:3: ( ( (lv_observability_30_0= 'observability' ) ) otherlv_31= 'of' ( (lv_concept_32_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:7626:4: ( (lv_observability_30_0= 'observability' ) ) otherlv_31= 'of' ( (lv_concept_32_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:7626:4: ( (lv_observability_30_0= 'observability' ) )
                    // InternalKim.g:7627:5: (lv_observability_30_0= 'observability' )
                    {
                    // InternalKim.g:7627:5: (lv_observability_30_0= 'observability' )
                    // InternalKim.g:7628:6: lv_observability_30_0= 'observability'
                    {
                    lv_observability_30_0=(Token)match(input,126,FOLLOW_101); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_observability_30_0, grammarAccess.getConceptAccess().getObservabilityObservabilityKeyword_8_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "observability", true, "observability");
                      					
                    }

                    }


                    }

                    otherlv_31=(Token)match(input,100,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_31, grammarAccess.getConceptAccess().getOfKeyword_8_1());
                      			
                    }
                    // InternalKim.g:7644:4: ( (lv_concept_32_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:7645:5: (lv_concept_32_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:7645:5: (lv_concept_32_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:7646:6: lv_concept_32_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_8_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_32_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_32_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 10 :
                    // InternalKim.g:7665:3: ( ( (lv_proportion_33_0= 'proportion' ) ) otherlv_34= 'of' ( (lv_concept_35_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_36= 'in' ) ( (lv_other_37_0= ruleSimpleConceptDeclaration ) ) )? )
                    {
                    // InternalKim.g:7665:3: ( ( (lv_proportion_33_0= 'proportion' ) ) otherlv_34= 'of' ( (lv_concept_35_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_36= 'in' ) ( (lv_other_37_0= ruleSimpleConceptDeclaration ) ) )? )
                    // InternalKim.g:7666:4: ( (lv_proportion_33_0= 'proportion' ) ) otherlv_34= 'of' ( (lv_concept_35_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_36= 'in' ) ( (lv_other_37_0= ruleSimpleConceptDeclaration ) ) )?
                    {
                    // InternalKim.g:7666:4: ( (lv_proportion_33_0= 'proportion' ) )
                    // InternalKim.g:7667:5: (lv_proportion_33_0= 'proportion' )
                    {
                    // InternalKim.g:7667:5: (lv_proportion_33_0= 'proportion' )
                    // InternalKim.g:7668:6: lv_proportion_33_0= 'proportion'
                    {
                    lv_proportion_33_0=(Token)match(input,127,FOLLOW_101); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_proportion_33_0, grammarAccess.getConceptAccess().getProportionProportionKeyword_9_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "proportion", true, "proportion");
                      					
                    }

                    }


                    }

                    otherlv_34=(Token)match(input,100,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_34, grammarAccess.getConceptAccess().getOfKeyword_9_1());
                      			
                    }
                    // InternalKim.g:7684:4: ( (lv_concept_35_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:7685:5: (lv_concept_35_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:7685:5: (lv_concept_35_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:7686:6: lv_concept_35_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_9_2_0());
                      					
                    }
                    pushFollow(FOLLOW_52);
                    lv_concept_35_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_35_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:7703:4: ( ( ( 'in' )=>otherlv_36= 'in' ) ( (lv_other_37_0= ruleSimpleConceptDeclaration ) ) )?
                    int alt160=2;
                    int LA160_0 = input.LA(1);

                    if ( (LA160_0==46) ) {
                        int LA160_1 = input.LA(2);

                        if ( (synpred291_InternalKim()) ) {
                            alt160=1;
                        }
                    }
                    switch (alt160) {
                        case 1 :
                            // InternalKim.g:7704:5: ( ( 'in' )=>otherlv_36= 'in' ) ( (lv_other_37_0= ruleSimpleConceptDeclaration ) )
                            {
                            // InternalKim.g:7704:5: ( ( 'in' )=>otherlv_36= 'in' )
                            // InternalKim.g:7705:6: ( 'in' )=>otherlv_36= 'in'
                            {
                            otherlv_36=(Token)match(input,46,FOLLOW_16); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_36, grammarAccess.getConceptAccess().getInKeyword_9_3_0());
                              					
                            }

                            }

                            // InternalKim.g:7711:5: ( (lv_other_37_0= ruleSimpleConceptDeclaration ) )
                            // InternalKim.g:7712:6: (lv_other_37_0= ruleSimpleConceptDeclaration )
                            {
                            // InternalKim.g:7712:6: (lv_other_37_0= ruleSimpleConceptDeclaration )
                            // InternalKim.g:7713:7: lv_other_37_0= ruleSimpleConceptDeclaration
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getConceptAccess().getOtherSimpleConceptDeclarationParserRuleCall_9_3_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_other_37_0=ruleSimpleConceptDeclaration();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getConceptRule());
                              							}
                              							set(
                              								current,
                              								"other",
                              								lv_other_37_0,
                              								"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 11 :
                    // InternalKim.g:7733:3: ( ( (lv_ratio_38_0= 'ratio' ) ) otherlv_39= 'of' ( (lv_concept_40_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_41= 'to' ) ( (lv_other_42_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:7733:3: ( ( (lv_ratio_38_0= 'ratio' ) ) otherlv_39= 'of' ( (lv_concept_40_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_41= 'to' ) ( (lv_other_42_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:7734:4: ( (lv_ratio_38_0= 'ratio' ) ) otherlv_39= 'of' ( (lv_concept_40_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_41= 'to' ) ( (lv_other_42_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:7734:4: ( (lv_ratio_38_0= 'ratio' ) )
                    // InternalKim.g:7735:5: (lv_ratio_38_0= 'ratio' )
                    {
                    // InternalKim.g:7735:5: (lv_ratio_38_0= 'ratio' )
                    // InternalKim.g:7736:6: lv_ratio_38_0= 'ratio'
                    {
                    lv_ratio_38_0=(Token)match(input,128,FOLLOW_101); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_ratio_38_0, grammarAccess.getConceptAccess().getRatioRatioKeyword_10_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "ratio", true, "ratio");
                      					
                    }

                    }


                    }

                    otherlv_39=(Token)match(input,100,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_39, grammarAccess.getConceptAccess().getOfKeyword_10_1());
                      			
                    }
                    // InternalKim.g:7752:4: ( (lv_concept_40_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:7753:5: (lv_concept_40_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:7753:5: (lv_concept_40_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:7754:6: lv_concept_40_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_10_2_0());
                      					
                    }
                    pushFollow(FOLLOW_18);
                    lv_concept_40_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_40_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:7771:4: ( ( 'to' )=>otherlv_41= 'to' )
                    // InternalKim.g:7772:5: ( 'to' )=>otherlv_41= 'to'
                    {
                    otherlv_41=(Token)match(input,32,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_41, grammarAccess.getConceptAccess().getToKeyword_10_3());
                      				
                    }

                    }

                    // InternalKim.g:7778:4: ( (lv_other_42_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:7779:5: (lv_other_42_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:7779:5: (lv_other_42_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:7780:6: lv_other_42_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getOtherSimpleConceptDeclarationParserRuleCall_10_4_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_other_42_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"other",
                      							lv_other_42_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 12 :
                    // InternalKim.g:7799:3: ( ( (lv_value_43_0= 'value' ) ) otherlv_44= 'of' ( (lv_concept_45_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'over' )=>otherlv_46= 'over' ) ( (lv_other_47_0= ruleSimpleConceptDeclaration ) ) )? )
                    {
                    // InternalKim.g:7799:3: ( ( (lv_value_43_0= 'value' ) ) otherlv_44= 'of' ( (lv_concept_45_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'over' )=>otherlv_46= 'over' ) ( (lv_other_47_0= ruleSimpleConceptDeclaration ) ) )? )
                    // InternalKim.g:7800:4: ( (lv_value_43_0= 'value' ) ) otherlv_44= 'of' ( (lv_concept_45_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'over' )=>otherlv_46= 'over' ) ( (lv_other_47_0= ruleSimpleConceptDeclaration ) ) )?
                    {
                    // InternalKim.g:7800:4: ( (lv_value_43_0= 'value' ) )
                    // InternalKim.g:7801:5: (lv_value_43_0= 'value' )
                    {
                    // InternalKim.g:7801:5: (lv_value_43_0= 'value' )
                    // InternalKim.g:7802:6: lv_value_43_0= 'value'
                    {
                    lv_value_43_0=(Token)match(input,129,FOLLOW_101); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_value_43_0, grammarAccess.getConceptAccess().getValueValueKeyword_11_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "value", true, "value");
                      					
                    }

                    }


                    }

                    otherlv_44=(Token)match(input,100,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_44, grammarAccess.getConceptAccess().getOfKeyword_11_1());
                      			
                    }
                    // InternalKim.g:7818:4: ( (lv_concept_45_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:7819:5: (lv_concept_45_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:7819:5: (lv_concept_45_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:7820:6: lv_concept_45_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_11_2_0());
                      					
                    }
                    pushFollow(FOLLOW_103);
                    lv_concept_45_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_45_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:7837:4: ( ( ( 'over' )=>otherlv_46= 'over' ) ( (lv_other_47_0= ruleSimpleConceptDeclaration ) ) )?
                    int alt161=2;
                    int LA161_0 = input.LA(1);

                    if ( (LA161_0==53) ) {
                        int LA161_1 = input.LA(2);

                        if ( (synpred296_InternalKim()) ) {
                            alt161=1;
                        }
                    }
                    switch (alt161) {
                        case 1 :
                            // InternalKim.g:7838:5: ( ( 'over' )=>otherlv_46= 'over' ) ( (lv_other_47_0= ruleSimpleConceptDeclaration ) )
                            {
                            // InternalKim.g:7838:5: ( ( 'over' )=>otherlv_46= 'over' )
                            // InternalKim.g:7839:6: ( 'over' )=>otherlv_46= 'over'
                            {
                            otherlv_46=(Token)match(input,53,FOLLOW_16); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_46, grammarAccess.getConceptAccess().getOverKeyword_11_3_0());
                              					
                            }

                            }

                            // InternalKim.g:7845:5: ( (lv_other_47_0= ruleSimpleConceptDeclaration ) )
                            // InternalKim.g:7846:6: (lv_other_47_0= ruleSimpleConceptDeclaration )
                            {
                            // InternalKim.g:7846:6: (lv_other_47_0= ruleSimpleConceptDeclaration )
                            // InternalKim.g:7847:7: lv_other_47_0= ruleSimpleConceptDeclaration
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getConceptAccess().getOtherSimpleConceptDeclarationParserRuleCall_11_3_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_other_47_0=ruleSimpleConceptDeclaration();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getConceptRule());
                              							}
                              							set(
                              								current,
                              								"other",
                              								lv_other_47_0,
                              								"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 13 :
                    // InternalKim.g:7867:3: ( ( (lv_occurrence_48_0= 'occurrence' ) ) otherlv_49= 'of' ( (lv_concept_50_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:7867:3: ( ( (lv_occurrence_48_0= 'occurrence' ) ) otherlv_49= 'of' ( (lv_concept_50_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:7868:4: ( (lv_occurrence_48_0= 'occurrence' ) ) otherlv_49= 'of' ( (lv_concept_50_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:7868:4: ( (lv_occurrence_48_0= 'occurrence' ) )
                    // InternalKim.g:7869:5: (lv_occurrence_48_0= 'occurrence' )
                    {
                    // InternalKim.g:7869:5: (lv_occurrence_48_0= 'occurrence' )
                    // InternalKim.g:7870:6: lv_occurrence_48_0= 'occurrence'
                    {
                    lv_occurrence_48_0=(Token)match(input,130,FOLLOW_101); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_occurrence_48_0, grammarAccess.getConceptAccess().getOccurrenceOccurrenceKeyword_12_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "occurrence", true, "occurrence");
                      					
                    }

                    }


                    }

                    otherlv_49=(Token)match(input,100,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_49, grammarAccess.getConceptAccess().getOfKeyword_12_1());
                      			
                    }
                    // InternalKim.g:7886:4: ( (lv_concept_50_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:7887:5: (lv_concept_50_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:7887:5: (lv_concept_50_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:7888:6: lv_concept_50_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_12_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_50_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_50_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 14 :
                    // InternalKim.g:7907:3: (otherlv_51= '(' ( (lv_declaration_52_0= ruleExpression ) ) otherlv_53= ')' )
                    {
                    // InternalKim.g:7907:3: (otherlv_51= '(' ( (lv_declaration_52_0= ruleExpression ) ) otherlv_53= ')' )
                    // InternalKim.g:7908:4: otherlv_51= '(' ( (lv_declaration_52_0= ruleExpression ) ) otherlv_53= ')'
                    {
                    otherlv_51=(Token)match(input,34,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_51, grammarAccess.getConceptAccess().getLeftParenthesisKeyword_13_0());
                      			
                    }
                    // InternalKim.g:7912:4: ( (lv_declaration_52_0= ruleExpression ) )
                    // InternalKim.g:7913:5: (lv_declaration_52_0= ruleExpression )
                    {
                    // InternalKim.g:7913:5: (lv_declaration_52_0= ruleExpression )
                    // InternalKim.g:7914:6: lv_declaration_52_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getDeclarationExpressionParserRuleCall_13_1_0());
                      					
                    }
                    pushFollow(FOLLOW_83);
                    lv_declaration_52_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"declaration",
                      							lv_declaration_52_0,
                      							"org.integratedmodelling.kim.Kim.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_53=(Token)match(input,37,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_53, grammarAccess.getConceptAccess().getRightParenthesisKeyword_13_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConcept"


    // $ANTLR start "entryRuleExpression"
    // InternalKim.g:7940:1: entryRuleExpression returns [EObject current=null] : iv_ruleExpression= ruleExpression EOF ;
    public final EObject entryRuleExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpression = null;


        try {
            // InternalKim.g:7940:51: (iv_ruleExpression= ruleExpression EOF )
            // InternalKim.g:7941:2: iv_ruleExpression= ruleExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExpression=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExpression"


    // $ANTLR start "ruleExpression"
    // InternalKim.g:7947:1: ruleExpression returns [EObject current=null] : this_Term_0= ruleTerm ;
    public final EObject ruleExpression() throws RecognitionException {
        EObject current = null;

        EObject this_Term_0 = null;



        	enterRule();

        try {
            // InternalKim.g:7953:2: (this_Term_0= ruleTerm )
            // InternalKim.g:7954:2: this_Term_0= ruleTerm
            {
            if ( state.backtracking==0 ) {

              		/* */
              	
            }
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getExpressionAccess().getTermParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_Term_0=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_Term_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExpression"


    // $ANTLR start "entryRuleTerm"
    // InternalKim.g:7968:1: entryRuleTerm returns [EObject current=null] : iv_ruleTerm= ruleTerm EOF ;
    public final EObject entryRuleTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTerm = null;


        try {
            // InternalKim.g:7968:45: (iv_ruleTerm= ruleTerm EOF )
            // InternalKim.g:7969:2: iv_ruleTerm= ruleTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTermRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTerm=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTerm; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTerm"


    // $ANTLR start "ruleTerm"
    // InternalKim.g:7975:1: ruleTerm returns [EObject current=null] : (this_Factor_0= ruleFactor ( ( (lv_operators_1_0= 'or' ) ) ( (lv_operands_2_0= ruleFactor ) ) )* ) ;
    public final EObject ruleTerm() throws RecognitionException {
        EObject current = null;

        Token lv_operators_1_0=null;
        EObject this_Factor_0 = null;

        EObject lv_operands_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:7981:2: ( (this_Factor_0= ruleFactor ( ( (lv_operators_1_0= 'or' ) ) ( (lv_operands_2_0= ruleFactor ) ) )* ) )
            // InternalKim.g:7982:2: (this_Factor_0= ruleFactor ( ( (lv_operators_1_0= 'or' ) ) ( (lv_operands_2_0= ruleFactor ) ) )* )
            {
            // InternalKim.g:7982:2: (this_Factor_0= ruleFactor ( ( (lv_operators_1_0= 'or' ) ) ( (lv_operands_2_0= ruleFactor ) ) )* )
            // InternalKim.g:7983:3: this_Factor_0= ruleFactor ( ( (lv_operators_1_0= 'or' ) ) ( (lv_operands_2_0= ruleFactor ) ) )*
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getTermAccess().getFactorParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_104);
            this_Factor_0=ruleFactor();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Factor_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKim.g:7994:3: ( ( (lv_operators_1_0= 'or' ) ) ( (lv_operands_2_0= ruleFactor ) ) )*
            loop163:
            do {
                int alt163=2;
                int LA163_0 = input.LA(1);

                if ( (LA163_0==131) ) {
                    int LA163_2 = input.LA(2);

                    if ( (synpred299_InternalKim()) ) {
                        alt163=1;
                    }


                }


                switch (alt163) {
            	case 1 :
            	    // InternalKim.g:7995:4: ( (lv_operators_1_0= 'or' ) ) ( (lv_operands_2_0= ruleFactor ) )
            	    {
            	    // InternalKim.g:7995:4: ( (lv_operators_1_0= 'or' ) )
            	    // InternalKim.g:7996:5: (lv_operators_1_0= 'or' )
            	    {
            	    // InternalKim.g:7996:5: (lv_operators_1_0= 'or' )
            	    // InternalKim.g:7997:6: lv_operators_1_0= 'or'
            	    {
            	    lv_operators_1_0=(Token)match(input,131,FOLLOW_16); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(lv_operators_1_0, grammarAccess.getTermAccess().getOperatorsOrKeyword_1_0_0());
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getTermRule());
            	      						}
            	      						addWithLastConsumed(current, "operators", lv_operators_1_0, "or");
            	      					
            	    }

            	    }


            	    }

            	    // InternalKim.g:8009:4: ( (lv_operands_2_0= ruleFactor ) )
            	    // InternalKim.g:8010:5: (lv_operands_2_0= ruleFactor )
            	    {
            	    // InternalKim.g:8010:5: (lv_operands_2_0= ruleFactor )
            	    // InternalKim.g:8011:6: lv_operands_2_0= ruleFactor
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getTermAccess().getOperandsFactorParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_104);
            	    lv_operands_2_0=ruleFactor();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getTermRule());
            	      						}
            	      						add(
            	      							current,
            	      							"operands",
            	      							lv_operands_2_0,
            	      							"org.integratedmodelling.kim.Kim.Factor");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop163;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTerm"


    // $ANTLR start "entryRuleFactor"
    // InternalKim.g:8033:1: entryRuleFactor returns [EObject current=null] : iv_ruleFactor= ruleFactor EOF ;
    public final EObject entryRuleFactor() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFactor = null;


        try {
            // InternalKim.g:8033:47: (iv_ruleFactor= ruleFactor EOF )
            // InternalKim.g:8034:2: iv_ruleFactor= ruleFactor EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFactorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFactor=ruleFactor();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFactor; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFactor"


    // $ANTLR start "ruleFactor"
    // InternalKim.g:8040:1: ruleFactor returns [EObject current=null] : (this_ConceptDeclaration_0= ruleConceptDeclaration ( ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) ) ( (lv_operands_2_0= ruleTerm ) ) )* ) ;
    public final EObject ruleFactor() throws RecognitionException {
        EObject current = null;

        Token lv_operators_1_1=null;
        Token lv_operators_1_2=null;
        EObject this_ConceptDeclaration_0 = null;

        EObject lv_operands_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:8046:2: ( (this_ConceptDeclaration_0= ruleConceptDeclaration ( ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) ) ( (lv_operands_2_0= ruleTerm ) ) )* ) )
            // InternalKim.g:8047:2: (this_ConceptDeclaration_0= ruleConceptDeclaration ( ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) ) ( (lv_operands_2_0= ruleTerm ) ) )* )
            {
            // InternalKim.g:8047:2: (this_ConceptDeclaration_0= ruleConceptDeclaration ( ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) ) ( (lv_operands_2_0= ruleTerm ) ) )* )
            // InternalKim.g:8048:3: this_ConceptDeclaration_0= ruleConceptDeclaration ( ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) ) ( (lv_operands_2_0= ruleTerm ) ) )*
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getFactorAccess().getConceptDeclarationParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_105);
            this_ConceptDeclaration_0=ruleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ConceptDeclaration_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKim.g:8059:3: ( ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) ) ( (lv_operands_2_0= ruleTerm ) ) )*
            loop165:
            do {
                int alt165=2;
                int LA165_0 = input.LA(1);

                if ( (LA165_0==132) ) {
                    int LA165_2 = input.LA(2);

                    if ( (synpred301_InternalKim()) ) {
                        alt165=1;
                    }


                }
                else if ( (LA165_0==133) ) {
                    int LA165_3 = input.LA(2);

                    if ( (synpred301_InternalKim()) ) {
                        alt165=1;
                    }


                }


                switch (alt165) {
            	case 1 :
            	    // InternalKim.g:8060:4: ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) ) ( (lv_operands_2_0= ruleTerm ) )
            	    {
            	    // InternalKim.g:8060:4: ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) )
            	    // InternalKim.g:8061:5: ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) )
            	    {
            	    // InternalKim.g:8061:5: ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) )
            	    // InternalKim.g:8062:6: (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' )
            	    {
            	    // InternalKim.g:8062:6: (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' )
            	    int alt164=2;
            	    int LA164_0 = input.LA(1);

            	    if ( (LA164_0==132) ) {
            	        alt164=1;
            	    }
            	    else if ( (LA164_0==133) ) {
            	        alt164=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 164, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt164) {
            	        case 1 :
            	            // InternalKim.g:8063:7: lv_operators_1_1= 'and'
            	            {
            	            lv_operators_1_1=(Token)match(input,132,FOLLOW_16); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							newLeafNode(lv_operators_1_1, grammarAccess.getFactorAccess().getOperatorsAndKeyword_1_0_0_0());
            	              						
            	            }
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElement(grammarAccess.getFactorRule());
            	              							}
            	              							addWithLastConsumed(current, "operators", lv_operators_1_1, null);
            	              						
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:8074:7: lv_operators_1_2= 'follows'
            	            {
            	            lv_operators_1_2=(Token)match(input,133,FOLLOW_16); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							newLeafNode(lv_operators_1_2, grammarAccess.getFactorAccess().getOperatorsFollowsKeyword_1_0_0_1());
            	              						
            	            }
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElement(grammarAccess.getFactorRule());
            	              							}
            	              							addWithLastConsumed(current, "operators", lv_operators_1_2, null);
            	              						
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }

            	    // InternalKim.g:8087:4: ( (lv_operands_2_0= ruleTerm ) )
            	    // InternalKim.g:8088:5: (lv_operands_2_0= ruleTerm )
            	    {
            	    // InternalKim.g:8088:5: (lv_operands_2_0= ruleTerm )
            	    // InternalKim.g:8089:6: lv_operands_2_0= ruleTerm
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getFactorAccess().getOperandsTermParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_105);
            	    lv_operands_2_0=ruleTerm();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getFactorRule());
            	      						}
            	      						add(
            	      							current,
            	      							"operands",
            	      							lv_operands_2_0,
            	      							"org.integratedmodelling.kim.Kim.Term");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop165;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFactor"


    // $ANTLR start "entryRuleSimpleConceptDeclaration"
    // InternalKim.g:8111:1: entryRuleSimpleConceptDeclaration returns [EObject current=null] : iv_ruleSimpleConceptDeclaration= ruleSimpleConceptDeclaration EOF ;
    public final EObject entryRuleSimpleConceptDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimpleConceptDeclaration = null;


        try {
            // InternalKim.g:8111:65: (iv_ruleSimpleConceptDeclaration= ruleSimpleConceptDeclaration EOF )
            // InternalKim.g:8112:2: iv_ruleSimpleConceptDeclaration= ruleSimpleConceptDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimpleConceptDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimpleConceptDeclaration=ruleSimpleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimpleConceptDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimpleConceptDeclaration"


    // $ANTLR start "ruleSimpleConceptDeclaration"
    // InternalKim.g:8118:1: ruleSimpleConceptDeclaration returns [EObject current=null] : ( ( (lv_name_0_0= RULE_STRING ) )? ( (lv_main_1_0= ruleConcept ) )+ ) ;
    public final EObject ruleSimpleConceptDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        EObject lv_main_1_0 = null;



        	enterRule();

        try {
            // InternalKim.g:8124:2: ( ( ( (lv_name_0_0= RULE_STRING ) )? ( (lv_main_1_0= ruleConcept ) )+ ) )
            // InternalKim.g:8125:2: ( ( (lv_name_0_0= RULE_STRING ) )? ( (lv_main_1_0= ruleConcept ) )+ )
            {
            // InternalKim.g:8125:2: ( ( (lv_name_0_0= RULE_STRING ) )? ( (lv_main_1_0= ruleConcept ) )+ )
            // InternalKim.g:8126:3: ( (lv_name_0_0= RULE_STRING ) )? ( (lv_main_1_0= ruleConcept ) )+
            {
            // InternalKim.g:8126:3: ( (lv_name_0_0= RULE_STRING ) )?
            int alt166=2;
            int LA166_0 = input.LA(1);

            if ( (LA166_0==RULE_STRING) ) {
                alt166=1;
            }
            switch (alt166) {
                case 1 :
                    // InternalKim.g:8127:4: (lv_name_0_0= RULE_STRING )
                    {
                    // InternalKim.g:8127:4: (lv_name_0_0= RULE_STRING )
                    // InternalKim.g:8128:5: lv_name_0_0= RULE_STRING
                    {
                    lv_name_0_0=(Token)match(input,RULE_STRING,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_0_0, grammarAccess.getSimpleConceptDeclarationAccess().getNameSTRINGTerminalRuleCall_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getSimpleConceptDeclarationRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_0_0,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:8144:3: ( (lv_main_1_0= ruleConcept ) )+
            int cnt167=0;
            loop167:
            do {
                int alt167=2;
                alt167 = dfa167.predict(input);
                switch (alt167) {
            	case 1 :
            	    // InternalKim.g:8145:4: (lv_main_1_0= ruleConcept )
            	    {
            	    // InternalKim.g:8145:4: (lv_main_1_0= ruleConcept )
            	    // InternalKim.g:8146:5: lv_main_1_0= ruleConcept
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getSimpleConceptDeclarationAccess().getMainConceptParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_106);
            	    lv_main_1_0=ruleConcept();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getSimpleConceptDeclarationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"main",
            	      						lv_main_1_0,
            	      						"org.integratedmodelling.kim.Kim.Concept");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt167 >= 1 ) break loop167;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(167, input);
                        throw eee;
                }
                cnt167++;
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimpleConceptDeclaration"


    // $ANTLR start "entryRuleUpperOntologyDefinition"
    // InternalKim.g:8167:1: entryRuleUpperOntologyDefinition returns [EObject current=null] : iv_ruleUpperOntologyDefinition= ruleUpperOntologyDefinition EOF ;
    public final EObject entryRuleUpperOntologyDefinition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUpperOntologyDefinition = null;


        try {
            // InternalKim.g:8167:64: (iv_ruleUpperOntologyDefinition= ruleUpperOntologyDefinition EOF )
            // InternalKim.g:8168:2: iv_ruleUpperOntologyDefinition= ruleUpperOntologyDefinition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUpperOntologyDefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUpperOntologyDefinition=ruleUpperOntologyDefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUpperOntologyDefinition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUpperOntologyDefinition"


    // $ANTLR start "ruleUpperOntologyDefinition"
    // InternalKim.g:8174:1: ruleUpperOntologyDefinition returns [EObject current=null] : (otherlv_0= 'model' ( ( ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? ) otherlv_6= 'using' ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) ) ) | ( ( (lv_operand_8_0= ruleOPERATOR_TARGET ) ) otherlv_9= 'using' ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) ) ) ) ) ;
    public final EObject ruleUpperOntologyDefinition() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_agentSpecifier_1_1=null;
        Token lv_agentSpecifier_1_2=null;
        Token lv_agentSpecifier_1_3=null;
        Token lv_concept_2_0=null;
        Token lv_concept_5_0=null;
        Token otherlv_6=null;
        Token otherlv_9=null;
        AntlrDatatypeRuleToken lv_propertySpecifiers_3_0 = null;

        AntlrDatatypeRuleToken lv_propertySpecifiers_4_0 = null;

        AntlrDatatypeRuleToken lv_coreconcept_7_1 = null;

        AntlrDatatypeRuleToken lv_coreconcept_7_2 = null;

        AntlrDatatypeRuleToken lv_operand_8_0 = null;

        AntlrDatatypeRuleToken lv_property_10_1 = null;

        AntlrDatatypeRuleToken lv_property_10_2 = null;



        	enterRule();

        try {
            // InternalKim.g:8180:2: ( (otherlv_0= 'model' ( ( ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? ) otherlv_6= 'using' ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) ) ) | ( ( (lv_operand_8_0= ruleOPERATOR_TARGET ) ) otherlv_9= 'using' ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) ) ) ) ) )
            // InternalKim.g:8181:2: (otherlv_0= 'model' ( ( ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? ) otherlv_6= 'using' ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) ) ) | ( ( (lv_operand_8_0= ruleOPERATOR_TARGET ) ) otherlv_9= 'using' ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) ) ) ) )
            {
            // InternalKim.g:8181:2: (otherlv_0= 'model' ( ( ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? ) otherlv_6= 'using' ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) ) ) | ( ( (lv_operand_8_0= ruleOPERATOR_TARGET ) ) otherlv_9= 'using' ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) ) ) ) )
            // InternalKim.g:8182:3: otherlv_0= 'model' ( ( ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? ) otherlv_6= 'using' ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) ) ) | ( ( (lv_operand_8_0= ruleOPERATOR_TARGET ) ) otherlv_9= 'using' ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) ) ) )
            {
            otherlv_0=(Token)match(input,68,FOLLOW_107); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getUpperOntologyDefinitionAccess().getModelKeyword_0());
              		
            }
            // InternalKim.g:8186:3: ( ( ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? ) otherlv_6= 'using' ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) ) ) | ( ( (lv_operand_8_0= ruleOPERATOR_TARGET ) ) otherlv_9= 'using' ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) ) ) )
            int alt174=2;
            int LA174_0 = input.LA(1);

            if ( (LA174_0==27||(LA174_0>=134 && LA174_0<=136)||(LA174_0>=218 && LA174_0<=219)) ) {
                alt174=1;
            }
            else if ( (LA174_0==60||(LA174_0>=102 && LA174_0<=104)||(LA174_0>=110 && LA174_0<=114)) ) {
                alt174=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 174, 0, input);

                throw nvae;
            }
            switch (alt174) {
                case 1 :
                    // InternalKim.g:8187:4: ( ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? ) otherlv_6= 'using' ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) ) )
                    {
                    // InternalKim.g:8187:4: ( ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? ) otherlv_6= 'using' ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) ) )
                    // InternalKim.g:8188:5: ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? ) otherlv_6= 'using' ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) )
                    {
                    // InternalKim.g:8188:5: ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? )
                    int alt171=2;
                    int LA171_0 = input.LA(1);

                    if ( ((LA171_0>=134 && LA171_0<=136)) ) {
                        alt171=1;
                    }
                    else if ( (LA171_0==27||(LA171_0>=218 && LA171_0<=219)) ) {
                        alt171=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 171, 0, input);

                        throw nvae;
                    }
                    switch (alt171) {
                        case 1 :
                            // InternalKim.g:8189:6: ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) )
                            {
                            // InternalKim.g:8189:6: ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) )
                            // InternalKim.g:8190:7: ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) )
                            {
                            // InternalKim.g:8190:7: ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) )
                            // InternalKim.g:8191:8: ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) )
                            {
                            // InternalKim.g:8191:8: ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) )
                            // InternalKim.g:8192:9: (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' )
                            {
                            // InternalKim.g:8192:9: (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' )
                            int alt168=3;
                            switch ( input.LA(1) ) {
                            case 134:
                                {
                                alt168=1;
                                }
                                break;
                            case 135:
                                {
                                alt168=2;
                                }
                                break;
                            case 136:
                                {
                                alt168=3;
                                }
                                break;
                            default:
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 168, 0, input);

                                throw nvae;
                            }

                            switch (alt168) {
                                case 1 :
                                    // InternalKim.g:8193:10: lv_agentSpecifier_1_1= 'deliberative'
                                    {
                                    lv_agentSpecifier_1_1=(Token)match(input,134,FOLLOW_108); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										newLeafNode(lv_agentSpecifier_1_1, grammarAccess.getUpperOntologyDefinitionAccess().getAgentSpecifierDeliberativeKeyword_1_0_0_0_0_0_0());
                                      									
                                    }
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElement(grammarAccess.getUpperOntologyDefinitionRule());
                                      										}
                                      										setWithLastConsumed(current, "agentSpecifier", lv_agentSpecifier_1_1, null);
                                      									
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:8204:10: lv_agentSpecifier_1_2= 'interactive'
                                    {
                                    lv_agentSpecifier_1_2=(Token)match(input,135,FOLLOW_108); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										newLeafNode(lv_agentSpecifier_1_2, grammarAccess.getUpperOntologyDefinitionAccess().getAgentSpecifierInteractiveKeyword_1_0_0_0_0_0_1());
                                      									
                                    }
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElement(grammarAccess.getUpperOntologyDefinitionRule());
                                      										}
                                      										setWithLastConsumed(current, "agentSpecifier", lv_agentSpecifier_1_2, null);
                                      									
                                    }

                                    }
                                    break;
                                case 3 :
                                    // InternalKim.g:8215:10: lv_agentSpecifier_1_3= 'reactive'
                                    {
                                    lv_agentSpecifier_1_3=(Token)match(input,136,FOLLOW_108); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										newLeafNode(lv_agentSpecifier_1_3, grammarAccess.getUpperOntologyDefinitionAccess().getAgentSpecifierReactiveKeyword_1_0_0_0_0_0_2());
                                      									
                                    }
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElement(grammarAccess.getUpperOntologyDefinitionRule());
                                      										}
                                      										setWithLastConsumed(current, "agentSpecifier", lv_agentSpecifier_1_3, null);
                                      									
                                    }

                                    }
                                    break;

                            }


                            }


                            }

                            // InternalKim.g:8228:7: ( (lv_concept_2_0= 'agent' ) )
                            // InternalKim.g:8229:8: (lv_concept_2_0= 'agent' )
                            {
                            // InternalKim.g:8229:8: (lv_concept_2_0= 'agent' )
                            // InternalKim.g:8230:9: lv_concept_2_0= 'agent'
                            {
                            lv_concept_2_0=(Token)match(input,137,FOLLOW_109); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              									newLeafNode(lv_concept_2_0, grammarAccess.getUpperOntologyDefinitionAccess().getConceptAgentKeyword_1_0_0_0_1_0());
                              								
                            }
                            if ( state.backtracking==0 ) {

                              									if (current==null) {
                              										current = createModelElement(grammarAccess.getUpperOntologyDefinitionRule());
                              									}
                              									setWithLastConsumed(current, "concept", lv_concept_2_0, "agent");
                              								
                            }

                            }


                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:8244:6: ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )?
                            {
                            // InternalKim.g:8244:6: ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )?
                            int alt170=2;
                            int LA170_0 = input.LA(1);

                            if ( ((LA170_0>=218 && LA170_0<=219)) ) {
                                alt170=1;
                            }
                            switch (alt170) {
                                case 1 :
                                    // InternalKim.g:8245:7: ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) )
                                    {
                                    // InternalKim.g:8245:7: ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) )
                                    // InternalKim.g:8246:8: (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE )
                                    {
                                    // InternalKim.g:8246:8: (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE )
                                    // InternalKim.g:8247:9: lv_propertySpecifiers_3_0= rulePROPERTY_TYPE
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getUpperOntologyDefinitionAccess().getPropertySpecifiersPROPERTY_TYPEParserRuleCall_1_0_0_1_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_110);
                                    lv_propertySpecifiers_3_0=rulePROPERTY_TYPE();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getUpperOntologyDefinitionRule());
                                      									}
                                      									add(
                                      										current,
                                      										"propertySpecifiers",
                                      										lv_propertySpecifiers_3_0,
                                      										"org.integratedmodelling.kim.Kim.PROPERTY_TYPE");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }

                                    // InternalKim.g:8264:7: ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )*
                                    loop169:
                                    do {
                                        int alt169=2;
                                        int LA169_0 = input.LA(1);

                                        if ( ((LA169_0>=218 && LA169_0<=219)) ) {
                                            alt169=1;
                                        }


                                        switch (alt169) {
                                    	case 1 :
                                    	    // InternalKim.g:8265:8: (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE )
                                    	    {
                                    	    // InternalKim.g:8265:8: (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE )
                                    	    // InternalKim.g:8266:9: lv_propertySpecifiers_4_0= rulePROPERTY_TYPE
                                    	    {
                                    	    if ( state.backtracking==0 ) {

                                    	      									newCompositeNode(grammarAccess.getUpperOntologyDefinitionAccess().getPropertySpecifiersPROPERTY_TYPEParserRuleCall_1_0_0_1_1_0());
                                    	      								
                                    	    }
                                    	    pushFollow(FOLLOW_110);
                                    	    lv_propertySpecifiers_4_0=rulePROPERTY_TYPE();

                                    	    state._fsp--;
                                    	    if (state.failed) return current;
                                    	    if ( state.backtracking==0 ) {

                                    	      									if (current==null) {
                                    	      										current = createModelElementForParent(grammarAccess.getUpperOntologyDefinitionRule());
                                    	      									}
                                    	      									add(
                                    	      										current,
                                    	      										"propertySpecifiers",
                                    	      										lv_propertySpecifiers_4_0,
                                    	      										"org.integratedmodelling.kim.Kim.PROPERTY_TYPE");
                                    	      									afterParserOrEnumRuleCall();
                                    	      								
                                    	    }

                                    	    }


                                    	    }
                                    	    break;

                                    	default :
                                    	    break loop169;
                                        }
                                    } while (true);

                                    // InternalKim.g:8283:7: ( (lv_concept_5_0= 'relationship' ) )
                                    // InternalKim.g:8284:8: (lv_concept_5_0= 'relationship' )
                                    {
                                    // InternalKim.g:8284:8: (lv_concept_5_0= 'relationship' )
                                    // InternalKim.g:8285:9: lv_concept_5_0= 'relationship'
                                    {
                                    lv_concept_5_0=(Token)match(input,138,FOLLOW_109); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_concept_5_0, grammarAccess.getUpperOntologyDefinitionAccess().getConceptRelationshipKeyword_1_0_0_1_2_0());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getUpperOntologyDefinitionRule());
                                      									}
                                      									setWithLastConsumed(current, "concept", lv_concept_5_0, "relationship");
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }

                    otherlv_6=(Token)match(input,27,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getUpperOntologyDefinitionAccess().getUsingKeyword_1_0_1());
                      				
                    }
                    // InternalKim.g:8303:5: ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) )
                    // InternalKim.g:8304:6: ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) )
                    {
                    // InternalKim.g:8304:6: ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) )
                    // InternalKim.g:8305:7: (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId )
                    {
                    // InternalKim.g:8305:7: (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId )
                    int alt172=2;
                    alt172 = dfa172.predict(input);
                    switch (alt172) {
                        case 1 :
                            // InternalKim.g:8306:8: lv_coreconcept_7_1= ruleNamespaceId
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getUpperOntologyDefinitionAccess().getCoreconceptNamespaceIdParserRuleCall_1_0_2_0_0());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_coreconcept_7_1=ruleNamespaceId();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getUpperOntologyDefinitionRule());
                              								}
                              								set(
                              									current,
                              									"coreconcept",
                              									lv_coreconcept_7_1,
                              									"org.integratedmodelling.kim.Kim.NamespaceId");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:8322:8: lv_coreconcept_7_2= rulePropertyId
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getUpperOntologyDefinitionAccess().getCoreconceptPropertyIdParserRuleCall_1_0_2_0_1());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_coreconcept_7_2=rulePropertyId();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getUpperOntologyDefinitionRule());
                              								}
                              								set(
                              									current,
                              									"coreconcept",
                              									lv_coreconcept_7_2,
                              									"org.integratedmodelling.kim.Kim.PropertyId");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }
                            break;

                    }


                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:8342:4: ( ( (lv_operand_8_0= ruleOPERATOR_TARGET ) ) otherlv_9= 'using' ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) ) )
                    {
                    // InternalKim.g:8342:4: ( ( (lv_operand_8_0= ruleOPERATOR_TARGET ) ) otherlv_9= 'using' ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) ) )
                    // InternalKim.g:8343:5: ( (lv_operand_8_0= ruleOPERATOR_TARGET ) ) otherlv_9= 'using' ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) )
                    {
                    // InternalKim.g:8343:5: ( (lv_operand_8_0= ruleOPERATOR_TARGET ) )
                    // InternalKim.g:8344:6: (lv_operand_8_0= ruleOPERATOR_TARGET )
                    {
                    // InternalKim.g:8344:6: (lv_operand_8_0= ruleOPERATOR_TARGET )
                    // InternalKim.g:8345:7: lv_operand_8_0= ruleOPERATOR_TARGET
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getUpperOntologyDefinitionAccess().getOperandOPERATOR_TARGETParserRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FOLLOW_109);
                    lv_operand_8_0=ruleOPERATOR_TARGET();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getUpperOntologyDefinitionRule());
                      							}
                      							set(
                      								current,
                      								"operand",
                      								lv_operand_8_0,
                      								"org.integratedmodelling.kim.Kim.OPERATOR_TARGET");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_9=(Token)match(input,27,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_9, grammarAccess.getUpperOntologyDefinitionAccess().getUsingKeyword_1_1_1());
                      				
                    }
                    // InternalKim.g:8366:5: ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) )
                    // InternalKim.g:8367:6: ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) )
                    {
                    // InternalKim.g:8367:6: ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) )
                    // InternalKim.g:8368:7: (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId )
                    {
                    // InternalKim.g:8368:7: (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId )
                    int alt173=2;
                    alt173 = dfa173.predict(input);
                    switch (alt173) {
                        case 1 :
                            // InternalKim.g:8369:8: lv_property_10_1= rulePropertyId
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getUpperOntologyDefinitionAccess().getPropertyPropertyIdParserRuleCall_1_1_2_0_0());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_property_10_1=rulePropertyId();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getUpperOntologyDefinitionRule());
                              								}
                              								set(
                              									current,
                              									"property",
                              									lv_property_10_1,
                              									"org.integratedmodelling.kim.Kim.PropertyId");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:8385:8: lv_property_10_2= ruleNamespaceId
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getUpperOntologyDefinitionAccess().getPropertyNamespaceIdParserRuleCall_1_1_2_0_1());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_property_10_2=ruleNamespaceId();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getUpperOntologyDefinitionRule());
                              								}
                              								set(
                              									current,
                              									"property",
                              									lv_property_10_2,
                              									"org.integratedmodelling.kim.Kim.NamespaceId");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }
                            break;

                    }


                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUpperOntologyDefinition"


    // $ANTLR start "entryRuleConceptStatement"
    // InternalKim.g:8409:1: entryRuleConceptStatement returns [EObject current=null] : iv_ruleConceptStatement= ruleConceptStatement EOF ;
    public final EObject entryRuleConceptStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConceptStatement = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getConceptStatementAccess().getUnorderedGroup_1()
        	);

        try {
            // InternalKim.g:8413:2: (iv_ruleConceptStatement= ruleConceptStatement EOF )
            // InternalKim.g:8414:2: iv_ruleConceptStatement= ruleConceptStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConceptStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConceptStatement=ruleConceptStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConceptStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleConceptStatement"


    // $ANTLR start "ruleConceptStatement"
    // InternalKim.g:8423:1: ruleConceptStatement returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) ) ) )* ) ) ) ( (lv_concept_8_0= ruleCONCEPT_TYPE ) ) ( (lv_body_9_0= ruleConceptStatementBody ) ) (otherlv_10= 'named' ( (lv_name_11_0= ruleNamespaceId ) ) )? ) ;
    public final EObject ruleConceptStatement() throws RecognitionException {
        EObject current = null;

        Token lv_abstract_2_0=null;
        Token lv_deniable_3_0=null;
        Token lv_subjective_4_0=null;
        Token lv_agentSpecifier_5_1=null;
        Token lv_agentSpecifier_5_2=null;
        Token lv_agentSpecifier_5_3=null;
        Token otherlv_10=null;
        EObject lv_annotations_0_0 = null;

        AntlrDatatypeRuleToken lv_propertySpecifiers_6_0 = null;

        AntlrDatatypeRuleToken lv_propertySpecifiers_7_0 = null;

        AntlrDatatypeRuleToken lv_concept_8_0 = null;

        EObject lv_body_9_0 = null;

        AntlrDatatypeRuleToken lv_name_11_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getConceptStatementAccess().getUnorderedGroup_1()
        	);

        try {
            // InternalKim.g:8432:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) ) ) )* ) ) ) ( (lv_concept_8_0= ruleCONCEPT_TYPE ) ) ( (lv_body_9_0= ruleConceptStatementBody ) ) (otherlv_10= 'named' ( (lv_name_11_0= ruleNamespaceId ) ) )? ) )
            // InternalKim.g:8433:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) ) ) )* ) ) ) ( (lv_concept_8_0= ruleCONCEPT_TYPE ) ) ( (lv_body_9_0= ruleConceptStatementBody ) ) (otherlv_10= 'named' ( (lv_name_11_0= ruleNamespaceId ) ) )? )
            {
            // InternalKim.g:8433:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) ) ) )* ) ) ) ( (lv_concept_8_0= ruleCONCEPT_TYPE ) ) ( (lv_body_9_0= ruleConceptStatementBody ) ) (otherlv_10= 'named' ( (lv_name_11_0= ruleNamespaceId ) ) )? )
            // InternalKim.g:8434:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) ) ) )* ) ) ) ( (lv_concept_8_0= ruleCONCEPT_TYPE ) ) ( (lv_body_9_0= ruleConceptStatementBody ) ) (otherlv_10= 'named' ( (lv_name_11_0= ruleNamespaceId ) ) )?
            {
            // InternalKim.g:8434:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop175:
            do {
                int alt175=2;
                int LA175_0 = input.LA(1);

                if ( (LA175_0==RULE_ANNOTATION_ID) ) {
                    alt175=1;
                }


                switch (alt175) {
            	case 1 :
            	    // InternalKim.g:8435:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalKim.g:8435:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalKim.g:8436:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getConceptStatementAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_111);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getConceptStatementRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"org.integratedmodelling.kim.Kim.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop175;
                }
            } while (true);

            // InternalKim.g:8453:3: ( ( ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) ) ) )* ) ) )
            // InternalKim.g:8454:4: ( ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) ) ) )* ) )
            {
            // InternalKim.g:8454:4: ( ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) ) ) )* ) )
            // InternalKim.g:8455:5: ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1());
            // InternalKim.g:8458:5: ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) ) ) )* )
            // InternalKim.g:8459:6: ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) ) ) )*
            {
            // InternalKim.g:8459:6: ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) ) ) )*
            loop179:
            do {
                int alt179=5;
                alt179 = dfa179.predict(input);
                switch (alt179) {
            	case 1 :
            	    // InternalKim.g:8460:4: ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) )
            	    {
            	    // InternalKim.g:8460:4: ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) )
            	    // InternalKim.g:8461:5: {...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatement", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 0)");
            	    }
            	    // InternalKim.g:8461:113: ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) )
            	    // InternalKim.g:8462:6: ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 0);
            	    // InternalKim.g:8465:9: ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) )
            	    // InternalKim.g:8465:10: {...}? => ( (lv_abstract_2_0= 'abstract' ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatement", "true");
            	    }
            	    // InternalKim.g:8465:19: ( (lv_abstract_2_0= 'abstract' ) )
            	    // InternalKim.g:8465:20: (lv_abstract_2_0= 'abstract' )
            	    {
            	    // InternalKim.g:8465:20: (lv_abstract_2_0= 'abstract' )
            	    // InternalKim.g:8466:10: lv_abstract_2_0= 'abstract'
            	    {
            	    lv_abstract_2_0=(Token)match(input,139,FOLLOW_111); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(lv_abstract_2_0, grammarAccess.getConceptStatementAccess().getAbstractAbstractKeyword_1_0_0());
            	      									
            	    }
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElement(grammarAccess.getConceptStatementRule());
            	      										}
            	      										setWithLastConsumed(current, "abstract", true, "abstract");
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKim.g:8483:4: ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) )
            	    {
            	    // InternalKim.g:8483:4: ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) )
            	    // InternalKim.g:8484:5: {...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatement", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 1)");
            	    }
            	    // InternalKim.g:8484:113: ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) )
            	    // InternalKim.g:8485:6: ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 1);
            	    // InternalKim.g:8488:9: ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) )
            	    // InternalKim.g:8488:10: {...}? => ( (lv_deniable_3_0= 'deniable' ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatement", "true");
            	    }
            	    // InternalKim.g:8488:19: ( (lv_deniable_3_0= 'deniable' ) )
            	    // InternalKim.g:8488:20: (lv_deniable_3_0= 'deniable' )
            	    {
            	    // InternalKim.g:8488:20: (lv_deniable_3_0= 'deniable' )
            	    // InternalKim.g:8489:10: lv_deniable_3_0= 'deniable'
            	    {
            	    lv_deniable_3_0=(Token)match(input,140,FOLLOW_111); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(lv_deniable_3_0, grammarAccess.getConceptStatementAccess().getDeniableDeniableKeyword_1_1_0());
            	      									
            	    }
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElement(grammarAccess.getConceptStatementRule());
            	      										}
            	      										setWithLastConsumed(current, "deniable", true, "deniable");
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalKim.g:8506:4: ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) )
            	    {
            	    // InternalKim.g:8506:4: ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) )
            	    // InternalKim.g:8507:5: {...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatement", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 2)");
            	    }
            	    // InternalKim.g:8507:113: ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) )
            	    // InternalKim.g:8508:6: ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 2);
            	    // InternalKim.g:8511:9: ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) )
            	    // InternalKim.g:8511:10: {...}? => ( (lv_subjective_4_0= 'subjective' ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatement", "true");
            	    }
            	    // InternalKim.g:8511:19: ( (lv_subjective_4_0= 'subjective' ) )
            	    // InternalKim.g:8511:20: (lv_subjective_4_0= 'subjective' )
            	    {
            	    // InternalKim.g:8511:20: (lv_subjective_4_0= 'subjective' )
            	    // InternalKim.g:8512:10: lv_subjective_4_0= 'subjective'
            	    {
            	    lv_subjective_4_0=(Token)match(input,141,FOLLOW_111); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(lv_subjective_4_0, grammarAccess.getConceptStatementAccess().getSubjectiveSubjectiveKeyword_1_2_0());
            	      									
            	    }
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElement(grammarAccess.getConceptStatementRule());
            	      										}
            	      										setWithLastConsumed(current, "subjective", true, "subjective");
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalKim.g:8529:4: ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) ) )
            	    {
            	    // InternalKim.g:8529:4: ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) ) )
            	    // InternalKim.g:8530:5: {...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatement", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3)");
            	    }
            	    // InternalKim.g:8530:113: ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) )
            	    // InternalKim.g:8531:6: ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3);
            	    // InternalKim.g:8534:9: ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) )
            	    // InternalKim.g:8534:10: {...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatement", "true");
            	    }
            	    // InternalKim.g:8534:19: ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) )
            	    int alt178=2;
            	    int LA178_0 = input.LA(1);

            	    if ( ((LA178_0>=134 && LA178_0<=136)) ) {
            	        alt178=1;
            	    }
            	    else if ( ((LA178_0>=218 && LA178_0<=219)) ) {
            	        alt178=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 178, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt178) {
            	        case 1 :
            	            // InternalKim.g:8534:20: ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) )
            	            {
            	            // InternalKim.g:8534:20: ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) )
            	            // InternalKim.g:8535:10: ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) )
            	            {
            	            // InternalKim.g:8535:10: ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) )
            	            // InternalKim.g:8536:11: (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' )
            	            {
            	            // InternalKim.g:8536:11: (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' )
            	            int alt176=3;
            	            switch ( input.LA(1) ) {
            	            case 134:
            	                {
            	                alt176=1;
            	                }
            	                break;
            	            case 135:
            	                {
            	                alt176=2;
            	                }
            	                break;
            	            case 136:
            	                {
            	                alt176=3;
            	                }
            	                break;
            	            default:
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 176, 0, input);

            	                throw nvae;
            	            }

            	            switch (alt176) {
            	                case 1 :
            	                    // InternalKim.g:8537:12: lv_agentSpecifier_5_1= 'deliberative'
            	                    {
            	                    lv_agentSpecifier_5_1=(Token)match(input,134,FOLLOW_111); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      												newLeafNode(lv_agentSpecifier_5_1, grammarAccess.getConceptStatementAccess().getAgentSpecifierDeliberativeKeyword_1_3_0_0_0());
            	                      											
            	                    }
            	                    if ( state.backtracking==0 ) {

            	                      												if (current==null) {
            	                      													current = createModelElement(grammarAccess.getConceptStatementRule());
            	                      												}
            	                      												setWithLastConsumed(current, "agentSpecifier", lv_agentSpecifier_5_1, null);
            	                      											
            	                    }

            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalKim.g:8548:12: lv_agentSpecifier_5_2= 'interactive'
            	                    {
            	                    lv_agentSpecifier_5_2=(Token)match(input,135,FOLLOW_111); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      												newLeafNode(lv_agentSpecifier_5_2, grammarAccess.getConceptStatementAccess().getAgentSpecifierInteractiveKeyword_1_3_0_0_1());
            	                      											
            	                    }
            	                    if ( state.backtracking==0 ) {

            	                      												if (current==null) {
            	                      													current = createModelElement(grammarAccess.getConceptStatementRule());
            	                      												}
            	                      												setWithLastConsumed(current, "agentSpecifier", lv_agentSpecifier_5_2, null);
            	                      											
            	                    }

            	                    }
            	                    break;
            	                case 3 :
            	                    // InternalKim.g:8559:12: lv_agentSpecifier_5_3= 'reactive'
            	                    {
            	                    lv_agentSpecifier_5_3=(Token)match(input,136,FOLLOW_111); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      												newLeafNode(lv_agentSpecifier_5_3, grammarAccess.getConceptStatementAccess().getAgentSpecifierReactiveKeyword_1_3_0_0_2());
            	                      											
            	                    }
            	                    if ( state.backtracking==0 ) {

            	                      												if (current==null) {
            	                      													current = createModelElement(grammarAccess.getConceptStatementRule());
            	                      												}
            	                      												setWithLastConsumed(current, "agentSpecifier", lv_agentSpecifier_5_3, null);
            	                      											
            	                    }

            	                    }
            	                    break;

            	            }


            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:8573:9: ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* )
            	            {
            	            // InternalKim.g:8573:9: ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* )
            	            // InternalKim.g:8574:10: ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )*
            	            {
            	            // InternalKim.g:8574:10: ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) )
            	            // InternalKim.g:8575:11: (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE )
            	            {
            	            // InternalKim.g:8575:11: (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE )
            	            // InternalKim.g:8576:12: lv_propertySpecifiers_6_0= rulePROPERTY_TYPE
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getConceptStatementAccess().getPropertySpecifiersPROPERTY_TYPEParserRuleCall_1_3_1_0_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_111);
            	            lv_propertySpecifiers_6_0=rulePROPERTY_TYPE();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getConceptStatementRule());
            	              												}
            	              												add(
            	              													current,
            	              													"propertySpecifiers",
            	              													lv_propertySpecifiers_6_0,
            	              													"org.integratedmodelling.kim.Kim.PROPERTY_TYPE");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }

            	            // InternalKim.g:8593:10: ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )*
            	            loop177:
            	            do {
            	                int alt177=2;
            	                int LA177_0 = input.LA(1);

            	                if ( (LA177_0==218) ) {
            	                    int LA177_2 = input.LA(2);

            	                    if ( (synpred319_InternalKim()) ) {
            	                        alt177=1;
            	                    }


            	                }
            	                else if ( (LA177_0==219) ) {
            	                    int LA177_3 = input.LA(2);

            	                    if ( (synpred319_InternalKim()) ) {
            	                        alt177=1;
            	                    }


            	                }


            	                switch (alt177) {
            	            	case 1 :
            	            	    // InternalKim.g:8594:11: (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE )
            	            	    {
            	            	    // InternalKim.g:8594:11: (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE )
            	            	    // InternalKim.g:8595:12: lv_propertySpecifiers_7_0= rulePROPERTY_TYPE
            	            	    {
            	            	    if ( state.backtracking==0 ) {

            	            	      												newCompositeNode(grammarAccess.getConceptStatementAccess().getPropertySpecifiersPROPERTY_TYPEParserRuleCall_1_3_1_1_0());
            	            	      											
            	            	    }
            	            	    pushFollow(FOLLOW_111);
            	            	    lv_propertySpecifiers_7_0=rulePROPERTY_TYPE();

            	            	    state._fsp--;
            	            	    if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      												if (current==null) {
            	            	      													current = createModelElementForParent(grammarAccess.getConceptStatementRule());
            	            	      												}
            	            	      												add(
            	            	      													current,
            	            	      													"propertySpecifiers",
            	            	      													lv_propertySpecifiers_7_0,
            	            	      													"org.integratedmodelling.kim.Kim.PROPERTY_TYPE");
            	            	      												afterParserOrEnumRuleCall();
            	            	      											
            	            	    }

            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop177;
            	                }
            	            } while (true);


            	            }


            	            }
            	            break;

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop179;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1());

            }

            // InternalKim.g:8626:3: ( (lv_concept_8_0= ruleCONCEPT_TYPE ) )
            // InternalKim.g:8627:4: (lv_concept_8_0= ruleCONCEPT_TYPE )
            {
            // InternalKim.g:8627:4: (lv_concept_8_0= ruleCONCEPT_TYPE )
            // InternalKim.g:8628:5: lv_concept_8_0= ruleCONCEPT_TYPE
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConceptStatementAccess().getConceptCONCEPT_TYPEParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_112);
            lv_concept_8_0=ruleCONCEPT_TYPE();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConceptStatementRule());
              					}
              					set(
              						current,
              						"concept",
              						lv_concept_8_0,
              						"org.integratedmodelling.kim.Kim.CONCEPT_TYPE");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:8645:3: ( (lv_body_9_0= ruleConceptStatementBody ) )
            // InternalKim.g:8646:4: (lv_body_9_0= ruleConceptStatementBody )
            {
            // InternalKim.g:8646:4: (lv_body_9_0= ruleConceptStatementBody )
            // InternalKim.g:8647:5: lv_body_9_0= ruleConceptStatementBody
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConceptStatementAccess().getBodyConceptStatementBodyParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_113);
            lv_body_9_0=ruleConceptStatementBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConceptStatementRule());
              					}
              					set(
              						current,
              						"body",
              						lv_body_9_0,
              						"org.integratedmodelling.kim.Kim.ConceptStatementBody");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:8664:3: (otherlv_10= 'named' ( (lv_name_11_0= ruleNamespaceId ) ) )?
            int alt180=2;
            int LA180_0 = input.LA(1);

            if ( (LA180_0==99) ) {
                alt180=1;
            }
            switch (alt180) {
                case 1 :
                    // InternalKim.g:8665:4: otherlv_10= 'named' ( (lv_name_11_0= ruleNamespaceId ) )
                    {
                    otherlv_10=(Token)match(input,99,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getConceptStatementAccess().getNamedKeyword_4_0());
                      			
                    }
                    // InternalKim.g:8669:4: ( (lv_name_11_0= ruleNamespaceId ) )
                    // InternalKim.g:8670:5: (lv_name_11_0= ruleNamespaceId )
                    {
                    // InternalKim.g:8670:5: (lv_name_11_0= ruleNamespaceId )
                    // InternalKim.g:8671:6: lv_name_11_0= ruleNamespaceId
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptStatementAccess().getNameNamespaceIdParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_name_11_0=ruleNamespaceId();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptStatementRule());
                      						}
                      						set(
                      							current,
                      							"name",
                      							lv_name_11_0,
                      							"org.integratedmodelling.kim.Kim.NamespaceId");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleConceptStatement"


    // $ANTLR start "entryRuleConceptStatementBody"
    // InternalKim.g:8696:1: entryRuleConceptStatementBody returns [EObject current=null] : iv_ruleConceptStatementBody= ruleConceptStatementBody EOF ;
    public final EObject entryRuleConceptStatementBody() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConceptStatementBody = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3()
        	);

        try {
            // InternalKim.g:8700:2: (iv_ruleConceptStatementBody= ruleConceptStatementBody EOF )
            // InternalKim.g:8701:2: iv_ruleConceptStatementBody= ruleConceptStatementBody EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConceptStatementBodyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConceptStatementBody=ruleConceptStatementBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConceptStatementBody; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleConceptStatementBody"


    // $ANTLR start "ruleConceptStatementBody"
    // InternalKim.g:8710:1: ruleConceptStatementBody returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_abstract_1_0= 'abstract' ) )? ( ( (lv_root_2_0= 'root' ) ) | ( ( (lv_name_3_0= RULE_CAMELCASE_ID ) ) (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )? ) ) ( ( ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ ) ) | ({...}? => ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) ) ) )* ) ) ) ) ;
    public final EObject ruleConceptStatementBody() throws RecognitionException {
        EObject current = null;

        Token lv_abstract_1_0=null;
        Token lv_root_2_0=null;
        Token lv_name_3_0=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token lv_stringIdentifier_6_1=null;
        Token lv_stringIdentifier_6_2=null;
        Token lv_intIdentifier_7_0=null;
        Token otherlv_8=null;
        Token lv_authority_9_1=null;
        Token lv_authority_9_2=null;
        Token lv_docstring_11_0=null;
        Token otherlv_12=null;
        Token lv_coreConcept_13_0=null;
        Token lv_alias_14_0=null;
        Token lv_nothing_15_0=null;
        Token lv_connectors_17_1=null;
        Token lv_connectors_17_2=null;
        Token lv_connectors_17_3=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token lv_specific_23_0=null;
        Token otherlv_25=null;
        Token otherlv_27=null;
        Token otherlv_28=null;
        Token lv_definedAuthority_29_0=null;
        Token otherlv_31=null;
        Token otherlv_33=null;
        Token otherlv_35=null;
        Token otherlv_37=null;
        Token otherlv_38=null;
        Token otherlv_40=null;
        Token otherlv_41=null;
        Token otherlv_43=null;
        Token otherlv_45=null;
        Token otherlv_47=null;
        Token otherlv_49=null;
        Token otherlv_51=null;
        Token otherlv_53=null;
        Token otherlv_54=null;
        Token otherlv_56=null;
        Token otherlv_58=null;
        Token otherlv_60=null;
        Token otherlv_62=null;
        Token otherlv_64=null;
        Token otherlv_66=null;
        Token otherlv_68=null;
        Token otherlv_70=null;
        Token otherlv_72=null;
        Token otherlv_74=null;
        Token lv_constituent_75_0=null;
        Token lv_constitutes_76_0=null;
        Token lv_partOf_77_0=null;
        Token otherlv_79=null;
        Token otherlv_81=null;
        Token otherlv_83=null;
        Token otherlv_84=null;
        Token otherlv_86=null;
        Token otherlv_88=null;
        Token otherlv_90=null;
        Token otherlv_92=null;
        Token otherlv_94=null;
        Token otherlv_96=null;
        Token otherlv_97=null;
        Token otherlv_99=null;
        Token otherlv_101=null;
        Token otherlv_103=null;
        Token lv_disjoint_104_0=null;
        Token otherlv_105=null;
        Token otherlv_107=null;
        Token otherlv_110=null;
        Token otherlv_111=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_parents_16_0 = null;

        EObject lv_parents_18_0 = null;

        EObject lv_contextualizedTraits_20_0 = null;

        EObject lv_contextualizedTraits_22_0 = null;

        EObject lv_contextualizesTraits_24_0 = null;

        EObject lv_contextualizesTraits_26_0 = null;

        EObject lv_upperConcept_30_0 = null;

        EObject lv_requirements_32_0 = null;

        EObject lv_requirements_34_0 = null;

        EObject lv_describedQuality_36_0 = null;

        EObject lv_describedProportionality_39_0 = null;

        EObject lv_describedInverseProportionalityQuality_42_0 = null;

        EObject lv_describedNonzeroQuality_44_0 = null;

        EObject lv_classifiesQuality_46_0 = null;

        EObject lv_discretizesQuality_48_0 = null;

        EObject lv_actuallyInheritedTraits_50_0 = null;

        EObject lv_actuallyInheritedTraits_52_0 = null;

        EObject lv_roles_55_0 = null;

        EObject lv_roles_57_0 = null;

        EObject lv_targetObservables_59_0 = null;

        EObject lv_targetObservables_61_0 = null;

        EObject lv_restrictedObservables_63_0 = null;

        EObject lv_restrictedObservables_65_0 = null;

        EObject lv_conferredTraits_67_0 = null;

        EObject lv_conferredTraits_69_0 = null;

        EObject lv_conferredTargets_71_0 = null;

        EObject lv_conferredTargets_73_0 = null;

        EObject lv_whole_78_0 = null;

        EObject lv_creates_80_0 = null;

        EObject lv_creates_82_0 = null;

        EObject lv_traitTargets_85_0 = null;

        EObject lv_traitTargets_87_0 = null;

        EObject lv_domains_89_0 = null;

        EObject lv_ranges_91_0 = null;

        EObject lv_domains_93_0 = null;

        EObject lv_ranges_95_0 = null;

        EObject lv_inverse_98_0 = null;

        EObject lv_qualitiesAffected_100_0 = null;

        EObject lv_qualitiesAffected_102_0 = null;

        EObject lv_children_106_0 = null;

        EObject lv_children_108_0 = null;

        EObject lv_restrictions_109_0 = null;

        EObject lv_metadata_112_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3()
        	);

        try {
            // InternalKim.g:8719:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_abstract_1_0= 'abstract' ) )? ( ( (lv_root_2_0= 'root' ) ) | ( ( (lv_name_3_0= RULE_CAMELCASE_ID ) ) (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )? ) ) ( ( ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ ) ) | ({...}? => ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) ) ) )* ) ) ) ) )
            // InternalKim.g:8720:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_abstract_1_0= 'abstract' ) )? ( ( (lv_root_2_0= 'root' ) ) | ( ( (lv_name_3_0= RULE_CAMELCASE_ID ) ) (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )? ) ) ( ( ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ ) ) | ({...}? => ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) ) ) )* ) ) ) )
            {
            // InternalKim.g:8720:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_abstract_1_0= 'abstract' ) )? ( ( (lv_root_2_0= 'root' ) ) | ( ( (lv_name_3_0= RULE_CAMELCASE_ID ) ) (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )? ) ) ( ( ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ ) ) | ({...}? => ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) ) ) )* ) ) ) )
            // InternalKim.g:8721:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_abstract_1_0= 'abstract' ) )? ( ( (lv_root_2_0= 'root' ) ) | ( ( (lv_name_3_0= RULE_CAMELCASE_ID ) ) (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )? ) ) ( ( ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ ) ) | ({...}? => ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) ) ) )* ) ) )
            {
            // InternalKim.g:8721:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop181:
            do {
                int alt181=2;
                int LA181_0 = input.LA(1);

                if ( (LA181_0==RULE_ANNOTATION_ID) ) {
                    alt181=1;
                }


                switch (alt181) {
            	case 1 :
            	    // InternalKim.g:8722:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalKim.g:8722:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalKim.g:8723:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_112);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"org.integratedmodelling.kim.Kim.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop181;
                }
            } while (true);

            // InternalKim.g:8740:3: ( (lv_abstract_1_0= 'abstract' ) )?
            int alt182=2;
            int LA182_0 = input.LA(1);

            if ( (LA182_0==139) ) {
                alt182=1;
            }
            switch (alt182) {
                case 1 :
                    // InternalKim.g:8741:4: (lv_abstract_1_0= 'abstract' )
                    {
                    // InternalKim.g:8741:4: (lv_abstract_1_0= 'abstract' )
                    // InternalKim.g:8742:5: lv_abstract_1_0= 'abstract'
                    {
                    lv_abstract_1_0=(Token)match(input,139,FOLLOW_114); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_abstract_1_0, grammarAccess.getConceptStatementBodyAccess().getAbstractAbstractKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getConceptStatementBodyRule());
                      					}
                      					setWithLastConsumed(current, "abstract", true, "abstract");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:8754:3: ( ( (lv_root_2_0= 'root' ) ) | ( ( (lv_name_3_0= RULE_CAMELCASE_ID ) ) (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )? ) )
            int alt187=2;
            int LA187_0 = input.LA(1);

            if ( (LA187_0==80) ) {
                alt187=1;
            }
            else if ( (LA187_0==RULE_CAMELCASE_ID) ) {
                alt187=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 187, 0, input);

                throw nvae;
            }
            switch (alt187) {
                case 1 :
                    // InternalKim.g:8755:4: ( (lv_root_2_0= 'root' ) )
                    {
                    // InternalKim.g:8755:4: ( (lv_root_2_0= 'root' ) )
                    // InternalKim.g:8756:5: (lv_root_2_0= 'root' )
                    {
                    // InternalKim.g:8756:5: (lv_root_2_0= 'root' )
                    // InternalKim.g:8757:6: lv_root_2_0= 'root'
                    {
                    lv_root_2_0=(Token)match(input,80,FOLLOW_115); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_root_2_0, grammarAccess.getConceptStatementBodyAccess().getRootRootKeyword_2_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptStatementBodyRule());
                      						}
                      						setWithLastConsumed(current, "root", true, "root");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:8770:4: ( ( (lv_name_3_0= RULE_CAMELCASE_ID ) ) (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )? )
                    {
                    // InternalKim.g:8770:4: ( ( (lv_name_3_0= RULE_CAMELCASE_ID ) ) (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )? )
                    // InternalKim.g:8771:5: ( (lv_name_3_0= RULE_CAMELCASE_ID ) ) (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )?
                    {
                    // InternalKim.g:8771:5: ( (lv_name_3_0= RULE_CAMELCASE_ID ) )
                    // InternalKim.g:8772:6: (lv_name_3_0= RULE_CAMELCASE_ID )
                    {
                    // InternalKim.g:8772:6: (lv_name_3_0= RULE_CAMELCASE_ID )
                    // InternalKim.g:8773:7: lv_name_3_0= RULE_CAMELCASE_ID
                    {
                    lv_name_3_0=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_116); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_name_3_0, grammarAccess.getConceptStatementBodyAccess().getNameCAMELCASE_IDTerminalRuleCall_2_1_0_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getConceptStatementBodyRule());
                      							}
                      							setWithLastConsumed(
                      								current,
                      								"name",
                      								lv_name_3_0,
                      								"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                      						
                    }

                    }


                    }

                    // InternalKim.g:8789:5: (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )?
                    int alt186=2;
                    int LA186_0 = input.LA(1);

                    if ( (LA186_0==118) ) {
                        alt186=1;
                    }
                    switch (alt186) {
                        case 1 :
                            // InternalKim.g:8790:6: otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) )
                            {
                            otherlv_4=(Token)match(input,118,FOLLOW_9); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_4, grammarAccess.getConceptStatementBodyAccess().getIdentifiedKeyword_2_1_1_0());
                              					
                            }
                            otherlv_5=(Token)match(input,25,FOLLOW_99); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_5, grammarAccess.getConceptStatementBodyAccess().getAsKeyword_2_1_1_1());
                              					
                            }
                            // InternalKim.g:8798:6: ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) )
                            int alt184=2;
                            int LA184_0 = input.LA(1);

                            if ( (LA184_0==RULE_STRING||LA184_0==RULE_ID) ) {
                                alt184=1;
                            }
                            else if ( (LA184_0==RULE_INT) ) {
                                alt184=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 184, 0, input);

                                throw nvae;
                            }
                            switch (alt184) {
                                case 1 :
                                    // InternalKim.g:8799:7: ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) )
                                    {
                                    // InternalKim.g:8799:7: ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) )
                                    // InternalKim.g:8800:8: ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) )
                                    {
                                    // InternalKim.g:8800:8: ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) )
                                    // InternalKim.g:8801:9: (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING )
                                    {
                                    // InternalKim.g:8801:9: (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING )
                                    int alt183=2;
                                    int LA183_0 = input.LA(1);

                                    if ( (LA183_0==RULE_ID) ) {
                                        alt183=1;
                                    }
                                    else if ( (LA183_0==RULE_STRING) ) {
                                        alt183=2;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return current;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 183, 0, input);

                                        throw nvae;
                                    }
                                    switch (alt183) {
                                        case 1 :
                                            // InternalKim.g:8802:10: lv_stringIdentifier_6_1= RULE_ID
                                            {
                                            lv_stringIdentifier_6_1=(Token)match(input,RULE_ID,FOLLOW_92); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              										newLeafNode(lv_stringIdentifier_6_1, grammarAccess.getConceptStatementBodyAccess().getStringIdentifierIDTerminalRuleCall_2_1_1_2_0_0_0());
                                              									
                                            }
                                            if ( state.backtracking==0 ) {

                                              										if (current==null) {
                                              											current = createModelElement(grammarAccess.getConceptStatementBodyRule());
                                              										}
                                              										setWithLastConsumed(
                                              											current,
                                              											"stringIdentifier",
                                              											lv_stringIdentifier_6_1,
                                              											"org.eclipse.xtext.common.Terminals.ID");
                                              									
                                            }

                                            }
                                            break;
                                        case 2 :
                                            // InternalKim.g:8817:10: lv_stringIdentifier_6_2= RULE_STRING
                                            {
                                            lv_stringIdentifier_6_2=(Token)match(input,RULE_STRING,FOLLOW_92); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              										newLeafNode(lv_stringIdentifier_6_2, grammarAccess.getConceptStatementBodyAccess().getStringIdentifierSTRINGTerminalRuleCall_2_1_1_2_0_0_1());
                                              									
                                            }
                                            if ( state.backtracking==0 ) {

                                              										if (current==null) {
                                              											current = createModelElement(grammarAccess.getConceptStatementBodyRule());
                                              										}
                                              										setWithLastConsumed(
                                              											current,
                                              											"stringIdentifier",
                                              											lv_stringIdentifier_6_2,
                                              											"org.eclipse.xtext.common.Terminals.STRING");
                                              									
                                            }

                                            }
                                            break;

                                    }


                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:8835:7: ( (lv_intIdentifier_7_0= RULE_INT ) )
                                    {
                                    // InternalKim.g:8835:7: ( (lv_intIdentifier_7_0= RULE_INT ) )
                                    // InternalKim.g:8836:8: (lv_intIdentifier_7_0= RULE_INT )
                                    {
                                    // InternalKim.g:8836:8: (lv_intIdentifier_7_0= RULE_INT )
                                    // InternalKim.g:8837:9: lv_intIdentifier_7_0= RULE_INT
                                    {
                                    lv_intIdentifier_7_0=(Token)match(input,RULE_INT,FOLLOW_92); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_intIdentifier_7_0, grammarAccess.getConceptStatementBodyAccess().getIntIdentifierINTTerminalRuleCall_2_1_1_2_1_0());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getConceptStatementBodyRule());
                                      									}
                                      									setWithLastConsumed(
                                      										current,
                                      										"intIdentifier",
                                      										lv_intIdentifier_7_0,
                                      										"org.eclipse.xtext.common.Terminals.INT");
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }

                            otherlv_8=(Token)match(input,94,FOLLOW_100); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_8, grammarAccess.getConceptStatementBodyAccess().getByKeyword_2_1_1_3());
                              					
                            }
                            // InternalKim.g:8858:6: ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) )
                            // InternalKim.g:8859:7: ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) )
                            {
                            // InternalKim.g:8859:7: ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) )
                            // InternalKim.g:8860:8: (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH )
                            {
                            // InternalKim.g:8860:8: (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH )
                            int alt185=2;
                            int LA185_0 = input.LA(1);

                            if ( (LA185_0==RULE_UPPERCASE_ID) ) {
                                alt185=1;
                            }
                            else if ( (LA185_0==RULE_UPPERCASE_PATH) ) {
                                alt185=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 185, 0, input);

                                throw nvae;
                            }
                            switch (alt185) {
                                case 1 :
                                    // InternalKim.g:8861:9: lv_authority_9_1= RULE_UPPERCASE_ID
                                    {
                                    lv_authority_9_1=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_115); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_authority_9_1, grammarAccess.getConceptStatementBodyAccess().getAuthorityUPPERCASE_IDTerminalRuleCall_2_1_1_4_0_0());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getConceptStatementBodyRule());
                                      									}
                                      									setWithLastConsumed(
                                      										current,
                                      										"authority",
                                      										lv_authority_9_1,
                                      										"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                                      								
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:8876:9: lv_authority_9_2= RULE_UPPERCASE_PATH
                                    {
                                    lv_authority_9_2=(Token)match(input,RULE_UPPERCASE_PATH,FOLLOW_115); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_authority_9_2, grammarAccess.getConceptStatementBodyAccess().getAuthorityUPPERCASE_PATHTerminalRuleCall_2_1_1_4_0_1());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getConceptStatementBodyRule());
                                      									}
                                      									setWithLastConsumed(
                                      										current,
                                      										"authority",
                                      										lv_authority_9_2,
                                      										"org.integratedmodelling.kim.Kim.UPPERCASE_PATH");
                                      								
                                    }

                                    }
                                    break;

                            }


                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }

            // InternalKim.g:8896:3: ( ( ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ ) ) | ({...}? => ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) ) ) )* ) ) )
            // InternalKim.g:8897:4: ( ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ ) ) | ({...}? => ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) ) ) )* ) )
            {
            // InternalKim.g:8897:4: ( ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ ) ) | ({...}? => ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) ) ) )* ) )
            // InternalKim.g:8898:5: ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ ) ) | ({...}? => ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());
            // InternalKim.g:8901:5: ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ ) ) | ({...}? => ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) ) ) )* )
            // InternalKim.g:8902:6: ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ ) ) | ({...}? => ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) ) ) )*
            {
            // InternalKim.g:8902:6: ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ ) ) | ({...}? => ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) ) ) )*
            loop214:
            do {
                int alt214=24;
                alt214 = dfa214.predict(input);
                switch (alt214) {
            	case 1 :
            	    // InternalKim.g:8903:4: ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) )
            	    {
            	    // InternalKim.g:8903:4: ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) )
            	    // InternalKim.g:8904:5: {...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 0)");
            	    }
            	    // InternalKim.g:8904:117: ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) )
            	    // InternalKim.g:8905:6: ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 0);
            	    // InternalKim.g:8908:9: ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) )
            	    // InternalKim.g:8908:10: {...}? => ( (lv_docstring_11_0= RULE_STRING ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:8908:19: ( (lv_docstring_11_0= RULE_STRING ) )
            	    // InternalKim.g:8908:20: (lv_docstring_11_0= RULE_STRING )
            	    {
            	    // InternalKim.g:8908:20: (lv_docstring_11_0= RULE_STRING )
            	    // InternalKim.g:8909:10: lv_docstring_11_0= RULE_STRING
            	    {
            	    lv_docstring_11_0=(Token)match(input,RULE_STRING,FOLLOW_115); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(lv_docstring_11_0, grammarAccess.getConceptStatementBodyAccess().getDocstringSTRINGTerminalRuleCall_3_0_0());
            	      									
            	    }
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	      										}
            	      										setWithLastConsumed(
            	      											current,
            	      											"docstring",
            	      											lv_docstring_11_0,
            	      											"org.eclipse.xtext.common.Terminals.STRING");
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKim.g:8930:4: ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) )
            	    {
            	    // InternalKim.g:8930:4: ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) )
            	    // InternalKim.g:8931:5: {...}? => ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 1)");
            	    }
            	    // InternalKim.g:8931:117: ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
            	    // InternalKim.g:8932:6: ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 1);
            	    // InternalKim.g:8935:9: ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    // InternalKim.g:8935:10: {...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:8935:19: ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) )
            	    // InternalKim.g:8935:20: ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) )
            	    {
            	    // InternalKim.g:8935:20: ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) )
            	    int alt189=2;
            	    int LA189_0 = input.LA(1);

            	    if ( (LA189_0==142) ) {
            	        alt189=1;
            	    }
            	    else if ( (LA189_0==144) ) {
            	        alt189=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 189, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt189) {
            	        case 1 :
            	            // InternalKim.g:8936:10: (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? )
            	            {
            	            // InternalKim.g:8936:10: (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? )
            	            // InternalKim.g:8937:11: otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )?
            	            {
            	            otherlv_12=(Token)match(input,142,FOLLOW_117); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_12, grammarAccess.getConceptStatementBodyAccess().getIsKeyword_3_1_0_0_0());
            	              										
            	            }
            	            // InternalKim.g:8941:11: ( (lv_coreConcept_13_0= 'core' ) )?
            	            int alt188=2;
            	            int LA188_0 = input.LA(1);

            	            if ( (LA188_0==143) ) {
            	                alt188=1;
            	            }
            	            switch (alt188) {
            	                case 1 :
            	                    // InternalKim.g:8942:12: (lv_coreConcept_13_0= 'core' )
            	                    {
            	                    // InternalKim.g:8942:12: (lv_coreConcept_13_0= 'core' )
            	                    // InternalKim.g:8943:13: lv_coreConcept_13_0= 'core'
            	                    {
            	                    lv_coreConcept_13_0=(Token)match(input,143,FOLLOW_118); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(lv_coreConcept_13_0, grammarAccess.getConceptStatementBodyAccess().getCoreConceptCoreKeyword_3_1_0_0_1_0());
            	                      												
            	                    }
            	                    if ( state.backtracking==0 ) {

            	                      													if (current==null) {
            	                      														current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	                      													}
            	                      													setWithLastConsumed(current, "coreConcept", true, "core");
            	                      												
            	                    }

            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:8957:10: ( (lv_alias_14_0= 'equals' ) )
            	            {
            	            // InternalKim.g:8957:10: ( (lv_alias_14_0= 'equals' ) )
            	            // InternalKim.g:8958:11: (lv_alias_14_0= 'equals' )
            	            {
            	            // InternalKim.g:8958:11: (lv_alias_14_0= 'equals' )
            	            // InternalKim.g:8959:12: lv_alias_14_0= 'equals'
            	            {
            	            lv_alias_14_0=(Token)match(input,144,FOLLOW_118); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_alias_14_0, grammarAccess.getConceptStatementBodyAccess().getAliasEqualsKeyword_3_1_0_1_0());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												setWithLastConsumed(current, "alias", true, "equals");
            	              											
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }

            	    // InternalKim.g:8972:9: ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) )
            	    int alt192=2;
            	    int LA192_0 = input.LA(1);

            	    if ( (LA192_0==145) ) {
            	        alt192=1;
            	    }
            	    else if ( ((LA192_0>=RULE_LOWERCASE_ID && LA192_0<=RULE_STRING)||LA192_0==RULE_CAMELCASE_ID||LA192_0==34||(LA192_0>=108 && LA192_0<=109)||(LA192_0>=116 && LA192_0<=117)||(LA192_0>=119 && LA192_0<=130)) ) {
            	        alt192=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 192, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt192) {
            	        case 1 :
            	            // InternalKim.g:8973:10: ( (lv_nothing_15_0= 'nothing' ) )
            	            {
            	            // InternalKim.g:8973:10: ( (lv_nothing_15_0= 'nothing' ) )
            	            // InternalKim.g:8974:11: (lv_nothing_15_0= 'nothing' )
            	            {
            	            // InternalKim.g:8974:11: (lv_nothing_15_0= 'nothing' )
            	            // InternalKim.g:8975:12: lv_nothing_15_0= 'nothing'
            	            {
            	            lv_nothing_15_0=(Token)match(input,145,FOLLOW_115); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_nothing_15_0, grammarAccess.getConceptStatementBodyAccess().getNothingNothingKeyword_3_1_1_0_0());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												setWithLastConsumed(current, "nothing", true, "nothing");
            	              											
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:8988:10: ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* )
            	            {
            	            // InternalKim.g:8988:10: ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* )
            	            // InternalKim.g:8989:11: ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )*
            	            {
            	            // InternalKim.g:8989:11: ( (lv_parents_16_0= ruleConceptDeclaration ) )
            	            // InternalKim.g:8990:12: (lv_parents_16_0= ruleConceptDeclaration )
            	            {
            	            // InternalKim.g:8990:12: (lv_parents_16_0= ruleConceptDeclaration )
            	            // InternalKim.g:8991:13: lv_parents_16_0= ruleConceptDeclaration
            	            {
            	            if ( state.backtracking==0 ) {

            	              													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getParentsConceptDeclarationParserRuleCall_3_1_1_1_0_0());
            	              												
            	            }
            	            pushFollow(FOLLOW_119);
            	            lv_parents_16_0=ruleConceptDeclaration();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	              													}
            	              													add(
            	              														current,
            	              														"parents",
            	              														lv_parents_16_0,
            	              														"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	              													afterParserOrEnumRuleCall();
            	              												
            	            }

            	            }


            	            }

            	            // InternalKim.g:9008:11: ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )*
            	            loop191:
            	            do {
            	                int alt191=2;
            	                int LA191_0 = input.LA(1);

            	                if ( (LA191_0==22||(LA191_0>=131 && LA191_0<=132)) ) {
            	                    alt191=1;
            	                }


            	                switch (alt191) {
            	            	case 1 :
            	            	    // InternalKim.g:9009:12: ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) )
            	            	    {
            	            	    // InternalKim.g:9009:12: ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) )
            	            	    // InternalKim.g:9010:13: ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) )
            	            	    {
            	            	    // InternalKim.g:9010:13: ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) )
            	            	    // InternalKim.g:9011:14: (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' )
            	            	    {
            	            	    // InternalKim.g:9011:14: (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' )
            	            	    int alt190=3;
            	            	    switch ( input.LA(1) ) {
            	            	    case 22:
            	            	        {
            	            	        alt190=1;
            	            	        }
            	            	        break;
            	            	    case 131:
            	            	        {
            	            	        alt190=2;
            	            	        }
            	            	        break;
            	            	    case 132:
            	            	        {
            	            	        alt190=3;
            	            	        }
            	            	        break;
            	            	    default:
            	            	        if (state.backtracking>0) {state.failed=true; return current;}
            	            	        NoViableAltException nvae =
            	            	            new NoViableAltException("", 190, 0, input);

            	            	        throw nvae;
            	            	    }

            	            	    switch (alt190) {
            	            	        case 1 :
            	            	            // InternalKim.g:9012:15: lv_connectors_17_1= ','
            	            	            {
            	            	            lv_connectors_17_1=(Token)match(input,22,FOLLOW_16); if (state.failed) return current;
            	            	            if ( state.backtracking==0 ) {

            	            	              															newLeafNode(lv_connectors_17_1, grammarAccess.getConceptStatementBodyAccess().getConnectorsCommaKeyword_3_1_1_1_1_0_0_0());
            	            	              														
            	            	            }
            	            	            if ( state.backtracking==0 ) {

            	            	              															if (current==null) {
            	            	              																current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	            	              															}
            	            	              															addWithLastConsumed(current, "connectors", lv_connectors_17_1, null);
            	            	              														
            	            	            }

            	            	            }
            	            	            break;
            	            	        case 2 :
            	            	            // InternalKim.g:9023:15: lv_connectors_17_2= 'or'
            	            	            {
            	            	            lv_connectors_17_2=(Token)match(input,131,FOLLOW_16); if (state.failed) return current;
            	            	            if ( state.backtracking==0 ) {

            	            	              															newLeafNode(lv_connectors_17_2, grammarAccess.getConceptStatementBodyAccess().getConnectorsOrKeyword_3_1_1_1_1_0_0_1());
            	            	              														
            	            	            }
            	            	            if ( state.backtracking==0 ) {

            	            	              															if (current==null) {
            	            	              																current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	            	              															}
            	            	              															addWithLastConsumed(current, "connectors", lv_connectors_17_2, null);
            	            	              														
            	            	            }

            	            	            }
            	            	            break;
            	            	        case 3 :
            	            	            // InternalKim.g:9034:15: lv_connectors_17_3= 'and'
            	            	            {
            	            	            lv_connectors_17_3=(Token)match(input,132,FOLLOW_16); if (state.failed) return current;
            	            	            if ( state.backtracking==0 ) {

            	            	              															newLeafNode(lv_connectors_17_3, grammarAccess.getConceptStatementBodyAccess().getConnectorsAndKeyword_3_1_1_1_1_0_0_2());
            	            	              														
            	            	            }
            	            	            if ( state.backtracking==0 ) {

            	            	              															if (current==null) {
            	            	              																current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	            	              															}
            	            	              															addWithLastConsumed(current, "connectors", lv_connectors_17_3, null);
            	            	              														
            	            	            }

            	            	            }
            	            	            break;

            	            	    }


            	            	    }


            	            	    }

            	            	    // InternalKim.g:9047:12: ( (lv_parents_18_0= ruleConceptDeclaration ) )
            	            	    // InternalKim.g:9048:13: (lv_parents_18_0= ruleConceptDeclaration )
            	            	    {
            	            	    // InternalKim.g:9048:13: (lv_parents_18_0= ruleConceptDeclaration )
            	            	    // InternalKim.g:9049:14: lv_parents_18_0= ruleConceptDeclaration
            	            	    {
            	            	    if ( state.backtracking==0 ) {

            	            	      														newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getParentsConceptDeclarationParserRuleCall_3_1_1_1_1_1_0());
            	            	      													
            	            	    }
            	            	    pushFollow(FOLLOW_119);
            	            	    lv_parents_18_0=ruleConceptDeclaration();

            	            	    state._fsp--;
            	            	    if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      														if (current==null) {
            	            	      															current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	            	      														}
            	            	      														add(
            	            	      															current,
            	            	      															"parents",
            	            	      															lv_parents_18_0,
            	            	      															"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	            	      														afterParserOrEnumRuleCall();
            	            	      													
            	            	    }

            	            	    }


            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop191;
            	                }
            	            } while (true);


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalKim.g:9075:4: ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
            	    {
            	    // InternalKim.g:9075:4: ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
            	    // InternalKim.g:9076:5: {...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 2)");
            	    }
            	    // InternalKim.g:9076:117: ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    // InternalKim.g:9077:6: ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 2);
            	    // InternalKim.g:9080:9: ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) )
            	    // InternalKim.g:9080:10: {...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:9080:19: ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) )
            	    int alt195=2;
            	    int LA195_0 = input.LA(1);

            	    if ( (LA195_0==146) ) {
            	        alt195=1;
            	    }
            	    else if ( (LA195_0==147) ) {
            	        alt195=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 195, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt195) {
            	        case 1 :
            	            // InternalKim.g:9080:20: (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* )
            	            {
            	            // InternalKim.g:9080:20: (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* )
            	            // InternalKim.g:9081:10: otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )*
            	            {
            	            otherlv_19=(Token)match(input,146,FOLLOW_6); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_19, grammarAccess.getConceptStatementBodyAccess().getExposesKeyword_3_2_0_0());
            	              									
            	            }
            	            // InternalKim.g:9085:10: ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) )
            	            // InternalKim.g:9086:11: (lv_contextualizedTraits_20_0= ruleObservableSemantics )
            	            {
            	            // InternalKim.g:9086:11: (lv_contextualizedTraits_20_0= ruleObservableSemantics )
            	            // InternalKim.g:9087:12: lv_contextualizedTraits_20_0= ruleObservableSemantics
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getContextualizedTraitsObservableSemanticsParserRuleCall_3_2_0_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_120);
            	            lv_contextualizedTraits_20_0=ruleObservableSemantics();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												add(
            	              													current,
            	              													"contextualizedTraits",
            	              													lv_contextualizedTraits_20_0,
            	              													"org.integratedmodelling.kim.Kim.ObservableSemantics");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }

            	            // InternalKim.g:9104:10: (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )*
            	            loop193:
            	            do {
            	                int alt193=2;
            	                int LA193_0 = input.LA(1);

            	                if ( (LA193_0==22) ) {
            	                    alt193=1;
            	                }


            	                switch (alt193) {
            	            	case 1 :
            	            	    // InternalKim.g:9105:11: otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) )
            	            	    {
            	            	    otherlv_21=(Token)match(input,22,FOLLOW_6); if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      											newLeafNode(otherlv_21, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_2_0_2_0());
            	            	      										
            	            	    }
            	            	    // InternalKim.g:9109:11: ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) )
            	            	    // InternalKim.g:9110:12: (lv_contextualizedTraits_22_0= ruleObservableSemantics )
            	            	    {
            	            	    // InternalKim.g:9110:12: (lv_contextualizedTraits_22_0= ruleObservableSemantics )
            	            	    // InternalKim.g:9111:13: lv_contextualizedTraits_22_0= ruleObservableSemantics
            	            	    {
            	            	    if ( state.backtracking==0 ) {

            	            	      													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getContextualizedTraitsObservableSemanticsParserRuleCall_3_2_0_2_1_0());
            	            	      												
            	            	    }
            	            	    pushFollow(FOLLOW_120);
            	            	    lv_contextualizedTraits_22_0=ruleObservableSemantics();

            	            	    state._fsp--;
            	            	    if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      													if (current==null) {
            	            	      														current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	            	      													}
            	            	      													add(
            	            	      														current,
            	            	      														"contextualizedTraits",
            	            	      														lv_contextualizedTraits_22_0,
            	            	      														"org.integratedmodelling.kim.Kim.ObservableSemantics");
            	            	      													afterParserOrEnumRuleCall();
            	            	      												
            	            	    }

            	            	    }


            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop193;
            	                }
            	            } while (true);


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:9131:9: ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* )
            	            {
            	            // InternalKim.g:9131:9: ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* )
            	            // InternalKim.g:9132:10: ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )*
            	            {
            	            // InternalKim.g:9132:10: ( (lv_specific_23_0= 'exposing' ) )
            	            // InternalKim.g:9133:11: (lv_specific_23_0= 'exposing' )
            	            {
            	            // InternalKim.g:9133:11: (lv_specific_23_0= 'exposing' )
            	            // InternalKim.g:9134:12: lv_specific_23_0= 'exposing'
            	            {
            	            lv_specific_23_0=(Token)match(input,147,FOLLOW_16); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_specific_23_0, grammarAccess.getConceptStatementBodyAccess().getSpecificExposingKeyword_3_2_1_0_0());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												setWithLastConsumed(current, "specific", true, "exposing");
            	              											
            	            }

            	            }


            	            }

            	            // InternalKim.g:9146:10: ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) )
            	            // InternalKim.g:9147:11: (lv_contextualizesTraits_24_0= ruleConceptDeclaration )
            	            {
            	            // InternalKim.g:9147:11: (lv_contextualizesTraits_24_0= ruleConceptDeclaration )
            	            // InternalKim.g:9148:12: lv_contextualizesTraits_24_0= ruleConceptDeclaration
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getContextualizesTraitsConceptDeclarationParserRuleCall_3_2_1_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_120);
            	            lv_contextualizesTraits_24_0=ruleConceptDeclaration();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												add(
            	              													current,
            	              													"contextualizesTraits",
            	              													lv_contextualizesTraits_24_0,
            	              													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }

            	            // InternalKim.g:9165:10: (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )*
            	            loop194:
            	            do {
            	                int alt194=2;
            	                int LA194_0 = input.LA(1);

            	                if ( (LA194_0==22) ) {
            	                    alt194=1;
            	                }


            	                switch (alt194) {
            	            	case 1 :
            	            	    // InternalKim.g:9166:11: otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) )
            	            	    {
            	            	    otherlv_25=(Token)match(input,22,FOLLOW_16); if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      											newLeafNode(otherlv_25, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_2_1_2_0());
            	            	      										
            	            	    }
            	            	    // InternalKim.g:9170:11: ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) )
            	            	    // InternalKim.g:9171:12: (lv_contextualizesTraits_26_0= ruleConceptDeclaration )
            	            	    {
            	            	    // InternalKim.g:9171:12: (lv_contextualizesTraits_26_0= ruleConceptDeclaration )
            	            	    // InternalKim.g:9172:13: lv_contextualizesTraits_26_0= ruleConceptDeclaration
            	            	    {
            	            	    if ( state.backtracking==0 ) {

            	            	      													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getContextualizesTraitsConceptDeclarationParserRuleCall_3_2_1_2_1_0());
            	            	      												
            	            	    }
            	            	    pushFollow(FOLLOW_120);
            	            	    lv_contextualizesTraits_26_0=ruleConceptDeclaration();

            	            	    state._fsp--;
            	            	    if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      													if (current==null) {
            	            	      														current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	            	      													}
            	            	      													add(
            	            	      														current,
            	            	      														"contextualizesTraits",
            	            	      														lv_contextualizesTraits_26_0,
            	            	      														"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	            	      													afterParserOrEnumRuleCall();
            	            	      												
            	            	    }

            	            	    }


            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop194;
            	                }
            	            } while (true);


            	            }


            	            }
            	            break;

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalKim.g:9197:4: ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) )
            	    {
            	    // InternalKim.g:9197:4: ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) )
            	    // InternalKim.g:9198:5: {...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 3)");
            	    }
            	    // InternalKim.g:9198:117: ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) )
            	    // InternalKim.g:9199:6: ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 3);
            	    // InternalKim.g:9202:9: ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) )
            	    // InternalKim.g:9202:10: {...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:9202:19: (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) )
            	    // InternalKim.g:9202:20: otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) )
            	    {
            	    otherlv_27=(Token)match(input,148,FOLLOW_121); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_27, grammarAccess.getConceptStatementBodyAccess().getDefinesKeyword_3_3_0());
            	      								
            	    }
            	    // InternalKim.g:9206:9: ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) )
            	    int alt196=2;
            	    int LA196_0 = input.LA(1);

            	    if ( (LA196_0==149) ) {
            	        alt196=1;
            	    }
            	    else if ( (LA196_0==RULE_LOWERCASE_ID||LA196_0==RULE_CAMELCASE_ID||LA196_0==34||(LA196_0>=108 && LA196_0<=109)||(LA196_0>=116 && LA196_0<=117)||(LA196_0>=119 && LA196_0<=130)) ) {
            	        alt196=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 196, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt196) {
            	        case 1 :
            	            // InternalKim.g:9207:10: (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) )
            	            {
            	            // InternalKim.g:9207:10: (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) )
            	            // InternalKim.g:9208:11: otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) )
            	            {
            	            otherlv_28=(Token)match(input,149,FOLLOW_122); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_28, grammarAccess.getConceptStatementBodyAccess().getAuthorityKeyword_3_3_1_0_0());
            	              										
            	            }
            	            // InternalKim.g:9212:11: ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) )
            	            // InternalKim.g:9213:12: (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH )
            	            {
            	            // InternalKim.g:9213:12: (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH )
            	            // InternalKim.g:9214:13: lv_definedAuthority_29_0= RULE_UPPERCASE_PATH
            	            {
            	            lv_definedAuthority_29_0=(Token)match(input,RULE_UPPERCASE_PATH,FOLLOW_115); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_definedAuthority_29_0, grammarAccess.getConceptStatementBodyAccess().getDefinedAuthorityUPPERCASE_PATHTerminalRuleCall_3_3_1_0_1_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	              													}
            	              													setWithLastConsumed(
            	              														current,
            	              														"definedAuthority",
            	              														lv_definedAuthority_29_0,
            	              														"org.integratedmodelling.kim.Kim.UPPERCASE_PATH");
            	              												
            	            }

            	            }


            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:9232:10: ( (lv_upperConcept_30_0= ruleConcept ) )
            	            {
            	            // InternalKim.g:9232:10: ( (lv_upperConcept_30_0= ruleConcept ) )
            	            // InternalKim.g:9233:11: (lv_upperConcept_30_0= ruleConcept )
            	            {
            	            // InternalKim.g:9233:11: (lv_upperConcept_30_0= ruleConcept )
            	            // InternalKim.g:9234:12: lv_upperConcept_30_0= ruleConcept
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getUpperConceptConceptParserRuleCall_3_3_1_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_115);
            	            lv_upperConcept_30_0=ruleConcept();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												set(
            	              													current,
            	              													"upperConcept",
            	              													lv_upperConcept_30_0,
            	              													"org.integratedmodelling.kim.Kim.Concept");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalKim.g:9258:4: ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:9258:4: ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) )
            	    // InternalKim.g:9259:5: {...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 4) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 4)");
            	    }
            	    // InternalKim.g:9259:117: ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) )
            	    // InternalKim.g:9260:6: ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 4);
            	    // InternalKim.g:9263:9: ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) )
            	    // InternalKim.g:9263:10: {...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:9263:19: (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* )
            	    // InternalKim.g:9263:20: otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )*
            	    {
            	    otherlv_31=(Token)match(input,150,FOLLOW_123); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_31, grammarAccess.getConceptStatementBodyAccess().getRequiresKeyword_3_4_0());
            	      								
            	    }
            	    // InternalKim.g:9267:9: ( (lv_requirements_32_0= ruleIdentityRequirement ) )
            	    // InternalKim.g:9268:10: (lv_requirements_32_0= ruleIdentityRequirement )
            	    {
            	    // InternalKim.g:9268:10: (lv_requirements_32_0= ruleIdentityRequirement )
            	    // InternalKim.g:9269:11: lv_requirements_32_0= ruleIdentityRequirement
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRequirementsIdentityRequirementParserRuleCall_3_4_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_120);
            	    lv_requirements_32_0=ruleIdentityRequirement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"requirements",
            	      												lv_requirements_32_0,
            	      												"org.integratedmodelling.kim.Kim.IdentityRequirement");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:9286:9: (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )*
            	    loop197:
            	    do {
            	        int alt197=2;
            	        int LA197_0 = input.LA(1);

            	        if ( (LA197_0==22) ) {
            	            alt197=1;
            	        }


            	        switch (alt197) {
            	    	case 1 :
            	    	    // InternalKim.g:9287:10: otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) )
            	    	    {
            	    	    otherlv_33=(Token)match(input,22,FOLLOW_123); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_33, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_4_2_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:9291:10: ( (lv_requirements_34_0= ruleIdentityRequirement ) )
            	    	    // InternalKim.g:9292:11: (lv_requirements_34_0= ruleIdentityRequirement )
            	    	    {
            	    	    // InternalKim.g:9292:11: (lv_requirements_34_0= ruleIdentityRequirement )
            	    	    // InternalKim.g:9293:12: lv_requirements_34_0= ruleIdentityRequirement
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRequirementsIdentityRequirementParserRuleCall_3_4_2_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_120);
            	    	    lv_requirements_34_0=ruleIdentityRequirement();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"requirements",
            	    	      													lv_requirements_34_0,
            	    	      													"org.integratedmodelling.kim.Kim.IdentityRequirement");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop197;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalKim.g:9317:4: ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:9317:4: ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:9318:5: {...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 5) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 5)");
            	    }
            	    // InternalKim.g:9318:117: ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:9319:6: ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 5);
            	    // InternalKim.g:9322:9: ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) )
            	    // InternalKim.g:9322:10: {...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:9322:19: (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) )
            	    // InternalKim.g:9322:20: otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) )
            	    {
            	    otherlv_35=(Token)match(input,151,FOLLOW_16); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_35, grammarAccess.getConceptStatementBodyAccess().getDescribesKeyword_3_5_0());
            	      								
            	    }
            	    // InternalKim.g:9326:9: ( (lv_describedQuality_36_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:9327:10: (lv_describedQuality_36_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:9327:10: (lv_describedQuality_36_0= ruleConceptDeclaration )
            	    // InternalKim.g:9328:11: lv_describedQuality_36_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDescribedQualityConceptDeclarationParserRuleCall_3_5_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_115);
            	    lv_describedQuality_36_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											set(
            	      												current,
            	      												"describedQuality",
            	      												lv_describedQuality_36_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 7 :
            	    // InternalKim.g:9351:4: ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:9351:4: ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:9352:5: {...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 6) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 6)");
            	    }
            	    // InternalKim.g:9352:117: ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:9353:6: ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 6);
            	    // InternalKim.g:9356:9: ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) )
            	    // InternalKim.g:9356:10: {...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:9356:19: (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) )
            	    // InternalKim.g:9356:20: otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) )
            	    {
            	    otherlv_37=(Token)match(input,152,FOLLOW_65); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_37, grammarAccess.getConceptStatementBodyAccess().getIncreasesKeyword_3_6_0());
            	      								
            	    }
            	    otherlv_38=(Token)match(input,38,FOLLOW_16); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_38, grammarAccess.getConceptStatementBodyAccess().getWithKeyword_3_6_1());
            	      								
            	    }
            	    // InternalKim.g:9364:9: ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:9365:10: (lv_describedProportionality_39_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:9365:10: (lv_describedProportionality_39_0= ruleConceptDeclaration )
            	    // InternalKim.g:9366:11: lv_describedProportionality_39_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDescribedProportionalityConceptDeclarationParserRuleCall_3_6_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_115);
            	    lv_describedProportionality_39_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											set(
            	      												current,
            	      												"describedProportionality",
            	      												lv_describedProportionality_39_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 8 :
            	    // InternalKim.g:9389:4: ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:9389:4: ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:9390:5: {...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 7) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 7)");
            	    }
            	    // InternalKim.g:9390:117: ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:9391:6: ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 7);
            	    // InternalKim.g:9394:9: ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) )
            	    // InternalKim.g:9394:10: {...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:9394:19: (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) )
            	    // InternalKim.g:9394:20: otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) )
            	    {
            	    otherlv_40=(Token)match(input,153,FOLLOW_65); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_40, grammarAccess.getConceptStatementBodyAccess().getDecreasesKeyword_3_7_0());
            	      								
            	    }
            	    otherlv_41=(Token)match(input,38,FOLLOW_16); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_41, grammarAccess.getConceptStatementBodyAccess().getWithKeyword_3_7_1());
            	      								
            	    }
            	    // InternalKim.g:9402:9: ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:9403:10: (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:9403:10: (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration )
            	    // InternalKim.g:9404:11: lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDescribedInverseProportionalityQualityConceptDeclarationParserRuleCall_3_7_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_115);
            	    lv_describedInverseProportionalityQuality_42_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											set(
            	      												current,
            	      												"describedInverseProportionalityQuality",
            	      												lv_describedInverseProportionalityQuality_42_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 9 :
            	    // InternalKim.g:9427:4: ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:9427:4: ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:9428:5: {...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 8) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 8)");
            	    }
            	    // InternalKim.g:9428:117: ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:9429:6: ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 8);
            	    // InternalKim.g:9432:9: ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) )
            	    // InternalKim.g:9432:10: {...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:9432:19: (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) )
            	    // InternalKim.g:9432:20: otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) )
            	    {
            	    otherlv_43=(Token)match(input,154,FOLLOW_16); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_43, grammarAccess.getConceptStatementBodyAccess().getMarksKeyword_3_8_0());
            	      								
            	    }
            	    // InternalKim.g:9436:9: ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:9437:10: (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:9437:10: (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration )
            	    // InternalKim.g:9438:11: lv_describedNonzeroQuality_44_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDescribedNonzeroQualityConceptDeclarationParserRuleCall_3_8_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_115);
            	    lv_describedNonzeroQuality_44_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											set(
            	      												current,
            	      												"describedNonzeroQuality",
            	      												lv_describedNonzeroQuality_44_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 10 :
            	    // InternalKim.g:9461:4: ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:9461:4: ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:9462:5: {...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 9) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 9)");
            	    }
            	    // InternalKim.g:9462:117: ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:9463:6: ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 9);
            	    // InternalKim.g:9466:9: ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) )
            	    // InternalKim.g:9466:10: {...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:9466:19: (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) )
            	    // InternalKim.g:9466:20: otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) )
            	    {
            	    otherlv_45=(Token)match(input,155,FOLLOW_16); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_45, grammarAccess.getConceptStatementBodyAccess().getClassifiesKeyword_3_9_0());
            	      								
            	    }
            	    // InternalKim.g:9470:9: ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:9471:10: (lv_classifiesQuality_46_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:9471:10: (lv_classifiesQuality_46_0= ruleConceptDeclaration )
            	    // InternalKim.g:9472:11: lv_classifiesQuality_46_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getClassifiesQualityConceptDeclarationParserRuleCall_3_9_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_115);
            	    lv_classifiesQuality_46_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											set(
            	      												current,
            	      												"classifiesQuality",
            	      												lv_classifiesQuality_46_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 11 :
            	    // InternalKim.g:9495:4: ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:9495:4: ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:9496:5: {...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 10) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 10)");
            	    }
            	    // InternalKim.g:9496:118: ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:9497:6: ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 10);
            	    // InternalKim.g:9500:9: ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) )
            	    // InternalKim.g:9500:10: {...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:9500:19: (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) )
            	    // InternalKim.g:9500:20: otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) )
            	    {
            	    otherlv_47=(Token)match(input,156,FOLLOW_16); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_47, grammarAccess.getConceptStatementBodyAccess().getDiscretizesKeyword_3_10_0());
            	      								
            	    }
            	    // InternalKim.g:9504:9: ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:9505:10: (lv_discretizesQuality_48_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:9505:10: (lv_discretizesQuality_48_0= ruleConceptDeclaration )
            	    // InternalKim.g:9506:11: lv_discretizesQuality_48_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDiscretizesQualityConceptDeclarationParserRuleCall_3_10_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_115);
            	    lv_discretizesQuality_48_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											set(
            	      												current,
            	      												"discretizesQuality",
            	      												lv_discretizesQuality_48_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 12 :
            	    // InternalKim.g:9529:4: ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:9529:4: ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    // InternalKim.g:9530:5: {...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 11) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 11)");
            	    }
            	    // InternalKim.g:9530:118: ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) )
            	    // InternalKim.g:9531:6: ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 11);
            	    // InternalKim.g:9534:9: ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) )
            	    // InternalKim.g:9534:10: {...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:9534:19: (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* )
            	    // InternalKim.g:9534:20: otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )*
            	    {
            	    otherlv_49=(Token)match(input,157,FOLLOW_16); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_49, grammarAccess.getConceptStatementBodyAccess().getInheritsKeyword_3_11_0());
            	      								
            	    }
            	    // InternalKim.g:9538:9: ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:9539:10: (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:9539:10: (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration )
            	    // InternalKim.g:9540:11: lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getActuallyInheritedTraitsConceptDeclarationParserRuleCall_3_11_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_120);
            	    lv_actuallyInheritedTraits_50_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"actuallyInheritedTraits",
            	      												lv_actuallyInheritedTraits_50_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:9557:9: (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )*
            	    loop198:
            	    do {
            	        int alt198=2;
            	        int LA198_0 = input.LA(1);

            	        if ( (LA198_0==22) ) {
            	            alt198=1;
            	        }


            	        switch (alt198) {
            	    	case 1 :
            	    	    // InternalKim.g:9558:10: otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) )
            	    	    {
            	    	    otherlv_51=(Token)match(input,22,FOLLOW_16); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_51, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_11_2_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:9562:10: ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) )
            	    	    // InternalKim.g:9563:11: (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration )
            	    	    {
            	    	    // InternalKim.g:9563:11: (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration )
            	    	    // InternalKim.g:9564:12: lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getActuallyInheritedTraitsConceptDeclarationParserRuleCall_3_11_2_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_120);
            	    	    lv_actuallyInheritedTraits_52_0=ruleConceptDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"actuallyInheritedTraits",
            	    	      													lv_actuallyInheritedTraits_52_0,
            	    	      													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop198;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 13 :
            	    // InternalKim.g:9588:4: ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
            	    {
            	    // InternalKim.g:9588:4: ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
            	    // InternalKim.g:9589:5: {...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 12) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 12)");
            	    }
            	    // InternalKim.g:9589:118: ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    // InternalKim.g:9590:6: ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 12);
            	    // InternalKim.g:9593:9: ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) )
            	    // InternalKim.g:9593:10: {...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:9593:19: (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) )
            	    // InternalKim.g:9593:20: otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* )
            	    {
            	    otherlv_53=(Token)match(input,158,FOLLOW_124); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_53, grammarAccess.getConceptStatementBodyAccess().getHasKeyword_3_12_0());
            	      								
            	    }
            	    otherlv_54=(Token)match(input,159,FOLLOW_16); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_54, grammarAccess.getConceptStatementBodyAccess().getRoleKeyword_3_12_1());
            	      								
            	    }
            	    // InternalKim.g:9601:9: ( (lv_roles_55_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:9602:10: (lv_roles_55_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:9602:10: (lv_roles_55_0= ruleConceptDeclaration )
            	    // InternalKim.g:9603:11: lv_roles_55_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRolesConceptDeclarationParserRuleCall_3_12_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_125);
            	    lv_roles_55_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"roles",
            	      												lv_roles_55_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:9620:9: (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )*
            	    loop199:
            	    do {
            	        int alt199=2;
            	        int LA199_0 = input.LA(1);

            	        if ( (LA199_0==22) ) {
            	            alt199=1;
            	        }


            	        switch (alt199) {
            	    	case 1 :
            	    	    // InternalKim.g:9621:10: otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) )
            	    	    {
            	    	    otherlv_56=(Token)match(input,22,FOLLOW_16); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_56, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_12_3_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:9625:10: ( (lv_roles_57_0= ruleConceptDeclaration ) )
            	    	    // InternalKim.g:9626:11: (lv_roles_57_0= ruleConceptDeclaration )
            	    	    {
            	    	    // InternalKim.g:9626:11: (lv_roles_57_0= ruleConceptDeclaration )
            	    	    // InternalKim.g:9627:12: lv_roles_57_0= ruleConceptDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRolesConceptDeclarationParserRuleCall_3_12_3_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_125);
            	    	    lv_roles_57_0=ruleConceptDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"roles",
            	    	      													lv_roles_57_0,
            	    	      													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop199;
            	        }
            	    } while (true);

            	    // InternalKim.g:9645:9: (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )?
            	    int alt201=2;
            	    int LA201_0 = input.LA(1);

            	    if ( (LA201_0==101) ) {
            	        alt201=1;
            	    }
            	    switch (alt201) {
            	        case 1 :
            	            // InternalKim.g:9646:10: otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )*
            	            {
            	            otherlv_58=(Token)match(input,101,FOLLOW_16); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_58, grammarAccess.getConceptStatementBodyAccess().getForKeyword_3_12_4_0());
            	              									
            	            }
            	            // InternalKim.g:9650:10: ( (lv_targetObservables_59_0= ruleConceptDeclaration ) )
            	            // InternalKim.g:9651:11: (lv_targetObservables_59_0= ruleConceptDeclaration )
            	            {
            	            // InternalKim.g:9651:11: (lv_targetObservables_59_0= ruleConceptDeclaration )
            	            // InternalKim.g:9652:12: lv_targetObservables_59_0= ruleConceptDeclaration
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getTargetObservablesConceptDeclarationParserRuleCall_3_12_4_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_126);
            	            lv_targetObservables_59_0=ruleConceptDeclaration();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												add(
            	              													current,
            	              													"targetObservables",
            	              													lv_targetObservables_59_0,
            	              													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }

            	            // InternalKim.g:9669:10: (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )*
            	            loop200:
            	            do {
            	                int alt200=2;
            	                int LA200_0 = input.LA(1);

            	                if ( (LA200_0==22) ) {
            	                    alt200=1;
            	                }


            	                switch (alt200) {
            	            	case 1 :
            	            	    // InternalKim.g:9670:11: otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) )
            	            	    {
            	            	    otherlv_60=(Token)match(input,22,FOLLOW_16); if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      											newLeafNode(otherlv_60, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_12_4_2_0());
            	            	      										
            	            	    }
            	            	    // InternalKim.g:9674:11: ( (lv_targetObservables_61_0= ruleConceptDeclaration ) )
            	            	    // InternalKim.g:9675:12: (lv_targetObservables_61_0= ruleConceptDeclaration )
            	            	    {
            	            	    // InternalKim.g:9675:12: (lv_targetObservables_61_0= ruleConceptDeclaration )
            	            	    // InternalKim.g:9676:13: lv_targetObservables_61_0= ruleConceptDeclaration
            	            	    {
            	            	    if ( state.backtracking==0 ) {

            	            	      													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getTargetObservablesConceptDeclarationParserRuleCall_3_12_4_2_1_0());
            	            	      												
            	            	    }
            	            	    pushFollow(FOLLOW_126);
            	            	    lv_targetObservables_61_0=ruleConceptDeclaration();

            	            	    state._fsp--;
            	            	    if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      													if (current==null) {
            	            	      														current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	            	      													}
            	            	      													add(
            	            	      														current,
            	            	      														"targetObservables",
            	            	      														lv_targetObservables_61_0,
            	            	      														"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	            	      													afterParserOrEnumRuleCall();
            	            	      												
            	            	    }

            	            	    }


            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop200;
            	                }
            	            } while (true);


            	            }
            	            break;

            	    }

            	    // InternalKim.g:9695:9: (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* )
            	    // InternalKim.g:9696:10: otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )*
            	    {
            	    otherlv_62=(Token)match(input,46,FOLLOW_16); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(otherlv_62, grammarAccess.getConceptStatementBodyAccess().getInKeyword_3_12_5_0());
            	      									
            	    }
            	    // InternalKim.g:9700:10: ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:9701:11: (lv_restrictedObservables_63_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:9701:11: (lv_restrictedObservables_63_0= ruleConceptDeclaration )
            	    // InternalKim.g:9702:12: lv_restrictedObservables_63_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRestrictedObservablesConceptDeclarationParserRuleCall_3_12_5_1_0());
            	      											
            	    }
            	    pushFollow(FOLLOW_120);
            	    lv_restrictedObservables_63_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      												if (current==null) {
            	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      												}
            	      												add(
            	      													current,
            	      													"restrictedObservables",
            	      													lv_restrictedObservables_63_0,
            	      													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      												afterParserOrEnumRuleCall();
            	      											
            	    }

            	    }


            	    }

            	    // InternalKim.g:9719:10: (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )*
            	    loop202:
            	    do {
            	        int alt202=2;
            	        int LA202_0 = input.LA(1);

            	        if ( (LA202_0==22) ) {
            	            alt202=1;
            	        }


            	        switch (alt202) {
            	    	case 1 :
            	    	    // InternalKim.g:9720:11: otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) )
            	    	    {
            	    	    otherlv_64=(Token)match(input,22,FOLLOW_16); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      											newLeafNode(otherlv_64, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_12_5_2_0());
            	    	      										
            	    	    }
            	    	    // InternalKim.g:9724:11: ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) )
            	    	    // InternalKim.g:9725:12: (lv_restrictedObservables_65_0= ruleConceptDeclaration )
            	    	    {
            	    	    // InternalKim.g:9725:12: (lv_restrictedObservables_65_0= ruleConceptDeclaration )
            	    	    // InternalKim.g:9726:13: lv_restrictedObservables_65_0= ruleConceptDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRestrictedObservablesConceptDeclarationParserRuleCall_3_12_5_2_1_0());
            	    	      												
            	    	    }
            	    	    pushFollow(FOLLOW_120);
            	    	    lv_restrictedObservables_65_0=ruleConceptDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      													if (current==null) {
            	    	      														current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      													}
            	    	      													add(
            	    	      														current,
            	    	      														"restrictedObservables",
            	    	      														lv_restrictedObservables_65_0,
            	    	      														"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	    	      													afterParserOrEnumRuleCall();
            	    	      												
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop202;
            	        }
            	    } while (true);


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 14 :
            	    // InternalKim.g:9751:4: ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) )
            	    {
            	    // InternalKim.g:9751:4: ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) )
            	    // InternalKim.g:9752:5: {...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 13) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 13)");
            	    }
            	    // InternalKim.g:9752:118: ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) )
            	    // InternalKim.g:9753:6: ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 13);
            	    // InternalKim.g:9756:9: ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) )
            	    // InternalKim.g:9756:10: {...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:9756:19: (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? )
            	    // InternalKim.g:9756:20: otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )?
            	    {
            	    otherlv_66=(Token)match(input,160,FOLLOW_16); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_66, grammarAccess.getConceptStatementBodyAccess().getConfersKeyword_3_13_0());
            	      								
            	    }
            	    // InternalKim.g:9760:9: ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:9761:10: (lv_conferredTraits_67_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:9761:10: (lv_conferredTraits_67_0= ruleConceptDeclaration )
            	    // InternalKim.g:9762:11: lv_conferredTraits_67_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getConferredTraitsConceptDeclarationParserRuleCall_3_13_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_127);
            	    lv_conferredTraits_67_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"conferredTraits",
            	      												lv_conferredTraits_67_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:9779:9: (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )*
            	    loop203:
            	    do {
            	        int alt203=2;
            	        int LA203_0 = input.LA(1);

            	        if ( (LA203_0==22) ) {
            	            alt203=1;
            	        }


            	        switch (alt203) {
            	    	case 1 :
            	    	    // InternalKim.g:9780:10: otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) )
            	    	    {
            	    	    otherlv_68=(Token)match(input,22,FOLLOW_16); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_68, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_13_2_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:9784:10: ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) )
            	    	    // InternalKim.g:9785:11: (lv_conferredTraits_69_0= ruleConceptDeclaration )
            	    	    {
            	    	    // InternalKim.g:9785:11: (lv_conferredTraits_69_0= ruleConceptDeclaration )
            	    	    // InternalKim.g:9786:12: lv_conferredTraits_69_0= ruleConceptDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getConferredTraitsConceptDeclarationParserRuleCall_3_13_2_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_127);
            	    	    lv_conferredTraits_69_0=ruleConceptDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"conferredTraits",
            	    	      													lv_conferredTraits_69_0,
            	    	      													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop203;
            	        }
            	    } while (true);

            	    // InternalKim.g:9804:9: (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )?
            	    int alt205=2;
            	    int LA205_0 = input.LA(1);

            	    if ( (LA205_0==32) ) {
            	        alt205=1;
            	    }
            	    switch (alt205) {
            	        case 1 :
            	            // InternalKim.g:9805:10: otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )*
            	            {
            	            otherlv_70=(Token)match(input,32,FOLLOW_16); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_70, grammarAccess.getConceptStatementBodyAccess().getToKeyword_3_13_3_0());
            	              									
            	            }
            	            // InternalKim.g:9809:10: ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) )
            	            // InternalKim.g:9810:11: (lv_conferredTargets_71_0= ruleConceptDeclaration )
            	            {
            	            // InternalKim.g:9810:11: (lv_conferredTargets_71_0= ruleConceptDeclaration )
            	            // InternalKim.g:9811:12: lv_conferredTargets_71_0= ruleConceptDeclaration
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getConferredTargetsConceptDeclarationParserRuleCall_3_13_3_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_120);
            	            lv_conferredTargets_71_0=ruleConceptDeclaration();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												add(
            	              													current,
            	              													"conferredTargets",
            	              													lv_conferredTargets_71_0,
            	              													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }

            	            // InternalKim.g:9828:10: (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )*
            	            loop204:
            	            do {
            	                int alt204=2;
            	                int LA204_0 = input.LA(1);

            	                if ( (LA204_0==22) ) {
            	                    alt204=1;
            	                }


            	                switch (alt204) {
            	            	case 1 :
            	            	    // InternalKim.g:9829:11: otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) )
            	            	    {
            	            	    otherlv_72=(Token)match(input,22,FOLLOW_16); if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      											newLeafNode(otherlv_72, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_13_3_2_0());
            	            	      										
            	            	    }
            	            	    // InternalKim.g:9833:11: ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) )
            	            	    // InternalKim.g:9834:12: (lv_conferredTargets_73_0= ruleConceptDeclaration )
            	            	    {
            	            	    // InternalKim.g:9834:12: (lv_conferredTargets_73_0= ruleConceptDeclaration )
            	            	    // InternalKim.g:9835:13: lv_conferredTargets_73_0= ruleConceptDeclaration
            	            	    {
            	            	    if ( state.backtracking==0 ) {

            	            	      													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getConferredTargetsConceptDeclarationParserRuleCall_3_13_3_2_1_0());
            	            	      												
            	            	    }
            	            	    pushFollow(FOLLOW_120);
            	            	    lv_conferredTargets_73_0=ruleConceptDeclaration();

            	            	    state._fsp--;
            	            	    if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      													if (current==null) {
            	            	      														current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	            	      													}
            	            	      													add(
            	            	      														current,
            	            	      														"conferredTargets",
            	            	      														lv_conferredTargets_73_0,
            	            	      														"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	            	      													afterParserOrEnumRuleCall();
            	            	      												
            	            	    }

            	            	    }


            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop204;
            	                }
            	            } while (true);


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 15 :
            	    // InternalKim.g:9860:4: ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:9860:4: ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:9861:5: {...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 14) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 14)");
            	    }
            	    // InternalKim.g:9861:118: ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:9862:6: ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 14);
            	    // InternalKim.g:9865:9: ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) )
            	    // InternalKim.g:9865:10: {...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:9865:19: ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) )
            	    // InternalKim.g:9865:20: (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) )
            	    {
            	    // InternalKim.g:9865:20: (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) )
            	    int alt206=3;
            	    switch ( input.LA(1) ) {
            	    case 161:
            	        {
            	        alt206=1;
            	        }
            	        break;
            	    case 162:
            	        {
            	        alt206=2;
            	        }
            	        break;
            	    case 163:
            	        {
            	        alt206=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 206, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt206) {
            	        case 1 :
            	            // InternalKim.g:9866:10: otherlv_74= 'part'
            	            {
            	            otherlv_74=(Token)match(input,161,FOLLOW_101); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_74, grammarAccess.getConceptStatementBodyAccess().getPartKeyword_3_14_0_0());
            	              									
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:9871:10: ( (lv_constituent_75_0= 'constituent' ) )
            	            {
            	            // InternalKim.g:9871:10: ( (lv_constituent_75_0= 'constituent' ) )
            	            // InternalKim.g:9872:11: (lv_constituent_75_0= 'constituent' )
            	            {
            	            // InternalKim.g:9872:11: (lv_constituent_75_0= 'constituent' )
            	            // InternalKim.g:9873:12: lv_constituent_75_0= 'constituent'
            	            {
            	            lv_constituent_75_0=(Token)match(input,162,FOLLOW_101); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_constituent_75_0, grammarAccess.getConceptStatementBodyAccess().getConstituentConstituentKeyword_3_14_0_1_0());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												setWithLastConsumed(current, "constituent", true, "constituent");
            	              											
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 3 :
            	            // InternalKim.g:9886:10: ( (lv_constitutes_76_0= 'consists' ) )
            	            {
            	            // InternalKim.g:9886:10: ( (lv_constitutes_76_0= 'consists' ) )
            	            // InternalKim.g:9887:11: (lv_constitutes_76_0= 'consists' )
            	            {
            	            // InternalKim.g:9887:11: (lv_constitutes_76_0= 'consists' )
            	            // InternalKim.g:9888:12: lv_constitutes_76_0= 'consists'
            	            {
            	            lv_constitutes_76_0=(Token)match(input,163,FOLLOW_101); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_constitutes_76_0, grammarAccess.getConceptStatementBodyAccess().getConstitutesConsistsKeyword_3_14_0_2_0());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												setWithLastConsumed(current, "constitutes", true, "consists");
            	              											
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }

            	    // InternalKim.g:9901:9: ( (lv_partOf_77_0= 'of' ) )
            	    // InternalKim.g:9902:10: (lv_partOf_77_0= 'of' )
            	    {
            	    // InternalKim.g:9902:10: (lv_partOf_77_0= 'of' )
            	    // InternalKim.g:9903:11: lv_partOf_77_0= 'of'
            	    {
            	    lv_partOf_77_0=(Token)match(input,100,FOLLOW_16); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_partOf_77_0, grammarAccess.getConceptStatementBodyAccess().getPartOfOfKeyword_3_14_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											setWithLastConsumed(current, "partOf", true, "of");
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:9915:9: ( (lv_whole_78_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:9916:10: (lv_whole_78_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:9916:10: (lv_whole_78_0= ruleConceptDeclaration )
            	    // InternalKim.g:9917:11: lv_whole_78_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getWholeConceptDeclarationParserRuleCall_3_14_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_115);
            	    lv_whole_78_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											set(
            	      												current,
            	      												"whole",
            	      												lv_whole_78_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 16 :
            	    // InternalKim.g:9940:4: ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:9940:4: ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    // InternalKim.g:9941:5: {...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 15) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 15)");
            	    }
            	    // InternalKim.g:9941:118: ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) )
            	    // InternalKim.g:9942:6: ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 15);
            	    // InternalKim.g:9945:9: ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) )
            	    // InternalKim.g:9945:10: {...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:9945:19: (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* )
            	    // InternalKim.g:9945:20: otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )*
            	    {
            	    otherlv_79=(Token)match(input,164,FOLLOW_16); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_79, grammarAccess.getConceptStatementBodyAccess().getCreatesKeyword_3_15_0());
            	      								
            	    }
            	    // InternalKim.g:9949:9: ( (lv_creates_80_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:9950:10: (lv_creates_80_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:9950:10: (lv_creates_80_0= ruleConceptDeclaration )
            	    // InternalKim.g:9951:11: lv_creates_80_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getCreatesConceptDeclarationParserRuleCall_3_15_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_120);
            	    lv_creates_80_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"creates",
            	      												lv_creates_80_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:9968:9: (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )*
            	    loop207:
            	    do {
            	        int alt207=2;
            	        int LA207_0 = input.LA(1);

            	        if ( (LA207_0==22) ) {
            	            alt207=1;
            	        }


            	        switch (alt207) {
            	    	case 1 :
            	    	    // InternalKim.g:9969:10: otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) )
            	    	    {
            	    	    otherlv_81=(Token)match(input,22,FOLLOW_16); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_81, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_15_2_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:9973:10: ( (lv_creates_82_0= ruleConceptDeclaration ) )
            	    	    // InternalKim.g:9974:11: (lv_creates_82_0= ruleConceptDeclaration )
            	    	    {
            	    	    // InternalKim.g:9974:11: (lv_creates_82_0= ruleConceptDeclaration )
            	    	    // InternalKim.g:9975:12: lv_creates_82_0= ruleConceptDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getCreatesConceptDeclarationParserRuleCall_3_15_2_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_120);
            	    	    lv_creates_82_0=ruleConceptDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"creates",
            	    	      													lv_creates_82_0,
            	    	      													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop207;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 17 :
            	    // InternalKim.g:9999:4: ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:9999:4: ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) )
            	    // InternalKim.g:10000:5: {...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 16) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 16)");
            	    }
            	    // InternalKim.g:10000:118: ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) )
            	    // InternalKim.g:10001:6: ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 16);
            	    // InternalKim.g:10004:9: ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) )
            	    // InternalKim.g:10004:10: {...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:10004:19: (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* )
            	    // InternalKim.g:10004:20: otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )*
            	    {
            	    otherlv_83=(Token)match(input,165,FOLLOW_18); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_83, grammarAccess.getConceptStatementBodyAccess().getAppliesKeyword_3_16_0());
            	      								
            	    }
            	    otherlv_84=(Token)match(input,32,FOLLOW_16); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_84, grammarAccess.getConceptStatementBodyAccess().getToKeyword_3_16_1());
            	      								
            	    }
            	    // InternalKim.g:10012:9: ( (lv_traitTargets_85_0= ruleApplicableTarget ) )
            	    // InternalKim.g:10013:10: (lv_traitTargets_85_0= ruleApplicableTarget )
            	    {
            	    // InternalKim.g:10013:10: (lv_traitTargets_85_0= ruleApplicableTarget )
            	    // InternalKim.g:10014:11: lv_traitTargets_85_0= ruleApplicableTarget
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getTraitTargetsApplicableTargetParserRuleCall_3_16_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_120);
            	    lv_traitTargets_85_0=ruleApplicableTarget();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"traitTargets",
            	      												lv_traitTargets_85_0,
            	      												"org.integratedmodelling.kim.Kim.ApplicableTarget");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:10031:9: (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )*
            	    loop208:
            	    do {
            	        int alt208=2;
            	        int LA208_0 = input.LA(1);

            	        if ( (LA208_0==22) ) {
            	            alt208=1;
            	        }


            	        switch (alt208) {
            	    	case 1 :
            	    	    // InternalKim.g:10032:10: otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) )
            	    	    {
            	    	    otherlv_86=(Token)match(input,22,FOLLOW_16); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_86, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_16_3_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:10036:10: ( (lv_traitTargets_87_0= ruleApplicableTarget ) )
            	    	    // InternalKim.g:10037:11: (lv_traitTargets_87_0= ruleApplicableTarget )
            	    	    {
            	    	    // InternalKim.g:10037:11: (lv_traitTargets_87_0= ruleApplicableTarget )
            	    	    // InternalKim.g:10038:12: lv_traitTargets_87_0= ruleApplicableTarget
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getTraitTargetsApplicableTargetParserRuleCall_3_16_3_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_120);
            	    	    lv_traitTargets_87_0=ruleApplicableTarget();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"traitTargets",
            	    	      													lv_traitTargets_87_0,
            	    	      													"org.integratedmodelling.kim.Kim.ApplicableTarget");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop208;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 18 :
            	    // InternalKim.g:10062:4: ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:10062:4: ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) )
            	    // InternalKim.g:10063:5: {...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 17) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 17)");
            	    }
            	    // InternalKim.g:10063:118: ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) )
            	    // InternalKim.g:10064:6: ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 17);
            	    // InternalKim.g:10067:9: ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) )
            	    // InternalKim.g:10067:10: {...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:10067:19: (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* )
            	    // InternalKim.g:10067:20: otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )*
            	    {
            	    otherlv_88=(Token)match(input,166,FOLLOW_16); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_88, grammarAccess.getConceptStatementBodyAccess().getLinksKeyword_3_17_0());
            	      								
            	    }
            	    // InternalKim.g:10071:9: ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) )
            	    // InternalKim.g:10072:10: (lv_domains_89_0= ruleSimpleConceptDeclaration )
            	    {
            	    // InternalKim.g:10072:10: (lv_domains_89_0= ruleSimpleConceptDeclaration )
            	    // InternalKim.g:10073:11: lv_domains_89_0= ruleSimpleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDomainsSimpleConceptDeclarationParserRuleCall_3_17_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_18);
            	    lv_domains_89_0=ruleSimpleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"domains",
            	      												lv_domains_89_0,
            	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:10090:9: ( ( 'to' )=>otherlv_90= 'to' )
            	    // InternalKim.g:10091:10: ( 'to' )=>otherlv_90= 'to'
            	    {
            	    otherlv_90=(Token)match(input,32,FOLLOW_16); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(otherlv_90, grammarAccess.getConceptStatementBodyAccess().getToKeyword_3_17_2());
            	      									
            	    }

            	    }

            	    // InternalKim.g:10097:9: ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) )
            	    // InternalKim.g:10098:10: (lv_ranges_91_0= ruleSimpleConceptDeclaration )
            	    {
            	    // InternalKim.g:10098:10: (lv_ranges_91_0= ruleSimpleConceptDeclaration )
            	    // InternalKim.g:10099:11: lv_ranges_91_0= ruleSimpleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRangesSimpleConceptDeclarationParserRuleCall_3_17_3_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_120);
            	    lv_ranges_91_0=ruleSimpleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"ranges",
            	      												lv_ranges_91_0,
            	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:10116:9: (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )*
            	    loop209:
            	    do {
            	        int alt209=2;
            	        int LA209_0 = input.LA(1);

            	        if ( (LA209_0==22) ) {
            	            alt209=1;
            	        }


            	        switch (alt209) {
            	    	case 1 :
            	    	    // InternalKim.g:10117:10: otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) )
            	    	    {
            	    	    otherlv_92=(Token)match(input,22,FOLLOW_16); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_92, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_17_4_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:10121:10: ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) )
            	    	    // InternalKim.g:10122:11: (lv_domains_93_0= ruleSimpleConceptDeclaration )
            	    	    {
            	    	    // InternalKim.g:10122:11: (lv_domains_93_0= ruleSimpleConceptDeclaration )
            	    	    // InternalKim.g:10123:12: lv_domains_93_0= ruleSimpleConceptDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDomainsSimpleConceptDeclarationParserRuleCall_3_17_4_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_18);
            	    	    lv_domains_93_0=ruleSimpleConceptDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"domains",
            	    	      													lv_domains_93_0,
            	    	      													"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }

            	    	    // InternalKim.g:10140:10: ( ( 'to' )=>otherlv_94= 'to' )
            	    	    // InternalKim.g:10141:11: ( 'to' )=>otherlv_94= 'to'
            	    	    {
            	    	    otherlv_94=(Token)match(input,32,FOLLOW_16); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      											newLeafNode(otherlv_94, grammarAccess.getConceptStatementBodyAccess().getToKeyword_3_17_4_2());
            	    	      										
            	    	    }

            	    	    }

            	    	    // InternalKim.g:10147:10: ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) )
            	    	    // InternalKim.g:10148:11: (lv_ranges_95_0= ruleSimpleConceptDeclaration )
            	    	    {
            	    	    // InternalKim.g:10148:11: (lv_ranges_95_0= ruleSimpleConceptDeclaration )
            	    	    // InternalKim.g:10149:12: lv_ranges_95_0= ruleSimpleConceptDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRangesSimpleConceptDeclarationParserRuleCall_3_17_4_3_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_120);
            	    	    lv_ranges_95_0=ruleSimpleConceptDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"ranges",
            	    	      													lv_ranges_95_0,
            	    	      													"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop209;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 19 :
            	    // InternalKim.g:10173:4: ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:10173:4: ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:10174:5: {...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 18) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 18)");
            	    }
            	    // InternalKim.g:10174:118: ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:10175:6: ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 18);
            	    // InternalKim.g:10178:9: ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) )
            	    // InternalKim.g:10178:10: {...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:10178:19: (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) )
            	    // InternalKim.g:10178:20: otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) )
            	    {
            	    otherlv_96=(Token)match(input,167,FOLLOW_101); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_96, grammarAccess.getConceptStatementBodyAccess().getInverseKeyword_3_18_0());
            	      								
            	    }
            	    otherlv_97=(Token)match(input,100,FOLLOW_16); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_97, grammarAccess.getConceptStatementBodyAccess().getOfKeyword_3_18_1());
            	      								
            	    }
            	    // InternalKim.g:10186:9: ( (lv_inverse_98_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:10187:10: (lv_inverse_98_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:10187:10: (lv_inverse_98_0= ruleConceptDeclaration )
            	    // InternalKim.g:10188:11: lv_inverse_98_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getInverseConceptDeclarationParserRuleCall_3_18_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_115);
            	    lv_inverse_98_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											set(
            	      												current,
            	      												"inverse",
            	      												lv_inverse_98_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 20 :
            	    // InternalKim.g:10211:4: ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:10211:4: ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    // InternalKim.g:10212:5: {...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 19) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 19)");
            	    }
            	    // InternalKim.g:10212:118: ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) )
            	    // InternalKim.g:10213:6: ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 19);
            	    // InternalKim.g:10216:9: ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) )
            	    // InternalKim.g:10216:10: {...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:10216:19: (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* )
            	    // InternalKim.g:10216:20: otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )*
            	    {
            	    otherlv_99=(Token)match(input,168,FOLLOW_16); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_99, grammarAccess.getConceptStatementBodyAccess().getAffectsKeyword_3_19_0());
            	      								
            	    }
            	    // InternalKim.g:10220:9: ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:10221:10: (lv_qualitiesAffected_100_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:10221:10: (lv_qualitiesAffected_100_0= ruleConceptDeclaration )
            	    // InternalKim.g:10222:11: lv_qualitiesAffected_100_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getQualitiesAffectedConceptDeclarationParserRuleCall_3_19_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_120);
            	    lv_qualitiesAffected_100_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"qualitiesAffected",
            	      												lv_qualitiesAffected_100_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:10239:9: (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )*
            	    loop210:
            	    do {
            	        int alt210=2;
            	        int LA210_0 = input.LA(1);

            	        if ( (LA210_0==22) ) {
            	            alt210=1;
            	        }


            	        switch (alt210) {
            	    	case 1 :
            	    	    // InternalKim.g:10240:10: otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) )
            	    	    {
            	    	    otherlv_101=(Token)match(input,22,FOLLOW_16); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_101, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_19_2_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:10244:10: ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) )
            	    	    // InternalKim.g:10245:11: (lv_qualitiesAffected_102_0= ruleConceptDeclaration )
            	    	    {
            	    	    // InternalKim.g:10245:11: (lv_qualitiesAffected_102_0= ruleConceptDeclaration )
            	    	    // InternalKim.g:10246:12: lv_qualitiesAffected_102_0= ruleConceptDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getQualitiesAffectedConceptDeclarationParserRuleCall_3_19_2_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_120);
            	    	    lv_qualitiesAffected_102_0=ruleConceptDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"qualitiesAffected",
            	    	      													lv_qualitiesAffected_102_0,
            	    	      													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop210;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 21 :
            	    // InternalKim.g:10270:4: ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:10270:4: ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) )
            	    // InternalKim.g:10271:5: {...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 20) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 20)");
            	    }
            	    // InternalKim.g:10271:118: ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) )
            	    // InternalKim.g:10272:6: ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 20);
            	    // InternalKim.g:10275:9: ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) )
            	    // InternalKim.g:10275:10: {...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:10275:19: (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* )
            	    // InternalKim.g:10275:20: otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )*
            	    {
            	    otherlv_103=(Token)match(input,158,FOLLOW_128); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_103, grammarAccess.getConceptStatementBodyAccess().getHasKeyword_3_20_0());
            	      								
            	    }
            	    // InternalKim.g:10279:9: ( (lv_disjoint_104_0= 'disjoint' ) )?
            	    int alt211=2;
            	    int LA211_0 = input.LA(1);

            	    if ( (LA211_0==81) ) {
            	        alt211=1;
            	    }
            	    switch (alt211) {
            	        case 1 :
            	            // InternalKim.g:10280:10: (lv_disjoint_104_0= 'disjoint' )
            	            {
            	            // InternalKim.g:10280:10: (lv_disjoint_104_0= 'disjoint' )
            	            // InternalKim.g:10281:11: lv_disjoint_104_0= 'disjoint'
            	            {
            	            lv_disjoint_104_0=(Token)match(input,81,FOLLOW_129); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(lv_disjoint_104_0, grammarAccess.getConceptStatementBodyAccess().getDisjointDisjointKeyword_3_20_1_0());
            	              										
            	            }
            	            if ( state.backtracking==0 ) {

            	              											if (current==null) {
            	              												current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	              											}
            	              											setWithLastConsumed(current, "disjoint", true, "disjoint");
            	              										
            	            }

            	            }


            	            }
            	            break;

            	    }

            	    otherlv_105=(Token)match(input,169,FOLLOW_130); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_105, grammarAccess.getConceptStatementBodyAccess().getChildrenKeyword_3_20_2());
            	      								
            	    }
            	    // InternalKim.g:10297:9: ( (lv_children_106_0= ruleChildConcept ) )
            	    // InternalKim.g:10298:10: (lv_children_106_0= ruleChildConcept )
            	    {
            	    // InternalKim.g:10298:10: (lv_children_106_0= ruleChildConcept )
            	    // InternalKim.g:10299:11: lv_children_106_0= ruleChildConcept
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getChildrenChildConceptParserRuleCall_3_20_3_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_120);
            	    lv_children_106_0=ruleChildConcept();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"children",
            	      												lv_children_106_0,
            	      												"org.integratedmodelling.kim.Kim.ChildConcept");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:10316:9: (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )*
            	    loop212:
            	    do {
            	        int alt212=2;
            	        int LA212_0 = input.LA(1);

            	        if ( (LA212_0==22) ) {
            	            alt212=1;
            	        }


            	        switch (alt212) {
            	    	case 1 :
            	    	    // InternalKim.g:10317:10: otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) )
            	    	    {
            	    	    otherlv_107=(Token)match(input,22,FOLLOW_130); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_107, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_20_4_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:10321:10: ( (lv_children_108_0= ruleChildConcept ) )
            	    	    // InternalKim.g:10322:11: (lv_children_108_0= ruleChildConcept )
            	    	    {
            	    	    // InternalKim.g:10322:11: (lv_children_108_0= ruleChildConcept )
            	    	    // InternalKim.g:10323:12: lv_children_108_0= ruleChildConcept
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getChildrenChildConceptParserRuleCall_3_20_4_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_120);
            	    	    lv_children_108_0=ruleChildConcept();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"children",
            	    	      													lv_children_108_0,
            	    	      													"org.integratedmodelling.kim.Kim.ChildConcept");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop212;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 22 :
            	    // InternalKim.g:10347:4: ({...}? => ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ ) )
            	    {
            	    // InternalKim.g:10347:4: ({...}? => ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ ) )
            	    // InternalKim.g:10348:5: {...}? => ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21)");
            	    }
            	    // InternalKim.g:10348:118: ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ )
            	    // InternalKim.g:10349:6: ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21);
            	    // InternalKim.g:10352:9: ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+
            	    int cnt213=0;
            	    loop213:
            	    do {
            	        int alt213=2;
            	        switch ( input.LA(1) ) {
            	        case 158:
            	            {
            	            int LA213_2 = input.LA(2);

            	            if ( ((synpred379_InternalKim()&&(true))) ) {
            	                alt213=1;
            	            }


            	            }
            	            break;
            	        case 175:
            	            {
            	            int LA213_3 = input.LA(2);

            	            if ( ((synpred379_InternalKim()&&(true))) ) {
            	                alt213=1;
            	            }


            	            }
            	            break;
            	        case 176:
            	            {
            	            int LA213_4 = input.LA(2);

            	            if ( ((synpred379_InternalKim()&&(true))) ) {
            	                alt213=1;
            	            }


            	            }
            	            break;
            	        case 177:
            	            {
            	            int LA213_5 = input.LA(2);

            	            if ( ((synpred379_InternalKim()&&(true))) ) {
            	                alt213=1;
            	            }


            	            }
            	            break;

            	        }

            	        switch (alt213) {
            	    	case 1 :
            	    	    // InternalKim.g:10352:10: {...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) )
            	    	    {
            	    	    if ( !((true)) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    	    }
            	    	    // InternalKim.g:10352:19: ( (lv_restrictions_109_0= ruleRestrictionStatement ) )
            	    	    // InternalKim.g:10352:20: (lv_restrictions_109_0= ruleRestrictionStatement )
            	    	    {
            	    	    // InternalKim.g:10352:20: (lv_restrictions_109_0= ruleRestrictionStatement )
            	    	    // InternalKim.g:10353:10: lv_restrictions_109_0= ruleRestrictionStatement
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      										newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRestrictionsRestrictionStatementParserRuleCall_3_21_0());
            	    	      									
            	    	    }
            	    	    pushFollow(FOLLOW_115);
            	    	    lv_restrictions_109_0=ruleRestrictionStatement();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										if (current==null) {
            	    	      											current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      										}
            	    	      										add(
            	    	      											current,
            	    	      											"restrictions",
            	    	      											lv_restrictions_109_0,
            	    	      											"org.integratedmodelling.kim.Kim.RestrictionStatement");
            	    	      										afterParserOrEnumRuleCall();
            	    	      									
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt213 >= 1 ) break loop213;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(213, input);
            	                throw eee;
            	        }
            	        cnt213++;
            	    } while (true);

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 23 :
            	    // InternalKim.g:10375:4: ({...}? => ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) ) )
            	    {
            	    // InternalKim.g:10375:4: ({...}? => ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) ) )
            	    // InternalKim.g:10376:5: {...}? => ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22)");
            	    }
            	    // InternalKim.g:10376:118: ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) )
            	    // InternalKim.g:10377:6: ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22);
            	    // InternalKim.g:10380:9: ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) )
            	    // InternalKim.g:10380:10: {...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:10380:19: (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) )
            	    // InternalKim.g:10380:20: otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) )
            	    {
            	    otherlv_110=(Token)match(input,38,FOLLOW_25); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_110, grammarAccess.getConceptStatementBodyAccess().getWithKeyword_3_22_0());
            	      								
            	    }
            	    otherlv_111=(Token)match(input,39,FOLLOW_26); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_111, grammarAccess.getConceptStatementBodyAccess().getMetadataKeyword_3_22_1());
            	      								
            	    }
            	    // InternalKim.g:10388:9: ( (lv_metadata_112_0= ruleMetadata ) )
            	    // InternalKim.g:10389:10: (lv_metadata_112_0= ruleMetadata )
            	    {
            	    // InternalKim.g:10389:10: (lv_metadata_112_0= ruleMetadata )
            	    // InternalKim.g:10390:11: lv_metadata_112_0= ruleMetadata
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getMetadataMetadataParserRuleCall_3_22_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_115);
            	    lv_metadata_112_0=ruleMetadata();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											set(
            	      												current,
            	      												"metadata",
            	      												lv_metadata_112_0,
            	      												"org.integratedmodelling.kim.Kim.Metadata");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop214;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleConceptStatementBody"


    // $ANTLR start "entryRuleApplicableTarget"
    // InternalKim.g:10427:1: entryRuleApplicableTarget returns [EObject current=null] : iv_ruleApplicableTarget= ruleApplicableTarget EOF ;
    public final EObject entryRuleApplicableTarget() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleApplicableTarget = null;


        try {
            // InternalKim.g:10427:57: (iv_ruleApplicableTarget= ruleApplicableTarget EOF )
            // InternalKim.g:10428:2: iv_ruleApplicableTarget= ruleApplicableTarget EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getApplicableTargetRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleApplicableTarget=ruleApplicableTarget();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleApplicableTarget; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleApplicableTarget"


    // $ANTLR start "ruleApplicableTarget"
    // InternalKim.g:10434:1: ruleApplicableTarget returns [EObject current=null] : ( ( (lv_target_0_0= ruleConceptDeclaration ) ) (otherlv_1= 'between' ( (lv_linkFrom_2_0= ruleConceptDeclaration ) ) otherlv_3= 'and' ( (lv_linkTo_4_0= ruleConceptDeclaration ) ) )? ) ;
    public final EObject ruleApplicableTarget() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_target_0_0 = null;

        EObject lv_linkFrom_2_0 = null;

        EObject lv_linkTo_4_0 = null;



        	enterRule();

        try {
            // InternalKim.g:10440:2: ( ( ( (lv_target_0_0= ruleConceptDeclaration ) ) (otherlv_1= 'between' ( (lv_linkFrom_2_0= ruleConceptDeclaration ) ) otherlv_3= 'and' ( (lv_linkTo_4_0= ruleConceptDeclaration ) ) )? ) )
            // InternalKim.g:10441:2: ( ( (lv_target_0_0= ruleConceptDeclaration ) ) (otherlv_1= 'between' ( (lv_linkFrom_2_0= ruleConceptDeclaration ) ) otherlv_3= 'and' ( (lv_linkTo_4_0= ruleConceptDeclaration ) ) )? )
            {
            // InternalKim.g:10441:2: ( ( (lv_target_0_0= ruleConceptDeclaration ) ) (otherlv_1= 'between' ( (lv_linkFrom_2_0= ruleConceptDeclaration ) ) otherlv_3= 'and' ( (lv_linkTo_4_0= ruleConceptDeclaration ) ) )? )
            // InternalKim.g:10442:3: ( (lv_target_0_0= ruleConceptDeclaration ) ) (otherlv_1= 'between' ( (lv_linkFrom_2_0= ruleConceptDeclaration ) ) otherlv_3= 'and' ( (lv_linkTo_4_0= ruleConceptDeclaration ) ) )?
            {
            // InternalKim.g:10442:3: ( (lv_target_0_0= ruleConceptDeclaration ) )
            // InternalKim.g:10443:4: (lv_target_0_0= ruleConceptDeclaration )
            {
            // InternalKim.g:10443:4: (lv_target_0_0= ruleConceptDeclaration )
            // InternalKim.g:10444:5: lv_target_0_0= ruleConceptDeclaration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getApplicableTargetAccess().getTargetConceptDeclarationParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_131);
            lv_target_0_0=ruleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getApplicableTargetRule());
              					}
              					set(
              						current,
              						"target",
              						lv_target_0_0,
              						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:10461:3: (otherlv_1= 'between' ( (lv_linkFrom_2_0= ruleConceptDeclaration ) ) otherlv_3= 'and' ( (lv_linkTo_4_0= ruleConceptDeclaration ) ) )?
            int alt215=2;
            int LA215_0 = input.LA(1);

            if ( (LA215_0==170) ) {
                alt215=1;
            }
            switch (alt215) {
                case 1 :
                    // InternalKim.g:10462:4: otherlv_1= 'between' ( (lv_linkFrom_2_0= ruleConceptDeclaration ) ) otherlv_3= 'and' ( (lv_linkTo_4_0= ruleConceptDeclaration ) )
                    {
                    otherlv_1=(Token)match(input,170,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getApplicableTargetAccess().getBetweenKeyword_1_0());
                      			
                    }
                    // InternalKim.g:10466:4: ( (lv_linkFrom_2_0= ruleConceptDeclaration ) )
                    // InternalKim.g:10467:5: (lv_linkFrom_2_0= ruleConceptDeclaration )
                    {
                    // InternalKim.g:10467:5: (lv_linkFrom_2_0= ruleConceptDeclaration )
                    // InternalKim.g:10468:6: lv_linkFrom_2_0= ruleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getApplicableTargetAccess().getLinkFromConceptDeclarationParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_132);
                    lv_linkFrom_2_0=ruleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getApplicableTargetRule());
                      						}
                      						set(
                      							current,
                      							"linkFrom",
                      							lv_linkFrom_2_0,
                      							"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,132,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getApplicableTargetAccess().getAndKeyword_1_2());
                      			
                    }
                    // InternalKim.g:10489:4: ( (lv_linkTo_4_0= ruleConceptDeclaration ) )
                    // InternalKim.g:10490:5: (lv_linkTo_4_0= ruleConceptDeclaration )
                    {
                    // InternalKim.g:10490:5: (lv_linkTo_4_0= ruleConceptDeclaration )
                    // InternalKim.g:10491:6: lv_linkTo_4_0= ruleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getApplicableTargetAccess().getLinkToConceptDeclarationParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_linkTo_4_0=ruleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getApplicableTargetRule());
                      						}
                      						set(
                      							current,
                      							"linkTo",
                      							lv_linkTo_4_0,
                      							"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleApplicableTarget"


    // $ANTLR start "entryRuleChildConcept"
    // InternalKim.g:10513:1: entryRuleChildConcept returns [EObject current=null] : iv_ruleChildConcept= ruleChildConcept EOF ;
    public final EObject entryRuleChildConcept() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleChildConcept = null;


        try {
            // InternalKim.g:10513:53: (iv_ruleChildConcept= ruleChildConcept EOF )
            // InternalKim.g:10514:2: iv_ruleChildConcept= ruleChildConcept EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getChildConceptRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleChildConcept=ruleChildConcept();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleChildConcept; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleChildConcept"


    // $ANTLR start "ruleChildConcept"
    // InternalKim.g:10520:1: ruleChildConcept returns [EObject current=null] : ( ( ( (lv_abstract_0_0= 'abstract' ) )? ( (lv_name_1_0= RULE_CAMELCASE_ID ) ) ) | (otherlv_2= '(' this_ConceptStatementBody_3= ruleConceptStatementBody otherlv_4= ')' ) ) ;
    public final EObject ruleChildConcept() throws RecognitionException {
        EObject current = null;

        Token lv_abstract_0_0=null;
        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject this_ConceptStatementBody_3 = null;



        	enterRule();

        try {
            // InternalKim.g:10526:2: ( ( ( ( (lv_abstract_0_0= 'abstract' ) )? ( (lv_name_1_0= RULE_CAMELCASE_ID ) ) ) | (otherlv_2= '(' this_ConceptStatementBody_3= ruleConceptStatementBody otherlv_4= ')' ) ) )
            // InternalKim.g:10527:2: ( ( ( (lv_abstract_0_0= 'abstract' ) )? ( (lv_name_1_0= RULE_CAMELCASE_ID ) ) ) | (otherlv_2= '(' this_ConceptStatementBody_3= ruleConceptStatementBody otherlv_4= ')' ) )
            {
            // InternalKim.g:10527:2: ( ( ( (lv_abstract_0_0= 'abstract' ) )? ( (lv_name_1_0= RULE_CAMELCASE_ID ) ) ) | (otherlv_2= '(' this_ConceptStatementBody_3= ruleConceptStatementBody otherlv_4= ')' ) )
            int alt217=2;
            int LA217_0 = input.LA(1);

            if ( (LA217_0==RULE_CAMELCASE_ID||LA217_0==139) ) {
                alt217=1;
            }
            else if ( (LA217_0==34) ) {
                alt217=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 217, 0, input);

                throw nvae;
            }
            switch (alt217) {
                case 1 :
                    // InternalKim.g:10528:3: ( ( (lv_abstract_0_0= 'abstract' ) )? ( (lv_name_1_0= RULE_CAMELCASE_ID ) ) )
                    {
                    // InternalKim.g:10528:3: ( ( (lv_abstract_0_0= 'abstract' ) )? ( (lv_name_1_0= RULE_CAMELCASE_ID ) ) )
                    // InternalKim.g:10529:4: ( (lv_abstract_0_0= 'abstract' ) )? ( (lv_name_1_0= RULE_CAMELCASE_ID ) )
                    {
                    // InternalKim.g:10529:4: ( (lv_abstract_0_0= 'abstract' ) )?
                    int alt216=2;
                    int LA216_0 = input.LA(1);

                    if ( (LA216_0==139) ) {
                        alt216=1;
                    }
                    switch (alt216) {
                        case 1 :
                            // InternalKim.g:10530:5: (lv_abstract_0_0= 'abstract' )
                            {
                            // InternalKim.g:10530:5: (lv_abstract_0_0= 'abstract' )
                            // InternalKim.g:10531:6: lv_abstract_0_0= 'abstract'
                            {
                            lv_abstract_0_0=(Token)match(input,139,FOLLOW_133); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_abstract_0_0, grammarAccess.getChildConceptAccess().getAbstractAbstractKeyword_0_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getChildConceptRule());
                              						}
                              						setWithLastConsumed(current, "abstract", true, "abstract");
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalKim.g:10543:4: ( (lv_name_1_0= RULE_CAMELCASE_ID ) )
                    // InternalKim.g:10544:5: (lv_name_1_0= RULE_CAMELCASE_ID )
                    {
                    // InternalKim.g:10544:5: (lv_name_1_0= RULE_CAMELCASE_ID )
                    // InternalKim.g:10545:6: lv_name_1_0= RULE_CAMELCASE_ID
                    {
                    lv_name_1_0=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_1_0, grammarAccess.getChildConceptAccess().getNameCAMELCASE_IDTerminalRuleCall_0_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getChildConceptRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"name",
                      							lv_name_1_0,
                      							"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:10563:3: (otherlv_2= '(' this_ConceptStatementBody_3= ruleConceptStatementBody otherlv_4= ')' )
                    {
                    // InternalKim.g:10563:3: (otherlv_2= '(' this_ConceptStatementBody_3= ruleConceptStatementBody otherlv_4= ')' )
                    // InternalKim.g:10564:4: otherlv_2= '(' this_ConceptStatementBody_3= ruleConceptStatementBody otherlv_4= ')'
                    {
                    otherlv_2=(Token)match(input,34,FOLLOW_112); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getChildConceptAccess().getLeftParenthesisKeyword_1_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getChildConceptAccess().getConceptStatementBodyParserRuleCall_1_1());
                      			
                    }
                    pushFollow(FOLLOW_83);
                    this_ConceptStatementBody_3=ruleConceptStatementBody();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_ConceptStatementBody_3;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    otherlv_4=(Token)match(input,37,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getChildConceptAccess().getRightParenthesisKeyword_1_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleChildConcept"


    // $ANTLR start "entryRuleIdentityRequirement"
    // InternalKim.g:10588:1: entryRuleIdentityRequirement returns [EObject current=null] : iv_ruleIdentityRequirement= ruleIdentityRequirement EOF ;
    public final EObject entryRuleIdentityRequirement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIdentityRequirement = null;


        try {
            // InternalKim.g:10588:60: (iv_ruleIdentityRequirement= ruleIdentityRequirement EOF )
            // InternalKim.g:10589:2: iv_ruleIdentityRequirement= ruleIdentityRequirement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIdentityRequirementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIdentityRequirement=ruleIdentityRequirement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIdentityRequirement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIdentityRequirement"


    // $ANTLR start "ruleIdentityRequirement"
    // InternalKim.g:10595:1: ruleIdentityRequirement returns [EObject current=null] : ( ( (otherlv_0= 'identity' | otherlv_1= 'attribute' | otherlv_2= 'realm' | otherlv_3= 'extent' ) ( (lv_identities_4_0= ruleConceptDeclaration ) ) (otherlv_5= ',' ( (lv_identities_6_0= ruleConceptDeclaration ) ) )* ) | (otherlv_7= 'authority' ( ( (lv_authority_8_1= RULE_UPPERCASE_ID | lv_authority_8_2= RULE_UPPERCASE_PATH ) ) ) ) ) ;
    public final EObject ruleIdentityRequirement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token lv_authority_8_1=null;
        Token lv_authority_8_2=null;
        EObject lv_identities_4_0 = null;

        EObject lv_identities_6_0 = null;



        	enterRule();

        try {
            // InternalKim.g:10601:2: ( ( ( (otherlv_0= 'identity' | otherlv_1= 'attribute' | otherlv_2= 'realm' | otherlv_3= 'extent' ) ( (lv_identities_4_0= ruleConceptDeclaration ) ) (otherlv_5= ',' ( (lv_identities_6_0= ruleConceptDeclaration ) ) )* ) | (otherlv_7= 'authority' ( ( (lv_authority_8_1= RULE_UPPERCASE_ID | lv_authority_8_2= RULE_UPPERCASE_PATH ) ) ) ) ) )
            // InternalKim.g:10602:2: ( ( (otherlv_0= 'identity' | otherlv_1= 'attribute' | otherlv_2= 'realm' | otherlv_3= 'extent' ) ( (lv_identities_4_0= ruleConceptDeclaration ) ) (otherlv_5= ',' ( (lv_identities_6_0= ruleConceptDeclaration ) ) )* ) | (otherlv_7= 'authority' ( ( (lv_authority_8_1= RULE_UPPERCASE_ID | lv_authority_8_2= RULE_UPPERCASE_PATH ) ) ) ) )
            {
            // InternalKim.g:10602:2: ( ( (otherlv_0= 'identity' | otherlv_1= 'attribute' | otherlv_2= 'realm' | otherlv_3= 'extent' ) ( (lv_identities_4_0= ruleConceptDeclaration ) ) (otherlv_5= ',' ( (lv_identities_6_0= ruleConceptDeclaration ) ) )* ) | (otherlv_7= 'authority' ( ( (lv_authority_8_1= RULE_UPPERCASE_ID | lv_authority_8_2= RULE_UPPERCASE_PATH ) ) ) ) )
            int alt221=2;
            int LA221_0 = input.LA(1);

            if ( ((LA221_0>=171 && LA221_0<=174)) ) {
                alt221=1;
            }
            else if ( (LA221_0==149) ) {
                alt221=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 221, 0, input);

                throw nvae;
            }
            switch (alt221) {
                case 1 :
                    // InternalKim.g:10603:3: ( (otherlv_0= 'identity' | otherlv_1= 'attribute' | otherlv_2= 'realm' | otherlv_3= 'extent' ) ( (lv_identities_4_0= ruleConceptDeclaration ) ) (otherlv_5= ',' ( (lv_identities_6_0= ruleConceptDeclaration ) ) )* )
                    {
                    // InternalKim.g:10603:3: ( (otherlv_0= 'identity' | otherlv_1= 'attribute' | otherlv_2= 'realm' | otherlv_3= 'extent' ) ( (lv_identities_4_0= ruleConceptDeclaration ) ) (otherlv_5= ',' ( (lv_identities_6_0= ruleConceptDeclaration ) ) )* )
                    // InternalKim.g:10604:4: (otherlv_0= 'identity' | otherlv_1= 'attribute' | otherlv_2= 'realm' | otherlv_3= 'extent' ) ( (lv_identities_4_0= ruleConceptDeclaration ) ) (otherlv_5= ',' ( (lv_identities_6_0= ruleConceptDeclaration ) ) )*
                    {
                    // InternalKim.g:10604:4: (otherlv_0= 'identity' | otherlv_1= 'attribute' | otherlv_2= 'realm' | otherlv_3= 'extent' )
                    int alt218=4;
                    switch ( input.LA(1) ) {
                    case 171:
                        {
                        alt218=1;
                        }
                        break;
                    case 172:
                        {
                        alt218=2;
                        }
                        break;
                    case 173:
                        {
                        alt218=3;
                        }
                        break;
                    case 174:
                        {
                        alt218=4;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 218, 0, input);

                        throw nvae;
                    }

                    switch (alt218) {
                        case 1 :
                            // InternalKim.g:10605:5: otherlv_0= 'identity'
                            {
                            otherlv_0=(Token)match(input,171,FOLLOW_16); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_0, grammarAccess.getIdentityRequirementAccess().getIdentityKeyword_0_0_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:10610:5: otherlv_1= 'attribute'
                            {
                            otherlv_1=(Token)match(input,172,FOLLOW_16); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_1, grammarAccess.getIdentityRequirementAccess().getAttributeKeyword_0_0_1());
                              				
                            }

                            }
                            break;
                        case 3 :
                            // InternalKim.g:10615:5: otherlv_2= 'realm'
                            {
                            otherlv_2=(Token)match(input,173,FOLLOW_16); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_2, grammarAccess.getIdentityRequirementAccess().getRealmKeyword_0_0_2());
                              				
                            }

                            }
                            break;
                        case 4 :
                            // InternalKim.g:10620:5: otherlv_3= 'extent'
                            {
                            otherlv_3=(Token)match(input,174,FOLLOW_16); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_3, grammarAccess.getIdentityRequirementAccess().getExtentKeyword_0_0_3());
                              				
                            }

                            }
                            break;

                    }

                    // InternalKim.g:10625:4: ( (lv_identities_4_0= ruleConceptDeclaration ) )
                    // InternalKim.g:10626:5: (lv_identities_4_0= ruleConceptDeclaration )
                    {
                    // InternalKim.g:10626:5: (lv_identities_4_0= ruleConceptDeclaration )
                    // InternalKim.g:10627:6: lv_identities_4_0= ruleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getIdentityRequirementAccess().getIdentitiesConceptDeclarationParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_29);
                    lv_identities_4_0=ruleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getIdentityRequirementRule());
                      						}
                      						add(
                      							current,
                      							"identities",
                      							lv_identities_4_0,
                      							"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:10644:4: (otherlv_5= ',' ( (lv_identities_6_0= ruleConceptDeclaration ) ) )*
                    loop219:
                    do {
                        int alt219=2;
                        int LA219_0 = input.LA(1);

                        if ( (LA219_0==22) ) {
                            int LA219_1 = input.LA(2);

                            if ( ((LA219_1>=RULE_LOWERCASE_ID && LA219_1<=RULE_STRING)||LA219_1==RULE_CAMELCASE_ID||LA219_1==34||(LA219_1>=108 && LA219_1<=109)||(LA219_1>=116 && LA219_1<=117)||(LA219_1>=119 && LA219_1<=130)) ) {
                                alt219=1;
                            }


                        }


                        switch (alt219) {
                    	case 1 :
                    	    // InternalKim.g:10645:5: otherlv_5= ',' ( (lv_identities_6_0= ruleConceptDeclaration ) )
                    	    {
                    	    otherlv_5=(Token)match(input,22,FOLLOW_16); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_5, grammarAccess.getIdentityRequirementAccess().getCommaKeyword_0_2_0());
                    	      				
                    	    }
                    	    // InternalKim.g:10649:5: ( (lv_identities_6_0= ruleConceptDeclaration ) )
                    	    // InternalKim.g:10650:6: (lv_identities_6_0= ruleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:10650:6: (lv_identities_6_0= ruleConceptDeclaration )
                    	    // InternalKim.g:10651:7: lv_identities_6_0= ruleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getIdentityRequirementAccess().getIdentitiesConceptDeclarationParserRuleCall_0_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_29);
                    	    lv_identities_6_0=ruleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getIdentityRequirementRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"identities",
                    	      								lv_identities_6_0,
                    	      								"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop219;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:10671:3: (otherlv_7= 'authority' ( ( (lv_authority_8_1= RULE_UPPERCASE_ID | lv_authority_8_2= RULE_UPPERCASE_PATH ) ) ) )
                    {
                    // InternalKim.g:10671:3: (otherlv_7= 'authority' ( ( (lv_authority_8_1= RULE_UPPERCASE_ID | lv_authority_8_2= RULE_UPPERCASE_PATH ) ) ) )
                    // InternalKim.g:10672:4: otherlv_7= 'authority' ( ( (lv_authority_8_1= RULE_UPPERCASE_ID | lv_authority_8_2= RULE_UPPERCASE_PATH ) ) )
                    {
                    otherlv_7=(Token)match(input,149,FOLLOW_100); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getIdentityRequirementAccess().getAuthorityKeyword_1_0());
                      			
                    }
                    // InternalKim.g:10676:4: ( ( (lv_authority_8_1= RULE_UPPERCASE_ID | lv_authority_8_2= RULE_UPPERCASE_PATH ) ) )
                    // InternalKim.g:10677:5: ( (lv_authority_8_1= RULE_UPPERCASE_ID | lv_authority_8_2= RULE_UPPERCASE_PATH ) )
                    {
                    // InternalKim.g:10677:5: ( (lv_authority_8_1= RULE_UPPERCASE_ID | lv_authority_8_2= RULE_UPPERCASE_PATH ) )
                    // InternalKim.g:10678:6: (lv_authority_8_1= RULE_UPPERCASE_ID | lv_authority_8_2= RULE_UPPERCASE_PATH )
                    {
                    // InternalKim.g:10678:6: (lv_authority_8_1= RULE_UPPERCASE_ID | lv_authority_8_2= RULE_UPPERCASE_PATH )
                    int alt220=2;
                    int LA220_0 = input.LA(1);

                    if ( (LA220_0==RULE_UPPERCASE_ID) ) {
                        alt220=1;
                    }
                    else if ( (LA220_0==RULE_UPPERCASE_PATH) ) {
                        alt220=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 220, 0, input);

                        throw nvae;
                    }
                    switch (alt220) {
                        case 1 :
                            // InternalKim.g:10679:7: lv_authority_8_1= RULE_UPPERCASE_ID
                            {
                            lv_authority_8_1=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_authority_8_1, grammarAccess.getIdentityRequirementAccess().getAuthorityUPPERCASE_IDTerminalRuleCall_1_1_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getIdentityRequirementRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"authority",
                              								lv_authority_8_1,
                              								"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:10694:7: lv_authority_8_2= RULE_UPPERCASE_PATH
                            {
                            lv_authority_8_2=(Token)match(input,RULE_UPPERCASE_PATH,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_authority_8_2, grammarAccess.getIdentityRequirementAccess().getAuthorityUPPERCASE_PATHTerminalRuleCall_1_1_0_1());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getIdentityRequirementRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"authority",
                              								lv_authority_8_2,
                              								"org.integratedmodelling.kim.Kim.UPPERCASE_PATH");
                              						
                            }

                            }
                            break;

                    }


                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIdentityRequirement"


    // $ANTLR start "entryRuleRestrictionStatement"
    // InternalKim.g:10716:1: entryRuleRestrictionStatement returns [EObject current=null] : iv_ruleRestrictionStatement= ruleRestrictionStatement EOF ;
    public final EObject entryRuleRestrictionStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRestrictionStatement = null;


        try {
            // InternalKim.g:10716:61: (iv_ruleRestrictionStatement= ruleRestrictionStatement EOF )
            // InternalKim.g:10717:2: iv_ruleRestrictionStatement= ruleRestrictionStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRestrictionStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRestrictionStatement=ruleRestrictionStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRestrictionStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRestrictionStatement"


    // $ANTLR start "ruleRestrictionStatement"
    // InternalKim.g:10723:1: ruleRestrictionStatement returns [EObject current=null] : ( ( ( ( (lv_relType_0_1= 'uses' | lv_relType_0_2= 'has' | lv_relType_0_3= 'contains' | lv_relType_0_4= 'implies' ) ) ) ( (lv_definitions_1_0= ruleRestrictionDefinition ) ) (otherlv_2= ',' ( (lv_definitions_3_0= ruleRestrictionDefinition ) ) )* ) | (otherlv_4= 'uses' otherlv_5= 'authority' ( ( (lv_authorities_6_1= RULE_UPPERCASE_ID | lv_authorities_6_2= RULE_UPPERCASE_PATH ) ) ) ( ( ( ',' )=>otherlv_7= ',' ) ( ( (lv_authorities_8_1= RULE_UPPERCASE_ID | lv_authorities_8_2= RULE_UPPERCASE_PATH ) ) ) )* ) | (otherlv_9= 'uses' ( (lv_value_10_0= ruleLiteral ) ) ( (lv_literal_11_0= 'for' ) ) ( ( (lv_subject_12_1= RULE_CAMELCASE_ID | lv_subject_12_2= ruleNamespaceId ) ) ) ) ) ;
    public final EObject ruleRestrictionStatement() throws RecognitionException {
        EObject current = null;

        Token lv_relType_0_1=null;
        Token lv_relType_0_2=null;
        Token lv_relType_0_3=null;
        Token lv_relType_0_4=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token lv_authorities_6_1=null;
        Token lv_authorities_6_2=null;
        Token otherlv_7=null;
        Token lv_authorities_8_1=null;
        Token lv_authorities_8_2=null;
        Token otherlv_9=null;
        Token lv_literal_11_0=null;
        Token lv_subject_12_1=null;
        EObject lv_definitions_1_0 = null;

        EObject lv_definitions_3_0 = null;

        EObject lv_value_10_0 = null;

        AntlrDatatypeRuleToken lv_subject_12_2 = null;



        	enterRule();

        try {
            // InternalKim.g:10729:2: ( ( ( ( ( (lv_relType_0_1= 'uses' | lv_relType_0_2= 'has' | lv_relType_0_3= 'contains' | lv_relType_0_4= 'implies' ) ) ) ( (lv_definitions_1_0= ruleRestrictionDefinition ) ) (otherlv_2= ',' ( (lv_definitions_3_0= ruleRestrictionDefinition ) ) )* ) | (otherlv_4= 'uses' otherlv_5= 'authority' ( ( (lv_authorities_6_1= RULE_UPPERCASE_ID | lv_authorities_6_2= RULE_UPPERCASE_PATH ) ) ) ( ( ( ',' )=>otherlv_7= ',' ) ( ( (lv_authorities_8_1= RULE_UPPERCASE_ID | lv_authorities_8_2= RULE_UPPERCASE_PATH ) ) ) )* ) | (otherlv_9= 'uses' ( (lv_value_10_0= ruleLiteral ) ) ( (lv_literal_11_0= 'for' ) ) ( ( (lv_subject_12_1= RULE_CAMELCASE_ID | lv_subject_12_2= ruleNamespaceId ) ) ) ) ) )
            // InternalKim.g:10730:2: ( ( ( ( (lv_relType_0_1= 'uses' | lv_relType_0_2= 'has' | lv_relType_0_3= 'contains' | lv_relType_0_4= 'implies' ) ) ) ( (lv_definitions_1_0= ruleRestrictionDefinition ) ) (otherlv_2= ',' ( (lv_definitions_3_0= ruleRestrictionDefinition ) ) )* ) | (otherlv_4= 'uses' otherlv_5= 'authority' ( ( (lv_authorities_6_1= RULE_UPPERCASE_ID | lv_authorities_6_2= RULE_UPPERCASE_PATH ) ) ) ( ( ( ',' )=>otherlv_7= ',' ) ( ( (lv_authorities_8_1= RULE_UPPERCASE_ID | lv_authorities_8_2= RULE_UPPERCASE_PATH ) ) ) )* ) | (otherlv_9= 'uses' ( (lv_value_10_0= ruleLiteral ) ) ( (lv_literal_11_0= 'for' ) ) ( ( (lv_subject_12_1= RULE_CAMELCASE_ID | lv_subject_12_2= ruleNamespaceId ) ) ) ) )
            {
            // InternalKim.g:10730:2: ( ( ( ( (lv_relType_0_1= 'uses' | lv_relType_0_2= 'has' | lv_relType_0_3= 'contains' | lv_relType_0_4= 'implies' ) ) ) ( (lv_definitions_1_0= ruleRestrictionDefinition ) ) (otherlv_2= ',' ( (lv_definitions_3_0= ruleRestrictionDefinition ) ) )* ) | (otherlv_4= 'uses' otherlv_5= 'authority' ( ( (lv_authorities_6_1= RULE_UPPERCASE_ID | lv_authorities_6_2= RULE_UPPERCASE_PATH ) ) ) ( ( ( ',' )=>otherlv_7= ',' ) ( ( (lv_authorities_8_1= RULE_UPPERCASE_ID | lv_authorities_8_2= RULE_UPPERCASE_PATH ) ) ) )* ) | (otherlv_9= 'uses' ( (lv_value_10_0= ruleLiteral ) ) ( (lv_literal_11_0= 'for' ) ) ( ( (lv_subject_12_1= RULE_CAMELCASE_ID | lv_subject_12_2= ruleNamespaceId ) ) ) ) )
            int alt228=3;
            alt228 = dfa228.predict(input);
            switch (alt228) {
                case 1 :
                    // InternalKim.g:10731:3: ( ( ( (lv_relType_0_1= 'uses' | lv_relType_0_2= 'has' | lv_relType_0_3= 'contains' | lv_relType_0_4= 'implies' ) ) ) ( (lv_definitions_1_0= ruleRestrictionDefinition ) ) (otherlv_2= ',' ( (lv_definitions_3_0= ruleRestrictionDefinition ) ) )* )
                    {
                    // InternalKim.g:10731:3: ( ( ( (lv_relType_0_1= 'uses' | lv_relType_0_2= 'has' | lv_relType_0_3= 'contains' | lv_relType_0_4= 'implies' ) ) ) ( (lv_definitions_1_0= ruleRestrictionDefinition ) ) (otherlv_2= ',' ( (lv_definitions_3_0= ruleRestrictionDefinition ) ) )* )
                    // InternalKim.g:10732:4: ( ( (lv_relType_0_1= 'uses' | lv_relType_0_2= 'has' | lv_relType_0_3= 'contains' | lv_relType_0_4= 'implies' ) ) ) ( (lv_definitions_1_0= ruleRestrictionDefinition ) ) (otherlv_2= ',' ( (lv_definitions_3_0= ruleRestrictionDefinition ) ) )*
                    {
                    // InternalKim.g:10732:4: ( ( (lv_relType_0_1= 'uses' | lv_relType_0_2= 'has' | lv_relType_0_3= 'contains' | lv_relType_0_4= 'implies' ) ) )
                    // InternalKim.g:10733:5: ( (lv_relType_0_1= 'uses' | lv_relType_0_2= 'has' | lv_relType_0_3= 'contains' | lv_relType_0_4= 'implies' ) )
                    {
                    // InternalKim.g:10733:5: ( (lv_relType_0_1= 'uses' | lv_relType_0_2= 'has' | lv_relType_0_3= 'contains' | lv_relType_0_4= 'implies' ) )
                    // InternalKim.g:10734:6: (lv_relType_0_1= 'uses' | lv_relType_0_2= 'has' | lv_relType_0_3= 'contains' | lv_relType_0_4= 'implies' )
                    {
                    // InternalKim.g:10734:6: (lv_relType_0_1= 'uses' | lv_relType_0_2= 'has' | lv_relType_0_3= 'contains' | lv_relType_0_4= 'implies' )
                    int alt222=4;
                    switch ( input.LA(1) ) {
                    case 175:
                        {
                        alt222=1;
                        }
                        break;
                    case 158:
                        {
                        alt222=2;
                        }
                        break;
                    case 176:
                        {
                        alt222=3;
                        }
                        break;
                    case 177:
                        {
                        alt222=4;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 222, 0, input);

                        throw nvae;
                    }

                    switch (alt222) {
                        case 1 :
                            // InternalKim.g:10735:7: lv_relType_0_1= 'uses'
                            {
                            lv_relType_0_1=(Token)match(input,175,FOLLOW_134); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_relType_0_1, grammarAccess.getRestrictionStatementAccess().getRelTypeUsesKeyword_0_0_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getRestrictionStatementRule());
                              							}
                              							setWithLastConsumed(current, "relType", lv_relType_0_1, null);
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:10746:7: lv_relType_0_2= 'has'
                            {
                            lv_relType_0_2=(Token)match(input,158,FOLLOW_134); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_relType_0_2, grammarAccess.getRestrictionStatementAccess().getRelTypeHasKeyword_0_0_0_1());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getRestrictionStatementRule());
                              							}
                              							setWithLastConsumed(current, "relType", lv_relType_0_2, null);
                              						
                            }

                            }
                            break;
                        case 3 :
                            // InternalKim.g:10757:7: lv_relType_0_3= 'contains'
                            {
                            lv_relType_0_3=(Token)match(input,176,FOLLOW_134); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_relType_0_3, grammarAccess.getRestrictionStatementAccess().getRelTypeContainsKeyword_0_0_0_2());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getRestrictionStatementRule());
                              							}
                              							setWithLastConsumed(current, "relType", lv_relType_0_3, null);
                              						
                            }

                            }
                            break;
                        case 4 :
                            // InternalKim.g:10768:7: lv_relType_0_4= 'implies'
                            {
                            lv_relType_0_4=(Token)match(input,177,FOLLOW_134); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_relType_0_4, grammarAccess.getRestrictionStatementAccess().getRelTypeImpliesKeyword_0_0_0_3());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getRestrictionStatementRule());
                              							}
                              							setWithLastConsumed(current, "relType", lv_relType_0_4, null);
                              						
                            }

                            }
                            break;

                    }


                    }


                    }

                    // InternalKim.g:10781:4: ( (lv_definitions_1_0= ruleRestrictionDefinition ) )
                    // InternalKim.g:10782:5: (lv_definitions_1_0= ruleRestrictionDefinition )
                    {
                    // InternalKim.g:10782:5: (lv_definitions_1_0= ruleRestrictionDefinition )
                    // InternalKim.g:10783:6: lv_definitions_1_0= ruleRestrictionDefinition
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getRestrictionStatementAccess().getDefinitionsRestrictionDefinitionParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_29);
                    lv_definitions_1_0=ruleRestrictionDefinition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getRestrictionStatementRule());
                      						}
                      						add(
                      							current,
                      							"definitions",
                      							lv_definitions_1_0,
                      							"org.integratedmodelling.kim.Kim.RestrictionDefinition");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:10800:4: (otherlv_2= ',' ( (lv_definitions_3_0= ruleRestrictionDefinition ) ) )*
                    loop223:
                    do {
                        int alt223=2;
                        int LA223_0 = input.LA(1);

                        if ( (LA223_0==22) ) {
                            alt223=1;
                        }


                        switch (alt223) {
                    	case 1 :
                    	    // InternalKim.g:10801:5: otherlv_2= ',' ( (lv_definitions_3_0= ruleRestrictionDefinition ) )
                    	    {
                    	    otherlv_2=(Token)match(input,22,FOLLOW_134); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_2, grammarAccess.getRestrictionStatementAccess().getCommaKeyword_0_2_0());
                    	      				
                    	    }
                    	    // InternalKim.g:10805:5: ( (lv_definitions_3_0= ruleRestrictionDefinition ) )
                    	    // InternalKim.g:10806:6: (lv_definitions_3_0= ruleRestrictionDefinition )
                    	    {
                    	    // InternalKim.g:10806:6: (lv_definitions_3_0= ruleRestrictionDefinition )
                    	    // InternalKim.g:10807:7: lv_definitions_3_0= ruleRestrictionDefinition
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getRestrictionStatementAccess().getDefinitionsRestrictionDefinitionParserRuleCall_0_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_29);
                    	    lv_definitions_3_0=ruleRestrictionDefinition();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getRestrictionStatementRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"definitions",
                    	      								lv_definitions_3_0,
                    	      								"org.integratedmodelling.kim.Kim.RestrictionDefinition");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop223;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:10827:3: (otherlv_4= 'uses' otherlv_5= 'authority' ( ( (lv_authorities_6_1= RULE_UPPERCASE_ID | lv_authorities_6_2= RULE_UPPERCASE_PATH ) ) ) ( ( ( ',' )=>otherlv_7= ',' ) ( ( (lv_authorities_8_1= RULE_UPPERCASE_ID | lv_authorities_8_2= RULE_UPPERCASE_PATH ) ) ) )* )
                    {
                    // InternalKim.g:10827:3: (otherlv_4= 'uses' otherlv_5= 'authority' ( ( (lv_authorities_6_1= RULE_UPPERCASE_ID | lv_authorities_6_2= RULE_UPPERCASE_PATH ) ) ) ( ( ( ',' )=>otherlv_7= ',' ) ( ( (lv_authorities_8_1= RULE_UPPERCASE_ID | lv_authorities_8_2= RULE_UPPERCASE_PATH ) ) ) )* )
                    // InternalKim.g:10828:4: otherlv_4= 'uses' otherlv_5= 'authority' ( ( (lv_authorities_6_1= RULE_UPPERCASE_ID | lv_authorities_6_2= RULE_UPPERCASE_PATH ) ) ) ( ( ( ',' )=>otherlv_7= ',' ) ( ( (lv_authorities_8_1= RULE_UPPERCASE_ID | lv_authorities_8_2= RULE_UPPERCASE_PATH ) ) ) )*
                    {
                    otherlv_4=(Token)match(input,175,FOLLOW_135); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getRestrictionStatementAccess().getUsesKeyword_1_0());
                      			
                    }
                    otherlv_5=(Token)match(input,149,FOLLOW_100); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getRestrictionStatementAccess().getAuthorityKeyword_1_1());
                      			
                    }
                    // InternalKim.g:10836:4: ( ( (lv_authorities_6_1= RULE_UPPERCASE_ID | lv_authorities_6_2= RULE_UPPERCASE_PATH ) ) )
                    // InternalKim.g:10837:5: ( (lv_authorities_6_1= RULE_UPPERCASE_ID | lv_authorities_6_2= RULE_UPPERCASE_PATH ) )
                    {
                    // InternalKim.g:10837:5: ( (lv_authorities_6_1= RULE_UPPERCASE_ID | lv_authorities_6_2= RULE_UPPERCASE_PATH ) )
                    // InternalKim.g:10838:6: (lv_authorities_6_1= RULE_UPPERCASE_ID | lv_authorities_6_2= RULE_UPPERCASE_PATH )
                    {
                    // InternalKim.g:10838:6: (lv_authorities_6_1= RULE_UPPERCASE_ID | lv_authorities_6_2= RULE_UPPERCASE_PATH )
                    int alt224=2;
                    int LA224_0 = input.LA(1);

                    if ( (LA224_0==RULE_UPPERCASE_ID) ) {
                        alt224=1;
                    }
                    else if ( (LA224_0==RULE_UPPERCASE_PATH) ) {
                        alt224=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 224, 0, input);

                        throw nvae;
                    }
                    switch (alt224) {
                        case 1 :
                            // InternalKim.g:10839:7: lv_authorities_6_1= RULE_UPPERCASE_ID
                            {
                            lv_authorities_6_1=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_29); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_authorities_6_1, grammarAccess.getRestrictionStatementAccess().getAuthoritiesUPPERCASE_IDTerminalRuleCall_1_2_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getRestrictionStatementRule());
                              							}
                              							addWithLastConsumed(
                              								current,
                              								"authorities",
                              								lv_authorities_6_1,
                              								"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:10854:7: lv_authorities_6_2= RULE_UPPERCASE_PATH
                            {
                            lv_authorities_6_2=(Token)match(input,RULE_UPPERCASE_PATH,FOLLOW_29); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_authorities_6_2, grammarAccess.getRestrictionStatementAccess().getAuthoritiesUPPERCASE_PATHTerminalRuleCall_1_2_0_1());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getRestrictionStatementRule());
                              							}
                              							addWithLastConsumed(
                              								current,
                              								"authorities",
                              								lv_authorities_6_2,
                              								"org.integratedmodelling.kim.Kim.UPPERCASE_PATH");
                              						
                            }

                            }
                            break;

                    }


                    }


                    }

                    // InternalKim.g:10871:4: ( ( ( ',' )=>otherlv_7= ',' ) ( ( (lv_authorities_8_1= RULE_UPPERCASE_ID | lv_authorities_8_2= RULE_UPPERCASE_PATH ) ) ) )*
                    loop226:
                    do {
                        int alt226=2;
                        int LA226_0 = input.LA(1);

                        if ( (LA226_0==22) ) {
                            alt226=1;
                        }


                        switch (alt226) {
                    	case 1 :
                    	    // InternalKim.g:10872:5: ( ( ',' )=>otherlv_7= ',' ) ( ( (lv_authorities_8_1= RULE_UPPERCASE_ID | lv_authorities_8_2= RULE_UPPERCASE_PATH ) ) )
                    	    {
                    	    // InternalKim.g:10872:5: ( ( ',' )=>otherlv_7= ',' )
                    	    // InternalKim.g:10873:6: ( ',' )=>otherlv_7= ','
                    	    {
                    	    otherlv_7=(Token)match(input,22,FOLLOW_100); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_7, grammarAccess.getRestrictionStatementAccess().getCommaKeyword_1_3_0());
                    	      					
                    	    }

                    	    }

                    	    // InternalKim.g:10879:5: ( ( (lv_authorities_8_1= RULE_UPPERCASE_ID | lv_authorities_8_2= RULE_UPPERCASE_PATH ) ) )
                    	    // InternalKim.g:10880:6: ( (lv_authorities_8_1= RULE_UPPERCASE_ID | lv_authorities_8_2= RULE_UPPERCASE_PATH ) )
                    	    {
                    	    // InternalKim.g:10880:6: ( (lv_authorities_8_1= RULE_UPPERCASE_ID | lv_authorities_8_2= RULE_UPPERCASE_PATH ) )
                    	    // InternalKim.g:10881:7: (lv_authorities_8_1= RULE_UPPERCASE_ID | lv_authorities_8_2= RULE_UPPERCASE_PATH )
                    	    {
                    	    // InternalKim.g:10881:7: (lv_authorities_8_1= RULE_UPPERCASE_ID | lv_authorities_8_2= RULE_UPPERCASE_PATH )
                    	    int alt225=2;
                    	    int LA225_0 = input.LA(1);

                    	    if ( (LA225_0==RULE_UPPERCASE_ID) ) {
                    	        alt225=1;
                    	    }
                    	    else if ( (LA225_0==RULE_UPPERCASE_PATH) ) {
                    	        alt225=2;
                    	    }
                    	    else {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 225, 0, input);

                    	        throw nvae;
                    	    }
                    	    switch (alt225) {
                    	        case 1 :
                    	            // InternalKim.g:10882:8: lv_authorities_8_1= RULE_UPPERCASE_ID
                    	            {
                    	            lv_authorities_8_1=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_29); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              								newLeafNode(lv_authorities_8_1, grammarAccess.getRestrictionStatementAccess().getAuthoritiesUPPERCASE_IDTerminalRuleCall_1_3_1_0_0());
                    	              							
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              								if (current==null) {
                    	              									current = createModelElement(grammarAccess.getRestrictionStatementRule());
                    	              								}
                    	              								addWithLastConsumed(
                    	              									current,
                    	              									"authorities",
                    	              									lv_authorities_8_1,
                    	              									"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                    	              							
                    	            }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // InternalKim.g:10897:8: lv_authorities_8_2= RULE_UPPERCASE_PATH
                    	            {
                    	            lv_authorities_8_2=(Token)match(input,RULE_UPPERCASE_PATH,FOLLOW_29); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              								newLeafNode(lv_authorities_8_2, grammarAccess.getRestrictionStatementAccess().getAuthoritiesUPPERCASE_PATHTerminalRuleCall_1_3_1_0_1());
                    	              							
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              								if (current==null) {
                    	              									current = createModelElement(grammarAccess.getRestrictionStatementRule());
                    	              								}
                    	              								addWithLastConsumed(
                    	              									current,
                    	              									"authorities",
                    	              									lv_authorities_8_2,
                    	              									"org.integratedmodelling.kim.Kim.UPPERCASE_PATH");
                    	              							
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop226;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:10917:3: (otherlv_9= 'uses' ( (lv_value_10_0= ruleLiteral ) ) ( (lv_literal_11_0= 'for' ) ) ( ( (lv_subject_12_1= RULE_CAMELCASE_ID | lv_subject_12_2= ruleNamespaceId ) ) ) )
                    {
                    // InternalKim.g:10917:3: (otherlv_9= 'uses' ( (lv_value_10_0= ruleLiteral ) ) ( (lv_literal_11_0= 'for' ) ) ( ( (lv_subject_12_1= RULE_CAMELCASE_ID | lv_subject_12_2= ruleNamespaceId ) ) ) )
                    // InternalKim.g:10918:4: otherlv_9= 'uses' ( (lv_value_10_0= ruleLiteral ) ) ( (lv_literal_11_0= 'for' ) ) ( ( (lv_subject_12_1= RULE_CAMELCASE_ID | lv_subject_12_2= ruleNamespaceId ) ) )
                    {
                    otherlv_9=(Token)match(input,175,FOLLOW_134); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getRestrictionStatementAccess().getUsesKeyword_2_0());
                      			
                    }
                    // InternalKim.g:10922:4: ( (lv_value_10_0= ruleLiteral ) )
                    // InternalKim.g:10923:5: (lv_value_10_0= ruleLiteral )
                    {
                    // InternalKim.g:10923:5: (lv_value_10_0= ruleLiteral )
                    // InternalKim.g:10924:6: lv_value_10_0= ruleLiteral
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getRestrictionStatementAccess().getValueLiteralParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_136);
                    lv_value_10_0=ruleLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getRestrictionStatementRule());
                      						}
                      						set(
                      							current,
                      							"value",
                      							lv_value_10_0,
                      							"org.integratedmodelling.kim.Kim.Literal");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:10941:4: ( (lv_literal_11_0= 'for' ) )
                    // InternalKim.g:10942:5: (lv_literal_11_0= 'for' )
                    {
                    // InternalKim.g:10942:5: (lv_literal_11_0= 'for' )
                    // InternalKim.g:10943:6: lv_literal_11_0= 'for'
                    {
                    lv_literal_11_0=(Token)match(input,101,FOLLOW_137); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_literal_11_0, grammarAccess.getRestrictionStatementAccess().getLiteralForKeyword_2_2_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getRestrictionStatementRule());
                      						}
                      						setWithLastConsumed(current, "literal", true, "for");
                      					
                    }

                    }


                    }

                    // InternalKim.g:10955:4: ( ( (lv_subject_12_1= RULE_CAMELCASE_ID | lv_subject_12_2= ruleNamespaceId ) ) )
                    // InternalKim.g:10956:5: ( (lv_subject_12_1= RULE_CAMELCASE_ID | lv_subject_12_2= ruleNamespaceId ) )
                    {
                    // InternalKim.g:10956:5: ( (lv_subject_12_1= RULE_CAMELCASE_ID | lv_subject_12_2= ruleNamespaceId ) )
                    // InternalKim.g:10957:6: (lv_subject_12_1= RULE_CAMELCASE_ID | lv_subject_12_2= ruleNamespaceId )
                    {
                    // InternalKim.g:10957:6: (lv_subject_12_1= RULE_CAMELCASE_ID | lv_subject_12_2= ruleNamespaceId )
                    int alt227=2;
                    int LA227_0 = input.LA(1);

                    if ( (LA227_0==RULE_CAMELCASE_ID) ) {
                        alt227=1;
                    }
                    else if ( (LA227_0==RULE_LOWERCASE_ID) ) {
                        alt227=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 227, 0, input);

                        throw nvae;
                    }
                    switch (alt227) {
                        case 1 :
                            // InternalKim.g:10958:7: lv_subject_12_1= RULE_CAMELCASE_ID
                            {
                            lv_subject_12_1=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_subject_12_1, grammarAccess.getRestrictionStatementAccess().getSubjectCAMELCASE_IDTerminalRuleCall_2_3_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getRestrictionStatementRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"subject",
                              								lv_subject_12_1,
                              								"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:10973:7: lv_subject_12_2= ruleNamespaceId
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getRestrictionStatementAccess().getSubjectNamespaceIdParserRuleCall_2_3_0_1());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_subject_12_2=ruleNamespaceId();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getRestrictionStatementRule());
                              							}
                              							set(
                              								current,
                              								"subject",
                              								lv_subject_12_2,
                              								"org.integratedmodelling.kim.Kim.NamespaceId");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }
                            break;

                    }


                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRestrictionStatement"


    // $ANTLR start "entryRuleRestrictionDefinition"
    // InternalKim.g:10996:1: entryRuleRestrictionDefinition returns [EObject current=null] : iv_ruleRestrictionDefinition= ruleRestrictionDefinition EOF ;
    public final EObject entryRuleRestrictionDefinition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRestrictionDefinition = null;


        try {
            // InternalKim.g:10996:62: (iv_ruleRestrictionDefinition= ruleRestrictionDefinition EOF )
            // InternalKim.g:10997:2: iv_ruleRestrictionDefinition= ruleRestrictionDefinition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRestrictionDefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRestrictionDefinition=ruleRestrictionDefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRestrictionDefinition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRestrictionDefinition"


    // $ANTLR start "ruleRestrictionDefinition"
    // InternalKim.g:11003:1: ruleRestrictionDefinition returns [EObject current=null] : ( ( ( ( (lv_only_0_0= 'only' ) ) | ( (lv_none_1_0= 'no' ) ) | ( ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( (lv_atLeast_4_0= 'least' ) ) ) | (otherlv_5= 'at' ( (lv_atMost_6_0= 'most' ) ) ) ) ( (lv_howmany_7_0= RULE_INT ) ) ) )? ( ( (lv_source_8_0= ruleConceptDeclaration ) ) | ( (lv_dataType_9_0= ruleDataType ) ) ) (otherlv_10= 'inheriting' ( (lv_traitType_11_0= ruleConceptDeclaration ) ) )? ( (otherlv_12= 'for' | otherlv_13= 'as' ) ( (lv_subject_14_0= ruleConceptDeclaration ) ) )? ) | ( ( (lv_value_15_0= ruleLiteral ) ) (otherlv_16= 'to' ( (lv_maxValue_17_0= ruleNumber ) ) )? otherlv_18= 'for' ( (lv_property_19_0= rulePropertyId ) ) ) ) ;
    public final EObject ruleRestrictionDefinition() throws RecognitionException {
        EObject current = null;

        Token lv_only_0_0=null;
        Token lv_none_1_0=null;
        Token lv_exactly_2_0=null;
        Token otherlv_3=null;
        Token lv_atLeast_4_0=null;
        Token otherlv_5=null;
        Token lv_atMost_6_0=null;
        Token lv_howmany_7_0=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        EObject lv_source_8_0 = null;

        Enumerator lv_dataType_9_0 = null;

        EObject lv_traitType_11_0 = null;

        EObject lv_subject_14_0 = null;

        EObject lv_value_15_0 = null;

        EObject lv_maxValue_17_0 = null;

        AntlrDatatypeRuleToken lv_property_19_0 = null;



        	enterRule();

        try {
            // InternalKim.g:11009:2: ( ( ( ( ( (lv_only_0_0= 'only' ) ) | ( (lv_none_1_0= 'no' ) ) | ( ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( (lv_atLeast_4_0= 'least' ) ) ) | (otherlv_5= 'at' ( (lv_atMost_6_0= 'most' ) ) ) ) ( (lv_howmany_7_0= RULE_INT ) ) ) )? ( ( (lv_source_8_0= ruleConceptDeclaration ) ) | ( (lv_dataType_9_0= ruleDataType ) ) ) (otherlv_10= 'inheriting' ( (lv_traitType_11_0= ruleConceptDeclaration ) ) )? ( (otherlv_12= 'for' | otherlv_13= 'as' ) ( (lv_subject_14_0= ruleConceptDeclaration ) ) )? ) | ( ( (lv_value_15_0= ruleLiteral ) ) (otherlv_16= 'to' ( (lv_maxValue_17_0= ruleNumber ) ) )? otherlv_18= 'for' ( (lv_property_19_0= rulePropertyId ) ) ) ) )
            // InternalKim.g:11010:2: ( ( ( ( (lv_only_0_0= 'only' ) ) | ( (lv_none_1_0= 'no' ) ) | ( ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( (lv_atLeast_4_0= 'least' ) ) ) | (otherlv_5= 'at' ( (lv_atMost_6_0= 'most' ) ) ) ) ( (lv_howmany_7_0= RULE_INT ) ) ) )? ( ( (lv_source_8_0= ruleConceptDeclaration ) ) | ( (lv_dataType_9_0= ruleDataType ) ) ) (otherlv_10= 'inheriting' ( (lv_traitType_11_0= ruleConceptDeclaration ) ) )? ( (otherlv_12= 'for' | otherlv_13= 'as' ) ( (lv_subject_14_0= ruleConceptDeclaration ) ) )? ) | ( ( (lv_value_15_0= ruleLiteral ) ) (otherlv_16= 'to' ( (lv_maxValue_17_0= ruleNumber ) ) )? otherlv_18= 'for' ( (lv_property_19_0= rulePropertyId ) ) ) )
            {
            // InternalKim.g:11010:2: ( ( ( ( (lv_only_0_0= 'only' ) ) | ( (lv_none_1_0= 'no' ) ) | ( ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( (lv_atLeast_4_0= 'least' ) ) ) | (otherlv_5= 'at' ( (lv_atMost_6_0= 'most' ) ) ) ) ( (lv_howmany_7_0= RULE_INT ) ) ) )? ( ( (lv_source_8_0= ruleConceptDeclaration ) ) | ( (lv_dataType_9_0= ruleDataType ) ) ) (otherlv_10= 'inheriting' ( (lv_traitType_11_0= ruleConceptDeclaration ) ) )? ( (otherlv_12= 'for' | otherlv_13= 'as' ) ( (lv_subject_14_0= ruleConceptDeclaration ) ) )? ) | ( ( (lv_value_15_0= ruleLiteral ) ) (otherlv_16= 'to' ( (lv_maxValue_17_0= ruleNumber ) ) )? otherlv_18= 'for' ( (lv_property_19_0= rulePropertyId ) ) ) )
            int alt236=2;
            switch ( input.LA(1) ) {
            case RULE_LOWERCASE_ID:
            case RULE_CAMELCASE_ID:
            case 34:
            case 72:
            case 73:
            case 108:
            case 109:
            case 116:
            case 117:
            case 119:
            case 120:
            case 121:
            case 122:
            case 123:
            case 124:
            case 125:
            case 126:
            case 127:
            case 128:
            case 129:
            case 130:
            case 178:
            case 179:
            case 180:
            case 230:
            case 231:
            case 232:
                {
                alt236=1;
                }
                break;
            case RULE_STRING:
                {
                int LA236_2 = input.LA(2);

                if ( (LA236_2==32||LA236_2==101) ) {
                    alt236=2;
                }
                else if ( (LA236_2==RULE_LOWERCASE_ID||LA236_2==RULE_CAMELCASE_ID||LA236_2==34||(LA236_2>=108 && LA236_2<=109)||(LA236_2>=116 && LA236_2<=117)||(LA236_2>=119 && LA236_2<=130)) ) {
                    alt236=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 236, 2, input);

                    throw nvae;
                }
                }
                break;
            case RULE_INT:
            case 23:
            case 24:
            case 226:
            case 227:
                {
                alt236=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 236, 0, input);

                throw nvae;
            }

            switch (alt236) {
                case 1 :
                    // InternalKim.g:11011:3: ( ( ( (lv_only_0_0= 'only' ) ) | ( (lv_none_1_0= 'no' ) ) | ( ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( (lv_atLeast_4_0= 'least' ) ) ) | (otherlv_5= 'at' ( (lv_atMost_6_0= 'most' ) ) ) ) ( (lv_howmany_7_0= RULE_INT ) ) ) )? ( ( (lv_source_8_0= ruleConceptDeclaration ) ) | ( (lv_dataType_9_0= ruleDataType ) ) ) (otherlv_10= 'inheriting' ( (lv_traitType_11_0= ruleConceptDeclaration ) ) )? ( (otherlv_12= 'for' | otherlv_13= 'as' ) ( (lv_subject_14_0= ruleConceptDeclaration ) ) )? )
                    {
                    // InternalKim.g:11011:3: ( ( ( (lv_only_0_0= 'only' ) ) | ( (lv_none_1_0= 'no' ) ) | ( ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( (lv_atLeast_4_0= 'least' ) ) ) | (otherlv_5= 'at' ( (lv_atMost_6_0= 'most' ) ) ) ) ( (lv_howmany_7_0= RULE_INT ) ) ) )? ( ( (lv_source_8_0= ruleConceptDeclaration ) ) | ( (lv_dataType_9_0= ruleDataType ) ) ) (otherlv_10= 'inheriting' ( (lv_traitType_11_0= ruleConceptDeclaration ) ) )? ( (otherlv_12= 'for' | otherlv_13= 'as' ) ( (lv_subject_14_0= ruleConceptDeclaration ) ) )? )
                    // InternalKim.g:11012:4: ( ( (lv_only_0_0= 'only' ) ) | ( (lv_none_1_0= 'no' ) ) | ( ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( (lv_atLeast_4_0= 'least' ) ) ) | (otherlv_5= 'at' ( (lv_atMost_6_0= 'most' ) ) ) ) ( (lv_howmany_7_0= RULE_INT ) ) ) )? ( ( (lv_source_8_0= ruleConceptDeclaration ) ) | ( (lv_dataType_9_0= ruleDataType ) ) ) (otherlv_10= 'inheriting' ( (lv_traitType_11_0= ruleConceptDeclaration ) ) )? ( (otherlv_12= 'for' | otherlv_13= 'as' ) ( (lv_subject_14_0= ruleConceptDeclaration ) ) )?
                    {
                    // InternalKim.g:11012:4: ( ( (lv_only_0_0= 'only' ) ) | ( (lv_none_1_0= 'no' ) ) | ( ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( (lv_atLeast_4_0= 'least' ) ) ) | (otherlv_5= 'at' ( (lv_atMost_6_0= 'most' ) ) ) ) ( (lv_howmany_7_0= RULE_INT ) ) ) )?
                    int alt230=4;
                    switch ( input.LA(1) ) {
                        case 178:
                            {
                            alt230=1;
                            }
                            break;
                        case 117:
                            {
                            int LA230_2 = input.LA(2);

                            if ( (synpred403_InternalKim()) ) {
                                alt230=2;
                            }
                            }
                            break;
                        case 179:
                        case 180:
                            {
                            alt230=3;
                            }
                            break;
                    }

                    switch (alt230) {
                        case 1 :
                            // InternalKim.g:11013:5: ( (lv_only_0_0= 'only' ) )
                            {
                            // InternalKim.g:11013:5: ( (lv_only_0_0= 'only' ) )
                            // InternalKim.g:11014:6: (lv_only_0_0= 'only' )
                            {
                            // InternalKim.g:11014:6: (lv_only_0_0= 'only' )
                            // InternalKim.g:11015:7: lv_only_0_0= 'only'
                            {
                            lv_only_0_0=(Token)match(input,178,FOLLOW_134); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_only_0_0, grammarAccess.getRestrictionDefinitionAccess().getOnlyOnlyKeyword_0_0_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getRestrictionDefinitionRule());
                              							}
                              							setWithLastConsumed(current, "only", true, "only");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:11028:5: ( (lv_none_1_0= 'no' ) )
                            {
                            // InternalKim.g:11028:5: ( (lv_none_1_0= 'no' ) )
                            // InternalKim.g:11029:6: (lv_none_1_0= 'no' )
                            {
                            // InternalKim.g:11029:6: (lv_none_1_0= 'no' )
                            // InternalKim.g:11030:7: lv_none_1_0= 'no'
                            {
                            lv_none_1_0=(Token)match(input,117,FOLLOW_134); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_none_1_0, grammarAccess.getRestrictionDefinitionAccess().getNoneNoKeyword_0_0_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getRestrictionDefinitionRule());
                              							}
                              							setWithLastConsumed(current, "none", true, "no");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 3 :
                            // InternalKim.g:11043:5: ( ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( (lv_atLeast_4_0= 'least' ) ) ) | (otherlv_5= 'at' ( (lv_atMost_6_0= 'most' ) ) ) ) ( (lv_howmany_7_0= RULE_INT ) ) )
                            {
                            // InternalKim.g:11043:5: ( ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( (lv_atLeast_4_0= 'least' ) ) ) | (otherlv_5= 'at' ( (lv_atMost_6_0= 'most' ) ) ) ) ( (lv_howmany_7_0= RULE_INT ) ) )
                            // InternalKim.g:11044:6: ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( (lv_atLeast_4_0= 'least' ) ) ) | (otherlv_5= 'at' ( (lv_atMost_6_0= 'most' ) ) ) ) ( (lv_howmany_7_0= RULE_INT ) )
                            {
                            // InternalKim.g:11044:6: ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( (lv_atLeast_4_0= 'least' ) ) ) | (otherlv_5= 'at' ( (lv_atMost_6_0= 'most' ) ) ) )
                            int alt229=3;
                            int LA229_0 = input.LA(1);

                            if ( (LA229_0==179) ) {
                                alt229=1;
                            }
                            else if ( (LA229_0==180) ) {
                                int LA229_2 = input.LA(2);

                                if ( (LA229_2==182) ) {
                                    alt229=3;
                                }
                                else if ( (LA229_2==181) ) {
                                    alt229=2;
                                }
                                else {
                                    if (state.backtracking>0) {state.failed=true; return current;}
                                    NoViableAltException nvae =
                                        new NoViableAltException("", 229, 2, input);

                                    throw nvae;
                                }
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 229, 0, input);

                                throw nvae;
                            }
                            switch (alt229) {
                                case 1 :
                                    // InternalKim.g:11045:7: ( (lv_exactly_2_0= 'exactly' ) )
                                    {
                                    // InternalKim.g:11045:7: ( (lv_exactly_2_0= 'exactly' ) )
                                    // InternalKim.g:11046:8: (lv_exactly_2_0= 'exactly' )
                                    {
                                    // InternalKim.g:11046:8: (lv_exactly_2_0= 'exactly' )
                                    // InternalKim.g:11047:9: lv_exactly_2_0= 'exactly'
                                    {
                                    lv_exactly_2_0=(Token)match(input,179,FOLLOW_68); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_exactly_2_0, grammarAccess.getRestrictionDefinitionAccess().getExactlyExactlyKeyword_0_0_2_0_0_0());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getRestrictionDefinitionRule());
                                      									}
                                      									setWithLastConsumed(current, "exactly", true, "exactly");
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:11060:7: (otherlv_3= 'at' ( (lv_atLeast_4_0= 'least' ) ) )
                                    {
                                    // InternalKim.g:11060:7: (otherlv_3= 'at' ( (lv_atLeast_4_0= 'least' ) ) )
                                    // InternalKim.g:11061:8: otherlv_3= 'at' ( (lv_atLeast_4_0= 'least' ) )
                                    {
                                    otherlv_3=(Token)match(input,180,FOLLOW_138); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_3, grammarAccess.getRestrictionDefinitionAccess().getAtKeyword_0_0_2_0_1_0());
                                      							
                                    }
                                    // InternalKim.g:11065:8: ( (lv_atLeast_4_0= 'least' ) )
                                    // InternalKim.g:11066:9: (lv_atLeast_4_0= 'least' )
                                    {
                                    // InternalKim.g:11066:9: (lv_atLeast_4_0= 'least' )
                                    // InternalKim.g:11067:10: lv_atLeast_4_0= 'least'
                                    {
                                    lv_atLeast_4_0=(Token)match(input,181,FOLLOW_68); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										newLeafNode(lv_atLeast_4_0, grammarAccess.getRestrictionDefinitionAccess().getAtLeastLeastKeyword_0_0_2_0_1_1_0());
                                      									
                                    }
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElement(grammarAccess.getRestrictionDefinitionRule());
                                      										}
                                      										setWithLastConsumed(current, "atLeast", true, "least");
                                      									
                                    }

                                    }


                                    }


                                    }


                                    }
                                    break;
                                case 3 :
                                    // InternalKim.g:11081:7: (otherlv_5= 'at' ( (lv_atMost_6_0= 'most' ) ) )
                                    {
                                    // InternalKim.g:11081:7: (otherlv_5= 'at' ( (lv_atMost_6_0= 'most' ) ) )
                                    // InternalKim.g:11082:8: otherlv_5= 'at' ( (lv_atMost_6_0= 'most' ) )
                                    {
                                    otherlv_5=(Token)match(input,180,FOLLOW_139); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_5, grammarAccess.getRestrictionDefinitionAccess().getAtKeyword_0_0_2_0_2_0());
                                      							
                                    }
                                    // InternalKim.g:11086:8: ( (lv_atMost_6_0= 'most' ) )
                                    // InternalKim.g:11087:9: (lv_atMost_6_0= 'most' )
                                    {
                                    // InternalKim.g:11087:9: (lv_atMost_6_0= 'most' )
                                    // InternalKim.g:11088:10: lv_atMost_6_0= 'most'
                                    {
                                    lv_atMost_6_0=(Token)match(input,182,FOLLOW_68); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										newLeafNode(lv_atMost_6_0, grammarAccess.getRestrictionDefinitionAccess().getAtMostMostKeyword_0_0_2_0_2_1_0());
                                      									
                                    }
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElement(grammarAccess.getRestrictionDefinitionRule());
                                      										}
                                      										setWithLastConsumed(current, "atMost", true, "most");
                                      									
                                    }

                                    }


                                    }


                                    }


                                    }
                                    break;

                            }

                            // InternalKim.g:11102:6: ( (lv_howmany_7_0= RULE_INT ) )
                            // InternalKim.g:11103:7: (lv_howmany_7_0= RULE_INT )
                            {
                            // InternalKim.g:11103:7: (lv_howmany_7_0= RULE_INT )
                            // InternalKim.g:11104:8: lv_howmany_7_0= RULE_INT
                            {
                            lv_howmany_7_0=(Token)match(input,RULE_INT,FOLLOW_134); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_howmany_7_0, grammarAccess.getRestrictionDefinitionAccess().getHowmanyINTTerminalRuleCall_0_0_2_1_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getRestrictionDefinitionRule());
                              								}
                              								setWithLastConsumed(
                              									current,
                              									"howmany",
                              									lv_howmany_7_0,
                              									"org.eclipse.xtext.common.Terminals.INT");
                              							
                            }

                            }


                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:11122:4: ( ( (lv_source_8_0= ruleConceptDeclaration ) ) | ( (lv_dataType_9_0= ruleDataType ) ) )
                    int alt231=2;
                    int LA231_0 = input.LA(1);

                    if ( ((LA231_0>=RULE_LOWERCASE_ID && LA231_0<=RULE_STRING)||LA231_0==RULE_CAMELCASE_ID||LA231_0==34||(LA231_0>=108 && LA231_0<=109)||(LA231_0>=116 && LA231_0<=117)||(LA231_0>=119 && LA231_0<=130)) ) {
                        alt231=1;
                    }
                    else if ( ((LA231_0>=72 && LA231_0<=73)||(LA231_0>=230 && LA231_0<=232)) ) {
                        alt231=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 231, 0, input);

                        throw nvae;
                    }
                    switch (alt231) {
                        case 1 :
                            // InternalKim.g:11123:5: ( (lv_source_8_0= ruleConceptDeclaration ) )
                            {
                            // InternalKim.g:11123:5: ( (lv_source_8_0= ruleConceptDeclaration ) )
                            // InternalKim.g:11124:6: (lv_source_8_0= ruleConceptDeclaration )
                            {
                            // InternalKim.g:11124:6: (lv_source_8_0= ruleConceptDeclaration )
                            // InternalKim.g:11125:7: lv_source_8_0= ruleConceptDeclaration
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getRestrictionDefinitionAccess().getSourceConceptDeclarationParserRuleCall_0_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_140);
                            lv_source_8_0=ruleConceptDeclaration();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getRestrictionDefinitionRule());
                              							}
                              							set(
                              								current,
                              								"source",
                              								lv_source_8_0,
                              								"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:11143:5: ( (lv_dataType_9_0= ruleDataType ) )
                            {
                            // InternalKim.g:11143:5: ( (lv_dataType_9_0= ruleDataType ) )
                            // InternalKim.g:11144:6: (lv_dataType_9_0= ruleDataType )
                            {
                            // InternalKim.g:11144:6: (lv_dataType_9_0= ruleDataType )
                            // InternalKim.g:11145:7: lv_dataType_9_0= ruleDataType
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getRestrictionDefinitionAccess().getDataTypeDataTypeEnumRuleCall_0_1_1_0());
                              						
                            }
                            pushFollow(FOLLOW_140);
                            lv_dataType_9_0=ruleDataType();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getRestrictionDefinitionRule());
                              							}
                              							set(
                              								current,
                              								"dataType",
                              								lv_dataType_9_0,
                              								"org.integratedmodelling.kim.Kim.DataType");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:11163:4: (otherlv_10= 'inheriting' ( (lv_traitType_11_0= ruleConceptDeclaration ) ) )?
                    int alt232=2;
                    int LA232_0 = input.LA(1);

                    if ( (LA232_0==183) ) {
                        alt232=1;
                    }
                    switch (alt232) {
                        case 1 :
                            // InternalKim.g:11164:5: otherlv_10= 'inheriting' ( (lv_traitType_11_0= ruleConceptDeclaration ) )
                            {
                            otherlv_10=(Token)match(input,183,FOLLOW_16); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_10, grammarAccess.getRestrictionDefinitionAccess().getInheritingKeyword_0_2_0());
                              				
                            }
                            // InternalKim.g:11168:5: ( (lv_traitType_11_0= ruleConceptDeclaration ) )
                            // InternalKim.g:11169:6: (lv_traitType_11_0= ruleConceptDeclaration )
                            {
                            // InternalKim.g:11169:6: (lv_traitType_11_0= ruleConceptDeclaration )
                            // InternalKim.g:11170:7: lv_traitType_11_0= ruleConceptDeclaration
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getRestrictionDefinitionAccess().getTraitTypeConceptDeclarationParserRuleCall_0_2_1_0());
                              						
                            }
                            pushFollow(FOLLOW_141);
                            lv_traitType_11_0=ruleConceptDeclaration();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getRestrictionDefinitionRule());
                              							}
                              							set(
                              								current,
                              								"traitType",
                              								lv_traitType_11_0,
                              								"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:11188:4: ( (otherlv_12= 'for' | otherlv_13= 'as' ) ( (lv_subject_14_0= ruleConceptDeclaration ) ) )?
                    int alt234=2;
                    int LA234_0 = input.LA(1);

                    if ( (LA234_0==25||LA234_0==101) ) {
                        alt234=1;
                    }
                    switch (alt234) {
                        case 1 :
                            // InternalKim.g:11189:5: (otherlv_12= 'for' | otherlv_13= 'as' ) ( (lv_subject_14_0= ruleConceptDeclaration ) )
                            {
                            // InternalKim.g:11189:5: (otherlv_12= 'for' | otherlv_13= 'as' )
                            int alt233=2;
                            int LA233_0 = input.LA(1);

                            if ( (LA233_0==101) ) {
                                alt233=1;
                            }
                            else if ( (LA233_0==25) ) {
                                alt233=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 233, 0, input);

                                throw nvae;
                            }
                            switch (alt233) {
                                case 1 :
                                    // InternalKim.g:11190:6: otherlv_12= 'for'
                                    {
                                    otherlv_12=(Token)match(input,101,FOLLOW_16); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      						newLeafNode(otherlv_12, grammarAccess.getRestrictionDefinitionAccess().getForKeyword_0_3_0_0());
                                      					
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:11195:6: otherlv_13= 'as'
                                    {
                                    otherlv_13=(Token)match(input,25,FOLLOW_16); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      						newLeafNode(otherlv_13, grammarAccess.getRestrictionDefinitionAccess().getAsKeyword_0_3_0_1());
                                      					
                                    }

                                    }
                                    break;

                            }

                            // InternalKim.g:11200:5: ( (lv_subject_14_0= ruleConceptDeclaration ) )
                            // InternalKim.g:11201:6: (lv_subject_14_0= ruleConceptDeclaration )
                            {
                            // InternalKim.g:11201:6: (lv_subject_14_0= ruleConceptDeclaration )
                            // InternalKim.g:11202:7: lv_subject_14_0= ruleConceptDeclaration
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getRestrictionDefinitionAccess().getSubjectConceptDeclarationParserRuleCall_0_3_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_subject_14_0=ruleConceptDeclaration();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getRestrictionDefinitionRule());
                              							}
                              							set(
                              								current,
                              								"subject",
                              								lv_subject_14_0,
                              								"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:11222:3: ( ( (lv_value_15_0= ruleLiteral ) ) (otherlv_16= 'to' ( (lv_maxValue_17_0= ruleNumber ) ) )? otherlv_18= 'for' ( (lv_property_19_0= rulePropertyId ) ) )
                    {
                    // InternalKim.g:11222:3: ( ( (lv_value_15_0= ruleLiteral ) ) (otherlv_16= 'to' ( (lv_maxValue_17_0= ruleNumber ) ) )? otherlv_18= 'for' ( (lv_property_19_0= rulePropertyId ) ) )
                    // InternalKim.g:11223:4: ( (lv_value_15_0= ruleLiteral ) ) (otherlv_16= 'to' ( (lv_maxValue_17_0= ruleNumber ) ) )? otherlv_18= 'for' ( (lv_property_19_0= rulePropertyId ) )
                    {
                    // InternalKim.g:11223:4: ( (lv_value_15_0= ruleLiteral ) )
                    // InternalKim.g:11224:5: (lv_value_15_0= ruleLiteral )
                    {
                    // InternalKim.g:11224:5: (lv_value_15_0= ruleLiteral )
                    // InternalKim.g:11225:6: lv_value_15_0= ruleLiteral
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getRestrictionDefinitionAccess().getValueLiteralParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_142);
                    lv_value_15_0=ruleLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getRestrictionDefinitionRule());
                      						}
                      						set(
                      							current,
                      							"value",
                      							lv_value_15_0,
                      							"org.integratedmodelling.kim.Kim.Literal");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:11242:4: (otherlv_16= 'to' ( (lv_maxValue_17_0= ruleNumber ) ) )?
                    int alt235=2;
                    int LA235_0 = input.LA(1);

                    if ( (LA235_0==32) ) {
                        alt235=1;
                    }
                    switch (alt235) {
                        case 1 :
                            // InternalKim.g:11243:5: otherlv_16= 'to' ( (lv_maxValue_17_0= ruleNumber ) )
                            {
                            otherlv_16=(Token)match(input,32,FOLLOW_33); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_16, grammarAccess.getRestrictionDefinitionAccess().getToKeyword_1_1_0());
                              				
                            }
                            // InternalKim.g:11247:5: ( (lv_maxValue_17_0= ruleNumber ) )
                            // InternalKim.g:11248:6: (lv_maxValue_17_0= ruleNumber )
                            {
                            // InternalKim.g:11248:6: (lv_maxValue_17_0= ruleNumber )
                            // InternalKim.g:11249:7: lv_maxValue_17_0= ruleNumber
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getRestrictionDefinitionAccess().getMaxValueNumberParserRuleCall_1_1_1_0());
                              						
                            }
                            pushFollow(FOLLOW_136);
                            lv_maxValue_17_0=ruleNumber();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getRestrictionDefinitionRule());
                              							}
                              							set(
                              								current,
                              								"maxValue",
                              								lv_maxValue_17_0,
                              								"org.integratedmodelling.kim.Kim.Number");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    otherlv_18=(Token)match(input,101,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_18, grammarAccess.getRestrictionDefinitionAccess().getForKeyword_1_2());
                      			
                    }
                    // InternalKim.g:11271:4: ( (lv_property_19_0= rulePropertyId ) )
                    // InternalKim.g:11272:5: (lv_property_19_0= rulePropertyId )
                    {
                    // InternalKim.g:11272:5: (lv_property_19_0= rulePropertyId )
                    // InternalKim.g:11273:6: lv_property_19_0= rulePropertyId
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getRestrictionDefinitionAccess().getPropertyPropertyIdParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_property_19_0=rulePropertyId();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getRestrictionDefinitionRule());
                      						}
                      						set(
                      							current,
                      							"property",
                      							lv_property_19_0,
                      							"org.integratedmodelling.kim.Kim.PropertyId");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRestrictionDefinition"


    // $ANTLR start "entryRuleAnnotation"
    // InternalKim.g:11295:1: entryRuleAnnotation returns [EObject current=null] : iv_ruleAnnotation= ruleAnnotation EOF ;
    public final EObject entryRuleAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotation = null;


        try {
            // InternalKim.g:11295:51: (iv_ruleAnnotation= ruleAnnotation EOF )
            // InternalKim.g:11296:2: iv_ruleAnnotation= ruleAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAnnotation=ruleAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAnnotation"


    // $ANTLR start "ruleAnnotation"
    // InternalKim.g:11302:1: ruleAnnotation returns [EObject current=null] : ( ( (lv_name_0_0= RULE_ANNOTATION_ID ) ) (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' )? ) ;
    public final EObject ruleAnnotation() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_parameters_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:11308:2: ( ( ( (lv_name_0_0= RULE_ANNOTATION_ID ) ) (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' )? ) )
            // InternalKim.g:11309:2: ( ( (lv_name_0_0= RULE_ANNOTATION_ID ) ) (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' )? )
            {
            // InternalKim.g:11309:2: ( ( (lv_name_0_0= RULE_ANNOTATION_ID ) ) (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' )? )
            // InternalKim.g:11310:3: ( (lv_name_0_0= RULE_ANNOTATION_ID ) ) (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' )?
            {
            // InternalKim.g:11310:3: ( (lv_name_0_0= RULE_ANNOTATION_ID ) )
            // InternalKim.g:11311:4: (lv_name_0_0= RULE_ANNOTATION_ID )
            {
            // InternalKim.g:11311:4: (lv_name_0_0= RULE_ANNOTATION_ID )
            // InternalKim.g:11312:5: lv_name_0_0= RULE_ANNOTATION_ID
            {
            lv_name_0_0=(Token)match(input,RULE_ANNOTATION_ID,FOLLOW_143); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_0_0, grammarAccess.getAnnotationAccess().getNameANNOTATION_IDTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getAnnotationRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_0_0,
              						"org.integratedmodelling.kim.Kim.ANNOTATION_ID");
              				
            }

            }


            }

            // InternalKim.g:11328:3: (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' )?
            int alt238=2;
            int LA238_0 = input.LA(1);

            if ( (LA238_0==34) ) {
                alt238=1;
            }
            switch (alt238) {
                case 1 :
                    // InternalKim.g:11329:4: otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')'
                    {
                    otherlv_1=(Token)match(input,34,FOLLOW_144); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getAnnotationAccess().getLeftParenthesisKeyword_1_0());
                      			
                    }
                    // InternalKim.g:11333:4: ( (lv_parameters_2_0= ruleParameterList ) )?
                    int alt237=2;
                    int LA237_0 = input.LA(1);

                    if ( ((LA237_0>=RULE_LOWERCASE_ID && LA237_0<=RULE_CAMELCASE_ID)||(LA237_0>=RULE_ID && LA237_0<=RULE_INT)||(LA237_0>=22 && LA237_0<=24)||LA237_0==34||(LA237_0>=47 && LA237_0<=48)||LA237_0==184||(LA237_0>=226 && LA237_0<=227)) ) {
                        alt237=1;
                    }
                    switch (alt237) {
                        case 1 :
                            // InternalKim.g:11334:5: (lv_parameters_2_0= ruleParameterList )
                            {
                            // InternalKim.g:11334:5: (lv_parameters_2_0= ruleParameterList )
                            // InternalKim.g:11335:6: lv_parameters_2_0= ruleParameterList
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getAnnotationAccess().getParametersParameterListParserRuleCall_1_1_0());
                              					
                            }
                            pushFollow(FOLLOW_83);
                            lv_parameters_2_0=ruleParameterList();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getAnnotationRule());
                              						}
                              						set(
                              							current,
                              							"parameters",
                              							lv_parameters_2_0,
                              							"org.integratedmodelling.kim.Kim.ParameterList");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    otherlv_3=(Token)match(input,37,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getAnnotationAccess().getRightParenthesisKeyword_1_2());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAnnotation"


    // $ANTLR start "entryRuleList"
    // InternalKim.g:11361:1: entryRuleList returns [EObject current=null] : iv_ruleList= ruleList EOF ;
    public final EObject entryRuleList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleList = null;


        try {
            // InternalKim.g:11361:45: (iv_ruleList= ruleList EOF )
            // InternalKim.g:11362:2: iv_ruleList= ruleList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleList=ruleList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleList"


    // $ANTLR start "ruleList"
    // InternalKim.g:11368:1: ruleList returns [EObject current=null] : ( () otherlv_1= '(' ( (lv_contents_2_0= ruleValue ) )* otherlv_3= ')' ) ;
    public final EObject ruleList() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_contents_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:11374:2: ( ( () otherlv_1= '(' ( (lv_contents_2_0= ruleValue ) )* otherlv_3= ')' ) )
            // InternalKim.g:11375:2: ( () otherlv_1= '(' ( (lv_contents_2_0= ruleValue ) )* otherlv_3= ')' )
            {
            // InternalKim.g:11375:2: ( () otherlv_1= '(' ( (lv_contents_2_0= ruleValue ) )* otherlv_3= ')' )
            // InternalKim.g:11376:3: () otherlv_1= '(' ( (lv_contents_2_0= ruleValue ) )* otherlv_3= ')'
            {
            // InternalKim.g:11376:3: ()
            // InternalKim.g:11377:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getListAccess().getListAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,34,FOLLOW_144); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getListAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalKim.g:11390:3: ( (lv_contents_2_0= ruleValue ) )*
            loop239:
            do {
                int alt239=2;
                int LA239_0 = input.LA(1);

                if ( ((LA239_0>=RULE_LOWERCASE_ID && LA239_0<=RULE_CAMELCASE_ID)||(LA239_0>=RULE_ID && LA239_0<=RULE_INT)||(LA239_0>=22 && LA239_0<=24)||LA239_0==34||(LA239_0>=47 && LA239_0<=48)||LA239_0==184||(LA239_0>=226 && LA239_0<=227)) ) {
                    alt239=1;
                }


                switch (alt239) {
            	case 1 :
            	    // InternalKim.g:11391:4: (lv_contents_2_0= ruleValue )
            	    {
            	    // InternalKim.g:11391:4: (lv_contents_2_0= ruleValue )
            	    // InternalKim.g:11392:5: lv_contents_2_0= ruleValue
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getListAccess().getContentsValueParserRuleCall_2_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_144);
            	    lv_contents_2_0=ruleValue();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getListRule());
            	      					}
            	      					add(
            	      						current,
            	      						"contents",
            	      						lv_contents_2_0,
            	      						"org.integratedmodelling.kim.Kim.Value");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop239;
                }
            } while (true);

            otherlv_3=(Token)match(input,37,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getListAccess().getRightParenthesisKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleList"


    // $ANTLR start "entryRuleLiteral"
    // InternalKim.g:11417:1: entryRuleLiteral returns [EObject current=null] : iv_ruleLiteral= ruleLiteral EOF ;
    public final EObject entryRuleLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteral = null;


        try {
            // InternalKim.g:11417:48: (iv_ruleLiteral= ruleLiteral EOF )
            // InternalKim.g:11418:2: iv_ruleLiteral= ruleLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLiteral=ruleLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLiteral"


    // $ANTLR start "ruleLiteral"
    // InternalKim.g:11424:1: ruleLiteral returns [EObject current=null] : ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) ) ;
    public final EObject ruleLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_string_4_0=null;
        Token lv_boolean_5_1=null;
        Token lv_boolean_5_2=null;
        EObject lv_from_0_0 = null;

        EObject lv_to_2_0 = null;

        EObject lv_number_3_0 = null;



        	enterRule();

        try {
            // InternalKim.g:11430:2: ( ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) ) )
            // InternalKim.g:11431:2: ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) )
            {
            // InternalKim.g:11431:2: ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) )
            int alt241=4;
            alt241 = dfa241.predict(input);
            switch (alt241) {
                case 1 :
                    // InternalKim.g:11432:3: ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) )
                    {
                    // InternalKim.g:11432:3: ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) )
                    // InternalKim.g:11433:4: ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) )
                    {
                    // InternalKim.g:11433:4: ( (lv_from_0_0= ruleNumber ) )
                    // InternalKim.g:11434:5: (lv_from_0_0= ruleNumber )
                    {
                    // InternalKim.g:11434:5: (lv_from_0_0= ruleNumber )
                    // InternalKim.g:11435:6: lv_from_0_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLiteralAccess().getFromNumberParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_18);
                    lv_from_0_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLiteralRule());
                      						}
                      						set(
                      							current,
                      							"from",
                      							lv_from_0_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:11452:4: ( ( 'to' )=>otherlv_1= 'to' )
                    // InternalKim.g:11453:5: ( 'to' )=>otherlv_1= 'to'
                    {
                    otherlv_1=(Token)match(input,32,FOLLOW_33); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getLiteralAccess().getToKeyword_0_1());
                      				
                    }

                    }

                    // InternalKim.g:11459:4: ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) )
                    // InternalKim.g:11460:5: ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber )
                    {
                    // InternalKim.g:11464:5: (lv_to_2_0= ruleNumber )
                    // InternalKim.g:11465:6: lv_to_2_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLiteralAccess().getToNumberParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_to_2_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLiteralRule());
                      						}
                      						set(
                      							current,
                      							"to",
                      							lv_to_2_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:11484:3: ( (lv_number_3_0= ruleNumber ) )
                    {
                    // InternalKim.g:11484:3: ( (lv_number_3_0= ruleNumber ) )
                    // InternalKim.g:11485:4: (lv_number_3_0= ruleNumber )
                    {
                    // InternalKim.g:11485:4: (lv_number_3_0= ruleNumber )
                    // InternalKim.g:11486:5: lv_number_3_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralAccess().getNumberNumberParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_number_3_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralRule());
                      					}
                      					set(
                      						current,
                      						"number",
                      						lv_number_3_0,
                      						"org.integratedmodelling.kim.Kim.Number");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:11504:3: ( (lv_string_4_0= RULE_STRING ) )
                    {
                    // InternalKim.g:11504:3: ( (lv_string_4_0= RULE_STRING ) )
                    // InternalKim.g:11505:4: (lv_string_4_0= RULE_STRING )
                    {
                    // InternalKim.g:11505:4: (lv_string_4_0= RULE_STRING )
                    // InternalKim.g:11506:5: lv_string_4_0= RULE_STRING
                    {
                    lv_string_4_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_string_4_0, grammarAccess.getLiteralAccess().getStringSTRINGTerminalRuleCall_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getLiteralRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"string",
                      						lv_string_4_0,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:11523:3: ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) )
                    {
                    // InternalKim.g:11523:3: ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) )
                    // InternalKim.g:11524:4: ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) )
                    {
                    // InternalKim.g:11524:4: ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) )
                    // InternalKim.g:11525:5: (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' )
                    {
                    // InternalKim.g:11525:5: (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' )
                    int alt240=2;
                    int LA240_0 = input.LA(1);

                    if ( (LA240_0==23) ) {
                        alt240=1;
                    }
                    else if ( (LA240_0==24) ) {
                        alt240=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 240, 0, input);

                        throw nvae;
                    }
                    switch (alt240) {
                        case 1 :
                            // InternalKim.g:11526:6: lv_boolean_5_1= 'true'
                            {
                            lv_boolean_5_1=(Token)match(input,23,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_5_1, grammarAccess.getLiteralAccess().getBooleanTrueKeyword_3_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getLiteralRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_5_1, null);
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:11537:6: lv_boolean_5_2= 'false'
                            {
                            lv_boolean_5_2=(Token)match(input,24,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_5_2, grammarAccess.getLiteralAccess().getBooleanFalseKeyword_3_0_1());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getLiteralRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_5_2, null);
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLiteral"


    // $ANTLR start "entryRuleLiteralOrID"
    // InternalKim.g:11554:1: entryRuleLiteralOrID returns [EObject current=null] : iv_ruleLiteralOrID= ruleLiteralOrID EOF ;
    public final EObject entryRuleLiteralOrID() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteralOrID = null;


        try {
            // InternalKim.g:11554:52: (iv_ruleLiteralOrID= ruleLiteralOrID EOF )
            // InternalKim.g:11555:2: iv_ruleLiteralOrID= ruleLiteralOrID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralOrIDRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLiteralOrID=ruleLiteralOrID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLiteralOrID; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLiteralOrID"


    // $ANTLR start "ruleLiteralOrID"
    // InternalKim.g:11561:1: ruleLiteralOrID returns [EObject current=null] : ( ( (lv_number_0_0= ruleNumber ) ) | ( (lv_string_1_0= RULE_STRING ) ) | ( ( (lv_boolean_2_1= 'true' | lv_boolean_2_2= 'false' ) ) ) | ( (lv_id_3_0= RULE_ID ) ) ) ;
    public final EObject ruleLiteralOrID() throws RecognitionException {
        EObject current = null;

        Token lv_string_1_0=null;
        Token lv_boolean_2_1=null;
        Token lv_boolean_2_2=null;
        Token lv_id_3_0=null;
        EObject lv_number_0_0 = null;



        	enterRule();

        try {
            // InternalKim.g:11567:2: ( ( ( (lv_number_0_0= ruleNumber ) ) | ( (lv_string_1_0= RULE_STRING ) ) | ( ( (lv_boolean_2_1= 'true' | lv_boolean_2_2= 'false' ) ) ) | ( (lv_id_3_0= RULE_ID ) ) ) )
            // InternalKim.g:11568:2: ( ( (lv_number_0_0= ruleNumber ) ) | ( (lv_string_1_0= RULE_STRING ) ) | ( ( (lv_boolean_2_1= 'true' | lv_boolean_2_2= 'false' ) ) ) | ( (lv_id_3_0= RULE_ID ) ) )
            {
            // InternalKim.g:11568:2: ( ( (lv_number_0_0= ruleNumber ) ) | ( (lv_string_1_0= RULE_STRING ) ) | ( ( (lv_boolean_2_1= 'true' | lv_boolean_2_2= 'false' ) ) ) | ( (lv_id_3_0= RULE_ID ) ) )
            int alt243=4;
            switch ( input.LA(1) ) {
            case RULE_INT:
            case 226:
            case 227:
                {
                alt243=1;
                }
                break;
            case RULE_STRING:
                {
                alt243=2;
                }
                break;
            case 23:
            case 24:
                {
                alt243=3;
                }
                break;
            case RULE_ID:
                {
                alt243=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 243, 0, input);

                throw nvae;
            }

            switch (alt243) {
                case 1 :
                    // InternalKim.g:11569:3: ( (lv_number_0_0= ruleNumber ) )
                    {
                    // InternalKim.g:11569:3: ( (lv_number_0_0= ruleNumber ) )
                    // InternalKim.g:11570:4: (lv_number_0_0= ruleNumber )
                    {
                    // InternalKim.g:11570:4: (lv_number_0_0= ruleNumber )
                    // InternalKim.g:11571:5: lv_number_0_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralOrIDAccess().getNumberNumberParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_number_0_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralOrIDRule());
                      					}
                      					set(
                      						current,
                      						"number",
                      						lv_number_0_0,
                      						"org.integratedmodelling.kim.Kim.Number");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:11589:3: ( (lv_string_1_0= RULE_STRING ) )
                    {
                    // InternalKim.g:11589:3: ( (lv_string_1_0= RULE_STRING ) )
                    // InternalKim.g:11590:4: (lv_string_1_0= RULE_STRING )
                    {
                    // InternalKim.g:11590:4: (lv_string_1_0= RULE_STRING )
                    // InternalKim.g:11591:5: lv_string_1_0= RULE_STRING
                    {
                    lv_string_1_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_string_1_0, grammarAccess.getLiteralOrIDAccess().getStringSTRINGTerminalRuleCall_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getLiteralOrIDRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"string",
                      						lv_string_1_0,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:11608:3: ( ( (lv_boolean_2_1= 'true' | lv_boolean_2_2= 'false' ) ) )
                    {
                    // InternalKim.g:11608:3: ( ( (lv_boolean_2_1= 'true' | lv_boolean_2_2= 'false' ) ) )
                    // InternalKim.g:11609:4: ( (lv_boolean_2_1= 'true' | lv_boolean_2_2= 'false' ) )
                    {
                    // InternalKim.g:11609:4: ( (lv_boolean_2_1= 'true' | lv_boolean_2_2= 'false' ) )
                    // InternalKim.g:11610:5: (lv_boolean_2_1= 'true' | lv_boolean_2_2= 'false' )
                    {
                    // InternalKim.g:11610:5: (lv_boolean_2_1= 'true' | lv_boolean_2_2= 'false' )
                    int alt242=2;
                    int LA242_0 = input.LA(1);

                    if ( (LA242_0==23) ) {
                        alt242=1;
                    }
                    else if ( (LA242_0==24) ) {
                        alt242=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 242, 0, input);

                        throw nvae;
                    }
                    switch (alt242) {
                        case 1 :
                            // InternalKim.g:11611:6: lv_boolean_2_1= 'true'
                            {
                            lv_boolean_2_1=(Token)match(input,23,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_2_1, grammarAccess.getLiteralOrIDAccess().getBooleanTrueKeyword_2_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getLiteralOrIDRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_2_1, null);
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:11622:6: lv_boolean_2_2= 'false'
                            {
                            lv_boolean_2_2=(Token)match(input,24,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_2_2, grammarAccess.getLiteralOrIDAccess().getBooleanFalseKeyword_2_0_1());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getLiteralOrIDRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_2_2, null);
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:11636:3: ( (lv_id_3_0= RULE_ID ) )
                    {
                    // InternalKim.g:11636:3: ( (lv_id_3_0= RULE_ID ) )
                    // InternalKim.g:11637:4: (lv_id_3_0= RULE_ID )
                    {
                    // InternalKim.g:11637:4: (lv_id_3_0= RULE_ID )
                    // InternalKim.g:11638:5: lv_id_3_0= RULE_ID
                    {
                    lv_id_3_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_id_3_0, grammarAccess.getLiteralOrIDAccess().getIdIDTerminalRuleCall_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getLiteralOrIDRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"id",
                      						lv_id_3_0,
                      						"org.eclipse.xtext.common.Terminals.ID");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLiteralOrID"


    // $ANTLR start "entryRuleLiteralOrIdOrComma"
    // InternalKim.g:11658:1: entryRuleLiteralOrIdOrComma returns [EObject current=null] : iv_ruleLiteralOrIdOrComma= ruleLiteralOrIdOrComma EOF ;
    public final EObject entryRuleLiteralOrIdOrComma() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteralOrIdOrComma = null;


        try {
            // InternalKim.g:11658:59: (iv_ruleLiteralOrIdOrComma= ruleLiteralOrIdOrComma EOF )
            // InternalKim.g:11659:2: iv_ruleLiteralOrIdOrComma= ruleLiteralOrIdOrComma EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralOrIdOrCommaRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLiteralOrIdOrComma=ruleLiteralOrIdOrComma();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLiteralOrIdOrComma; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLiteralOrIdOrComma"


    // $ANTLR start "ruleLiteralOrIdOrComma"
    // InternalKim.g:11665:1: ruleLiteralOrIdOrComma returns [EObject current=null] : ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) | ( (lv_id_6_0= RULE_ID ) ) | ( (lv_comma_7_0= ',' ) ) ) ;
    public final EObject ruleLiteralOrIdOrComma() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_string_4_0=null;
        Token lv_boolean_5_1=null;
        Token lv_boolean_5_2=null;
        Token lv_id_6_0=null;
        Token lv_comma_7_0=null;
        EObject lv_from_0_0 = null;

        EObject lv_to_2_0 = null;

        EObject lv_number_3_0 = null;



        	enterRule();

        try {
            // InternalKim.g:11671:2: ( ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) | ( (lv_id_6_0= RULE_ID ) ) | ( (lv_comma_7_0= ',' ) ) ) )
            // InternalKim.g:11672:2: ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) | ( (lv_id_6_0= RULE_ID ) ) | ( (lv_comma_7_0= ',' ) ) )
            {
            // InternalKim.g:11672:2: ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) | ( (lv_id_6_0= RULE_ID ) ) | ( (lv_comma_7_0= ',' ) ) )
            int alt245=6;
            alt245 = dfa245.predict(input);
            switch (alt245) {
                case 1 :
                    // InternalKim.g:11673:3: ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) )
                    {
                    // InternalKim.g:11673:3: ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) )
                    // InternalKim.g:11674:4: ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) )
                    {
                    // InternalKim.g:11674:4: ( (lv_from_0_0= ruleNumber ) )
                    // InternalKim.g:11675:5: (lv_from_0_0= ruleNumber )
                    {
                    // InternalKim.g:11675:5: (lv_from_0_0= ruleNumber )
                    // InternalKim.g:11676:6: lv_from_0_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLiteralOrIdOrCommaAccess().getFromNumberParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_18);
                    lv_from_0_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLiteralOrIdOrCommaRule());
                      						}
                      						set(
                      							current,
                      							"from",
                      							lv_from_0_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:11693:4: ( ( 'to' )=>otherlv_1= 'to' )
                    // InternalKim.g:11694:5: ( 'to' )=>otherlv_1= 'to'
                    {
                    otherlv_1=(Token)match(input,32,FOLLOW_33); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getLiteralOrIdOrCommaAccess().getToKeyword_0_1());
                      				
                    }

                    }

                    // InternalKim.g:11700:4: ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) )
                    // InternalKim.g:11701:5: ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber )
                    {
                    // InternalKim.g:11705:5: (lv_to_2_0= ruleNumber )
                    // InternalKim.g:11706:6: lv_to_2_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLiteralOrIdOrCommaAccess().getToNumberParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_to_2_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLiteralOrIdOrCommaRule());
                      						}
                      						set(
                      							current,
                      							"to",
                      							lv_to_2_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:11725:3: ( (lv_number_3_0= ruleNumber ) )
                    {
                    // InternalKim.g:11725:3: ( (lv_number_3_0= ruleNumber ) )
                    // InternalKim.g:11726:4: (lv_number_3_0= ruleNumber )
                    {
                    // InternalKim.g:11726:4: (lv_number_3_0= ruleNumber )
                    // InternalKim.g:11727:5: lv_number_3_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralOrIdOrCommaAccess().getNumberNumberParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_number_3_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralOrIdOrCommaRule());
                      					}
                      					set(
                      						current,
                      						"number",
                      						lv_number_3_0,
                      						"org.integratedmodelling.kim.Kim.Number");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:11745:3: ( (lv_string_4_0= RULE_STRING ) )
                    {
                    // InternalKim.g:11745:3: ( (lv_string_4_0= RULE_STRING ) )
                    // InternalKim.g:11746:4: (lv_string_4_0= RULE_STRING )
                    {
                    // InternalKim.g:11746:4: (lv_string_4_0= RULE_STRING )
                    // InternalKim.g:11747:5: lv_string_4_0= RULE_STRING
                    {
                    lv_string_4_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_string_4_0, grammarAccess.getLiteralOrIdOrCommaAccess().getStringSTRINGTerminalRuleCall_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getLiteralOrIdOrCommaRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"string",
                      						lv_string_4_0,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:11764:3: ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) )
                    {
                    // InternalKim.g:11764:3: ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) )
                    // InternalKim.g:11765:4: ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) )
                    {
                    // InternalKim.g:11765:4: ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) )
                    // InternalKim.g:11766:5: (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' )
                    {
                    // InternalKim.g:11766:5: (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' )
                    int alt244=2;
                    int LA244_0 = input.LA(1);

                    if ( (LA244_0==23) ) {
                        alt244=1;
                    }
                    else if ( (LA244_0==24) ) {
                        alt244=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 244, 0, input);

                        throw nvae;
                    }
                    switch (alt244) {
                        case 1 :
                            // InternalKim.g:11767:6: lv_boolean_5_1= 'true'
                            {
                            lv_boolean_5_1=(Token)match(input,23,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_5_1, grammarAccess.getLiteralOrIdOrCommaAccess().getBooleanTrueKeyword_3_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getLiteralOrIdOrCommaRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_5_1, null);
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:11778:6: lv_boolean_5_2= 'false'
                            {
                            lv_boolean_5_2=(Token)match(input,24,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_5_2, grammarAccess.getLiteralOrIdOrCommaAccess().getBooleanFalseKeyword_3_0_1());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getLiteralOrIdOrCommaRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_5_2, null);
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:11792:3: ( (lv_id_6_0= RULE_ID ) )
                    {
                    // InternalKim.g:11792:3: ( (lv_id_6_0= RULE_ID ) )
                    // InternalKim.g:11793:4: (lv_id_6_0= RULE_ID )
                    {
                    // InternalKim.g:11793:4: (lv_id_6_0= RULE_ID )
                    // InternalKim.g:11794:5: lv_id_6_0= RULE_ID
                    {
                    lv_id_6_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_id_6_0, grammarAccess.getLiteralOrIdOrCommaAccess().getIdIDTerminalRuleCall_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getLiteralOrIdOrCommaRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"id",
                      						lv_id_6_0,
                      						"org.eclipse.xtext.common.Terminals.ID");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:11811:3: ( (lv_comma_7_0= ',' ) )
                    {
                    // InternalKim.g:11811:3: ( (lv_comma_7_0= ',' ) )
                    // InternalKim.g:11812:4: (lv_comma_7_0= ',' )
                    {
                    // InternalKim.g:11812:4: (lv_comma_7_0= ',' )
                    // InternalKim.g:11813:5: lv_comma_7_0= ','
                    {
                    lv_comma_7_0=(Token)match(input,22,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_comma_7_0, grammarAccess.getLiteralOrIdOrCommaAccess().getCommaCommaKeyword_5_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getLiteralOrIdOrCommaRule());
                      					}
                      					setWithLastConsumed(current, "comma", true, ",");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLiteralOrIdOrComma"


    // $ANTLR start "entryRuleMetadata"
    // InternalKim.g:11829:1: entryRuleMetadata returns [EObject current=null] : iv_ruleMetadata= ruleMetadata EOF ;
    public final EObject entryRuleMetadata() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMetadata = null;


        try {
            // InternalKim.g:11829:49: (iv_ruleMetadata= ruleMetadata EOF )
            // InternalKim.g:11830:2: iv_ruleMetadata= ruleMetadata EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMetadataRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMetadata=ruleMetadata();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMetadata; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMetadata"


    // $ANTLR start "ruleMetadata"
    // InternalKim.g:11836:1: ruleMetadata returns [EObject current=null] : ( () otherlv_1= '{' ( ( ( (lv_ids_2_1= rulePathName | lv_ids_2_2= RULE_LOWERCASE_ID | lv_ids_2_3= rulePropertyId | lv_ids_2_4= RULE_STRING ) ) ) ( ( (lv_values_3_1= ruleLiteralOrID | lv_values_3_2= ruleMetadata | lv_values_3_3= ruleList ) ) ) )* otherlv_4= '}' ) ;
    public final EObject ruleMetadata() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_ids_2_2=null;
        Token lv_ids_2_4=null;
        Token otherlv_4=null;
        AntlrDatatypeRuleToken lv_ids_2_1 = null;

        AntlrDatatypeRuleToken lv_ids_2_3 = null;

        EObject lv_values_3_1 = null;

        EObject lv_values_3_2 = null;

        EObject lv_values_3_3 = null;



        	enterRule();

        try {
            // InternalKim.g:11842:2: ( ( () otherlv_1= '{' ( ( ( (lv_ids_2_1= rulePathName | lv_ids_2_2= RULE_LOWERCASE_ID | lv_ids_2_3= rulePropertyId | lv_ids_2_4= RULE_STRING ) ) ) ( ( (lv_values_3_1= ruleLiteralOrID | lv_values_3_2= ruleMetadata | lv_values_3_3= ruleList ) ) ) )* otherlv_4= '}' ) )
            // InternalKim.g:11843:2: ( () otherlv_1= '{' ( ( ( (lv_ids_2_1= rulePathName | lv_ids_2_2= RULE_LOWERCASE_ID | lv_ids_2_3= rulePropertyId | lv_ids_2_4= RULE_STRING ) ) ) ( ( (lv_values_3_1= ruleLiteralOrID | lv_values_3_2= ruleMetadata | lv_values_3_3= ruleList ) ) ) )* otherlv_4= '}' )
            {
            // InternalKim.g:11843:2: ( () otherlv_1= '{' ( ( ( (lv_ids_2_1= rulePathName | lv_ids_2_2= RULE_LOWERCASE_ID | lv_ids_2_3= rulePropertyId | lv_ids_2_4= RULE_STRING ) ) ) ( ( (lv_values_3_1= ruleLiteralOrID | lv_values_3_2= ruleMetadata | lv_values_3_3= ruleList ) ) ) )* otherlv_4= '}' )
            // InternalKim.g:11844:3: () otherlv_1= '{' ( ( ( (lv_ids_2_1= rulePathName | lv_ids_2_2= RULE_LOWERCASE_ID | lv_ids_2_3= rulePropertyId | lv_ids_2_4= RULE_STRING ) ) ) ( ( (lv_values_3_1= ruleLiteralOrID | lv_values_3_2= ruleMetadata | lv_values_3_3= ruleList ) ) ) )* otherlv_4= '}'
            {
            // InternalKim.g:11844:3: ()
            // InternalKim.g:11845:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getMetadataAccess().getMetadataAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,184,FOLLOW_145); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getMetadataAccess().getLeftCurlyBracketKeyword_1());
              		
            }
            // InternalKim.g:11858:3: ( ( ( (lv_ids_2_1= rulePathName | lv_ids_2_2= RULE_LOWERCASE_ID | lv_ids_2_3= rulePropertyId | lv_ids_2_4= RULE_STRING ) ) ) ( ( (lv_values_3_1= ruleLiteralOrID | lv_values_3_2= ruleMetadata | lv_values_3_3= ruleList ) ) ) )*
            loop248:
            do {
                int alt248=2;
                int LA248_0 = input.LA(1);

                if ( ((LA248_0>=RULE_LOWERCASE_ID && LA248_0<=RULE_STRING)) ) {
                    alt248=1;
                }


                switch (alt248) {
            	case 1 :
            	    // InternalKim.g:11859:4: ( ( (lv_ids_2_1= rulePathName | lv_ids_2_2= RULE_LOWERCASE_ID | lv_ids_2_3= rulePropertyId | lv_ids_2_4= RULE_STRING ) ) ) ( ( (lv_values_3_1= ruleLiteralOrID | lv_values_3_2= ruleMetadata | lv_values_3_3= ruleList ) ) )
            	    {
            	    // InternalKim.g:11859:4: ( ( (lv_ids_2_1= rulePathName | lv_ids_2_2= RULE_LOWERCASE_ID | lv_ids_2_3= rulePropertyId | lv_ids_2_4= RULE_STRING ) ) )
            	    // InternalKim.g:11860:5: ( (lv_ids_2_1= rulePathName | lv_ids_2_2= RULE_LOWERCASE_ID | lv_ids_2_3= rulePropertyId | lv_ids_2_4= RULE_STRING ) )
            	    {
            	    // InternalKim.g:11860:5: ( (lv_ids_2_1= rulePathName | lv_ids_2_2= RULE_LOWERCASE_ID | lv_ids_2_3= rulePropertyId | lv_ids_2_4= RULE_STRING ) )
            	    // InternalKim.g:11861:6: (lv_ids_2_1= rulePathName | lv_ids_2_2= RULE_LOWERCASE_ID | lv_ids_2_3= rulePropertyId | lv_ids_2_4= RULE_STRING )
            	    {
            	    // InternalKim.g:11861:6: (lv_ids_2_1= rulePathName | lv_ids_2_2= RULE_LOWERCASE_ID | lv_ids_2_3= rulePropertyId | lv_ids_2_4= RULE_STRING )
            	    int alt246=4;
            	    int LA246_0 = input.LA(1);

            	    if ( (LA246_0==RULE_LOWERCASE_ID) ) {
            	        int LA246_1 = input.LA(2);

            	        if ( (LA246_1==88||LA246_1==90) ) {
            	            alt246=3;
            	        }
            	        else if ( (synpred434_InternalKim()) ) {
            	            alt246=1;
            	        }
            	        else if ( (synpred435_InternalKim()) ) {
            	            alt246=2;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return current;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 246, 1, input);

            	            throw nvae;
            	        }
            	    }
            	    else if ( (LA246_0==RULE_STRING) ) {
            	        alt246=4;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 246, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt246) {
            	        case 1 :
            	            // InternalKim.g:11862:7: lv_ids_2_1= rulePathName
            	            {
            	            if ( state.backtracking==0 ) {

            	              							newCompositeNode(grammarAccess.getMetadataAccess().getIdsPathNameParserRuleCall_2_0_0_0());
            	              						
            	            }
            	            pushFollow(FOLLOW_146);
            	            lv_ids_2_1=rulePathName();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElementForParent(grammarAccess.getMetadataRule());
            	              							}
            	              							add(
            	              								current,
            	              								"ids",
            	              								lv_ids_2_1,
            	              								"org.integratedmodelling.kim.Kim.PathName");
            	              							afterParserOrEnumRuleCall();
            	              						
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:11878:7: lv_ids_2_2= RULE_LOWERCASE_ID
            	            {
            	            lv_ids_2_2=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_146); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							newLeafNode(lv_ids_2_2, grammarAccess.getMetadataAccess().getIdsLOWERCASE_IDTerminalRuleCall_2_0_0_1());
            	              						
            	            }
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElement(grammarAccess.getMetadataRule());
            	              							}
            	              							addWithLastConsumed(
            	              								current,
            	              								"ids",
            	              								lv_ids_2_2,
            	              								"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
            	              						
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // InternalKim.g:11893:7: lv_ids_2_3= rulePropertyId
            	            {
            	            if ( state.backtracking==0 ) {

            	              							newCompositeNode(grammarAccess.getMetadataAccess().getIdsPropertyIdParserRuleCall_2_0_0_2());
            	              						
            	            }
            	            pushFollow(FOLLOW_146);
            	            lv_ids_2_3=rulePropertyId();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElementForParent(grammarAccess.getMetadataRule());
            	              							}
            	              							add(
            	              								current,
            	              								"ids",
            	              								lv_ids_2_3,
            	              								"org.integratedmodelling.kim.Kim.PropertyId");
            	              							afterParserOrEnumRuleCall();
            	              						
            	            }

            	            }
            	            break;
            	        case 4 :
            	            // InternalKim.g:11909:7: lv_ids_2_4= RULE_STRING
            	            {
            	            lv_ids_2_4=(Token)match(input,RULE_STRING,FOLLOW_146); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							newLeafNode(lv_ids_2_4, grammarAccess.getMetadataAccess().getIdsSTRINGTerminalRuleCall_2_0_0_3());
            	              						
            	            }
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElement(grammarAccess.getMetadataRule());
            	              							}
            	              							addWithLastConsumed(
            	              								current,
            	              								"ids",
            	              								lv_ids_2_4,
            	              								"org.eclipse.xtext.common.Terminals.STRING");
            	              						
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }

            	    // InternalKim.g:11926:4: ( ( (lv_values_3_1= ruleLiteralOrID | lv_values_3_2= ruleMetadata | lv_values_3_3= ruleList ) ) )
            	    // InternalKim.g:11927:5: ( (lv_values_3_1= ruleLiteralOrID | lv_values_3_2= ruleMetadata | lv_values_3_3= ruleList ) )
            	    {
            	    // InternalKim.g:11927:5: ( (lv_values_3_1= ruleLiteralOrID | lv_values_3_2= ruleMetadata | lv_values_3_3= ruleList ) )
            	    // InternalKim.g:11928:6: (lv_values_3_1= ruleLiteralOrID | lv_values_3_2= ruleMetadata | lv_values_3_3= ruleList )
            	    {
            	    // InternalKim.g:11928:6: (lv_values_3_1= ruleLiteralOrID | lv_values_3_2= ruleMetadata | lv_values_3_3= ruleList )
            	    int alt247=3;
            	    switch ( input.LA(1) ) {
            	    case RULE_STRING:
            	    case RULE_ID:
            	    case RULE_INT:
            	    case 23:
            	    case 24:
            	    case 226:
            	    case 227:
            	        {
            	        alt247=1;
            	        }
            	        break;
            	    case 184:
            	        {
            	        alt247=2;
            	        }
            	        break;
            	    case 34:
            	        {
            	        alt247=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 247, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt247) {
            	        case 1 :
            	            // InternalKim.g:11929:7: lv_values_3_1= ruleLiteralOrID
            	            {
            	            if ( state.backtracking==0 ) {

            	              							newCompositeNode(grammarAccess.getMetadataAccess().getValuesLiteralOrIDParserRuleCall_2_1_0_0());
            	              						
            	            }
            	            pushFollow(FOLLOW_145);
            	            lv_values_3_1=ruleLiteralOrID();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElementForParent(grammarAccess.getMetadataRule());
            	              							}
            	              							add(
            	              								current,
            	              								"values",
            	              								lv_values_3_1,
            	              								"org.integratedmodelling.kim.Kim.LiteralOrID");
            	              							afterParserOrEnumRuleCall();
            	              						
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:11945:7: lv_values_3_2= ruleMetadata
            	            {
            	            if ( state.backtracking==0 ) {

            	              							newCompositeNode(grammarAccess.getMetadataAccess().getValuesMetadataParserRuleCall_2_1_0_1());
            	              						
            	            }
            	            pushFollow(FOLLOW_145);
            	            lv_values_3_2=ruleMetadata();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElementForParent(grammarAccess.getMetadataRule());
            	              							}
            	              							add(
            	              								current,
            	              								"values",
            	              								lv_values_3_2,
            	              								"org.integratedmodelling.kim.Kim.Metadata");
            	              							afterParserOrEnumRuleCall();
            	              						
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // InternalKim.g:11961:7: lv_values_3_3= ruleList
            	            {
            	            if ( state.backtracking==0 ) {

            	              							newCompositeNode(grammarAccess.getMetadataAccess().getValuesListParserRuleCall_2_1_0_2());
            	              						
            	            }
            	            pushFollow(FOLLOW_145);
            	            lv_values_3_3=ruleList();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElementForParent(grammarAccess.getMetadataRule());
            	              							}
            	              							add(
            	              								current,
            	              								"values",
            	              								lv_values_3_3,
            	              								"org.integratedmodelling.kim.Kim.List");
            	              							afterParserOrEnumRuleCall();
            	              						
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop248;
                }
            } while (true);

            otherlv_4=(Token)match(input,115,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getMetadataAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMetadata"


    // $ANTLR start "entryRuleDocumentation"
    // InternalKim.g:11988:1: entryRuleDocumentation returns [EObject current=null] : iv_ruleDocumentation= ruleDocumentation EOF ;
    public final EObject entryRuleDocumentation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDocumentation = null;


        try {
            // InternalKim.g:11988:54: (iv_ruleDocumentation= ruleDocumentation EOF )
            // InternalKim.g:11989:2: iv_ruleDocumentation= ruleDocumentation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDocumentationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDocumentation=ruleDocumentation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDocumentation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDocumentation"


    // $ANTLR start "ruleDocumentation"
    // InternalKim.g:11995:1: ruleDocumentation returns [EObject current=null] : ( () otherlv_1= '{' ( ( (lv_selectors_2_0= ruleDocSelector ) ) ( (lv_values_3_0= ruleLiteralOrID ) ) )* otherlv_4= '}' ) ;
    public final EObject ruleDocumentation() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        EObject lv_selectors_2_0 = null;

        EObject lv_values_3_0 = null;



        	enterRule();

        try {
            // InternalKim.g:12001:2: ( ( () otherlv_1= '{' ( ( (lv_selectors_2_0= ruleDocSelector ) ) ( (lv_values_3_0= ruleLiteralOrID ) ) )* otherlv_4= '}' ) )
            // InternalKim.g:12002:2: ( () otherlv_1= '{' ( ( (lv_selectors_2_0= ruleDocSelector ) ) ( (lv_values_3_0= ruleLiteralOrID ) ) )* otherlv_4= '}' )
            {
            // InternalKim.g:12002:2: ( () otherlv_1= '{' ( ( (lv_selectors_2_0= ruleDocSelector ) ) ( (lv_values_3_0= ruleLiteralOrID ) ) )* otherlv_4= '}' )
            // InternalKim.g:12003:3: () otherlv_1= '{' ( ( (lv_selectors_2_0= ruleDocSelector ) ) ( (lv_values_3_0= ruleLiteralOrID ) ) )* otherlv_4= '}'
            {
            // InternalKim.g:12003:3: ()
            // InternalKim.g:12004:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getDocumentationAccess().getMetadataAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,184,FOLLOW_147); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getDocumentationAccess().getLeftCurlyBracketKeyword_1());
              		
            }
            // InternalKim.g:12017:3: ( ( (lv_selectors_2_0= ruleDocSelector ) ) ( (lv_values_3_0= ruleLiteralOrID ) ) )*
            loop249:
            do {
                int alt249=2;
                int LA249_0 = input.LA(1);

                if ( (LA249_0==RULE_LOWERCASE_ID||LA249_0==54) ) {
                    alt249=1;
                }


                switch (alt249) {
            	case 1 :
            	    // InternalKim.g:12018:4: ( (lv_selectors_2_0= ruleDocSelector ) ) ( (lv_values_3_0= ruleLiteralOrID ) )
            	    {
            	    // InternalKim.g:12018:4: ( (lv_selectors_2_0= ruleDocSelector ) )
            	    // InternalKim.g:12019:5: (lv_selectors_2_0= ruleDocSelector )
            	    {
            	    // InternalKim.g:12019:5: (lv_selectors_2_0= ruleDocSelector )
            	    // InternalKim.g:12020:6: lv_selectors_2_0= ruleDocSelector
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getDocumentationAccess().getSelectorsDocSelectorParserRuleCall_2_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_148);
            	    lv_selectors_2_0=ruleDocSelector();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getDocumentationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"selectors",
            	      							lv_selectors_2_0,
            	      							"org.integratedmodelling.kim.Kim.DocSelector");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalKim.g:12037:4: ( (lv_values_3_0= ruleLiteralOrID ) )
            	    // InternalKim.g:12038:5: (lv_values_3_0= ruleLiteralOrID )
            	    {
            	    // InternalKim.g:12038:5: (lv_values_3_0= ruleLiteralOrID )
            	    // InternalKim.g:12039:6: lv_values_3_0= ruleLiteralOrID
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getDocumentationAccess().getValuesLiteralOrIDParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_147);
            	    lv_values_3_0=ruleLiteralOrID();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getDocumentationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"values",
            	      							lv_values_3_0,
            	      							"org.integratedmodelling.kim.Kim.LiteralOrID");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop249;
                }
            } while (true);

            otherlv_4=(Token)match(input,115,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getDocumentationAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDocumentation"


    // $ANTLR start "entryRuleMap"
    // InternalKim.g:12065:1: entryRuleMap returns [EObject current=null] : iv_ruleMap= ruleMap EOF ;
    public final EObject entryRuleMap() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMap = null;


        try {
            // InternalKim.g:12065:44: (iv_ruleMap= ruleMap EOF )
            // InternalKim.g:12066:2: iv_ruleMap= ruleMap EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMapRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMap=ruleMap();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMap; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMap"


    // $ANTLR start "ruleMap"
    // InternalKim.g:12072:1: ruleMap returns [EObject current=null] : ( () otherlv_1= '{' ( ( (lv_entries_2_0= ruleMapEntry ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_entries_4_0= ruleMapEntry ) ) )* )? otherlv_5= '}' ) ;
    public final EObject ruleMap() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_entries_2_0 = null;

        EObject lv_entries_4_0 = null;



        	enterRule();

        try {
            // InternalKim.g:12078:2: ( ( () otherlv_1= '{' ( ( (lv_entries_2_0= ruleMapEntry ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_entries_4_0= ruleMapEntry ) ) )* )? otherlv_5= '}' ) )
            // InternalKim.g:12079:2: ( () otherlv_1= '{' ( ( (lv_entries_2_0= ruleMapEntry ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_entries_4_0= ruleMapEntry ) ) )* )? otherlv_5= '}' )
            {
            // InternalKim.g:12079:2: ( () otherlv_1= '{' ( ( (lv_entries_2_0= ruleMapEntry ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_entries_4_0= ruleMapEntry ) ) )* )? otherlv_5= '}' )
            // InternalKim.g:12080:3: () otherlv_1= '{' ( ( (lv_entries_2_0= ruleMapEntry ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_entries_4_0= ruleMapEntry ) ) )* )? otherlv_5= '}'
            {
            // InternalKim.g:12080:3: ()
            // InternalKim.g:12081:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getMapAccess().getMapAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,184,FOLLOW_149); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getMapAccess().getLeftCurlyBracketKeyword_1());
              		
            }
            // InternalKim.g:12094:3: ( ( (lv_entries_2_0= ruleMapEntry ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_entries_4_0= ruleMapEntry ) ) )* )?
            int alt251=2;
            int LA251_0 = input.LA(1);

            if ( ((LA251_0>=RULE_LOWERCASE_ID && LA251_0<=RULE_STRING)||LA251_0==RULE_CAMELCASE_ID||LA251_0==RULE_INT||(LA251_0>=23 && LA251_0<=24)||LA251_0==34||LA251_0==36||(LA251_0>=46 && LA251_0<=47)||(LA251_0>=108 && LA251_0<=109)||(LA251_0>=116 && LA251_0<=117)||(LA251_0>=119 && LA251_0<=130)||LA251_0==187||(LA251_0>=220 && LA251_0<=224)||(LA251_0>=226 && LA251_0<=227)) ) {
                alt251=1;
            }
            switch (alt251) {
                case 1 :
                    // InternalKim.g:12095:4: ( (lv_entries_2_0= ruleMapEntry ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_entries_4_0= ruleMapEntry ) ) )*
                    {
                    // InternalKim.g:12095:4: ( (lv_entries_2_0= ruleMapEntry ) )
                    // InternalKim.g:12096:5: (lv_entries_2_0= ruleMapEntry )
                    {
                    // InternalKim.g:12096:5: (lv_entries_2_0= ruleMapEntry )
                    // InternalKim.g:12097:6: lv_entries_2_0= ruleMapEntry
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getMapAccess().getEntriesMapEntryParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_150);
                    lv_entries_2_0=ruleMapEntry();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getMapRule());
                      						}
                      						add(
                      							current,
                      							"entries",
                      							lv_entries_2_0,
                      							"org.integratedmodelling.kim.Kim.MapEntry");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:12114:4: ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_entries_4_0= ruleMapEntry ) ) )*
                    loop250:
                    do {
                        int alt250=2;
                        int LA250_0 = input.LA(1);

                        if ( (LA250_0==22) ) {
                            alt250=1;
                        }


                        switch (alt250) {
                    	case 1 :
                    	    // InternalKim.g:12115:5: ( ( ',' )=>otherlv_3= ',' ) ( (lv_entries_4_0= ruleMapEntry ) )
                    	    {
                    	    // InternalKim.g:12115:5: ( ( ',' )=>otherlv_3= ',' )
                    	    // InternalKim.g:12116:6: ( ',' )=>otherlv_3= ','
                    	    {
                    	    otherlv_3=(Token)match(input,22,FOLLOW_31); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_3, grammarAccess.getMapAccess().getCommaKeyword_2_1_0_0());
                    	      					
                    	    }

                    	    }

                    	    // InternalKim.g:12123:5: ( (lv_entries_4_0= ruleMapEntry ) )
                    	    // InternalKim.g:12124:6: (lv_entries_4_0= ruleMapEntry )
                    	    {
                    	    // InternalKim.g:12124:6: (lv_entries_4_0= ruleMapEntry )
                    	    // InternalKim.g:12125:7: lv_entries_4_0= ruleMapEntry
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getMapAccess().getEntriesMapEntryParserRuleCall_2_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_150);
                    	    lv_entries_4_0=ruleMapEntry();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getMapRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"entries",
                    	      								lv_entries_4_0,
                    	      								"org.integratedmodelling.kim.Kim.MapEntry");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop250;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,115,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getMapAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMap"


    // $ANTLR start "entryRuleMapEntry"
    // InternalKim.g:12152:1: entryRuleMapEntry returns [EObject current=null] : iv_ruleMapEntry= ruleMapEntry EOF ;
    public final EObject entryRuleMapEntry() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMapEntry = null;


        try {
            // InternalKim.g:12152:49: (iv_ruleMapEntry= ruleMapEntry EOF )
            // InternalKim.g:12153:2: iv_ruleMapEntry= ruleMapEntry EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMapEntryRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMapEntry=ruleMapEntry();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMapEntry; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMapEntry"


    // $ANTLR start "ruleMapEntry"
    // InternalKim.g:12159:1: ruleMapEntry returns [EObject current=null] : ( ( (lv_classifier_0_0= ruleClassifierRHSWithId ) ) otherlv_1= ':' ( (lv_value_2_0= ruleValueWithIdAndConcept ) ) ) ;
    public final EObject ruleMapEntry() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_classifier_0_0 = null;

        EObject lv_value_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:12165:2: ( ( ( (lv_classifier_0_0= ruleClassifierRHSWithId ) ) otherlv_1= ':' ( (lv_value_2_0= ruleValueWithIdAndConcept ) ) ) )
            // InternalKim.g:12166:2: ( ( (lv_classifier_0_0= ruleClassifierRHSWithId ) ) otherlv_1= ':' ( (lv_value_2_0= ruleValueWithIdAndConcept ) ) )
            {
            // InternalKim.g:12166:2: ( ( (lv_classifier_0_0= ruleClassifierRHSWithId ) ) otherlv_1= ':' ( (lv_value_2_0= ruleValueWithIdAndConcept ) ) )
            // InternalKim.g:12167:3: ( (lv_classifier_0_0= ruleClassifierRHSWithId ) ) otherlv_1= ':' ( (lv_value_2_0= ruleValueWithIdAndConcept ) )
            {
            // InternalKim.g:12167:3: ( (lv_classifier_0_0= ruleClassifierRHSWithId ) )
            // InternalKim.g:12168:4: (lv_classifier_0_0= ruleClassifierRHSWithId )
            {
            // InternalKim.g:12168:4: (lv_classifier_0_0= ruleClassifierRHSWithId )
            // InternalKim.g:12169:5: lv_classifier_0_0= ruleClassifierRHSWithId
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMapEntryAccess().getClassifierClassifierRHSWithIdParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_73);
            lv_classifier_0_0=ruleClassifierRHSWithId();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMapEntryRule());
              					}
              					set(
              						current,
              						"classifier",
              						lv_classifier_0_0,
              						"org.integratedmodelling.kim.Kim.ClassifierRHSWithId");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,88,FOLLOW_151); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getMapEntryAccess().getColonKeyword_1());
              		
            }
            // InternalKim.g:12190:3: ( (lv_value_2_0= ruleValueWithIdAndConcept ) )
            // InternalKim.g:12191:4: (lv_value_2_0= ruleValueWithIdAndConcept )
            {
            // InternalKim.g:12191:4: (lv_value_2_0= ruleValueWithIdAndConcept )
            // InternalKim.g:12192:5: lv_value_2_0= ruleValueWithIdAndConcept
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMapEntryAccess().getValueValueWithIdAndConceptParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_value_2_0=ruleValueWithIdAndConcept();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMapEntryRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_2_0,
              						"org.integratedmodelling.kim.Kim.ValueWithIdAndConcept");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMapEntry"


    // $ANTLR start "entryRuleDocSelector"
    // InternalKim.g:12213:1: entryRuleDocSelector returns [EObject current=null] : iv_ruleDocSelector= ruleDocSelector EOF ;
    public final EObject entryRuleDocSelector() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDocSelector = null;


        try {
            // InternalKim.g:12213:52: (iv_ruleDocSelector= ruleDocSelector EOF )
            // InternalKim.g:12214:2: iv_ruleDocSelector= ruleDocSelector EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDocSelectorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDocSelector=ruleDocSelector();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDocSelector; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDocSelector"


    // $ANTLR start "ruleDocSelector"
    // InternalKim.g:12220:1: ruleDocSelector returns [EObject current=null] : ( ( (lv_id_0_0= rulePropertyId ) ) | (otherlv_1= 'on' ( ( (lv_definition_2_0= 'definition' ) ) | ( (lv_initialization_3_0= 'initialization' ) ) | ( (lv_termination_4_0= 'termination' ) ) | ( (lv_transition_5_0= 'transition' ) ) ) ) ) ;
    public final EObject ruleDocSelector() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_definition_2_0=null;
        Token lv_initialization_3_0=null;
        Token lv_termination_4_0=null;
        Token lv_transition_5_0=null;
        AntlrDatatypeRuleToken lv_id_0_0 = null;



        	enterRule();

        try {
            // InternalKim.g:12226:2: ( ( ( (lv_id_0_0= rulePropertyId ) ) | (otherlv_1= 'on' ( ( (lv_definition_2_0= 'definition' ) ) | ( (lv_initialization_3_0= 'initialization' ) ) | ( (lv_termination_4_0= 'termination' ) ) | ( (lv_transition_5_0= 'transition' ) ) ) ) ) )
            // InternalKim.g:12227:2: ( ( (lv_id_0_0= rulePropertyId ) ) | (otherlv_1= 'on' ( ( (lv_definition_2_0= 'definition' ) ) | ( (lv_initialization_3_0= 'initialization' ) ) | ( (lv_termination_4_0= 'termination' ) ) | ( (lv_transition_5_0= 'transition' ) ) ) ) )
            {
            // InternalKim.g:12227:2: ( ( (lv_id_0_0= rulePropertyId ) ) | (otherlv_1= 'on' ( ( (lv_definition_2_0= 'definition' ) ) | ( (lv_initialization_3_0= 'initialization' ) ) | ( (lv_termination_4_0= 'termination' ) ) | ( (lv_transition_5_0= 'transition' ) ) ) ) )
            int alt253=2;
            int LA253_0 = input.LA(1);

            if ( (LA253_0==RULE_LOWERCASE_ID) ) {
                alt253=1;
            }
            else if ( (LA253_0==54) ) {
                alt253=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 253, 0, input);

                throw nvae;
            }
            switch (alt253) {
                case 1 :
                    // InternalKim.g:12228:3: ( (lv_id_0_0= rulePropertyId ) )
                    {
                    // InternalKim.g:12228:3: ( (lv_id_0_0= rulePropertyId ) )
                    // InternalKim.g:12229:4: (lv_id_0_0= rulePropertyId )
                    {
                    // InternalKim.g:12229:4: (lv_id_0_0= rulePropertyId )
                    // InternalKim.g:12230:5: lv_id_0_0= rulePropertyId
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDocSelectorAccess().getIdPropertyIdParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_id_0_0=rulePropertyId();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDocSelectorRule());
                      					}
                      					set(
                      						current,
                      						"id",
                      						lv_id_0_0,
                      						"org.integratedmodelling.kim.Kim.PropertyId");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:12248:3: (otherlv_1= 'on' ( ( (lv_definition_2_0= 'definition' ) ) | ( (lv_initialization_3_0= 'initialization' ) ) | ( (lv_termination_4_0= 'termination' ) ) | ( (lv_transition_5_0= 'transition' ) ) ) )
                    {
                    // InternalKim.g:12248:3: (otherlv_1= 'on' ( ( (lv_definition_2_0= 'definition' ) ) | ( (lv_initialization_3_0= 'initialization' ) ) | ( (lv_termination_4_0= 'termination' ) ) | ( (lv_transition_5_0= 'transition' ) ) ) )
                    // InternalKim.g:12249:4: otherlv_1= 'on' ( ( (lv_definition_2_0= 'definition' ) ) | ( (lv_initialization_3_0= 'initialization' ) ) | ( (lv_termination_4_0= 'termination' ) ) | ( (lv_transition_5_0= 'transition' ) ) )
                    {
                    otherlv_1=(Token)match(input,54,FOLLOW_152); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getDocSelectorAccess().getOnKeyword_1_0());
                      			
                    }
                    // InternalKim.g:12253:4: ( ( (lv_definition_2_0= 'definition' ) ) | ( (lv_initialization_3_0= 'initialization' ) ) | ( (lv_termination_4_0= 'termination' ) ) | ( (lv_transition_5_0= 'transition' ) ) )
                    int alt252=4;
                    switch ( input.LA(1) ) {
                    case 55:
                        {
                        alt252=1;
                        }
                        break;
                    case 59:
                        {
                        alt252=2;
                        }
                        break;
                    case 58:
                        {
                        alt252=3;
                        }
                        break;
                    case 185:
                        {
                        alt252=4;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 252, 0, input);

                        throw nvae;
                    }

                    switch (alt252) {
                        case 1 :
                            // InternalKim.g:12254:5: ( (lv_definition_2_0= 'definition' ) )
                            {
                            // InternalKim.g:12254:5: ( (lv_definition_2_0= 'definition' ) )
                            // InternalKim.g:12255:6: (lv_definition_2_0= 'definition' )
                            {
                            // InternalKim.g:12255:6: (lv_definition_2_0= 'definition' )
                            // InternalKim.g:12256:7: lv_definition_2_0= 'definition'
                            {
                            lv_definition_2_0=(Token)match(input,55,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_definition_2_0, grammarAccess.getDocSelectorAccess().getDefinitionDefinitionKeyword_1_1_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getDocSelectorRule());
                              							}
                              							setWithLastConsumed(current, "definition", true, "definition");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:12269:5: ( (lv_initialization_3_0= 'initialization' ) )
                            {
                            // InternalKim.g:12269:5: ( (lv_initialization_3_0= 'initialization' ) )
                            // InternalKim.g:12270:6: (lv_initialization_3_0= 'initialization' )
                            {
                            // InternalKim.g:12270:6: (lv_initialization_3_0= 'initialization' )
                            // InternalKim.g:12271:7: lv_initialization_3_0= 'initialization'
                            {
                            lv_initialization_3_0=(Token)match(input,59,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_initialization_3_0, grammarAccess.getDocSelectorAccess().getInitializationInitializationKeyword_1_1_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getDocSelectorRule());
                              							}
                              							setWithLastConsumed(current, "initialization", true, "initialization");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 3 :
                            // InternalKim.g:12284:5: ( (lv_termination_4_0= 'termination' ) )
                            {
                            // InternalKim.g:12284:5: ( (lv_termination_4_0= 'termination' ) )
                            // InternalKim.g:12285:6: (lv_termination_4_0= 'termination' )
                            {
                            // InternalKim.g:12285:6: (lv_termination_4_0= 'termination' )
                            // InternalKim.g:12286:7: lv_termination_4_0= 'termination'
                            {
                            lv_termination_4_0=(Token)match(input,58,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_termination_4_0, grammarAccess.getDocSelectorAccess().getTerminationTerminationKeyword_1_1_2_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getDocSelectorRule());
                              							}
                              							setWithLastConsumed(current, "termination", true, "termination");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 4 :
                            // InternalKim.g:12299:5: ( (lv_transition_5_0= 'transition' ) )
                            {
                            // InternalKim.g:12299:5: ( (lv_transition_5_0= 'transition' ) )
                            // InternalKim.g:12300:6: (lv_transition_5_0= 'transition' )
                            {
                            // InternalKim.g:12300:6: (lv_transition_5_0= 'transition' )
                            // InternalKim.g:12301:7: lv_transition_5_0= 'transition'
                            {
                            lv_transition_5_0=(Token)match(input,185,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_transition_5_0, grammarAccess.getDocSelectorAccess().getTransitionTransitionKeyword_1_1_3_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getDocSelectorRule());
                              							}
                              							setWithLastConsumed(current, "transition", true, "transition");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDocSelector"


    // $ANTLR start "entryRuleKeyValuePair"
    // InternalKim.g:12319:1: entryRuleKeyValuePair returns [EObject current=null] : iv_ruleKeyValuePair= ruleKeyValuePair EOF ;
    public final EObject entryRuleKeyValuePair() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleKeyValuePair = null;


        try {
            // InternalKim.g:12319:53: (iv_ruleKeyValuePair= ruleKeyValuePair EOF )
            // InternalKim.g:12320:2: iv_ruleKeyValuePair= ruleKeyValuePair EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getKeyValuePairRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleKeyValuePair=ruleKeyValuePair();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleKeyValuePair; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleKeyValuePair"


    // $ANTLR start "ruleKeyValuePair"
    // InternalKim.g:12326:1: ruleKeyValuePair returns [EObject current=null] : ( ( ( (lv_name_0_1= rulePathName | lv_name_0_2= RULE_LOWERCASE_ID ) ) ) ( ( (lv_interactive_1_0= '?=' ) ) | otherlv_2= '=' ) ( (lv_value_3_0= ruleValueWithIdAndConcept ) ) ) ;
    public final EObject ruleKeyValuePair() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_2=null;
        Token lv_interactive_1_0=null;
        Token otherlv_2=null;
        AntlrDatatypeRuleToken lv_name_0_1 = null;

        EObject lv_value_3_0 = null;



        	enterRule();

        try {
            // InternalKim.g:12332:2: ( ( ( ( (lv_name_0_1= rulePathName | lv_name_0_2= RULE_LOWERCASE_ID ) ) ) ( ( (lv_interactive_1_0= '?=' ) ) | otherlv_2= '=' ) ( (lv_value_3_0= ruleValueWithIdAndConcept ) ) ) )
            // InternalKim.g:12333:2: ( ( ( (lv_name_0_1= rulePathName | lv_name_0_2= RULE_LOWERCASE_ID ) ) ) ( ( (lv_interactive_1_0= '?=' ) ) | otherlv_2= '=' ) ( (lv_value_3_0= ruleValueWithIdAndConcept ) ) )
            {
            // InternalKim.g:12333:2: ( ( ( (lv_name_0_1= rulePathName | lv_name_0_2= RULE_LOWERCASE_ID ) ) ) ( ( (lv_interactive_1_0= '?=' ) ) | otherlv_2= '=' ) ( (lv_value_3_0= ruleValueWithIdAndConcept ) ) )
            // InternalKim.g:12334:3: ( ( (lv_name_0_1= rulePathName | lv_name_0_2= RULE_LOWERCASE_ID ) ) ) ( ( (lv_interactive_1_0= '?=' ) ) | otherlv_2= '=' ) ( (lv_value_3_0= ruleValueWithIdAndConcept ) )
            {
            // InternalKim.g:12334:3: ( ( (lv_name_0_1= rulePathName | lv_name_0_2= RULE_LOWERCASE_ID ) ) )
            // InternalKim.g:12335:4: ( (lv_name_0_1= rulePathName | lv_name_0_2= RULE_LOWERCASE_ID ) )
            {
            // InternalKim.g:12335:4: ( (lv_name_0_1= rulePathName | lv_name_0_2= RULE_LOWERCASE_ID ) )
            // InternalKim.g:12336:5: (lv_name_0_1= rulePathName | lv_name_0_2= RULE_LOWERCASE_ID )
            {
            // InternalKim.g:12336:5: (lv_name_0_1= rulePathName | lv_name_0_2= RULE_LOWERCASE_ID )
            int alt254=2;
            int LA254_0 = input.LA(1);

            if ( (LA254_0==RULE_LOWERCASE_ID) ) {
                int LA254_1 = input.LA(2);

                if ( (synpred448_InternalKim()) ) {
                    alt254=1;
                }
                else if ( (true) ) {
                    alt254=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 254, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 254, 0, input);

                throw nvae;
            }
            switch (alt254) {
                case 1 :
                    // InternalKim.g:12337:6: lv_name_0_1= rulePathName
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getKeyValuePairAccess().getNamePathNameParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_153);
                    lv_name_0_1=rulePathName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getKeyValuePairRule());
                      						}
                      						set(
                      							current,
                      							"name",
                      							lv_name_0_1,
                      							"org.integratedmodelling.kim.Kim.PathName");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:12353:6: lv_name_0_2= RULE_LOWERCASE_ID
                    {
                    lv_name_0_2=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_153); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_0_2, grammarAccess.getKeyValuePairAccess().getNameLOWERCASE_IDTerminalRuleCall_0_0_1());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getKeyValuePairRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"name",
                      							lv_name_0_2,
                      							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                      					
                    }

                    }
                    break;

            }


            }


            }

            // InternalKim.g:12370:3: ( ( (lv_interactive_1_0= '?=' ) ) | otherlv_2= '=' )
            int alt255=2;
            int LA255_0 = input.LA(1);

            if ( (LA255_0==186) ) {
                alt255=1;
            }
            else if ( (LA255_0==187) ) {
                alt255=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 255, 0, input);

                throw nvae;
            }
            switch (alt255) {
                case 1 :
                    // InternalKim.g:12371:4: ( (lv_interactive_1_0= '?=' ) )
                    {
                    // InternalKim.g:12371:4: ( (lv_interactive_1_0= '?=' ) )
                    // InternalKim.g:12372:5: (lv_interactive_1_0= '?=' )
                    {
                    // InternalKim.g:12372:5: (lv_interactive_1_0= '?=' )
                    // InternalKim.g:12373:6: lv_interactive_1_0= '?='
                    {
                    lv_interactive_1_0=(Token)match(input,186,FOLLOW_151); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_interactive_1_0, grammarAccess.getKeyValuePairAccess().getInteractiveQuestionMarkEqualsSignKeyword_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getKeyValuePairRule());
                      						}
                      						setWithLastConsumed(current, "interactive", true, "?=");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:12386:4: otherlv_2= '='
                    {
                    otherlv_2=(Token)match(input,187,FOLLOW_151); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getKeyValuePairAccess().getEqualsSignKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:12391:3: ( (lv_value_3_0= ruleValueWithIdAndConcept ) )
            // InternalKim.g:12392:4: (lv_value_3_0= ruleValueWithIdAndConcept )
            {
            // InternalKim.g:12392:4: (lv_value_3_0= ruleValueWithIdAndConcept )
            // InternalKim.g:12393:5: lv_value_3_0= ruleValueWithIdAndConcept
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getKeyValuePairAccess().getValueValueWithIdAndConceptParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_value_3_0=ruleValueWithIdAndConcept();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getKeyValuePairRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_3_0,
              						"org.integratedmodelling.kim.Kim.ValueWithIdAndConcept");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleKeyValuePair"


    // $ANTLR start "entryRuleParameterList"
    // InternalKim.g:12414:1: entryRuleParameterList returns [EObject current=null] : iv_ruleParameterList= ruleParameterList EOF ;
    public final EObject entryRuleParameterList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParameterList = null;


        try {
            // InternalKim.g:12414:54: (iv_ruleParameterList= ruleParameterList EOF )
            // InternalKim.g:12415:2: iv_ruleParameterList= ruleParameterList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParameterListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleParameterList=ruleParameterList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleParameterList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleParameterList"


    // $ANTLR start "ruleParameterList"
    // InternalKim.g:12421:1: ruleParameterList returns [EObject current=null] : ( ( ( (lv_pairs_0_0= ruleKeyValuePair ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_pairs_2_0= ruleKeyValuePair ) ) )* ) | ( (lv_singleValue_3_0= ruleValue ) ) ) ;
    public final EObject ruleParameterList() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_pairs_0_0 = null;

        EObject lv_pairs_2_0 = null;

        EObject lv_singleValue_3_0 = null;



        	enterRule();

        try {
            // InternalKim.g:12427:2: ( ( ( ( (lv_pairs_0_0= ruleKeyValuePair ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_pairs_2_0= ruleKeyValuePair ) ) )* ) | ( (lv_singleValue_3_0= ruleValue ) ) ) )
            // InternalKim.g:12428:2: ( ( ( (lv_pairs_0_0= ruleKeyValuePair ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_pairs_2_0= ruleKeyValuePair ) ) )* ) | ( (lv_singleValue_3_0= ruleValue ) ) )
            {
            // InternalKim.g:12428:2: ( ( ( (lv_pairs_0_0= ruleKeyValuePair ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_pairs_2_0= ruleKeyValuePair ) ) )* ) | ( (lv_singleValue_3_0= ruleValue ) ) )
            int alt257=2;
            alt257 = dfa257.predict(input);
            switch (alt257) {
                case 1 :
                    // InternalKim.g:12429:3: ( ( (lv_pairs_0_0= ruleKeyValuePair ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_pairs_2_0= ruleKeyValuePair ) ) )* )
                    {
                    // InternalKim.g:12429:3: ( ( (lv_pairs_0_0= ruleKeyValuePair ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_pairs_2_0= ruleKeyValuePair ) ) )* )
                    // InternalKim.g:12430:4: ( (lv_pairs_0_0= ruleKeyValuePair ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_pairs_2_0= ruleKeyValuePair ) ) )*
                    {
                    // InternalKim.g:12430:4: ( (lv_pairs_0_0= ruleKeyValuePair ) )
                    // InternalKim.g:12431:5: (lv_pairs_0_0= ruleKeyValuePair )
                    {
                    // InternalKim.g:12431:5: (lv_pairs_0_0= ruleKeyValuePair )
                    // InternalKim.g:12432:6: lv_pairs_0_0= ruleKeyValuePair
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getParameterListAccess().getPairsKeyValuePairParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_29);
                    lv_pairs_0_0=ruleKeyValuePair();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getParameterListRule());
                      						}
                      						add(
                      							current,
                      							"pairs",
                      							lv_pairs_0_0,
                      							"org.integratedmodelling.kim.Kim.KeyValuePair");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:12449:4: ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_pairs_2_0= ruleKeyValuePair ) ) )*
                    loop256:
                    do {
                        int alt256=2;
                        int LA256_0 = input.LA(1);

                        if ( (LA256_0==22) ) {
                            alt256=1;
                        }


                        switch (alt256) {
                    	case 1 :
                    	    // InternalKim.g:12450:5: ( ( ',' )=>otherlv_1= ',' ) ( (lv_pairs_2_0= ruleKeyValuePair ) )
                    	    {
                    	    // InternalKim.g:12450:5: ( ( ',' )=>otherlv_1= ',' )
                    	    // InternalKim.g:12451:6: ( ',' )=>otherlv_1= ','
                    	    {
                    	    otherlv_1=(Token)match(input,22,FOLLOW_19); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_1, grammarAccess.getParameterListAccess().getCommaKeyword_0_1_0());
                    	      					
                    	    }

                    	    }

                    	    // InternalKim.g:12457:5: ( (lv_pairs_2_0= ruleKeyValuePair ) )
                    	    // InternalKim.g:12458:6: (lv_pairs_2_0= ruleKeyValuePair )
                    	    {
                    	    // InternalKim.g:12458:6: (lv_pairs_2_0= ruleKeyValuePair )
                    	    // InternalKim.g:12459:7: lv_pairs_2_0= ruleKeyValuePair
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getParameterListAccess().getPairsKeyValuePairParserRuleCall_0_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_29);
                    	    lv_pairs_2_0=ruleKeyValuePair();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getParameterListRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"pairs",
                    	      								lv_pairs_2_0,
                    	      								"org.integratedmodelling.kim.Kim.KeyValuePair");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop256;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:12479:3: ( (lv_singleValue_3_0= ruleValue ) )
                    {
                    // InternalKim.g:12479:3: ( (lv_singleValue_3_0= ruleValue ) )
                    // InternalKim.g:12480:4: (lv_singleValue_3_0= ruleValue )
                    {
                    // InternalKim.g:12480:4: (lv_singleValue_3_0= ruleValue )
                    // InternalKim.g:12481:5: lv_singleValue_3_0= ruleValue
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getParameterListAccess().getSingleValueValueParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_singleValue_3_0=ruleValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getParameterListRule());
                      					}
                      					set(
                      						current,
                      						"singleValue",
                      						lv_singleValue_3_0,
                      						"org.integratedmodelling.kim.Kim.Value");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleParameterList"


    // $ANTLR start "entryRuleValueWithIdAndConcept"
    // InternalKim.g:12502:1: entryRuleValueWithIdAndConcept returns [EObject current=null] : iv_ruleValueWithIdAndConcept= ruleValueWithIdAndConcept EOF ;
    public final EObject entryRuleValueWithIdAndConcept() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValueWithIdAndConcept = null;


        try {
            // InternalKim.g:12502:62: (iv_ruleValueWithIdAndConcept= ruleValueWithIdAndConcept EOF )
            // InternalKim.g:12503:2: iv_ruleValueWithIdAndConcept= ruleValueWithIdAndConcept EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValueWithIdAndConceptRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleValueWithIdAndConcept=ruleValueWithIdAndConcept();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValueWithIdAndConcept; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValueWithIdAndConcept"


    // $ANTLR start "ruleValueWithIdAndConcept"
    // InternalKim.g:12509:1: ruleValueWithIdAndConcept returns [EObject current=null] : ( ( (lv_concept_0_0= ruleConceptDeclaration ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( (lv_literal_2_0= ruleLiteral ) ) | ( (lv_expr_3_0= RULE_EXPR ) ) | ( ( (lv_id_4_1= RULE_LOWERCASE_ID | lv_id_4_2= RULE_UPPERCASE_ID | lv_id_4_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_5_0= ruleList ) ) | ( (lv_table_6_0= ruleLookupTable ) ) | ( (lv_map_7_0= ruleMap ) ) | ( (lv_null_8_0= 'unknown' ) ) ) ;
    public final EObject ruleValueWithIdAndConcept() throws RecognitionException {
        EObject current = null;

        Token lv_expr_3_0=null;
        Token lv_id_4_1=null;
        Token lv_id_4_2=null;
        Token lv_id_4_3=null;
        Token lv_null_8_0=null;
        EObject lv_concept_0_0 = null;

        EObject lv_function_1_0 = null;

        EObject lv_literal_2_0 = null;

        EObject lv_list_5_0 = null;

        EObject lv_table_6_0 = null;

        EObject lv_map_7_0 = null;



        	enterRule();

        try {
            // InternalKim.g:12515:2: ( ( ( (lv_concept_0_0= ruleConceptDeclaration ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( (lv_literal_2_0= ruleLiteral ) ) | ( (lv_expr_3_0= RULE_EXPR ) ) | ( ( (lv_id_4_1= RULE_LOWERCASE_ID | lv_id_4_2= RULE_UPPERCASE_ID | lv_id_4_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_5_0= ruleList ) ) | ( (lv_table_6_0= ruleLookupTable ) ) | ( (lv_map_7_0= ruleMap ) ) | ( (lv_null_8_0= 'unknown' ) ) ) )
            // InternalKim.g:12516:2: ( ( (lv_concept_0_0= ruleConceptDeclaration ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( (lv_literal_2_0= ruleLiteral ) ) | ( (lv_expr_3_0= RULE_EXPR ) ) | ( ( (lv_id_4_1= RULE_LOWERCASE_ID | lv_id_4_2= RULE_UPPERCASE_ID | lv_id_4_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_5_0= ruleList ) ) | ( (lv_table_6_0= ruleLookupTable ) ) | ( (lv_map_7_0= ruleMap ) ) | ( (lv_null_8_0= 'unknown' ) ) )
            {
            // InternalKim.g:12516:2: ( ( (lv_concept_0_0= ruleConceptDeclaration ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( (lv_literal_2_0= ruleLiteral ) ) | ( (lv_expr_3_0= RULE_EXPR ) ) | ( ( (lv_id_4_1= RULE_LOWERCASE_ID | lv_id_4_2= RULE_UPPERCASE_ID | lv_id_4_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_5_0= ruleList ) ) | ( (lv_table_6_0= ruleLookupTable ) ) | ( (lv_map_7_0= ruleMap ) ) | ( (lv_null_8_0= 'unknown' ) ) )
            int alt259=9;
            alt259 = dfa259.predict(input);
            switch (alt259) {
                case 1 :
                    // InternalKim.g:12517:3: ( (lv_concept_0_0= ruleConceptDeclaration ) )
                    {
                    // InternalKim.g:12517:3: ( (lv_concept_0_0= ruleConceptDeclaration ) )
                    // InternalKim.g:12518:4: (lv_concept_0_0= ruleConceptDeclaration )
                    {
                    // InternalKim.g:12518:4: (lv_concept_0_0= ruleConceptDeclaration )
                    // InternalKim.g:12519:5: lv_concept_0_0= ruleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getConceptConceptDeclarationParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_0_0=ruleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueWithIdAndConceptRule());
                      					}
                      					set(
                      						current,
                      						"concept",
                      						lv_concept_0_0,
                      						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:12537:3: ( (lv_function_1_0= ruleFunction ) )
                    {
                    // InternalKim.g:12537:3: ( (lv_function_1_0= ruleFunction ) )
                    // InternalKim.g:12538:4: (lv_function_1_0= ruleFunction )
                    {
                    // InternalKim.g:12538:4: (lv_function_1_0= ruleFunction )
                    // InternalKim.g:12539:5: lv_function_1_0= ruleFunction
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getFunctionFunctionParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_function_1_0=ruleFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueWithIdAndConceptRule());
                      					}
                      					set(
                      						current,
                      						"function",
                      						lv_function_1_0,
                      						"org.integratedmodelling.kim.Kim.Function");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:12557:3: ( (lv_literal_2_0= ruleLiteral ) )
                    {
                    // InternalKim.g:12557:3: ( (lv_literal_2_0= ruleLiteral ) )
                    // InternalKim.g:12558:4: (lv_literal_2_0= ruleLiteral )
                    {
                    // InternalKim.g:12558:4: (lv_literal_2_0= ruleLiteral )
                    // InternalKim.g:12559:5: lv_literal_2_0= ruleLiteral
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getLiteralLiteralParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_literal_2_0=ruleLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueWithIdAndConceptRule());
                      					}
                      					set(
                      						current,
                      						"literal",
                      						lv_literal_2_0,
                      						"org.integratedmodelling.kim.Kim.Literal");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:12577:3: ( (lv_expr_3_0= RULE_EXPR ) )
                    {
                    // InternalKim.g:12577:3: ( (lv_expr_3_0= RULE_EXPR ) )
                    // InternalKim.g:12578:4: (lv_expr_3_0= RULE_EXPR )
                    {
                    // InternalKim.g:12578:4: (lv_expr_3_0= RULE_EXPR )
                    // InternalKim.g:12579:5: lv_expr_3_0= RULE_EXPR
                    {
                    lv_expr_3_0=(Token)match(input,RULE_EXPR,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_expr_3_0, grammarAccess.getValueWithIdAndConceptAccess().getExprEXPRTerminalRuleCall_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getValueWithIdAndConceptRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"expr",
                      						lv_expr_3_0,
                      						"org.integratedmodelling.kim.Kim.EXPR");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:12596:3: ( ( (lv_id_4_1= RULE_LOWERCASE_ID | lv_id_4_2= RULE_UPPERCASE_ID | lv_id_4_3= RULE_CAMELCASE_ID ) ) )
                    {
                    // InternalKim.g:12596:3: ( ( (lv_id_4_1= RULE_LOWERCASE_ID | lv_id_4_2= RULE_UPPERCASE_ID | lv_id_4_3= RULE_CAMELCASE_ID ) ) )
                    // InternalKim.g:12597:4: ( (lv_id_4_1= RULE_LOWERCASE_ID | lv_id_4_2= RULE_UPPERCASE_ID | lv_id_4_3= RULE_CAMELCASE_ID ) )
                    {
                    // InternalKim.g:12597:4: ( (lv_id_4_1= RULE_LOWERCASE_ID | lv_id_4_2= RULE_UPPERCASE_ID | lv_id_4_3= RULE_CAMELCASE_ID ) )
                    // InternalKim.g:12598:5: (lv_id_4_1= RULE_LOWERCASE_ID | lv_id_4_2= RULE_UPPERCASE_ID | lv_id_4_3= RULE_CAMELCASE_ID )
                    {
                    // InternalKim.g:12598:5: (lv_id_4_1= RULE_LOWERCASE_ID | lv_id_4_2= RULE_UPPERCASE_ID | lv_id_4_3= RULE_CAMELCASE_ID )
                    int alt258=3;
                    switch ( input.LA(1) ) {
                    case RULE_LOWERCASE_ID:
                        {
                        alt258=1;
                        }
                        break;
                    case RULE_UPPERCASE_ID:
                        {
                        alt258=2;
                        }
                        break;
                    case RULE_CAMELCASE_ID:
                        {
                        alt258=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 258, 0, input);

                        throw nvae;
                    }

                    switch (alt258) {
                        case 1 :
                            // InternalKim.g:12599:6: lv_id_4_1= RULE_LOWERCASE_ID
                            {
                            lv_id_4_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_4_1, grammarAccess.getValueWithIdAndConceptAccess().getIdLOWERCASE_IDTerminalRuleCall_4_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getValueWithIdAndConceptRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_4_1,
                              							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:12614:6: lv_id_4_2= RULE_UPPERCASE_ID
                            {
                            lv_id_4_2=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_4_2, grammarAccess.getValueWithIdAndConceptAccess().getIdUPPERCASE_IDTerminalRuleCall_4_0_1());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getValueWithIdAndConceptRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_4_2,
                              							"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 3 :
                            // InternalKim.g:12629:6: lv_id_4_3= RULE_CAMELCASE_ID
                            {
                            lv_id_4_3=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_4_3, grammarAccess.getValueWithIdAndConceptAccess().getIdCAMELCASE_IDTerminalRuleCall_4_0_2());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getValueWithIdAndConceptRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_4_3,
                              							"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:12647:3: ( (lv_list_5_0= ruleList ) )
                    {
                    // InternalKim.g:12647:3: ( (lv_list_5_0= ruleList ) )
                    // InternalKim.g:12648:4: (lv_list_5_0= ruleList )
                    {
                    // InternalKim.g:12648:4: (lv_list_5_0= ruleList )
                    // InternalKim.g:12649:5: lv_list_5_0= ruleList
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getListListParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_list_5_0=ruleList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueWithIdAndConceptRule());
                      					}
                      					set(
                      						current,
                      						"list",
                      						lv_list_5_0,
                      						"org.integratedmodelling.kim.Kim.List");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalKim.g:12667:3: ( (lv_table_6_0= ruleLookupTable ) )
                    {
                    // InternalKim.g:12667:3: ( (lv_table_6_0= ruleLookupTable ) )
                    // InternalKim.g:12668:4: (lv_table_6_0= ruleLookupTable )
                    {
                    // InternalKim.g:12668:4: (lv_table_6_0= ruleLookupTable )
                    // InternalKim.g:12669:5: lv_table_6_0= ruleLookupTable
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getTableLookupTableParserRuleCall_6_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_table_6_0=ruleLookupTable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueWithIdAndConceptRule());
                      					}
                      					set(
                      						current,
                      						"table",
                      						lv_table_6_0,
                      						"org.integratedmodelling.kim.Kim.LookupTable");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalKim.g:12687:3: ( (lv_map_7_0= ruleMap ) )
                    {
                    // InternalKim.g:12687:3: ( (lv_map_7_0= ruleMap ) )
                    // InternalKim.g:12688:4: (lv_map_7_0= ruleMap )
                    {
                    // InternalKim.g:12688:4: (lv_map_7_0= ruleMap )
                    // InternalKim.g:12689:5: lv_map_7_0= ruleMap
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getMapMapParserRuleCall_7_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_map_7_0=ruleMap();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueWithIdAndConceptRule());
                      					}
                      					set(
                      						current,
                      						"map",
                      						lv_map_7_0,
                      						"org.integratedmodelling.kim.Kim.Map");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 9 :
                    // InternalKim.g:12707:3: ( (lv_null_8_0= 'unknown' ) )
                    {
                    // InternalKim.g:12707:3: ( (lv_null_8_0= 'unknown' ) )
                    // InternalKim.g:12708:4: (lv_null_8_0= 'unknown' )
                    {
                    // InternalKim.g:12708:4: (lv_null_8_0= 'unknown' )
                    // InternalKim.g:12709:5: lv_null_8_0= 'unknown'
                    {
                    lv_null_8_0=(Token)match(input,47,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_null_8_0, grammarAccess.getValueWithIdAndConceptAccess().getNullUnknownKeyword_8_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getValueWithIdAndConceptRule());
                      					}
                      					setWithLastConsumed(current, "null", true, "unknown");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValueWithIdAndConcept"


    // $ANTLR start "entryRuleValue"
    // InternalKim.g:12725:1: entryRuleValue returns [EObject current=null] : iv_ruleValue= ruleValue EOF ;
    public final EObject entryRuleValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValue = null;


        try {
            // InternalKim.g:12725:46: (iv_ruleValue= ruleValue EOF )
            // InternalKim.g:12726:2: iv_ruleValue= ruleValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleValue=ruleValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValue; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValue"


    // $ANTLR start "ruleValue"
    // InternalKim.g:12732:1: ruleValue returns [EObject current=null] : ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( (lv_expr_2_0= RULE_EXPR ) ) | ( ( (lv_id_3_1= RULE_LOWERCASE_ID | lv_id_3_2= RULE_UPPERCASE_ID | lv_id_3_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_4_0= ruleList ) ) | ( (lv_table_5_0= ruleLookupTable ) ) | ( (lv_map_6_0= ruleMap ) ) | ( (lv_null_7_0= 'unknown' ) ) ) ;
    public final EObject ruleValue() throws RecognitionException {
        EObject current = null;

        Token lv_expr_2_0=null;
        Token lv_id_3_1=null;
        Token lv_id_3_2=null;
        Token lv_id_3_3=null;
        Token lv_null_7_0=null;
        EObject lv_literal_0_0 = null;

        EObject lv_function_1_0 = null;

        EObject lv_list_4_0 = null;

        EObject lv_table_5_0 = null;

        EObject lv_map_6_0 = null;



        	enterRule();

        try {
            // InternalKim.g:12738:2: ( ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( (lv_expr_2_0= RULE_EXPR ) ) | ( ( (lv_id_3_1= RULE_LOWERCASE_ID | lv_id_3_2= RULE_UPPERCASE_ID | lv_id_3_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_4_0= ruleList ) ) | ( (lv_table_5_0= ruleLookupTable ) ) | ( (lv_map_6_0= ruleMap ) ) | ( (lv_null_7_0= 'unknown' ) ) ) )
            // InternalKim.g:12739:2: ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( (lv_expr_2_0= RULE_EXPR ) ) | ( ( (lv_id_3_1= RULE_LOWERCASE_ID | lv_id_3_2= RULE_UPPERCASE_ID | lv_id_3_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_4_0= ruleList ) ) | ( (lv_table_5_0= ruleLookupTable ) ) | ( (lv_map_6_0= ruleMap ) ) | ( (lv_null_7_0= 'unknown' ) ) )
            {
            // InternalKim.g:12739:2: ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( (lv_expr_2_0= RULE_EXPR ) ) | ( ( (lv_id_3_1= RULE_LOWERCASE_ID | lv_id_3_2= RULE_UPPERCASE_ID | lv_id_3_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_4_0= ruleList ) ) | ( (lv_table_5_0= ruleLookupTable ) ) | ( (lv_map_6_0= ruleMap ) ) | ( (lv_null_7_0= 'unknown' ) ) )
            int alt261=8;
            alt261 = dfa261.predict(input);
            switch (alt261) {
                case 1 :
                    // InternalKim.g:12740:3: ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) )
                    {
                    // InternalKim.g:12740:3: ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) )
                    // InternalKim.g:12741:4: (lv_literal_0_0= ruleLiteralOrIdOrComma )
                    {
                    // InternalKim.g:12741:4: (lv_literal_0_0= ruleLiteralOrIdOrComma )
                    // InternalKim.g:12742:5: lv_literal_0_0= ruleLiteralOrIdOrComma
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueAccess().getLiteralLiteralOrIdOrCommaParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_literal_0_0=ruleLiteralOrIdOrComma();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueRule());
                      					}
                      					set(
                      						current,
                      						"literal",
                      						lv_literal_0_0,
                      						"org.integratedmodelling.kim.Kim.LiteralOrIdOrComma");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:12760:3: ( (lv_function_1_0= ruleFunction ) )
                    {
                    // InternalKim.g:12760:3: ( (lv_function_1_0= ruleFunction ) )
                    // InternalKim.g:12761:4: (lv_function_1_0= ruleFunction )
                    {
                    // InternalKim.g:12761:4: (lv_function_1_0= ruleFunction )
                    // InternalKim.g:12762:5: lv_function_1_0= ruleFunction
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueAccess().getFunctionFunctionParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_function_1_0=ruleFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueRule());
                      					}
                      					set(
                      						current,
                      						"function",
                      						lv_function_1_0,
                      						"org.integratedmodelling.kim.Kim.Function");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:12780:3: ( (lv_expr_2_0= RULE_EXPR ) )
                    {
                    // InternalKim.g:12780:3: ( (lv_expr_2_0= RULE_EXPR ) )
                    // InternalKim.g:12781:4: (lv_expr_2_0= RULE_EXPR )
                    {
                    // InternalKim.g:12781:4: (lv_expr_2_0= RULE_EXPR )
                    // InternalKim.g:12782:5: lv_expr_2_0= RULE_EXPR
                    {
                    lv_expr_2_0=(Token)match(input,RULE_EXPR,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_expr_2_0, grammarAccess.getValueAccess().getExprEXPRTerminalRuleCall_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getValueRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"expr",
                      						lv_expr_2_0,
                      						"org.integratedmodelling.kim.Kim.EXPR");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:12799:3: ( ( (lv_id_3_1= RULE_LOWERCASE_ID | lv_id_3_2= RULE_UPPERCASE_ID | lv_id_3_3= RULE_CAMELCASE_ID ) ) )
                    {
                    // InternalKim.g:12799:3: ( ( (lv_id_3_1= RULE_LOWERCASE_ID | lv_id_3_2= RULE_UPPERCASE_ID | lv_id_3_3= RULE_CAMELCASE_ID ) ) )
                    // InternalKim.g:12800:4: ( (lv_id_3_1= RULE_LOWERCASE_ID | lv_id_3_2= RULE_UPPERCASE_ID | lv_id_3_3= RULE_CAMELCASE_ID ) )
                    {
                    // InternalKim.g:12800:4: ( (lv_id_3_1= RULE_LOWERCASE_ID | lv_id_3_2= RULE_UPPERCASE_ID | lv_id_3_3= RULE_CAMELCASE_ID ) )
                    // InternalKim.g:12801:5: (lv_id_3_1= RULE_LOWERCASE_ID | lv_id_3_2= RULE_UPPERCASE_ID | lv_id_3_3= RULE_CAMELCASE_ID )
                    {
                    // InternalKim.g:12801:5: (lv_id_3_1= RULE_LOWERCASE_ID | lv_id_3_2= RULE_UPPERCASE_ID | lv_id_3_3= RULE_CAMELCASE_ID )
                    int alt260=3;
                    switch ( input.LA(1) ) {
                    case RULE_LOWERCASE_ID:
                        {
                        alt260=1;
                        }
                        break;
                    case RULE_UPPERCASE_ID:
                        {
                        alt260=2;
                        }
                        break;
                    case RULE_CAMELCASE_ID:
                        {
                        alt260=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 260, 0, input);

                        throw nvae;
                    }

                    switch (alt260) {
                        case 1 :
                            // InternalKim.g:12802:6: lv_id_3_1= RULE_LOWERCASE_ID
                            {
                            lv_id_3_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_3_1, grammarAccess.getValueAccess().getIdLOWERCASE_IDTerminalRuleCall_3_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getValueRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_3_1,
                              							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:12817:6: lv_id_3_2= RULE_UPPERCASE_ID
                            {
                            lv_id_3_2=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_3_2, grammarAccess.getValueAccess().getIdUPPERCASE_IDTerminalRuleCall_3_0_1());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getValueRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_3_2,
                              							"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 3 :
                            // InternalKim.g:12832:6: lv_id_3_3= RULE_CAMELCASE_ID
                            {
                            lv_id_3_3=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_3_3, grammarAccess.getValueAccess().getIdCAMELCASE_IDTerminalRuleCall_3_0_2());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getValueRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_3_3,
                              							"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:12850:3: ( (lv_list_4_0= ruleList ) )
                    {
                    // InternalKim.g:12850:3: ( (lv_list_4_0= ruleList ) )
                    // InternalKim.g:12851:4: (lv_list_4_0= ruleList )
                    {
                    // InternalKim.g:12851:4: (lv_list_4_0= ruleList )
                    // InternalKim.g:12852:5: lv_list_4_0= ruleList
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueAccess().getListListParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_list_4_0=ruleList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueRule());
                      					}
                      					set(
                      						current,
                      						"list",
                      						lv_list_4_0,
                      						"org.integratedmodelling.kim.Kim.List");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:12870:3: ( (lv_table_5_0= ruleLookupTable ) )
                    {
                    // InternalKim.g:12870:3: ( (lv_table_5_0= ruleLookupTable ) )
                    // InternalKim.g:12871:4: (lv_table_5_0= ruleLookupTable )
                    {
                    // InternalKim.g:12871:4: (lv_table_5_0= ruleLookupTable )
                    // InternalKim.g:12872:5: lv_table_5_0= ruleLookupTable
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueAccess().getTableLookupTableParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_table_5_0=ruleLookupTable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueRule());
                      					}
                      					set(
                      						current,
                      						"table",
                      						lv_table_5_0,
                      						"org.integratedmodelling.kim.Kim.LookupTable");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalKim.g:12890:3: ( (lv_map_6_0= ruleMap ) )
                    {
                    // InternalKim.g:12890:3: ( (lv_map_6_0= ruleMap ) )
                    // InternalKim.g:12891:4: (lv_map_6_0= ruleMap )
                    {
                    // InternalKim.g:12891:4: (lv_map_6_0= ruleMap )
                    // InternalKim.g:12892:5: lv_map_6_0= ruleMap
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueAccess().getMapMapParserRuleCall_6_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_map_6_0=ruleMap();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueRule());
                      					}
                      					set(
                      						current,
                      						"map",
                      						lv_map_6_0,
                      						"org.integratedmodelling.kim.Kim.Map");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalKim.g:12910:3: ( (lv_null_7_0= 'unknown' ) )
                    {
                    // InternalKim.g:12910:3: ( (lv_null_7_0= 'unknown' ) )
                    // InternalKim.g:12911:4: (lv_null_7_0= 'unknown' )
                    {
                    // InternalKim.g:12911:4: (lv_null_7_0= 'unknown' )
                    // InternalKim.g:12912:5: lv_null_7_0= 'unknown'
                    {
                    lv_null_7_0=(Token)match(input,47,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_null_7_0, grammarAccess.getValueAccess().getNullUnknownKeyword_7_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getValueRule());
                      					}
                      					setWithLastConsumed(current, "null", true, "unknown");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValue"


    // $ANTLR start "entryRuleFunction"
    // InternalKim.g:12928:1: entryRuleFunction returns [EObject current=null] : iv_ruleFunction= ruleFunction EOF ;
    public final EObject entryRuleFunction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunction = null;


        try {
            // InternalKim.g:12928:49: (iv_ruleFunction= ruleFunction EOF )
            // InternalKim.g:12929:2: iv_ruleFunction= ruleFunction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunction=ruleFunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunction"


    // $ANTLR start "ruleFunction"
    // InternalKim.g:12935:1: ruleFunction returns [EObject current=null] : ( ( (lv_name_0_0= rulePathName ) ) otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' ) ;
    public final EObject ruleFunction() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_parameters_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:12941:2: ( ( ( (lv_name_0_0= rulePathName ) ) otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' ) )
            // InternalKim.g:12942:2: ( ( (lv_name_0_0= rulePathName ) ) otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' )
            {
            // InternalKim.g:12942:2: ( ( (lv_name_0_0= rulePathName ) ) otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' )
            // InternalKim.g:12943:3: ( (lv_name_0_0= rulePathName ) ) otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')'
            {
            // InternalKim.g:12943:3: ( (lv_name_0_0= rulePathName ) )
            // InternalKim.g:12944:4: (lv_name_0_0= rulePathName )
            {
            // InternalKim.g:12944:4: (lv_name_0_0= rulePathName )
            // InternalKim.g:12945:5: lv_name_0_0= rulePathName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFunctionAccess().getNamePathNameParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_35);
            lv_name_0_0=rulePathName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFunctionRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_0_0,
              						"org.integratedmodelling.kim.Kim.PathName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,34,FOLLOW_144); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalKim.g:12966:3: ( (lv_parameters_2_0= ruleParameterList ) )?
            int alt262=2;
            int LA262_0 = input.LA(1);

            if ( ((LA262_0>=RULE_LOWERCASE_ID && LA262_0<=RULE_CAMELCASE_ID)||(LA262_0>=RULE_ID && LA262_0<=RULE_INT)||(LA262_0>=22 && LA262_0<=24)||LA262_0==34||(LA262_0>=47 && LA262_0<=48)||LA262_0==184||(LA262_0>=226 && LA262_0<=227)) ) {
                alt262=1;
            }
            switch (alt262) {
                case 1 :
                    // InternalKim.g:12967:4: (lv_parameters_2_0= ruleParameterList )
                    {
                    // InternalKim.g:12967:4: (lv_parameters_2_0= ruleParameterList )
                    // InternalKim.g:12968:5: lv_parameters_2_0= ruleParameterList
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getFunctionAccess().getParametersParameterListParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_83);
                    lv_parameters_2_0=ruleParameterList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getFunctionRule());
                      					}
                      					set(
                      						current,
                      						"parameters",
                      						lv_parameters_2_0,
                      						"org.integratedmodelling.kim.Kim.ParameterList");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_3=(Token)match(input,37,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getFunctionAccess().getRightParenthesisKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunction"


    // $ANTLR start "entryRuleCONCEPT_TYPE"
    // InternalKim.g:12993:1: entryRuleCONCEPT_TYPE returns [String current=null] : iv_ruleCONCEPT_TYPE= ruleCONCEPT_TYPE EOF ;
    public final String entryRuleCONCEPT_TYPE() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleCONCEPT_TYPE = null;


        try {
            // InternalKim.g:12993:52: (iv_ruleCONCEPT_TYPE= ruleCONCEPT_TYPE EOF )
            // InternalKim.g:12994:2: iv_ruleCONCEPT_TYPE= ruleCONCEPT_TYPE EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCONCEPT_TYPERule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCONCEPT_TYPE=ruleCONCEPT_TYPE();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCONCEPT_TYPE.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCONCEPT_TYPE"


    // $ANTLR start "ruleCONCEPT_TYPE"
    // InternalKim.g:13000:1: ruleCONCEPT_TYPE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'quality' | this_DECLARABLE_TYPE_1= ruleDECLARABLE_TYPE ) ;
    public final AntlrDatatypeRuleToken ruleCONCEPT_TYPE() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_DECLARABLE_TYPE_1 = null;



        	enterRule();

        try {
            // InternalKim.g:13006:2: ( (kw= 'quality' | this_DECLARABLE_TYPE_1= ruleDECLARABLE_TYPE ) )
            // InternalKim.g:13007:2: (kw= 'quality' | this_DECLARABLE_TYPE_1= ruleDECLARABLE_TYPE )
            {
            // InternalKim.g:13007:2: (kw= 'quality' | this_DECLARABLE_TYPE_1= ruleDECLARABLE_TYPE )
            int alt263=2;
            int LA263_0 = input.LA(1);

            if ( (LA263_0==188) ) {
                alt263=1;
            }
            else if ( (LA263_0==79||(LA263_0>=137 && LA263_0<=138)||LA263_0==159||(LA263_0>=171 && LA263_0<=174)||(LA263_0>=189 && LA263_0<=217)) ) {
                alt263=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 263, 0, input);

                throw nvae;
            }
            switch (alt263) {
                case 1 :
                    // InternalKim.g:13008:3: kw= 'quality'
                    {
                    kw=(Token)match(input,188,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getCONCEPT_TYPEAccess().getQualityKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:13014:3: this_DECLARABLE_TYPE_1= ruleDECLARABLE_TYPE
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getCONCEPT_TYPEAccess().getDECLARABLE_TYPEParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DECLARABLE_TYPE_1=ruleDECLARABLE_TYPE();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_DECLARABLE_TYPE_1);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCONCEPT_TYPE"


    // $ANTLR start "entryRuleDECLARABLE_TYPE"
    // InternalKim.g:13028:1: entryRuleDECLARABLE_TYPE returns [String current=null] : iv_ruleDECLARABLE_TYPE= ruleDECLARABLE_TYPE EOF ;
    public final String entryRuleDECLARABLE_TYPE() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleDECLARABLE_TYPE = null;


        try {
            // InternalKim.g:13028:55: (iv_ruleDECLARABLE_TYPE= ruleDECLARABLE_TYPE EOF )
            // InternalKim.g:13029:2: iv_ruleDECLARABLE_TYPE= ruleDECLARABLE_TYPE EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDECLARABLE_TYPERule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDECLARABLE_TYPE=ruleDECLARABLE_TYPE();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDECLARABLE_TYPE.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDECLARABLE_TYPE"


    // $ANTLR start "ruleDECLARABLE_TYPE"
    // InternalKim.g:13035:1: ruleDECLARABLE_TYPE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'class' | kw= 'quantity' | kw= 'configuration' | kw= 'relationship' | kw= 'bond' | kw= 'extent' | this_EXTENSIVE_PROPERTY_6= ruleEXTENSIVE_PROPERTY | this_INTENSIVE_PROPERTY_7= ruleINTENSIVE_PROPERTY | this_AGENT_TYPE_8= ruleAGENT_TYPE | this_TRAIT_9= ruleTRAIT ) ;
    public final AntlrDatatypeRuleToken ruleDECLARABLE_TYPE() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_EXTENSIVE_PROPERTY_6 = null;

        AntlrDatatypeRuleToken this_INTENSIVE_PROPERTY_7 = null;

        AntlrDatatypeRuleToken this_AGENT_TYPE_8 = null;

        AntlrDatatypeRuleToken this_TRAIT_9 = null;



        	enterRule();

        try {
            // InternalKim.g:13041:2: ( (kw= 'class' | kw= 'quantity' | kw= 'configuration' | kw= 'relationship' | kw= 'bond' | kw= 'extent' | this_EXTENSIVE_PROPERTY_6= ruleEXTENSIVE_PROPERTY | this_INTENSIVE_PROPERTY_7= ruleINTENSIVE_PROPERTY | this_AGENT_TYPE_8= ruleAGENT_TYPE | this_TRAIT_9= ruleTRAIT ) )
            // InternalKim.g:13042:2: (kw= 'class' | kw= 'quantity' | kw= 'configuration' | kw= 'relationship' | kw= 'bond' | kw= 'extent' | this_EXTENSIVE_PROPERTY_6= ruleEXTENSIVE_PROPERTY | this_INTENSIVE_PROPERTY_7= ruleINTENSIVE_PROPERTY | this_AGENT_TYPE_8= ruleAGENT_TYPE | this_TRAIT_9= ruleTRAIT )
            {
            // InternalKim.g:13042:2: (kw= 'class' | kw= 'quantity' | kw= 'configuration' | kw= 'relationship' | kw= 'bond' | kw= 'extent' | this_EXTENSIVE_PROPERTY_6= ruleEXTENSIVE_PROPERTY | this_INTENSIVE_PROPERTY_7= ruleINTENSIVE_PROPERTY | this_AGENT_TYPE_8= ruleAGENT_TYPE | this_TRAIT_9= ruleTRAIT )
            int alt264=10;
            switch ( input.LA(1) ) {
            case 189:
                {
                alt264=1;
                }
                break;
            case 190:
                {
                alt264=2;
                }
                break;
            case 191:
                {
                alt264=3;
                }
                break;
            case 138:
                {
                alt264=4;
                }
                break;
            case 192:
                {
                alt264=5;
                }
                break;
            case 174:
                {
                alt264=6;
                }
                break;
            case 194:
            case 195:
            case 196:
            case 197:
            case 198:
            case 199:
            case 200:
            case 201:
                {
                alt264=7;
                }
                break;
            case 202:
            case 203:
            case 204:
            case 205:
            case 206:
            case 207:
            case 208:
            case 209:
            case 210:
            case 211:
            case 212:
            case 213:
            case 214:
                {
                alt264=8;
                }
                break;
            case 137:
            case 215:
            case 216:
            case 217:
                {
                alt264=9;
                }
                break;
            case 79:
            case 159:
            case 171:
            case 172:
            case 173:
            case 193:
                {
                alt264=10;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 264, 0, input);

                throw nvae;
            }

            switch (alt264) {
                case 1 :
                    // InternalKim.g:13043:3: kw= 'class'
                    {
                    kw=(Token)match(input,189,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getDECLARABLE_TYPEAccess().getClassKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:13049:3: kw= 'quantity'
                    {
                    kw=(Token)match(input,190,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getDECLARABLE_TYPEAccess().getQuantityKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:13055:3: kw= 'configuration'
                    {
                    kw=(Token)match(input,191,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getDECLARABLE_TYPEAccess().getConfigurationKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKim.g:13061:3: kw= 'relationship'
                    {
                    kw=(Token)match(input,138,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getDECLARABLE_TYPEAccess().getRelationshipKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalKim.g:13067:3: kw= 'bond'
                    {
                    kw=(Token)match(input,192,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getDECLARABLE_TYPEAccess().getBondKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalKim.g:13073:3: kw= 'extent'
                    {
                    kw=(Token)match(input,174,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getDECLARABLE_TYPEAccess().getExtentKeyword_5());
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalKim.g:13079:3: this_EXTENSIVE_PROPERTY_6= ruleEXTENSIVE_PROPERTY
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDECLARABLE_TYPEAccess().getEXTENSIVE_PROPERTYParserRuleCall_6());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_EXTENSIVE_PROPERTY_6=ruleEXTENSIVE_PROPERTY();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_EXTENSIVE_PROPERTY_6);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalKim.g:13090:3: this_INTENSIVE_PROPERTY_7= ruleINTENSIVE_PROPERTY
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDECLARABLE_TYPEAccess().getINTENSIVE_PROPERTYParserRuleCall_7());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_INTENSIVE_PROPERTY_7=ruleINTENSIVE_PROPERTY();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_INTENSIVE_PROPERTY_7);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalKim.g:13101:3: this_AGENT_TYPE_8= ruleAGENT_TYPE
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDECLARABLE_TYPEAccess().getAGENT_TYPEParserRuleCall_8());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_AGENT_TYPE_8=ruleAGENT_TYPE();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_AGENT_TYPE_8);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 10 :
                    // InternalKim.g:13112:3: this_TRAIT_9= ruleTRAIT
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDECLARABLE_TYPEAccess().getTRAITParserRuleCall_9());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_TRAIT_9=ruleTRAIT();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_TRAIT_9);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDECLARABLE_TYPE"


    // $ANTLR start "entryRuleTRAIT"
    // InternalKim.g:13126:1: entryRuleTRAIT returns [String current=null] : iv_ruleTRAIT= ruleTRAIT EOF ;
    public final String entryRuleTRAIT() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleTRAIT = null;


        try {
            // InternalKim.g:13126:45: (iv_ruleTRAIT= ruleTRAIT EOF )
            // InternalKim.g:13127:2: iv_ruleTRAIT= ruleTRAIT EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTRAITRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTRAIT=ruleTRAIT();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTRAIT.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTRAIT"


    // $ANTLR start "ruleTRAIT"
    // InternalKim.g:13133:1: ruleTRAIT returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'ordering' | kw= 'attribute' | kw= 'identity' | kw= 'role' | kw= 'realm' | kw= 'domain' ) ;
    public final AntlrDatatypeRuleToken ruleTRAIT() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKim.g:13139:2: ( (kw= 'ordering' | kw= 'attribute' | kw= 'identity' | kw= 'role' | kw= 'realm' | kw= 'domain' ) )
            // InternalKim.g:13140:2: (kw= 'ordering' | kw= 'attribute' | kw= 'identity' | kw= 'role' | kw= 'realm' | kw= 'domain' )
            {
            // InternalKim.g:13140:2: (kw= 'ordering' | kw= 'attribute' | kw= 'identity' | kw= 'role' | kw= 'realm' | kw= 'domain' )
            int alt265=6;
            switch ( input.LA(1) ) {
            case 193:
                {
                alt265=1;
                }
                break;
            case 172:
                {
                alt265=2;
                }
                break;
            case 171:
                {
                alt265=3;
                }
                break;
            case 159:
                {
                alt265=4;
                }
                break;
            case 173:
                {
                alt265=5;
                }
                break;
            case 79:
                {
                alt265=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 265, 0, input);

                throw nvae;
            }

            switch (alt265) {
                case 1 :
                    // InternalKim.g:13141:3: kw= 'ordering'
                    {
                    kw=(Token)match(input,193,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getTRAITAccess().getOrderingKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:13147:3: kw= 'attribute'
                    {
                    kw=(Token)match(input,172,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getTRAITAccess().getAttributeKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:13153:3: kw= 'identity'
                    {
                    kw=(Token)match(input,171,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getTRAITAccess().getIdentityKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKim.g:13159:3: kw= 'role'
                    {
                    kw=(Token)match(input,159,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getTRAITAccess().getRoleKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalKim.g:13165:3: kw= 'realm'
                    {
                    kw=(Token)match(input,173,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getTRAITAccess().getRealmKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalKim.g:13171:3: kw= 'domain'
                    {
                    kw=(Token)match(input,79,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getTRAITAccess().getDomainKeyword_5());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTRAIT"


    // $ANTLR start "entryRuleEXTENSIVE_PROPERTY"
    // InternalKim.g:13180:1: entryRuleEXTENSIVE_PROPERTY returns [String current=null] : iv_ruleEXTENSIVE_PROPERTY= ruleEXTENSIVE_PROPERTY EOF ;
    public final String entryRuleEXTENSIVE_PROPERTY() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEXTENSIVE_PROPERTY = null;


        try {
            // InternalKim.g:13180:58: (iv_ruleEXTENSIVE_PROPERTY= ruleEXTENSIVE_PROPERTY EOF )
            // InternalKim.g:13181:2: iv_ruleEXTENSIVE_PROPERTY= ruleEXTENSIVE_PROPERTY EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEXTENSIVE_PROPERTYRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEXTENSIVE_PROPERTY=ruleEXTENSIVE_PROPERTY();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEXTENSIVE_PROPERTY.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEXTENSIVE_PROPERTY"


    // $ANTLR start "ruleEXTENSIVE_PROPERTY"
    // InternalKim.g:13187:1: ruleEXTENSIVE_PROPERTY returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'amount' | kw= 'length' | kw= 'mass' | kw= 'volume' | kw= 'weight' | kw= 'money' | kw= 'duration' | kw= 'area' ) ;
    public final AntlrDatatypeRuleToken ruleEXTENSIVE_PROPERTY() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKim.g:13193:2: ( (kw= 'amount' | kw= 'length' | kw= 'mass' | kw= 'volume' | kw= 'weight' | kw= 'money' | kw= 'duration' | kw= 'area' ) )
            // InternalKim.g:13194:2: (kw= 'amount' | kw= 'length' | kw= 'mass' | kw= 'volume' | kw= 'weight' | kw= 'money' | kw= 'duration' | kw= 'area' )
            {
            // InternalKim.g:13194:2: (kw= 'amount' | kw= 'length' | kw= 'mass' | kw= 'volume' | kw= 'weight' | kw= 'money' | kw= 'duration' | kw= 'area' )
            int alt266=8;
            switch ( input.LA(1) ) {
            case 194:
                {
                alt266=1;
                }
                break;
            case 195:
                {
                alt266=2;
                }
                break;
            case 196:
                {
                alt266=3;
                }
                break;
            case 197:
                {
                alt266=4;
                }
                break;
            case 198:
                {
                alt266=5;
                }
                break;
            case 199:
                {
                alt266=6;
                }
                break;
            case 200:
                {
                alt266=7;
                }
                break;
            case 201:
                {
                alt266=8;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 266, 0, input);

                throw nvae;
            }

            switch (alt266) {
                case 1 :
                    // InternalKim.g:13195:3: kw= 'amount'
                    {
                    kw=(Token)match(input,194,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEXTENSIVE_PROPERTYAccess().getAmountKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:13201:3: kw= 'length'
                    {
                    kw=(Token)match(input,195,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEXTENSIVE_PROPERTYAccess().getLengthKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:13207:3: kw= 'mass'
                    {
                    kw=(Token)match(input,196,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEXTENSIVE_PROPERTYAccess().getMassKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKim.g:13213:3: kw= 'volume'
                    {
                    kw=(Token)match(input,197,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEXTENSIVE_PROPERTYAccess().getVolumeKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalKim.g:13219:3: kw= 'weight'
                    {
                    kw=(Token)match(input,198,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEXTENSIVE_PROPERTYAccess().getWeightKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalKim.g:13225:3: kw= 'money'
                    {
                    kw=(Token)match(input,199,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEXTENSIVE_PROPERTYAccess().getMoneyKeyword_5());
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalKim.g:13231:3: kw= 'duration'
                    {
                    kw=(Token)match(input,200,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEXTENSIVE_PROPERTYAccess().getDurationKeyword_6());
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalKim.g:13237:3: kw= 'area'
                    {
                    kw=(Token)match(input,201,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEXTENSIVE_PROPERTYAccess().getAreaKeyword_7());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEXTENSIVE_PROPERTY"


    // $ANTLR start "entryRuleINTENSIVE_PROPERTY"
    // InternalKim.g:13246:1: entryRuleINTENSIVE_PROPERTY returns [String current=null] : iv_ruleINTENSIVE_PROPERTY= ruleINTENSIVE_PROPERTY EOF ;
    public final String entryRuleINTENSIVE_PROPERTY() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleINTENSIVE_PROPERTY = null;


        try {
            // InternalKim.g:13246:58: (iv_ruleINTENSIVE_PROPERTY= ruleINTENSIVE_PROPERTY EOF )
            // InternalKim.g:13247:2: iv_ruleINTENSIVE_PROPERTY= ruleINTENSIVE_PROPERTY EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getINTENSIVE_PROPERTYRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleINTENSIVE_PROPERTY=ruleINTENSIVE_PROPERTY();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleINTENSIVE_PROPERTY.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleINTENSIVE_PROPERTY"


    // $ANTLR start "ruleINTENSIVE_PROPERTY"
    // InternalKim.g:13253:1: ruleINTENSIVE_PROPERTY returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'acceleration' | kw= 'energy' | kw= 'entropy' | kw= 'priority' | kw= 'electric-potential' | kw= 'charge' | kw= 'resistance' | kw= 'resistivity' | kw= 'pressure' | kw= 'angle' | kw= 'velocity' | kw= 'temperature' | kw= 'viscosity' ) ;
    public final AntlrDatatypeRuleToken ruleINTENSIVE_PROPERTY() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKim.g:13259:2: ( (kw= 'acceleration' | kw= 'energy' | kw= 'entropy' | kw= 'priority' | kw= 'electric-potential' | kw= 'charge' | kw= 'resistance' | kw= 'resistivity' | kw= 'pressure' | kw= 'angle' | kw= 'velocity' | kw= 'temperature' | kw= 'viscosity' ) )
            // InternalKim.g:13260:2: (kw= 'acceleration' | kw= 'energy' | kw= 'entropy' | kw= 'priority' | kw= 'electric-potential' | kw= 'charge' | kw= 'resistance' | kw= 'resistivity' | kw= 'pressure' | kw= 'angle' | kw= 'velocity' | kw= 'temperature' | kw= 'viscosity' )
            {
            // InternalKim.g:13260:2: (kw= 'acceleration' | kw= 'energy' | kw= 'entropy' | kw= 'priority' | kw= 'electric-potential' | kw= 'charge' | kw= 'resistance' | kw= 'resistivity' | kw= 'pressure' | kw= 'angle' | kw= 'velocity' | kw= 'temperature' | kw= 'viscosity' )
            int alt267=13;
            switch ( input.LA(1) ) {
            case 202:
                {
                alt267=1;
                }
                break;
            case 203:
                {
                alt267=2;
                }
                break;
            case 204:
                {
                alt267=3;
                }
                break;
            case 205:
                {
                alt267=4;
                }
                break;
            case 206:
                {
                alt267=5;
                }
                break;
            case 207:
                {
                alt267=6;
                }
                break;
            case 208:
                {
                alt267=7;
                }
                break;
            case 209:
                {
                alt267=8;
                }
                break;
            case 210:
                {
                alt267=9;
                }
                break;
            case 211:
                {
                alt267=10;
                }
                break;
            case 212:
                {
                alt267=11;
                }
                break;
            case 213:
                {
                alt267=12;
                }
                break;
            case 214:
                {
                alt267=13;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 267, 0, input);

                throw nvae;
            }

            switch (alt267) {
                case 1 :
                    // InternalKim.g:13261:3: kw= 'acceleration'
                    {
                    kw=(Token)match(input,202,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getAccelerationKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:13267:3: kw= 'energy'
                    {
                    kw=(Token)match(input,203,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getEnergyKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:13273:3: kw= 'entropy'
                    {
                    kw=(Token)match(input,204,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getEntropyKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKim.g:13279:3: kw= 'priority'
                    {
                    kw=(Token)match(input,205,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getPriorityKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalKim.g:13285:3: kw= 'electric-potential'
                    {
                    kw=(Token)match(input,206,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getElectricPotentialKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalKim.g:13291:3: kw= 'charge'
                    {
                    kw=(Token)match(input,207,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getChargeKeyword_5());
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalKim.g:13297:3: kw= 'resistance'
                    {
                    kw=(Token)match(input,208,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getResistanceKeyword_6());
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalKim.g:13303:3: kw= 'resistivity'
                    {
                    kw=(Token)match(input,209,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getResistivityKeyword_7());
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalKim.g:13309:3: kw= 'pressure'
                    {
                    kw=(Token)match(input,210,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getPressureKeyword_8());
                      		
                    }

                    }
                    break;
                case 10 :
                    // InternalKim.g:13315:3: kw= 'angle'
                    {
                    kw=(Token)match(input,211,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getAngleKeyword_9());
                      		
                    }

                    }
                    break;
                case 11 :
                    // InternalKim.g:13321:3: kw= 'velocity'
                    {
                    kw=(Token)match(input,212,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getVelocityKeyword_10());
                      		
                    }

                    }
                    break;
                case 12 :
                    // InternalKim.g:13327:3: kw= 'temperature'
                    {
                    kw=(Token)match(input,213,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getTemperatureKeyword_11());
                      		
                    }

                    }
                    break;
                case 13 :
                    // InternalKim.g:13333:3: kw= 'viscosity'
                    {
                    kw=(Token)match(input,214,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getViscosityKeyword_12());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleINTENSIVE_PROPERTY"


    // $ANTLR start "entryRuleAGENT_TYPE"
    // InternalKim.g:13342:1: entryRuleAGENT_TYPE returns [String current=null] : iv_ruleAGENT_TYPE= ruleAGENT_TYPE EOF ;
    public final String entryRuleAGENT_TYPE() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleAGENT_TYPE = null;


        try {
            // InternalKim.g:13342:50: (iv_ruleAGENT_TYPE= ruleAGENT_TYPE EOF )
            // InternalKim.g:13343:2: iv_ruleAGENT_TYPE= ruleAGENT_TYPE EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAGENT_TYPERule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAGENT_TYPE=ruleAGENT_TYPE();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAGENT_TYPE.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAGENT_TYPE"


    // $ANTLR start "ruleAGENT_TYPE"
    // InternalKim.g:13349:1: ruleAGENT_TYPE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'thing' | kw= 'process' | kw= 'agent' | kw= 'event' ) ;
    public final AntlrDatatypeRuleToken ruleAGENT_TYPE() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKim.g:13355:2: ( (kw= 'thing' | kw= 'process' | kw= 'agent' | kw= 'event' ) )
            // InternalKim.g:13356:2: (kw= 'thing' | kw= 'process' | kw= 'agent' | kw= 'event' )
            {
            // InternalKim.g:13356:2: (kw= 'thing' | kw= 'process' | kw= 'agent' | kw= 'event' )
            int alt268=4;
            switch ( input.LA(1) ) {
            case 215:
                {
                alt268=1;
                }
                break;
            case 216:
                {
                alt268=2;
                }
                break;
            case 137:
                {
                alt268=3;
                }
                break;
            case 217:
                {
                alt268=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 268, 0, input);

                throw nvae;
            }

            switch (alt268) {
                case 1 :
                    // InternalKim.g:13357:3: kw= 'thing'
                    {
                    kw=(Token)match(input,215,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAGENT_TYPEAccess().getThingKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:13363:3: kw= 'process'
                    {
                    kw=(Token)match(input,216,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAGENT_TYPEAccess().getProcessKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:13369:3: kw= 'agent'
                    {
                    kw=(Token)match(input,137,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAGENT_TYPEAccess().getAgentKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKim.g:13375:3: kw= 'event'
                    {
                    kw=(Token)match(input,217,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAGENT_TYPEAccess().getEventKeyword_3());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAGENT_TYPE"


    // $ANTLR start "entryRulePROPERTY_TYPE"
    // InternalKim.g:13384:1: entryRulePROPERTY_TYPE returns [String current=null] : iv_rulePROPERTY_TYPE= rulePROPERTY_TYPE EOF ;
    public final String entryRulePROPERTY_TYPE() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulePROPERTY_TYPE = null;


        try {
            // InternalKim.g:13384:53: (iv_rulePROPERTY_TYPE= rulePROPERTY_TYPE EOF )
            // InternalKim.g:13385:2: iv_rulePROPERTY_TYPE= rulePROPERTY_TYPE EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPROPERTY_TYPERule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePROPERTY_TYPE=rulePROPERTY_TYPE();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePROPERTY_TYPE.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePROPERTY_TYPE"


    // $ANTLR start "rulePROPERTY_TYPE"
    // InternalKim.g:13391:1: rulePROPERTY_TYPE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'functional' | kw= 'structural' ) ;
    public final AntlrDatatypeRuleToken rulePROPERTY_TYPE() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKim.g:13397:2: ( (kw= 'functional' | kw= 'structural' ) )
            // InternalKim.g:13398:2: (kw= 'functional' | kw= 'structural' )
            {
            // InternalKim.g:13398:2: (kw= 'functional' | kw= 'structural' )
            int alt269=2;
            int LA269_0 = input.LA(1);

            if ( (LA269_0==218) ) {
                alt269=1;
            }
            else if ( (LA269_0==219) ) {
                alt269=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 269, 0, input);

                throw nvae;
            }
            switch (alt269) {
                case 1 :
                    // InternalKim.g:13399:3: kw= 'functional'
                    {
                    kw=(Token)match(input,218,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getPROPERTY_TYPEAccess().getFunctionalKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:13405:3: kw= 'structural'
                    {
                    kw=(Token)match(input,219,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getPROPERTY_TYPEAccess().getStructuralKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePROPERTY_TYPE"


    // $ANTLR start "entryRuleSimpleObservableSemantics"
    // InternalKim.g:13414:1: entryRuleSimpleObservableSemantics returns [EObject current=null] : iv_ruleSimpleObservableSemantics= ruleSimpleObservableSemantics EOF ;
    public final EObject entryRuleSimpleObservableSemantics() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimpleObservableSemantics = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1()
        	);

        try {
            // InternalKim.g:13418:2: (iv_ruleSimpleObservableSemantics= ruleSimpleObservableSemantics EOF )
            // InternalKim.g:13419:2: iv_ruleSimpleObservableSemantics= ruleSimpleObservableSemantics EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimpleObservableSemanticsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimpleObservableSemantics=ruleSimpleObservableSemantics();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimpleObservableSemantics; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleSimpleObservableSemantics"


    // $ANTLR start "ruleSimpleObservableSemantics"
    // InternalKim.g:13428:1: ruleSimpleObservableSemantics returns [EObject current=null] : ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )* ) ) ) ) ;
    public final EObject ruleSimpleObservableSemantics() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_13=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token lv_name_19_0=null;
        EObject lv_declaration_0_0 = null;

        EObject lv_by_3_0 = null;

        EObject lv_downTo_6_0 = null;

        AntlrDatatypeRuleToken lv_accordingTo_9_0 = null;

        EObject lv_unit_11_0 = null;

        EObject lv_currency_12_0 = null;

        EObject lv_unit_14_0 = null;

        EObject lv_from_15_0 = null;

        EObject lv_to_17_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1()
        	);

        try {
            // InternalKim.g:13437:2: ( ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )* ) ) ) ) )
            // InternalKim.g:13438:2: ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )* ) ) ) )
            {
            // InternalKim.g:13438:2: ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )* ) ) ) )
            // InternalKim.g:13439:3: ( (lv_declaration_0_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )* ) ) )
            {
            // InternalKim.g:13439:3: ( (lv_declaration_0_0= ruleConceptDeclaration ) )
            // InternalKim.g:13440:4: (lv_declaration_0_0= ruleConceptDeclaration )
            {
            // InternalKim.g:13440:4: (lv_declaration_0_0= ruleConceptDeclaration )
            // InternalKim.g:13441:5: lv_declaration_0_0= ruleConceptDeclaration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getDeclarationConceptDeclarationParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_154);
            lv_declaration_0_0=ruleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSimpleObservableSemanticsRule());
              					}
              					set(
              						current,
              						"declaration",
              						lv_declaration_0_0,
              						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:13458:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )* ) ) )
            // InternalKim.g:13459:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )* ) )
            {
            // InternalKim.g:13459:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )* ) )
            // InternalKim.g:13460:5: ( ( ({...}? => ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1());
            // InternalKim.g:13463:5: ( ( ({...}? => ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )* )
            // InternalKim.g:13464:6: ( ({...}? => ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )*
            {
            // InternalKim.g:13464:6: ( ({...}? => ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )*
            loop272:
            do {
                int alt272=7;
                alt272 = dfa272.predict(input);
                switch (alt272) {
            	case 1 :
            	    // InternalKim.g:13465:4: ({...}? => ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) ) )
            	    {
            	    // InternalKim.g:13465:4: ({...}? => ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) ) )
            	    // InternalKim.g:13466:5: {...}? => ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleSimpleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 0)");
            	    }
            	    // InternalKim.g:13466:122: ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) )
            	    // InternalKim.g:13467:6: ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 0);
            	    // InternalKim.g:13470:9: ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) )
            	    // InternalKim.g:13470:10: {...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleSimpleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:13470:19: (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) )
            	    // InternalKim.g:13470:20: otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) )
            	    {
            	    otherlv_2=(Token)match(input,94,FOLLOW_16); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_2, grammarAccess.getSimpleObservableSemanticsAccess().getByKeyword_1_0_0());
            	      								
            	    }
            	    // InternalKim.g:13474:9: ( (lv_by_3_0= ruleConcept ) )
            	    // InternalKim.g:13475:10: (lv_by_3_0= ruleConcept )
            	    {
            	    // InternalKim.g:13475:10: (lv_by_3_0= ruleConcept )
            	    // InternalKim.g:13476:11: lv_by_3_0= ruleConcept
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getByConceptParserRuleCall_1_0_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_154);
            	    lv_by_3_0=ruleConcept();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getSimpleObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"by",
            	      												lv_by_3_0,
            	      												"org.integratedmodelling.kim.Kim.Concept");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKim.g:13499:4: ({...}? => ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) ) ) ) )
            	    {
            	    // InternalKim.g:13499:4: ({...}? => ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) ) ) ) )
            	    // InternalKim.g:13500:5: {...}? => ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleSimpleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 1)");
            	    }
            	    // InternalKim.g:13500:122: ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) ) ) )
            	    // InternalKim.g:13501:6: ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 1);
            	    // InternalKim.g:13504:9: ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) ) )
            	    // InternalKim.g:13504:10: {...}? => (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleSimpleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:13504:19: (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) )
            	    // InternalKim.g:13504:20: otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) )
            	    {
            	    otherlv_4=(Token)match(input,95,FOLLOW_18); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_4, grammarAccess.getSimpleObservableSemanticsAccess().getDownKeyword_1_1_0());
            	      								
            	    }
            	    otherlv_5=(Token)match(input,32,FOLLOW_16); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_5, grammarAccess.getSimpleObservableSemanticsAccess().getToKeyword_1_1_1());
            	      								
            	    }
            	    // InternalKim.g:13512:9: ( (lv_downTo_6_0= ruleConcept ) )
            	    // InternalKim.g:13513:10: (lv_downTo_6_0= ruleConcept )
            	    {
            	    // InternalKim.g:13513:10: (lv_downTo_6_0= ruleConcept )
            	    // InternalKim.g:13514:11: lv_downTo_6_0= ruleConcept
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getDownToConceptParserRuleCall_1_1_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_154);
            	    lv_downTo_6_0=ruleConcept();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getSimpleObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"downTo",
            	      												lv_downTo_6_0,
            	      												"org.integratedmodelling.kim.Kim.Concept");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalKim.g:13537:4: ({...}? => ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) ) )
            	    {
            	    // InternalKim.g:13537:4: ({...}? => ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) ) )
            	    // InternalKim.g:13538:5: {...}? => ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleSimpleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 2)");
            	    }
            	    // InternalKim.g:13538:122: ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) )
            	    // InternalKim.g:13539:6: ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 2);
            	    // InternalKim.g:13542:9: ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) )
            	    // InternalKim.g:13542:10: {...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleSimpleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:13542:19: (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) )
            	    // InternalKim.g:13542:20: otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) )
            	    {
            	    otherlv_7=(Token)match(input,31,FOLLOW_18); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_7, grammarAccess.getSimpleObservableSemanticsAccess().getAccordingKeyword_1_2_0());
            	      								
            	    }
            	    otherlv_8=(Token)match(input,32,FOLLOW_19); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_8, grammarAccess.getSimpleObservableSemanticsAccess().getToKeyword_1_2_1());
            	      								
            	    }
            	    // InternalKim.g:13550:9: ( (lv_accordingTo_9_0= rulePropertyId ) )
            	    // InternalKim.g:13551:10: (lv_accordingTo_9_0= rulePropertyId )
            	    {
            	    // InternalKim.g:13551:10: (lv_accordingTo_9_0= rulePropertyId )
            	    // InternalKim.g:13552:11: lv_accordingTo_9_0= rulePropertyId
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getAccordingToPropertyIdParserRuleCall_1_2_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_154);
            	    lv_accordingTo_9_0=rulePropertyId();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getSimpleObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"accordingTo",
            	      												lv_accordingTo_9_0,
            	      												"org.integratedmodelling.kim.Kim.PropertyId");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalKim.g:13575:4: ({...}? => ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) ) )
            	    {
            	    // InternalKim.g:13575:4: ({...}? => ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) ) )
            	    // InternalKim.g:13576:5: {...}? => ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleSimpleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 3)");
            	    }
            	    // InternalKim.g:13576:122: ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) )
            	    // InternalKim.g:13577:6: ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 3);
            	    // InternalKim.g:13580:9: ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) )
            	    // InternalKim.g:13580:10: {...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleSimpleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:13580:19: ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) )
            	    int alt271=2;
            	    int LA271_0 = input.LA(1);

            	    if ( (LA271_0==46) ) {
            	        alt271=1;
            	    }
            	    else if ( (LA271_0==96) ) {
            	        alt271=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 271, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt271) {
            	        case 1 :
            	            // InternalKim.g:13580:20: (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) )
            	            {
            	            // InternalKim.g:13580:20: (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) )
            	            // InternalKim.g:13581:10: otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) )
            	            {
            	            otherlv_10=(Token)match(input,46,FOLLOW_88); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_10, grammarAccess.getSimpleObservableSemanticsAccess().getInKeyword_1_3_0_0());
            	              									
            	            }
            	            // InternalKim.g:13585:10: ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) )
            	            int alt270=2;
            	            switch ( input.LA(1) ) {
            	            case RULE_CAMELCASE_ID:
            	                {
            	                int LA270_1 = input.LA(2);

            	                if ( (synpred514_InternalKim()) ) {
            	                    alt270=1;
            	                }
            	                else if ( (true) ) {
            	                    alt270=2;
            	                }
            	                else {
            	                    if (state.backtracking>0) {state.failed=true; return current;}
            	                    NoViableAltException nvae =
            	                        new NoViableAltException("", 270, 1, input);

            	                    throw nvae;
            	                }
            	                }
            	                break;
            	            case RULE_LOWERCASE_ID:
            	                {
            	                int LA270_2 = input.LA(2);

            	                if ( (LA270_2==EOF||LA270_2==RULE_INT||LA270_2==25||LA270_2==31||LA270_2==36||LA270_2==46||LA270_2==89||(LA270_2>=94 && LA270_2<=96)||LA270_2==99||(LA270_2>=226 && LA270_2<=227)||LA270_2==233) ) {
            	                    alt270=1;
            	                }
            	                else if ( (LA270_2==88||LA270_2==90) ) {
            	                    alt270=2;
            	                }
            	                else {
            	                    if (state.backtracking>0) {state.failed=true; return current;}
            	                    NoViableAltException nvae =
            	                        new NoViableAltException("", 270, 2, input);

            	                    throw nvae;
            	                }
            	                }
            	                break;
            	            case EOF:
            	            case RULE_INT:
            	            case 25:
            	            case 31:
            	            case 34:
            	            case 36:
            	            case 46:
            	            case 89:
            	            case 94:
            	            case 95:
            	            case 96:
            	            case 99:
            	            case 226:
            	            case 227:
            	            case 233:
            	                {
            	                alt270=1;
            	                }
            	                break;
            	            case RULE_UPPERCASE_ID:
            	                {
            	                alt270=2;
            	                }
            	                break;
            	            default:
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 270, 0, input);

            	                throw nvae;
            	            }

            	            switch (alt270) {
            	                case 1 :
            	                    // InternalKim.g:13586:11: ( (lv_unit_11_0= ruleUnit ) )
            	                    {
            	                    // InternalKim.g:13586:11: ( (lv_unit_11_0= ruleUnit ) )
            	                    // InternalKim.g:13587:12: (lv_unit_11_0= ruleUnit )
            	                    {
            	                    // InternalKim.g:13587:12: (lv_unit_11_0= ruleUnit )
            	                    // InternalKim.g:13588:13: lv_unit_11_0= ruleUnit
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      													newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getUnitUnitParserRuleCall_1_3_0_1_0_0());
            	                      												
            	                    }
            	                    pushFollow(FOLLOW_154);
            	                    lv_unit_11_0=ruleUnit();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													if (current==null) {
            	                      														current = createModelElementForParent(grammarAccess.getSimpleObservableSemanticsRule());
            	                      													}
            	                      													set(
            	                      														current,
            	                      														"unit",
            	                      														lv_unit_11_0,
            	                      														"org.integratedmodelling.kim.Kim.Unit");
            	                      													afterParserOrEnumRuleCall();
            	                      												
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalKim.g:13606:11: ( (lv_currency_12_0= ruleCurrency ) )
            	                    {
            	                    // InternalKim.g:13606:11: ( (lv_currency_12_0= ruleCurrency ) )
            	                    // InternalKim.g:13607:12: (lv_currency_12_0= ruleCurrency )
            	                    {
            	                    // InternalKim.g:13607:12: (lv_currency_12_0= ruleCurrency )
            	                    // InternalKim.g:13608:13: lv_currency_12_0= ruleCurrency
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      													newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getCurrencyCurrencyParserRuleCall_1_3_0_1_1_0());
            	                      												
            	                    }
            	                    pushFollow(FOLLOW_154);
            	                    lv_currency_12_0=ruleCurrency();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													if (current==null) {
            	                      														current = createModelElementForParent(grammarAccess.getSimpleObservableSemanticsRule());
            	                      													}
            	                      													set(
            	                      														current,
            	                      														"currency",
            	                      														lv_currency_12_0,
            	                      														"org.integratedmodelling.kim.Kim.Currency");
            	                      													afterParserOrEnumRuleCall();
            	                      												
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:13628:9: (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) )
            	            {
            	            // InternalKim.g:13628:9: (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) )
            	            // InternalKim.g:13629:10: otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) )
            	            {
            	            otherlv_13=(Token)match(input,96,FOLLOW_155); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_13, grammarAccess.getSimpleObservableSemanticsAccess().getPerKeyword_1_3_1_0());
            	              									
            	            }
            	            // InternalKim.g:13633:10: ( (lv_unit_14_0= ruleUnit ) )
            	            // InternalKim.g:13634:11: (lv_unit_14_0= ruleUnit )
            	            {
            	            // InternalKim.g:13634:11: (lv_unit_14_0= ruleUnit )
            	            // InternalKim.g:13635:12: lv_unit_14_0= ruleUnit
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getUnitUnitParserRuleCall_1_3_1_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_154);
            	            lv_unit_14_0=ruleUnit();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getSimpleObservableSemanticsRule());
            	              												}
            	              												set(
            	              													current,
            	              													"unit",
            	              													lv_unit_14_0,
            	              													"org.integratedmodelling.kim.Kim.Unit");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalKim.g:13659:4: ({...}? => ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) ) )
            	    {
            	    // InternalKim.g:13659:4: ({...}? => ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) ) )
            	    // InternalKim.g:13660:5: {...}? => ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 4) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleSimpleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 4)");
            	    }
            	    // InternalKim.g:13660:122: ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) )
            	    // InternalKim.g:13661:6: ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 4);
            	    // InternalKim.g:13664:9: ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) )
            	    // InternalKim.g:13664:10: {...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleSimpleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:13664:19: ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) )
            	    // InternalKim.g:13664:20: ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) )
            	    {
            	    // InternalKim.g:13664:20: ( (lv_from_15_0= ruleNumber ) )
            	    // InternalKim.g:13665:10: (lv_from_15_0= ruleNumber )
            	    {
            	    // InternalKim.g:13665:10: (lv_from_15_0= ruleNumber )
            	    // InternalKim.g:13666:11: lv_from_15_0= ruleNumber
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getFromNumberParserRuleCall_1_4_0_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_18);
            	    lv_from_15_0=ruleNumber();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getSimpleObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"from",
            	      												lv_from_15_0,
            	      												"org.integratedmodelling.kim.Kim.Number");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    otherlv_16=(Token)match(input,32,FOLLOW_33); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_16, grammarAccess.getSimpleObservableSemanticsAccess().getToKeyword_1_4_1());
            	      								
            	    }
            	    // InternalKim.g:13687:9: ( (lv_to_17_0= ruleNumber ) )
            	    // InternalKim.g:13688:10: (lv_to_17_0= ruleNumber )
            	    {
            	    // InternalKim.g:13688:10: (lv_to_17_0= ruleNumber )
            	    // InternalKim.g:13689:11: lv_to_17_0= ruleNumber
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getToNumberParserRuleCall_1_4_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_154);
            	    lv_to_17_0=ruleNumber();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getSimpleObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"to",
            	      												lv_to_17_0,
            	      												"org.integratedmodelling.kim.Kim.Number");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalKim.g:13712:4: ({...}? => ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) ) )
            	    {
            	    // InternalKim.g:13712:4: ({...}? => ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) ) )
            	    // InternalKim.g:13713:5: {...}? => ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 5) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleSimpleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 5)");
            	    }
            	    // InternalKim.g:13713:122: ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) )
            	    // InternalKim.g:13714:6: ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 5);
            	    // InternalKim.g:13717:9: ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) )
            	    // InternalKim.g:13717:10: {...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleSimpleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:13717:19: (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) )
            	    // InternalKim.g:13717:20: otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) )
            	    {
            	    otherlv_18=(Token)match(input,99,FOLLOW_55); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_18, grammarAccess.getSimpleObservableSemanticsAccess().getNamedKeyword_1_5_0());
            	      								
            	    }
            	    // InternalKim.g:13721:9: ( (lv_name_19_0= RULE_LOWERCASE_ID ) )
            	    // InternalKim.g:13722:10: (lv_name_19_0= RULE_LOWERCASE_ID )
            	    {
            	    // InternalKim.g:13722:10: (lv_name_19_0= RULE_LOWERCASE_ID )
            	    // InternalKim.g:13723:11: lv_name_19_0= RULE_LOWERCASE_ID
            	    {
            	    lv_name_19_0=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_154); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_name_19_0, grammarAccess.getSimpleObservableSemanticsAccess().getNameLOWERCASE_IDTerminalRuleCall_1_5_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getSimpleObservableSemanticsRule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"name",
            	      												lv_name_19_0,
            	      												"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop272;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1());

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleSimpleObservableSemantics"


    // $ANTLR start "entryRuleNamedObservableSemantics"
    // InternalKim.g:13759:1: entryRuleNamedObservableSemantics returns [EObject current=null] : iv_ruleNamedObservableSemantics= ruleNamedObservableSemantics EOF ;
    public final EObject entryRuleNamedObservableSemantics() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNamedObservableSemantics = null;


        try {
            // InternalKim.g:13759:65: (iv_ruleNamedObservableSemantics= ruleNamedObservableSemantics EOF )
            // InternalKim.g:13760:2: iv_ruleNamedObservableSemantics= ruleNamedObservableSemantics EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNamedObservableSemanticsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNamedObservableSemantics=ruleNamedObservableSemantics();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNamedObservableSemantics; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNamedObservableSemantics"


    // $ANTLR start "ruleNamedObservableSemantics"
    // InternalKim.g:13766:1: ruleNamedObservableSemantics returns [EObject current=null] : ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) otherlv_1= 'named' ( ( (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID ) ) ) ) ;
    public final EObject ruleNamedObservableSemantics() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_name_2_1=null;
        Token lv_name_2_2=null;
        EObject lv_declaration_0_0 = null;



        	enterRule();

        try {
            // InternalKim.g:13772:2: ( ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) otherlv_1= 'named' ( ( (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID ) ) ) ) )
            // InternalKim.g:13773:2: ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) otherlv_1= 'named' ( ( (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID ) ) ) )
            {
            // InternalKim.g:13773:2: ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) otherlv_1= 'named' ( ( (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID ) ) ) )
            // InternalKim.g:13774:3: ( (lv_declaration_0_0= ruleConceptDeclaration ) ) otherlv_1= 'named' ( ( (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID ) ) )
            {
            // InternalKim.g:13774:3: ( (lv_declaration_0_0= ruleConceptDeclaration ) )
            // InternalKim.g:13775:4: (lv_declaration_0_0= ruleConceptDeclaration )
            {
            // InternalKim.g:13775:4: (lv_declaration_0_0= ruleConceptDeclaration )
            // InternalKim.g:13776:5: lv_declaration_0_0= ruleConceptDeclaration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getNamedObservableSemanticsAccess().getDeclarationConceptDeclarationParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_156);
            lv_declaration_0_0=ruleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getNamedObservableSemanticsRule());
              					}
              					set(
              						current,
              						"declaration",
              						lv_declaration_0_0,
              						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,99,FOLLOW_157); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getNamedObservableSemanticsAccess().getNamedKeyword_1());
              		
            }
            // InternalKim.g:13797:3: ( ( (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID ) ) )
            // InternalKim.g:13798:4: ( (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID ) )
            {
            // InternalKim.g:13798:4: ( (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID ) )
            // InternalKim.g:13799:5: (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID )
            {
            // InternalKim.g:13799:5: (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID )
            int alt273=2;
            int LA273_0 = input.LA(1);

            if ( (LA273_0==RULE_LOWERCASE_ID) ) {
                alt273=1;
            }
            else if ( (LA273_0==RULE_LOWERCASE_DASHID) ) {
                alt273=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 273, 0, input);

                throw nvae;
            }
            switch (alt273) {
                case 1 :
                    // InternalKim.g:13800:6: lv_name_2_1= RULE_LOWERCASE_ID
                    {
                    lv_name_2_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_2_1, grammarAccess.getNamedObservableSemanticsAccess().getNameLOWERCASE_IDTerminalRuleCall_2_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getNamedObservableSemanticsRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"name",
                      							lv_name_2_1,
                      							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                      					
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:13815:6: lv_name_2_2= RULE_LOWERCASE_DASHID
                    {
                    lv_name_2_2=(Token)match(input,RULE_LOWERCASE_DASHID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_2_2, grammarAccess.getNamedObservableSemanticsAccess().getNameLOWERCASE_DASHIDTerminalRuleCall_2_0_1());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getNamedObservableSemanticsRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"name",
                      							lv_name_2_2,
                      							"org.integratedmodelling.kim.Kim.LOWERCASE_DASHID");
                      					
                    }

                    }
                    break;

            }


            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNamedObservableSemantics"


    // $ANTLR start "entryRuleUnitElement"
    // InternalKim.g:13836:1: entryRuleUnitElement returns [EObject current=null] : iv_ruleUnitElement= ruleUnitElement EOF ;
    public final EObject entryRuleUnitElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnitElement = null;


        try {
            // InternalKim.g:13836:52: (iv_ruleUnitElement= ruleUnitElement EOF )
            // InternalKim.g:13837:2: iv_ruleUnitElement= ruleUnitElement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnitElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUnitElement=ruleUnitElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnitElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnitElement"


    // $ANTLR start "ruleUnitElement"
    // InternalKim.g:13843:1: ruleUnitElement returns [EObject current=null] : ( ( ( (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID ) ) ) | ( (lv_num_1_0= ruleNumber ) ) | (otherlv_2= '(' ( (lv_unit_3_0= ruleUnit ) ) otherlv_4= ')' ) ) ;
    public final EObject ruleUnitElement() throws RecognitionException {
        EObject current = null;

        Token lv_id_0_1=null;
        Token lv_id_0_2=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_num_1_0 = null;

        EObject lv_unit_3_0 = null;



        	enterRule();

        try {
            // InternalKim.g:13849:2: ( ( ( ( (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID ) ) ) | ( (lv_num_1_0= ruleNumber ) ) | (otherlv_2= '(' ( (lv_unit_3_0= ruleUnit ) ) otherlv_4= ')' ) ) )
            // InternalKim.g:13850:2: ( ( ( (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID ) ) ) | ( (lv_num_1_0= ruleNumber ) ) | (otherlv_2= '(' ( (lv_unit_3_0= ruleUnit ) ) otherlv_4= ')' ) )
            {
            // InternalKim.g:13850:2: ( ( ( (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID ) ) ) | ( (lv_num_1_0= ruleNumber ) ) | (otherlv_2= '(' ( (lv_unit_3_0= ruleUnit ) ) otherlv_4= ')' ) )
            int alt275=3;
            switch ( input.LA(1) ) {
            case RULE_LOWERCASE_ID:
            case RULE_CAMELCASE_ID:
                {
                alt275=1;
                }
                break;
            case RULE_INT:
            case 226:
            case 227:
                {
                alt275=2;
                }
                break;
            case 34:
                {
                alt275=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 275, 0, input);

                throw nvae;
            }

            switch (alt275) {
                case 1 :
                    // InternalKim.g:13851:3: ( ( (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID ) ) )
                    {
                    // InternalKim.g:13851:3: ( ( (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID ) ) )
                    // InternalKim.g:13852:4: ( (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID ) )
                    {
                    // InternalKim.g:13852:4: ( (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID ) )
                    // InternalKim.g:13853:5: (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID )
                    {
                    // InternalKim.g:13853:5: (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID )
                    int alt274=2;
                    int LA274_0 = input.LA(1);

                    if ( (LA274_0==RULE_CAMELCASE_ID) ) {
                        alt274=1;
                    }
                    else if ( (LA274_0==RULE_LOWERCASE_ID) ) {
                        alt274=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 274, 0, input);

                        throw nvae;
                    }
                    switch (alt274) {
                        case 1 :
                            // InternalKim.g:13854:6: lv_id_0_1= RULE_CAMELCASE_ID
                            {
                            lv_id_0_1=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_0_1, grammarAccess.getUnitElementAccess().getIdCAMELCASE_IDTerminalRuleCall_0_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getUnitElementRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_0_1,
                              							"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:13869:6: lv_id_0_2= RULE_LOWERCASE_ID
                            {
                            lv_id_0_2=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_0_2, grammarAccess.getUnitElementAccess().getIdLOWERCASE_IDTerminalRuleCall_0_0_1());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getUnitElementRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_0_2,
                              							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:13887:3: ( (lv_num_1_0= ruleNumber ) )
                    {
                    // InternalKim.g:13887:3: ( (lv_num_1_0= ruleNumber ) )
                    // InternalKim.g:13888:4: (lv_num_1_0= ruleNumber )
                    {
                    // InternalKim.g:13888:4: (lv_num_1_0= ruleNumber )
                    // InternalKim.g:13889:5: lv_num_1_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getUnitElementAccess().getNumNumberParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_num_1_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getUnitElementRule());
                      					}
                      					set(
                      						current,
                      						"num",
                      						lv_num_1_0,
                      						"org.integratedmodelling.kim.Kim.Number");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:13907:3: (otherlv_2= '(' ( (lv_unit_3_0= ruleUnit ) ) otherlv_4= ')' )
                    {
                    // InternalKim.g:13907:3: (otherlv_2= '(' ( (lv_unit_3_0= ruleUnit ) ) otherlv_4= ')' )
                    // InternalKim.g:13908:4: otherlv_2= '(' ( (lv_unit_3_0= ruleUnit ) ) otherlv_4= ')'
                    {
                    otherlv_2=(Token)match(input,34,FOLLOW_158); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getUnitElementAccess().getLeftParenthesisKeyword_2_0());
                      			
                    }
                    // InternalKim.g:13912:4: ( (lv_unit_3_0= ruleUnit ) )
                    // InternalKim.g:13913:5: (lv_unit_3_0= ruleUnit )
                    {
                    // InternalKim.g:13913:5: (lv_unit_3_0= ruleUnit )
                    // InternalKim.g:13914:6: lv_unit_3_0= ruleUnit
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getUnitElementAccess().getUnitUnitParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_83);
                    lv_unit_3_0=ruleUnit();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getUnitElementRule());
                      						}
                      						set(
                      							current,
                      							"unit",
                      							lv_unit_3_0,
                      							"org.integratedmodelling.kim.Kim.Unit");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,37,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getUnitElementAccess().getRightParenthesisKeyword_2_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnitElement"


    // $ANTLR start "entryRuleREL_OPERATOR"
    // InternalKim.g:13940:1: entryRuleREL_OPERATOR returns [EObject current=null] : iv_ruleREL_OPERATOR= ruleREL_OPERATOR EOF ;
    public final EObject entryRuleREL_OPERATOR() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleREL_OPERATOR = null;


        try {
            // InternalKim.g:13940:53: (iv_ruleREL_OPERATOR= ruleREL_OPERATOR EOF )
            // InternalKim.g:13941:2: iv_ruleREL_OPERATOR= ruleREL_OPERATOR EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getREL_OPERATORRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleREL_OPERATOR=ruleREL_OPERATOR();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleREL_OPERATOR; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleREL_OPERATOR"


    // $ANTLR start "ruleREL_OPERATOR"
    // InternalKim.g:13947:1: ruleREL_OPERATOR returns [EObject current=null] : ( ( (lv_gt_0_0= '>' ) ) | ( (lv_lt_1_0= '<' ) ) | ( (lv_eq_2_0= '=' ) ) | ( (lv_ne_3_0= '!=' ) ) | ( (lv_le_4_0= '<=' ) ) | ( (lv_ge_5_0= '>=' ) ) ) ;
    public final EObject ruleREL_OPERATOR() throws RecognitionException {
        EObject current = null;

        Token lv_gt_0_0=null;
        Token lv_lt_1_0=null;
        Token lv_eq_2_0=null;
        Token lv_ne_3_0=null;
        Token lv_le_4_0=null;
        Token lv_ge_5_0=null;


        	enterRule();

        try {
            // InternalKim.g:13953:2: ( ( ( (lv_gt_0_0= '>' ) ) | ( (lv_lt_1_0= '<' ) ) | ( (lv_eq_2_0= '=' ) ) | ( (lv_ne_3_0= '!=' ) ) | ( (lv_le_4_0= '<=' ) ) | ( (lv_ge_5_0= '>=' ) ) ) )
            // InternalKim.g:13954:2: ( ( (lv_gt_0_0= '>' ) ) | ( (lv_lt_1_0= '<' ) ) | ( (lv_eq_2_0= '=' ) ) | ( (lv_ne_3_0= '!=' ) ) | ( (lv_le_4_0= '<=' ) ) | ( (lv_ge_5_0= '>=' ) ) )
            {
            // InternalKim.g:13954:2: ( ( (lv_gt_0_0= '>' ) ) | ( (lv_lt_1_0= '<' ) ) | ( (lv_eq_2_0= '=' ) ) | ( (lv_ne_3_0= '!=' ) ) | ( (lv_le_4_0= '<=' ) ) | ( (lv_ge_5_0= '>=' ) ) )
            int alt276=6;
            switch ( input.LA(1) ) {
            case 220:
                {
                alt276=1;
                }
                break;
            case 221:
                {
                alt276=2;
                }
                break;
            case 187:
                {
                alt276=3;
                }
                break;
            case 222:
                {
                alt276=4;
                }
                break;
            case 223:
                {
                alt276=5;
                }
                break;
            case 224:
                {
                alt276=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 276, 0, input);

                throw nvae;
            }

            switch (alt276) {
                case 1 :
                    // InternalKim.g:13955:3: ( (lv_gt_0_0= '>' ) )
                    {
                    // InternalKim.g:13955:3: ( (lv_gt_0_0= '>' ) )
                    // InternalKim.g:13956:4: (lv_gt_0_0= '>' )
                    {
                    // InternalKim.g:13956:4: (lv_gt_0_0= '>' )
                    // InternalKim.g:13957:5: lv_gt_0_0= '>'
                    {
                    lv_gt_0_0=(Token)match(input,220,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_gt_0_0, grammarAccess.getREL_OPERATORAccess().getGtGreaterThanSignKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getREL_OPERATORRule());
                      					}
                      					setWithLastConsumed(current, "gt", true, ">");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:13970:3: ( (lv_lt_1_0= '<' ) )
                    {
                    // InternalKim.g:13970:3: ( (lv_lt_1_0= '<' ) )
                    // InternalKim.g:13971:4: (lv_lt_1_0= '<' )
                    {
                    // InternalKim.g:13971:4: (lv_lt_1_0= '<' )
                    // InternalKim.g:13972:5: lv_lt_1_0= '<'
                    {
                    lv_lt_1_0=(Token)match(input,221,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_lt_1_0, grammarAccess.getREL_OPERATORAccess().getLtLessThanSignKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getREL_OPERATORRule());
                      					}
                      					setWithLastConsumed(current, "lt", true, "<");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:13985:3: ( (lv_eq_2_0= '=' ) )
                    {
                    // InternalKim.g:13985:3: ( (lv_eq_2_0= '=' ) )
                    // InternalKim.g:13986:4: (lv_eq_2_0= '=' )
                    {
                    // InternalKim.g:13986:4: (lv_eq_2_0= '=' )
                    // InternalKim.g:13987:5: lv_eq_2_0= '='
                    {
                    lv_eq_2_0=(Token)match(input,187,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_eq_2_0, grammarAccess.getREL_OPERATORAccess().getEqEqualsSignKeyword_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getREL_OPERATORRule());
                      					}
                      					setWithLastConsumed(current, "eq", true, "=");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:14000:3: ( (lv_ne_3_0= '!=' ) )
                    {
                    // InternalKim.g:14000:3: ( (lv_ne_3_0= '!=' ) )
                    // InternalKim.g:14001:4: (lv_ne_3_0= '!=' )
                    {
                    // InternalKim.g:14001:4: (lv_ne_3_0= '!=' )
                    // InternalKim.g:14002:5: lv_ne_3_0= '!='
                    {
                    lv_ne_3_0=(Token)match(input,222,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_ne_3_0, grammarAccess.getREL_OPERATORAccess().getNeExclamationMarkEqualsSignKeyword_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getREL_OPERATORRule());
                      					}
                      					setWithLastConsumed(current, "ne", true, "!=");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:14015:3: ( (lv_le_4_0= '<=' ) )
                    {
                    // InternalKim.g:14015:3: ( (lv_le_4_0= '<=' ) )
                    // InternalKim.g:14016:4: (lv_le_4_0= '<=' )
                    {
                    // InternalKim.g:14016:4: (lv_le_4_0= '<=' )
                    // InternalKim.g:14017:5: lv_le_4_0= '<='
                    {
                    lv_le_4_0=(Token)match(input,223,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_le_4_0, grammarAccess.getREL_OPERATORAccess().getLeLessThanSignEqualsSignKeyword_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getREL_OPERATORRule());
                      					}
                      					setWithLastConsumed(current, "le", true, "<=");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:14030:3: ( (lv_ge_5_0= '>=' ) )
                    {
                    // InternalKim.g:14030:3: ( (lv_ge_5_0= '>=' ) )
                    // InternalKim.g:14031:4: (lv_ge_5_0= '>=' )
                    {
                    // InternalKim.g:14031:4: (lv_ge_5_0= '>=' )
                    // InternalKim.g:14032:5: lv_ge_5_0= '>='
                    {
                    lv_ge_5_0=(Token)match(input,224,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_ge_5_0, grammarAccess.getREL_OPERATORAccess().getGeGreaterThanSignEqualsSignKeyword_5_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getREL_OPERATORRule());
                      					}
                      					setWithLastConsumed(current, "ge", true, ">=");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleREL_OPERATOR"


    // $ANTLR start "entryRuleUnit"
    // InternalKim.g:14048:1: entryRuleUnit returns [EObject current=null] : iv_ruleUnit= ruleUnit EOF ;
    public final EObject entryRuleUnit() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnit = null;


        try {
            // InternalKim.g:14048:45: (iv_ruleUnit= ruleUnit EOF )
            // InternalKim.g:14049:2: iv_ruleUnit= ruleUnit EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnitRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUnit=ruleUnit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnit; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnit"


    // $ANTLR start "ruleUnit"
    // InternalKim.g:14055:1: ruleUnit returns [EObject current=null] : ( () ( (lv_root_1_0= ruleUnitElement ) )? ( ( ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_2_0= ruleUnitOp ) ) ) ( (lv_units_3_0= ruleUnitElement ) ) )* ) ;
    public final EObject ruleUnit() throws RecognitionException {
        EObject current = null;

        EObject lv_root_1_0 = null;

        Enumerator lv_connectors_2_0 = null;

        EObject lv_units_3_0 = null;



        	enterRule();

        try {
            // InternalKim.g:14061:2: ( ( () ( (lv_root_1_0= ruleUnitElement ) )? ( ( ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_2_0= ruleUnitOp ) ) ) ( (lv_units_3_0= ruleUnitElement ) ) )* ) )
            // InternalKim.g:14062:2: ( () ( (lv_root_1_0= ruleUnitElement ) )? ( ( ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_2_0= ruleUnitOp ) ) ) ( (lv_units_3_0= ruleUnitElement ) ) )* )
            {
            // InternalKim.g:14062:2: ( () ( (lv_root_1_0= ruleUnitElement ) )? ( ( ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_2_0= ruleUnitOp ) ) ) ( (lv_units_3_0= ruleUnitElement ) ) )* )
            // InternalKim.g:14063:3: () ( (lv_root_1_0= ruleUnitElement ) )? ( ( ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_2_0= ruleUnitOp ) ) ) ( (lv_units_3_0= ruleUnitElement ) ) )*
            {
            // InternalKim.g:14063:3: ()
            // InternalKim.g:14064:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getUnitAccess().getUnitAction_0(),
              					current);
              			
            }

            }

            // InternalKim.g:14073:3: ( (lv_root_1_0= ruleUnitElement ) )?
            int alt277=2;
            alt277 = dfa277.predict(input);
            switch (alt277) {
                case 1 :
                    // InternalKim.g:14074:4: (lv_root_1_0= ruleUnitElement )
                    {
                    // InternalKim.g:14074:4: (lv_root_1_0= ruleUnitElement )
                    // InternalKim.g:14075:5: lv_root_1_0= ruleUnitElement
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getUnitAccess().getRootUnitElementParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_159);
                    lv_root_1_0=ruleUnitElement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getUnitRule());
                      					}
                      					set(
                      						current,
                      						"root",
                      						lv_root_1_0,
                      						"org.integratedmodelling.kim.Kim.UnitElement");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:14092:3: ( ( ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_2_0= ruleUnitOp ) ) ) ( (lv_units_3_0= ruleUnitElement ) ) )*
            loop278:
            do {
                int alt278=2;
                int LA278_0 = input.LA(1);

                if ( (LA278_0==36||LA278_0==89||LA278_0==233) ) {
                    alt278=1;
                }


                switch (alt278) {
            	case 1 :
            	    // InternalKim.g:14093:4: ( ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_2_0= ruleUnitOp ) ) ) ( (lv_units_3_0= ruleUnitElement ) )
            	    {
            	    // InternalKim.g:14093:4: ( ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_2_0= ruleUnitOp ) ) )
            	    // InternalKim.g:14094:5: ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_2_0= ruleUnitOp ) )
            	    {
            	    // InternalKim.g:14100:5: ( (lv_connectors_2_0= ruleUnitOp ) )
            	    // InternalKim.g:14101:6: (lv_connectors_2_0= ruleUnitOp )
            	    {
            	    // InternalKim.g:14101:6: (lv_connectors_2_0= ruleUnitOp )
            	    // InternalKim.g:14102:7: lv_connectors_2_0= ruleUnitOp
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getUnitAccess().getConnectorsUnitOpEnumRuleCall_2_0_0_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_160);
            	    lv_connectors_2_0=ruleUnitOp();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getUnitRule());
            	      							}
            	      							add(
            	      								current,
            	      								"connectors",
            	      								lv_connectors_2_0,
            	      								"org.integratedmodelling.kim.Kim.UnitOp");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }

            	    // InternalKim.g:14120:4: ( (lv_units_3_0= ruleUnitElement ) )
            	    // InternalKim.g:14121:5: (lv_units_3_0= ruleUnitElement )
            	    {
            	    // InternalKim.g:14121:5: (lv_units_3_0= ruleUnitElement )
            	    // InternalKim.g:14122:6: lv_units_3_0= ruleUnitElement
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getUnitAccess().getUnitsUnitElementParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_159);
            	    lv_units_3_0=ruleUnitElement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getUnitRule());
            	      						}
            	      						add(
            	      							current,
            	      							"units",
            	      							lv_units_3_0,
            	      							"org.integratedmodelling.kim.Kim.UnitElement");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop278;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnit"


    // $ANTLR start "entryRuleCurrency"
    // InternalKim.g:14144:1: entryRuleCurrency returns [EObject current=null] : iv_ruleCurrency= ruleCurrency EOF ;
    public final EObject entryRuleCurrency() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCurrency = null;


        try {
            // InternalKim.g:14144:49: (iv_ruleCurrency= ruleCurrency EOF )
            // InternalKim.g:14145:2: iv_ruleCurrency= ruleCurrency EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCurrencyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCurrency=ruleCurrency();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCurrency; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCurrency"


    // $ANTLR start "ruleCurrency"
    // InternalKim.g:14151:1: ruleCurrency returns [EObject current=null] : ( ( ( (lv_id_0_0= RULE_UPPERCASE_ID ) ) (otherlv_1= '@' ( (lv_year_2_0= RULE_INT ) ) ) ) | ( ( (lv_concept_3_1= RULE_CAMELCASE_ID | lv_concept_3_2= ruleNamespaceId ) ) ) ) ;
    public final EObject ruleCurrency() throws RecognitionException {
        EObject current = null;

        Token lv_id_0_0=null;
        Token otherlv_1=null;
        Token lv_year_2_0=null;
        Token lv_concept_3_1=null;
        AntlrDatatypeRuleToken lv_concept_3_2 = null;



        	enterRule();

        try {
            // InternalKim.g:14157:2: ( ( ( ( (lv_id_0_0= RULE_UPPERCASE_ID ) ) (otherlv_1= '@' ( (lv_year_2_0= RULE_INT ) ) ) ) | ( ( (lv_concept_3_1= RULE_CAMELCASE_ID | lv_concept_3_2= ruleNamespaceId ) ) ) ) )
            // InternalKim.g:14158:2: ( ( ( (lv_id_0_0= RULE_UPPERCASE_ID ) ) (otherlv_1= '@' ( (lv_year_2_0= RULE_INT ) ) ) ) | ( ( (lv_concept_3_1= RULE_CAMELCASE_ID | lv_concept_3_2= ruleNamespaceId ) ) ) )
            {
            // InternalKim.g:14158:2: ( ( ( (lv_id_0_0= RULE_UPPERCASE_ID ) ) (otherlv_1= '@' ( (lv_year_2_0= RULE_INT ) ) ) ) | ( ( (lv_concept_3_1= RULE_CAMELCASE_ID | lv_concept_3_2= ruleNamespaceId ) ) ) )
            int alt280=2;
            int LA280_0 = input.LA(1);

            if ( (LA280_0==RULE_UPPERCASE_ID) ) {
                alt280=1;
            }
            else if ( (LA280_0==RULE_LOWERCASE_ID||LA280_0==RULE_CAMELCASE_ID) ) {
                alt280=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 280, 0, input);

                throw nvae;
            }
            switch (alt280) {
                case 1 :
                    // InternalKim.g:14159:3: ( ( (lv_id_0_0= RULE_UPPERCASE_ID ) ) (otherlv_1= '@' ( (lv_year_2_0= RULE_INT ) ) ) )
                    {
                    // InternalKim.g:14159:3: ( ( (lv_id_0_0= RULE_UPPERCASE_ID ) ) (otherlv_1= '@' ( (lv_year_2_0= RULE_INT ) ) ) )
                    // InternalKim.g:14160:4: ( (lv_id_0_0= RULE_UPPERCASE_ID ) ) (otherlv_1= '@' ( (lv_year_2_0= RULE_INT ) ) )
                    {
                    // InternalKim.g:14160:4: ( (lv_id_0_0= RULE_UPPERCASE_ID ) )
                    // InternalKim.g:14161:5: (lv_id_0_0= RULE_UPPERCASE_ID )
                    {
                    // InternalKim.g:14161:5: (lv_id_0_0= RULE_UPPERCASE_ID )
                    // InternalKim.g:14162:6: lv_id_0_0= RULE_UPPERCASE_ID
                    {
                    lv_id_0_0=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_161); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_id_0_0, grammarAccess.getCurrencyAccess().getIdUPPERCASE_IDTerminalRuleCall_0_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getCurrencyRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"id",
                      							lv_id_0_0,
                      							"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                      					
                    }

                    }


                    }

                    // InternalKim.g:14178:4: (otherlv_1= '@' ( (lv_year_2_0= RULE_INT ) ) )
                    // InternalKim.g:14179:5: otherlv_1= '@' ( (lv_year_2_0= RULE_INT ) )
                    {
                    otherlv_1=(Token)match(input,225,FOLLOW_68); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getCurrencyAccess().getCommercialAtKeyword_0_1_0());
                      				
                    }
                    // InternalKim.g:14183:5: ( (lv_year_2_0= RULE_INT ) )
                    // InternalKim.g:14184:6: (lv_year_2_0= RULE_INT )
                    {
                    // InternalKim.g:14184:6: (lv_year_2_0= RULE_INT )
                    // InternalKim.g:14185:7: lv_year_2_0= RULE_INT
                    {
                    lv_year_2_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_year_2_0, grammarAccess.getCurrencyAccess().getYearINTTerminalRuleCall_0_1_1_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getCurrencyRule());
                      							}
                      							setWithLastConsumed(
                      								current,
                      								"year",
                      								lv_year_2_0,
                      								"org.eclipse.xtext.common.Terminals.INT");
                      						
                    }

                    }


                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:14204:3: ( ( (lv_concept_3_1= RULE_CAMELCASE_ID | lv_concept_3_2= ruleNamespaceId ) ) )
                    {
                    // InternalKim.g:14204:3: ( ( (lv_concept_3_1= RULE_CAMELCASE_ID | lv_concept_3_2= ruleNamespaceId ) ) )
                    // InternalKim.g:14205:4: ( (lv_concept_3_1= RULE_CAMELCASE_ID | lv_concept_3_2= ruleNamespaceId ) )
                    {
                    // InternalKim.g:14205:4: ( (lv_concept_3_1= RULE_CAMELCASE_ID | lv_concept_3_2= ruleNamespaceId ) )
                    // InternalKim.g:14206:5: (lv_concept_3_1= RULE_CAMELCASE_ID | lv_concept_3_2= ruleNamespaceId )
                    {
                    // InternalKim.g:14206:5: (lv_concept_3_1= RULE_CAMELCASE_ID | lv_concept_3_2= ruleNamespaceId )
                    int alt279=2;
                    int LA279_0 = input.LA(1);

                    if ( (LA279_0==RULE_CAMELCASE_ID) ) {
                        alt279=1;
                    }
                    else if ( (LA279_0==RULE_LOWERCASE_ID) ) {
                        alt279=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 279, 0, input);

                        throw nvae;
                    }
                    switch (alt279) {
                        case 1 :
                            // InternalKim.g:14207:6: lv_concept_3_1= RULE_CAMELCASE_ID
                            {
                            lv_concept_3_1=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_concept_3_1, grammarAccess.getCurrencyAccess().getConceptCAMELCASE_IDTerminalRuleCall_1_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getCurrencyRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"concept",
                              							lv_concept_3_1,
                              							"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:14222:6: lv_concept_3_2= ruleNamespaceId
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getCurrencyAccess().getConceptNamespaceIdParserRuleCall_1_0_1());
                              					
                            }
                            pushFollow(FOLLOW_2);
                            lv_concept_3_2=ruleNamespaceId();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getCurrencyRule());
                              						}
                              						set(
                              							current,
                              							"concept",
                              							lv_concept_3_2,
                              							"org.integratedmodelling.kim.Kim.NamespaceId");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCurrency"


    // $ANTLR start "entryRuleNumber"
    // InternalKim.g:14244:1: entryRuleNumber returns [EObject current=null] : iv_ruleNumber= ruleNumber EOF ;
    public final EObject entryRuleNumber() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNumber = null;


        try {
            // InternalKim.g:14244:47: (iv_ruleNumber= ruleNumber EOF )
            // InternalKim.g:14245:2: iv_ruleNumber= ruleNumber EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNumberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNumber=ruleNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNumber; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNumber"


    // $ANTLR start "ruleNumber"
    // InternalKim.g:14251:1: ruleNumber returns [EObject current=null] : ( (otherlv_0= '+' | ( (lv_negative_1_0= '-' ) ) )? ( ( ( RULE_INT ) )=> (lv_real_2_0= RULE_INT ) ) ( ( ( ( ( '.' ) ) ( ( RULE_INT ) ) ) )=> ( ( (lv_decimal_3_0= '.' ) ) ( (lv_decimalPart_4_0= RULE_INT ) ) ) )? ( ( ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) ) )=> ( ( ( (lv_exponential_5_1= 'e' | lv_exponential_5_2= 'E' ) ) ) (otherlv_6= '+' | ( (lv_expNegative_7_0= '-' ) ) )? ( (lv_exp_8_0= RULE_INT ) ) ) )? ) ;
    public final EObject ruleNumber() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_negative_1_0=null;
        Token lv_real_2_0=null;
        Token lv_decimal_3_0=null;
        Token lv_decimalPart_4_0=null;
        Token lv_exponential_5_1=null;
        Token lv_exponential_5_2=null;
        Token otherlv_6=null;
        Token lv_expNegative_7_0=null;
        Token lv_exp_8_0=null;


        	enterRule();

        try {
            // InternalKim.g:14257:2: ( ( (otherlv_0= '+' | ( (lv_negative_1_0= '-' ) ) )? ( ( ( RULE_INT ) )=> (lv_real_2_0= RULE_INT ) ) ( ( ( ( ( '.' ) ) ( ( RULE_INT ) ) ) )=> ( ( (lv_decimal_3_0= '.' ) ) ( (lv_decimalPart_4_0= RULE_INT ) ) ) )? ( ( ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) ) )=> ( ( ( (lv_exponential_5_1= 'e' | lv_exponential_5_2= 'E' ) ) ) (otherlv_6= '+' | ( (lv_expNegative_7_0= '-' ) ) )? ( (lv_exp_8_0= RULE_INT ) ) ) )? ) )
            // InternalKim.g:14258:2: ( (otherlv_0= '+' | ( (lv_negative_1_0= '-' ) ) )? ( ( ( RULE_INT ) )=> (lv_real_2_0= RULE_INT ) ) ( ( ( ( ( '.' ) ) ( ( RULE_INT ) ) ) )=> ( ( (lv_decimal_3_0= '.' ) ) ( (lv_decimalPart_4_0= RULE_INT ) ) ) )? ( ( ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) ) )=> ( ( ( (lv_exponential_5_1= 'e' | lv_exponential_5_2= 'E' ) ) ) (otherlv_6= '+' | ( (lv_expNegative_7_0= '-' ) ) )? ( (lv_exp_8_0= RULE_INT ) ) ) )? )
            {
            // InternalKim.g:14258:2: ( (otherlv_0= '+' | ( (lv_negative_1_0= '-' ) ) )? ( ( ( RULE_INT ) )=> (lv_real_2_0= RULE_INT ) ) ( ( ( ( ( '.' ) ) ( ( RULE_INT ) ) ) )=> ( ( (lv_decimal_3_0= '.' ) ) ( (lv_decimalPart_4_0= RULE_INT ) ) ) )? ( ( ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) ) )=> ( ( ( (lv_exponential_5_1= 'e' | lv_exponential_5_2= 'E' ) ) ) (otherlv_6= '+' | ( (lv_expNegative_7_0= '-' ) ) )? ( (lv_exp_8_0= RULE_INT ) ) ) )? )
            // InternalKim.g:14259:3: (otherlv_0= '+' | ( (lv_negative_1_0= '-' ) ) )? ( ( ( RULE_INT ) )=> (lv_real_2_0= RULE_INT ) ) ( ( ( ( ( '.' ) ) ( ( RULE_INT ) ) ) )=> ( ( (lv_decimal_3_0= '.' ) ) ( (lv_decimalPart_4_0= RULE_INT ) ) ) )? ( ( ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) ) )=> ( ( ( (lv_exponential_5_1= 'e' | lv_exponential_5_2= 'E' ) ) ) (otherlv_6= '+' | ( (lv_expNegative_7_0= '-' ) ) )? ( (lv_exp_8_0= RULE_INT ) ) ) )?
            {
            // InternalKim.g:14259:3: (otherlv_0= '+' | ( (lv_negative_1_0= '-' ) ) )?
            int alt281=3;
            int LA281_0 = input.LA(1);

            if ( (LA281_0==226) ) {
                alt281=1;
            }
            else if ( (LA281_0==227) ) {
                alt281=2;
            }
            switch (alt281) {
                case 1 :
                    // InternalKim.g:14260:4: otherlv_0= '+'
                    {
                    otherlv_0=(Token)match(input,226,FOLLOW_68); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getNumberAccess().getPlusSignKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:14265:4: ( (lv_negative_1_0= '-' ) )
                    {
                    // InternalKim.g:14265:4: ( (lv_negative_1_0= '-' ) )
                    // InternalKim.g:14266:5: (lv_negative_1_0= '-' )
                    {
                    // InternalKim.g:14266:5: (lv_negative_1_0= '-' )
                    // InternalKim.g:14267:6: lv_negative_1_0= '-'
                    {
                    lv_negative_1_0=(Token)match(input,227,FOLLOW_68); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_negative_1_0, grammarAccess.getNumberAccess().getNegativeHyphenMinusKeyword_0_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getNumberRule());
                      						}
                      						setWithLastConsumed(current, "negative", true, "-");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalKim.g:14280:3: ( ( ( RULE_INT ) )=> (lv_real_2_0= RULE_INT ) )
            // InternalKim.g:14281:4: ( ( RULE_INT ) )=> (lv_real_2_0= RULE_INT )
            {
            // InternalKim.g:14285:4: (lv_real_2_0= RULE_INT )
            // InternalKim.g:14286:5: lv_real_2_0= RULE_INT
            {
            lv_real_2_0=(Token)match(input,RULE_INT,FOLLOW_162); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_real_2_0, grammarAccess.getNumberAccess().getRealINTTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getNumberRule());
              					}
              					setWithLastConsumed(
              						current,
              						"real",
              						lv_real_2_0,
              						"org.eclipse.xtext.common.Terminals.INT");
              				
            }

            }


            }

            // InternalKim.g:14302:3: ( ( ( ( ( '.' ) ) ( ( RULE_INT ) ) ) )=> ( ( (lv_decimal_3_0= '.' ) ) ( (lv_decimalPart_4_0= RULE_INT ) ) ) )?
            int alt282=2;
            int LA282_0 = input.LA(1);

            if ( (LA282_0==90) && (synpred536_InternalKim())) {
                alt282=1;
            }
            switch (alt282) {
                case 1 :
                    // InternalKim.g:14303:4: ( ( ( ( '.' ) ) ( ( RULE_INT ) ) ) )=> ( ( (lv_decimal_3_0= '.' ) ) ( (lv_decimalPart_4_0= RULE_INT ) ) )
                    {
                    // InternalKim.g:14316:4: ( ( (lv_decimal_3_0= '.' ) ) ( (lv_decimalPart_4_0= RULE_INT ) ) )
                    // InternalKim.g:14317:5: ( (lv_decimal_3_0= '.' ) ) ( (lv_decimalPart_4_0= RULE_INT ) )
                    {
                    // InternalKim.g:14317:5: ( (lv_decimal_3_0= '.' ) )
                    // InternalKim.g:14318:6: (lv_decimal_3_0= '.' )
                    {
                    // InternalKim.g:14318:6: (lv_decimal_3_0= '.' )
                    // InternalKim.g:14319:7: lv_decimal_3_0= '.'
                    {
                    lv_decimal_3_0=(Token)match(input,90,FOLLOW_68); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_decimal_3_0, grammarAccess.getNumberAccess().getDecimalFullStopKeyword_2_0_0_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getNumberRule());
                      							}
                      							setWithLastConsumed(current, "decimal", true, ".");
                      						
                    }

                    }


                    }

                    // InternalKim.g:14331:5: ( (lv_decimalPart_4_0= RULE_INT ) )
                    // InternalKim.g:14332:6: (lv_decimalPart_4_0= RULE_INT )
                    {
                    // InternalKim.g:14332:6: (lv_decimalPart_4_0= RULE_INT )
                    // InternalKim.g:14333:7: lv_decimalPart_4_0= RULE_INT
                    {
                    lv_decimalPart_4_0=(Token)match(input,RULE_INT,FOLLOW_163); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_decimalPart_4_0, grammarAccess.getNumberAccess().getDecimalPartINTTerminalRuleCall_2_0_1_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getNumberRule());
                      							}
                      							setWithLastConsumed(
                      								current,
                      								"decimalPart",
                      								lv_decimalPart_4_0,
                      								"org.eclipse.xtext.common.Terminals.INT");
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            // InternalKim.g:14351:3: ( ( ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) ) )=> ( ( ( (lv_exponential_5_1= 'e' | lv_exponential_5_2= 'E' ) ) ) (otherlv_6= '+' | ( (lv_expNegative_7_0= '-' ) ) )? ( (lv_exp_8_0= RULE_INT ) ) ) )?
            int alt285=2;
            int LA285_0 = input.LA(1);

            if ( (LA285_0==228) && (synpred540_InternalKim())) {
                alt285=1;
            }
            else if ( (LA285_0==229) && (synpred540_InternalKim())) {
                alt285=1;
            }
            switch (alt285) {
                case 1 :
                    // InternalKim.g:14352:4: ( ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) ) )=> ( ( ( (lv_exponential_5_1= 'e' | lv_exponential_5_2= 'E' ) ) ) (otherlv_6= '+' | ( (lv_expNegative_7_0= '-' ) ) )? ( (lv_exp_8_0= RULE_INT ) ) )
                    {
                    // InternalKim.g:14378:4: ( ( ( (lv_exponential_5_1= 'e' | lv_exponential_5_2= 'E' ) ) ) (otherlv_6= '+' | ( (lv_expNegative_7_0= '-' ) ) )? ( (lv_exp_8_0= RULE_INT ) ) )
                    // InternalKim.g:14379:5: ( ( (lv_exponential_5_1= 'e' | lv_exponential_5_2= 'E' ) ) ) (otherlv_6= '+' | ( (lv_expNegative_7_0= '-' ) ) )? ( (lv_exp_8_0= RULE_INT ) )
                    {
                    // InternalKim.g:14379:5: ( ( (lv_exponential_5_1= 'e' | lv_exponential_5_2= 'E' ) ) )
                    // InternalKim.g:14380:6: ( (lv_exponential_5_1= 'e' | lv_exponential_5_2= 'E' ) )
                    {
                    // InternalKim.g:14380:6: ( (lv_exponential_5_1= 'e' | lv_exponential_5_2= 'E' ) )
                    // InternalKim.g:14381:7: (lv_exponential_5_1= 'e' | lv_exponential_5_2= 'E' )
                    {
                    // InternalKim.g:14381:7: (lv_exponential_5_1= 'e' | lv_exponential_5_2= 'E' )
                    int alt283=2;
                    int LA283_0 = input.LA(1);

                    if ( (LA283_0==228) ) {
                        alt283=1;
                    }
                    else if ( (LA283_0==229) ) {
                        alt283=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 283, 0, input);

                        throw nvae;
                    }
                    switch (alt283) {
                        case 1 :
                            // InternalKim.g:14382:8: lv_exponential_5_1= 'e'
                            {
                            lv_exponential_5_1=(Token)match(input,228,FOLLOW_33); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_exponential_5_1, grammarAccess.getNumberAccess().getExponentialEKeyword_3_0_0_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getNumberRule());
                              								}
                              								setWithLastConsumed(current, "exponential", true, null);
                              							
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:14393:8: lv_exponential_5_2= 'E'
                            {
                            lv_exponential_5_2=(Token)match(input,229,FOLLOW_33); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_exponential_5_2, grammarAccess.getNumberAccess().getExponentialEKeyword_3_0_0_0_1());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getNumberRule());
                              								}
                              								setWithLastConsumed(current, "exponential", true, null);
                              							
                            }

                            }
                            break;

                    }


                    }


                    }

                    // InternalKim.g:14406:5: (otherlv_6= '+' | ( (lv_expNegative_7_0= '-' ) ) )?
                    int alt284=3;
                    int LA284_0 = input.LA(1);

                    if ( (LA284_0==226) ) {
                        alt284=1;
                    }
                    else if ( (LA284_0==227) ) {
                        alt284=2;
                    }
                    switch (alt284) {
                        case 1 :
                            // InternalKim.g:14407:6: otherlv_6= '+'
                            {
                            otherlv_6=(Token)match(input,226,FOLLOW_68); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_6, grammarAccess.getNumberAccess().getPlusSignKeyword_3_0_1_0());
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:14412:6: ( (lv_expNegative_7_0= '-' ) )
                            {
                            // InternalKim.g:14412:6: ( (lv_expNegative_7_0= '-' ) )
                            // InternalKim.g:14413:7: (lv_expNegative_7_0= '-' )
                            {
                            // InternalKim.g:14413:7: (lv_expNegative_7_0= '-' )
                            // InternalKim.g:14414:8: lv_expNegative_7_0= '-'
                            {
                            lv_expNegative_7_0=(Token)match(input,227,FOLLOW_68); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_expNegative_7_0, grammarAccess.getNumberAccess().getExpNegativeHyphenMinusKeyword_3_0_1_1_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getNumberRule());
                              								}
                              								setWithLastConsumed(current, "expNegative", true, "-");
                              							
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:14427:5: ( (lv_exp_8_0= RULE_INT ) )
                    // InternalKim.g:14428:6: (lv_exp_8_0= RULE_INT )
                    {
                    // InternalKim.g:14428:6: (lv_exp_8_0= RULE_INT )
                    // InternalKim.g:14429:7: lv_exp_8_0= RULE_INT
                    {
                    lv_exp_8_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_exp_8_0, grammarAccess.getNumberAccess().getExpINTTerminalRuleCall_3_0_2_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getNumberRule());
                      							}
                      							setWithLastConsumed(
                      								current,
                      								"exp",
                      								lv_exp_8_0,
                      								"org.eclipse.xtext.common.Terminals.INT");
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNumber"


    // $ANTLR start "entryRulePathName"
    // InternalKim.g:14451:1: entryRulePathName returns [String current=null] : iv_rulePathName= rulePathName EOF ;
    public final String entryRulePathName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulePathName = null;


        try {
            // InternalKim.g:14451:48: (iv_rulePathName= rulePathName EOF )
            // InternalKim.g:14452:2: iv_rulePathName= rulePathName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPathNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePathName=rulePathName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePathName.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePathName"


    // $ANTLR start "rulePathName"
    // InternalKim.g:14458:1: rulePathName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID (kw= '.' this_LOWERCASE_ID_2= RULE_LOWERCASE_ID )* ) ;
    public final AntlrDatatypeRuleToken rulePathName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_LOWERCASE_ID_0=null;
        Token kw=null;
        Token this_LOWERCASE_ID_2=null;


        	enterRule();

        try {
            // InternalKim.g:14464:2: ( (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID (kw= '.' this_LOWERCASE_ID_2= RULE_LOWERCASE_ID )* ) )
            // InternalKim.g:14465:2: (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID (kw= '.' this_LOWERCASE_ID_2= RULE_LOWERCASE_ID )* )
            {
            // InternalKim.g:14465:2: (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID (kw= '.' this_LOWERCASE_ID_2= RULE_LOWERCASE_ID )* )
            // InternalKim.g:14466:3: this_LOWERCASE_ID_0= RULE_LOWERCASE_ID (kw= '.' this_LOWERCASE_ID_2= RULE_LOWERCASE_ID )*
            {
            this_LOWERCASE_ID_0=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_164); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_LOWERCASE_ID_0);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_LOWERCASE_ID_0, grammarAccess.getPathNameAccess().getLOWERCASE_IDTerminalRuleCall_0());
              		
            }
            // InternalKim.g:14473:3: (kw= '.' this_LOWERCASE_ID_2= RULE_LOWERCASE_ID )*
            loop286:
            do {
                int alt286=2;
                int LA286_0 = input.LA(1);

                if ( (LA286_0==90) ) {
                    alt286=1;
                }


                switch (alt286) {
            	case 1 :
            	    // InternalKim.g:14474:4: kw= '.' this_LOWERCASE_ID_2= RULE_LOWERCASE_ID
            	    {
            	    kw=(Token)match(input,90,FOLLOW_55); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(kw);
            	      				newLeafNode(kw, grammarAccess.getPathNameAccess().getFullStopKeyword_1_0());
            	      			
            	    }
            	    this_LOWERCASE_ID_2=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_164); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(this_LOWERCASE_ID_2);
            	      			
            	    }
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(this_LOWERCASE_ID_2, grammarAccess.getPathNameAccess().getLOWERCASE_IDTerminalRuleCall_1_1());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop286;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePathName"


    // $ANTLR start "entryRulePath"
    // InternalKim.g:14491:1: entryRulePath returns [String current=null] : iv_rulePath= rulePath EOF ;
    public final String entryRulePath() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulePath = null;


        try {
            // InternalKim.g:14491:44: (iv_rulePath= rulePath EOF )
            // InternalKim.g:14492:2: iv_rulePath= rulePath EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPathRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePath=rulePath();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePath.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePath"


    // $ANTLR start "rulePath"
    // InternalKim.g:14498:1: rulePath returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID ( (kw= '.' | kw= '/' ) this_LOWERCASE_ID_3= RULE_LOWERCASE_ID )* ) ;
    public final AntlrDatatypeRuleToken rulePath() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_LOWERCASE_ID_0=null;
        Token kw=null;
        Token this_LOWERCASE_ID_3=null;


        	enterRule();

        try {
            // InternalKim.g:14504:2: ( (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID ( (kw= '.' | kw= '/' ) this_LOWERCASE_ID_3= RULE_LOWERCASE_ID )* ) )
            // InternalKim.g:14505:2: (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID ( (kw= '.' | kw= '/' ) this_LOWERCASE_ID_3= RULE_LOWERCASE_ID )* )
            {
            // InternalKim.g:14505:2: (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID ( (kw= '.' | kw= '/' ) this_LOWERCASE_ID_3= RULE_LOWERCASE_ID )* )
            // InternalKim.g:14506:3: this_LOWERCASE_ID_0= RULE_LOWERCASE_ID ( (kw= '.' | kw= '/' ) this_LOWERCASE_ID_3= RULE_LOWERCASE_ID )*
            {
            this_LOWERCASE_ID_0=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_165); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_LOWERCASE_ID_0);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_LOWERCASE_ID_0, grammarAccess.getPathAccess().getLOWERCASE_IDTerminalRuleCall_0());
              		
            }
            // InternalKim.g:14513:3: ( (kw= '.' | kw= '/' ) this_LOWERCASE_ID_3= RULE_LOWERCASE_ID )*
            loop288:
            do {
                int alt288=2;
                int LA288_0 = input.LA(1);

                if ( ((LA288_0>=89 && LA288_0<=90)) ) {
                    alt288=1;
                }


                switch (alt288) {
            	case 1 :
            	    // InternalKim.g:14514:4: (kw= '.' | kw= '/' ) this_LOWERCASE_ID_3= RULE_LOWERCASE_ID
            	    {
            	    // InternalKim.g:14514:4: (kw= '.' | kw= '/' )
            	    int alt287=2;
            	    int LA287_0 = input.LA(1);

            	    if ( (LA287_0==90) ) {
            	        alt287=1;
            	    }
            	    else if ( (LA287_0==89) ) {
            	        alt287=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 287, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt287) {
            	        case 1 :
            	            // InternalKim.g:14515:5: kw= '.'
            	            {
            	            kw=(Token)match(input,90,FOLLOW_55); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(kw);
            	              					newLeafNode(kw, grammarAccess.getPathAccess().getFullStopKeyword_1_0_0());
            	              				
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:14521:5: kw= '/'
            	            {
            	            kw=(Token)match(input,89,FOLLOW_55); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(kw);
            	              					newLeafNode(kw, grammarAccess.getPathAccess().getSolidusKeyword_1_0_1());
            	              				
            	            }

            	            }
            	            break;

            	    }

            	    this_LOWERCASE_ID_3=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_165); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(this_LOWERCASE_ID_3);
            	      			
            	    }
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(this_LOWERCASE_ID_3, grammarAccess.getPathAccess().getLOWERCASE_IDTerminalRuleCall_1_1());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop288;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePath"


    // $ANTLR start "entryRuleNamespaceId"
    // InternalKim.g:14539:1: entryRuleNamespaceId returns [String current=null] : iv_ruleNamespaceId= ruleNamespaceId EOF ;
    public final String entryRuleNamespaceId() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleNamespaceId = null;


        try {
            // InternalKim.g:14539:51: (iv_ruleNamespaceId= ruleNamespaceId EOF )
            // InternalKim.g:14540:2: iv_ruleNamespaceId= ruleNamespaceId EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNamespaceIdRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNamespaceId=ruleNamespaceId();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNamespaceId.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNamespaceId"


    // $ANTLR start "ruleNamespaceId"
    // InternalKim.g:14546:1: ruleNamespaceId returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_PathName_0= rulePathName kw= ':' this_CAMELCASE_ID_2= RULE_CAMELCASE_ID ) ;
    public final AntlrDatatypeRuleToken ruleNamespaceId() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_CAMELCASE_ID_2=null;
        AntlrDatatypeRuleToken this_PathName_0 = null;



        	enterRule();

        try {
            // InternalKim.g:14552:2: ( (this_PathName_0= rulePathName kw= ':' this_CAMELCASE_ID_2= RULE_CAMELCASE_ID ) )
            // InternalKim.g:14553:2: (this_PathName_0= rulePathName kw= ':' this_CAMELCASE_ID_2= RULE_CAMELCASE_ID )
            {
            // InternalKim.g:14553:2: (this_PathName_0= rulePathName kw= ':' this_CAMELCASE_ID_2= RULE_CAMELCASE_ID )
            // InternalKim.g:14554:3: this_PathName_0= rulePathName kw= ':' this_CAMELCASE_ID_2= RULE_CAMELCASE_ID
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getNamespaceIdAccess().getPathNameParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_73);
            this_PathName_0=rulePathName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_PathName_0);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            kw=(Token)match(input,88,FOLLOW_133); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getNamespaceIdAccess().getColonKeyword_1());
              		
            }
            this_CAMELCASE_ID_2=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_CAMELCASE_ID_2);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_CAMELCASE_ID_2, grammarAccess.getNamespaceIdAccess().getCAMELCASE_IDTerminalRuleCall_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNamespaceId"


    // $ANTLR start "entryRulePropertyId"
    // InternalKim.g:14580:1: entryRulePropertyId returns [String current=null] : iv_rulePropertyId= rulePropertyId EOF ;
    public final String entryRulePropertyId() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulePropertyId = null;


        try {
            // InternalKim.g:14580:50: (iv_rulePropertyId= rulePropertyId EOF )
            // InternalKim.g:14581:2: iv_rulePropertyId= rulePropertyId EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPropertyIdRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePropertyId=rulePropertyId();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePropertyId.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePropertyId"


    // $ANTLR start "rulePropertyId"
    // InternalKim.g:14587:1: rulePropertyId returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (this_PathName_0= rulePathName | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID ) kw= ':' (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_4= RULE_LOWERCASE_DASHID ) ) ;
    public final AntlrDatatypeRuleToken rulePropertyId() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_LOWERCASE_ID_1=null;
        Token kw=null;
        Token this_LOWERCASE_ID_3=null;
        Token this_LOWERCASE_DASHID_4=null;
        AntlrDatatypeRuleToken this_PathName_0 = null;



        	enterRule();

        try {
            // InternalKim.g:14593:2: ( ( (this_PathName_0= rulePathName | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID ) kw= ':' (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_4= RULE_LOWERCASE_DASHID ) ) )
            // InternalKim.g:14594:2: ( (this_PathName_0= rulePathName | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID ) kw= ':' (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_4= RULE_LOWERCASE_DASHID ) )
            {
            // InternalKim.g:14594:2: ( (this_PathName_0= rulePathName | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID ) kw= ':' (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_4= RULE_LOWERCASE_DASHID ) )
            // InternalKim.g:14595:3: (this_PathName_0= rulePathName | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID ) kw= ':' (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_4= RULE_LOWERCASE_DASHID )
            {
            // InternalKim.g:14595:3: (this_PathName_0= rulePathName | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID )
            int alt289=2;
            int LA289_0 = input.LA(1);

            if ( (LA289_0==RULE_LOWERCASE_ID) ) {
                int LA289_1 = input.LA(2);

                if ( (synpred547_InternalKim()) ) {
                    alt289=1;
                }
                else if ( (true) ) {
                    alt289=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 289, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 289, 0, input);

                throw nvae;
            }
            switch (alt289) {
                case 1 :
                    // InternalKim.g:14596:4: this_PathName_0= rulePathName
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getPropertyIdAccess().getPathNameParserRuleCall_0_0());
                      			
                    }
                    pushFollow(FOLLOW_73);
                    this_PathName_0=rulePathName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_PathName_0);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:14607:4: this_LOWERCASE_ID_1= RULE_LOWERCASE_ID
                    {
                    this_LOWERCASE_ID_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_73); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_ID_1);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_ID_1, grammarAccess.getPropertyIdAccess().getLOWERCASE_IDTerminalRuleCall_0_1());
                      			
                    }

                    }
                    break;

            }

            kw=(Token)match(input,88,FOLLOW_157); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getPropertyIdAccess().getColonKeyword_1());
              		
            }
            // InternalKim.g:14620:3: (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_4= RULE_LOWERCASE_DASHID )
            int alt290=2;
            int LA290_0 = input.LA(1);

            if ( (LA290_0==RULE_LOWERCASE_ID) ) {
                alt290=1;
            }
            else if ( (LA290_0==RULE_LOWERCASE_DASHID) ) {
                alt290=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 290, 0, input);

                throw nvae;
            }
            switch (alt290) {
                case 1 :
                    // InternalKim.g:14621:4: this_LOWERCASE_ID_3= RULE_LOWERCASE_ID
                    {
                    this_LOWERCASE_ID_3=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_ID_3);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_ID_3, grammarAccess.getPropertyIdAccess().getLOWERCASE_IDTerminalRuleCall_2_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:14629:4: this_LOWERCASE_DASHID_4= RULE_LOWERCASE_DASHID
                    {
                    this_LOWERCASE_DASHID_4=(Token)match(input,RULE_LOWERCASE_DASHID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_DASHID_4);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_DASHID_4, grammarAccess.getPropertyIdAccess().getLOWERCASE_DASHIDTerminalRuleCall_2_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePropertyId"


    // $ANTLR start "entryRuleVersionNumber"
    // InternalKim.g:14641:1: entryRuleVersionNumber returns [String current=null] : iv_ruleVersionNumber= ruleVersionNumber EOF ;
    public final String entryRuleVersionNumber() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleVersionNumber = null;


        try {
            // InternalKim.g:14641:53: (iv_ruleVersionNumber= ruleVersionNumber EOF )
            // InternalKim.g:14642:2: iv_ruleVersionNumber= ruleVersionNumber EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVersionNumberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleVersionNumber=ruleVersionNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVersionNumber.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVersionNumber"


    // $ANTLR start "ruleVersionNumber"
    // InternalKim.g:14648:1: ruleVersionNumber returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_INT_0= RULE_INT (kw= '.' this_INT_2= RULE_INT (kw= '.' this_INT_4= RULE_INT )? )? (kw= '-' )? (this_LOWERCASE_ID_6= RULE_LOWERCASE_ID | this_UPPERCASE_ID_7= RULE_UPPERCASE_ID )? ) ;
    public final AntlrDatatypeRuleToken ruleVersionNumber() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_INT_0=null;
        Token kw=null;
        Token this_INT_2=null;
        Token this_INT_4=null;
        Token this_LOWERCASE_ID_6=null;
        Token this_UPPERCASE_ID_7=null;


        	enterRule();

        try {
            // InternalKim.g:14654:2: ( (this_INT_0= RULE_INT (kw= '.' this_INT_2= RULE_INT (kw= '.' this_INT_4= RULE_INT )? )? (kw= '-' )? (this_LOWERCASE_ID_6= RULE_LOWERCASE_ID | this_UPPERCASE_ID_7= RULE_UPPERCASE_ID )? ) )
            // InternalKim.g:14655:2: (this_INT_0= RULE_INT (kw= '.' this_INT_2= RULE_INT (kw= '.' this_INT_4= RULE_INT )? )? (kw= '-' )? (this_LOWERCASE_ID_6= RULE_LOWERCASE_ID | this_UPPERCASE_ID_7= RULE_UPPERCASE_ID )? )
            {
            // InternalKim.g:14655:2: (this_INT_0= RULE_INT (kw= '.' this_INT_2= RULE_INT (kw= '.' this_INT_4= RULE_INT )? )? (kw= '-' )? (this_LOWERCASE_ID_6= RULE_LOWERCASE_ID | this_UPPERCASE_ID_7= RULE_UPPERCASE_ID )? )
            // InternalKim.g:14656:3: this_INT_0= RULE_INT (kw= '.' this_INT_2= RULE_INT (kw= '.' this_INT_4= RULE_INT )? )? (kw= '-' )? (this_LOWERCASE_ID_6= RULE_LOWERCASE_ID | this_UPPERCASE_ID_7= RULE_UPPERCASE_ID )?
            {
            this_INT_0=(Token)match(input,RULE_INT,FOLLOW_166); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_INT_0);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_INT_0, grammarAccess.getVersionNumberAccess().getINTTerminalRuleCall_0());
              		
            }
            // InternalKim.g:14663:3: (kw= '.' this_INT_2= RULE_INT (kw= '.' this_INT_4= RULE_INT )? )?
            int alt292=2;
            int LA292_0 = input.LA(1);

            if ( (LA292_0==90) ) {
                alt292=1;
            }
            switch (alt292) {
                case 1 :
                    // InternalKim.g:14664:4: kw= '.' this_INT_2= RULE_INT (kw= '.' this_INT_4= RULE_INT )?
                    {
                    kw=(Token)match(input,90,FOLLOW_68); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getVersionNumberAccess().getFullStopKeyword_1_0());
                      			
                    }
                    this_INT_2=(Token)match(input,RULE_INT,FOLLOW_166); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_INT_2);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_INT_2, grammarAccess.getVersionNumberAccess().getINTTerminalRuleCall_1_1());
                      			
                    }
                    // InternalKim.g:14676:4: (kw= '.' this_INT_4= RULE_INT )?
                    int alt291=2;
                    int LA291_0 = input.LA(1);

                    if ( (LA291_0==90) ) {
                        alt291=1;
                    }
                    switch (alt291) {
                        case 1 :
                            // InternalKim.g:14677:5: kw= '.' this_INT_4= RULE_INT
                            {
                            kw=(Token)match(input,90,FOLLOW_68); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getVersionNumberAccess().getFullStopKeyword_1_2_0());
                              				
                            }
                            this_INT_4=(Token)match(input,RULE_INT,FOLLOW_167); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_INT_4);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					newLeafNode(this_INT_4, grammarAccess.getVersionNumberAccess().getINTTerminalRuleCall_1_2_1());
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            // InternalKim.g:14691:3: (kw= '-' )?
            int alt293=2;
            int LA293_0 = input.LA(1);

            if ( (LA293_0==227) ) {
                alt293=1;
            }
            switch (alt293) {
                case 1 :
                    // InternalKim.g:14692:4: kw= '-'
                    {
                    kw=(Token)match(input,227,FOLLOW_168); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getVersionNumberAccess().getHyphenMinusKeyword_2());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:14698:3: (this_LOWERCASE_ID_6= RULE_LOWERCASE_ID | this_UPPERCASE_ID_7= RULE_UPPERCASE_ID )?
            int alt294=3;
            int LA294_0 = input.LA(1);

            if ( (LA294_0==RULE_LOWERCASE_ID) ) {
                int LA294_1 = input.LA(2);

                if ( (LA294_1==EOF||(LA294_1>=RULE_LOWERCASE_ID && LA294_1<=RULE_STRING)||LA294_1==RULE_CAMELCASE_ID||LA294_1==18||LA294_1==22||LA294_1==25||(LA294_1>=27 && LA294_1<=29)||LA294_1==31||(LA294_1>=33 && LA294_1<=34)||(LA294_1>=37 && LA294_1<=38)||(LA294_1>=42 && LA294_1<=43)||LA294_1==46||(LA294_1>=51 && LA294_1<=54)||(LA294_1>=77 && LA294_1<=78)||(LA294_1>=81 && LA294_1<=83)||LA294_1==85||(LA294_1>=108 && LA294_1<=109)||(LA294_1>=116 && LA294_1<=117)||(LA294_1>=119 && LA294_1<=130)) ) {
                    alt294=1;
                }
            }
            else if ( (LA294_0==RULE_UPPERCASE_ID) ) {
                alt294=2;
            }
            switch (alt294) {
                case 1 :
                    // InternalKim.g:14699:4: this_LOWERCASE_ID_6= RULE_LOWERCASE_ID
                    {
                    this_LOWERCASE_ID_6=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_ID_6);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_ID_6, grammarAccess.getVersionNumberAccess().getLOWERCASE_IDTerminalRuleCall_3_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:14707:4: this_UPPERCASE_ID_7= RULE_UPPERCASE_ID
                    {
                    this_UPPERCASE_ID_7=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_UPPERCASE_ID_7);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_UPPERCASE_ID_7, grammarAccess.getVersionNumberAccess().getUPPERCASE_IDTerminalRuleCall_3_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVersionNumber"


    // $ANTLR start "ruleDataType"
    // InternalKim.g:14719:1: ruleDataType returns [Enumerator current=null] : ( (enumLiteral_0= 'text' ) | (enumLiteral_1= 'integer' ) | (enumLiteral_2= 'float' ) | (enumLiteral_3= 'boolean' ) | (enumLiteral_4= 'date' ) ) ;
    public final Enumerator ruleDataType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;
        Token enumLiteral_4=null;


        	enterRule();

        try {
            // InternalKim.g:14725:2: ( ( (enumLiteral_0= 'text' ) | (enumLiteral_1= 'integer' ) | (enumLiteral_2= 'float' ) | (enumLiteral_3= 'boolean' ) | (enumLiteral_4= 'date' ) ) )
            // InternalKim.g:14726:2: ( (enumLiteral_0= 'text' ) | (enumLiteral_1= 'integer' ) | (enumLiteral_2= 'float' ) | (enumLiteral_3= 'boolean' ) | (enumLiteral_4= 'date' ) )
            {
            // InternalKim.g:14726:2: ( (enumLiteral_0= 'text' ) | (enumLiteral_1= 'integer' ) | (enumLiteral_2= 'float' ) | (enumLiteral_3= 'boolean' ) | (enumLiteral_4= 'date' ) )
            int alt295=5;
            switch ( input.LA(1) ) {
            case 72:
                {
                alt295=1;
                }
                break;
            case 230:
                {
                alt295=2;
                }
                break;
            case 231:
                {
                alt295=3;
                }
                break;
            case 73:
                {
                alt295=4;
                }
                break;
            case 232:
                {
                alt295=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 295, 0, input);

                throw nvae;
            }

            switch (alt295) {
                case 1 :
                    // InternalKim.g:14727:3: (enumLiteral_0= 'text' )
                    {
                    // InternalKim.g:14727:3: (enumLiteral_0= 'text' )
                    // InternalKim.g:14728:4: enumLiteral_0= 'text'
                    {
                    enumLiteral_0=(Token)match(input,72,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDataTypeAccess().getTEXTEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getDataTypeAccess().getTEXTEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:14735:3: (enumLiteral_1= 'integer' )
                    {
                    // InternalKim.g:14735:3: (enumLiteral_1= 'integer' )
                    // InternalKim.g:14736:4: enumLiteral_1= 'integer'
                    {
                    enumLiteral_1=(Token)match(input,230,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDataTypeAccess().getINTEGEREnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getDataTypeAccess().getINTEGEREnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:14743:3: (enumLiteral_2= 'float' )
                    {
                    // InternalKim.g:14743:3: (enumLiteral_2= 'float' )
                    // InternalKim.g:14744:4: enumLiteral_2= 'float'
                    {
                    enumLiteral_2=(Token)match(input,231,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDataTypeAccess().getFLOATEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getDataTypeAccess().getFLOATEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:14751:3: (enumLiteral_3= 'boolean' )
                    {
                    // InternalKim.g:14751:3: (enumLiteral_3= 'boolean' )
                    // InternalKim.g:14752:4: enumLiteral_3= 'boolean'
                    {
                    enumLiteral_3=(Token)match(input,73,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDataTypeAccess().getBOOLEANEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_3, grammarAccess.getDataTypeAccess().getBOOLEANEnumLiteralDeclaration_3());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:14759:3: (enumLiteral_4= 'date' )
                    {
                    // InternalKim.g:14759:3: (enumLiteral_4= 'date' )
                    // InternalKim.g:14760:4: enumLiteral_4= 'date'
                    {
                    enumLiteral_4=(Token)match(input,232,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDataTypeAccess().getDATEEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_4, grammarAccess.getDataTypeAccess().getDATEEnumLiteralDeclaration_4());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDataType"


    // $ANTLR start "ruleUnitOp"
    // InternalKim.g:14770:1: ruleUnitOp returns [Enumerator current=null] : ( (enumLiteral_0= '/' ) | (enumLiteral_1= '^' ) | (enumLiteral_2= '*' ) ) ;
    public final Enumerator ruleUnitOp() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;


        	enterRule();

        try {
            // InternalKim.g:14776:2: ( ( (enumLiteral_0= '/' ) | (enumLiteral_1= '^' ) | (enumLiteral_2= '*' ) ) )
            // InternalKim.g:14777:2: ( (enumLiteral_0= '/' ) | (enumLiteral_1= '^' ) | (enumLiteral_2= '*' ) )
            {
            // InternalKim.g:14777:2: ( (enumLiteral_0= '/' ) | (enumLiteral_1= '^' ) | (enumLiteral_2= '*' ) )
            int alt296=3;
            switch ( input.LA(1) ) {
            case 89:
                {
                alt296=1;
                }
                break;
            case 233:
                {
                alt296=2;
                }
                break;
            case 36:
                {
                alt296=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 296, 0, input);

                throw nvae;
            }

            switch (alt296) {
                case 1 :
                    // InternalKim.g:14778:3: (enumLiteral_0= '/' )
                    {
                    // InternalKim.g:14778:3: (enumLiteral_0= '/' )
                    // InternalKim.g:14779:4: enumLiteral_0= '/'
                    {
                    enumLiteral_0=(Token)match(input,89,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getUnitOpAccess().getOVEREnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getUnitOpAccess().getOVEREnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:14786:3: (enumLiteral_1= '^' )
                    {
                    // InternalKim.g:14786:3: (enumLiteral_1= '^' )
                    // InternalKim.g:14787:4: enumLiteral_1= '^'
                    {
                    enumLiteral_1=(Token)match(input,233,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getUnitOpAccess().getCARETEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getUnitOpAccess().getCARETEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:14794:3: (enumLiteral_2= '*' )
                    {
                    // InternalKim.g:14794:3: (enumLiteral_2= '*' )
                    // InternalKim.g:14795:4: enumLiteral_2= '*'
                    {
                    enumLiteral_2=(Token)match(input,36,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getUnitOpAccess().getSTAREnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getUnitOpAccess().getSTAREnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnitOp"

    // $ANTLR start synpred2_InternalKim
    public final void synpred2_InternalKim_fragment() throws RecognitionException {   
        EObject lv_namespace_1_0 = null;


        // InternalKim.g:110:5: ( (lv_namespace_1_0= ruleNamespace ) )
        // InternalKim.g:110:5: (lv_namespace_1_0= ruleNamespace )
        {
        // InternalKim.g:110:5: (lv_namespace_1_0= ruleNamespace )
        // InternalKim.g:111:6: lv_namespace_1_0= ruleNamespace
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getModelAccess().getNamespaceNamespaceParserRuleCall_1_0_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_namespace_1_0=ruleNamespace();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred2_InternalKim

    // $ANTLR start synpred4_InternalKim
    public final void synpred4_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        EObject lv_conceptStatement_0_0 = null;


        // InternalKim.g:167:3: ( ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' ) )
        // InternalKim.g:167:3: ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' )
        {
        // InternalKim.g:167:3: ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' )
        // InternalKim.g:168:4: ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';'
        {
        // InternalKim.g:168:4: ( (lv_conceptStatement_0_0= ruleConceptStatement ) )
        // InternalKim.g:169:5: (lv_conceptStatement_0_0= ruleConceptStatement )
        {
        // InternalKim.g:169:5: (lv_conceptStatement_0_0= ruleConceptStatement )
        // InternalKim.g:170:6: lv_conceptStatement_0_0= ruleConceptStatement
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getStatementAccess().getConceptStatementConceptStatementParserRuleCall_0_0_0());
          					
        }
        pushFollow(FOLLOW_4);
        lv_conceptStatement_0_0=ruleConceptStatement();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_1=(Token)match(input,18,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred4_InternalKim

    // $ANTLR start synpred5_InternalKim
    public final void synpred5_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_3=null;
        EObject lv_modelStatement_2_0 = null;


        // InternalKim.g:193:3: ( ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' ) )
        // InternalKim.g:193:3: ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' )
        {
        // InternalKim.g:193:3: ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' )
        // InternalKim.g:194:4: ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';'
        {
        // InternalKim.g:194:4: ( (lv_modelStatement_2_0= ruleModelStatement ) )
        // InternalKim.g:195:5: (lv_modelStatement_2_0= ruleModelStatement )
        {
        // InternalKim.g:195:5: (lv_modelStatement_2_0= ruleModelStatement )
        // InternalKim.g:196:6: lv_modelStatement_2_0= ruleModelStatement
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getStatementAccess().getModelStatementModelStatementParserRuleCall_1_0_0());
          					
        }
        pushFollow(FOLLOW_4);
        lv_modelStatement_2_0=ruleModelStatement();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_3=(Token)match(input,18,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred5_InternalKim

    // $ANTLR start synpred6_InternalKim
    public final void synpred6_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_5=null;
        EObject lv_upperOntologyStatement_4_0 = null;


        // InternalKim.g:219:3: ( ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' ) )
        // InternalKim.g:219:3: ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' )
        {
        // InternalKim.g:219:3: ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' )
        // InternalKim.g:220:4: ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';'
        {
        // InternalKim.g:220:4: ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) )
        // InternalKim.g:221:5: (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition )
        {
        // InternalKim.g:221:5: (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition )
        // InternalKim.g:222:6: lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getStatementAccess().getUpperOntologyStatementUpperOntologyDefinitionParserRuleCall_2_0_0());
          					
        }
        pushFollow(FOLLOW_4);
        lv_upperOntologyStatement_4_0=ruleUpperOntologyDefinition();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_5=(Token)match(input,18,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred6_InternalKim

    // $ANTLR start synpred8_InternalKim
    public final void synpred8_InternalKim_fragment() throws RecognitionException {   
        Token lv_inactive_2_0=null;

        // InternalKim.g:325:4: ( ({...}? => ( ({...}? => ( (lv_inactive_2_0= 'void' ) ) ) ) ) )
        // InternalKim.g:325:4: ({...}? => ( ({...}? => ( (lv_inactive_2_0= 'void' ) ) ) ) )
        {
        // InternalKim.g:325:4: ({...}? => ( ({...}? => ( (lv_inactive_2_0= 'void' ) ) ) ) )
        // InternalKim.g:326:5: {...}? => ( ({...}? => ( (lv_inactive_2_0= 'void' ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred8_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0)");
        }
        // InternalKim.g:326:111: ( ({...}? => ( (lv_inactive_2_0= 'void' ) ) ) )
        // InternalKim.g:327:6: ({...}? => ( (lv_inactive_2_0= 'void' ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0);
        // InternalKim.g:330:9: ({...}? => ( (lv_inactive_2_0= 'void' ) ) )
        // InternalKim.g:330:10: {...}? => ( (lv_inactive_2_0= 'void' ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred8_InternalKim", "true");
        }
        // InternalKim.g:330:19: ( (lv_inactive_2_0= 'void' ) )
        // InternalKim.g:330:20: (lv_inactive_2_0= 'void' )
        {
        // InternalKim.g:330:20: (lv_inactive_2_0= 'void' )
        // InternalKim.g:331:10: lv_inactive_2_0= 'void'
        {
        lv_inactive_2_0=(Token)match(input,19,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred8_InternalKim

    // $ANTLR start synpred9_InternalKim
    public final void synpred9_InternalKim_fragment() throws RecognitionException {   
        Token lv_private_3_0=null;

        // InternalKim.g:348:4: ( ({...}? => ( ({...}? => ( (lv_private_3_0= 'private' ) ) ) ) ) )
        // InternalKim.g:348:4: ({...}? => ( ({...}? => ( (lv_private_3_0= 'private' ) ) ) ) )
        {
        // InternalKim.g:348:4: ({...}? => ( ({...}? => ( (lv_private_3_0= 'private' ) ) ) ) )
        // InternalKim.g:349:5: {...}? => ( ({...}? => ( (lv_private_3_0= 'private' ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred9_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1)");
        }
        // InternalKim.g:349:111: ( ({...}? => ( (lv_private_3_0= 'private' ) ) ) )
        // InternalKim.g:350:6: ({...}? => ( (lv_private_3_0= 'private' ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1);
        // InternalKim.g:353:9: ({...}? => ( (lv_private_3_0= 'private' ) ) )
        // InternalKim.g:353:10: {...}? => ( (lv_private_3_0= 'private' ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred9_InternalKim", "true");
        }
        // InternalKim.g:353:19: ( (lv_private_3_0= 'private' ) )
        // InternalKim.g:353:20: (lv_private_3_0= 'private' )
        {
        // InternalKim.g:353:20: (lv_private_3_0= 'private' )
        // InternalKim.g:354:10: lv_private_3_0= 'private'
        {
        lv_private_3_0=(Token)match(input,20,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred9_InternalKim

    // $ANTLR start synpred12_InternalKim
    public final void synpred12_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        EObject lv_urns_1_0 = null;

        EObject lv_urns_3_0 = null;


        // InternalKim.g:454:5: ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) )
        // InternalKim.g:454:5: ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* )
        {
        // InternalKim.g:454:5: ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* )
        // InternalKim.g:455:6: ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )*
        {
        // InternalKim.g:455:6: ( (lv_urns_1_0= ruleUrn ) )
        // InternalKim.g:456:7: (lv_urns_1_0= ruleUrn )
        {
        // InternalKim.g:456:7: (lv_urns_1_0= ruleUrn )
        // InternalKim.g:457:8: lv_urns_1_0= ruleUrn
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getModelBodyStatementAccess().getUrnsUrnParserRuleCall_1_0_0_0_0());
          							
        }
        pushFollow(FOLLOW_29);
        lv_urns_1_0=ruleUrn();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:474:6: (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )*
        loop297:
        do {
            int alt297=2;
            int LA297_0 = input.LA(1);

            if ( (LA297_0==22) ) {
                alt297=1;
            }


            switch (alt297) {
        	case 1 :
        	    // InternalKim.g:475:7: otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) )
        	    {
        	    otherlv_2=(Token)match(input,22,FOLLOW_8); if (state.failed) return ;
        	    // InternalKim.g:479:7: ( (lv_urns_3_0= ruleUrn ) )
        	    // InternalKim.g:480:8: (lv_urns_3_0= ruleUrn )
        	    {
        	    // InternalKim.g:480:8: (lv_urns_3_0= ruleUrn )
        	    // InternalKim.g:481:9: lv_urns_3_0= ruleUrn
        	    {
        	    if ( state.backtracking==0 ) {

        	      									newCompositeNode(grammarAccess.getModelBodyStatementAccess().getUrnsUrnParserRuleCall_1_0_0_1_1_0());
        	      								
        	    }
        	    pushFollow(FOLLOW_29);
        	    lv_urns_3_0=ruleUrn();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop297;
            }
        } while (true);


        }


        }
    }
    // $ANTLR end synpred12_InternalKim

    // $ANTLR start synpred17_InternalKim
    public final void synpred17_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        Token lv_boolean_6_1=null;
        Token lv_boolean_6_2=null;
        Token otherlv_8=null;
        EObject lv_urns_1_0 = null;

        EObject lv_urns_3_0 = null;

        EObject lv_function_4_0 = null;

        EObject lv_number_5_0 = null;

        EObject lv_concept_7_0 = null;


        // InternalKim.g:453:4: ( ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_function_4_0= ruleFunction ) ) | ( (lv_number_5_0= ruleNumber ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) | ( (lv_concept_7_0= ruleSimpleObservableSemantics ) ) ) otherlv_8= 'as' )
        // InternalKim.g:453:4: ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_function_4_0= ruleFunction ) ) | ( (lv_number_5_0= ruleNumber ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) | ( (lv_concept_7_0= ruleSimpleObservableSemantics ) ) ) otherlv_8= 'as'
        {
        // InternalKim.g:453:4: ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_function_4_0= ruleFunction ) ) | ( (lv_number_5_0= ruleNumber ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) | ( (lv_concept_7_0= ruleSimpleObservableSemantics ) ) )
        int alt301=5;
        alt301 = dfa301.predict(input);
        switch (alt301) {
            case 1 :
                // InternalKim.g:454:5: ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* )
                {
                // InternalKim.g:454:5: ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* )
                // InternalKim.g:455:6: ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )*
                {
                // InternalKim.g:455:6: ( (lv_urns_1_0= ruleUrn ) )
                // InternalKim.g:456:7: (lv_urns_1_0= ruleUrn )
                {
                // InternalKim.g:456:7: (lv_urns_1_0= ruleUrn )
                // InternalKim.g:457:8: lv_urns_1_0= ruleUrn
                {
                if ( state.backtracking==0 ) {

                  								newCompositeNode(grammarAccess.getModelBodyStatementAccess().getUrnsUrnParserRuleCall_1_0_0_0_0());
                  							
                }
                pushFollow(FOLLOW_7);
                lv_urns_1_0=ruleUrn();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalKim.g:474:6: (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )*
                loop299:
                do {
                    int alt299=2;
                    int LA299_0 = input.LA(1);

                    if ( (LA299_0==22) ) {
                        alt299=1;
                    }


                    switch (alt299) {
                	case 1 :
                	    // InternalKim.g:475:7: otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) )
                	    {
                	    otherlv_2=(Token)match(input,22,FOLLOW_8); if (state.failed) return ;
                	    // InternalKim.g:479:7: ( (lv_urns_3_0= ruleUrn ) )
                	    // InternalKim.g:480:8: (lv_urns_3_0= ruleUrn )
                	    {
                	    // InternalKim.g:480:8: (lv_urns_3_0= ruleUrn )
                	    // InternalKim.g:481:9: lv_urns_3_0= ruleUrn
                	    {
                	    if ( state.backtracking==0 ) {

                	      									newCompositeNode(grammarAccess.getModelBodyStatementAccess().getUrnsUrnParserRuleCall_1_0_0_1_1_0());
                	      								
                	    }
                	    pushFollow(FOLLOW_7);
                	    lv_urns_3_0=ruleUrn();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop299;
                    }
                } while (true);


                }


                }
                break;
            case 2 :
                // InternalKim.g:501:5: ( (lv_function_4_0= ruleFunction ) )
                {
                // InternalKim.g:501:5: ( (lv_function_4_0= ruleFunction ) )
                // InternalKim.g:502:6: (lv_function_4_0= ruleFunction )
                {
                // InternalKim.g:502:6: (lv_function_4_0= ruleFunction )
                // InternalKim.g:503:7: lv_function_4_0= ruleFunction
                {
                if ( state.backtracking==0 ) {

                  							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getFunctionFunctionParserRuleCall_1_0_1_0());
                  						
                }
                pushFollow(FOLLOW_9);
                lv_function_4_0=ruleFunction();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;
            case 3 :
                // InternalKim.g:521:5: ( (lv_number_5_0= ruleNumber ) )
                {
                // InternalKim.g:521:5: ( (lv_number_5_0= ruleNumber ) )
                // InternalKim.g:522:6: (lv_number_5_0= ruleNumber )
                {
                // InternalKim.g:522:6: (lv_number_5_0= ruleNumber )
                // InternalKim.g:523:7: lv_number_5_0= ruleNumber
                {
                if ( state.backtracking==0 ) {

                  							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getNumberNumberParserRuleCall_1_0_2_0());
                  						
                }
                pushFollow(FOLLOW_9);
                lv_number_5_0=ruleNumber();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;
            case 4 :
                // InternalKim.g:541:5: ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) )
                {
                // InternalKim.g:541:5: ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) )
                // InternalKim.g:542:6: ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) )
                {
                // InternalKim.g:542:6: ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) )
                // InternalKim.g:543:7: (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' )
                {
                // InternalKim.g:543:7: (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' )
                int alt300=2;
                int LA300_0 = input.LA(1);

                if ( (LA300_0==23) ) {
                    alt300=1;
                }
                else if ( (LA300_0==24) ) {
                    alt300=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 300, 0, input);

                    throw nvae;
                }
                switch (alt300) {
                    case 1 :
                        // InternalKim.g:544:8: lv_boolean_6_1= 'true'
                        {
                        lv_boolean_6_1=(Token)match(input,23,FOLLOW_9); if (state.failed) return ;

                        }
                        break;
                    case 2 :
                        // InternalKim.g:555:8: lv_boolean_6_2= 'false'
                        {
                        lv_boolean_6_2=(Token)match(input,24,FOLLOW_9); if (state.failed) return ;

                        }
                        break;

                }


                }


                }


                }
                break;
            case 5 :
                // InternalKim.g:569:5: ( (lv_concept_7_0= ruleSimpleObservableSemantics ) )
                {
                // InternalKim.g:569:5: ( (lv_concept_7_0= ruleSimpleObservableSemantics ) )
                // InternalKim.g:570:6: (lv_concept_7_0= ruleSimpleObservableSemantics )
                {
                // InternalKim.g:570:6: (lv_concept_7_0= ruleSimpleObservableSemantics )
                // InternalKim.g:571:7: lv_concept_7_0= ruleSimpleObservableSemantics
                {
                if ( state.backtracking==0 ) {

                  							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getConceptSimpleObservableSemanticsParserRuleCall_1_0_4_0());
                  						
                }
                pushFollow(FOLLOW_9);
                lv_concept_7_0=ruleSimpleObservableSemantics();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }

        otherlv_8=(Token)match(input,25,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred17_InternalKim

    // $ANTLR start synpred47_InternalKim
    public final void synpred47_InternalKim_fragment() throws RecognitionException {   
        // InternalKim.g:1324:5: ( 'to' )
        // InternalKim.g:1324:6: 'to'
        {
        match(input,32,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred47_InternalKim

    // $ANTLR start synpred51_InternalKim
    public final void synpred51_InternalKim_fragment() throws RecognitionException {   
        Token lv_leftLimit_3_0=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token lv_rightLimit_7_0=null;
        Token otherlv_8=null;
        EObject lv_int0_2_0 = null;

        EObject lv_int1_6_0 = null;


        // InternalKim.g:1282:3: ( ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) )
        // InternalKim.g:1282:3: ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? )
        {
        // InternalKim.g:1282:3: ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? )
        // InternalKim.g:1283:4: ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )?
        {
        // InternalKim.g:1283:4: ( (lv_int0_2_0= ruleNumber ) )
        // InternalKim.g:1284:5: (lv_int0_2_0= ruleNumber )
        {
        // InternalKim.g:1284:5: (lv_int0_2_0= ruleNumber )
        // InternalKim.g:1285:6: lv_int0_2_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getClassifierRHSAccess().getInt0NumberParserRuleCall_1_0_0());
          					
        }
        pushFollow(FOLLOW_32);
        lv_int0_2_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:1302:4: ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )?
        int alt316=3;
        int LA316_0 = input.LA(1);

        if ( (LA316_0==44) ) {
            alt316=1;
        }
        else if ( (LA316_0==45) ) {
            alt316=2;
        }
        switch (alt316) {
            case 1 :
                // InternalKim.g:1303:5: ( (lv_leftLimit_3_0= 'inclusive' ) )
                {
                // InternalKim.g:1303:5: ( (lv_leftLimit_3_0= 'inclusive' ) )
                // InternalKim.g:1304:6: (lv_leftLimit_3_0= 'inclusive' )
                {
                // InternalKim.g:1304:6: (lv_leftLimit_3_0= 'inclusive' )
                // InternalKim.g:1305:7: lv_leftLimit_3_0= 'inclusive'
                {
                lv_leftLimit_3_0=(Token)match(input,44,FOLLOW_18); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:1318:5: otherlv_4= 'exclusive'
                {
                otherlv_4=(Token)match(input,45,FOLLOW_18); if (state.failed) return ;

                }
                break;

        }

        // InternalKim.g:1323:4: ( ( 'to' )=>otherlv_5= 'to' )
        // InternalKim.g:1324:5: ( 'to' )=>otherlv_5= 'to'
        {
        otherlv_5=(Token)match(input,32,FOLLOW_33); if (state.failed) return ;

        }

        // InternalKim.g:1330:4: ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) )
        // InternalKim.g:1331:5: ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber )
        {
        // InternalKim.g:1335:5: (lv_int1_6_0= ruleNumber )
        // InternalKim.g:1336:6: lv_int1_6_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getClassifierRHSAccess().getInt1NumberParserRuleCall_1_3_0());
          					
        }
        pushFollow(FOLLOW_34);
        lv_int1_6_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:1353:4: ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )?
        int alt317=3;
        int LA317_0 = input.LA(1);

        if ( (LA317_0==44) ) {
            alt317=1;
        }
        else if ( (LA317_0==45) ) {
            alt317=2;
        }
        switch (alt317) {
            case 1 :
                // InternalKim.g:1354:5: ( (lv_rightLimit_7_0= 'inclusive' ) )
                {
                // InternalKim.g:1354:5: ( (lv_rightLimit_7_0= 'inclusive' ) )
                // InternalKim.g:1355:6: (lv_rightLimit_7_0= 'inclusive' )
                {
                // InternalKim.g:1355:6: (lv_rightLimit_7_0= 'inclusive' )
                // InternalKim.g:1356:7: lv_rightLimit_7_0= 'inclusive'
                {
                lv_rightLimit_7_0=(Token)match(input,44,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:1369:5: otherlv_8= 'exclusive'
                {
                otherlv_8=(Token)match(input,45,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred51_InternalKim

    // $ANTLR start synpred52_InternalKim
    public final void synpred52_InternalKim_fragment() throws RecognitionException {   
        EObject lv_num_9_0 = null;


        // InternalKim.g:1376:3: ( ( (lv_num_9_0= ruleNumber ) ) )
        // InternalKim.g:1376:3: ( (lv_num_9_0= ruleNumber ) )
        {
        // InternalKim.g:1376:3: ( (lv_num_9_0= ruleNumber ) )
        // InternalKim.g:1377:4: (lv_num_9_0= ruleNumber )
        {
        // InternalKim.g:1377:4: (lv_num_9_0= ruleNumber )
        // InternalKim.g:1378:5: lv_num_9_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getClassifierRHSAccess().getNumNumberParserRuleCall_2_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_num_9_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred52_InternalKim

    // $ANTLR start synpred54_InternalKim
    public final void synpred54_InternalKim_fragment() throws RecognitionException {   
        Token lv_string_12_0=null;

        // InternalKim.g:1422:3: ( ( (lv_string_12_0= RULE_STRING ) ) )
        // InternalKim.g:1422:3: ( (lv_string_12_0= RULE_STRING ) )
        {
        // InternalKim.g:1422:3: ( (lv_string_12_0= RULE_STRING ) )
        // InternalKim.g:1423:4: (lv_string_12_0= RULE_STRING )
        {
        // InternalKim.g:1423:4: (lv_string_12_0= RULE_STRING )
        // InternalKim.g:1424:5: lv_string_12_0= RULE_STRING
        {
        lv_string_12_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred54_InternalKim

    // $ANTLR start synpred55_InternalKim
    public final void synpred55_InternalKim_fragment() throws RecognitionException {   
        EObject lv_concept_13_0 = null;


        // InternalKim.g:1441:3: ( ( (lv_concept_13_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:1441:3: ( (lv_concept_13_0= ruleConceptDeclaration ) )
        {
        // InternalKim.g:1441:3: ( (lv_concept_13_0= ruleConceptDeclaration ) )
        // InternalKim.g:1442:4: (lv_concept_13_0= ruleConceptDeclaration )
        {
        // InternalKim.g:1442:4: (lv_concept_13_0= ruleConceptDeclaration )
        // InternalKim.g:1443:5: lv_concept_13_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getClassifierRHSAccess().getConceptConceptDeclarationParserRuleCall_5_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_concept_13_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred55_InternalKim

    // $ANTLR start synpred58_InternalKim
    public final void synpred58_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        EObject lv_toResolve_15_0 = null;

        EObject lv_toResolve_17_0 = null;


        // InternalKim.g:1461:3: ( (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' ) )
        // InternalKim.g:1461:3: (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' )
        {
        // InternalKim.g:1461:3: (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' )
        // InternalKim.g:1462:4: otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')'
        {
        otherlv_14=(Token)match(input,34,FOLLOW_16); if (state.failed) return ;
        // InternalKim.g:1466:4: ( (lv_toResolve_15_0= ruleConceptDeclaration ) )
        // InternalKim.g:1467:5: (lv_toResolve_15_0= ruleConceptDeclaration )
        {
        // InternalKim.g:1467:5: (lv_toResolve_15_0= ruleConceptDeclaration )
        // InternalKim.g:1468:6: lv_toResolve_15_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getClassifierRHSAccess().getToResolveConceptDeclarationParserRuleCall_6_1_0());
          					
        }
        pushFollow(FOLLOW_22);
        lv_toResolve_15_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:1485:4: ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )*
        loop318:
        do {
            int alt318=2;
            int LA318_0 = input.LA(1);

            if ( (LA318_0==22) ) {
                alt318=1;
            }


            switch (alt318) {
        	case 1 :
        	    // InternalKim.g:1486:5: ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) )
        	    {
        	    // InternalKim.g:1486:5: ( ( ',' )=>otherlv_16= ',' )
        	    // InternalKim.g:1487:6: ( ',' )=>otherlv_16= ','
        	    {
        	    otherlv_16=(Token)match(input,22,FOLLOW_16); if (state.failed) return ;

        	    }

        	    // InternalKim.g:1493:5: ( (lv_toResolve_17_0= ruleConceptDeclaration ) )
        	    // InternalKim.g:1494:6: (lv_toResolve_17_0= ruleConceptDeclaration )
        	    {
        	    // InternalKim.g:1494:6: (lv_toResolve_17_0= ruleConceptDeclaration )
        	    // InternalKim.g:1495:7: lv_toResolve_17_0= ruleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      							newCompositeNode(grammarAccess.getClassifierRHSAccess().getToResolveConceptDeclarationParserRuleCall_6_2_1_0());
        	      						
        	    }
        	    pushFollow(FOLLOW_22);
        	    lv_toResolve_17_0=ruleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop318;
            }
        } while (true);

        otherlv_18=(Token)match(input,37,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred58_InternalKim

    // $ANTLR start synpred65_InternalKim
    public final void synpred65_InternalKim_fragment() throws RecognitionException {   
        // InternalKim.g:1682:5: ( 'to' )
        // InternalKim.g:1682:6: 'to'
        {
        match(input,32,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred65_InternalKim

    // $ANTLR start synpred69_InternalKim
    public final void synpred69_InternalKim_fragment() throws RecognitionException {   
        Token lv_leftLimit_3_0=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token lv_rightLimit_7_0=null;
        Token otherlv_8=null;
        EObject lv_int0_2_0 = null;

        EObject lv_int1_6_0 = null;


        // InternalKim.g:1640:3: ( ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) )
        // InternalKim.g:1640:3: ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? )
        {
        // InternalKim.g:1640:3: ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? )
        // InternalKim.g:1641:4: ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )?
        {
        // InternalKim.g:1641:4: ( (lv_int0_2_0= ruleNumber ) )
        // InternalKim.g:1642:5: (lv_int0_2_0= ruleNumber )
        {
        // InternalKim.g:1642:5: (lv_int0_2_0= ruleNumber )
        // InternalKim.g:1643:6: lv_int0_2_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getClassifierRHSWithIdAccess().getInt0NumberParserRuleCall_1_0_0());
          					
        }
        pushFollow(FOLLOW_32);
        lv_int0_2_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:1660:4: ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )?
        int alt320=3;
        int LA320_0 = input.LA(1);

        if ( (LA320_0==44) ) {
            alt320=1;
        }
        else if ( (LA320_0==45) ) {
            alt320=2;
        }
        switch (alt320) {
            case 1 :
                // InternalKim.g:1661:5: ( (lv_leftLimit_3_0= 'inclusive' ) )
                {
                // InternalKim.g:1661:5: ( (lv_leftLimit_3_0= 'inclusive' ) )
                // InternalKim.g:1662:6: (lv_leftLimit_3_0= 'inclusive' )
                {
                // InternalKim.g:1662:6: (lv_leftLimit_3_0= 'inclusive' )
                // InternalKim.g:1663:7: lv_leftLimit_3_0= 'inclusive'
                {
                lv_leftLimit_3_0=(Token)match(input,44,FOLLOW_18); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:1676:5: otherlv_4= 'exclusive'
                {
                otherlv_4=(Token)match(input,45,FOLLOW_18); if (state.failed) return ;

                }
                break;

        }

        // InternalKim.g:1681:4: ( ( 'to' )=>otherlv_5= 'to' )
        // InternalKim.g:1682:5: ( 'to' )=>otherlv_5= 'to'
        {
        otherlv_5=(Token)match(input,32,FOLLOW_33); if (state.failed) return ;

        }

        // InternalKim.g:1688:4: ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) )
        // InternalKim.g:1689:5: ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber )
        {
        // InternalKim.g:1693:5: (lv_int1_6_0= ruleNumber )
        // InternalKim.g:1694:6: lv_int1_6_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getClassifierRHSWithIdAccess().getInt1NumberParserRuleCall_1_3_0());
          					
        }
        pushFollow(FOLLOW_34);
        lv_int1_6_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:1711:4: ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )?
        int alt321=3;
        int LA321_0 = input.LA(1);

        if ( (LA321_0==44) ) {
            alt321=1;
        }
        else if ( (LA321_0==45) ) {
            alt321=2;
        }
        switch (alt321) {
            case 1 :
                // InternalKim.g:1712:5: ( (lv_rightLimit_7_0= 'inclusive' ) )
                {
                // InternalKim.g:1712:5: ( (lv_rightLimit_7_0= 'inclusive' ) )
                // InternalKim.g:1713:6: (lv_rightLimit_7_0= 'inclusive' )
                {
                // InternalKim.g:1713:6: (lv_rightLimit_7_0= 'inclusive' )
                // InternalKim.g:1714:7: lv_rightLimit_7_0= 'inclusive'
                {
                lv_rightLimit_7_0=(Token)match(input,44,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:1727:5: otherlv_8= 'exclusive'
                {
                otherlv_8=(Token)match(input,45,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred69_InternalKim

    // $ANTLR start synpred70_InternalKim
    public final void synpred70_InternalKim_fragment() throws RecognitionException {   
        EObject lv_num_9_0 = null;


        // InternalKim.g:1734:3: ( ( (lv_num_9_0= ruleNumber ) ) )
        // InternalKim.g:1734:3: ( (lv_num_9_0= ruleNumber ) )
        {
        // InternalKim.g:1734:3: ( (lv_num_9_0= ruleNumber ) )
        // InternalKim.g:1735:4: (lv_num_9_0= ruleNumber )
        {
        // InternalKim.g:1735:4: (lv_num_9_0= ruleNumber )
        // InternalKim.g:1736:5: lv_num_9_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getClassifierRHSWithIdAccess().getNumNumberParserRuleCall_2_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_num_9_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred70_InternalKim

    // $ANTLR start synpred72_InternalKim
    public final void synpred72_InternalKim_fragment() throws RecognitionException {   
        Token lv_string_12_0=null;

        // InternalKim.g:1780:3: ( ( (lv_string_12_0= RULE_STRING ) ) )
        // InternalKim.g:1780:3: ( (lv_string_12_0= RULE_STRING ) )
        {
        // InternalKim.g:1780:3: ( (lv_string_12_0= RULE_STRING ) )
        // InternalKim.g:1781:4: (lv_string_12_0= RULE_STRING )
        {
        // InternalKim.g:1781:4: (lv_string_12_0= RULE_STRING )
        // InternalKim.g:1782:5: lv_string_12_0= RULE_STRING
        {
        lv_string_12_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred72_InternalKim

    // $ANTLR start synpred73_InternalKim
    public final void synpred73_InternalKim_fragment() throws RecognitionException {   
        EObject lv_concept_13_0 = null;


        // InternalKim.g:1799:3: ( ( (lv_concept_13_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:1799:3: ( (lv_concept_13_0= ruleConceptDeclaration ) )
        {
        // InternalKim.g:1799:3: ( (lv_concept_13_0= ruleConceptDeclaration ) )
        // InternalKim.g:1800:4: (lv_concept_13_0= ruleConceptDeclaration )
        {
        // InternalKim.g:1800:4: (lv_concept_13_0= ruleConceptDeclaration )
        // InternalKim.g:1801:5: lv_concept_13_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getClassifierRHSWithIdAccess().getConceptConceptDeclarationParserRuleCall_5_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_concept_13_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred73_InternalKim

    // $ANTLR start synpred74_InternalKim
    public final void synpred74_InternalKim_fragment() throws RecognitionException {   
        Token lv_id_14_1=null;

        // InternalKim.g:1822:6: (lv_id_14_1= RULE_LOWERCASE_ID )
        // InternalKim.g:1822:6: lv_id_14_1= RULE_LOWERCASE_ID
        {
        lv_id_14_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred74_InternalKim

    // $ANTLR start synpred75_InternalKim
    public final void synpred75_InternalKim_fragment() throws RecognitionException {   
        Token lv_id_14_1=null;
        AntlrDatatypeRuleToken lv_id_14_2 = null;


        // InternalKim.g:1819:3: ( ( ( (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId ) ) ) )
        // InternalKim.g:1819:3: ( ( (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId ) ) )
        {
        // InternalKim.g:1819:3: ( ( (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId ) ) )
        // InternalKim.g:1820:4: ( (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId ) )
        {
        // InternalKim.g:1820:4: ( (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId ) )
        // InternalKim.g:1821:5: (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId )
        {
        // InternalKim.g:1821:5: (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId )
        int alt322=2;
        int LA322_0 = input.LA(1);

        if ( (LA322_0==RULE_LOWERCASE_ID) ) {
            int LA322_1 = input.LA(2);

            if ( (LA322_1==EOF) ) {
                alt322=1;
            }
            else if ( (LA322_1==88||LA322_1==90) ) {
                alt322=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 322, 1, input);

                throw nvae;
            }
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 322, 0, input);

            throw nvae;
        }
        switch (alt322) {
            case 1 :
                // InternalKim.g:1822:6: lv_id_14_1= RULE_LOWERCASE_ID
                {
                lv_id_14_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:1837:6: lv_id_14_2= rulePropertyId
                {
                if ( state.backtracking==0 ) {

                  						newCompositeNode(grammarAccess.getClassifierRHSWithIdAccess().getIdPropertyIdParserRuleCall_6_0_1());
                  					
                }
                pushFollow(FOLLOW_2);
                lv_id_14_2=rulePropertyId();

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }


        }


        }


        }
    }
    // $ANTLR end synpred75_InternalKim

    // $ANTLR start synpred87_InternalKim
    public final void synpred87_InternalKim_fragment() throws RecognitionException {   
        // InternalKim.g:2270:5: ( 'to' )
        // InternalKim.g:2270:6: 'to'
        {
        match(input,32,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred87_InternalKim

    // $ANTLR start synpred114_InternalKim
    public final void synpred114_InternalKim_fragment() throws RecognitionException {   
        EObject lv_parameters_19_0 = null;


        // InternalKim.g:2819:5: ( (lv_parameters_19_0= ruleList ) )
        // InternalKim.g:2819:5: (lv_parameters_19_0= ruleList )
        {
        // InternalKim.g:2819:5: (lv_parameters_19_0= ruleList )
        // InternalKim.g:2820:6: lv_parameters_19_0= ruleList
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getActionSpecificationAccess().getParametersListParserRuleCall_1_2_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_parameters_19_0=ruleList();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred114_InternalKim

    // $ANTLR start synpred118_InternalKim
    public final void synpred118_InternalKim_fragment() throws RecognitionException {   
        EObject lv_function_0_0 = null;


        // InternalKim.g:2906:3: ( ( (lv_function_0_0= ruleFunction ) ) )
        // InternalKim.g:2906:3: ( (lv_function_0_0= ruleFunction ) )
        {
        // InternalKim.g:2906:3: ( (lv_function_0_0= ruleFunction ) )
        // InternalKim.g:2907:4: (lv_function_0_0= ruleFunction )
        {
        // InternalKim.g:2907:4: (lv_function_0_0= ruleFunction )
        // InternalKim.g:2908:5: lv_function_0_0= ruleFunction
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getFunctionOrIDAccess().getFunctionFunctionParserRuleCall_0_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_function_0_0=ruleFunction();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred118_InternalKim

    // $ANTLR start synpred140_InternalKim
    public final void synpred140_InternalKim_fragment() throws RecognitionException {   
        // InternalKim.g:3395:5: ( ( ruleValue ) )
        // InternalKim.g:3395:6: ( ruleValue )
        {
        // InternalKim.g:3395:6: ( ruleValue )
        // InternalKim.g:3396:6: ruleValue
        {
        pushFollow(FOLLOW_2);
        ruleValue();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred140_InternalKim

    // $ANTLR start synpred144_InternalKim
    public final void synpred144_InternalKim_fragment() throws RecognitionException {   
        EObject lv_function_1_0 = null;


        // InternalKim.g:3519:3: ( ( (lv_function_1_0= ruleFunction ) ) )
        // InternalKim.g:3519:3: ( (lv_function_1_0= ruleFunction ) )
        {
        // InternalKim.g:3519:3: ( (lv_function_1_0= ruleFunction ) )
        // InternalKim.g:3520:4: (lv_function_1_0= ruleFunction )
        {
        // InternalKim.g:3520:4: (lv_function_1_0= ruleFunction )
        // InternalKim.g:3521:5: lv_function_1_0= ruleFunction
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getComputableValueAccess().getFunctionFunctionParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_function_1_0=ruleFunction();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred144_InternalKim

    // $ANTLR start synpred151_InternalKim
    public final void synpred151_InternalKim_fragment() throws RecognitionException {   
        Token lv_id_5_1=null;
        Token lv_id_5_2=null;
        Token lv_id_5_3=null;

        // InternalKim.g:3616:3: ( ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) ) )
        // InternalKim.g:3616:3: ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) )
        {
        // InternalKim.g:3616:3: ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) )
        // InternalKim.g:3617:4: ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) )
        {
        // InternalKim.g:3617:4: ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) )
        // InternalKim.g:3618:5: (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID )
        {
        // InternalKim.g:3618:5: (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID )
        int alt353=3;
        switch ( input.LA(1) ) {
        case RULE_LOWERCASE_ID:
            {
            alt353=1;
            }
            break;
        case RULE_UPPERCASE_ID:
            {
            alt353=2;
            }
            break;
        case RULE_CAMELCASE_ID:
            {
            alt353=3;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 353, 0, input);

            throw nvae;
        }

        switch (alt353) {
            case 1 :
                // InternalKim.g:3619:6: lv_id_5_1= RULE_LOWERCASE_ID
                {
                lv_id_5_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:3634:6: lv_id_5_2= RULE_UPPERCASE_ID
                {
                lv_id_5_2=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 3 :
                // InternalKim.g:3649:6: lv_id_5_3= RULE_CAMELCASE_ID
                {
                lv_id_5_3=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }
    }
    // $ANTLR end synpred151_InternalKim

    // $ANTLR start synpred165_InternalKim
    public final void synpred165_InternalKim_fragment() throws RecognitionException {   
        Token lv_private_2_0=null;

        // InternalKim.g:4011:4: ( ({...}? => ( ({...}? => ( (lv_private_2_0= 'private' ) ) ) ) ) )
        // InternalKim.g:4011:4: ({...}? => ( ({...}? => ( (lv_private_2_0= 'private' ) ) ) ) )
        {
        // InternalKim.g:4011:4: ({...}? => ( ({...}? => ( (lv_private_2_0= 'private' ) ) ) ) )
        // InternalKim.g:4012:5: {...}? => ( ({...}? => ( (lv_private_2_0= 'private' ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred165_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 0)");
        }
        // InternalKim.g:4012:106: ( ({...}? => ( (lv_private_2_0= 'private' ) ) ) )
        // InternalKim.g:4013:6: ({...}? => ( (lv_private_2_0= 'private' ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 0);
        // InternalKim.g:4016:9: ({...}? => ( (lv_private_2_0= 'private' ) ) )
        // InternalKim.g:4016:10: {...}? => ( (lv_private_2_0= 'private' ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred165_InternalKim", "true");
        }
        // InternalKim.g:4016:19: ( (lv_private_2_0= 'private' ) )
        // InternalKim.g:4016:20: (lv_private_2_0= 'private' )
        {
        // InternalKim.g:4016:20: (lv_private_2_0= 'private' )
        // InternalKim.g:4017:10: lv_private_2_0= 'private'
        {
        lv_private_2_0=(Token)match(input,20,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred165_InternalKim

    // $ANTLR start synpred166_InternalKim
    public final void synpred166_InternalKim_fragment() throws RecognitionException {   
        Token lv_inactive_3_0=null;

        // InternalKim.g:4034:4: ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) )
        // InternalKim.g:4034:4: ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) )
        {
        // InternalKim.g:4034:4: ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) )
        // InternalKim.g:4035:5: {...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred166_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 1)");
        }
        // InternalKim.g:4035:106: ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) )
        // InternalKim.g:4036:6: ({...}? => ( (lv_inactive_3_0= 'void' ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 1);
        // InternalKim.g:4039:9: ({...}? => ( (lv_inactive_3_0= 'void' ) ) )
        // InternalKim.g:4039:10: {...}? => ( (lv_inactive_3_0= 'void' ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred166_InternalKim", "true");
        }
        // InternalKim.g:4039:19: ( (lv_inactive_3_0= 'void' ) )
        // InternalKim.g:4039:20: (lv_inactive_3_0= 'void' )
        {
        // InternalKim.g:4039:20: (lv_inactive_3_0= 'void' )
        // InternalKim.g:4040:10: lv_inactive_3_0= 'void'
        {
        lv_inactive_3_0=(Token)match(input,19,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred166_InternalKim

    // $ANTLR start synpred172_InternalKim
    public final void synpred172_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_imported_11_0 = null;

        EObject lv_imported_13_0 = null;


        // InternalKim.g:4144:4: ( ({...}? => ( ({...}? => (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* ) ) ) ) )
        // InternalKim.g:4144:4: ({...}? => ( ({...}? => (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* ) ) ) )
        {
        // InternalKim.g:4144:4: ({...}? => ( ({...}? => (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* ) ) ) )
        // InternalKim.g:4145:5: {...}? => ( ({...}? => (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred172_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 0)");
        }
        // InternalKim.g:4145:106: ( ({...}? => (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* ) ) )
        // InternalKim.g:4146:6: ({...}? => (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 0);
        // InternalKim.g:4149:9: ({...}? => (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* ) )
        // InternalKim.g:4149:10: {...}? => (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred172_InternalKim", "true");
        }
        // InternalKim.g:4149:19: (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* )
        // InternalKim.g:4149:20: otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )*
        {
        otherlv_10=(Token)match(input,27,FOLLOW_60); if (state.failed) return ;
        // InternalKim.g:4153:9: ( (lv_imported_11_0= ruleImport ) )
        // InternalKim.g:4154:10: (lv_imported_11_0= ruleImport )
        {
        // InternalKim.g:4154:10: (lv_imported_11_0= ruleImport )
        // InternalKim.g:4155:11: lv_imported_11_0= ruleImport
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getNamespaceAccess().getImportedImportParserRuleCall_5_0_1_0());
          										
        }
        pushFollow(FOLLOW_29);
        lv_imported_11_0=ruleImport();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:4172:9: ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )*
        loop357:
        do {
            int alt357=2;
            int LA357_0 = input.LA(1);

            if ( (LA357_0==22) ) {
                alt357=1;
            }


            switch (alt357) {
        	case 1 :
        	    // InternalKim.g:4173:10: ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) )
        	    {
        	    // InternalKim.g:4173:10: ( ( ',' )=>otherlv_12= ',' )
        	    // InternalKim.g:4174:11: ( ',' )=>otherlv_12= ','
        	    {
        	    otherlv_12=(Token)match(input,22,FOLLOW_60); if (state.failed) return ;

        	    }

        	    // InternalKim.g:4180:10: ( (lv_imported_13_0= ruleImport ) )
        	    // InternalKim.g:4181:11: (lv_imported_13_0= ruleImport )
        	    {
        	    // InternalKim.g:4181:11: (lv_imported_13_0= ruleImport )
        	    // InternalKim.g:4182:12: lv_imported_13_0= ruleImport
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getNamespaceAccess().getImportedImportParserRuleCall_5_0_2_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_29);
        	    lv_imported_13_0=ruleImport();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop357;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred172_InternalKim

    // $ANTLR start synpred174_InternalKim
    public final void synpred174_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_14=null;
        Token otherlv_16=null;
        EObject lv_owlImports_15_0 = null;

        EObject lv_owlImports_17_0 = null;


        // InternalKim.g:4206:4: ( ({...}? => ( ({...}? => (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* ) ) ) ) )
        // InternalKim.g:4206:4: ({...}? => ( ({...}? => (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* ) ) ) )
        {
        // InternalKim.g:4206:4: ({...}? => ( ({...}? => (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* ) ) ) )
        // InternalKim.g:4207:5: {...}? => ( ({...}? => (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred174_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 1)");
        }
        // InternalKim.g:4207:106: ( ({...}? => (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* ) ) )
        // InternalKim.g:4208:6: ({...}? => (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 1);
        // InternalKim.g:4211:9: ({...}? => (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* ) )
        // InternalKim.g:4211:10: {...}? => (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred174_InternalKim", "true");
        }
        // InternalKim.g:4211:19: (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* )
        // InternalKim.g:4211:20: otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )*
        {
        otherlv_14=(Token)match(input,77,FOLLOW_62); if (state.failed) return ;
        // InternalKim.g:4215:9: ( (lv_owlImports_15_0= ruleOwlImport ) )
        // InternalKim.g:4216:10: (lv_owlImports_15_0= ruleOwlImport )
        {
        // InternalKim.g:4216:10: (lv_owlImports_15_0= ruleOwlImport )
        // InternalKim.g:4217:11: lv_owlImports_15_0= ruleOwlImport
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getNamespaceAccess().getOwlImportsOwlImportParserRuleCall_5_1_1_0());
          										
        }
        pushFollow(FOLLOW_29);
        lv_owlImports_15_0=ruleOwlImport();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:4234:9: (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )*
        loop358:
        do {
            int alt358=2;
            int LA358_0 = input.LA(1);

            if ( (LA358_0==22) ) {
                alt358=1;
            }


            switch (alt358) {
        	case 1 :
        	    // InternalKim.g:4235:10: otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) )
        	    {
        	    otherlv_16=(Token)match(input,22,FOLLOW_62); if (state.failed) return ;
        	    // InternalKim.g:4239:10: ( (lv_owlImports_17_0= ruleOwlImport ) )
        	    // InternalKim.g:4240:11: (lv_owlImports_17_0= ruleOwlImport )
        	    {
        	    // InternalKim.g:4240:11: (lv_owlImports_17_0= ruleOwlImport )
        	    // InternalKim.g:4241:12: lv_owlImports_17_0= ruleOwlImport
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getNamespaceAccess().getOwlImportsOwlImportParserRuleCall_5_1_2_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_29);
        	    lv_owlImports_17_0=ruleOwlImport();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop358;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred174_InternalKim

    // $ANTLR start synpred177_InternalKim
    public final void synpred177_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_18=null;
        Token otherlv_20=null;
        EObject lv_coverage_19_0 = null;

        EObject lv_coverage_21_0 = null;


        // InternalKim.g:4265:4: ( ({...}? => ( ({...}? => (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* ) ) ) ) )
        // InternalKim.g:4265:4: ({...}? => ( ({...}? => (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* ) ) ) )
        {
        // InternalKim.g:4265:4: ({...}? => ( ({...}? => (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* ) ) ) )
        // InternalKim.g:4266:5: {...}? => ( ({...}? => (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred177_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 2)");
        }
        // InternalKim.g:4266:106: ( ({...}? => (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* ) ) )
        // InternalKim.g:4267:6: ({...}? => (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 2);
        // InternalKim.g:4270:9: ({...}? => (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* ) )
        // InternalKim.g:4270:10: {...}? => (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred177_InternalKim", "true");
        }
        // InternalKim.g:4270:19: (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* )
        // InternalKim.g:4270:20: otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )*
        {
        otherlv_18=(Token)match(input,78,FOLLOW_19); if (state.failed) return ;
        // InternalKim.g:4274:9: ( (lv_coverage_19_0= ruleFunction ) )
        // InternalKim.g:4275:10: (lv_coverage_19_0= ruleFunction )
        {
        // InternalKim.g:4275:10: (lv_coverage_19_0= ruleFunction )
        // InternalKim.g:4276:11: lv_coverage_19_0= ruleFunction
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getNamespaceAccess().getCoverageFunctionParserRuleCall_5_2_1_0());
          										
        }
        pushFollow(FOLLOW_29);
        lv_coverage_19_0=ruleFunction();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:4293:9: ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )*
        loop359:
        do {
            int alt359=2;
            int LA359_0 = input.LA(1);

            if ( (LA359_0==22) ) {
                alt359=1;
            }


            switch (alt359) {
        	case 1 :
        	    // InternalKim.g:4294:10: ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) )
        	    {
        	    // InternalKim.g:4294:10: ( ( ',' )=>otherlv_20= ',' )
        	    // InternalKim.g:4295:11: ( ',' )=>otherlv_20= ','
        	    {
        	    otherlv_20=(Token)match(input,22,FOLLOW_19); if (state.failed) return ;

        	    }

        	    // InternalKim.g:4301:10: ( (lv_coverage_21_0= ruleFunction ) )
        	    // InternalKim.g:4302:11: (lv_coverage_21_0= ruleFunction )
        	    {
        	    // InternalKim.g:4302:11: (lv_coverage_21_0= ruleFunction )
        	    // InternalKim.g:4303:12: lv_coverage_21_0= ruleFunction
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getNamespaceAccess().getCoverageFunctionParserRuleCall_5_2_2_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_29);
        	    lv_coverage_21_0=ruleFunction();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop359;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred177_InternalKim

    // $ANTLR start synpred179_InternalKim
    public final void synpred179_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_22=null;
        Token otherlv_23=null;
        Token lv_rootDomain_24_0=null;
        EObject lv_domainConcept_25_0 = null;


        // InternalKim.g:4327:4: ( ({...}? => ( ({...}? => (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) ) ) ) ) )
        // InternalKim.g:4327:4: ({...}? => ( ({...}? => (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) ) ) ) )
        {
        // InternalKim.g:4327:4: ({...}? => ( ({...}? => (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) ) ) ) )
        // InternalKim.g:4328:5: {...}? => ( ({...}? => (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 3) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred179_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 3)");
        }
        // InternalKim.g:4328:106: ( ({...}? => (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) ) ) )
        // InternalKim.g:4329:6: ({...}? => (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 3);
        // InternalKim.g:4332:9: ({...}? => (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) ) )
        // InternalKim.g:4332:10: {...}? => (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred179_InternalKim", "true");
        }
        // InternalKim.g:4332:19: (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) )
        // InternalKim.g:4332:20: otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) )
        {
        otherlv_22=(Token)match(input,46,FOLLOW_63); if (state.failed) return ;
        otherlv_23=(Token)match(input,79,FOLLOW_64); if (state.failed) return ;
        // InternalKim.g:4340:9: ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) )
        int alt360=2;
        int LA360_0 = input.LA(1);

        if ( (LA360_0==80) ) {
            alt360=1;
        }
        else if ( (LA360_0==RULE_LOWERCASE_ID||LA360_0==RULE_CAMELCASE_ID||LA360_0==34||(LA360_0>=108 && LA360_0<=109)||(LA360_0>=116 && LA360_0<=117)||(LA360_0>=119 && LA360_0<=130)) ) {
            alt360=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 360, 0, input);

            throw nvae;
        }
        switch (alt360) {
            case 1 :
                // InternalKim.g:4341:10: ( (lv_rootDomain_24_0= 'root' ) )
                {
                // InternalKim.g:4341:10: ( (lv_rootDomain_24_0= 'root' ) )
                // InternalKim.g:4342:11: (lv_rootDomain_24_0= 'root' )
                {
                // InternalKim.g:4342:11: (lv_rootDomain_24_0= 'root' )
                // InternalKim.g:4343:12: lv_rootDomain_24_0= 'root'
                {
                lv_rootDomain_24_0=(Token)match(input,80,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:4356:10: ( (lv_domainConcept_25_0= ruleConcept ) )
                {
                // InternalKim.g:4356:10: ( (lv_domainConcept_25_0= ruleConcept ) )
                // InternalKim.g:4357:11: (lv_domainConcept_25_0= ruleConcept )
                {
                // InternalKim.g:4357:11: (lv_domainConcept_25_0= ruleConcept )
                // InternalKim.g:4358:12: lv_domainConcept_25_0= ruleConcept
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getNamespaceAccess().getDomainConceptConceptParserRuleCall_5_3_2_1_0());
                  											
                }
                pushFollow(FOLLOW_2);
                lv_domainConcept_25_0=ruleConcept();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred179_InternalKim

    // $ANTLR start synpred181_InternalKim
    public final void synpred181_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_26=null;
        Token otherlv_27=null;
        Token otherlv_29=null;
        AntlrDatatypeRuleToken lv_disjointNamespaces_28_0 = null;

        AntlrDatatypeRuleToken lv_disjointNamespaces_30_0 = null;


        // InternalKim.g:4382:4: ( ({...}? => ( ({...}? => (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) ) ) ) ) )
        // InternalKim.g:4382:4: ({...}? => ( ({...}? => (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) ) ) ) )
        {
        // InternalKim.g:4382:4: ({...}? => ( ({...}? => (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) ) ) ) )
        // InternalKim.g:4383:5: {...}? => ( ({...}? => (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 4) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred181_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 4)");
        }
        // InternalKim.g:4383:106: ( ({...}? => (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) ) ) )
        // InternalKim.g:4384:6: ({...}? => (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 4);
        // InternalKim.g:4387:9: ({...}? => (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) ) )
        // InternalKim.g:4387:10: {...}? => (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred181_InternalKim", "true");
        }
        // InternalKim.g:4387:19: (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) )
        // InternalKim.g:4387:20: otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* )
        {
        otherlv_26=(Token)match(input,81,FOLLOW_65); if (state.failed) return ;
        otherlv_27=(Token)match(input,38,FOLLOW_19); if (state.failed) return ;
        // InternalKim.g:4395:9: ( (lv_disjointNamespaces_28_0= rulePathName ) )
        // InternalKim.g:4396:10: (lv_disjointNamespaces_28_0= rulePathName )
        {
        // InternalKim.g:4396:10: (lv_disjointNamespaces_28_0= rulePathName )
        // InternalKim.g:4397:11: lv_disjointNamespaces_28_0= rulePathName
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getNamespaceAccess().getDisjointNamespacesPathNameParserRuleCall_5_4_2_0());
          										
        }
        pushFollow(FOLLOW_66);
        lv_disjointNamespaces_28_0=rulePathName();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:4414:9: (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* )
        // InternalKim.g:4415:10: otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )*
        {
        otherlv_29=(Token)match(input,22,FOLLOW_169); if (state.failed) return ;
        // InternalKim.g:4419:10: ( (lv_disjointNamespaces_30_0= rulePathName ) )*
        loop361:
        do {
            int alt361=2;
            int LA361_0 = input.LA(1);

            if ( (LA361_0==RULE_LOWERCASE_ID) ) {
                alt361=1;
            }


            switch (alt361) {
        	case 1 :
        	    // InternalKim.g:4420:11: (lv_disjointNamespaces_30_0= rulePathName )
        	    {
        	    // InternalKim.g:4420:11: (lv_disjointNamespaces_30_0= rulePathName )
        	    // InternalKim.g:4421:12: lv_disjointNamespaces_30_0= rulePathName
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getNamespaceAccess().getDisjointNamespacesPathNameParserRuleCall_5_4_3_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_169);
        	    lv_disjointNamespaces_30_0=rulePathName();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop361;
            }
        } while (true);


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred181_InternalKim

    // $ANTLR start synpred182_InternalKim
    public final void synpred182_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_31=null;
        AntlrDatatypeRuleToken lv_version_32_0 = null;


        // InternalKim.g:4445:4: ( ({...}? => ( ({...}? => (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) ) ) ) ) )
        // InternalKim.g:4445:4: ({...}? => ( ({...}? => (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) ) ) ) )
        {
        // InternalKim.g:4445:4: ({...}? => ( ({...}? => (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) ) ) ) )
        // InternalKim.g:4446:5: {...}? => ( ({...}? => (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 5) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred182_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 5)");
        }
        // InternalKim.g:4446:106: ( ({...}? => (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) ) ) )
        // InternalKim.g:4447:6: ({...}? => (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 5);
        // InternalKim.g:4450:9: ({...}? => (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) ) )
        // InternalKim.g:4450:10: {...}? => (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred182_InternalKim", "true");
        }
        // InternalKim.g:4450:19: (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) )
        // InternalKim.g:4450:20: otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) )
        {
        otherlv_31=(Token)match(input,82,FOLLOW_68); if (state.failed) return ;
        // InternalKim.g:4454:9: ( (lv_version_32_0= ruleVersionNumber ) )
        // InternalKim.g:4455:10: (lv_version_32_0= ruleVersionNumber )
        {
        // InternalKim.g:4455:10: (lv_version_32_0= ruleVersionNumber )
        // InternalKim.g:4456:11: lv_version_32_0= ruleVersionNumber
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getNamespaceAccess().getVersionVersionNumberParserRuleCall_5_5_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_version_32_0=ruleVersionNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred182_InternalKim

    // $ANTLR start synpred185_InternalKim
    public final void synpred185_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_34=null;
        Token otherlv_35=null;
        AntlrDatatypeRuleToken lv_lookupNamespace_36_0 = null;


        // InternalKim.g:4490:9: ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) )
        // InternalKim.g:4490:9: ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) )
        {
        // InternalKim.g:4490:9: ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) )
        // InternalKim.g:4491:10: {...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred185_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 0)");
        }
        // InternalKim.g:4491:113: ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) )
        // InternalKim.g:4492:11: ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 0);
        // InternalKim.g:4495:14: ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) )
        // InternalKim.g:4495:15: {...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred185_InternalKim", "true");
        }
        // InternalKim.g:4495:24: (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? )
        // InternalKim.g:4495:25: otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )?
        {
        otherlv_34=(Token)match(input,83,FOLLOW_170); if (state.failed) return ;
        // InternalKim.g:4499:14: (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )?
        int alt364=2;
        int LA364_0 = input.LA(1);

        if ( (LA364_0==84) ) {
            alt364=1;
        }
        switch (alt364) {
            case 1 :
                // InternalKim.g:4500:15: otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )*
                {
                otherlv_35=(Token)match(input,84,FOLLOW_169); if (state.failed) return ;
                // InternalKim.g:4504:15: ( (lv_lookupNamespace_36_0= rulePathName ) )*
                loop363:
                do {
                    int alt363=2;
                    int LA363_0 = input.LA(1);

                    if ( (LA363_0==RULE_LOWERCASE_ID) ) {
                        alt363=1;
                    }


                    switch (alt363) {
                	case 1 :
                	    // InternalKim.g:4505:16: (lv_lookupNamespace_36_0= rulePathName )
                	    {
                	    // InternalKim.g:4505:16: (lv_lookupNamespace_36_0= rulePathName )
                	    // InternalKim.g:4506:17: lv_lookupNamespace_36_0= rulePathName
                	    {
                	    if ( state.backtracking==0 ) {

                	      																	newCompositeNode(grammarAccess.getNamespaceAccess().getLookupNamespacePathNameParserRuleCall_5_6_0_1_1_0());
                	      																
                	    }
                	    pushFollow(FOLLOW_169);
                	    lv_lookupNamespace_36_0=rulePathName();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }
                	    break;

                	default :
                	    break loop363;
                    }
                } while (true);


                }
                break;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred185_InternalKim

    // $ANTLR start synpred187_InternalKim
    public final void synpred187_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_37=null;
        AntlrDatatypeRuleToken lv_blacklistNamespace_38_0 = null;


        // InternalKim.g:4530:9: ( ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) )
        // InternalKim.g:4530:9: ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) )
        {
        // InternalKim.g:4530:9: ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) )
        // InternalKim.g:4531:10: {...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred187_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 1)");
        }
        // InternalKim.g:4531:113: ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) )
        // InternalKim.g:4532:11: ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 1);
        // InternalKim.g:4535:14: ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) )
        // InternalKim.g:4535:15: {...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred187_InternalKim", "true");
        }
        // InternalKim.g:4535:24: (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* )
        // InternalKim.g:4535:25: otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )*
        {
        otherlv_37=(Token)match(input,85,FOLLOW_169); if (state.failed) return ;
        // InternalKim.g:4539:14: ( (lv_blacklistNamespace_38_0= rulePathName ) )*
        loop365:
        do {
            int alt365=2;
            int LA365_0 = input.LA(1);

            if ( (LA365_0==RULE_LOWERCASE_ID) ) {
                alt365=1;
            }


            switch (alt365) {
        	case 1 :
        	    // InternalKim.g:4540:15: (lv_blacklistNamespace_38_0= rulePathName )
        	    {
        	    // InternalKim.g:4540:15: (lv_blacklistNamespace_38_0= rulePathName )
        	    // InternalKim.g:4541:16: lv_blacklistNamespace_38_0= rulePathName
        	    {
        	    if ( state.backtracking==0 ) {

        	      																newCompositeNode(grammarAccess.getNamespaceAccess().getBlacklistNamespacePathNameParserRuleCall_5_6_1_1_0());
        	      															
        	    }
        	    pushFollow(FOLLOW_169);
        	    lv_blacklistNamespace_38_0=rulePathName();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop365;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred187_InternalKim

    // $ANTLR start synpred188_InternalKim
    public final void synpred188_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_39=null;
        EObject lv_weights_40_0 = null;


        // InternalKim.g:4564:9: ( ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )
        // InternalKim.g:4564:9: ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) )
        {
        // InternalKim.g:4564:9: ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) )
        // InternalKim.g:4565:10: {...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred188_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 2)");
        }
        // InternalKim.g:4565:113: ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) )
        // InternalKim.g:4566:11: ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 2);
        // InternalKim.g:4569:14: ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) )
        // InternalKim.g:4569:15: {...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred188_InternalKim", "true");
        }
        // InternalKim.g:4569:24: (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) )
        // InternalKim.g:4569:25: otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) )
        {
        otherlv_39=(Token)match(input,27,FOLLOW_26); if (state.failed) return ;
        // InternalKim.g:4573:14: ( (lv_weights_40_0= ruleMetadata ) )
        // InternalKim.g:4574:15: (lv_weights_40_0= ruleMetadata )
        {
        // InternalKim.g:4574:15: (lv_weights_40_0= ruleMetadata )
        // InternalKim.g:4575:16: lv_weights_40_0= ruleMetadata
        {
        if ( state.backtracking==0 ) {

          																newCompositeNode(grammarAccess.getNamespaceAccess().getWeightsMetadataParserRuleCall_5_6_2_1_0());
          															
        }
        pushFollow(FOLLOW_2);
        lv_weights_40_0=ruleMetadata();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred188_InternalKim

    // $ANTLR start synpred189_InternalKim
    public final void synpred189_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_34=null;
        Token otherlv_35=null;
        Token otherlv_37=null;
        Token otherlv_39=null;
        AntlrDatatypeRuleToken lv_lookupNamespace_36_0 = null;

        AntlrDatatypeRuleToken lv_blacklistNamespace_38_0 = null;

        EObject lv_weights_40_0 = null;


        // InternalKim.g:4479:4: ( ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )
        // InternalKim.g:4479:4: ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) )
        {
        // InternalKim.g:4479:4: ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) )
        // InternalKim.g:4480:5: {...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 6) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred189_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 6)");
        }
        // InternalKim.g:4480:106: ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) )
        // InternalKim.g:4481:6: ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 6);
        // InternalKim.g:4484:9: ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) )
        // InternalKim.g:4484:10: {...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred189_InternalKim", "true");
        }
        // InternalKim.g:4484:19: ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) )
        // InternalKim.g:4484:20: ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) )
        {
        // InternalKim.g:4484:20: ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) )
        // InternalKim.g:4485:10: ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?)
        {
        getUnorderedGroupHelper().enter(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6());
        // InternalKim.g:4488:10: ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?)
        // InternalKim.g:4489:11: ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?
        {
        // InternalKim.g:4489:11: ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+
        int cnt369=0;
        loop369:
        do {
            int alt369=4;
            int LA369_0 = input.LA(1);

            if ( LA369_0 == 83 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 0) ) {
                alt369=1;
            }
            else if ( LA369_0 == 85 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 1) ) {
                alt369=2;
            }
            else if ( LA369_0 == 27 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 2) ) {
                alt369=3;
            }


            switch (alt369) {
        	case 1 :
        	    // InternalKim.g:4490:9: ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) )
        	    {
        	    // InternalKim.g:4490:9: ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) )
        	    // InternalKim.g:4491:10: {...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 0) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred189_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 0)");
        	    }
        	    // InternalKim.g:4491:113: ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) )
        	    // InternalKim.g:4492:11: ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 0);
        	    // InternalKim.g:4495:14: ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) )
        	    // InternalKim.g:4495:15: {...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred189_InternalKim", "true");
        	    }
        	    // InternalKim.g:4495:24: (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? )
        	    // InternalKim.g:4495:25: otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )?
        	    {
        	    otherlv_34=(Token)match(input,83,FOLLOW_171); if (state.failed) return ;
        	    // InternalKim.g:4499:14: (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )?
        	    int alt367=2;
        	    int LA367_0 = input.LA(1);

        	    if ( (LA367_0==84) ) {
        	        alt367=1;
        	    }
        	    switch (alt367) {
        	        case 1 :
        	            // InternalKim.g:4500:15: otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )*
        	            {
        	            otherlv_35=(Token)match(input,84,FOLLOW_172); if (state.failed) return ;
        	            // InternalKim.g:4504:15: ( (lv_lookupNamespace_36_0= rulePathName ) )*
        	            loop366:
        	            do {
        	                int alt366=2;
        	                int LA366_0 = input.LA(1);

        	                if ( (LA366_0==RULE_LOWERCASE_ID) ) {
        	                    alt366=1;
        	                }


        	                switch (alt366) {
        	            	case 1 :
        	            	    // InternalKim.g:4505:16: (lv_lookupNamespace_36_0= rulePathName )
        	            	    {
        	            	    // InternalKim.g:4505:16: (lv_lookupNamespace_36_0= rulePathName )
        	            	    // InternalKim.g:4506:17: lv_lookupNamespace_36_0= rulePathName
        	            	    {
        	            	    if ( state.backtracking==0 ) {

        	            	      																	newCompositeNode(grammarAccess.getNamespaceAccess().getLookupNamespacePathNameParserRuleCall_5_6_0_1_1_0());
        	            	      																
        	            	    }
        	            	    pushFollow(FOLLOW_172);
        	            	    lv_lookupNamespace_36_0=rulePathName();

        	            	    state._fsp--;
        	            	    if (state.failed) return ;

        	            	    }


        	            	    }
        	            	    break;

        	            	default :
        	            	    break loop366;
        	                }
        	            } while (true);


        	            }
        	            break;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 2 :
        	    // InternalKim.g:4530:9: ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) )
        	    {
        	    // InternalKim.g:4530:9: ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) )
        	    // InternalKim.g:4531:10: {...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 1) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred189_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 1)");
        	    }
        	    // InternalKim.g:4531:113: ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) )
        	    // InternalKim.g:4532:11: ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 1);
        	    // InternalKim.g:4535:14: ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) )
        	    // InternalKim.g:4535:15: {...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred189_InternalKim", "true");
        	    }
        	    // InternalKim.g:4535:24: (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* )
        	    // InternalKim.g:4535:25: otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )*
        	    {
        	    otherlv_37=(Token)match(input,85,FOLLOW_172); if (state.failed) return ;
        	    // InternalKim.g:4539:14: ( (lv_blacklistNamespace_38_0= rulePathName ) )*
        	    loop368:
        	    do {
        	        int alt368=2;
        	        int LA368_0 = input.LA(1);

        	        if ( (LA368_0==RULE_LOWERCASE_ID) ) {
        	            alt368=1;
        	        }


        	        switch (alt368) {
        	    	case 1 :
        	    	    // InternalKim.g:4540:15: (lv_blacklistNamespace_38_0= rulePathName )
        	    	    {
        	    	    // InternalKim.g:4540:15: (lv_blacklistNamespace_38_0= rulePathName )
        	    	    // InternalKim.g:4541:16: lv_blacklistNamespace_38_0= rulePathName
        	    	    {
        	    	    if ( state.backtracking==0 ) {

        	    	      																newCompositeNode(grammarAccess.getNamespaceAccess().getBlacklistNamespacePathNameParserRuleCall_5_6_1_1_0());
        	    	      															
        	    	    }
        	    	    pushFollow(FOLLOW_172);
        	    	    lv_blacklistNamespace_38_0=rulePathName();

        	    	    state._fsp--;
        	    	    if (state.failed) return ;

        	    	    }


        	    	    }
        	    	    break;

        	    	default :
        	    	    break loop368;
        	        }
        	    } while (true);


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 3 :
        	    // InternalKim.g:4564:9: ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) )
        	    {
        	    // InternalKim.g:4564:9: ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) )
        	    // InternalKim.g:4565:10: {...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 2) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred189_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 2)");
        	    }
        	    // InternalKim.g:4565:113: ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) )
        	    // InternalKim.g:4566:11: ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 2);
        	    // InternalKim.g:4569:14: ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) )
        	    // InternalKim.g:4569:15: {...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred189_InternalKim", "true");
        	    }
        	    // InternalKim.g:4569:24: (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) )
        	    // InternalKim.g:4569:25: otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) )
        	    {
        	    otherlv_39=(Token)match(input,27,FOLLOW_26); if (state.failed) return ;
        	    // InternalKim.g:4573:14: ( (lv_weights_40_0= ruleMetadata ) )
        	    // InternalKim.g:4574:15: (lv_weights_40_0= ruleMetadata )
        	    {
        	    // InternalKim.g:4574:15: (lv_weights_40_0= ruleMetadata )
        	    // InternalKim.g:4575:16: lv_weights_40_0= ruleMetadata
        	    {
        	    if ( state.backtracking==0 ) {

        	      																newCompositeNode(grammarAccess.getNamespaceAccess().getWeightsMetadataParserRuleCall_5_6_2_1_0());
        	      															
        	    }
        	    pushFollow(FOLLOW_173);
        	    lv_weights_40_0=ruleMetadata();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;

        	default :
        	    if ( cnt369 >= 1 ) break loop369;
        	    if (state.backtracking>0) {state.failed=true; return ;}
                    EarlyExitException eee =
                        new EarlyExitException(369, input);
                    throw eee;
            }
            cnt369++;
        } while (true);

        if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6()) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred189_InternalKim", "getUnorderedGroupHelper().canLeave(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6())");
        }

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred189_InternalKim

    // $ANTLR start synpred206_InternalKim
    public final void synpred206_InternalKim_fragment() throws RecognitionException {   
        Token lv_docstring_2_0=null;

        // InternalKim.g:5190:9: ( (lv_docstring_2_0= RULE_STRING ) )
        // InternalKim.g:5190:9: (lv_docstring_2_0= RULE_STRING )
        {
        // InternalKim.g:5190:9: (lv_docstring_2_0= RULE_STRING )
        // InternalKim.g:5191:10: lv_docstring_2_0= RULE_STRING
        {
        lv_docstring_2_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred206_InternalKim

    // $ANTLR start synpred209_InternalKim
    public final void synpred209_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_8=null;
        Token otherlv_10=null;
        EObject lv_observations_9_0 = null;


        // InternalKim.g:5263:10: ( (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' ) )
        // InternalKim.g:5263:10: (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' )
        {
        // InternalKim.g:5263:10: (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' )
        // InternalKim.g:5264:11: otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')'
        {
        otherlv_8=(Token)match(input,34,FOLLOW_82); if (state.failed) return ;
        // InternalKim.g:5268:11: ( (lv_observations_9_0= ruleObserveStatementBody ) )
        // InternalKim.g:5269:12: (lv_observations_9_0= ruleObserveStatementBody )
        {
        // InternalKim.g:5269:12: (lv_observations_9_0= ruleObserveStatementBody )
        // InternalKim.g:5270:13: lv_observations_9_0= ruleObserveStatementBody
        {
        if ( state.backtracking==0 ) {

          													newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getObservationsObserveStatementBodyParserRuleCall_0_3_1_0_1_0());
          												
        }
        pushFollow(FOLLOW_83);
        lv_observations_9_0=ruleObserveStatementBody();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_10=(Token)match(input,37,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred209_InternalKim

    // $ANTLR start synpred210_InternalKim
    public final void synpred210_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_13=null;
        Token otherlv_15=null;
        EObject lv_observations_14_0 = null;


        // InternalKim.g:5319:11: ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) )
        // InternalKim.g:5319:11: (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' )
        {
        // InternalKim.g:5319:11: (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' )
        // InternalKim.g:5320:12: otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')'
        {
        otherlv_13=(Token)match(input,34,FOLLOW_82); if (state.failed) return ;
        // InternalKim.g:5324:12: ( (lv_observations_14_0= ruleObserveStatementBody ) )
        // InternalKim.g:5325:13: (lv_observations_14_0= ruleObserveStatementBody )
        {
        // InternalKim.g:5325:13: (lv_observations_14_0= ruleObserveStatementBody )
        // InternalKim.g:5326:14: lv_observations_14_0= ruleObserveStatementBody
        {
        if ( state.backtracking==0 ) {

          														newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getObservationsObserveStatementBodyParserRuleCall_0_3_2_1_0_1_0());
          													
        }
        pushFollow(FOLLOW_83);
        lv_observations_14_0=ruleObserveStatementBody();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_15=(Token)match(input,37,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred210_InternalKim

    // $ANTLR start synpred215_InternalKim
    public final void synpred215_InternalKim_fragment() throws RecognitionException {   
        Token lv_docstring_2_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        EObject lv_concept_1_0 = null;

        AntlrDatatypeRuleToken lv_parents_4_0 = null;

        AntlrDatatypeRuleToken lv_parents_6_0 = null;

        EObject lv_observations_9_0 = null;

        EObject lv_states_11_0 = null;

        EObject lv_observations_14_0 = null;

        EObject lv_states_16_0 = null;

        EObject lv_accessor_18_0 = null;


        // InternalKim.g:5165:3: ( ({...}? => ( ({...}? => ( ( (lv_concept_1_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_2_0= RULE_STRING ) )? (otherlv_3= 'extends' ( (lv_parents_4_0= rulePathName ) ) (otherlv_5= ',' ( (lv_parents_6_0= rulePathName ) ) )* )? (otherlv_7= 'observing' ( (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' ) | ( (lv_states_11_0= ruleObservableSemantics ) ) ) (otherlv_12= ',' ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) | ( (lv_states_16_0= ruleObservableSemantics ) ) ) )* )? (otherlv_17= 'using' ( (lv_accessor_18_0= ruleFunction ) )? )? ) ) ) ) )
        // InternalKim.g:5165:3: ({...}? => ( ({...}? => ( ( (lv_concept_1_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_2_0= RULE_STRING ) )? (otherlv_3= 'extends' ( (lv_parents_4_0= rulePathName ) ) (otherlv_5= ',' ( (lv_parents_6_0= rulePathName ) ) )* )? (otherlv_7= 'observing' ( (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' ) | ( (lv_states_11_0= ruleObservableSemantics ) ) ) (otherlv_12= ',' ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) | ( (lv_states_16_0= ruleObservableSemantics ) ) ) )* )? (otherlv_17= 'using' ( (lv_accessor_18_0= ruleFunction ) )? )? ) ) ) )
        {
        // InternalKim.g:5165:3: ({...}? => ( ({...}? => ( ( (lv_concept_1_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_2_0= RULE_STRING ) )? (otherlv_3= 'extends' ( (lv_parents_4_0= rulePathName ) ) (otherlv_5= ',' ( (lv_parents_6_0= rulePathName ) ) )* )? (otherlv_7= 'observing' ( (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' ) | ( (lv_states_11_0= ruleObservableSemantics ) ) ) (otherlv_12= ',' ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) | ( (lv_states_16_0= ruleObservableSemantics ) ) ) )* )? (otherlv_17= 'using' ( (lv_accessor_18_0= ruleFunction ) )? )? ) ) ) )
        // InternalKim.g:5166:4: {...}? => ( ({...}? => ( ( (lv_concept_1_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_2_0= RULE_STRING ) )? (otherlv_3= 'extends' ( (lv_parents_4_0= rulePathName ) ) (otherlv_5= ',' ( (lv_parents_6_0= rulePathName ) ) )* )? (otherlv_7= 'observing' ( (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' ) | ( (lv_states_11_0= ruleObservableSemantics ) ) ) (otherlv_12= ',' ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) | ( (lv_states_16_0= ruleObservableSemantics ) ) ) )* )? (otherlv_17= 'using' ( (lv_accessor_18_0= ruleFunction ) )? )? ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred215_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0)");
        }
        // InternalKim.g:5166:114: ( ({...}? => ( ( (lv_concept_1_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_2_0= RULE_STRING ) )? (otherlv_3= 'extends' ( (lv_parents_4_0= rulePathName ) ) (otherlv_5= ',' ( (lv_parents_6_0= rulePathName ) ) )* )? (otherlv_7= 'observing' ( (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' ) | ( (lv_states_11_0= ruleObservableSemantics ) ) ) (otherlv_12= ',' ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) | ( (lv_states_16_0= ruleObservableSemantics ) ) ) )* )? (otherlv_17= 'using' ( (lv_accessor_18_0= ruleFunction ) )? )? ) ) )
        // InternalKim.g:5167:5: ({...}? => ( ( (lv_concept_1_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_2_0= RULE_STRING ) )? (otherlv_3= 'extends' ( (lv_parents_4_0= rulePathName ) ) (otherlv_5= ',' ( (lv_parents_6_0= rulePathName ) ) )* )? (otherlv_7= 'observing' ( (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' ) | ( (lv_states_11_0= ruleObservableSemantics ) ) ) (otherlv_12= ',' ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) | ( (lv_states_16_0= ruleObservableSemantics ) ) ) )* )? (otherlv_17= 'using' ( (lv_accessor_18_0= ruleFunction ) )? )? ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0);
        // InternalKim.g:5170:8: ({...}? => ( ( (lv_concept_1_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_2_0= RULE_STRING ) )? (otherlv_3= 'extends' ( (lv_parents_4_0= rulePathName ) ) (otherlv_5= ',' ( (lv_parents_6_0= rulePathName ) ) )* )? (otherlv_7= 'observing' ( (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' ) | ( (lv_states_11_0= ruleObservableSemantics ) ) ) (otherlv_12= ',' ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) | ( (lv_states_16_0= ruleObservableSemantics ) ) ) )* )? (otherlv_17= 'using' ( (lv_accessor_18_0= ruleFunction ) )? )? ) )
        // InternalKim.g:5170:9: {...}? => ( ( (lv_concept_1_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_2_0= RULE_STRING ) )? (otherlv_3= 'extends' ( (lv_parents_4_0= rulePathName ) ) (otherlv_5= ',' ( (lv_parents_6_0= rulePathName ) ) )* )? (otherlv_7= 'observing' ( (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' ) | ( (lv_states_11_0= ruleObservableSemantics ) ) ) (otherlv_12= ',' ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) | ( (lv_states_16_0= ruleObservableSemantics ) ) ) )* )? (otherlv_17= 'using' ( (lv_accessor_18_0= ruleFunction ) )? )? )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred215_InternalKim", "true");
        }
        // InternalKim.g:5170:18: ( ( (lv_concept_1_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_2_0= RULE_STRING ) )? (otherlv_3= 'extends' ( (lv_parents_4_0= rulePathName ) ) (otherlv_5= ',' ( (lv_parents_6_0= rulePathName ) ) )* )? (otherlv_7= 'observing' ( (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' ) | ( (lv_states_11_0= ruleObservableSemantics ) ) ) (otherlv_12= ',' ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) | ( (lv_states_16_0= ruleObservableSemantics ) ) ) )* )? (otherlv_17= 'using' ( (lv_accessor_18_0= ruleFunction ) )? )? )
        // InternalKim.g:5170:19: ( (lv_concept_1_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_2_0= RULE_STRING ) )? (otherlv_3= 'extends' ( (lv_parents_4_0= rulePathName ) ) (otherlv_5= ',' ( (lv_parents_6_0= rulePathName ) ) )* )? (otherlv_7= 'observing' ( (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' ) | ( (lv_states_11_0= ruleObservableSemantics ) ) ) (otherlv_12= ',' ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) | ( (lv_states_16_0= ruleObservableSemantics ) ) ) )* )? (otherlv_17= 'using' ( (lv_accessor_18_0= ruleFunction ) )? )?
        {
        // InternalKim.g:5170:19: ( (lv_concept_1_0= ruleNamedObservableSemantics ) )
        // InternalKim.g:5171:9: (lv_concept_1_0= ruleNamedObservableSemantics )
        {
        // InternalKim.g:5171:9: (lv_concept_1_0= ruleNamedObservableSemantics )
        // InternalKim.g:5172:10: lv_concept_1_0= ruleNamedObservableSemantics
        {
        if ( state.backtracking==0 ) {

          										newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getConceptNamedObservableSemanticsParserRuleCall_0_0_0());
          									
        }
        pushFollow(FOLLOW_174);
        lv_concept_1_0=ruleNamedObservableSemantics();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:5189:8: ( (lv_docstring_2_0= RULE_STRING ) )?
        int alt378=2;
        int LA378_0 = input.LA(1);

        if ( (LA378_0==RULE_STRING) ) {
            alt378=1;
        }
        switch (alt378) {
            case 1 :
                // InternalKim.g:5190:9: (lv_docstring_2_0= RULE_STRING )
                {
                // InternalKim.g:5190:9: (lv_docstring_2_0= RULE_STRING )
                // InternalKim.g:5191:10: lv_docstring_2_0= RULE_STRING
                {
                lv_docstring_2_0=(Token)match(input,RULE_STRING,FOLLOW_175); if (state.failed) return ;

                }


                }
                break;

        }

        // InternalKim.g:5207:8: (otherlv_3= 'extends' ( (lv_parents_4_0= rulePathName ) ) (otherlv_5= ',' ( (lv_parents_6_0= rulePathName ) ) )* )?
        int alt380=2;
        int LA380_0 = input.LA(1);

        if ( (LA380_0==92) ) {
            alt380=1;
        }
        switch (alt380) {
            case 1 :
                // InternalKim.g:5208:9: otherlv_3= 'extends' ( (lv_parents_4_0= rulePathName ) ) (otherlv_5= ',' ( (lv_parents_6_0= rulePathName ) ) )*
                {
                otherlv_3=(Token)match(input,92,FOLLOW_19); if (state.failed) return ;
                // InternalKim.g:5212:9: ( (lv_parents_4_0= rulePathName ) )
                // InternalKim.g:5213:10: (lv_parents_4_0= rulePathName )
                {
                // InternalKim.g:5213:10: (lv_parents_4_0= rulePathName )
                // InternalKim.g:5214:11: lv_parents_4_0= rulePathName
                {
                if ( state.backtracking==0 ) {

                  											newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getParentsPathNameParserRuleCall_0_2_1_0());
                  										
                }
                pushFollow(FOLLOW_176);
                lv_parents_4_0=rulePathName();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalKim.g:5231:9: (otherlv_5= ',' ( (lv_parents_6_0= rulePathName ) ) )*
                loop379:
                do {
                    int alt379=2;
                    int LA379_0 = input.LA(1);

                    if ( (LA379_0==22) ) {
                        alt379=1;
                    }


                    switch (alt379) {
                	case 1 :
                	    // InternalKim.g:5232:10: otherlv_5= ',' ( (lv_parents_6_0= rulePathName ) )
                	    {
                	    otherlv_5=(Token)match(input,22,FOLLOW_19); if (state.failed) return ;
                	    // InternalKim.g:5236:10: ( (lv_parents_6_0= rulePathName ) )
                	    // InternalKim.g:5237:11: (lv_parents_6_0= rulePathName )
                	    {
                	    // InternalKim.g:5237:11: (lv_parents_6_0= rulePathName )
                	    // InternalKim.g:5238:12: lv_parents_6_0= rulePathName
                	    {
                	    if ( state.backtracking==0 ) {

                	      												newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getParentsPathNameParserRuleCall_0_2_2_1_0());
                	      											
                	    }
                	    pushFollow(FOLLOW_176);
                	    lv_parents_6_0=rulePathName();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop379;
                    }
                } while (true);


                }
                break;

        }

        // InternalKim.g:5257:8: (otherlv_7= 'observing' ( (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' ) | ( (lv_states_11_0= ruleObservableSemantics ) ) ) (otherlv_12= ',' ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) | ( (lv_states_16_0= ruleObservableSemantics ) ) ) )* )?
        int alt384=2;
        int LA384_0 = input.LA(1);

        if ( (LA384_0==26) ) {
            alt384=1;
        }
        switch (alt384) {
            case 1 :
                // InternalKim.g:5258:9: otherlv_7= 'observing' ( (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' ) | ( (lv_states_11_0= ruleObservableSemantics ) ) ) (otherlv_12= ',' ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) | ( (lv_states_16_0= ruleObservableSemantics ) ) ) )*
                {
                otherlv_7=(Token)match(input,26,FOLLOW_6); if (state.failed) return ;
                // InternalKim.g:5262:9: ( (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' ) | ( (lv_states_11_0= ruleObservableSemantics ) ) )
                int alt381=2;
                alt381 = dfa381.predict(input);
                switch (alt381) {
                    case 1 :
                        // InternalKim.g:5263:10: (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' )
                        {
                        // InternalKim.g:5263:10: (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' )
                        // InternalKim.g:5264:11: otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')'
                        {
                        otherlv_8=(Token)match(input,34,FOLLOW_82); if (state.failed) return ;
                        // InternalKim.g:5268:11: ( (lv_observations_9_0= ruleObserveStatementBody ) )
                        // InternalKim.g:5269:12: (lv_observations_9_0= ruleObserveStatementBody )
                        {
                        // InternalKim.g:5269:12: (lv_observations_9_0= ruleObserveStatementBody )
                        // InternalKim.g:5270:13: lv_observations_9_0= ruleObserveStatementBody
                        {
                        if ( state.backtracking==0 ) {

                          													newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getObservationsObserveStatementBodyParserRuleCall_0_3_1_0_1_0());
                          												
                        }
                        pushFollow(FOLLOW_83);
                        lv_observations_9_0=ruleObserveStatementBody();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }

                        otherlv_10=(Token)match(input,37,FOLLOW_177); if (state.failed) return ;

                        }


                        }
                        break;
                    case 2 :
                        // InternalKim.g:5293:10: ( (lv_states_11_0= ruleObservableSemantics ) )
                        {
                        // InternalKim.g:5293:10: ( (lv_states_11_0= ruleObservableSemantics ) )
                        // InternalKim.g:5294:11: (lv_states_11_0= ruleObservableSemantics )
                        {
                        // InternalKim.g:5294:11: (lv_states_11_0= ruleObservableSemantics )
                        // InternalKim.g:5295:12: lv_states_11_0= ruleObservableSemantics
                        {
                        if ( state.backtracking==0 ) {

                          												newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getStatesObservableSemanticsParserRuleCall_0_3_1_1_0());
                          											
                        }
                        pushFollow(FOLLOW_177);
                        lv_states_11_0=ruleObservableSemantics();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;

                }

                // InternalKim.g:5313:9: (otherlv_12= ',' ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) | ( (lv_states_16_0= ruleObservableSemantics ) ) ) )*
                loop383:
                do {
                    int alt383=2;
                    int LA383_0 = input.LA(1);

                    if ( (LA383_0==22) ) {
                        alt383=1;
                    }


                    switch (alt383) {
                	case 1 :
                	    // InternalKim.g:5314:10: otherlv_12= ',' ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) | ( (lv_states_16_0= ruleObservableSemantics ) ) )
                	    {
                	    otherlv_12=(Token)match(input,22,FOLLOW_6); if (state.failed) return ;
                	    // InternalKim.g:5318:10: ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) | ( (lv_states_16_0= ruleObservableSemantics ) ) )
                	    int alt382=2;
                	    alt382 = dfa382.predict(input);
                	    switch (alt382) {
                	        case 1 :
                	            // InternalKim.g:5319:11: (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' )
                	            {
                	            // InternalKim.g:5319:11: (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' )
                	            // InternalKim.g:5320:12: otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')'
                	            {
                	            otherlv_13=(Token)match(input,34,FOLLOW_82); if (state.failed) return ;
                	            // InternalKim.g:5324:12: ( (lv_observations_14_0= ruleObserveStatementBody ) )
                	            // InternalKim.g:5325:13: (lv_observations_14_0= ruleObserveStatementBody )
                	            {
                	            // InternalKim.g:5325:13: (lv_observations_14_0= ruleObserveStatementBody )
                	            // InternalKim.g:5326:14: lv_observations_14_0= ruleObserveStatementBody
                	            {
                	            if ( state.backtracking==0 ) {

                	              														newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getObservationsObserveStatementBodyParserRuleCall_0_3_2_1_0_1_0());
                	              													
                	            }
                	            pushFollow(FOLLOW_83);
                	            lv_observations_14_0=ruleObserveStatementBody();

                	            state._fsp--;
                	            if (state.failed) return ;

                	            }


                	            }

                	            otherlv_15=(Token)match(input,37,FOLLOW_177); if (state.failed) return ;

                	            }


                	            }
                	            break;
                	        case 2 :
                	            // InternalKim.g:5349:11: ( (lv_states_16_0= ruleObservableSemantics ) )
                	            {
                	            // InternalKim.g:5349:11: ( (lv_states_16_0= ruleObservableSemantics ) )
                	            // InternalKim.g:5350:12: (lv_states_16_0= ruleObservableSemantics )
                	            {
                	            // InternalKim.g:5350:12: (lv_states_16_0= ruleObservableSemantics )
                	            // InternalKim.g:5351:13: lv_states_16_0= ruleObservableSemantics
                	            {
                	            if ( state.backtracking==0 ) {

                	              													newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getStatesObservableSemanticsParserRuleCall_0_3_2_1_1_0());
                	              												
                	            }
                	            pushFollow(FOLLOW_177);
                	            lv_states_16_0=ruleObservableSemantics();

                	            state._fsp--;
                	            if (state.failed) return ;

                	            }


                	            }


                	            }
                	            break;

                	    }


                	    }
                	    break;

                	default :
                	    break loop383;
                    }
                } while (true);


                }
                break;

        }

        // InternalKim.g:5371:8: (otherlv_17= 'using' ( (lv_accessor_18_0= ruleFunction ) )? )?
        int alt386=2;
        int LA386_0 = input.LA(1);

        if ( (LA386_0==27) ) {
            alt386=1;
        }
        switch (alt386) {
            case 1 :
                // InternalKim.g:5372:9: otherlv_17= 'using' ( (lv_accessor_18_0= ruleFunction ) )?
                {
                otherlv_17=(Token)match(input,27,FOLLOW_169); if (state.failed) return ;
                // InternalKim.g:5376:9: ( (lv_accessor_18_0= ruleFunction ) )?
                int alt385=2;
                int LA385_0 = input.LA(1);

                if ( (LA385_0==RULE_LOWERCASE_ID) ) {
                    alt385=1;
                }
                switch (alt385) {
                    case 1 :
                        // InternalKim.g:5377:10: (lv_accessor_18_0= ruleFunction )
                        {
                        // InternalKim.g:5377:10: (lv_accessor_18_0= ruleFunction )
                        // InternalKim.g:5378:11: lv_accessor_18_0= ruleFunction
                        {
                        if ( state.backtracking==0 ) {

                          											newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getAccessorFunctionParserRuleCall_0_4_1_0());
                          										
                        }
                        pushFollow(FOLLOW_2);
                        lv_accessor_18_0=ruleFunction();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }
                        break;

                }


                }
                break;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred215_InternalKim

    // $ANTLR start synpred216_InternalKim
    public final void synpred216_InternalKim_fragment() throws RecognitionException {   
        EObject lv_actions_19_0 = null;


        // InternalKim.g:5408:9: ( (lv_actions_19_0= ruleActionSpecification ) )
        // InternalKim.g:5408:9: (lv_actions_19_0= ruleActionSpecification )
        {
        // InternalKim.g:5408:9: (lv_actions_19_0= ruleActionSpecification )
        // InternalKim.g:5409:10: lv_actions_19_0= ruleActionSpecification
        {
        if ( state.backtracking==0 ) {

          										newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getActionsActionSpecificationParserRuleCall_1_0_0());
          									
        }
        pushFollow(FOLLOW_2);
        lv_actions_19_0=ruleActionSpecification();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred216_InternalKim

    // $ANTLR start synpred217_InternalKim
    public final void synpred217_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_20=null;
        Token otherlv_21=null;
        EObject lv_metadata_22_0 = null;


        // InternalKim.g:5427:9: (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )
        // InternalKim.g:5427:9: otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) )
        {
        otherlv_20=(Token)match(input,38,FOLLOW_25); if (state.failed) return ;
        otherlv_21=(Token)match(input,39,FOLLOW_26); if (state.failed) return ;
        // InternalKim.g:5435:9: ( (lv_metadata_22_0= ruleMetadata ) )
        // InternalKim.g:5436:10: (lv_metadata_22_0= ruleMetadata )
        {
        // InternalKim.g:5436:10: (lv_metadata_22_0= ruleMetadata )
        // InternalKim.g:5437:11: lv_metadata_22_0= ruleMetadata
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getMetadataMetadataParserRuleCall_1_1_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_metadata_22_0=ruleMetadata();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred217_InternalKim

    // $ANTLR start synpred218_InternalKim
    public final void synpred218_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_23=null;
        Token otherlv_24=null;
        EObject lv_documentation_25_0 = null;


        // InternalKim.g:5456:9: (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )
        // InternalKim.g:5456:9: otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) )
        {
        otherlv_23=(Token)match(input,38,FOLLOW_28); if (state.failed) return ;
        otherlv_24=(Token)match(input,40,FOLLOW_26); if (state.failed) return ;
        // InternalKim.g:5464:9: ( (lv_documentation_25_0= ruleMetadata ) )
        // InternalKim.g:5465:10: (lv_documentation_25_0= ruleMetadata )
        {
        // InternalKim.g:5465:10: (lv_documentation_25_0= ruleMetadata )
        // InternalKim.g:5466:11: lv_documentation_25_0= ruleMetadata
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getDocumentationMetadataParserRuleCall_1_2_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_documentation_25_0=ruleMetadata();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred218_InternalKim

    // $ANTLR start synpred219_InternalKim
    public final void synpred219_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_20=null;
        Token otherlv_21=null;
        Token otherlv_23=null;
        Token otherlv_24=null;
        EObject lv_actions_19_0 = null;

        EObject lv_metadata_22_0 = null;

        EObject lv_documentation_25_0 = null;


        // InternalKim.g:5402:3: ( ({...}? => ( ({...}? => ( ( (lv_actions_19_0= ruleActionSpecification ) )* (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )? ) ) ) ) )
        // InternalKim.g:5402:3: ({...}? => ( ({...}? => ( ( (lv_actions_19_0= ruleActionSpecification ) )* (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )? ) ) ) )
        {
        // InternalKim.g:5402:3: ({...}? => ( ({...}? => ( ( (lv_actions_19_0= ruleActionSpecification ) )* (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )? ) ) ) )
        // InternalKim.g:5403:4: {...}? => ( ({...}? => ( ( (lv_actions_19_0= ruleActionSpecification ) )* (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )? ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred219_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1)");
        }
        // InternalKim.g:5403:114: ( ({...}? => ( ( (lv_actions_19_0= ruleActionSpecification ) )* (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )? ) ) )
        // InternalKim.g:5404:5: ({...}? => ( ( (lv_actions_19_0= ruleActionSpecification ) )* (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )? ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1);
        // InternalKim.g:5407:8: ({...}? => ( ( (lv_actions_19_0= ruleActionSpecification ) )* (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )? ) )
        // InternalKim.g:5407:9: {...}? => ( ( (lv_actions_19_0= ruleActionSpecification ) )* (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )? )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred219_InternalKim", "true");
        }
        // InternalKim.g:5407:18: ( ( (lv_actions_19_0= ruleActionSpecification ) )* (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )? )
        // InternalKim.g:5407:19: ( (lv_actions_19_0= ruleActionSpecification ) )* (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )?
        {
        // InternalKim.g:5407:19: ( (lv_actions_19_0= ruleActionSpecification ) )*
        loop387:
        do {
            int alt387=2;
            int LA387_0 = input.LA(1);

            if ( ((LA387_0>=52 && LA387_0<=54)) ) {
                alt387=1;
            }


            switch (alt387) {
        	case 1 :
        	    // InternalKim.g:5408:9: (lv_actions_19_0= ruleActionSpecification )
        	    {
        	    // InternalKim.g:5408:9: (lv_actions_19_0= ruleActionSpecification )
        	    // InternalKim.g:5409:10: lv_actions_19_0= ruleActionSpecification
        	    {
        	    if ( state.backtracking==0 ) {

        	      										newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getActionsActionSpecificationParserRuleCall_1_0_0());
        	      									
        	    }
        	    pushFollow(FOLLOW_24);
        	    lv_actions_19_0=ruleActionSpecification();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop387;
            }
        } while (true);

        // InternalKim.g:5426:8: (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )?
        int alt388=2;
        int LA388_0 = input.LA(1);

        if ( (LA388_0==38) ) {
            int LA388_1 = input.LA(2);

            if ( (LA388_1==39) ) {
                alt388=1;
            }
        }
        switch (alt388) {
            case 1 :
                // InternalKim.g:5427:9: otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) )
                {
                otherlv_20=(Token)match(input,38,FOLLOW_25); if (state.failed) return ;
                otherlv_21=(Token)match(input,39,FOLLOW_26); if (state.failed) return ;
                // InternalKim.g:5435:9: ( (lv_metadata_22_0= ruleMetadata ) )
                // InternalKim.g:5436:10: (lv_metadata_22_0= ruleMetadata )
                {
                // InternalKim.g:5436:10: (lv_metadata_22_0= ruleMetadata )
                // InternalKim.g:5437:11: lv_metadata_22_0= ruleMetadata
                {
                if ( state.backtracking==0 ) {

                  											newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getMetadataMetadataParserRuleCall_1_1_2_0());
                  										
                }
                pushFollow(FOLLOW_27);
                lv_metadata_22_0=ruleMetadata();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }

        // InternalKim.g:5455:8: (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )?
        int alt389=2;
        int LA389_0 = input.LA(1);

        if ( (LA389_0==38) ) {
            alt389=1;
        }
        switch (alt389) {
            case 1 :
                // InternalKim.g:5456:9: otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) )
                {
                otherlv_23=(Token)match(input,38,FOLLOW_28); if (state.failed) return ;
                otherlv_24=(Token)match(input,40,FOLLOW_26); if (state.failed) return ;
                // InternalKim.g:5464:9: ( (lv_documentation_25_0= ruleMetadata ) )
                // InternalKim.g:5465:10: (lv_documentation_25_0= ruleMetadata )
                {
                // InternalKim.g:5465:10: (lv_documentation_25_0= ruleMetadata )
                // InternalKim.g:5466:11: lv_documentation_25_0= ruleMetadata
                {
                if ( state.backtracking==0 ) {

                  											newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getDocumentationMetadataParserRuleCall_1_2_2_0());
                  										
                }
                pushFollow(FOLLOW_2);
                lv_documentation_25_0=ruleMetadata();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred219_InternalKim

    // $ANTLR start synpred220_InternalKim
    public final void synpred220_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        EObject lv_value_0_0 = null;


        // InternalKim.g:5530:4: ( ( (lv_value_0_0= ruleValue ) ) otherlv_1= 'as' )
        // InternalKim.g:5530:4: ( (lv_value_0_0= ruleValue ) ) otherlv_1= 'as'
        {
        // InternalKim.g:5530:4: ( (lv_value_0_0= ruleValue ) )
        // InternalKim.g:5531:5: (lv_value_0_0= ruleValue )
        {
        // InternalKim.g:5531:5: (lv_value_0_0= ruleValue )
        // InternalKim.g:5532:6: lv_value_0_0= ruleValue
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getObservableSemanticsAccess().getValueValueParserRuleCall_0_0_0());
          					
        }
        pushFollow(FOLLOW_9);
        lv_value_0_0=ruleValue();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_1=(Token)match(input,25,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred220_InternalKim

    // $ANTLR start synpred222_InternalKim
    public final void synpred222_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_5=null;
        EObject lv_by_6_0 = null;


        // InternalKim.g:5594:4: ( ({...}? => ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) ) ) )
        // InternalKim.g:5594:4: ({...}? => ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) ) )
        {
        // InternalKim.g:5594:4: ({...}? => ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) ) )
        // InternalKim.g:5595:5: {...}? => ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred222_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 0)");
        }
        // InternalKim.g:5595:116: ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) )
        // InternalKim.g:5596:6: ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 0);
        // InternalKim.g:5599:9: ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) )
        // InternalKim.g:5599:10: {...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred222_InternalKim", "true");
        }
        // InternalKim.g:5599:19: (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) )
        // InternalKim.g:5599:20: otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) )
        {
        otherlv_5=(Token)match(input,94,FOLLOW_16); if (state.failed) return ;
        // InternalKim.g:5603:9: ( (lv_by_6_0= ruleConcept ) )
        // InternalKim.g:5604:10: (lv_by_6_0= ruleConcept )
        {
        // InternalKim.g:5604:10: (lv_by_6_0= ruleConcept )
        // InternalKim.g:5605:11: lv_by_6_0= ruleConcept
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getByConceptParserRuleCall_3_0_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_by_6_0=ruleConcept();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred222_InternalKim

    // $ANTLR start synpred223_InternalKim
    public final void synpred223_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_7=null;
        Token otherlv_8=null;
        EObject lv_downTo_9_0 = null;


        // InternalKim.g:5628:4: ( ({...}? => ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) ) ) ) ) )
        // InternalKim.g:5628:4: ({...}? => ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) ) ) ) )
        {
        // InternalKim.g:5628:4: ({...}? => ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) ) ) ) )
        // InternalKim.g:5629:5: {...}? => ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred223_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 1)");
        }
        // InternalKim.g:5629:116: ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) ) ) )
        // InternalKim.g:5630:6: ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 1);
        // InternalKim.g:5633:9: ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) ) )
        // InternalKim.g:5633:10: {...}? => (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred223_InternalKim", "true");
        }
        // InternalKim.g:5633:19: (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) )
        // InternalKim.g:5633:20: otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) )
        {
        otherlv_7=(Token)match(input,95,FOLLOW_18); if (state.failed) return ;
        otherlv_8=(Token)match(input,32,FOLLOW_16); if (state.failed) return ;
        // InternalKim.g:5641:9: ( (lv_downTo_9_0= ruleConcept ) )
        // InternalKim.g:5642:10: (lv_downTo_9_0= ruleConcept )
        {
        // InternalKim.g:5642:10: (lv_downTo_9_0= ruleConcept )
        // InternalKim.g:5643:11: lv_downTo_9_0= ruleConcept
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getDownToConceptParserRuleCall_3_1_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_downTo_9_0=ruleConcept();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred223_InternalKim

    // $ANTLR start synpred224_InternalKim
    public final void synpred224_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_10=null;
        EObject lv_role_11_0 = null;


        // InternalKim.g:5666:4: ( ({...}? => ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) ) ) )
        // InternalKim.g:5666:4: ({...}? => ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) ) )
        {
        // InternalKim.g:5666:4: ({...}? => ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) ) )
        // InternalKim.g:5667:5: {...}? => ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred224_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2)");
        }
        // InternalKim.g:5667:116: ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) )
        // InternalKim.g:5668:6: ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2);
        // InternalKim.g:5671:9: ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) )
        // InternalKim.g:5671:10: {...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred224_InternalKim", "true");
        }
        // InternalKim.g:5671:19: (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) )
        // InternalKim.g:5671:20: otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) )
        {
        otherlv_10=(Token)match(input,25,FOLLOW_16); if (state.failed) return ;
        // InternalKim.g:5675:9: ( (lv_role_11_0= ruleConcept ) )
        // InternalKim.g:5676:10: (lv_role_11_0= ruleConcept )
        {
        // InternalKim.g:5676:10: (lv_role_11_0= ruleConcept )
        // InternalKim.g:5677:11: lv_role_11_0= ruleConcept
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getRoleConceptParserRuleCall_3_2_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_role_11_0=ruleConcept();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred224_InternalKim

    // $ANTLR start synpred225_InternalKim
    public final void synpred225_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_12=null;
        Token otherlv_13=null;
        AntlrDatatypeRuleToken lv_accordingTo_14_0 = null;


        // InternalKim.g:5700:4: ( ({...}? => ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) ) ) )
        // InternalKim.g:5700:4: ({...}? => ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) ) )
        {
        // InternalKim.g:5700:4: ({...}? => ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) ) )
        // InternalKim.g:5701:5: {...}? => ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred225_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 3)");
        }
        // InternalKim.g:5701:116: ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) )
        // InternalKim.g:5702:6: ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 3);
        // InternalKim.g:5705:9: ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) )
        // InternalKim.g:5705:10: {...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred225_InternalKim", "true");
        }
        // InternalKim.g:5705:19: (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) )
        // InternalKim.g:5705:20: otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) )
        {
        otherlv_12=(Token)match(input,31,FOLLOW_18); if (state.failed) return ;
        otherlv_13=(Token)match(input,32,FOLLOW_19); if (state.failed) return ;
        // InternalKim.g:5713:9: ( (lv_accordingTo_14_0= rulePropertyId ) )
        // InternalKim.g:5714:10: (lv_accordingTo_14_0= rulePropertyId )
        {
        // InternalKim.g:5714:10: (lv_accordingTo_14_0= rulePropertyId )
        // InternalKim.g:5715:11: lv_accordingTo_14_0= rulePropertyId
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getAccordingToPropertyIdParserRuleCall_3_3_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_accordingTo_14_0=rulePropertyId();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred225_InternalKim

    // $ANTLR start synpred226_InternalKim
    public final void synpred226_InternalKim_fragment() throws RecognitionException {   
        EObject lv_unit_16_0 = null;


        // InternalKim.g:5749:11: ( ( (lv_unit_16_0= ruleUnit ) ) )
        // InternalKim.g:5749:11: ( (lv_unit_16_0= ruleUnit ) )
        {
        // InternalKim.g:5749:11: ( (lv_unit_16_0= ruleUnit ) )
        // InternalKim.g:5750:12: (lv_unit_16_0= ruleUnit )
        {
        // InternalKim.g:5750:12: (lv_unit_16_0= ruleUnit )
        // InternalKim.g:5751:13: lv_unit_16_0= ruleUnit
        {
        if ( state.backtracking==0 ) {

          													newCompositeNode(grammarAccess.getObservableSemanticsAccess().getUnitUnitParserRuleCall_3_4_0_1_0_0());
          												
        }
        pushFollow(FOLLOW_2);
        lv_unit_16_0=ruleUnit();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred226_InternalKim

    // $ANTLR start synpred228_InternalKim
    public final void synpred228_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_15=null;
        Token otherlv_18=null;
        EObject lv_unit_16_0 = null;

        EObject lv_currency_17_0 = null;

        EObject lv_unit_19_0 = null;


        // InternalKim.g:5738:4: ( ({...}? => ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) ) ) )
        // InternalKim.g:5738:4: ({...}? => ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) ) )
        {
        // InternalKim.g:5738:4: ({...}? => ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) ) )
        // InternalKim.g:5739:5: {...}? => ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 4) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred228_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 4)");
        }
        // InternalKim.g:5739:116: ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) )
        // InternalKim.g:5740:6: ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 4);
        // InternalKim.g:5743:9: ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) )
        // InternalKim.g:5743:10: {...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred228_InternalKim", "true");
        }
        // InternalKim.g:5743:19: ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) )
        int alt392=2;
        int LA392_0 = input.LA(1);

        if ( (LA392_0==46) ) {
            alt392=1;
        }
        else if ( (LA392_0==96) ) {
            alt392=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 392, 0, input);

            throw nvae;
        }
        switch (alt392) {
            case 1 :
                // InternalKim.g:5743:20: (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) )
                {
                // InternalKim.g:5743:20: (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) )
                // InternalKim.g:5744:10: otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) )
                {
                otherlv_15=(Token)match(input,46,FOLLOW_88); if (state.failed) return ;
                // InternalKim.g:5748:10: ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) )
                int alt391=2;
                switch ( input.LA(1) ) {
                case RULE_CAMELCASE_ID:
                    {
                    int LA391_1 = input.LA(2);

                    if ( (synpred226_InternalKim()) ) {
                        alt391=1;
                    }
                    else if ( (true) ) {
                        alt391=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 391, 1, input);

                        throw nvae;
                    }
                    }
                    break;
                case RULE_LOWERCASE_ID:
                    {
                    int LA391_2 = input.LA(2);

                    if ( (LA391_2==EOF||LA391_2==36||LA391_2==89||LA391_2==233) ) {
                        alt391=1;
                    }
                    else if ( (LA391_2==88||LA391_2==90) ) {
                        alt391=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 391, 2, input);

                        throw nvae;
                    }
                    }
                    break;
                case EOF:
                case RULE_INT:
                case 34:
                case 36:
                case 89:
                case 226:
                case 227:
                case 233:
                    {
                    alt391=1;
                    }
                    break;
                case RULE_UPPERCASE_ID:
                    {
                    alt391=2;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 391, 0, input);

                    throw nvae;
                }

                switch (alt391) {
                    case 1 :
                        // InternalKim.g:5749:11: ( (lv_unit_16_0= ruleUnit ) )
                        {
                        // InternalKim.g:5749:11: ( (lv_unit_16_0= ruleUnit ) )
                        // InternalKim.g:5750:12: (lv_unit_16_0= ruleUnit )
                        {
                        // InternalKim.g:5750:12: (lv_unit_16_0= ruleUnit )
                        // InternalKim.g:5751:13: lv_unit_16_0= ruleUnit
                        {
                        if ( state.backtracking==0 ) {

                          													newCompositeNode(grammarAccess.getObservableSemanticsAccess().getUnitUnitParserRuleCall_3_4_0_1_0_0());
                          												
                        }
                        pushFollow(FOLLOW_2);
                        lv_unit_16_0=ruleUnit();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;
                    case 2 :
                        // InternalKim.g:5769:11: ( (lv_currency_17_0= ruleCurrency ) )
                        {
                        // InternalKim.g:5769:11: ( (lv_currency_17_0= ruleCurrency ) )
                        // InternalKim.g:5770:12: (lv_currency_17_0= ruleCurrency )
                        {
                        // InternalKim.g:5770:12: (lv_currency_17_0= ruleCurrency )
                        // InternalKim.g:5771:13: lv_currency_17_0= ruleCurrency
                        {
                        if ( state.backtracking==0 ) {

                          													newCompositeNode(grammarAccess.getObservableSemanticsAccess().getCurrencyCurrencyParserRuleCall_3_4_0_1_1_0());
                          												
                        }
                        pushFollow(FOLLOW_2);
                        lv_currency_17_0=ruleCurrency();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:5791:9: (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) )
                {
                // InternalKim.g:5791:9: (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) )
                // InternalKim.g:5792:10: otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) )
                {
                otherlv_18=(Token)match(input,96,FOLLOW_178); if (state.failed) return ;
                // InternalKim.g:5796:10: ( (lv_unit_19_0= ruleUnit ) )
                // InternalKim.g:5797:11: (lv_unit_19_0= ruleUnit )
                {
                // InternalKim.g:5797:11: (lv_unit_19_0= ruleUnit )
                // InternalKim.g:5798:12: lv_unit_19_0= ruleUnit
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getObservableSemanticsAccess().getUnitUnitParserRuleCall_3_4_1_1_0());
                  											
                }
                pushFollow(FOLLOW_2);
                lv_unit_19_0=ruleUnit();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }


                }
                break;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred228_InternalKim

    // $ANTLR start synpred230_InternalKim
    public final void synpred230_InternalKim_fragment() throws RecognitionException {   
        Token lv_optional_20_0=null;
        Token otherlv_21=null;

        // InternalKim.g:5822:4: ( ({...}? => ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) ) ) )
        // InternalKim.g:5822:4: ({...}? => ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) ) )
        {
        // InternalKim.g:5822:4: ({...}? => ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) ) )
        // InternalKim.g:5823:5: {...}? => ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred230_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5)");
        }
        // InternalKim.g:5823:116: ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) )
        // InternalKim.g:5824:6: ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5);
        // InternalKim.g:5827:9: ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) )
        // InternalKim.g:5827:10: {...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred230_InternalKim", "true");
        }
        // InternalKim.g:5827:19: ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' )
        int alt393=2;
        int LA393_0 = input.LA(1);

        if ( (LA393_0==97) ) {
            alt393=1;
        }
        else if ( (LA393_0==98) ) {
            alt393=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 393, 0, input);

            throw nvae;
        }
        switch (alt393) {
            case 1 :
                // InternalKim.g:5827:20: ( (lv_optional_20_0= 'optional' ) )
                {
                // InternalKim.g:5827:20: ( (lv_optional_20_0= 'optional' ) )
                // InternalKim.g:5828:10: (lv_optional_20_0= 'optional' )
                {
                // InternalKim.g:5828:10: (lv_optional_20_0= 'optional' )
                // InternalKim.g:5829:11: lv_optional_20_0= 'optional'
                {
                lv_optional_20_0=(Token)match(input,97,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:5842:9: otherlv_21= 'required'
                {
                otherlv_21=(Token)match(input,98,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred230_InternalKim

    // $ANTLR start synpred231_InternalKim
    public final void synpred231_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_23=null;
        EObject lv_from_22_0 = null;

        EObject lv_to_24_0 = null;


        // InternalKim.g:5852:4: ( ({...}? => ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) ) ) )
        // InternalKim.g:5852:4: ({...}? => ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) ) )
        {
        // InternalKim.g:5852:4: ({...}? => ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) ) )
        // InternalKim.g:5853:5: {...}? => ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 6) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred231_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 6)");
        }
        // InternalKim.g:5853:116: ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) )
        // InternalKim.g:5854:6: ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 6);
        // InternalKim.g:5857:9: ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) )
        // InternalKim.g:5857:10: {...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred231_InternalKim", "true");
        }
        // InternalKim.g:5857:19: ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) )
        // InternalKim.g:5857:20: ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) )
        {
        // InternalKim.g:5857:20: ( (lv_from_22_0= ruleNumber ) )
        // InternalKim.g:5858:10: (lv_from_22_0= ruleNumber )
        {
        // InternalKim.g:5858:10: (lv_from_22_0= ruleNumber )
        // InternalKim.g:5859:11: lv_from_22_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getFromNumberParserRuleCall_3_6_0_0());
          										
        }
        pushFollow(FOLLOW_18);
        lv_from_22_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_23=(Token)match(input,32,FOLLOW_33); if (state.failed) return ;
        // InternalKim.g:5880:9: ( (lv_to_24_0= ruleNumber ) )
        // InternalKim.g:5881:10: (lv_to_24_0= ruleNumber )
        {
        // InternalKim.g:5881:10: (lv_to_24_0= ruleNumber )
        // InternalKim.g:5882:11: lv_to_24_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getToNumberParserRuleCall_3_6_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_to_24_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred231_InternalKim

    // $ANTLR start synpred232_InternalKim
    public final void synpred232_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_25=null;
        Token lv_name_26_0=null;

        // InternalKim.g:5905:4: ( ({...}? => ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )
        // InternalKim.g:5905:4: ({...}? => ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) ) )
        {
        // InternalKim.g:5905:4: ({...}? => ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) ) )
        // InternalKim.g:5906:5: {...}? => ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred232_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7)");
        }
        // InternalKim.g:5906:116: ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) )
        // InternalKim.g:5907:6: ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7);
        // InternalKim.g:5910:9: ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) )
        // InternalKim.g:5910:10: {...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred232_InternalKim", "true");
        }
        // InternalKim.g:5910:19: (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) )
        // InternalKim.g:5910:20: otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) )
        {
        otherlv_25=(Token)match(input,99,FOLLOW_55); if (state.failed) return ;
        // InternalKim.g:5914:9: ( (lv_name_26_0= RULE_LOWERCASE_ID ) )
        // InternalKim.g:5915:10: (lv_name_26_0= RULE_LOWERCASE_ID )
        {
        // InternalKim.g:5915:10: (lv_name_26_0= RULE_LOWERCASE_ID )
        // InternalKim.g:5916:11: lv_name_26_0= RULE_LOWERCASE_ID
        {
        lv_name_26_0=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred232_InternalKim

    // $ANTLR start synpred233_InternalKim
    public final void synpred233_InternalKim_fragment() throws RecognitionException {   
        Token lv_modelReference_0_1=null;

        // InternalKim.g:5970:6: (lv_modelReference_0_1= RULE_LOWERCASE_ID )
        // InternalKim.g:5970:6: lv_modelReference_0_1= RULE_LOWERCASE_ID
        {
        lv_modelReference_0_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred233_InternalKim

    // $ANTLR start synpred236_InternalKim
    public final void synpred236_InternalKim_fragment() throws RecognitionException {   
        EObject lv_main_1_0 = null;


        // InternalKim.g:6071:4: ( (lv_main_1_0= ruleConcept ) )
        // InternalKim.g:6071:4: (lv_main_1_0= ruleConcept )
        {
        // InternalKim.g:6071:4: (lv_main_1_0= ruleConcept )
        // InternalKim.g:6072:5: lv_main_1_0= ruleConcept
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getConceptDeclarationAccess().getMainConceptParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_main_1_0=ruleConcept();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred236_InternalKim

    // $ANTLR start synpred237_InternalKim
    public final void synpred237_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_3=null;
        EObject lv_inherency_4_0 = null;


        // InternalKim.g:6096:4: ( ({...}? => ( ({...}? => (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:6096:4: ({...}? => ( ({...}? => (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:6096:4: ({...}? => ( ({...}? => (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:6097:5: {...}? => ( ({...}? => (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred237_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 0)");
        }
        // InternalKim.g:6097:115: ( ({...}? => (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:6098:6: ({...}? => (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 0);
        // InternalKim.g:6101:9: ({...}? => (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:6101:10: {...}? => (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred237_InternalKim", "true");
        }
        // InternalKim.g:6101:19: (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:6101:20: otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) )
        {
        otherlv_3=(Token)match(input,100,FOLLOW_16); if (state.failed) return ;
        // InternalKim.g:6105:9: ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:6106:10: (lv_inherency_4_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:6106:10: (lv_inherency_4_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:6107:11: lv_inherency_4_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getInherencySimpleConceptDeclarationParserRuleCall_2_0_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_inherency_4_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred237_InternalKim

    // $ANTLR start synpred238_InternalKim
    public final void synpred238_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_5=null;
        EObject lv_motivation_6_0 = null;


        // InternalKim.g:6130:4: ( ({...}? => ( ({...}? => (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:6130:4: ({...}? => ( ({...}? => (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:6130:4: ({...}? => ( ({...}? => (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:6131:5: {...}? => ( ({...}? => (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred238_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 1)");
        }
        // InternalKim.g:6131:115: ( ({...}? => (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:6132:6: ({...}? => (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 1);
        // InternalKim.g:6135:9: ({...}? => (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:6135:10: {...}? => (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred238_InternalKim", "true");
        }
        // InternalKim.g:6135:19: (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:6135:20: otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) )
        {
        otherlv_5=(Token)match(input,101,FOLLOW_16); if (state.failed) return ;
        // InternalKim.g:6139:9: ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:6140:10: (lv_motivation_6_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:6140:10: (lv_motivation_6_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:6141:11: lv_motivation_6_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getMotivationSimpleConceptDeclarationParserRuleCall_2_1_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_motivation_6_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred238_InternalKim

    // $ANTLR start synpred239_InternalKim
    public final void synpred239_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_7=null;
        EObject lv_compresent_8_0 = null;


        // InternalKim.g:6164:4: ( ({...}? => ( ({...}? => (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:6164:4: ({...}? => ( ({...}? => (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:6164:4: ({...}? => ( ({...}? => (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:6165:5: {...}? => ( ({...}? => (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred239_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 2)");
        }
        // InternalKim.g:6165:115: ( ({...}? => (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:6166:6: ({...}? => (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 2);
        // InternalKim.g:6169:9: ({...}? => (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:6169:10: {...}? => (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred239_InternalKim", "true");
        }
        // InternalKim.g:6169:19: (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:6169:20: otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) )
        {
        otherlv_7=(Token)match(input,38,FOLLOW_16); if (state.failed) return ;
        // InternalKim.g:6173:9: ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:6174:10: (lv_compresent_8_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:6174:10: (lv_compresent_8_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:6175:11: lv_compresent_8_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getCompresentSimpleConceptDeclarationParserRuleCall_2_2_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_compresent_8_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred239_InternalKim

    // $ANTLR start synpred240_InternalKim
    public final void synpred240_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_9=null;
        Token otherlv_10=null;
        EObject lv_causant_11_0 = null;


        // InternalKim.g:6198:4: ( ({...}? => ( ({...}? => (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:6198:4: ({...}? => ( ({...}? => (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:6198:4: ({...}? => ( ({...}? => (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:6199:5: {...}? => ( ({...}? => (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 3) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred240_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 3)");
        }
        // InternalKim.g:6199:115: ( ({...}? => (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:6200:6: ({...}? => (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 3);
        // InternalKim.g:6203:9: ({...}? => (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:6203:10: {...}? => (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred240_InternalKim", "true");
        }
        // InternalKim.g:6203:19: (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:6203:20: otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) )
        {
        otherlv_9=(Token)match(input,102,FOLLOW_92); if (state.failed) return ;
        otherlv_10=(Token)match(input,94,FOLLOW_16); if (state.failed) return ;
        // InternalKim.g:6211:9: ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:6212:10: (lv_causant_11_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:6212:10: (lv_causant_11_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:6213:11: lv_causant_11_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getCausantSimpleConceptDeclarationParserRuleCall_2_3_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_causant_11_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred240_InternalKim

    // $ANTLR start synpred241_InternalKim
    public final void synpred241_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_12=null;
        Token otherlv_13=null;
        EObject lv_adjacent_14_0 = null;


        // InternalKim.g:6236:4: ( ({...}? => ( ({...}? => (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:6236:4: ({...}? => ( ({...}? => (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:6236:4: ({...}? => ( ({...}? => (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:6237:5: {...}? => ( ({...}? => (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 4) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred241_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 4)");
        }
        // InternalKim.g:6237:115: ( ({...}? => (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:6238:6: ({...}? => (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 4);
        // InternalKim.g:6241:9: ({...}? => (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:6241:10: {...}? => (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred241_InternalKim", "true");
        }
        // InternalKim.g:6241:19: (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:6241:20: otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) )
        {
        otherlv_12=(Token)match(input,103,FOLLOW_18); if (state.failed) return ;
        otherlv_13=(Token)match(input,32,FOLLOW_16); if (state.failed) return ;
        // InternalKim.g:6249:9: ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:6250:10: (lv_adjacent_14_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:6250:10: (lv_adjacent_14_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:6251:11: lv_adjacent_14_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getAdjacentSimpleConceptDeclarationParserRuleCall_2_4_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_adjacent_14_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred241_InternalKim

    // $ANTLR start synpred242_InternalKim
    public final void synpred242_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_15=null;
        Token otherlv_16=null;
        EObject lv_container_17_0 = null;


        // InternalKim.g:6274:4: ( ({...}? => ( ({...}? => (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:6274:4: ({...}? => ( ({...}? => (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:6274:4: ({...}? => ( ({...}? => (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:6275:5: {...}? => ( ({...}? => (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 5) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred242_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 5)");
        }
        // InternalKim.g:6275:115: ( ({...}? => (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:6276:6: ({...}? => (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 5);
        // InternalKim.g:6279:9: ({...}? => (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:6279:10: {...}? => (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred242_InternalKim", "true");
        }
        // InternalKim.g:6279:19: (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:6279:20: otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) )
        {
        otherlv_15=(Token)match(input,104,FOLLOW_93); if (state.failed) return ;
        otherlv_16=(Token)match(input,46,FOLLOW_16); if (state.failed) return ;
        // InternalKim.g:6287:9: ( (lv_container_17_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:6288:10: (lv_container_17_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:6288:10: (lv_container_17_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:6289:11: lv_container_17_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getContainerSimpleConceptDeclarationParserRuleCall_2_5_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_container_17_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred242_InternalKim

    // $ANTLR start synpred243_InternalKim
    public final void synpred243_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_18=null;
        EObject lv_contained_19_0 = null;


        // InternalKim.g:6312:4: ( ({...}? => ( ({...}? => (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:6312:4: ({...}? => ( ({...}? => (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:6312:4: ({...}? => ( ({...}? => (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:6313:5: {...}? => ( ({...}? => (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 6) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred243_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 6)");
        }
        // InternalKim.g:6313:115: ( ({...}? => (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:6314:6: ({...}? => (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 6);
        // InternalKim.g:6317:9: ({...}? => (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:6317:10: {...}? => (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred243_InternalKim", "true");
        }
        // InternalKim.g:6317:19: (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:6317:20: otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) )
        {
        otherlv_18=(Token)match(input,105,FOLLOW_16); if (state.failed) return ;
        // InternalKim.g:6321:9: ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:6322:10: (lv_contained_19_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:6322:10: (lv_contained_19_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:6323:11: lv_contained_19_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getContainedSimpleConceptDeclarationParserRuleCall_2_6_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_contained_19_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred243_InternalKim

    // $ANTLR start synpred244_InternalKim
    public final void synpred244_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_20=null;
        EObject lv_caused_21_0 = null;


        // InternalKim.g:6346:4: ( ({...}? => ( ({...}? => (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:6346:4: ({...}? => ( ({...}? => (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:6346:4: ({...}? => ( ({...}? => (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:6347:5: {...}? => ( ({...}? => (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 7) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred244_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 7)");
        }
        // InternalKim.g:6347:115: ( ({...}? => (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:6348:6: ({...}? => (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 7);
        // InternalKim.g:6351:9: ({...}? => (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:6351:10: {...}? => (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred244_InternalKim", "true");
        }
        // InternalKim.g:6351:19: (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:6351:20: otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) )
        {
        otherlv_20=(Token)match(input,106,FOLLOW_16); if (state.failed) return ;
        // InternalKim.g:6355:9: ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:6356:10: (lv_caused_21_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:6356:10: (lv_caused_21_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:6357:11: lv_caused_21_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getCausedSimpleConceptDeclarationParserRuleCall_2_7_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_caused_21_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred244_InternalKim

    // $ANTLR start synpred291_InternalKim
    public final void synpred291_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_36=null;
        EObject lv_other_37_0 = null;


        // InternalKim.g:7704:5: ( ( ( 'in' )=>otherlv_36= 'in' ) ( (lv_other_37_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:7704:5: ( ( 'in' )=>otherlv_36= 'in' ) ( (lv_other_37_0= ruleSimpleConceptDeclaration ) )
        {
        // InternalKim.g:7704:5: ( ( 'in' )=>otherlv_36= 'in' )
        // InternalKim.g:7705:6: ( 'in' )=>otherlv_36= 'in'
        {
        otherlv_36=(Token)match(input,46,FOLLOW_16); if (state.failed) return ;

        }

        // InternalKim.g:7711:5: ( (lv_other_37_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:7712:6: (lv_other_37_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:7712:6: (lv_other_37_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:7713:7: lv_other_37_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getConceptAccess().getOtherSimpleConceptDeclarationParserRuleCall_9_3_1_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_other_37_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred291_InternalKim

    // $ANTLR start synpred296_InternalKim
    public final void synpred296_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_46=null;
        EObject lv_other_47_0 = null;


        // InternalKim.g:7838:5: ( ( ( 'over' )=>otherlv_46= 'over' ) ( (lv_other_47_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:7838:5: ( ( 'over' )=>otherlv_46= 'over' ) ( (lv_other_47_0= ruleSimpleConceptDeclaration ) )
        {
        // InternalKim.g:7838:5: ( ( 'over' )=>otherlv_46= 'over' )
        // InternalKim.g:7839:6: ( 'over' )=>otherlv_46= 'over'
        {
        otherlv_46=(Token)match(input,53,FOLLOW_16); if (state.failed) return ;

        }

        // InternalKim.g:7845:5: ( (lv_other_47_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:7846:6: (lv_other_47_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:7846:6: (lv_other_47_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:7847:7: lv_other_47_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getConceptAccess().getOtherSimpleConceptDeclarationParserRuleCall_11_3_1_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_other_47_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred296_InternalKim

    // $ANTLR start synpred299_InternalKim
    public final void synpred299_InternalKim_fragment() throws RecognitionException {   
        Token lv_operators_1_0=null;
        EObject lv_operands_2_0 = null;


        // InternalKim.g:7995:4: ( ( (lv_operators_1_0= 'or' ) ) ( (lv_operands_2_0= ruleFactor ) ) )
        // InternalKim.g:7995:4: ( (lv_operators_1_0= 'or' ) ) ( (lv_operands_2_0= ruleFactor ) )
        {
        // InternalKim.g:7995:4: ( (lv_operators_1_0= 'or' ) )
        // InternalKim.g:7996:5: (lv_operators_1_0= 'or' )
        {
        // InternalKim.g:7996:5: (lv_operators_1_0= 'or' )
        // InternalKim.g:7997:6: lv_operators_1_0= 'or'
        {
        lv_operators_1_0=(Token)match(input,131,FOLLOW_16); if (state.failed) return ;

        }


        }

        // InternalKim.g:8009:4: ( (lv_operands_2_0= ruleFactor ) )
        // InternalKim.g:8010:5: (lv_operands_2_0= ruleFactor )
        {
        // InternalKim.g:8010:5: (lv_operands_2_0= ruleFactor )
        // InternalKim.g:8011:6: lv_operands_2_0= ruleFactor
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getTermAccess().getOperandsFactorParserRuleCall_1_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_operands_2_0=ruleFactor();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred299_InternalKim

    // $ANTLR start synpred301_InternalKim
    public final void synpred301_InternalKim_fragment() throws RecognitionException {   
        Token lv_operators_1_1=null;
        Token lv_operators_1_2=null;
        EObject lv_operands_2_0 = null;


        // InternalKim.g:8060:4: ( ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) ) ( (lv_operands_2_0= ruleTerm ) ) )
        // InternalKim.g:8060:4: ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) ) ( (lv_operands_2_0= ruleTerm ) )
        {
        // InternalKim.g:8060:4: ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) )
        // InternalKim.g:8061:5: ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) )
        {
        // InternalKim.g:8061:5: ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) )
        // InternalKim.g:8062:6: (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' )
        {
        // InternalKim.g:8062:6: (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' )
        int alt417=2;
        int LA417_0 = input.LA(1);

        if ( (LA417_0==132) ) {
            alt417=1;
        }
        else if ( (LA417_0==133) ) {
            alt417=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 417, 0, input);

            throw nvae;
        }
        switch (alt417) {
            case 1 :
                // InternalKim.g:8063:7: lv_operators_1_1= 'and'
                {
                lv_operators_1_1=(Token)match(input,132,FOLLOW_16); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:8074:7: lv_operators_1_2= 'follows'
                {
                lv_operators_1_2=(Token)match(input,133,FOLLOW_16); if (state.failed) return ;

                }
                break;

        }


        }


        }

        // InternalKim.g:8087:4: ( (lv_operands_2_0= ruleTerm ) )
        // InternalKim.g:8088:5: (lv_operands_2_0= ruleTerm )
        {
        // InternalKim.g:8088:5: (lv_operands_2_0= ruleTerm )
        // InternalKim.g:8089:6: lv_operands_2_0= ruleTerm
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getFactorAccess().getOperandsTermParserRuleCall_1_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_operands_2_0=ruleTerm();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred301_InternalKim

    // $ANTLR start synpred303_InternalKim
    public final void synpred303_InternalKim_fragment() throws RecognitionException {   
        EObject lv_main_1_0 = null;


        // InternalKim.g:8145:4: ( (lv_main_1_0= ruleConcept ) )
        // InternalKim.g:8145:4: (lv_main_1_0= ruleConcept )
        {
        // InternalKim.g:8145:4: (lv_main_1_0= ruleConcept )
        // InternalKim.g:8146:5: lv_main_1_0= ruleConcept
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getSimpleConceptDeclarationAccess().getMainConceptParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_main_1_0=ruleConcept();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred303_InternalKim

    // $ANTLR start synpred313_InternalKim
    public final void synpred313_InternalKim_fragment() throws RecognitionException {   
        Token lv_abstract_2_0=null;

        // InternalKim.g:8460:4: ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) )
        // InternalKim.g:8460:4: ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) )
        {
        // InternalKim.g:8460:4: ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) )
        // InternalKim.g:8461:5: {...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred313_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 0)");
        }
        // InternalKim.g:8461:113: ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) )
        // InternalKim.g:8462:6: ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 0);
        // InternalKim.g:8465:9: ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) )
        // InternalKim.g:8465:10: {...}? => ( (lv_abstract_2_0= 'abstract' ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred313_InternalKim", "true");
        }
        // InternalKim.g:8465:19: ( (lv_abstract_2_0= 'abstract' ) )
        // InternalKim.g:8465:20: (lv_abstract_2_0= 'abstract' )
        {
        // InternalKim.g:8465:20: (lv_abstract_2_0= 'abstract' )
        // InternalKim.g:8466:10: lv_abstract_2_0= 'abstract'
        {
        lv_abstract_2_0=(Token)match(input,139,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred313_InternalKim

    // $ANTLR start synpred314_InternalKim
    public final void synpred314_InternalKim_fragment() throws RecognitionException {   
        Token lv_deniable_3_0=null;

        // InternalKim.g:8483:4: ( ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) )
        // InternalKim.g:8483:4: ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) )
        {
        // InternalKim.g:8483:4: ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) )
        // InternalKim.g:8484:5: {...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred314_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 1)");
        }
        // InternalKim.g:8484:113: ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) )
        // InternalKim.g:8485:6: ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 1);
        // InternalKim.g:8488:9: ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) )
        // InternalKim.g:8488:10: {...}? => ( (lv_deniable_3_0= 'deniable' ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred314_InternalKim", "true");
        }
        // InternalKim.g:8488:19: ( (lv_deniable_3_0= 'deniable' ) )
        // InternalKim.g:8488:20: (lv_deniable_3_0= 'deniable' )
        {
        // InternalKim.g:8488:20: (lv_deniable_3_0= 'deniable' )
        // InternalKim.g:8489:10: lv_deniable_3_0= 'deniable'
        {
        lv_deniable_3_0=(Token)match(input,140,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred314_InternalKim

    // $ANTLR start synpred315_InternalKim
    public final void synpred315_InternalKim_fragment() throws RecognitionException {   
        Token lv_subjective_4_0=null;

        // InternalKim.g:8506:4: ( ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) )
        // InternalKim.g:8506:4: ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) )
        {
        // InternalKim.g:8506:4: ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) )
        // InternalKim.g:8507:5: {...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred315_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 2)");
        }
        // InternalKim.g:8507:113: ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) )
        // InternalKim.g:8508:6: ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 2);
        // InternalKim.g:8511:9: ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) )
        // InternalKim.g:8511:10: {...}? => ( (lv_subjective_4_0= 'subjective' ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred315_InternalKim", "true");
        }
        // InternalKim.g:8511:19: ( (lv_subjective_4_0= 'subjective' ) )
        // InternalKim.g:8511:20: (lv_subjective_4_0= 'subjective' )
        {
        // InternalKim.g:8511:20: (lv_subjective_4_0= 'subjective' )
        // InternalKim.g:8512:10: lv_subjective_4_0= 'subjective'
        {
        lv_subjective_4_0=(Token)match(input,141,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred315_InternalKim

    // $ANTLR start synpred319_InternalKim
    public final void synpred319_InternalKim_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken lv_propertySpecifiers_7_0 = null;


        // InternalKim.g:8594:11: ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )
        // InternalKim.g:8594:11: (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE )
        {
        // InternalKim.g:8594:11: (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE )
        // InternalKim.g:8595:12: lv_propertySpecifiers_7_0= rulePROPERTY_TYPE
        {
        if ( state.backtracking==0 ) {

          												newCompositeNode(grammarAccess.getConceptStatementAccess().getPropertySpecifiersPROPERTY_TYPEParserRuleCall_1_3_1_1_0());
          											
        }
        pushFollow(FOLLOW_2);
        lv_propertySpecifiers_7_0=rulePROPERTY_TYPE();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred319_InternalKim

    // $ANTLR start synpred320_InternalKim
    public final void synpred320_InternalKim_fragment() throws RecognitionException {   
        Token lv_agentSpecifier_5_1=null;
        Token lv_agentSpecifier_5_2=null;
        Token lv_agentSpecifier_5_3=null;
        AntlrDatatypeRuleToken lv_propertySpecifiers_6_0 = null;

        AntlrDatatypeRuleToken lv_propertySpecifiers_7_0 = null;


        // InternalKim.g:8529:4: ( ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) ) ) )
        // InternalKim.g:8529:4: ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) ) )
        {
        // InternalKim.g:8529:4: ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) ) )
        // InternalKim.g:8530:5: {...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred320_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3)");
        }
        // InternalKim.g:8530:113: ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) )
        // InternalKim.g:8531:6: ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3);
        // InternalKim.g:8534:9: ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) )
        // InternalKim.g:8534:10: {...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred320_InternalKim", "true");
        }
        // InternalKim.g:8534:19: ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) )
        int alt428=2;
        int LA428_0 = input.LA(1);

        if ( ((LA428_0>=134 && LA428_0<=136)) ) {
            alt428=1;
        }
        else if ( ((LA428_0>=218 && LA428_0<=219)) ) {
            alt428=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 428, 0, input);

            throw nvae;
        }
        switch (alt428) {
            case 1 :
                // InternalKim.g:8534:20: ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) )
                {
                // InternalKim.g:8534:20: ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) )
                // InternalKim.g:8535:10: ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) )
                {
                // InternalKim.g:8535:10: ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) )
                // InternalKim.g:8536:11: (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' )
                {
                // InternalKim.g:8536:11: (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' )
                int alt426=3;
                switch ( input.LA(1) ) {
                case 134:
                    {
                    alt426=1;
                    }
                    break;
                case 135:
                    {
                    alt426=2;
                    }
                    break;
                case 136:
                    {
                    alt426=3;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 426, 0, input);

                    throw nvae;
                }

                switch (alt426) {
                    case 1 :
                        // InternalKim.g:8537:12: lv_agentSpecifier_5_1= 'deliberative'
                        {
                        lv_agentSpecifier_5_1=(Token)match(input,134,FOLLOW_2); if (state.failed) return ;

                        }
                        break;
                    case 2 :
                        // InternalKim.g:8548:12: lv_agentSpecifier_5_2= 'interactive'
                        {
                        lv_agentSpecifier_5_2=(Token)match(input,135,FOLLOW_2); if (state.failed) return ;

                        }
                        break;
                    case 3 :
                        // InternalKim.g:8559:12: lv_agentSpecifier_5_3= 'reactive'
                        {
                        lv_agentSpecifier_5_3=(Token)match(input,136,FOLLOW_2); if (state.failed) return ;

                        }
                        break;

                }


                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:8573:9: ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* )
                {
                // InternalKim.g:8573:9: ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* )
                // InternalKim.g:8574:10: ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )*
                {
                // InternalKim.g:8574:10: ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) )
                // InternalKim.g:8575:11: (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE )
                {
                // InternalKim.g:8575:11: (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE )
                // InternalKim.g:8576:12: lv_propertySpecifiers_6_0= rulePROPERTY_TYPE
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getConceptStatementAccess().getPropertySpecifiersPROPERTY_TYPEParserRuleCall_1_3_1_0_0());
                  											
                }
                pushFollow(FOLLOW_179);
                lv_propertySpecifiers_6_0=rulePROPERTY_TYPE();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalKim.g:8593:10: ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )*
                loop427:
                do {
                    int alt427=2;
                    int LA427_0 = input.LA(1);

                    if ( ((LA427_0>=218 && LA427_0<=219)) ) {
                        alt427=1;
                    }


                    switch (alt427) {
                	case 1 :
                	    // InternalKim.g:8594:11: (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE )
                	    {
                	    // InternalKim.g:8594:11: (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE )
                	    // InternalKim.g:8595:12: lv_propertySpecifiers_7_0= rulePROPERTY_TYPE
                	    {
                	    if ( state.backtracking==0 ) {

                	      												newCompositeNode(grammarAccess.getConceptStatementAccess().getPropertySpecifiersPROPERTY_TYPEParserRuleCall_1_3_1_1_0());
                	      											
                	    }
                	    pushFollow(FOLLOW_179);
                	    lv_propertySpecifiers_7_0=rulePROPERTY_TYPE();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }
                	    break;

                	default :
                	    break loop427;
                    }
                } while (true);


                }


                }
                break;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred320_InternalKim

    // $ANTLR start synpred329_InternalKim
    public final void synpred329_InternalKim_fragment() throws RecognitionException {   
        Token lv_docstring_11_0=null;

        // InternalKim.g:8903:4: ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) )
        // InternalKim.g:8903:4: ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) )
        {
        // InternalKim.g:8903:4: ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) )
        // InternalKim.g:8904:5: {...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred329_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 0)");
        }
        // InternalKim.g:8904:117: ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) )
        // InternalKim.g:8905:6: ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 0);
        // InternalKim.g:8908:9: ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) )
        // InternalKim.g:8908:10: {...}? => ( (lv_docstring_11_0= RULE_STRING ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred329_InternalKim", "true");
        }
        // InternalKim.g:8908:19: ( (lv_docstring_11_0= RULE_STRING ) )
        // InternalKim.g:8908:20: (lv_docstring_11_0= RULE_STRING )
        {
        // InternalKim.g:8908:20: (lv_docstring_11_0= RULE_STRING )
        // InternalKim.g:8909:10: lv_docstring_11_0= RULE_STRING
        {
        lv_docstring_11_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred329_InternalKim

    // $ANTLR start synpred336_InternalKim
    public final void synpred336_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_12=null;
        Token lv_coreConcept_13_0=null;
        Token lv_alias_14_0=null;
        Token lv_nothing_15_0=null;
        Token lv_connectors_17_1=null;
        Token lv_connectors_17_2=null;
        Token lv_connectors_17_3=null;
        EObject lv_parents_16_0 = null;

        EObject lv_parents_18_0 = null;


        // InternalKim.g:8930:4: ( ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) )
        // InternalKim.g:8930:4: ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) )
        {
        // InternalKim.g:8930:4: ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) )
        // InternalKim.g:8931:5: {...}? => ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred336_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 1)");
        }
        // InternalKim.g:8931:117: ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
        // InternalKim.g:8932:6: ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 1);
        // InternalKim.g:8935:9: ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) )
        // InternalKim.g:8935:10: {...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred336_InternalKim", "true");
        }
        // InternalKim.g:8935:19: ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) )
        // InternalKim.g:8935:20: ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) )
        {
        // InternalKim.g:8935:20: ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) )
        int alt436=2;
        int LA436_0 = input.LA(1);

        if ( (LA436_0==142) ) {
            alt436=1;
        }
        else if ( (LA436_0==144) ) {
            alt436=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 436, 0, input);

            throw nvae;
        }
        switch (alt436) {
            case 1 :
                // InternalKim.g:8936:10: (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? )
                {
                // InternalKim.g:8936:10: (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? )
                // InternalKim.g:8937:11: otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )?
                {
                otherlv_12=(Token)match(input,142,FOLLOW_117); if (state.failed) return ;
                // InternalKim.g:8941:11: ( (lv_coreConcept_13_0= 'core' ) )?
                int alt435=2;
                int LA435_0 = input.LA(1);

                if ( (LA435_0==143) ) {
                    alt435=1;
                }
                switch (alt435) {
                    case 1 :
                        // InternalKim.g:8942:12: (lv_coreConcept_13_0= 'core' )
                        {
                        // InternalKim.g:8942:12: (lv_coreConcept_13_0= 'core' )
                        // InternalKim.g:8943:13: lv_coreConcept_13_0= 'core'
                        {
                        lv_coreConcept_13_0=(Token)match(input,143,FOLLOW_118); if (state.failed) return ;

                        }


                        }
                        break;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:8957:10: ( (lv_alias_14_0= 'equals' ) )
                {
                // InternalKim.g:8957:10: ( (lv_alias_14_0= 'equals' ) )
                // InternalKim.g:8958:11: (lv_alias_14_0= 'equals' )
                {
                // InternalKim.g:8958:11: (lv_alias_14_0= 'equals' )
                // InternalKim.g:8959:12: lv_alias_14_0= 'equals'
                {
                lv_alias_14_0=(Token)match(input,144,FOLLOW_118); if (state.failed) return ;

                }


                }


                }
                break;

        }

        // InternalKim.g:8972:9: ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) )
        int alt439=2;
        int LA439_0 = input.LA(1);

        if ( (LA439_0==145) ) {
            alt439=1;
        }
        else if ( ((LA439_0>=RULE_LOWERCASE_ID && LA439_0<=RULE_STRING)||LA439_0==RULE_CAMELCASE_ID||LA439_0==34||(LA439_0>=108 && LA439_0<=109)||(LA439_0>=116 && LA439_0<=117)||(LA439_0>=119 && LA439_0<=130)) ) {
            alt439=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 439, 0, input);

            throw nvae;
        }
        switch (alt439) {
            case 1 :
                // InternalKim.g:8973:10: ( (lv_nothing_15_0= 'nothing' ) )
                {
                // InternalKim.g:8973:10: ( (lv_nothing_15_0= 'nothing' ) )
                // InternalKim.g:8974:11: (lv_nothing_15_0= 'nothing' )
                {
                // InternalKim.g:8974:11: (lv_nothing_15_0= 'nothing' )
                // InternalKim.g:8975:12: lv_nothing_15_0= 'nothing'
                {
                lv_nothing_15_0=(Token)match(input,145,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:8988:10: ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* )
                {
                // InternalKim.g:8988:10: ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* )
                // InternalKim.g:8989:11: ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )*
                {
                // InternalKim.g:8989:11: ( (lv_parents_16_0= ruleConceptDeclaration ) )
                // InternalKim.g:8990:12: (lv_parents_16_0= ruleConceptDeclaration )
                {
                // InternalKim.g:8990:12: (lv_parents_16_0= ruleConceptDeclaration )
                // InternalKim.g:8991:13: lv_parents_16_0= ruleConceptDeclaration
                {
                if ( state.backtracking==0 ) {

                  													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getParentsConceptDeclarationParserRuleCall_3_1_1_1_0_0());
                  												
                }
                pushFollow(FOLLOW_180);
                lv_parents_16_0=ruleConceptDeclaration();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalKim.g:9008:11: ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )*
                loop438:
                do {
                    int alt438=2;
                    int LA438_0 = input.LA(1);

                    if ( (LA438_0==22||(LA438_0>=131 && LA438_0<=132)) ) {
                        alt438=1;
                    }


                    switch (alt438) {
                	case 1 :
                	    // InternalKim.g:9009:12: ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) )
                	    {
                	    // InternalKim.g:9009:12: ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) )
                	    // InternalKim.g:9010:13: ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) )
                	    {
                	    // InternalKim.g:9010:13: ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) )
                	    // InternalKim.g:9011:14: (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' )
                	    {
                	    // InternalKim.g:9011:14: (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' )
                	    int alt437=3;
                	    switch ( input.LA(1) ) {
                	    case 22:
                	        {
                	        alt437=1;
                	        }
                	        break;
                	    case 131:
                	        {
                	        alt437=2;
                	        }
                	        break;
                	    case 132:
                	        {
                	        alt437=3;
                	        }
                	        break;
                	    default:
                	        if (state.backtracking>0) {state.failed=true; return ;}
                	        NoViableAltException nvae =
                	            new NoViableAltException("", 437, 0, input);

                	        throw nvae;
                	    }

                	    switch (alt437) {
                	        case 1 :
                	            // InternalKim.g:9012:15: lv_connectors_17_1= ','
                	            {
                	            lv_connectors_17_1=(Token)match(input,22,FOLLOW_16); if (state.failed) return ;

                	            }
                	            break;
                	        case 2 :
                	            // InternalKim.g:9023:15: lv_connectors_17_2= 'or'
                	            {
                	            lv_connectors_17_2=(Token)match(input,131,FOLLOW_16); if (state.failed) return ;

                	            }
                	            break;
                	        case 3 :
                	            // InternalKim.g:9034:15: lv_connectors_17_3= 'and'
                	            {
                	            lv_connectors_17_3=(Token)match(input,132,FOLLOW_16); if (state.failed) return ;

                	            }
                	            break;

                	    }


                	    }


                	    }

                	    // InternalKim.g:9047:12: ( (lv_parents_18_0= ruleConceptDeclaration ) )
                	    // InternalKim.g:9048:13: (lv_parents_18_0= ruleConceptDeclaration )
                	    {
                	    // InternalKim.g:9048:13: (lv_parents_18_0= ruleConceptDeclaration )
                	    // InternalKim.g:9049:14: lv_parents_18_0= ruleConceptDeclaration
                	    {
                	    if ( state.backtracking==0 ) {

                	      														newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getParentsConceptDeclarationParserRuleCall_3_1_1_1_1_1_0());
                	      													
                	    }
                	    pushFollow(FOLLOW_180);
                	    lv_parents_18_0=ruleConceptDeclaration();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop438;
                    }
                } while (true);


                }


                }
                break;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred336_InternalKim

    // $ANTLR start synpred340_InternalKim
    public final void synpred340_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token lv_specific_23_0=null;
        Token otherlv_25=null;
        EObject lv_contextualizedTraits_20_0 = null;

        EObject lv_contextualizedTraits_22_0 = null;

        EObject lv_contextualizesTraits_24_0 = null;

        EObject lv_contextualizesTraits_26_0 = null;


        // InternalKim.g:9075:4: ( ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) )
        // InternalKim.g:9075:4: ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
        {
        // InternalKim.g:9075:4: ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
        // InternalKim.g:9076:5: {...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred340_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 2)");
        }
        // InternalKim.g:9076:117: ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) )
        // InternalKim.g:9077:6: ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 2);
        // InternalKim.g:9080:9: ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) )
        // InternalKim.g:9080:10: {...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred340_InternalKim", "true");
        }
        // InternalKim.g:9080:19: ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) )
        int alt443=2;
        int LA443_0 = input.LA(1);

        if ( (LA443_0==146) ) {
            alt443=1;
        }
        else if ( (LA443_0==147) ) {
            alt443=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 443, 0, input);

            throw nvae;
        }
        switch (alt443) {
            case 1 :
                // InternalKim.g:9080:20: (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* )
                {
                // InternalKim.g:9080:20: (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* )
                // InternalKim.g:9081:10: otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )*
                {
                otherlv_19=(Token)match(input,146,FOLLOW_6); if (state.failed) return ;
                // InternalKim.g:9085:10: ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) )
                // InternalKim.g:9086:11: (lv_contextualizedTraits_20_0= ruleObservableSemantics )
                {
                // InternalKim.g:9086:11: (lv_contextualizedTraits_20_0= ruleObservableSemantics )
                // InternalKim.g:9087:12: lv_contextualizedTraits_20_0= ruleObservableSemantics
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getContextualizedTraitsObservableSemanticsParserRuleCall_3_2_0_1_0());
                  											
                }
                pushFollow(FOLLOW_29);
                lv_contextualizedTraits_20_0=ruleObservableSemantics();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalKim.g:9104:10: (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )*
                loop441:
                do {
                    int alt441=2;
                    int LA441_0 = input.LA(1);

                    if ( (LA441_0==22) ) {
                        alt441=1;
                    }


                    switch (alt441) {
                	case 1 :
                	    // InternalKim.g:9105:11: otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) )
                	    {
                	    otherlv_21=(Token)match(input,22,FOLLOW_6); if (state.failed) return ;
                	    // InternalKim.g:9109:11: ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) )
                	    // InternalKim.g:9110:12: (lv_contextualizedTraits_22_0= ruleObservableSemantics )
                	    {
                	    // InternalKim.g:9110:12: (lv_contextualizedTraits_22_0= ruleObservableSemantics )
                	    // InternalKim.g:9111:13: lv_contextualizedTraits_22_0= ruleObservableSemantics
                	    {
                	    if ( state.backtracking==0 ) {

                	      													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getContextualizedTraitsObservableSemanticsParserRuleCall_3_2_0_2_1_0());
                	      												
                	    }
                	    pushFollow(FOLLOW_29);
                	    lv_contextualizedTraits_22_0=ruleObservableSemantics();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop441;
                    }
                } while (true);


                }


                }
                break;
            case 2 :
                // InternalKim.g:9131:9: ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* )
                {
                // InternalKim.g:9131:9: ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* )
                // InternalKim.g:9132:10: ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )*
                {
                // InternalKim.g:9132:10: ( (lv_specific_23_0= 'exposing' ) )
                // InternalKim.g:9133:11: (lv_specific_23_0= 'exposing' )
                {
                // InternalKim.g:9133:11: (lv_specific_23_0= 'exposing' )
                // InternalKim.g:9134:12: lv_specific_23_0= 'exposing'
                {
                lv_specific_23_0=(Token)match(input,147,FOLLOW_16); if (state.failed) return ;

                }


                }

                // InternalKim.g:9146:10: ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) )
                // InternalKim.g:9147:11: (lv_contextualizesTraits_24_0= ruleConceptDeclaration )
                {
                // InternalKim.g:9147:11: (lv_contextualizesTraits_24_0= ruleConceptDeclaration )
                // InternalKim.g:9148:12: lv_contextualizesTraits_24_0= ruleConceptDeclaration
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getContextualizesTraitsConceptDeclarationParserRuleCall_3_2_1_1_0());
                  											
                }
                pushFollow(FOLLOW_29);
                lv_contextualizesTraits_24_0=ruleConceptDeclaration();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalKim.g:9165:10: (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )*
                loop442:
                do {
                    int alt442=2;
                    int LA442_0 = input.LA(1);

                    if ( (LA442_0==22) ) {
                        alt442=1;
                    }


                    switch (alt442) {
                	case 1 :
                	    // InternalKim.g:9166:11: otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) )
                	    {
                	    otherlv_25=(Token)match(input,22,FOLLOW_16); if (state.failed) return ;
                	    // InternalKim.g:9170:11: ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) )
                	    // InternalKim.g:9171:12: (lv_contextualizesTraits_26_0= ruleConceptDeclaration )
                	    {
                	    // InternalKim.g:9171:12: (lv_contextualizesTraits_26_0= ruleConceptDeclaration )
                	    // InternalKim.g:9172:13: lv_contextualizesTraits_26_0= ruleConceptDeclaration
                	    {
                	    if ( state.backtracking==0 ) {

                	      													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getContextualizesTraitsConceptDeclarationParserRuleCall_3_2_1_2_1_0());
                	      												
                	    }
                	    pushFollow(FOLLOW_29);
                	    lv_contextualizesTraits_26_0=ruleConceptDeclaration();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop442;
                    }
                } while (true);


                }


                }
                break;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred340_InternalKim

    // $ANTLR start synpred342_InternalKim
    public final void synpred342_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_27=null;
        Token otherlv_28=null;
        Token lv_definedAuthority_29_0=null;
        EObject lv_upperConcept_30_0 = null;


        // InternalKim.g:9197:4: ( ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) )
        // InternalKim.g:9197:4: ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) )
        {
        // InternalKim.g:9197:4: ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) )
        // InternalKim.g:9198:5: {...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 3) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred342_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 3)");
        }
        // InternalKim.g:9198:117: ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) )
        // InternalKim.g:9199:6: ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 3);
        // InternalKim.g:9202:9: ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) )
        // InternalKim.g:9202:10: {...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred342_InternalKim", "true");
        }
        // InternalKim.g:9202:19: (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) )
        // InternalKim.g:9202:20: otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) )
        {
        otherlv_27=(Token)match(input,148,FOLLOW_121); if (state.failed) return ;
        // InternalKim.g:9206:9: ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) )
        int alt444=2;
        int LA444_0 = input.LA(1);

        if ( (LA444_0==149) ) {
            alt444=1;
        }
        else if ( (LA444_0==RULE_LOWERCASE_ID||LA444_0==RULE_CAMELCASE_ID||LA444_0==34||(LA444_0>=108 && LA444_0<=109)||(LA444_0>=116 && LA444_0<=117)||(LA444_0>=119 && LA444_0<=130)) ) {
            alt444=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 444, 0, input);

            throw nvae;
        }
        switch (alt444) {
            case 1 :
                // InternalKim.g:9207:10: (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) )
                {
                // InternalKim.g:9207:10: (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) )
                // InternalKim.g:9208:11: otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) )
                {
                otherlv_28=(Token)match(input,149,FOLLOW_122); if (state.failed) return ;
                // InternalKim.g:9212:11: ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) )
                // InternalKim.g:9213:12: (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH )
                {
                // InternalKim.g:9213:12: (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH )
                // InternalKim.g:9214:13: lv_definedAuthority_29_0= RULE_UPPERCASE_PATH
                {
                lv_definedAuthority_29_0=(Token)match(input,RULE_UPPERCASE_PATH,FOLLOW_2); if (state.failed) return ;

                }


                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:9232:10: ( (lv_upperConcept_30_0= ruleConcept ) )
                {
                // InternalKim.g:9232:10: ( (lv_upperConcept_30_0= ruleConcept ) )
                // InternalKim.g:9233:11: (lv_upperConcept_30_0= ruleConcept )
                {
                // InternalKim.g:9233:11: (lv_upperConcept_30_0= ruleConcept )
                // InternalKim.g:9234:12: lv_upperConcept_30_0= ruleConcept
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getUpperConceptConceptParserRuleCall_3_3_1_1_0());
                  											
                }
                pushFollow(FOLLOW_2);
                lv_upperConcept_30_0=ruleConcept();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred342_InternalKim

    // $ANTLR start synpred344_InternalKim
    public final void synpred344_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_31=null;
        Token otherlv_33=null;
        EObject lv_requirements_32_0 = null;

        EObject lv_requirements_34_0 = null;


        // InternalKim.g:9258:4: ( ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) )
        // InternalKim.g:9258:4: ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) )
        {
        // InternalKim.g:9258:4: ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) )
        // InternalKim.g:9259:5: {...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 4) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred344_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 4)");
        }
        // InternalKim.g:9259:117: ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) )
        // InternalKim.g:9260:6: ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 4);
        // InternalKim.g:9263:9: ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) )
        // InternalKim.g:9263:10: {...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred344_InternalKim", "true");
        }
        // InternalKim.g:9263:19: (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* )
        // InternalKim.g:9263:20: otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )*
        {
        otherlv_31=(Token)match(input,150,FOLLOW_123); if (state.failed) return ;
        // InternalKim.g:9267:9: ( (lv_requirements_32_0= ruleIdentityRequirement ) )
        // InternalKim.g:9268:10: (lv_requirements_32_0= ruleIdentityRequirement )
        {
        // InternalKim.g:9268:10: (lv_requirements_32_0= ruleIdentityRequirement )
        // InternalKim.g:9269:11: lv_requirements_32_0= ruleIdentityRequirement
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRequirementsIdentityRequirementParserRuleCall_3_4_1_0());
          										
        }
        pushFollow(FOLLOW_29);
        lv_requirements_32_0=ruleIdentityRequirement();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:9286:9: (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )*
        loop445:
        do {
            int alt445=2;
            int LA445_0 = input.LA(1);

            if ( (LA445_0==22) ) {
                alt445=1;
            }


            switch (alt445) {
        	case 1 :
        	    // InternalKim.g:9287:10: otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) )
        	    {
        	    otherlv_33=(Token)match(input,22,FOLLOW_123); if (state.failed) return ;
        	    // InternalKim.g:9291:10: ( (lv_requirements_34_0= ruleIdentityRequirement ) )
        	    // InternalKim.g:9292:11: (lv_requirements_34_0= ruleIdentityRequirement )
        	    {
        	    // InternalKim.g:9292:11: (lv_requirements_34_0= ruleIdentityRequirement )
        	    // InternalKim.g:9293:12: lv_requirements_34_0= ruleIdentityRequirement
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRequirementsIdentityRequirementParserRuleCall_3_4_2_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_29);
        	    lv_requirements_34_0=ruleIdentityRequirement();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop445;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred344_InternalKim

    // $ANTLR start synpred345_InternalKim
    public final void synpred345_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_35=null;
        EObject lv_describedQuality_36_0 = null;


        // InternalKim.g:9317:4: ( ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:9317:4: ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:9317:4: ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:9318:5: {...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 5) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred345_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 5)");
        }
        // InternalKim.g:9318:117: ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) )
        // InternalKim.g:9319:6: ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 5);
        // InternalKim.g:9322:9: ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) )
        // InternalKim.g:9322:10: {...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred345_InternalKim", "true");
        }
        // InternalKim.g:9322:19: (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:9322:20: otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) )
        {
        otherlv_35=(Token)match(input,151,FOLLOW_16); if (state.failed) return ;
        // InternalKim.g:9326:9: ( (lv_describedQuality_36_0= ruleConceptDeclaration ) )
        // InternalKim.g:9327:10: (lv_describedQuality_36_0= ruleConceptDeclaration )
        {
        // InternalKim.g:9327:10: (lv_describedQuality_36_0= ruleConceptDeclaration )
        // InternalKim.g:9328:11: lv_describedQuality_36_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDescribedQualityConceptDeclarationParserRuleCall_3_5_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_describedQuality_36_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred345_InternalKim

    // $ANTLR start synpred346_InternalKim
    public final void synpred346_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_37=null;
        Token otherlv_38=null;
        EObject lv_describedProportionality_39_0 = null;


        // InternalKim.g:9351:4: ( ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:9351:4: ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:9351:4: ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:9352:5: {...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 6) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred346_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 6)");
        }
        // InternalKim.g:9352:117: ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) )
        // InternalKim.g:9353:6: ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 6);
        // InternalKim.g:9356:9: ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) )
        // InternalKim.g:9356:10: {...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred346_InternalKim", "true");
        }
        // InternalKim.g:9356:19: (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:9356:20: otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) )
        {
        otherlv_37=(Token)match(input,152,FOLLOW_65); if (state.failed) return ;
        otherlv_38=(Token)match(input,38,FOLLOW_16); if (state.failed) return ;
        // InternalKim.g:9364:9: ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) )
        // InternalKim.g:9365:10: (lv_describedProportionality_39_0= ruleConceptDeclaration )
        {
        // InternalKim.g:9365:10: (lv_describedProportionality_39_0= ruleConceptDeclaration )
        // InternalKim.g:9366:11: lv_describedProportionality_39_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDescribedProportionalityConceptDeclarationParserRuleCall_3_6_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_describedProportionality_39_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred346_InternalKim

    // $ANTLR start synpred347_InternalKim
    public final void synpred347_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_40=null;
        Token otherlv_41=null;
        EObject lv_describedInverseProportionalityQuality_42_0 = null;


        // InternalKim.g:9389:4: ( ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:9389:4: ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:9389:4: ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:9390:5: {...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 7) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred347_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 7)");
        }
        // InternalKim.g:9390:117: ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) )
        // InternalKim.g:9391:6: ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 7);
        // InternalKim.g:9394:9: ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) )
        // InternalKim.g:9394:10: {...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred347_InternalKim", "true");
        }
        // InternalKim.g:9394:19: (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:9394:20: otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) )
        {
        otherlv_40=(Token)match(input,153,FOLLOW_65); if (state.failed) return ;
        otherlv_41=(Token)match(input,38,FOLLOW_16); if (state.failed) return ;
        // InternalKim.g:9402:9: ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) )
        // InternalKim.g:9403:10: (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration )
        {
        // InternalKim.g:9403:10: (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration )
        // InternalKim.g:9404:11: lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDescribedInverseProportionalityQualityConceptDeclarationParserRuleCall_3_7_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_describedInverseProportionalityQuality_42_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred347_InternalKim

    // $ANTLR start synpred348_InternalKim
    public final void synpred348_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_43=null;
        EObject lv_describedNonzeroQuality_44_0 = null;


        // InternalKim.g:9427:4: ( ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:9427:4: ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:9427:4: ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:9428:5: {...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 8) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred348_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 8)");
        }
        // InternalKim.g:9428:117: ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) )
        // InternalKim.g:9429:6: ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 8);
        // InternalKim.g:9432:9: ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) )
        // InternalKim.g:9432:10: {...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred348_InternalKim", "true");
        }
        // InternalKim.g:9432:19: (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:9432:20: otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) )
        {
        otherlv_43=(Token)match(input,154,FOLLOW_16); if (state.failed) return ;
        // InternalKim.g:9436:9: ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) )
        // InternalKim.g:9437:10: (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration )
        {
        // InternalKim.g:9437:10: (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration )
        // InternalKim.g:9438:11: lv_describedNonzeroQuality_44_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDescribedNonzeroQualityConceptDeclarationParserRuleCall_3_8_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_describedNonzeroQuality_44_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred348_InternalKim

    // $ANTLR start synpred349_InternalKim
    public final void synpred349_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_45=null;
        EObject lv_classifiesQuality_46_0 = null;


        // InternalKim.g:9461:4: ( ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:9461:4: ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:9461:4: ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:9462:5: {...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 9) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred349_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 9)");
        }
        // InternalKim.g:9462:117: ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) )
        // InternalKim.g:9463:6: ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 9);
        // InternalKim.g:9466:9: ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) )
        // InternalKim.g:9466:10: {...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred349_InternalKim", "true");
        }
        // InternalKim.g:9466:19: (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:9466:20: otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) )
        {
        otherlv_45=(Token)match(input,155,FOLLOW_16); if (state.failed) return ;
        // InternalKim.g:9470:9: ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) )
        // InternalKim.g:9471:10: (lv_classifiesQuality_46_0= ruleConceptDeclaration )
        {
        // InternalKim.g:9471:10: (lv_classifiesQuality_46_0= ruleConceptDeclaration )
        // InternalKim.g:9472:11: lv_classifiesQuality_46_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getClassifiesQualityConceptDeclarationParserRuleCall_3_9_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_classifiesQuality_46_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred349_InternalKim

    // $ANTLR start synpred350_InternalKim
    public final void synpred350_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_47=null;
        EObject lv_discretizesQuality_48_0 = null;


        // InternalKim.g:9495:4: ( ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:9495:4: ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:9495:4: ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:9496:5: {...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 10) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred350_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 10)");
        }
        // InternalKim.g:9496:118: ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) )
        // InternalKim.g:9497:6: ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 10);
        // InternalKim.g:9500:9: ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) )
        // InternalKim.g:9500:10: {...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred350_InternalKim", "true");
        }
        // InternalKim.g:9500:19: (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:9500:20: otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) )
        {
        otherlv_47=(Token)match(input,156,FOLLOW_16); if (state.failed) return ;
        // InternalKim.g:9504:9: ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) )
        // InternalKim.g:9505:10: (lv_discretizesQuality_48_0= ruleConceptDeclaration )
        {
        // InternalKim.g:9505:10: (lv_discretizesQuality_48_0= ruleConceptDeclaration )
        // InternalKim.g:9506:11: lv_discretizesQuality_48_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDiscretizesQualityConceptDeclarationParserRuleCall_3_10_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_discretizesQuality_48_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred350_InternalKim

    // $ANTLR start synpred352_InternalKim
    public final void synpred352_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_49=null;
        Token otherlv_51=null;
        EObject lv_actuallyInheritedTraits_50_0 = null;

        EObject lv_actuallyInheritedTraits_52_0 = null;


        // InternalKim.g:9529:4: ( ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
        // InternalKim.g:9529:4: ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) )
        {
        // InternalKim.g:9529:4: ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) )
        // InternalKim.g:9530:5: {...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 11) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred352_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 11)");
        }
        // InternalKim.g:9530:118: ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) )
        // InternalKim.g:9531:6: ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 11);
        // InternalKim.g:9534:9: ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) )
        // InternalKim.g:9534:10: {...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred352_InternalKim", "true");
        }
        // InternalKim.g:9534:19: (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* )
        // InternalKim.g:9534:20: otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )*
        {
        otherlv_49=(Token)match(input,157,FOLLOW_16); if (state.failed) return ;
        // InternalKim.g:9538:9: ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) )
        // InternalKim.g:9539:10: (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration )
        {
        // InternalKim.g:9539:10: (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration )
        // InternalKim.g:9540:11: lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getActuallyInheritedTraitsConceptDeclarationParserRuleCall_3_11_1_0());
          										
        }
        pushFollow(FOLLOW_29);
        lv_actuallyInheritedTraits_50_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:9557:9: (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )*
        loop446:
        do {
            int alt446=2;
            int LA446_0 = input.LA(1);

            if ( (LA446_0==22) ) {
                alt446=1;
            }


            switch (alt446) {
        	case 1 :
        	    // InternalKim.g:9558:10: otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) )
        	    {
        	    otherlv_51=(Token)match(input,22,FOLLOW_16); if (state.failed) return ;
        	    // InternalKim.g:9562:10: ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) )
        	    // InternalKim.g:9563:11: (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration )
        	    {
        	    // InternalKim.g:9563:11: (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration )
        	    // InternalKim.g:9564:12: lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getActuallyInheritedTraitsConceptDeclarationParserRuleCall_3_11_2_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_29);
        	    lv_actuallyInheritedTraits_52_0=ruleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop446;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred352_InternalKim

    // $ANTLR start synpred357_InternalKim
    public final void synpred357_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_53=null;
        Token otherlv_54=null;
        Token otherlv_56=null;
        Token otherlv_58=null;
        Token otherlv_60=null;
        Token otherlv_62=null;
        Token otherlv_64=null;
        EObject lv_roles_55_0 = null;

        EObject lv_roles_57_0 = null;

        EObject lv_targetObservables_59_0 = null;

        EObject lv_targetObservables_61_0 = null;

        EObject lv_restrictedObservables_63_0 = null;

        EObject lv_restrictedObservables_65_0 = null;


        // InternalKim.g:9588:4: ( ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) )
        // InternalKim.g:9588:4: ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
        {
        // InternalKim.g:9588:4: ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
        // InternalKim.g:9589:5: {...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 12) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred357_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 12)");
        }
        // InternalKim.g:9589:118: ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) )
        // InternalKim.g:9590:6: ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 12);
        // InternalKim.g:9593:9: ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) )
        // InternalKim.g:9593:10: {...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred357_InternalKim", "true");
        }
        // InternalKim.g:9593:19: (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) )
        // InternalKim.g:9593:20: otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* )
        {
        otherlv_53=(Token)match(input,158,FOLLOW_124); if (state.failed) return ;
        otherlv_54=(Token)match(input,159,FOLLOW_16); if (state.failed) return ;
        // InternalKim.g:9601:9: ( (lv_roles_55_0= ruleConceptDeclaration ) )
        // InternalKim.g:9602:10: (lv_roles_55_0= ruleConceptDeclaration )
        {
        // InternalKim.g:9602:10: (lv_roles_55_0= ruleConceptDeclaration )
        // InternalKim.g:9603:11: lv_roles_55_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRolesConceptDeclarationParserRuleCall_3_12_2_0());
          										
        }
        pushFollow(FOLLOW_125);
        lv_roles_55_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:9620:9: (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )*
        loop448:
        do {
            int alt448=2;
            int LA448_0 = input.LA(1);

            if ( (LA448_0==22) ) {
                alt448=1;
            }


            switch (alt448) {
        	case 1 :
        	    // InternalKim.g:9621:10: otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) )
        	    {
        	    otherlv_56=(Token)match(input,22,FOLLOW_16); if (state.failed) return ;
        	    // InternalKim.g:9625:10: ( (lv_roles_57_0= ruleConceptDeclaration ) )
        	    // InternalKim.g:9626:11: (lv_roles_57_0= ruleConceptDeclaration )
        	    {
        	    // InternalKim.g:9626:11: (lv_roles_57_0= ruleConceptDeclaration )
        	    // InternalKim.g:9627:12: lv_roles_57_0= ruleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRolesConceptDeclarationParserRuleCall_3_12_3_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_125);
        	    lv_roles_57_0=ruleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop448;
            }
        } while (true);

        // InternalKim.g:9645:9: (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )?
        int alt450=2;
        int LA450_0 = input.LA(1);

        if ( (LA450_0==101) ) {
            alt450=1;
        }
        switch (alt450) {
            case 1 :
                // InternalKim.g:9646:10: otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )*
                {
                otherlv_58=(Token)match(input,101,FOLLOW_16); if (state.failed) return ;
                // InternalKim.g:9650:10: ( (lv_targetObservables_59_0= ruleConceptDeclaration ) )
                // InternalKim.g:9651:11: (lv_targetObservables_59_0= ruleConceptDeclaration )
                {
                // InternalKim.g:9651:11: (lv_targetObservables_59_0= ruleConceptDeclaration )
                // InternalKim.g:9652:12: lv_targetObservables_59_0= ruleConceptDeclaration
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getTargetObservablesConceptDeclarationParserRuleCall_3_12_4_1_0());
                  											
                }
                pushFollow(FOLLOW_126);
                lv_targetObservables_59_0=ruleConceptDeclaration();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalKim.g:9669:10: (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )*
                loop449:
                do {
                    int alt449=2;
                    int LA449_0 = input.LA(1);

                    if ( (LA449_0==22) ) {
                        alt449=1;
                    }


                    switch (alt449) {
                	case 1 :
                	    // InternalKim.g:9670:11: otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) )
                	    {
                	    otherlv_60=(Token)match(input,22,FOLLOW_16); if (state.failed) return ;
                	    // InternalKim.g:9674:11: ( (lv_targetObservables_61_0= ruleConceptDeclaration ) )
                	    // InternalKim.g:9675:12: (lv_targetObservables_61_0= ruleConceptDeclaration )
                	    {
                	    // InternalKim.g:9675:12: (lv_targetObservables_61_0= ruleConceptDeclaration )
                	    // InternalKim.g:9676:13: lv_targetObservables_61_0= ruleConceptDeclaration
                	    {
                	    if ( state.backtracking==0 ) {

                	      													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getTargetObservablesConceptDeclarationParserRuleCall_3_12_4_2_1_0());
                	      												
                	    }
                	    pushFollow(FOLLOW_126);
                	    lv_targetObservables_61_0=ruleConceptDeclaration();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop449;
                    }
                } while (true);


                }
                break;

        }

        // InternalKim.g:9695:9: (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* )
        // InternalKim.g:9696:10: otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )*
        {
        otherlv_62=(Token)match(input,46,FOLLOW_16); if (state.failed) return ;
        // InternalKim.g:9700:10: ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) )
        // InternalKim.g:9701:11: (lv_restrictedObservables_63_0= ruleConceptDeclaration )
        {
        // InternalKim.g:9701:11: (lv_restrictedObservables_63_0= ruleConceptDeclaration )
        // InternalKim.g:9702:12: lv_restrictedObservables_63_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRestrictedObservablesConceptDeclarationParserRuleCall_3_12_5_1_0());
          											
        }
        pushFollow(FOLLOW_29);
        lv_restrictedObservables_63_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:9719:10: (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )*
        loop451:
        do {
            int alt451=2;
            int LA451_0 = input.LA(1);

            if ( (LA451_0==22) ) {
                alt451=1;
            }


            switch (alt451) {
        	case 1 :
        	    // InternalKim.g:9720:11: otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) )
        	    {
        	    otherlv_64=(Token)match(input,22,FOLLOW_16); if (state.failed) return ;
        	    // InternalKim.g:9724:11: ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) )
        	    // InternalKim.g:9725:12: (lv_restrictedObservables_65_0= ruleConceptDeclaration )
        	    {
        	    // InternalKim.g:9725:12: (lv_restrictedObservables_65_0= ruleConceptDeclaration )
        	    // InternalKim.g:9726:13: lv_restrictedObservables_65_0= ruleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRestrictedObservablesConceptDeclarationParserRuleCall_3_12_5_2_1_0());
        	      												
        	    }
        	    pushFollow(FOLLOW_29);
        	    lv_restrictedObservables_65_0=ruleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop451;
            }
        } while (true);


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred357_InternalKim

    // $ANTLR start synpred361_InternalKim
    public final void synpred361_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_66=null;
        Token otherlv_68=null;
        Token otherlv_70=null;
        Token otherlv_72=null;
        EObject lv_conferredTraits_67_0 = null;

        EObject lv_conferredTraits_69_0 = null;

        EObject lv_conferredTargets_71_0 = null;

        EObject lv_conferredTargets_73_0 = null;


        // InternalKim.g:9751:4: ( ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) )
        // InternalKim.g:9751:4: ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) )
        {
        // InternalKim.g:9751:4: ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) )
        // InternalKim.g:9752:5: {...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 13) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred361_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 13)");
        }
        // InternalKim.g:9752:118: ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) )
        // InternalKim.g:9753:6: ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 13);
        // InternalKim.g:9756:9: ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) )
        // InternalKim.g:9756:10: {...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred361_InternalKim", "true");
        }
        // InternalKim.g:9756:19: (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? )
        // InternalKim.g:9756:20: otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )?
        {
        otherlv_66=(Token)match(input,160,FOLLOW_16); if (state.failed) return ;
        // InternalKim.g:9760:9: ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) )
        // InternalKim.g:9761:10: (lv_conferredTraits_67_0= ruleConceptDeclaration )
        {
        // InternalKim.g:9761:10: (lv_conferredTraits_67_0= ruleConceptDeclaration )
        // InternalKim.g:9762:11: lv_conferredTraits_67_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getConferredTraitsConceptDeclarationParserRuleCall_3_13_1_0());
          										
        }
        pushFollow(FOLLOW_181);
        lv_conferredTraits_67_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:9779:9: (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )*
        loop453:
        do {
            int alt453=2;
            int LA453_0 = input.LA(1);

            if ( (LA453_0==22) ) {
                alt453=1;
            }


            switch (alt453) {
        	case 1 :
        	    // InternalKim.g:9780:10: otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) )
        	    {
        	    otherlv_68=(Token)match(input,22,FOLLOW_16); if (state.failed) return ;
        	    // InternalKim.g:9784:10: ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) )
        	    // InternalKim.g:9785:11: (lv_conferredTraits_69_0= ruleConceptDeclaration )
        	    {
        	    // InternalKim.g:9785:11: (lv_conferredTraits_69_0= ruleConceptDeclaration )
        	    // InternalKim.g:9786:12: lv_conferredTraits_69_0= ruleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getConferredTraitsConceptDeclarationParserRuleCall_3_13_2_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_181);
        	    lv_conferredTraits_69_0=ruleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop453;
            }
        } while (true);

        // InternalKim.g:9804:9: (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )?
        int alt455=2;
        int LA455_0 = input.LA(1);

        if ( (LA455_0==32) ) {
            alt455=1;
        }
        switch (alt455) {
            case 1 :
                // InternalKim.g:9805:10: otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )*
                {
                otherlv_70=(Token)match(input,32,FOLLOW_16); if (state.failed) return ;
                // InternalKim.g:9809:10: ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) )
                // InternalKim.g:9810:11: (lv_conferredTargets_71_0= ruleConceptDeclaration )
                {
                // InternalKim.g:9810:11: (lv_conferredTargets_71_0= ruleConceptDeclaration )
                // InternalKim.g:9811:12: lv_conferredTargets_71_0= ruleConceptDeclaration
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getConferredTargetsConceptDeclarationParserRuleCall_3_13_3_1_0());
                  											
                }
                pushFollow(FOLLOW_29);
                lv_conferredTargets_71_0=ruleConceptDeclaration();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalKim.g:9828:10: (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )*
                loop454:
                do {
                    int alt454=2;
                    int LA454_0 = input.LA(1);

                    if ( (LA454_0==22) ) {
                        alt454=1;
                    }


                    switch (alt454) {
                	case 1 :
                	    // InternalKim.g:9829:11: otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) )
                	    {
                	    otherlv_72=(Token)match(input,22,FOLLOW_16); if (state.failed) return ;
                	    // InternalKim.g:9833:11: ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) )
                	    // InternalKim.g:9834:12: (lv_conferredTargets_73_0= ruleConceptDeclaration )
                	    {
                	    // InternalKim.g:9834:12: (lv_conferredTargets_73_0= ruleConceptDeclaration )
                	    // InternalKim.g:9835:13: lv_conferredTargets_73_0= ruleConceptDeclaration
                	    {
                	    if ( state.backtracking==0 ) {

                	      													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getConferredTargetsConceptDeclarationParserRuleCall_3_13_3_2_1_0());
                	      												
                	    }
                	    pushFollow(FOLLOW_29);
                	    lv_conferredTargets_73_0=ruleConceptDeclaration();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop454;
                    }
                } while (true);


                }
                break;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred361_InternalKim

    // $ANTLR start synpred364_InternalKim
    public final void synpred364_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_74=null;
        Token lv_constituent_75_0=null;
        Token lv_constitutes_76_0=null;
        Token lv_partOf_77_0=null;
        EObject lv_whole_78_0 = null;


        // InternalKim.g:9860:4: ( ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:9860:4: ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:9860:4: ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:9861:5: {...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 14) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred364_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 14)");
        }
        // InternalKim.g:9861:118: ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) )
        // InternalKim.g:9862:6: ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 14);
        // InternalKim.g:9865:9: ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) )
        // InternalKim.g:9865:10: {...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred364_InternalKim", "true");
        }
        // InternalKim.g:9865:19: ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:9865:20: (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) )
        {
        // InternalKim.g:9865:20: (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) )
        int alt456=3;
        switch ( input.LA(1) ) {
        case 161:
            {
            alt456=1;
            }
            break;
        case 162:
            {
            alt456=2;
            }
            break;
        case 163:
            {
            alt456=3;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 456, 0, input);

            throw nvae;
        }

        switch (alt456) {
            case 1 :
                // InternalKim.g:9866:10: otherlv_74= 'part'
                {
                otherlv_74=(Token)match(input,161,FOLLOW_101); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:9871:10: ( (lv_constituent_75_0= 'constituent' ) )
                {
                // InternalKim.g:9871:10: ( (lv_constituent_75_0= 'constituent' ) )
                // InternalKim.g:9872:11: (lv_constituent_75_0= 'constituent' )
                {
                // InternalKim.g:9872:11: (lv_constituent_75_0= 'constituent' )
                // InternalKim.g:9873:12: lv_constituent_75_0= 'constituent'
                {
                lv_constituent_75_0=(Token)match(input,162,FOLLOW_101); if (state.failed) return ;

                }


                }


                }
                break;
            case 3 :
                // InternalKim.g:9886:10: ( (lv_constitutes_76_0= 'consists' ) )
                {
                // InternalKim.g:9886:10: ( (lv_constitutes_76_0= 'consists' ) )
                // InternalKim.g:9887:11: (lv_constitutes_76_0= 'consists' )
                {
                // InternalKim.g:9887:11: (lv_constitutes_76_0= 'consists' )
                // InternalKim.g:9888:12: lv_constitutes_76_0= 'consists'
                {
                lv_constitutes_76_0=(Token)match(input,163,FOLLOW_101); if (state.failed) return ;

                }


                }


                }
                break;

        }

        // InternalKim.g:9901:9: ( (lv_partOf_77_0= 'of' ) )
        // InternalKim.g:9902:10: (lv_partOf_77_0= 'of' )
        {
        // InternalKim.g:9902:10: (lv_partOf_77_0= 'of' )
        // InternalKim.g:9903:11: lv_partOf_77_0= 'of'
        {
        lv_partOf_77_0=(Token)match(input,100,FOLLOW_16); if (state.failed) return ;

        }


        }

        // InternalKim.g:9915:9: ( (lv_whole_78_0= ruleConceptDeclaration ) )
        // InternalKim.g:9916:10: (lv_whole_78_0= ruleConceptDeclaration )
        {
        // InternalKim.g:9916:10: (lv_whole_78_0= ruleConceptDeclaration )
        // InternalKim.g:9917:11: lv_whole_78_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getWholeConceptDeclarationParserRuleCall_3_14_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_whole_78_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred364_InternalKim

    // $ANTLR start synpred366_InternalKim
    public final void synpred366_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_79=null;
        Token otherlv_81=null;
        EObject lv_creates_80_0 = null;

        EObject lv_creates_82_0 = null;


        // InternalKim.g:9940:4: ( ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
        // InternalKim.g:9940:4: ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) )
        {
        // InternalKim.g:9940:4: ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) )
        // InternalKim.g:9941:5: {...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 15) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred366_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 15)");
        }
        // InternalKim.g:9941:118: ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) )
        // InternalKim.g:9942:6: ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 15);
        // InternalKim.g:9945:9: ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) )
        // InternalKim.g:9945:10: {...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred366_InternalKim", "true");
        }
        // InternalKim.g:9945:19: (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* )
        // InternalKim.g:9945:20: otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )*
        {
        otherlv_79=(Token)match(input,164,FOLLOW_16); if (state.failed) return ;
        // InternalKim.g:9949:9: ( (lv_creates_80_0= ruleConceptDeclaration ) )
        // InternalKim.g:9950:10: (lv_creates_80_0= ruleConceptDeclaration )
        {
        // InternalKim.g:9950:10: (lv_creates_80_0= ruleConceptDeclaration )
        // InternalKim.g:9951:11: lv_creates_80_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getCreatesConceptDeclarationParserRuleCall_3_15_1_0());
          										
        }
        pushFollow(FOLLOW_29);
        lv_creates_80_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:9968:9: (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )*
        loop457:
        do {
            int alt457=2;
            int LA457_0 = input.LA(1);

            if ( (LA457_0==22) ) {
                alt457=1;
            }


            switch (alt457) {
        	case 1 :
        	    // InternalKim.g:9969:10: otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) )
        	    {
        	    otherlv_81=(Token)match(input,22,FOLLOW_16); if (state.failed) return ;
        	    // InternalKim.g:9973:10: ( (lv_creates_82_0= ruleConceptDeclaration ) )
        	    // InternalKim.g:9974:11: (lv_creates_82_0= ruleConceptDeclaration )
        	    {
        	    // InternalKim.g:9974:11: (lv_creates_82_0= ruleConceptDeclaration )
        	    // InternalKim.g:9975:12: lv_creates_82_0= ruleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getCreatesConceptDeclarationParserRuleCall_3_15_2_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_29);
        	    lv_creates_82_0=ruleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop457;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred366_InternalKim

    // $ANTLR start synpred368_InternalKim
    public final void synpred368_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_83=null;
        Token otherlv_84=null;
        Token otherlv_86=null;
        EObject lv_traitTargets_85_0 = null;

        EObject lv_traitTargets_87_0 = null;


        // InternalKim.g:9999:4: ( ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) )
        // InternalKim.g:9999:4: ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) )
        {
        // InternalKim.g:9999:4: ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) )
        // InternalKim.g:10000:5: {...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 16) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred368_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 16)");
        }
        // InternalKim.g:10000:118: ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) )
        // InternalKim.g:10001:6: ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 16);
        // InternalKim.g:10004:9: ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) )
        // InternalKim.g:10004:10: {...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred368_InternalKim", "true");
        }
        // InternalKim.g:10004:19: (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* )
        // InternalKim.g:10004:20: otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )*
        {
        otherlv_83=(Token)match(input,165,FOLLOW_18); if (state.failed) return ;
        otherlv_84=(Token)match(input,32,FOLLOW_16); if (state.failed) return ;
        // InternalKim.g:10012:9: ( (lv_traitTargets_85_0= ruleApplicableTarget ) )
        // InternalKim.g:10013:10: (lv_traitTargets_85_0= ruleApplicableTarget )
        {
        // InternalKim.g:10013:10: (lv_traitTargets_85_0= ruleApplicableTarget )
        // InternalKim.g:10014:11: lv_traitTargets_85_0= ruleApplicableTarget
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getTraitTargetsApplicableTargetParserRuleCall_3_16_2_0());
          										
        }
        pushFollow(FOLLOW_29);
        lv_traitTargets_85_0=ruleApplicableTarget();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:10031:9: (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )*
        loop458:
        do {
            int alt458=2;
            int LA458_0 = input.LA(1);

            if ( (LA458_0==22) ) {
                alt458=1;
            }


            switch (alt458) {
        	case 1 :
        	    // InternalKim.g:10032:10: otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) )
        	    {
        	    otherlv_86=(Token)match(input,22,FOLLOW_16); if (state.failed) return ;
        	    // InternalKim.g:10036:10: ( (lv_traitTargets_87_0= ruleApplicableTarget ) )
        	    // InternalKim.g:10037:11: (lv_traitTargets_87_0= ruleApplicableTarget )
        	    {
        	    // InternalKim.g:10037:11: (lv_traitTargets_87_0= ruleApplicableTarget )
        	    // InternalKim.g:10038:12: lv_traitTargets_87_0= ruleApplicableTarget
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getTraitTargetsApplicableTargetParserRuleCall_3_16_3_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_29);
        	    lv_traitTargets_87_0=ruleApplicableTarget();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop458;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred368_InternalKim

    // $ANTLR start synpred372_InternalKim
    public final void synpred372_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_88=null;
        Token otherlv_90=null;
        Token otherlv_92=null;
        Token otherlv_94=null;
        EObject lv_domains_89_0 = null;

        EObject lv_ranges_91_0 = null;

        EObject lv_domains_93_0 = null;

        EObject lv_ranges_95_0 = null;


        // InternalKim.g:10062:4: ( ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) )
        // InternalKim.g:10062:4: ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) )
        {
        // InternalKim.g:10062:4: ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) )
        // InternalKim.g:10063:5: {...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 17) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred372_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 17)");
        }
        // InternalKim.g:10063:118: ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) )
        // InternalKim.g:10064:6: ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 17);
        // InternalKim.g:10067:9: ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) )
        // InternalKim.g:10067:10: {...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred372_InternalKim", "true");
        }
        // InternalKim.g:10067:19: (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* )
        // InternalKim.g:10067:20: otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )*
        {
        otherlv_88=(Token)match(input,166,FOLLOW_16); if (state.failed) return ;
        // InternalKim.g:10071:9: ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:10072:10: (lv_domains_89_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:10072:10: (lv_domains_89_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:10073:11: lv_domains_89_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDomainsSimpleConceptDeclarationParserRuleCall_3_17_1_0());
          										
        }
        pushFollow(FOLLOW_18);
        lv_domains_89_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:10090:9: ( ( 'to' )=>otherlv_90= 'to' )
        // InternalKim.g:10091:10: ( 'to' )=>otherlv_90= 'to'
        {
        otherlv_90=(Token)match(input,32,FOLLOW_16); if (state.failed) return ;

        }

        // InternalKim.g:10097:9: ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:10098:10: (lv_ranges_91_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:10098:10: (lv_ranges_91_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:10099:11: lv_ranges_91_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRangesSimpleConceptDeclarationParserRuleCall_3_17_3_0());
          										
        }
        pushFollow(FOLLOW_29);
        lv_ranges_91_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:10116:9: (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )*
        loop459:
        do {
            int alt459=2;
            int LA459_0 = input.LA(1);

            if ( (LA459_0==22) ) {
                alt459=1;
            }


            switch (alt459) {
        	case 1 :
        	    // InternalKim.g:10117:10: otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) )
        	    {
        	    otherlv_92=(Token)match(input,22,FOLLOW_16); if (state.failed) return ;
        	    // InternalKim.g:10121:10: ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:10122:11: (lv_domains_93_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:10122:11: (lv_domains_93_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:10123:12: lv_domains_93_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDomainsSimpleConceptDeclarationParserRuleCall_3_17_4_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_18);
        	    lv_domains_93_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }

        	    // InternalKim.g:10140:10: ( ( 'to' )=>otherlv_94= 'to' )
        	    // InternalKim.g:10141:11: ( 'to' )=>otherlv_94= 'to'
        	    {
        	    otherlv_94=(Token)match(input,32,FOLLOW_16); if (state.failed) return ;

        	    }

        	    // InternalKim.g:10147:10: ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:10148:11: (lv_ranges_95_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:10148:11: (lv_ranges_95_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:10149:12: lv_ranges_95_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRangesSimpleConceptDeclarationParserRuleCall_3_17_4_3_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_29);
        	    lv_ranges_95_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop459;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred372_InternalKim

    // $ANTLR start synpred373_InternalKim
    public final void synpred373_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_96=null;
        Token otherlv_97=null;
        EObject lv_inverse_98_0 = null;


        // InternalKim.g:10173:4: ( ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:10173:4: ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:10173:4: ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:10174:5: {...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 18) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred373_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 18)");
        }
        // InternalKim.g:10174:118: ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) )
        // InternalKim.g:10175:6: ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 18);
        // InternalKim.g:10178:9: ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) )
        // InternalKim.g:10178:10: {...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred373_InternalKim", "true");
        }
        // InternalKim.g:10178:19: (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:10178:20: otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) )
        {
        otherlv_96=(Token)match(input,167,FOLLOW_101); if (state.failed) return ;
        otherlv_97=(Token)match(input,100,FOLLOW_16); if (state.failed) return ;
        // InternalKim.g:10186:9: ( (lv_inverse_98_0= ruleConceptDeclaration ) )
        // InternalKim.g:10187:10: (lv_inverse_98_0= ruleConceptDeclaration )
        {
        // InternalKim.g:10187:10: (lv_inverse_98_0= ruleConceptDeclaration )
        // InternalKim.g:10188:11: lv_inverse_98_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getInverseConceptDeclarationParserRuleCall_3_18_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_inverse_98_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred373_InternalKim

    // $ANTLR start synpred375_InternalKim
    public final void synpred375_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_99=null;
        Token otherlv_101=null;
        EObject lv_qualitiesAffected_100_0 = null;

        EObject lv_qualitiesAffected_102_0 = null;


        // InternalKim.g:10211:4: ( ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
        // InternalKim.g:10211:4: ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) )
        {
        // InternalKim.g:10211:4: ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) )
        // InternalKim.g:10212:5: {...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 19) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred375_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 19)");
        }
        // InternalKim.g:10212:118: ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) )
        // InternalKim.g:10213:6: ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 19);
        // InternalKim.g:10216:9: ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) )
        // InternalKim.g:10216:10: {...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred375_InternalKim", "true");
        }
        // InternalKim.g:10216:19: (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* )
        // InternalKim.g:10216:20: otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )*
        {
        otherlv_99=(Token)match(input,168,FOLLOW_16); if (state.failed) return ;
        // InternalKim.g:10220:9: ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) )
        // InternalKim.g:10221:10: (lv_qualitiesAffected_100_0= ruleConceptDeclaration )
        {
        // InternalKim.g:10221:10: (lv_qualitiesAffected_100_0= ruleConceptDeclaration )
        // InternalKim.g:10222:11: lv_qualitiesAffected_100_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getQualitiesAffectedConceptDeclarationParserRuleCall_3_19_1_0());
          										
        }
        pushFollow(FOLLOW_29);
        lv_qualitiesAffected_100_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:10239:9: (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )*
        loop460:
        do {
            int alt460=2;
            int LA460_0 = input.LA(1);

            if ( (LA460_0==22) ) {
                alt460=1;
            }


            switch (alt460) {
        	case 1 :
        	    // InternalKim.g:10240:10: otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) )
        	    {
        	    otherlv_101=(Token)match(input,22,FOLLOW_16); if (state.failed) return ;
        	    // InternalKim.g:10244:10: ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) )
        	    // InternalKim.g:10245:11: (lv_qualitiesAffected_102_0= ruleConceptDeclaration )
        	    {
        	    // InternalKim.g:10245:11: (lv_qualitiesAffected_102_0= ruleConceptDeclaration )
        	    // InternalKim.g:10246:12: lv_qualitiesAffected_102_0= ruleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getQualitiesAffectedConceptDeclarationParserRuleCall_3_19_2_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_29);
        	    lv_qualitiesAffected_102_0=ruleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop460;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred375_InternalKim

    // $ANTLR start synpred378_InternalKim
    public final void synpred378_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_103=null;
        Token lv_disjoint_104_0=null;
        Token otherlv_105=null;
        Token otherlv_107=null;
        EObject lv_children_106_0 = null;

        EObject lv_children_108_0 = null;


        // InternalKim.g:10270:4: ( ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) )
        // InternalKim.g:10270:4: ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) )
        {
        // InternalKim.g:10270:4: ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) )
        // InternalKim.g:10271:5: {...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 20) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred378_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 20)");
        }
        // InternalKim.g:10271:118: ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) )
        // InternalKim.g:10272:6: ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 20);
        // InternalKim.g:10275:9: ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) )
        // InternalKim.g:10275:10: {...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred378_InternalKim", "true");
        }
        // InternalKim.g:10275:19: (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* )
        // InternalKim.g:10275:20: otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )*
        {
        otherlv_103=(Token)match(input,158,FOLLOW_128); if (state.failed) return ;
        // InternalKim.g:10279:9: ( (lv_disjoint_104_0= 'disjoint' ) )?
        int alt461=2;
        int LA461_0 = input.LA(1);

        if ( (LA461_0==81) ) {
            alt461=1;
        }
        switch (alt461) {
            case 1 :
                // InternalKim.g:10280:10: (lv_disjoint_104_0= 'disjoint' )
                {
                // InternalKim.g:10280:10: (lv_disjoint_104_0= 'disjoint' )
                // InternalKim.g:10281:11: lv_disjoint_104_0= 'disjoint'
                {
                lv_disjoint_104_0=(Token)match(input,81,FOLLOW_129); if (state.failed) return ;

                }


                }
                break;

        }

        otherlv_105=(Token)match(input,169,FOLLOW_130); if (state.failed) return ;
        // InternalKim.g:10297:9: ( (lv_children_106_0= ruleChildConcept ) )
        // InternalKim.g:10298:10: (lv_children_106_0= ruleChildConcept )
        {
        // InternalKim.g:10298:10: (lv_children_106_0= ruleChildConcept )
        // InternalKim.g:10299:11: lv_children_106_0= ruleChildConcept
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getChildrenChildConceptParserRuleCall_3_20_3_0());
          										
        }
        pushFollow(FOLLOW_29);
        lv_children_106_0=ruleChildConcept();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:10316:9: (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )*
        loop462:
        do {
            int alt462=2;
            int LA462_0 = input.LA(1);

            if ( (LA462_0==22) ) {
                alt462=1;
            }


            switch (alt462) {
        	case 1 :
        	    // InternalKim.g:10317:10: otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) )
        	    {
        	    otherlv_107=(Token)match(input,22,FOLLOW_130); if (state.failed) return ;
        	    // InternalKim.g:10321:10: ( (lv_children_108_0= ruleChildConcept ) )
        	    // InternalKim.g:10322:11: (lv_children_108_0= ruleChildConcept )
        	    {
        	    // InternalKim.g:10322:11: (lv_children_108_0= ruleChildConcept )
        	    // InternalKim.g:10323:12: lv_children_108_0= ruleChildConcept
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getChildrenChildConceptParserRuleCall_3_20_4_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_29);
        	    lv_children_108_0=ruleChildConcept();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop462;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred378_InternalKim

    // $ANTLR start synpred379_InternalKim
    public final void synpred379_InternalKim_fragment() throws RecognitionException {   
        EObject lv_restrictions_109_0 = null;


        // InternalKim.g:10352:10: ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )
        // InternalKim.g:10352:10: {...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred379_InternalKim", "true");
        }
        // InternalKim.g:10352:19: ( (lv_restrictions_109_0= ruleRestrictionStatement ) )
        // InternalKim.g:10352:20: (lv_restrictions_109_0= ruleRestrictionStatement )
        {
        // InternalKim.g:10352:20: (lv_restrictions_109_0= ruleRestrictionStatement )
        // InternalKim.g:10353:10: lv_restrictions_109_0= ruleRestrictionStatement
        {
        if ( state.backtracking==0 ) {

          										newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRestrictionsRestrictionStatementParserRuleCall_3_21_0());
          									
        }
        pushFollow(FOLLOW_2);
        lv_restrictions_109_0=ruleRestrictionStatement();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred379_InternalKim

    // $ANTLR start synpred380_InternalKim
    public final void synpred380_InternalKim_fragment() throws RecognitionException {   
        EObject lv_restrictions_109_0 = null;


        // InternalKim.g:10347:4: ( ({...}? => ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ ) ) )
        // InternalKim.g:10347:4: ({...}? => ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ ) )
        {
        // InternalKim.g:10347:4: ({...}? => ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ ) )
        // InternalKim.g:10348:5: {...}? => ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred380_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21)");
        }
        // InternalKim.g:10348:118: ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ )
        // InternalKim.g:10349:6: ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21);
        // InternalKim.g:10352:9: ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+
        int cnt463=0;
        loop463:
        do {
            int alt463=2;
            int LA463_0 = input.LA(1);

            if ( (LA463_0==175) && ((true))) {
                alt463=1;
            }
            else if ( (LA463_0==158) && ((true))) {
                alt463=1;
            }
            else if ( (LA463_0==176) && ((true))) {
                alt463=1;
            }
            else if ( (LA463_0==177) && ((true))) {
                alt463=1;
            }


            switch (alt463) {
        	case 1 :
        	    // InternalKim.g:10352:10: {...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred380_InternalKim", "true");
        	    }
        	    // InternalKim.g:10352:19: ( (lv_restrictions_109_0= ruleRestrictionStatement ) )
        	    // InternalKim.g:10352:20: (lv_restrictions_109_0= ruleRestrictionStatement )
        	    {
        	    // InternalKim.g:10352:20: (lv_restrictions_109_0= ruleRestrictionStatement )
        	    // InternalKim.g:10353:10: lv_restrictions_109_0= ruleRestrictionStatement
        	    {
        	    if ( state.backtracking==0 ) {

        	      										newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRestrictionsRestrictionStatementParserRuleCall_3_21_0());
        	      									
        	    }
        	    pushFollow(FOLLOW_182);
        	    lv_restrictions_109_0=ruleRestrictionStatement();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    if ( cnt463 >= 1 ) break loop463;
        	    if (state.backtracking>0) {state.failed=true; return ;}
                    EarlyExitException eee =
                        new EarlyExitException(463, input);
                    throw eee;
            }
            cnt463++;
        } while (true);


        }


        }


        }
    }
    // $ANTLR end synpred380_InternalKim

    // $ANTLR start synpred381_InternalKim
    public final void synpred381_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_110=null;
        Token otherlv_111=null;
        EObject lv_metadata_112_0 = null;


        // InternalKim.g:10375:4: ( ({...}? => ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) ) ) )
        // InternalKim.g:10375:4: ({...}? => ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) ) )
        {
        // InternalKim.g:10375:4: ({...}? => ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) ) )
        // InternalKim.g:10376:5: {...}? => ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred381_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22)");
        }
        // InternalKim.g:10376:118: ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) )
        // InternalKim.g:10377:6: ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22);
        // InternalKim.g:10380:9: ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) )
        // InternalKim.g:10380:10: {...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred381_InternalKim", "true");
        }
        // InternalKim.g:10380:19: (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) )
        // InternalKim.g:10380:20: otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) )
        {
        otherlv_110=(Token)match(input,38,FOLLOW_25); if (state.failed) return ;
        otherlv_111=(Token)match(input,39,FOLLOW_26); if (state.failed) return ;
        // InternalKim.g:10388:9: ( (lv_metadata_112_0= ruleMetadata ) )
        // InternalKim.g:10389:10: (lv_metadata_112_0= ruleMetadata )
        {
        // InternalKim.g:10389:10: (lv_metadata_112_0= ruleMetadata )
        // InternalKim.g:10390:11: lv_metadata_112_0= ruleMetadata
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getMetadataMetadataParserRuleCall_3_22_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_metadata_112_0=ruleMetadata();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred381_InternalKim

    // $ANTLR start synpred403_InternalKim
    public final void synpred403_InternalKim_fragment() throws RecognitionException {   
        Token lv_none_1_0=null;

        // InternalKim.g:11028:5: ( ( (lv_none_1_0= 'no' ) ) )
        // InternalKim.g:11028:5: ( (lv_none_1_0= 'no' ) )
        {
        // InternalKim.g:11028:5: ( (lv_none_1_0= 'no' ) )
        // InternalKim.g:11029:6: (lv_none_1_0= 'no' )
        {
        // InternalKim.g:11029:6: (lv_none_1_0= 'no' )
        // InternalKim.g:11030:7: lv_none_1_0= 'no'
        {
        lv_none_1_0=(Token)match(input,117,FOLLOW_2); if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred403_InternalKim

    // $ANTLR start synpred418_InternalKim
    public final void synpred418_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        EObject lv_from_0_0 = null;

        EObject lv_to_2_0 = null;


        // InternalKim.g:11432:3: ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) )
        // InternalKim.g:11432:3: ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) )
        {
        // InternalKim.g:11432:3: ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) )
        // InternalKim.g:11433:4: ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) )
        {
        // InternalKim.g:11433:4: ( (lv_from_0_0= ruleNumber ) )
        // InternalKim.g:11434:5: (lv_from_0_0= ruleNumber )
        {
        // InternalKim.g:11434:5: (lv_from_0_0= ruleNumber )
        // InternalKim.g:11435:6: lv_from_0_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getLiteralAccess().getFromNumberParserRuleCall_0_0_0());
          					
        }
        pushFollow(FOLLOW_18);
        lv_from_0_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:11452:4: ( ( 'to' )=>otherlv_1= 'to' )
        // InternalKim.g:11453:5: ( 'to' )=>otherlv_1= 'to'
        {
        otherlv_1=(Token)match(input,32,FOLLOW_33); if (state.failed) return ;

        }

        // InternalKim.g:11459:4: ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) )
        // InternalKim.g:11460:5: ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber )
        {
        // InternalKim.g:11464:5: (lv_to_2_0= ruleNumber )
        // InternalKim.g:11465:6: lv_to_2_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getLiteralAccess().getToNumberParserRuleCall_0_2_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_to_2_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred418_InternalKim

    // $ANTLR start synpred419_InternalKim
    public final void synpred419_InternalKim_fragment() throws RecognitionException {   
        EObject lv_number_3_0 = null;


        // InternalKim.g:11484:3: ( ( (lv_number_3_0= ruleNumber ) ) )
        // InternalKim.g:11484:3: ( (lv_number_3_0= ruleNumber ) )
        {
        // InternalKim.g:11484:3: ( (lv_number_3_0= ruleNumber ) )
        // InternalKim.g:11485:4: (lv_number_3_0= ruleNumber )
        {
        // InternalKim.g:11485:4: (lv_number_3_0= ruleNumber )
        // InternalKim.g:11486:5: lv_number_3_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getLiteralAccess().getNumberNumberParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_number_3_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred419_InternalKim

    // $ANTLR start synpred434_InternalKim
    public final void synpred434_InternalKim_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken lv_ids_2_1 = null;


        // InternalKim.g:11862:7: (lv_ids_2_1= rulePathName )
        // InternalKim.g:11862:7: lv_ids_2_1= rulePathName
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getMetadataAccess().getIdsPathNameParserRuleCall_2_0_0_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_ids_2_1=rulePathName();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred434_InternalKim

    // $ANTLR start synpred435_InternalKim
    public final void synpred435_InternalKim_fragment() throws RecognitionException {   
        Token lv_ids_2_2=null;

        // InternalKim.g:11878:7: (lv_ids_2_2= RULE_LOWERCASE_ID )
        // InternalKim.g:11878:7: lv_ids_2_2= RULE_LOWERCASE_ID
        {
        lv_ids_2_2=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred435_InternalKim

    // $ANTLR start synpred448_InternalKim
    public final void synpred448_InternalKim_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken lv_name_0_1 = null;


        // InternalKim.g:12337:6: (lv_name_0_1= rulePathName )
        // InternalKim.g:12337:6: lv_name_0_1= rulePathName
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getKeyValuePairAccess().getNamePathNameParserRuleCall_0_0_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_name_0_1=rulePathName();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred448_InternalKim

    // $ANTLR start synpred453_InternalKim
    public final void synpred453_InternalKim_fragment() throws RecognitionException {   
        EObject lv_concept_0_0 = null;


        // InternalKim.g:12517:3: ( ( (lv_concept_0_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:12517:3: ( (lv_concept_0_0= ruleConceptDeclaration ) )
        {
        // InternalKim.g:12517:3: ( (lv_concept_0_0= ruleConceptDeclaration ) )
        // InternalKim.g:12518:4: (lv_concept_0_0= ruleConceptDeclaration )
        {
        // InternalKim.g:12518:4: (lv_concept_0_0= ruleConceptDeclaration )
        // InternalKim.g:12519:5: lv_concept_0_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getConceptConceptDeclarationParserRuleCall_0_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_concept_0_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred453_InternalKim

    // $ANTLR start synpred454_InternalKim
    public final void synpred454_InternalKim_fragment() throws RecognitionException {   
        EObject lv_function_1_0 = null;


        // InternalKim.g:12537:3: ( ( (lv_function_1_0= ruleFunction ) ) )
        // InternalKim.g:12537:3: ( (lv_function_1_0= ruleFunction ) )
        {
        // InternalKim.g:12537:3: ( (lv_function_1_0= ruleFunction ) )
        // InternalKim.g:12538:4: (lv_function_1_0= ruleFunction )
        {
        // InternalKim.g:12538:4: (lv_function_1_0= ruleFunction )
        // InternalKim.g:12539:5: lv_function_1_0= ruleFunction
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getFunctionFunctionParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_function_1_0=ruleFunction();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred454_InternalKim

    // $ANTLR start synpred455_InternalKim
    public final void synpred455_InternalKim_fragment() throws RecognitionException {   
        EObject lv_literal_2_0 = null;


        // InternalKim.g:12557:3: ( ( (lv_literal_2_0= ruleLiteral ) ) )
        // InternalKim.g:12557:3: ( (lv_literal_2_0= ruleLiteral ) )
        {
        // InternalKim.g:12557:3: ( (lv_literal_2_0= ruleLiteral ) )
        // InternalKim.g:12558:4: (lv_literal_2_0= ruleLiteral )
        {
        // InternalKim.g:12558:4: (lv_literal_2_0= ruleLiteral )
        // InternalKim.g:12559:5: lv_literal_2_0= ruleLiteral
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getLiteralLiteralParserRuleCall_2_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_literal_2_0=ruleLiteral();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred455_InternalKim

    // $ANTLR start synpred459_InternalKim
    public final void synpred459_InternalKim_fragment() throws RecognitionException {   
        Token lv_id_4_1=null;
        Token lv_id_4_2=null;
        Token lv_id_4_3=null;

        // InternalKim.g:12596:3: ( ( ( (lv_id_4_1= RULE_LOWERCASE_ID | lv_id_4_2= RULE_UPPERCASE_ID | lv_id_4_3= RULE_CAMELCASE_ID ) ) ) )
        // InternalKim.g:12596:3: ( ( (lv_id_4_1= RULE_LOWERCASE_ID | lv_id_4_2= RULE_UPPERCASE_ID | lv_id_4_3= RULE_CAMELCASE_ID ) ) )
        {
        // InternalKim.g:12596:3: ( ( (lv_id_4_1= RULE_LOWERCASE_ID | lv_id_4_2= RULE_UPPERCASE_ID | lv_id_4_3= RULE_CAMELCASE_ID ) ) )
        // InternalKim.g:12597:4: ( (lv_id_4_1= RULE_LOWERCASE_ID | lv_id_4_2= RULE_UPPERCASE_ID | lv_id_4_3= RULE_CAMELCASE_ID ) )
        {
        // InternalKim.g:12597:4: ( (lv_id_4_1= RULE_LOWERCASE_ID | lv_id_4_2= RULE_UPPERCASE_ID | lv_id_4_3= RULE_CAMELCASE_ID ) )
        // InternalKim.g:12598:5: (lv_id_4_1= RULE_LOWERCASE_ID | lv_id_4_2= RULE_UPPERCASE_ID | lv_id_4_3= RULE_CAMELCASE_ID )
        {
        // InternalKim.g:12598:5: (lv_id_4_1= RULE_LOWERCASE_ID | lv_id_4_2= RULE_UPPERCASE_ID | lv_id_4_3= RULE_CAMELCASE_ID )
        int alt488=3;
        switch ( input.LA(1) ) {
        case RULE_LOWERCASE_ID:
            {
            alt488=1;
            }
            break;
        case RULE_UPPERCASE_ID:
            {
            alt488=2;
            }
            break;
        case RULE_CAMELCASE_ID:
            {
            alt488=3;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 488, 0, input);

            throw nvae;
        }

        switch (alt488) {
            case 1 :
                // InternalKim.g:12599:6: lv_id_4_1= RULE_LOWERCASE_ID
                {
                lv_id_4_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:12614:6: lv_id_4_2= RULE_UPPERCASE_ID
                {
                lv_id_4_2=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 3 :
                // InternalKim.g:12629:6: lv_id_4_3= RULE_CAMELCASE_ID
                {
                lv_id_4_3=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }
    }
    // $ANTLR end synpred459_InternalKim

    // $ANTLR start synpred460_InternalKim
    public final void synpred460_InternalKim_fragment() throws RecognitionException {   
        EObject lv_list_5_0 = null;


        // InternalKim.g:12647:3: ( ( (lv_list_5_0= ruleList ) ) )
        // InternalKim.g:12647:3: ( (lv_list_5_0= ruleList ) )
        {
        // InternalKim.g:12647:3: ( (lv_list_5_0= ruleList ) )
        // InternalKim.g:12648:4: (lv_list_5_0= ruleList )
        {
        // InternalKim.g:12648:4: (lv_list_5_0= ruleList )
        // InternalKim.g:12649:5: lv_list_5_0= ruleList
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getListListParserRuleCall_5_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_list_5_0=ruleList();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred460_InternalKim

    // $ANTLR start synpred464_InternalKim
    public final void synpred464_InternalKim_fragment() throws RecognitionException {   
        EObject lv_function_1_0 = null;


        // InternalKim.g:12760:3: ( ( (lv_function_1_0= ruleFunction ) ) )
        // InternalKim.g:12760:3: ( (lv_function_1_0= ruleFunction ) )
        {
        // InternalKim.g:12760:3: ( (lv_function_1_0= ruleFunction ) )
        // InternalKim.g:12761:4: (lv_function_1_0= ruleFunction )
        {
        // InternalKim.g:12761:4: (lv_function_1_0= ruleFunction )
        // InternalKim.g:12762:5: lv_function_1_0= ruleFunction
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getValueAccess().getFunctionFunctionParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_function_1_0=ruleFunction();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred464_InternalKim

    // $ANTLR start synpred468_InternalKim
    public final void synpred468_InternalKim_fragment() throws RecognitionException {   
        Token lv_id_3_1=null;
        Token lv_id_3_2=null;
        Token lv_id_3_3=null;

        // InternalKim.g:12799:3: ( ( ( (lv_id_3_1= RULE_LOWERCASE_ID | lv_id_3_2= RULE_UPPERCASE_ID | lv_id_3_3= RULE_CAMELCASE_ID ) ) ) )
        // InternalKim.g:12799:3: ( ( (lv_id_3_1= RULE_LOWERCASE_ID | lv_id_3_2= RULE_UPPERCASE_ID | lv_id_3_3= RULE_CAMELCASE_ID ) ) )
        {
        // InternalKim.g:12799:3: ( ( (lv_id_3_1= RULE_LOWERCASE_ID | lv_id_3_2= RULE_UPPERCASE_ID | lv_id_3_3= RULE_CAMELCASE_ID ) ) )
        // InternalKim.g:12800:4: ( (lv_id_3_1= RULE_LOWERCASE_ID | lv_id_3_2= RULE_UPPERCASE_ID | lv_id_3_3= RULE_CAMELCASE_ID ) )
        {
        // InternalKim.g:12800:4: ( (lv_id_3_1= RULE_LOWERCASE_ID | lv_id_3_2= RULE_UPPERCASE_ID | lv_id_3_3= RULE_CAMELCASE_ID ) )
        // InternalKim.g:12801:5: (lv_id_3_1= RULE_LOWERCASE_ID | lv_id_3_2= RULE_UPPERCASE_ID | lv_id_3_3= RULE_CAMELCASE_ID )
        {
        // InternalKim.g:12801:5: (lv_id_3_1= RULE_LOWERCASE_ID | lv_id_3_2= RULE_UPPERCASE_ID | lv_id_3_3= RULE_CAMELCASE_ID )
        int alt489=3;
        switch ( input.LA(1) ) {
        case RULE_LOWERCASE_ID:
            {
            alt489=1;
            }
            break;
        case RULE_UPPERCASE_ID:
            {
            alt489=2;
            }
            break;
        case RULE_CAMELCASE_ID:
            {
            alt489=3;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 489, 0, input);

            throw nvae;
        }

        switch (alt489) {
            case 1 :
                // InternalKim.g:12802:6: lv_id_3_1= RULE_LOWERCASE_ID
                {
                lv_id_3_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:12817:6: lv_id_3_2= RULE_UPPERCASE_ID
                {
                lv_id_3_2=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 3 :
                // InternalKim.g:12832:6: lv_id_3_3= RULE_CAMELCASE_ID
                {
                lv_id_3_3=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }
    }
    // $ANTLR end synpred468_InternalKim

    // $ANTLR start synpred511_InternalKim
    public final void synpred511_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        EObject lv_by_3_0 = null;


        // InternalKim.g:13465:4: ( ({...}? => ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) ) ) )
        // InternalKim.g:13465:4: ({...}? => ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) ) )
        {
        // InternalKim.g:13465:4: ({...}? => ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) ) )
        // InternalKim.g:13466:5: {...}? => ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred511_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 0)");
        }
        // InternalKim.g:13466:122: ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) )
        // InternalKim.g:13467:6: ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 0);
        // InternalKim.g:13470:9: ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) )
        // InternalKim.g:13470:10: {...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred511_InternalKim", "true");
        }
        // InternalKim.g:13470:19: (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) )
        // InternalKim.g:13470:20: otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) )
        {
        otherlv_2=(Token)match(input,94,FOLLOW_16); if (state.failed) return ;
        // InternalKim.g:13474:9: ( (lv_by_3_0= ruleConcept ) )
        // InternalKim.g:13475:10: (lv_by_3_0= ruleConcept )
        {
        // InternalKim.g:13475:10: (lv_by_3_0= ruleConcept )
        // InternalKim.g:13476:11: lv_by_3_0= ruleConcept
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getByConceptParserRuleCall_1_0_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_by_3_0=ruleConcept();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred511_InternalKim

    // $ANTLR start synpred512_InternalKim
    public final void synpred512_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_4=null;
        Token otherlv_5=null;
        EObject lv_downTo_6_0 = null;


        // InternalKim.g:13499:4: ( ({...}? => ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) ) ) ) ) )
        // InternalKim.g:13499:4: ({...}? => ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) ) ) ) )
        {
        // InternalKim.g:13499:4: ({...}? => ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) ) ) ) )
        // InternalKim.g:13500:5: {...}? => ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred512_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 1)");
        }
        // InternalKim.g:13500:122: ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) ) ) )
        // InternalKim.g:13501:6: ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 1);
        // InternalKim.g:13504:9: ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) ) )
        // InternalKim.g:13504:10: {...}? => (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred512_InternalKim", "true");
        }
        // InternalKim.g:13504:19: (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) )
        // InternalKim.g:13504:20: otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) )
        {
        otherlv_4=(Token)match(input,95,FOLLOW_18); if (state.failed) return ;
        otherlv_5=(Token)match(input,32,FOLLOW_16); if (state.failed) return ;
        // InternalKim.g:13512:9: ( (lv_downTo_6_0= ruleConcept ) )
        // InternalKim.g:13513:10: (lv_downTo_6_0= ruleConcept )
        {
        // InternalKim.g:13513:10: (lv_downTo_6_0= ruleConcept )
        // InternalKim.g:13514:11: lv_downTo_6_0= ruleConcept
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getDownToConceptParserRuleCall_1_1_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_downTo_6_0=ruleConcept();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred512_InternalKim

    // $ANTLR start synpred513_InternalKim
    public final void synpred513_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_7=null;
        Token otherlv_8=null;
        AntlrDatatypeRuleToken lv_accordingTo_9_0 = null;


        // InternalKim.g:13537:4: ( ({...}? => ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) ) ) )
        // InternalKim.g:13537:4: ({...}? => ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) ) )
        {
        // InternalKim.g:13537:4: ({...}? => ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) ) )
        // InternalKim.g:13538:5: {...}? => ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred513_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 2)");
        }
        // InternalKim.g:13538:122: ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) )
        // InternalKim.g:13539:6: ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 2);
        // InternalKim.g:13542:9: ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) )
        // InternalKim.g:13542:10: {...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred513_InternalKim", "true");
        }
        // InternalKim.g:13542:19: (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) )
        // InternalKim.g:13542:20: otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) )
        {
        otherlv_7=(Token)match(input,31,FOLLOW_18); if (state.failed) return ;
        otherlv_8=(Token)match(input,32,FOLLOW_19); if (state.failed) return ;
        // InternalKim.g:13550:9: ( (lv_accordingTo_9_0= rulePropertyId ) )
        // InternalKim.g:13551:10: (lv_accordingTo_9_0= rulePropertyId )
        {
        // InternalKim.g:13551:10: (lv_accordingTo_9_0= rulePropertyId )
        // InternalKim.g:13552:11: lv_accordingTo_9_0= rulePropertyId
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getAccordingToPropertyIdParserRuleCall_1_2_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_accordingTo_9_0=rulePropertyId();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred513_InternalKim

    // $ANTLR start synpred514_InternalKim
    public final void synpred514_InternalKim_fragment() throws RecognitionException {   
        EObject lv_unit_11_0 = null;


        // InternalKim.g:13586:11: ( ( (lv_unit_11_0= ruleUnit ) ) )
        // InternalKim.g:13586:11: ( (lv_unit_11_0= ruleUnit ) )
        {
        // InternalKim.g:13586:11: ( (lv_unit_11_0= ruleUnit ) )
        // InternalKim.g:13587:12: (lv_unit_11_0= ruleUnit )
        {
        // InternalKim.g:13587:12: (lv_unit_11_0= ruleUnit )
        // InternalKim.g:13588:13: lv_unit_11_0= ruleUnit
        {
        if ( state.backtracking==0 ) {

          													newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getUnitUnitParserRuleCall_1_3_0_1_0_0());
          												
        }
        pushFollow(FOLLOW_2);
        lv_unit_11_0=ruleUnit();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred514_InternalKim

    // $ANTLR start synpred516_InternalKim
    public final void synpred516_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_10=null;
        Token otherlv_13=null;
        EObject lv_unit_11_0 = null;

        EObject lv_currency_12_0 = null;

        EObject lv_unit_14_0 = null;


        // InternalKim.g:13575:4: ( ({...}? => ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) ) ) )
        // InternalKim.g:13575:4: ({...}? => ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) ) )
        {
        // InternalKim.g:13575:4: ({...}? => ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) ) )
        // InternalKim.g:13576:5: {...}? => ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 3) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred516_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 3)");
        }
        // InternalKim.g:13576:122: ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) )
        // InternalKim.g:13577:6: ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 3);
        // InternalKim.g:13580:9: ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) )
        // InternalKim.g:13580:10: {...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred516_InternalKim", "true");
        }
        // InternalKim.g:13580:19: ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) )
        int alt492=2;
        int LA492_0 = input.LA(1);

        if ( (LA492_0==46) ) {
            alt492=1;
        }
        else if ( (LA492_0==96) ) {
            alt492=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 492, 0, input);

            throw nvae;
        }
        switch (alt492) {
            case 1 :
                // InternalKim.g:13580:20: (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) )
                {
                // InternalKim.g:13580:20: (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) )
                // InternalKim.g:13581:10: otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) )
                {
                otherlv_10=(Token)match(input,46,FOLLOW_88); if (state.failed) return ;
                // InternalKim.g:13585:10: ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) )
                int alt491=2;
                switch ( input.LA(1) ) {
                case RULE_CAMELCASE_ID:
                    {
                    int LA491_1 = input.LA(2);

                    if ( (synpred514_InternalKim()) ) {
                        alt491=1;
                    }
                    else if ( (true) ) {
                        alt491=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 491, 1, input);

                        throw nvae;
                    }
                    }
                    break;
                case RULE_LOWERCASE_ID:
                    {
                    int LA491_2 = input.LA(2);

                    if ( (LA491_2==EOF||LA491_2==36||LA491_2==89||LA491_2==233) ) {
                        alt491=1;
                    }
                    else if ( (LA491_2==88||LA491_2==90) ) {
                        alt491=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 491, 2, input);

                        throw nvae;
                    }
                    }
                    break;
                case EOF:
                case RULE_INT:
                case 34:
                case 36:
                case 89:
                case 226:
                case 227:
                case 233:
                    {
                    alt491=1;
                    }
                    break;
                case RULE_UPPERCASE_ID:
                    {
                    alt491=2;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 491, 0, input);

                    throw nvae;
                }

                switch (alt491) {
                    case 1 :
                        // InternalKim.g:13586:11: ( (lv_unit_11_0= ruleUnit ) )
                        {
                        // InternalKim.g:13586:11: ( (lv_unit_11_0= ruleUnit ) )
                        // InternalKim.g:13587:12: (lv_unit_11_0= ruleUnit )
                        {
                        // InternalKim.g:13587:12: (lv_unit_11_0= ruleUnit )
                        // InternalKim.g:13588:13: lv_unit_11_0= ruleUnit
                        {
                        if ( state.backtracking==0 ) {

                          													newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getUnitUnitParserRuleCall_1_3_0_1_0_0());
                          												
                        }
                        pushFollow(FOLLOW_2);
                        lv_unit_11_0=ruleUnit();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;
                    case 2 :
                        // InternalKim.g:13606:11: ( (lv_currency_12_0= ruleCurrency ) )
                        {
                        // InternalKim.g:13606:11: ( (lv_currency_12_0= ruleCurrency ) )
                        // InternalKim.g:13607:12: (lv_currency_12_0= ruleCurrency )
                        {
                        // InternalKim.g:13607:12: (lv_currency_12_0= ruleCurrency )
                        // InternalKim.g:13608:13: lv_currency_12_0= ruleCurrency
                        {
                        if ( state.backtracking==0 ) {

                          													newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getCurrencyCurrencyParserRuleCall_1_3_0_1_1_0());
                          												
                        }
                        pushFollow(FOLLOW_2);
                        lv_currency_12_0=ruleCurrency();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:13628:9: (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) )
                {
                // InternalKim.g:13628:9: (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) )
                // InternalKim.g:13629:10: otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) )
                {
                otherlv_13=(Token)match(input,96,FOLLOW_178); if (state.failed) return ;
                // InternalKim.g:13633:10: ( (lv_unit_14_0= ruleUnit ) )
                // InternalKim.g:13634:11: (lv_unit_14_0= ruleUnit )
                {
                // InternalKim.g:13634:11: (lv_unit_14_0= ruleUnit )
                // InternalKim.g:13635:12: lv_unit_14_0= ruleUnit
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getUnitUnitParserRuleCall_1_3_1_1_0());
                  											
                }
                pushFollow(FOLLOW_2);
                lv_unit_14_0=ruleUnit();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }


                }
                break;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred516_InternalKim

    // $ANTLR start synpred517_InternalKim
    public final void synpred517_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_16=null;
        EObject lv_from_15_0 = null;

        EObject lv_to_17_0 = null;


        // InternalKim.g:13659:4: ( ({...}? => ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) ) ) )
        // InternalKim.g:13659:4: ({...}? => ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) ) )
        {
        // InternalKim.g:13659:4: ({...}? => ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) ) )
        // InternalKim.g:13660:5: {...}? => ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 4) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred517_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 4)");
        }
        // InternalKim.g:13660:122: ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) )
        // InternalKim.g:13661:6: ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 4);
        // InternalKim.g:13664:9: ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) )
        // InternalKim.g:13664:10: {...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred517_InternalKim", "true");
        }
        // InternalKim.g:13664:19: ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) )
        // InternalKim.g:13664:20: ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) )
        {
        // InternalKim.g:13664:20: ( (lv_from_15_0= ruleNumber ) )
        // InternalKim.g:13665:10: (lv_from_15_0= ruleNumber )
        {
        // InternalKim.g:13665:10: (lv_from_15_0= ruleNumber )
        // InternalKim.g:13666:11: lv_from_15_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getFromNumberParserRuleCall_1_4_0_0());
          										
        }
        pushFollow(FOLLOW_18);
        lv_from_15_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_16=(Token)match(input,32,FOLLOW_33); if (state.failed) return ;
        // InternalKim.g:13687:9: ( (lv_to_17_0= ruleNumber ) )
        // InternalKim.g:13688:10: (lv_to_17_0= ruleNumber )
        {
        // InternalKim.g:13688:10: (lv_to_17_0= ruleNumber )
        // InternalKim.g:13689:11: lv_to_17_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getToNumberParserRuleCall_1_4_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_to_17_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred517_InternalKim

    // $ANTLR start synpred518_InternalKim
    public final void synpred518_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_18=null;
        Token lv_name_19_0=null;

        // InternalKim.g:13712:4: ( ({...}? => ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )
        // InternalKim.g:13712:4: ({...}? => ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) ) )
        {
        // InternalKim.g:13712:4: ({...}? => ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) ) )
        // InternalKim.g:13713:5: {...}? => ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 5) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred518_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 5)");
        }
        // InternalKim.g:13713:122: ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) )
        // InternalKim.g:13714:6: ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 5);
        // InternalKim.g:13717:9: ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) )
        // InternalKim.g:13717:10: {...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred518_InternalKim", "true");
        }
        // InternalKim.g:13717:19: (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) )
        // InternalKim.g:13717:20: otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) )
        {
        otherlv_18=(Token)match(input,99,FOLLOW_55); if (state.failed) return ;
        // InternalKim.g:13721:9: ( (lv_name_19_0= RULE_LOWERCASE_ID ) )
        // InternalKim.g:13722:10: (lv_name_19_0= RULE_LOWERCASE_ID )
        {
        // InternalKim.g:13722:10: (lv_name_19_0= RULE_LOWERCASE_ID )
        // InternalKim.g:13723:11: lv_name_19_0= RULE_LOWERCASE_ID
        {
        lv_name_19_0=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred518_InternalKim

    // $ANTLR start synpred528_InternalKim
    public final void synpred528_InternalKim_fragment() throws RecognitionException {   
        EObject lv_root_1_0 = null;


        // InternalKim.g:14074:4: ( (lv_root_1_0= ruleUnitElement ) )
        // InternalKim.g:14074:4: (lv_root_1_0= ruleUnitElement )
        {
        // InternalKim.g:14074:4: (lv_root_1_0= ruleUnitElement )
        // InternalKim.g:14075:5: lv_root_1_0= ruleUnitElement
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getUnitAccess().getRootUnitElementParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_root_1_0=ruleUnitElement();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred528_InternalKim

    // $ANTLR start synpred535_InternalKim
    public final void synpred535_InternalKim_fragment() throws RecognitionException {   
        // InternalKim.g:14281:4: ( ( RULE_INT ) )
        // InternalKim.g:14281:5: ( RULE_INT )
        {
        // InternalKim.g:14281:5: ( RULE_INT )
        // InternalKim.g:14282:5: RULE_INT
        {
        match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred535_InternalKim

    // $ANTLR start synpred536_InternalKim
    public final void synpred536_InternalKim_fragment() throws RecognitionException {   
        // InternalKim.g:14303:4: ( ( ( ( '.' ) ) ( ( RULE_INT ) ) ) )
        // InternalKim.g:14303:5: ( ( ( '.' ) ) ( ( RULE_INT ) ) )
        {
        // InternalKim.g:14303:5: ( ( ( '.' ) ) ( ( RULE_INT ) ) )
        // InternalKim.g:14304:5: ( ( '.' ) ) ( ( RULE_INT ) )
        {
        // InternalKim.g:14304:5: ( ( '.' ) )
        // InternalKim.g:14305:6: ( '.' )
        {
        // InternalKim.g:14305:6: ( '.' )
        // InternalKim.g:14306:7: '.'
        {
        match(input,90,FOLLOW_68); if (state.failed) return ;

        }


        }

        // InternalKim.g:14309:5: ( ( RULE_INT ) )
        // InternalKim.g:14310:6: ( RULE_INT )
        {
        // InternalKim.g:14310:6: ( RULE_INT )
        // InternalKim.g:14311:7: RULE_INT
        {
        match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred536_InternalKim

    // $ANTLR start synpred540_InternalKim
    public final void synpred540_InternalKim_fragment() throws RecognitionException {   
        // InternalKim.g:14352:4: ( ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) ) )
        // InternalKim.g:14352:5: ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) )
        {
        // InternalKim.g:14352:5: ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) )
        // InternalKim.g:14353:5: ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) )
        {
        // InternalKim.g:14353:5: ( ( ( 'e' | 'E' ) ) )
        // InternalKim.g:14354:6: ( ( 'e' | 'E' ) )
        {
        // InternalKim.g:14354:6: ( ( 'e' | 'E' ) )
        // InternalKim.g:14355:7: ( 'e' | 'E' )
        {
        if ( (input.LA(1)>=228 && input.LA(1)<=229) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }


        }

        // InternalKim.g:14362:5: ( '+' | ( ( '-' ) ) )?
        int alt494=3;
        int LA494_0 = input.LA(1);

        if ( (LA494_0==226) ) {
            alt494=1;
        }
        else if ( (LA494_0==227) ) {
            alt494=2;
        }
        switch (alt494) {
            case 1 :
                // InternalKim.g:14363:6: '+'
                {
                match(input,226,FOLLOW_68); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:14365:6: ( ( '-' ) )
                {
                // InternalKim.g:14365:6: ( ( '-' ) )
                // InternalKim.g:14366:7: ( '-' )
                {
                // InternalKim.g:14366:7: ( '-' )
                // InternalKim.g:14367:8: '-'
                {
                match(input,227,FOLLOW_68); if (state.failed) return ;

                }


                }


                }
                break;

        }

        // InternalKim.g:14371:5: ( ( RULE_INT ) )
        // InternalKim.g:14372:6: ( RULE_INT )
        {
        // InternalKim.g:14372:6: ( RULE_INT )
        // InternalKim.g:14373:7: RULE_INT
        {
        match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred540_InternalKim

    // $ANTLR start synpred547_InternalKim
    public final void synpred547_InternalKim_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken this_PathName_0 = null;


        // InternalKim.g:14596:4: (this_PathName_0= rulePathName )
        // InternalKim.g:14596:4: this_PathName_0= rulePathName
        {
        if ( state.backtracking==0 ) {

          				newCompositeNode(grammarAccess.getPropertyIdAccess().getPathNameParserRuleCall_0_0());
          			
        }
        pushFollow(FOLLOW_2);
        this_PathName_0=rulePathName();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred547_InternalKim

    // Delegated rules

    public final boolean synpred314_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred314_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred313_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred313_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred315_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred315_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred65_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred65_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred319_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred319_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred352_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred352_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred350_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred350_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred236_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred236_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred435_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred435_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred540_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred540_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred243_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred243_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred232_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred232_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred233_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred233_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred242_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred242_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred244_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred244_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred240_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred240_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred241_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred241_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred230_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred230_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred231_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred231_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred512_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred512_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred514_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred514_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred513_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred513_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred58_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred58_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred69_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred69_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred114_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred114_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred516_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred516_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred165_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred165_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred547_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred547_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred166_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred166_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred151_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred151_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred172_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred172_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred346_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred346_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred345_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred345_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred347_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred347_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred174_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred174_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred344_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred344_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred348_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred348_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred517_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred517_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred518_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred518_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred366_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred366_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred301_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred301_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred342_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred342_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred320_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred320_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred329_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred329_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred349_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred349_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred364_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred364_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred17_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred17_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred380_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred380_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred381_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred381_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred340_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred340_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred361_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred361_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred225_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred225_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred403_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred403_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred224_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred224_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred468_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred468_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred226_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred226_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred228_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred228_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred464_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred464_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred206_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred206_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred209_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred209_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred460_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred460_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred368_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred368_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred303_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred303_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred140_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred140_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred336_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred336_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred378_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred378_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred9_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred9_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred181_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred181_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred528_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred528_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred87_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred87_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred185_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred185_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred182_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred182_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred373_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred373_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred5_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred5_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred375_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred375_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred4_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred4_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred372_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred372_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred2_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred2_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred299_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred299_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred222_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred222_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred296_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred296_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred459_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred459_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred223_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred223_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred418_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred418_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred210_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred210_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred448_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred448_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred220_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred220_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred419_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred419_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred535_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred535_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred189_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred189_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred179_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred179_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred6_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred6_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred47_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred47_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred144_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred144_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred187_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred187_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred536_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred536_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred188_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred188_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred177_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred177_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred291_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred291_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred8_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred8_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred75_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred75_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred12_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred12_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred55_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred55_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred72_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred72_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred54_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred54_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred51_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred51_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred73_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred73_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred74_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred74_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred52_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred52_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred511_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred511_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred118_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred118_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred70_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred70_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred215_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred215_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred434_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred434_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred237_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred237_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred216_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred216_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred455_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred455_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred217_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred217_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred238_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred238_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred239_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred239_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred454_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred454_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred219_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred219_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred218_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred218_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred453_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred453_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred379_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred379_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred357_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred357_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA1 dfa1 = new DFA1(this);
    protected DFA4 dfa4 = new DFA4(this);
    protected DFA11 dfa11 = new DFA11(this);
    protected DFA10 dfa10 = new DFA10(this);
    protected DFA36 dfa36 = new DFA36(this);
    protected DFA41 dfa41 = new DFA41(this);
    protected DFA40 dfa40 = new DFA40(this);
    protected DFA49 dfa49 = new DFA49(this);
    protected DFA57 dfa57 = new DFA57(this);
    protected DFA74 dfa74 = new DFA74(this);
    protected DFA81 dfa81 = new DFA81(this);
    protected DFA85 dfa85 = new DFA85(this);
    protected DFA100 dfa100 = new DFA100(this);
    protected DFA127 dfa127 = new DFA127(this);
    protected DFA118 dfa118 = new DFA118(this);
    protected DFA119 dfa119 = new DFA119(this);
    protected DFA122 dfa122 = new DFA122(this);
    protected DFA128 dfa128 = new DFA128(this);
    protected DFA133 dfa133 = new DFA133(this);
    protected DFA130 dfa130 = new DFA130(this);
    protected DFA135 dfa135 = new DFA135(this);
    protected DFA137 dfa137 = new DFA137(this);
    protected DFA138 dfa138 = new DFA138(this);
    protected DFA167 dfa167 = new DFA167(this);
    protected DFA172 dfa172 = new DFA172(this);
    protected DFA173 dfa173 = new DFA173(this);
    protected DFA179 dfa179 = new DFA179(this);
    protected DFA214 dfa214 = new DFA214(this);
    protected DFA228 dfa228 = new DFA228(this);
    protected DFA241 dfa241 = new DFA241(this);
    protected DFA245 dfa245 = new DFA245(this);
    protected DFA257 dfa257 = new DFA257(this);
    protected DFA259 dfa259 = new DFA259(this);
    protected DFA261 dfa261 = new DFA261(this);
    protected DFA272 dfa272 = new DFA272(this);
    protected DFA277 dfa277 = new DFA277(this);
    protected DFA301 dfa301 = new DFA301(this);
    protected DFA381 dfa381 = new DFA381(this);
    protected DFA382 dfa382 = new DFA382(this);
    static final String dfa_1s = "\75\uffff";
    static final String dfa_2s = "\1\7\74\uffff";
    static final String dfa_3s = "\1\15\3\0\71\uffff";
    static final String dfa_4s = "\1\u00db\3\0\71\uffff";
    static final String dfa_5s = "\4\uffff\1\1\2\uffff\1\2\65\uffff";
    static final String dfa_6s = "\1\uffff\1\0\1\1\1\2\71\uffff}>";
    static final String[] dfa_7s = {
            "\1\1\5\uffff\1\3\1\2\57\uffff\6\7\3\4\2\uffff\1\7\13\uffff\1\7\52\uffff\10\7\21\uffff\1\7\13\uffff\4\7\15\uffff\40\7",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final short[] dfa_2 = DFA.unpackEncodedString(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final char[] dfa_4 = DFA.unpackEncodedStringToUnsignedChars(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[] dfa_6 = DFA.unpackEncodedString(dfa_6s);
    static final short[][] dfa_7 = unpackEncodedStringArray(dfa_7s);

    class DFA1 extends DFA {

        public DFA1(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 1;
            this.eot = dfa_1;
            this.eof = dfa_2;
            this.min = dfa_3;
            this.max = dfa_4;
            this.accept = dfa_5;
            this.special = dfa_6;
            this.transition = dfa_7;
        }
        public String getDescription() {
            return "109:4: ( (lv_namespace_1_0= ruleNamespace ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA1_1 = input.LA(1);

                         
                        int index1_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index1_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA1_2 = input.LA(1);

                         
                        int index1_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index1_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA1_3 = input.LA(1);

                         
                        int index1_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index1_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 1, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_8s = "\72\uffff";
    static final String dfa_9s = "\1\15\1\0\60\uffff\1\0\7\uffff";
    static final String dfa_10s = "\1\u00db\1\0\60\uffff\1\0\7\uffff";
    static final String dfa_11s = "\2\uffff\1\1\55\uffff\1\2\7\uffff\1\4\1\3";
    static final String dfa_12s = "\1\uffff\1\0\60\uffff\1\1\7\uffff}>";
    static final String[] dfa_13s = {
            "\1\1\5\uffff\2\60\57\uffff\1\62\5\60\5\uffff\1\2\13\uffff\1\70\52\uffff\10\2\21\uffff\1\2\13\uffff\4\2\15\uffff\40\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_8 = DFA.unpackEncodedString(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final char[] dfa_10 = DFA.unpackEncodedStringToUnsignedChars(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[] dfa_12 = DFA.unpackEncodedString(dfa_12s);
    static final short[][] dfa_13 = unpackEncodedStringArray(dfa_13s);

    class DFA4 extends DFA {

        public DFA4(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 4;
            this.eot = dfa_8;
            this.eof = dfa_8;
            this.min = dfa_9;
            this.max = dfa_10;
            this.accept = dfa_11;
            this.special = dfa_12;
            this.transition = dfa_13;
        }
        public String getDescription() {
            return "166:2: ( ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' ) | ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' ) | ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' ) | ( ( (lv_observeStatement_6_0= ruleObserveStatement ) ) otherlv_7= ';' ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA4_1 = input.LA(1);

                         
                        int index4_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalKim()) ) {s = 2;}

                        else if ( (synpred5_InternalKim()) ) {s = 48;}

                        else if ( (true) ) {s = 56;}

                         
                        input.seek(index4_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA4_50 = input.LA(1);

                         
                        int index4_50 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_InternalKim()) ) {s = 48;}

                        else if ( (synpred6_InternalKim()) ) {s = 57;}

                         
                        input.seek(index4_50);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 4, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_14s = "\44\uffff";
    static final String dfa_15s = "\1\4\1\uffff\3\0\1\uffff\26\0\10\uffff";
    static final String dfa_16s = "\1\u00e3\1\uffff\3\0\1\uffff\26\0\10\uffff";
    static final String dfa_17s = "\1\uffff\1\1\32\uffff\1\2\7\uffff";
    static final String dfa_18s = "\2\uffff\1\0\1\1\1\2\1\uffff\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\10\uffff}>";
    static final String[] dfa_19s = {
            "\1\2\1\3\2\34\1\4\1\1\1\34\1\10\12\uffff\1\34\1\11\1\12\11\uffff\1\33\14\uffff\2\34\46\uffff\1\1\5\uffff\1\34\16\uffff\1\15\1\16\6\uffff\1\13\1\14\1\uffff\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\65\uffff\1\34\51\uffff\1\6\1\7",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_14 = DFA.unpackEncodedString(dfa_14s);
    static final char[] dfa_15 = DFA.unpackEncodedStringToUnsignedChars(dfa_15s);
    static final char[] dfa_16 = DFA.unpackEncodedStringToUnsignedChars(dfa_16s);
    static final short[] dfa_17 = DFA.unpackEncodedString(dfa_17s);
    static final short[] dfa_18 = DFA.unpackEncodedString(dfa_18s);
    static final short[][] dfa_19 = unpackEncodedStringArray(dfa_19s);

    class DFA11 extends DFA {

        public DFA11(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 11;
            this.eot = dfa_14;
            this.eof = dfa_14;
            this.min = dfa_15;
            this.max = dfa_16;
            this.accept = dfa_17;
            this.special = dfa_18;
            this.transition = dfa_19;
        }
        public String getDescription() {
            return "452:3: ( ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_function_4_0= ruleFunction ) ) | ( (lv_number_5_0= ruleNumber ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) | ( (lv_concept_7_0= ruleSimpleObservableSemantics ) ) ) otherlv_8= 'as' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA11_2 = input.LA(1);

                         
                        int index11_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 28;}

                         
                        input.seek(index11_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA11_3 = input.LA(1);

                         
                        int index11_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 28;}

                         
                        input.seek(index11_3);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA11_4 = input.LA(1);

                         
                        int index11_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 28;}

                         
                        input.seek(index11_4);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA11_6 = input.LA(1);

                         
                        int index11_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 28;}

                         
                        input.seek(index11_6);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA11_7 = input.LA(1);

                         
                        int index11_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 28;}

                         
                        input.seek(index11_7);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA11_8 = input.LA(1);

                         
                        int index11_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 28;}

                         
                        input.seek(index11_8);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA11_9 = input.LA(1);

                         
                        int index11_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 28;}

                         
                        input.seek(index11_9);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA11_10 = input.LA(1);

                         
                        int index11_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 28;}

                         
                        input.seek(index11_10);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA11_11 = input.LA(1);

                         
                        int index11_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 28;}

                         
                        input.seek(index11_11);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA11_12 = input.LA(1);

                         
                        int index11_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 28;}

                         
                        input.seek(index11_12);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA11_13 = input.LA(1);

                         
                        int index11_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 28;}

                         
                        input.seek(index11_13);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA11_14 = input.LA(1);

                         
                        int index11_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 28;}

                         
                        input.seek(index11_14);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA11_15 = input.LA(1);

                         
                        int index11_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 28;}

                         
                        input.seek(index11_15);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA11_16 = input.LA(1);

                         
                        int index11_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 28;}

                         
                        input.seek(index11_16);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA11_17 = input.LA(1);

                         
                        int index11_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 28;}

                         
                        input.seek(index11_17);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA11_18 = input.LA(1);

                         
                        int index11_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 28;}

                         
                        input.seek(index11_18);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA11_19 = input.LA(1);

                         
                        int index11_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 28;}

                         
                        input.seek(index11_19);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA11_20 = input.LA(1);

                         
                        int index11_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 28;}

                         
                        input.seek(index11_20);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA11_21 = input.LA(1);

                         
                        int index11_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 28;}

                         
                        input.seek(index11_21);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA11_22 = input.LA(1);

                         
                        int index11_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 28;}

                         
                        input.seek(index11_22);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA11_23 = input.LA(1);

                         
                        int index11_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 28;}

                         
                        input.seek(index11_23);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA11_24 = input.LA(1);

                         
                        int index11_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 28;}

                         
                        input.seek(index11_24);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA11_25 = input.LA(1);

                         
                        int index11_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 28;}

                         
                        input.seek(index11_25);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA11_26 = input.LA(1);

                         
                        int index11_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 28;}

                         
                        input.seek(index11_26);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA11_27 = input.LA(1);

                         
                        int index11_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 28;}

                         
                        input.seek(index11_27);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 11, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_20s = "\16\uffff";
    static final String dfa_21s = "\1\4\1\uffff\1\26\1\4\1\0\3\uffff\1\4\1\uffff\1\4\1\26\1\4\1\42";
    static final String dfa_22s = "\1\u00e3\1\uffff\1\132\1\u0082\1\0\3\uffff\1\4\1\uffff\1\10\1\132\1\4\1\132";
    static final String dfa_23s = "\1\uffff\1\1\3\uffff\1\3\1\4\1\5\1\uffff\1\2\4\uffff";
    static final String dfa_24s = "\4\uffff\1\0\11\uffff}>";
    static final String[] dfa_25s = {
            "\1\2\1\3\2\uffff\1\4\1\1\1\uffff\1\5\13\uffff\2\6\11\uffff\1\7\64\uffff\1\1\24\uffff\2\7\6\uffff\2\7\1\uffff\14\7\137\uffff\2\5",
            "",
            "\1\1\2\uffff\1\1\10\uffff\1\11\20\uffff\1\1\44\uffff\1\12\1\1\1\10",
            "\1\7\3\uffff\1\7\15\uffff\1\1\2\uffff\1\1\10\uffff\1\7\111\uffff\2\7\6\uffff\2\7\1\uffff\14\7",
            "\1\uffff",
            "",
            "",
            "",
            "\1\13",
            "",
            "\1\1\3\uffff\1\7",
            "\1\1\2\uffff\1\1\10\uffff\1\11\20\uffff\1\1\44\uffff\1\12\1\uffff\1\14",
            "\1\15",
            "\1\11\65\uffff\1\12\1\uffff\1\14"
    };

    static final short[] dfa_20 = DFA.unpackEncodedString(dfa_20s);
    static final char[] dfa_21 = DFA.unpackEncodedStringToUnsignedChars(dfa_21s);
    static final char[] dfa_22 = DFA.unpackEncodedStringToUnsignedChars(dfa_22s);
    static final short[] dfa_23 = DFA.unpackEncodedString(dfa_23s);
    static final short[] dfa_24 = DFA.unpackEncodedString(dfa_24s);
    static final short[][] dfa_25 = unpackEncodedStringArray(dfa_25s);

    class DFA10 extends DFA {

        public DFA10(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 10;
            this.eot = dfa_20;
            this.eof = dfa_20;
            this.min = dfa_21;
            this.max = dfa_22;
            this.accept = dfa_23;
            this.special = dfa_24;
            this.transition = dfa_25;
        }
        public String getDescription() {
            return "453:4: ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_function_4_0= ruleFunction ) ) | ( (lv_number_5_0= ruleNumber ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) | ( (lv_concept_7_0= ruleSimpleObservableSemantics ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA10_4 = input.LA(1);

                         
                        int index10_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index10_4);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 10, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_26s = "\47\uffff";
    static final String dfa_27s = "\1\4\2\uffff\3\0\1\uffff\1\0\22\uffff\1\0\14\uffff";
    static final String dfa_28s = "\1\u00e3\2\uffff\3\0\1\uffff\1\0\22\uffff\1\0\14\uffff";
    static final String dfa_29s = "\1\uffff\1\1\4\uffff\1\4\1\uffff\1\6\22\uffff\1\10\5\uffff\1\11\1\12\1\2\1\3\1\5\1\7";
    static final String dfa_30s = "\3\uffff\1\0\1\1\1\2\1\uffff\1\3\22\uffff\1\4\14\uffff}>";
    static final String[] dfa_31s = {
            "\1\10\1\7\2\uffff\1\10\2\uffff\1\5\13\uffff\2\1\11\uffff\1\32\1\uffff\1\42\11\uffff\1\6\1\41\74\uffff\2\10\6\uffff\2\10\1\uffff\14\10\70\uffff\1\33\40\uffff\5\33\1\uffff\1\3\1\4",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_26 = DFA.unpackEncodedString(dfa_26s);
    static final char[] dfa_27 = DFA.unpackEncodedStringToUnsignedChars(dfa_27s);
    static final char[] dfa_28 = DFA.unpackEncodedStringToUnsignedChars(dfa_28s);
    static final short[] dfa_29 = DFA.unpackEncodedString(dfa_29s);
    static final short[] dfa_30 = DFA.unpackEncodedString(dfa_30s);
    static final short[][] dfa_31 = unpackEncodedStringArray(dfa_31s);

    class DFA36 extends DFA {

        public DFA36(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 36;
            this.eot = dfa_26;
            this.eof = dfa_26;
            this.min = dfa_27;
            this.max = dfa_28;
            this.accept = dfa_29;
            this.special = dfa_30;
            this.transition = dfa_31;
        }
        public String getDescription() {
            return "1249:2: ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' ) | ( ( (lv_op_19_0= ruleREL_OPERATOR ) ) ( (lv_expression_20_0= ruleNumber ) ) ) | ( (lv_nodata_21_0= 'unknown' ) ) | ( (lv_star_22_0= '*' ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA36_3 = input.LA(1);

                         
                        int index36_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred51_InternalKim()) ) {s = 35;}

                        else if ( (synpred52_InternalKim()) ) {s = 36;}

                         
                        input.seek(index36_3);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA36_4 = input.LA(1);

                         
                        int index36_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred51_InternalKim()) ) {s = 35;}

                        else if ( (synpred52_InternalKim()) ) {s = 36;}

                         
                        input.seek(index36_4);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA36_5 = input.LA(1);

                         
                        int index36_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred51_InternalKim()) ) {s = 35;}

                        else if ( (synpred52_InternalKim()) ) {s = 36;}

                         
                        input.seek(index36_5);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA36_7 = input.LA(1);

                         
                        int index36_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred54_InternalKim()) ) {s = 37;}

                        else if ( (synpred55_InternalKim()) ) {s = 8;}

                         
                        input.seek(index36_7);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA36_26 = input.LA(1);

                         
                        int index36_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_InternalKim()) ) {s = 8;}

                        else if ( (synpred58_InternalKim()) ) {s = 38;}

                         
                        input.seek(index36_26);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 36, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_32s = "\1\4\2\uffff\3\0\1\uffff\1\0\3\uffff\1\0\33\uffff";
    static final String dfa_33s = "\1\u00e3\2\uffff\3\0\1\uffff\1\0\3\uffff\1\0\33\uffff";
    static final String dfa_34s = "\3\uffff\1\0\1\1\1\2\1\uffff\1\3\3\uffff\1\4\33\uffff}>";
    static final String[] dfa_35s = {
            "\1\13\1\7\2\uffff\1\10\2\uffff\1\5\13\uffff\2\1\11\uffff\1\10\1\uffff\1\42\11\uffff\1\6\1\41\74\uffff\2\10\6\uffff\2\10\1\uffff\14\10\70\uffff\1\33\40\uffff\5\33\1\uffff\1\3\1\4",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_32 = DFA.unpackEncodedStringToUnsignedChars(dfa_32s);
    static final char[] dfa_33 = DFA.unpackEncodedStringToUnsignedChars(dfa_33s);
    static final short[] dfa_34 = DFA.unpackEncodedString(dfa_34s);
    static final short[][] dfa_35 = unpackEncodedStringArray(dfa_35s);

    class DFA41 extends DFA {

        public DFA41(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 41;
            this.eot = dfa_26;
            this.eof = dfa_26;
            this.min = dfa_32;
            this.max = dfa_33;
            this.accept = dfa_29;
            this.special = dfa_34;
            this.transition = dfa_35;
        }
        public String getDescription() {
            return "1607:2: ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | ( ( (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId ) ) ) | ( ( (lv_op_15_0= ruleREL_OPERATOR ) ) ( (lv_expression_16_0= ruleNumber ) ) ) | ( (lv_nodata_17_0= 'unknown' ) ) | ( (lv_star_18_0= '*' ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA41_3 = input.LA(1);

                         
                        int index41_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred69_InternalKim()) ) {s = 35;}

                        else if ( (synpred70_InternalKim()) ) {s = 36;}

                         
                        input.seek(index41_3);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA41_4 = input.LA(1);

                         
                        int index41_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred69_InternalKim()) ) {s = 35;}

                        else if ( (synpred70_InternalKim()) ) {s = 36;}

                         
                        input.seek(index41_4);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA41_5 = input.LA(1);

                         
                        int index41_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred69_InternalKim()) ) {s = 35;}

                        else if ( (synpred70_InternalKim()) ) {s = 36;}

                         
                        input.seek(index41_5);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA41_7 = input.LA(1);

                         
                        int index41_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred72_InternalKim()) ) {s = 37;}

                        else if ( (synpred73_InternalKim()) ) {s = 8;}

                         
                        input.seek(index41_7);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA41_11 = input.LA(1);

                         
                        int index41_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred73_InternalKim()) ) {s = 8;}

                        else if ( (synpred75_InternalKim()) ) {s = 38;}

                         
                        input.seek(index41_11);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 41, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_36s = "\12\uffff";
    static final String dfa_37s = "\1\uffff\1\4\3\uffff\1\7\1\uffff\1\11\2\uffff";
    static final String dfa_38s = "\1\4\1\130\1\uffff\1\4\1\uffff\1\26\1\4\2\0\1\uffff";
    static final String dfa_39s = "\1\4\1\132\1\uffff\1\u00e3\1\uffff\1\163\1\u00e3\2\0\1\uffff";
    static final String dfa_40s = "\2\uffff\1\2\1\uffff\1\1\4\uffff\1\1";
    static final String dfa_41s = "\10\uffff\1\0\1\uffff}>";
    static final String[] dfa_42s = {
            "\1\1",
            "\1\3\1\uffff\1\2",
            "",
            "\1\5\4\4\1\2\1\uffff\1\4\13\uffff\2\4\11\uffff\1\4\14\uffff\2\4\73\uffff\2\4\6\uffff\2\4\1\uffff\14\4\65\uffff\1\4\51\uffff\2\4",
            "",
            "\1\4\13\uffff\1\4\65\uffff\1\6\1\uffff\1\4\30\uffff\1\4",
            "\4\2\1\10\2\uffff\1\2\13\uffff\2\2\11\uffff\1\2\14\uffff\2\2\73\uffff\2\2\6\uffff\2\2\1\uffff\14\2\65\uffff\1\2\51\uffff\2\2",
            "\1\uffff",
            "\1\uffff",
            ""
    };

    static final short[] dfa_36 = DFA.unpackEncodedString(dfa_36s);
    static final short[] dfa_37 = DFA.unpackEncodedString(dfa_37s);
    static final char[] dfa_38 = DFA.unpackEncodedStringToUnsignedChars(dfa_38s);
    static final char[] dfa_39 = DFA.unpackEncodedStringToUnsignedChars(dfa_39s);
    static final short[] dfa_40 = DFA.unpackEncodedString(dfa_40s);
    static final short[] dfa_41 = DFA.unpackEncodedString(dfa_41s);
    static final short[][] dfa_42 = unpackEncodedStringArray(dfa_42s);

    class DFA40 extends DFA {

        public DFA40(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 40;
            this.eot = dfa_36;
            this.eof = dfa_37;
            this.min = dfa_38;
            this.max = dfa_39;
            this.accept = dfa_40;
            this.special = dfa_41;
            this.transition = dfa_42;
        }
        public String getDescription() {
            return "1821:5: (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA40_8 = input.LA(1);

                         
                        int index40_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred74_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index40_8);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 40, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_43s = "\27\uffff";
    static final String dfa_44s = "\4\uffff\1\20\1\uffff\1\22\14\uffff\1\20\2\uffff\1\20";
    static final String dfa_45s = "\1\4\1\uffff\2\13\1\22\1\uffff\1\4\6\uffff\3\13\3\uffff\1\22\2\13\1\22";
    static final String dfa_46s = "\1\u00e3\1\uffff\2\13\1\u00e5\1\uffff\1\u0082\6\uffff\1\13\2\u00e3\3\uffff\1\u00e5\2\13\1\66";
    static final String dfa_47s = "\1\uffff\1\1\3\uffff\1\4\1\uffff\1\6\1\7\1\10\1\11\1\12\1\13\3\uffff\1\3\1\2\1\5\4\uffff";
    static final String dfa_48s = "\27\uffff}>";
    static final String[] dfa_49s = {
            "\1\7\1\6\1\11\1\uffff\1\7\2\uffff\1\4\13\uffff\2\1\11\uffff\1\7\1\uffff\1\13\11\uffff\1\5\1\12\3\uffff\1\14\70\uffff\2\7\6\uffff\2\7\1\uffff\14\7\70\uffff\1\10\40\uffff\5\10\1\uffff\1\2\1\3",
            "",
            "\1\4",
            "\1\4",
            "\1\20\3\uffff\1\20\11\uffff\1\21\5\uffff\1\20\5\uffff\2\21\3\uffff\2\20\1\uffff\3\20\43\uffff\1\15\u0089\uffff\1\16\1\17",
            "",
            "\1\7\3\uffff\1\7\11\uffff\1\22\3\uffff\1\22\13\uffff\1\7\3\uffff\1\22\12\uffff\2\22\1\uffff\3\22\65\uffff\2\7\6\uffff\2\7\1\uffff\14\7",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\23",
            "\1\26\u00d6\uffff\1\24\1\25",
            "\1\26\u00d6\uffff\1\24\1\25",
            "",
            "",
            "",
            "\1\20\3\uffff\1\20\11\uffff\1\21\5\uffff\1\20\5\uffff\2\21\3\uffff\2\20\1\uffff\3\20\u00ad\uffff\1\16\1\17",
            "\1\26",
            "\1\26",
            "\1\20\3\uffff\1\20\11\uffff\1\21\5\uffff\1\20\5\uffff\2\21\3\uffff\2\20\1\uffff\3\20"
    };

    static final short[] dfa_43 = DFA.unpackEncodedString(dfa_43s);
    static final short[] dfa_44 = DFA.unpackEncodedString(dfa_44s);
    static final char[] dfa_45 = DFA.unpackEncodedStringToUnsignedChars(dfa_45s);
    static final char[] dfa_46 = DFA.unpackEncodedStringToUnsignedChars(dfa_46s);
    static final short[] dfa_47 = DFA.unpackEncodedString(dfa_47s);
    static final short[] dfa_48 = DFA.unpackEncodedString(dfa_48s);
    static final short[][] dfa_49 = unpackEncodedStringArray(dfa_49s);

    class DFA49 extends DFA {

        public DFA49(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 49;
            this.eot = dfa_43;
            this.eof = dfa_44;
            this.min = dfa_45;
            this.max = dfa_46;
            this.accept = dfa_47;
            this.special = dfa_48;
            this.transition = dfa_49;
        }
        public String getDescription() {
            return "2195:2: ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | ( ( (lv_op_14_0= ruleREL_OPERATOR ) ) ( (lv_expression_15_0= ruleNumber ) ) ) | ( (lv_expr_16_0= RULE_EXPR ) ) | ( (lv_nodata_17_0= 'unknown' ) ) | ( (lv_star_18_0= '*' ) ) | ( (lv_anything_19_0= '#' ) ) )";
        }
    }
    static final String dfa_50s = "\42\uffff";
    static final String dfa_51s = "\1\2\41\uffff";
    static final String dfa_52s = "\1\4\1\0\40\uffff";
    static final String dfa_53s = "\1\u0082\1\0\40\uffff";
    static final String dfa_54s = "\2\uffff\1\2\36\uffff\1\1";
    static final String dfa_55s = "\1\uffff\1\0\40\uffff}>";
    static final String[] dfa_56s = {
            "\2\2\2\uffff\1\2\11\uffff\1\2\17\uffff\1\1\2\uffff\2\2\15\uffff\3\2\7\uffff\5\2\51\uffff\2\2\6\uffff\2\2\1\uffff\14\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_50 = DFA.unpackEncodedString(dfa_50s);
    static final short[] dfa_51 = DFA.unpackEncodedString(dfa_51s);
    static final char[] dfa_52 = DFA.unpackEncodedStringToUnsignedChars(dfa_52s);
    static final char[] dfa_53 = DFA.unpackEncodedStringToUnsignedChars(dfa_53s);
    static final short[] dfa_54 = DFA.unpackEncodedString(dfa_54s);
    static final short[] dfa_55 = DFA.unpackEncodedString(dfa_55s);
    static final short[][] dfa_56 = unpackEncodedStringArray(dfa_56s);

    class DFA57 extends DFA {

        public DFA57(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 57;
            this.eot = dfa_50;
            this.eof = dfa_51;
            this.min = dfa_52;
            this.max = dfa_53;
            this.accept = dfa_54;
            this.special = dfa_55;
            this.transition = dfa_56;
        }
        public String getDescription() {
            return "2818:4: ( (lv_parameters_19_0= ruleList ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA57_1 = input.LA(1);

                         
                        int index57_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred114_InternalKim()) ) {s = 33;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index57_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 57, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_57s = "\50\uffff";
    static final String dfa_58s = "\1\21\47\uffff";
    static final String dfa_59s = "\1\4\3\uffff\1\0\3\uffff\2\0\2\uffff\2\0\32\uffff";
    static final String dfa_60s = "\1\u00e3\3\uffff\1\0\3\uffff\2\0\2\uffff\2\0\32\uffff";
    static final String dfa_61s = "\1\uffff\3\1\1\uffff\3\1\2\uffff\2\1\2\uffff\3\1\1\2\26\uffff";
    static final String dfa_62s = "\1\0\3\uffff\1\1\3\uffff\1\2\1\3\2\uffff\1\4\1\5\32\uffff}>";
    static final String[] dfa_63s = {
            "\1\11\1\4\1\12\1\13\1\14\1\uffff\1\7\1\3\6\uffff\1\21\3\uffff\1\10\1\5\1\6\11\uffff\1\15\2\uffff\2\21\10\uffff\1\20\1\16\3\uffff\3\21\65\uffff\2\21\6\uffff\2\21\1\uffff\14\21\65\uffff\1\17\51\uffff\1\1\1\2",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_57 = DFA.unpackEncodedString(dfa_57s);
    static final short[] dfa_58 = DFA.unpackEncodedString(dfa_58s);
    static final char[] dfa_59 = DFA.unpackEncodedStringToUnsignedChars(dfa_59s);
    static final char[] dfa_60 = DFA.unpackEncodedStringToUnsignedChars(dfa_60s);
    static final short[] dfa_61 = DFA.unpackEncodedString(dfa_61s);
    static final short[] dfa_62 = DFA.unpackEncodedString(dfa_62s);
    static final short[][] dfa_63 = unpackEncodedStringArray(dfa_63s);

    class DFA74 extends DFA {

        public DFA74(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 74;
            this.eot = dfa_57;
            this.eof = dfa_58;
            this.min = dfa_59;
            this.max = dfa_60;
            this.accept = dfa_61;
            this.special = dfa_62;
            this.transition = dfa_63;
        }
        public String getDescription() {
            return "3394:4: ( ( ( ruleValue ) )=> (lv_condition_25_0= ruleValue ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA74_0 = input.LA(1);

                         
                        int index74_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA74_0==226) && (synpred140_InternalKim())) {s = 1;}

                        else if ( (LA74_0==227) && (synpred140_InternalKim())) {s = 2;}

                        else if ( (LA74_0==RULE_INT) && (synpred140_InternalKim())) {s = 3;}

                        else if ( (LA74_0==RULE_STRING) ) {s = 4;}

                        else if ( (LA74_0==23) && (synpred140_InternalKim())) {s = 5;}

                        else if ( (LA74_0==24) && (synpred140_InternalKim())) {s = 6;}

                        else if ( (LA74_0==RULE_ID) && (synpred140_InternalKim())) {s = 7;}

                        else if ( (LA74_0==22) ) {s = 8;}

                        else if ( (LA74_0==RULE_LOWERCASE_ID) ) {s = 9;}

                        else if ( (LA74_0==RULE_EXPR) && (synpred140_InternalKim())) {s = 10;}

                        else if ( (LA74_0==RULE_UPPERCASE_ID) && (synpred140_InternalKim())) {s = 11;}

                        else if ( (LA74_0==RULE_CAMELCASE_ID) ) {s = 12;}

                        else if ( (LA74_0==34) ) {s = 13;}

                        else if ( (LA74_0==48) && (synpred140_InternalKim())) {s = 14;}

                        else if ( (LA74_0==184) && (synpred140_InternalKim())) {s = 15;}

                        else if ( (LA74_0==47) && (synpred140_InternalKim())) {s = 16;}

                        else if ( (LA74_0==EOF||LA74_0==18||(LA74_0>=37 && LA74_0<=38)||(LA74_0>=52 && LA74_0<=54)||(LA74_0>=108 && LA74_0<=109)||(LA74_0>=116 && LA74_0<=117)||(LA74_0>=119 && LA74_0<=130)) ) {s = 17;}

                         
                        input.seek(index74_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA74_4 = input.LA(1);

                         
                        int index74_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred140_InternalKim()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index74_4);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA74_8 = input.LA(1);

                         
                        int index74_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred140_InternalKim()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index74_8);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA74_9 = input.LA(1);

                         
                        int index74_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred140_InternalKim()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index74_9);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA74_12 = input.LA(1);

                         
                        int index74_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred140_InternalKim()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index74_12);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA74_13 = input.LA(1);

                         
                        int index74_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred140_InternalKim()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index74_13);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 74, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_64s = "\20\uffff";
    static final String dfa_65s = "\1\4\10\uffff\1\0\6\uffff";
    static final String dfa_66s = "\1\u00e3\10\uffff\1\0\6\uffff";
    static final String dfa_67s = "\1\uffff\1\1\10\uffff\1\3\1\4\1\uffff\1\5\1\6\1\2";
    static final String dfa_68s = "\11\uffff\1\0\6\uffff}>";
    static final String[] dfa_69s = {
            "\1\11\1\1\1\12\2\13\1\uffff\2\1\12\uffff\3\1\11\uffff\1\15\14\uffff\1\16\u00b2\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_64 = DFA.unpackEncodedString(dfa_64s);
    static final char[] dfa_65 = DFA.unpackEncodedStringToUnsignedChars(dfa_65s);
    static final char[] dfa_66 = DFA.unpackEncodedStringToUnsignedChars(dfa_66s);
    static final short[] dfa_67 = DFA.unpackEncodedString(dfa_67s);
    static final short[] dfa_68 = DFA.unpackEncodedString(dfa_68s);
    static final short[][] dfa_69 = unpackEncodedStringArray(dfa_69s);

    class DFA81 extends DFA {

        public DFA81(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 81;
            this.eot = dfa_64;
            this.eof = dfa_64;
            this.min = dfa_65;
            this.max = dfa_66;
            this.accept = dfa_67;
            this.special = dfa_68;
            this.transition = dfa_69;
        }
        public String getDescription() {
            return "3498:2: ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_6_0= ruleList ) ) | ( (lv_null_7_0= 'unknown' ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA81_9 = input.LA(1);

                         
                        int index81_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred144_InternalKim()) ) {s = 15;}

                        else if ( (synpred151_InternalKim()) ) {s = 11;}

                         
                        input.seek(index81_9);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 81, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_70s = "\7\uffff";
    static final String dfa_71s = "\1\4\1\42\2\uffff\1\4\1\uffff\1\42";
    static final String dfa_72s = "\1\127\1\132\2\uffff\1\4\1\uffff\1\132";
    static final String dfa_73s = "\2\uffff\1\2\1\3\1\uffff\1\1\1\uffff";
    static final String dfa_74s = "\7\uffff}>";
    static final String[] dfa_75s = {
            "\1\1\1\uffff\1\2\120\uffff\1\3",
            "\1\5\65\uffff\1\3\1\uffff\1\4",
            "",
            "",
            "\1\6",
            "",
            "\1\5\65\uffff\1\3\1\uffff\1\4"
    };

    static final short[] dfa_70 = DFA.unpackEncodedString(dfa_70s);
    static final char[] dfa_71 = DFA.unpackEncodedStringToUnsignedChars(dfa_71s);
    static final char[] dfa_72 = DFA.unpackEncodedStringToUnsignedChars(dfa_72s);
    static final short[] dfa_73 = DFA.unpackEncodedString(dfa_73s);
    static final short[] dfa_74 = DFA.unpackEncodedString(dfa_74s);
    static final short[][] dfa_75 = unpackEncodedStringArray(dfa_75s);

    class DFA85 extends DFA {

        public DFA85(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 85;
            this.eot = dfa_70;
            this.eof = dfa_70;
            this.min = dfa_71;
            this.max = dfa_72;
            this.accept = dfa_73;
            this.special = dfa_74;
            this.transition = dfa_75;
        }
        public String getDescription() {
            return "3781:2: ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_expr_1_0= RULE_EXPR ) ) (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( (lv_urn_4_0= ruleUrnId ) ) )";
        }
    }
    static final String dfa_76s = "\1\22\1\uffff\1\4\13\uffff";
    static final String dfa_77s = "\1\125\1\uffff\1\u00b8\13\uffff";
    static final String dfa_78s = "\1\uffff\1\10\1\uffff\1\2\1\3\1\4\1\5\1\6\3\7\3\1";
    static final String dfa_79s = "\1\0\1\uffff\1\1\13\uffff}>";
    static final String[] dfa_80s = {
            "\1\1\10\uffff\1\2\12\uffff\1\1\7\uffff\1\5\36\uffff\1\3\1\4\2\uffff\1\6\1\7\1\10\1\uffff\1\11",
            "",
            "\1\15\35\uffff\1\13\1\uffff\1\14\u0093\uffff\1\12",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_76 = DFA.unpackEncodedStringToUnsignedChars(dfa_76s);
    static final char[] dfa_77 = DFA.unpackEncodedStringToUnsignedChars(dfa_77s);
    static final short[] dfa_78 = DFA.unpackEncodedString(dfa_78s);
    static final short[] dfa_79 = DFA.unpackEncodedString(dfa_79s);
    static final short[][] dfa_80 = unpackEncodedStringArray(dfa_80s);

    class DFA100 extends DFA {

        public DFA100(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 100;
            this.eot = dfa_20;
            this.eof = dfa_20;
            this.min = dfa_76;
            this.max = dfa_77;
            this.accept = dfa_78;
            this.special = dfa_79;
            this.transition = dfa_80;
        }
        public String getDescription() {
            return "()* loopback of 4143:6: ( ({...}? => ( ({...}? => (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA100_0 = input.LA(1);

                         
                        int index100_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA100_0==18||LA100_0==38) ) {s = 1;}

                        else if ( (LA100_0==27) ) {s = 2;}

                        else if ( LA100_0 == 77 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 1) ) {s = 3;}

                        else if ( LA100_0 == 78 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 2) ) {s = 4;}

                        else if ( LA100_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 3) ) {s = 5;}

                        else if ( LA100_0 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 4) ) {s = 6;}

                        else if ( LA100_0 == 82 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 5) ) {s = 7;}

                        else if ( LA100_0 == 83 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 6) ) {s = 8;}

                        else if ( LA100_0 == 85 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 6) ) {s = 9;}

                         
                        input.seek(index100_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA100_2 = input.LA(1);

                         
                        int index100_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA100_2 == 184 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 6) ) {s = 10;}

                        else if ( LA100_2 == 34 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 0) ) {s = 11;}

                        else if ( LA100_2 == 36 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 0) ) {s = 12;}

                        else if ( LA100_2 == RULE_LOWERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 0) ) {s = 13;}

                         
                        input.seek(index100_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 100, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_81s = "\36\uffff";
    static final String dfa_82s = "\1\2\35\uffff";
    static final String dfa_83s = "\1\4\27\0\6\uffff";
    static final String dfa_84s = "\1\u0082\27\0\6\uffff";
    static final String dfa_85s = "\30\uffff\4\2\1\3\1\1";
    static final String dfa_86s = "\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\6\uffff}>";
    static final String[] dfa_87s = {
            "\1\10\1\4\2\uffff\1\7\11\uffff\1\1\17\uffff\1\27\2\uffff\1\3\1\33\15\uffff\1\30\1\31\1\32\65\uffff\1\11\1\12\6\uffff\1\5\1\6\1\uffff\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_81 = DFA.unpackEncodedString(dfa_81s);
    static final short[] dfa_82 = DFA.unpackEncodedString(dfa_82s);
    static final char[] dfa_83 = DFA.unpackEncodedStringToUnsignedChars(dfa_83s);
    static final char[] dfa_84 = DFA.unpackEncodedStringToUnsignedChars(dfa_84s);
    static final short[] dfa_85 = DFA.unpackEncodedString(dfa_85s);
    static final short[] dfa_86 = DFA.unpackEncodedString(dfa_86s);
    static final short[][] dfa_87 = unpackEncodedStringArray(dfa_87s);

    class DFA127 extends DFA {

        public DFA127(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 127;
            this.eot = dfa_81;
            this.eof = dfa_82;
            this.min = dfa_83;
            this.max = dfa_84;
            this.accept = dfa_85;
            this.special = dfa_86;
            this.transition = dfa_87;
        }
        public String getDescription() {
            return "()+ loopback of 5164:5: ( ({...}? => ( ({...}? => ( ( (lv_concept_1_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_2_0= RULE_STRING ) )? (otherlv_3= 'extends' ( (lv_parents_4_0= rulePathName ) ) (otherlv_5= ',' ( (lv_parents_6_0= rulePathName ) ) )* )? (otherlv_7= 'observing' ( (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' ) | ( (lv_states_11_0= ruleObservableSemantics ) ) ) (otherlv_12= ',' ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) | ( (lv_states_16_0= ruleObservableSemantics ) ) ) )* )? (otherlv_17= 'using' ( (lv_accessor_18_0= ruleFunction ) )? )? ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_actions_19_0= ruleActionSpecification ) )* (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )? ) ) ) ) )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA127_0 = input.LA(1);

                         
                        int index127_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA127_0==18) ) {s = 1;}

                        else if ( (LA127_0==EOF) ) {s = 2;}

                        else if ( (LA127_0==37) ) {s = 3;}

                        else if ( (LA127_0==RULE_STRING) ) {s = 4;}

                        else if ( (LA127_0==116) ) {s = 5;}

                        else if ( (LA127_0==117) ) {s = 6;}

                        else if ( (LA127_0==RULE_CAMELCASE_ID) ) {s = 7;}

                        else if ( (LA127_0==RULE_LOWERCASE_ID) ) {s = 8;}

                        else if ( (LA127_0==108) ) {s = 9;}

                        else if ( (LA127_0==109) ) {s = 10;}

                        else if ( (LA127_0==119) ) {s = 11;}

                        else if ( (LA127_0==120) ) {s = 12;}

                        else if ( (LA127_0==121) ) {s = 13;}

                        else if ( (LA127_0==122) ) {s = 14;}

                        else if ( (LA127_0==123) ) {s = 15;}

                        else if ( (LA127_0==124) ) {s = 16;}

                        else if ( (LA127_0==125) ) {s = 17;}

                        else if ( (LA127_0==126) ) {s = 18;}

                        else if ( (LA127_0==127) ) {s = 19;}

                        else if ( (LA127_0==128) ) {s = 20;}

                        else if ( (LA127_0==129) ) {s = 21;}

                        else if ( (LA127_0==130) ) {s = 22;}

                        else if ( (LA127_0==34) ) {s = 23;}

                        else if ( LA127_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 24;}

                        else if ( LA127_0 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 25;}

                        else if ( LA127_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 26;}

                        else if ( LA127_0 == 38 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 27;}

                         
                        input.seek(index127_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA127_1 = input.LA(1);

                         
                        int index127_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred219_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 27;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup()) ) {s = 28;}

                         
                        input.seek(index127_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA127_2 = input.LA(1);

                         
                        int index127_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred219_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 27;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup()) ) {s = 28;}

                         
                        input.seek(index127_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA127_3 = input.LA(1);

                         
                        int index127_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred219_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 27;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup()) ) {s = 28;}

                         
                        input.seek(index127_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA127_4 = input.LA(1);

                         
                        int index127_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred215_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 29;}

                        else if ( synpred219_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 27;}

                         
                        input.seek(index127_4);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA127_5 = input.LA(1);

                         
                        int index127_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred215_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 29;}

                        else if ( synpred219_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 27;}

                         
                        input.seek(index127_5);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA127_6 = input.LA(1);

                         
                        int index127_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred215_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 29;}

                        else if ( synpred219_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 27;}

                         
                        input.seek(index127_6);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA127_7 = input.LA(1);

                         
                        int index127_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred215_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 29;}

                        else if ( synpred219_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 27;}

                         
                        input.seek(index127_7);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA127_8 = input.LA(1);

                         
                        int index127_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred215_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 29;}

                        else if ( synpred219_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 27;}

                         
                        input.seek(index127_8);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA127_9 = input.LA(1);

                         
                        int index127_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred215_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 29;}

                        else if ( synpred219_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 27;}

                         
                        input.seek(index127_9);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA127_10 = input.LA(1);

                         
                        int index127_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred215_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 29;}

                        else if ( synpred219_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 27;}

                         
                        input.seek(index127_10);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA127_11 = input.LA(1);

                         
                        int index127_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred215_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 29;}

                        else if ( synpred219_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 27;}

                         
                        input.seek(index127_11);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA127_12 = input.LA(1);

                         
                        int index127_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred215_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 29;}

                        else if ( synpred219_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 27;}

                         
                        input.seek(index127_12);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA127_13 = input.LA(1);

                         
                        int index127_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred215_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 29;}

                        else if ( synpred219_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 27;}

                         
                        input.seek(index127_13);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA127_14 = input.LA(1);

                         
                        int index127_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred215_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 29;}

                        else if ( synpred219_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 27;}

                         
                        input.seek(index127_14);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA127_15 = input.LA(1);

                         
                        int index127_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred215_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 29;}

                        else if ( synpred219_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 27;}

                         
                        input.seek(index127_15);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA127_16 = input.LA(1);

                         
                        int index127_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred215_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 29;}

                        else if ( synpred219_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 27;}

                         
                        input.seek(index127_16);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA127_17 = input.LA(1);

                         
                        int index127_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred215_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 29;}

                        else if ( synpred219_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 27;}

                         
                        input.seek(index127_17);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA127_18 = input.LA(1);

                         
                        int index127_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred215_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 29;}

                        else if ( synpred219_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 27;}

                         
                        input.seek(index127_18);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA127_19 = input.LA(1);

                         
                        int index127_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred215_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 29;}

                        else if ( synpred219_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 27;}

                         
                        input.seek(index127_19);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA127_20 = input.LA(1);

                         
                        int index127_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred215_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 29;}

                        else if ( synpred219_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 27;}

                         
                        input.seek(index127_20);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA127_21 = input.LA(1);

                         
                        int index127_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred215_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 29;}

                        else if ( synpred219_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 27;}

                         
                        input.seek(index127_21);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA127_22 = input.LA(1);

                         
                        int index127_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred215_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 29;}

                        else if ( synpred219_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 27;}

                         
                        input.seek(index127_22);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA127_23 = input.LA(1);

                         
                        int index127_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred215_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 29;}

                        else if ( synpred219_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 27;}

                         
                        input.seek(index127_23);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 127, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_88s = "\43\uffff";
    static final String dfa_89s = "\1\4\1\0\41\uffff";
    static final String dfa_90s = "\1\u00e3\1\0\41\uffff";
    static final String dfa_91s = "\2\uffff\1\2\37\uffff\1\1";
    static final String dfa_92s = "\1\uffff\1\0\41\uffff}>";
    static final String[] dfa_93s = {
            "\5\2\1\uffff\2\2\12\uffff\3\2\11\uffff\1\1\14\uffff\2\2\54\uffff\1\2\16\uffff\2\2\6\uffff\2\2\1\uffff\14\2\65\uffff\1\2\51\uffff\2\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_88 = DFA.unpackEncodedString(dfa_88s);
    static final char[] dfa_89 = DFA.unpackEncodedStringToUnsignedChars(dfa_89s);
    static final char[] dfa_90 = DFA.unpackEncodedStringToUnsignedChars(dfa_90s);
    static final short[] dfa_91 = DFA.unpackEncodedString(dfa_91s);
    static final short[] dfa_92 = DFA.unpackEncodedString(dfa_92s);
    static final short[][] dfa_93 = unpackEncodedStringArray(dfa_93s);

    class DFA118 extends DFA {

        public DFA118(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 118;
            this.eot = dfa_88;
            this.eof = dfa_88;
            this.min = dfa_89;
            this.max = dfa_90;
            this.accept = dfa_91;
            this.special = dfa_92;
            this.transition = dfa_93;
        }
        public String getDescription() {
            return "5262:9: ( (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' ) | ( (lv_states_11_0= ruleObservableSemantics ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA118_1 = input.LA(1);

                         
                        int index118_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred209_InternalKim()) ) {s = 34;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index118_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 118, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA119 extends DFA {

        public DFA119(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 119;
            this.eot = dfa_88;
            this.eof = dfa_88;
            this.min = dfa_89;
            this.max = dfa_90;
            this.accept = dfa_91;
            this.special = dfa_92;
            this.transition = dfa_93;
        }
        public String getDescription() {
            return "5318:10: ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) | ( (lv_states_16_0= ruleObservableSemantics ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA119_1 = input.LA(1);

                         
                        int index119_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_InternalKim()) ) {s = 34;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index119_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 119, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_94s = "\6\uffff";
    static final String dfa_95s = "\1\2\5\uffff";
    static final String dfa_96s = "\1\4\1\42\1\uffff\1\4\1\uffff\1\42";
    static final String dfa_97s = "\1\u0082\1\132\1\uffff\1\4\1\uffff\1\132";
    static final String dfa_98s = "\2\uffff\1\2\1\uffff\1\1\1\uffff";
    static final String dfa_99s = "\6\uffff}>";
    static final String[] dfa_100s = {
            "\1\1\1\2\2\uffff\1\2\11\uffff\1\2\17\uffff\1\2\2\uffff\2\2\15\uffff\3\2\65\uffff\2\2\6\uffff\2\2\1\uffff\14\2",
            "\1\4\65\uffff\1\2\1\uffff\1\3",
            "",
            "\1\5",
            "",
            "\1\4\65\uffff\1\2\1\uffff\1\3"
    };

    static final short[] dfa_94 = DFA.unpackEncodedString(dfa_94s);
    static final short[] dfa_95 = DFA.unpackEncodedString(dfa_95s);
    static final char[] dfa_96 = DFA.unpackEncodedStringToUnsignedChars(dfa_96s);
    static final char[] dfa_97 = DFA.unpackEncodedStringToUnsignedChars(dfa_97s);
    static final short[] dfa_98 = DFA.unpackEncodedString(dfa_98s);
    static final short[] dfa_99 = DFA.unpackEncodedString(dfa_99s);
    static final short[][] dfa_100 = unpackEncodedStringArray(dfa_100s);

    class DFA122 extends DFA {

        public DFA122(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 122;
            this.eot = dfa_94;
            this.eof = dfa_95;
            this.min = dfa_96;
            this.max = dfa_97;
            this.accept = dfa_98;
            this.special = dfa_99;
            this.transition = dfa_100;
        }
        public String getDescription() {
            return "5376:9: ( (lv_accessor_18_0= ruleFunction ) )?";
        }
    }
    static final String dfa_101s = "\1\4\3\uffff\1\0\4\uffff\1\0\2\uffff\2\0\24\uffff";
    static final String dfa_102s = "\1\u00e3\3\uffff\1\0\4\uffff\1\0\2\uffff\2\0\24\uffff";
    static final String dfa_103s = "\1\uffff\1\1\17\uffff\1\2\20\uffff";
    static final String dfa_104s = "\4\uffff\1\0\4\uffff\1\1\2\uffff\1\2\1\3\24\uffff}>";
    static final String[] dfa_105s = {
            "\1\11\1\4\2\1\1\14\1\uffff\2\1\12\uffff\3\1\11\uffff\1\15\14\uffff\2\1\54\uffff\1\21\16\uffff\2\21\6\uffff\2\21\1\uffff\14\21\65\uffff\1\1\51\uffff\2\1",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_101 = DFA.unpackEncodedStringToUnsignedChars(dfa_101s);
    static final char[] dfa_102 = DFA.unpackEncodedStringToUnsignedChars(dfa_102s);
    static final short[] dfa_103 = DFA.unpackEncodedString(dfa_103s);
    static final short[] dfa_104 = DFA.unpackEncodedString(dfa_104s);
    static final short[][] dfa_105 = unpackEncodedStringArray(dfa_105s);

    class DFA128 extends DFA {

        public DFA128(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 128;
            this.eot = dfa_50;
            this.eof = dfa_50;
            this.min = dfa_101;
            this.max = dfa_102;
            this.accept = dfa_103;
            this.special = dfa_104;
            this.transition = dfa_105;
        }
        public String getDescription() {
            return "5529:3: ( ( (lv_value_0_0= ruleValue ) ) otherlv_1= 'as' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA128_4 = input.LA(1);

                         
                        int index128_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred220_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index128_4);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA128_9 = input.LA(1);

                         
                        int index128_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred220_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index128_9);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA128_12 = input.LA(1);

                         
                        int index128_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred220_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index128_12);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA128_13 = input.LA(1);

                         
                        int index128_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred220_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index128_13);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 128, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_106s = "\136\uffff";
    static final String dfa_107s = "\1\1\16\uffff\1\21\116\uffff";
    static final String dfa_108s = "\1\4\1\uffff\1\40\1\4\12\uffff\2\4\1\130\107\uffff\2\4\2\0\1\130\1\uffff";
    static final String dfa_109s = "\1\u00e3\1\uffff\1\40\1\4\12\uffff\1\4\1\u00e3\1\132\107\uffff\1\11\1\4\2\0\1\132\1\uffff";
    static final String dfa_110s = "\1\uffff\1\11\2\uffff\1\1\1\2\1\3\2\5\2\6\3\7\3\uffff\107\10\5\uffff\1\4";
    static final String dfa_111s = "\1\2\16\uffff\1\1\112\uffff\1\0\1\3\2\uffff}>";
    static final String[] dfa_112s = {
            "\2\1\2\uffff\1\1\2\uffff\1\15\6\uffff\1\1\3\uffff\1\1\2\uffff\1\6\4\1\1\uffff\1\2\1\uffff\2\1\2\uffff\2\1\7\uffff\1\7\5\uffff\3\1\47\uffff\1\4\1\5\1\10\1\11\1\12\1\3\10\uffff\2\1\6\uffff\2\1\1\uffff\14\1\13\uffff\1\1\1\uffff\1\1\1\uffff\3\1\1\uffff\11\1\1\uffff\11\1\6\uffff\3\1\60\uffff\1\13\1\14",
            "",
            "\1\16",
            "\1\17",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\20",
            "\1\43\1\37\2\uffff\1\42\2\uffff\1\127\6\uffff\1\35\3\uffff\1\22\2\uffff\1\120\1\23\1\24\1\25\1\26\1\uffff\1\27\1\uffff\1\30\1\62\2\uffff\1\36\1\34\7\uffff\1\121\5\uffff\1\31\1\32\1\33\41\uffff\1\1\1\uffff\1\1\3\uffff\1\116\1\117\1\122\1\123\1\124\1\63\10\uffff\1\44\1\45\6\uffff\1\40\1\41\1\uffff\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\1\61\13\uffff\1\64\1\uffff\1\65\1\uffff\1\66\1\67\1\70\1\uffff\1\71\1\72\1\73\1\74\1\75\1\76\1\77\1\100\1\101\1\uffff\1\102\1\103\1\104\1\105\1\106\1\107\1\110\1\111\1\112\6\uffff\1\113\1\114\1\115\60\uffff\1\125\1\126",
            "\1\130\1\uffff\1\131",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\132\4\uffff\1\133",
            "\1\134",
            "\1\uffff",
            "\1\uffff",
            "\1\130\1\uffff\1\131",
            ""
    };

    static final short[] dfa_106 = DFA.unpackEncodedString(dfa_106s);
    static final short[] dfa_107 = DFA.unpackEncodedString(dfa_107s);
    static final char[] dfa_108 = DFA.unpackEncodedStringToUnsignedChars(dfa_108s);
    static final char[] dfa_109 = DFA.unpackEncodedStringToUnsignedChars(dfa_109s);
    static final short[] dfa_110 = DFA.unpackEncodedString(dfa_110s);
    static final short[] dfa_111 = DFA.unpackEncodedString(dfa_111s);
    static final short[][] dfa_112 = unpackEncodedStringArray(dfa_112s);

    class DFA133 extends DFA {

        public DFA133(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 133;
            this.eot = dfa_106;
            this.eof = dfa_107;
            this.min = dfa_108;
            this.max = dfa_109;
            this.accept = dfa_110;
            this.special = dfa_111;
            this.transition = dfa_112;
        }
        public String getDescription() {
            return "()* loopback of 5593:6: ( ({...}? => ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA133_90 = input.LA(1);

                         
                        int index133_90 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred225_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 93;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index133_90);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA133_15 = input.LA(1);

                         
                        int index133_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA133_15 == EOF && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 17;}

                        else if ( LA133_15 == 22 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 18;}

                        else if ( LA133_15 == 26 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 19;}

                        else if ( LA133_15 == 27 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 20;}

                        else if ( LA133_15 == 28 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 21;}

                        else if ( LA133_15 == 29 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 22;}

                        else if ( LA133_15 == 31 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 23;}

                        else if ( LA133_15 == 33 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 24;}

                        else if ( LA133_15 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 25;}

                        else if ( LA133_15 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 26;}

                        else if ( LA133_15 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 27;}

                        else if ( LA133_15 == 38 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 28;}

                        else if ( LA133_15 == 18 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 29;}

                        else if ( LA133_15 == 37 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 30;}

                        else if ( LA133_15 == RULE_STRING && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 31;}

                        else if ( LA133_15 == 116 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 32;}

                        else if ( LA133_15 == 117 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 33;}

                        else if ( LA133_15 == RULE_CAMELCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 34;}

                        else if ( LA133_15 == RULE_LOWERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 35;}

                        else if ( LA133_15 == 108 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 36;}

                        else if ( LA133_15 == 109 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 37;}

                        else if ( LA133_15 == 119 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 38;}

                        else if ( LA133_15 == 120 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 39;}

                        else if ( LA133_15 == 121 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 40;}

                        else if ( LA133_15 == 122 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 41;}

                        else if ( LA133_15 == 123 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 42;}

                        else if ( LA133_15 == 124 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 43;}

                        else if ( LA133_15 == 125 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 44;}

                        else if ( LA133_15 == 126 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 45;}

                        else if ( LA133_15 == 127 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 46;}

                        else if ( LA133_15 == 128 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 47;}

                        else if ( LA133_15 == 129 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 48;}

                        else if ( LA133_15 == 130 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 49;}

                        else if ( LA133_15 == 34 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 50;}

                        else if ( LA133_15 == 99 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 51;}

                        else if ( LA133_15 == 142 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 52;}

                        else if ( LA133_15 == 144 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 53;}

                        else if ( LA133_15 == 146 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 54;}

                        else if ( LA133_15 == 147 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 55;}

                        else if ( LA133_15 == 148 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 56;}

                        else if ( LA133_15 == 150 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 57;}

                        else if ( LA133_15 == 151 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 58;}

                        else if ( LA133_15 == 152 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 59;}

                        else if ( LA133_15 == 153 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 60;}

                        else if ( LA133_15 == 154 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 61;}

                        else if ( LA133_15 == 155 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 62;}

                        else if ( LA133_15 == 156 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 63;}

                        else if ( LA133_15 == 157 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 64;}

                        else if ( LA133_15 == 158 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 65;}

                        else if ( LA133_15 == 160 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 66;}

                        else if ( LA133_15 == 161 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 67;}

                        else if ( LA133_15 == 162 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 68;}

                        else if ( LA133_15 == 163 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 69;}

                        else if ( LA133_15 == 164 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 70;}

                        else if ( LA133_15 == 165 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 71;}

                        else if ( LA133_15 == 166 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 72;}

                        else if ( LA133_15 == 167 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 73;}

                        else if ( LA133_15 == 168 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 74;}

                        else if ( LA133_15 == 175 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 75;}

                        else if ( LA133_15 == 176 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 76;}

                        else if ( LA133_15 == 177 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 77;}

                        else if ( LA133_15 == 94 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 78;}

                        else if ( LA133_15 == 95 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 79;}

                        else if ( LA133_15 == 25 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 80;}

                        else if ( LA133_15 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 81;}

                        else if ( LA133_15 == 96 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 82;}

                        else if ( LA133_15 == 97 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 83;}

                        else if ( LA133_15 == 98 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 84;}

                        else if ( LA133_15 == 226 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 85;}

                        else if ( LA133_15 == 227 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 86;}

                        else if ( LA133_15 == RULE_INT && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 87;}

                        else if ( (LA133_15==88||LA133_15==90) ) {s = 1;}

                         
                        input.seek(index133_15);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA133_0 = input.LA(1);

                         
                        int index133_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA133_0==EOF||(LA133_0>=RULE_LOWERCASE_ID && LA133_0<=RULE_STRING)||LA133_0==RULE_CAMELCASE_ID||LA133_0==18||LA133_0==22||(LA133_0>=26 && LA133_0<=29)||(LA133_0>=33 && LA133_0<=34)||(LA133_0>=37 && LA133_0<=38)||(LA133_0>=52 && LA133_0<=54)||(LA133_0>=108 && LA133_0<=109)||(LA133_0>=116 && LA133_0<=117)||(LA133_0>=119 && LA133_0<=130)||LA133_0==142||LA133_0==144||(LA133_0>=146 && LA133_0<=148)||(LA133_0>=150 && LA133_0<=158)||(LA133_0>=160 && LA133_0<=168)||(LA133_0>=175 && LA133_0<=177)) ) {s = 1;}

                        else if ( (LA133_0==31) ) {s = 2;}

                        else if ( (LA133_0==99) ) {s = 3;}

                        else if ( LA133_0 == 94 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 0) ) {s = 4;}

                        else if ( LA133_0 == 95 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 1) ) {s = 5;}

                        else if ( LA133_0 == 25 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 6;}

                        else if ( LA133_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 4) ) {s = 7;}

                        else if ( LA133_0 == 96 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 4) ) {s = 8;}

                        else if ( LA133_0 == 97 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 9;}

                        else if ( LA133_0 == 98 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 10;}

                        else if ( LA133_0 == 226 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 6) ) {s = 11;}

                        else if ( LA133_0 == 227 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 6) ) {s = 12;}

                        else if ( LA133_0 == RULE_INT && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 6) ) {s = 13;}

                         
                        input.seek(index133_0);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA133_91 = input.LA(1);

                         
                        int index133_91 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred225_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 93;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index133_91);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 133, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_113s = "\11\uffff";
    static final String dfa_114s = "\1\3\1\uffff\1\3\6\uffff";
    static final String dfa_115s = "\1\4\1\0\1\4\2\uffff\1\4\1\10\1\130\1\0";
    static final String dfa_116s = "\1\u00e9\1\0\1\u00e9\2\uffff\1\4\1\10\1\132\1\0";
    static final String dfa_117s = "\3\uffff\1\1\1\2\4\uffff";
    static final String dfa_118s = "\1\uffff\1\0\6\uffff\1\1}>";
    static final String[] dfa_119s = {
            "\1\2\1\3\1\uffff\1\4\1\1\2\uffff\1\3\6\uffff\1\3\3\uffff\1\3\2\uffff\5\3\1\uffff\1\3\1\uffff\2\3\1\uffff\3\3\7\uffff\1\3\5\uffff\3\3\42\uffff\1\3\4\uffff\6\3\10\uffff\2\3\6\uffff\2\3\1\uffff\14\3\13\uffff\1\3\1\uffff\1\3\1\uffff\3\3\1\uffff\11\3\1\uffff\11\3\6\uffff\3\3\60\uffff\2\3\5\uffff\1\3",
            "\1\uffff",
            "\2\3\2\uffff\1\3\2\uffff\1\3\6\uffff\1\3\3\uffff\1\3\2\uffff\5\3\1\uffff\1\3\1\uffff\2\3\1\uffff\3\3\7\uffff\1\3\5\uffff\3\3\41\uffff\1\6\1\3\1\5\3\uffff\6\3\10\uffff\2\3\6\uffff\2\3\1\uffff\14\3\13\uffff\1\3\1\uffff\1\3\1\uffff\3\3\1\uffff\11\3\1\uffff\11\3\6\uffff\3\3\60\uffff\2\3\5\uffff\1\3",
            "",
            "",
            "\1\7",
            "\1\10",
            "\1\6\1\uffff\1\5",
            "\1\uffff"
    };

    static final short[] dfa_113 = DFA.unpackEncodedString(dfa_113s);
    static final short[] dfa_114 = DFA.unpackEncodedString(dfa_114s);
    static final char[] dfa_115 = DFA.unpackEncodedStringToUnsignedChars(dfa_115s);
    static final char[] dfa_116 = DFA.unpackEncodedStringToUnsignedChars(dfa_116s);
    static final short[] dfa_117 = DFA.unpackEncodedString(dfa_117s);
    static final short[] dfa_118 = DFA.unpackEncodedString(dfa_118s);
    static final short[][] dfa_119 = unpackEncodedStringArray(dfa_119s);

    class DFA130 extends DFA {

        public DFA130(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 130;
            this.eot = dfa_113;
            this.eof = dfa_114;
            this.min = dfa_115;
            this.max = dfa_116;
            this.accept = dfa_117;
            this.special = dfa_118;
            this.transition = dfa_119;
        }
        public String getDescription() {
            return "5748:10: ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA130_1 = input.LA(1);

                         
                        int index130_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred226_InternalKim()) ) {s = 3;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index130_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA130_8 = input.LA(1);

                         
                        int index130_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred226_InternalKim()) ) {s = 3;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index130_8);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 130, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_120s = "\1\uffff\1\3\3\uffff\1\3";
    static final String dfa_121s = "\1\4\1\22\2\uffff\1\4\1\22";
    static final String dfa_122s = "\1\u00e3\1\132\2\uffff\1\4\1\132";
    static final String dfa_123s = "\2\uffff\1\2\1\1\2\uffff";
    static final String[] dfa_124s = {
            "\1\1\4\2\1\uffff\2\2\12\uffff\3\2\11\uffff\1\2\14\uffff\2\2\54\uffff\1\2\16\uffff\2\2\6\uffff\2\2\1\uffff\14\2\65\uffff\1\2\51\uffff\2\2",
            "\1\3\3\uffff\1\3\2\uffff\1\2\1\uffff\3\3\1\uffff\1\3\1\uffff\1\3\1\2\3\uffff\1\3\15\uffff\3\3\41\uffff\1\2\1\uffff\1\4",
            "",
            "",
            "\1\5",
            "\1\3\3\uffff\1\3\4\uffff\3\3\1\uffff\1\3\1\uffff\1\3\1\2\3\uffff\1\3\15\uffff\3\3\41\uffff\1\2\1\uffff\1\4"
    };
    static final short[] dfa_120 = DFA.unpackEncodedString(dfa_120s);
    static final char[] dfa_121 = DFA.unpackEncodedStringToUnsignedChars(dfa_121s);
    static final char[] dfa_122 = DFA.unpackEncodedStringToUnsignedChars(dfa_122s);
    static final short[] dfa_123 = DFA.unpackEncodedString(dfa_123s);
    static final short[][] dfa_124 = unpackEncodedStringArray(dfa_124s);

    class DFA135 extends DFA {

        public DFA135(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 135;
            this.eot = dfa_94;
            this.eof = dfa_120;
            this.min = dfa_121;
            this.max = dfa_122;
            this.accept = dfa_123;
            this.special = dfa_99;
            this.transition = dfa_124;
        }
        public String getDescription() {
            return "5966:2: ( ( ( (lv_modelReference_0_1= RULE_LOWERCASE_ID | lv_modelReference_0_2= rulePathName ) ) ) | ( (lv_observable_1_0= ruleObservableSemantics ) ) )";
        }
    }
    static final String dfa_125s = "\143\uffff";
    static final String dfa_126s = "\1\1\142\uffff";
    static final String dfa_127s = "\1\4\30\uffff\1\0\6\uffff\22\0\61\uffff";
    static final String dfa_128s = "\1\u00e3\30\uffff\1\0\6\uffff\22\0\61\uffff";
    static final String dfa_129s = "\1\uffff\1\2\140\uffff\1\1";
    static final String dfa_130s = "\31\uffff\1\0\6\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\61\uffff}>";
    static final String[] dfa_131s = {
            "\1\43\1\1\2\uffff\1\42\2\uffff\1\1\6\uffff\1\1\3\uffff\1\1\2\uffff\5\1\1\uffff\3\1\1\31\2\uffff\2\1\2\uffff\3\1\2\uffff\1\1\2\uffff\2\1\1\uffff\3\1\7\uffff\5\1\25\uffff\1\1\5\uffff\16\1\1\44\1\45\5\uffff\1\1\1\40\1\41\1\uffff\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\1\61\3\1\10\uffff\1\1\1\uffff\1\1\1\uffff\3\1\1\uffff\11\1\1\uffff\11\1\1\uffff\1\1\4\uffff\3\1\5\uffff\1\1\52\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_125 = DFA.unpackEncodedString(dfa_125s);
    static final short[] dfa_126 = DFA.unpackEncodedString(dfa_126s);
    static final char[] dfa_127 = DFA.unpackEncodedStringToUnsignedChars(dfa_127s);
    static final char[] dfa_128 = DFA.unpackEncodedStringToUnsignedChars(dfa_128s);
    static final short[] dfa_129 = DFA.unpackEncodedString(dfa_129s);
    static final short[] dfa_130 = DFA.unpackEncodedString(dfa_130s);
    static final short[][] dfa_131 = unpackEncodedStringArray(dfa_131s);

    class DFA137 extends DFA {

        public DFA137(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 137;
            this.eot = dfa_125;
            this.eof = dfa_126;
            this.min = dfa_127;
            this.max = dfa_128;
            this.accept = dfa_129;
            this.special = dfa_130;
            this.transition = dfa_131;
        }
        public String getDescription() {
            return "()+ loopback of 6070:3: ( (lv_main_1_0= ruleConcept ) )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA137_25 = input.LA(1);

                         
                        int index137_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred236_InternalKim()) ) {s = 98;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index137_25);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA137_32 = input.LA(1);

                         
                        int index137_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred236_InternalKim()) ) {s = 98;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index137_32);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA137_33 = input.LA(1);

                         
                        int index137_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred236_InternalKim()) ) {s = 98;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index137_33);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA137_34 = input.LA(1);

                         
                        int index137_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred236_InternalKim()) ) {s = 98;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index137_34);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA137_35 = input.LA(1);

                         
                        int index137_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred236_InternalKim()) ) {s = 98;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index137_35);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA137_36 = input.LA(1);

                         
                        int index137_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred236_InternalKim()) ) {s = 98;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index137_36);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA137_37 = input.LA(1);

                         
                        int index137_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred236_InternalKim()) ) {s = 98;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index137_37);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA137_38 = input.LA(1);

                         
                        int index137_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred236_InternalKim()) ) {s = 98;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index137_38);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA137_39 = input.LA(1);

                         
                        int index137_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred236_InternalKim()) ) {s = 98;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index137_39);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA137_40 = input.LA(1);

                         
                        int index137_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred236_InternalKim()) ) {s = 98;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index137_40);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA137_41 = input.LA(1);

                         
                        int index137_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred236_InternalKim()) ) {s = 98;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index137_41);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA137_42 = input.LA(1);

                         
                        int index137_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred236_InternalKim()) ) {s = 98;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index137_42);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA137_43 = input.LA(1);

                         
                        int index137_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred236_InternalKim()) ) {s = 98;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index137_43);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA137_44 = input.LA(1);

                         
                        int index137_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred236_InternalKim()) ) {s = 98;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index137_44);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA137_45 = input.LA(1);

                         
                        int index137_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred236_InternalKim()) ) {s = 98;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index137_45);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA137_46 = input.LA(1);

                         
                        int index137_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred236_InternalKim()) ) {s = 98;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index137_46);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA137_47 = input.LA(1);

                         
                        int index137_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred236_InternalKim()) ) {s = 98;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index137_47);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA137_48 = input.LA(1);

                         
                        int index137_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred236_InternalKim()) ) {s = 98;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index137_48);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA137_49 = input.LA(1);

                         
                        int index137_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred236_InternalKim()) ) {s = 98;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index137_49);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 137, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_132s = "\144\uffff";
    static final String dfa_133s = "\1\1\143\uffff";
    static final String dfa_134s = "\1\4\11\uffff\1\0\114\uffff\1\0\14\uffff";
    static final String dfa_135s = "\1\u00e3\11\uffff\1\0\114\uffff\1\0\14\uffff";
    static final String dfa_136s = "\1\uffff\1\11\132\uffff\1\1\1\4\1\5\1\6\1\7\1\10\1\3\1\2";
    static final String dfa_137s = "\1\0\11\uffff\1\1\114\uffff\1\2\14\uffff}>";
    static final String[] dfa_138s = {
            "\2\1\2\uffff\1\1\2\uffff\1\1\6\uffff\1\1\3\uffff\1\1\2\uffff\5\1\1\uffff\4\1\2\uffff\1\1\1\12\2\uffff\3\1\2\uffff\1\1\2\uffff\2\1\1\uffff\3\1\7\uffff\5\1\25\uffff\1\1\5\uffff\6\1\1\134\1\127\1\135\1\136\1\137\1\140\1\141\3\1\5\uffff\3\1\1\uffff\17\1\10\uffff\1\1\1\uffff\1\1\1\uffff\3\1\1\uffff\11\1\1\uffff\11\1\1\uffff\1\1\4\uffff\3\1\5\uffff\1\1\52\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_132 = DFA.unpackEncodedString(dfa_132s);
    static final short[] dfa_133 = DFA.unpackEncodedString(dfa_133s);
    static final char[] dfa_134 = DFA.unpackEncodedStringToUnsignedChars(dfa_134s);
    static final char[] dfa_135 = DFA.unpackEncodedStringToUnsignedChars(dfa_135s);
    static final short[] dfa_136 = DFA.unpackEncodedString(dfa_136s);
    static final short[] dfa_137 = DFA.unpackEncodedString(dfa_137s);
    static final short[][] dfa_138 = unpackEncodedStringArray(dfa_138s);

    class DFA138 extends DFA {

        public DFA138(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 138;
            this.eot = dfa_132;
            this.eof = dfa_133;
            this.min = dfa_134;
            this.max = dfa_135;
            this.accept = dfa_136;
            this.special = dfa_137;
            this.transition = dfa_138;
        }
        public String getDescription() {
            return "()* loopback of 6095:6: ( ({...}? => ( ({...}? => (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA138_0 = input.LA(1);

                         
                        int index138_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA138_0==EOF||(LA138_0>=RULE_LOWERCASE_ID && LA138_0<=RULE_STRING)||LA138_0==RULE_CAMELCASE_ID||LA138_0==RULE_INT||LA138_0==18||LA138_0==22||(LA138_0>=25 && LA138_0<=29)||(LA138_0>=31 && LA138_0<=34)||LA138_0==37||(LA138_0>=41 && LA138_0<=43)||LA138_0==46||(LA138_0>=49 && LA138_0<=50)||(LA138_0>=52 && LA138_0<=54)||(LA138_0>=62 && LA138_0<=66)||LA138_0==88||(LA138_0>=94 && LA138_0<=99)||(LA138_0>=107 && LA138_0<=109)||(LA138_0>=115 && LA138_0<=117)||(LA138_0>=119 && LA138_0<=133)||LA138_0==142||LA138_0==144||(LA138_0>=146 && LA138_0<=148)||(LA138_0>=150 && LA138_0<=158)||(LA138_0>=160 && LA138_0<=168)||LA138_0==170||(LA138_0>=175 && LA138_0<=177)||LA138_0==183||(LA138_0>=226 && LA138_0<=227)) ) {s = 1;}

                        else if ( (LA138_0==38) ) {s = 10;}

                        else if ( (LA138_0==101) ) {s = 87;}

                        else if ( LA138_0 == 100 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 0) ) {s = 92;}

                        else if ( LA138_0 == 102 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 3) ) {s = 93;}

                        else if ( LA138_0 == 103 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 4) ) {s = 94;}

                        else if ( LA138_0 == 104 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 5) ) {s = 95;}

                        else if ( LA138_0 == 105 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 6) ) {s = 96;}

                        else if ( LA138_0 == 106 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 7) ) {s = 97;}

                         
                        input.seek(index138_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA138_10 = input.LA(1);

                         
                        int index138_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred239_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 2) ) {s = 98;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index138_10);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA138_87 = input.LA(1);

                         
                        int index138_87 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred238_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 1) ) {s = 99;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index138_87);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 138, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_139s = "\26\uffff";
    static final String dfa_140s = "\1\1\25\uffff";
    static final String dfa_141s = "\1\4\1\uffff\23\0\1\uffff";
    static final String dfa_142s = "\1\u00e3\1\uffff\23\0\1\uffff";
    static final String dfa_143s = "\1\uffff\1\2\23\uffff\1\1";
    static final String dfa_144s = "\2\uffff\1\2\1\1\1\21\1\3\1\22\1\4\1\0\1\5\1\6\1\10\1\13\1\14\1\15\1\16\1\17\1\20\1\11\1\12\1\7\1\uffff}>";
    static final String[] dfa_145s = {
            "\1\6\1\1\2\uffff\1\5\2\uffff\1\1\6\uffff\1\1\3\uffff\1\1\2\uffff\5\1\1\uffff\3\1\1\2\2\uffff\2\1\2\uffff\3\1\2\uffff\1\1\2\uffff\2\1\1\uffff\3\1\7\uffff\5\1\12\uffff\2\1\2\uffff\3\1\1\uffff\1\1\2\uffff\1\1\5\uffff\16\1\1\7\1\10\5\uffff\1\1\1\3\1\4\1\uffff\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\3\1\10\uffff\1\1\1\uffff\1\1\1\uffff\3\1\1\uffff\11\1\1\uffff\11\1\1\uffff\1\1\4\uffff\3\1\5\uffff\1\1\52\uffff\2\1",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };

    static final short[] dfa_139 = DFA.unpackEncodedString(dfa_139s);
    static final short[] dfa_140 = DFA.unpackEncodedString(dfa_140s);
    static final char[] dfa_141 = DFA.unpackEncodedStringToUnsignedChars(dfa_141s);
    static final char[] dfa_142 = DFA.unpackEncodedStringToUnsignedChars(dfa_142s);
    static final short[] dfa_143 = DFA.unpackEncodedString(dfa_143s);
    static final short[] dfa_144 = DFA.unpackEncodedString(dfa_144s);
    static final short[][] dfa_145 = unpackEncodedStringArray(dfa_145s);

    class DFA167 extends DFA {

        public DFA167(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 167;
            this.eot = dfa_139;
            this.eof = dfa_140;
            this.min = dfa_141;
            this.max = dfa_142;
            this.accept = dfa_143;
            this.special = dfa_144;
            this.transition = dfa_145;
        }
        public String getDescription() {
            return "()+ loopback of 8144:3: ( (lv_main_1_0= ruleConcept ) )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA167_8 = input.LA(1);

                         
                        int index167_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred303_InternalKim()) ) {s = 21;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index167_8);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA167_3 = input.LA(1);

                         
                        int index167_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred303_InternalKim()) ) {s = 21;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index167_3);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA167_2 = input.LA(1);

                         
                        int index167_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred303_InternalKim()) ) {s = 21;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index167_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA167_5 = input.LA(1);

                         
                        int index167_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred303_InternalKim()) ) {s = 21;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index167_5);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA167_7 = input.LA(1);

                         
                        int index167_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred303_InternalKim()) ) {s = 21;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index167_7);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA167_9 = input.LA(1);

                         
                        int index167_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred303_InternalKim()) ) {s = 21;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index167_9);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA167_10 = input.LA(1);

                         
                        int index167_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred303_InternalKim()) ) {s = 21;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index167_10);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA167_20 = input.LA(1);

                         
                        int index167_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred303_InternalKim()) ) {s = 21;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index167_20);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA167_11 = input.LA(1);

                         
                        int index167_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred303_InternalKim()) ) {s = 21;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index167_11);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA167_18 = input.LA(1);

                         
                        int index167_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred303_InternalKim()) ) {s = 21;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index167_18);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA167_19 = input.LA(1);

                         
                        int index167_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred303_InternalKim()) ) {s = 21;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index167_19);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA167_12 = input.LA(1);

                         
                        int index167_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred303_InternalKim()) ) {s = 21;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index167_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA167_13 = input.LA(1);

                         
                        int index167_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred303_InternalKim()) ) {s = 21;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index167_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA167_14 = input.LA(1);

                         
                        int index167_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred303_InternalKim()) ) {s = 21;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index167_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA167_15 = input.LA(1);

                         
                        int index167_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred303_InternalKim()) ) {s = 21;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index167_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA167_16 = input.LA(1);

                         
                        int index167_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred303_InternalKim()) ) {s = 21;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index167_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA167_17 = input.LA(1);

                         
                        int index167_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred303_InternalKim()) ) {s = 21;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index167_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA167_4 = input.LA(1);

                         
                        int index167_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred303_InternalKim()) ) {s = 21;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index167_4);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA167_6 = input.LA(1);

                         
                        int index167_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred303_InternalKim()) ) {s = 21;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index167_6);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 167, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_146s = "\1\4\1\130\2\4\1\130\2\uffff";
    static final String dfa_147s = "\1\4\1\132\1\4\1\11\1\132\2\uffff";
    static final String dfa_148s = "\5\uffff\1\1\1\2";
    static final String[] dfa_149s = {
            "\1\1",
            "\1\3\1\uffff\1\2",
            "\1\4",
            "\1\6\3\uffff\1\5\1\6",
            "\1\3\1\uffff\1\2",
            "",
            ""
    };
    static final char[] dfa_146 = DFA.unpackEncodedStringToUnsignedChars(dfa_146s);
    static final char[] dfa_147 = DFA.unpackEncodedStringToUnsignedChars(dfa_147s);
    static final short[] dfa_148 = DFA.unpackEncodedString(dfa_148s);
    static final short[][] dfa_149 = unpackEncodedStringArray(dfa_149s);

    class DFA172 extends DFA {

        public DFA172(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 172;
            this.eot = dfa_70;
            this.eof = dfa_70;
            this.min = dfa_146;
            this.max = dfa_147;
            this.accept = dfa_148;
            this.special = dfa_74;
            this.transition = dfa_149;
        }
        public String getDescription() {
            return "8305:7: (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId )";
        }
    }
    static final String dfa_150s = "\5\uffff\1\2\1\1";
    static final short[] dfa_150 = DFA.unpackEncodedString(dfa_150s);

    class DFA173 extends DFA {

        public DFA173(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 173;
            this.eot = dfa_70;
            this.eof = dfa_70;
            this.min = dfa_146;
            this.max = dfa_147;
            this.accept = dfa_150;
            this.special = dfa_74;
            this.transition = dfa_149;
        }
        public String getDescription() {
            return "8368:7: (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId )";
        }
    }
    static final String dfa_151s = "\1\117\11\uffff";
    static final String dfa_152s = "\1\u00db\11\uffff";
    static final String dfa_153s = "\1\uffff\1\5\1\1\1\2\1\3\5\4";
    static final String dfa_154s = "\1\0\11\uffff}>";
    static final String[] dfa_155s = {
            "\1\1\66\uffff\1\5\1\6\1\7\2\1\1\2\1\3\1\4\21\uffff\1\1\13\uffff\4\1\15\uffff\36\1\1\10\1\11",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_151 = DFA.unpackEncodedStringToUnsignedChars(dfa_151s);
    static final char[] dfa_152 = DFA.unpackEncodedStringToUnsignedChars(dfa_152s);
    static final short[] dfa_153 = DFA.unpackEncodedString(dfa_153s);
    static final short[] dfa_154 = DFA.unpackEncodedString(dfa_154s);
    static final short[][] dfa_155 = unpackEncodedStringArray(dfa_155s);

    class DFA179 extends DFA {

        public DFA179(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 179;
            this.eot = dfa_36;
            this.eof = dfa_36;
            this.min = dfa_151;
            this.max = dfa_152;
            this.accept = dfa_153;
            this.special = dfa_154;
            this.transition = dfa_155;
        }
        public String getDescription() {
            return "()* loopback of 8459:6: ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA179_0 = input.LA(1);

                         
                        int index179_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA179_0==79||(LA179_0>=137 && LA179_0<=138)||LA179_0==159||(LA179_0>=171 && LA179_0<=174)||(LA179_0>=188 && LA179_0<=217)) ) {s = 1;}

                        else if ( LA179_0 == 139 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 0) ) {s = 2;}

                        else if ( LA179_0 == 140 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 1) ) {s = 3;}

                        else if ( LA179_0 == 141 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 2) ) {s = 4;}

                        else if ( LA179_0 == 134 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3) ) {s = 5;}

                        else if ( LA179_0 == 135 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3) ) {s = 6;}

                        else if ( LA179_0 == 136 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3) ) {s = 7;}

                        else if ( LA179_0 == 218 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3) ) {s = 8;}

                        else if ( LA179_0 == 219 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3) ) {s = 9;}

                         
                        input.seek(index179_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 179, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_156s = "\102\uffff";
    static final String dfa_157s = "\1\1\101\uffff";
    static final String dfa_158s = "\1\5\17\uffff\1\4\61\uffff";
    static final String dfa_159s = "\1\u00b1\17\uffff\1\u00e8\61\uffff";
    static final String dfa_160s = "\1\uffff\1\30\1\1\2\2\2\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\uffff\1\16\3\17\1\20\1\21\1\22\1\23\1\24\3\26\1\27\2\25\1\15\41\26";
    static final String dfa_161s = "\1\1\17\uffff\1\0\61\uffff}>";
    static final String[] dfa_162s = {
            "\1\2\14\uffff\1\1\22\uffff\1\1\1\35\74\uffff\1\1\52\uffff\1\3\1\uffff\1\4\1\uffff\1\5\1\6\1\7\1\uffff\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\uffff\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\6\uffff\1\32\1\33\1\34",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\50\1\45\2\uffff\1\47\2\uffff\1\77\13\uffff\1\100\1\101\11\uffff\1\67\45\uffff\1\70\1\73\7\uffff\1\36\32\uffff\1\51\1\52\6\uffff\1\46\1\42\1\uffff\1\53\1\54\1\55\1\56\1\57\1\60\1\61\1\62\1\63\1\64\1\65\1\66\34\uffff\1\40\11\uffff\1\37\10\uffff\1\41\1\43\1\44\55\uffff\1\75\1\76\2\uffff\1\71\1\72\1\74",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_156 = DFA.unpackEncodedString(dfa_156s);
    static final short[] dfa_157 = DFA.unpackEncodedString(dfa_157s);
    static final char[] dfa_158 = DFA.unpackEncodedStringToUnsignedChars(dfa_158s);
    static final char[] dfa_159 = DFA.unpackEncodedStringToUnsignedChars(dfa_159s);
    static final short[] dfa_160 = DFA.unpackEncodedString(dfa_160s);
    static final short[] dfa_161 = DFA.unpackEncodedString(dfa_161s);
    static final short[][] dfa_162 = unpackEncodedStringArray(dfa_162s);

    class DFA214 extends DFA {

        public DFA214(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 214;
            this.eot = dfa_156;
            this.eof = dfa_157;
            this.min = dfa_158;
            this.max = dfa_159;
            this.accept = dfa_160;
            this.special = dfa_161;
            this.transition = dfa_162;
        }
        public String getDescription() {
            return "()* loopback of 8902:6: ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ ) ) | ({...}? => ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA214_16 = input.LA(1);

                         
                        int index214_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA214_16 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 20) ) {s = 30;}

                        else if ( LA214_16 == 169 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 20) ) {s = 31;}

                        else if ( LA214_16 == 159 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 12) ) {s = 32;}

                        else if ( LA214_16 == 178 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 33;}

                        else if ( LA214_16 == 117 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 34;}

                        else if ( LA214_16 == 179 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 35;}

                        else if ( LA214_16 == 180 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 36;}

                        else if ( LA214_16 == RULE_STRING && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 37;}

                        else if ( LA214_16 == 116 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 38;}

                        else if ( LA214_16 == RULE_CAMELCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 39;}

                        else if ( LA214_16 == RULE_LOWERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 40;}

                        else if ( LA214_16 == 108 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 41;}

                        else if ( LA214_16 == 109 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 42;}

                        else if ( LA214_16 == 119 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 43;}

                        else if ( LA214_16 == 120 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 44;}

                        else if ( LA214_16 == 121 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 45;}

                        else if ( LA214_16 == 122 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 46;}

                        else if ( LA214_16 == 123 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 47;}

                        else if ( LA214_16 == 124 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 48;}

                        else if ( LA214_16 == 125 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 49;}

                        else if ( LA214_16 == 126 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 50;}

                        else if ( LA214_16 == 127 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 51;}

                        else if ( LA214_16 == 128 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 52;}

                        else if ( LA214_16 == 129 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 53;}

                        else if ( LA214_16 == 130 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 54;}

                        else if ( LA214_16 == 34 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 55;}

                        else if ( LA214_16 == 72 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 56;}

                        else if ( LA214_16 == 230 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 57;}

                        else if ( LA214_16 == 231 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 58;}

                        else if ( LA214_16 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 59;}

                        else if ( LA214_16 == 232 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 60;}

                        else if ( LA214_16 == 226 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 61;}

                        else if ( LA214_16 == 227 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 62;}

                        else if ( LA214_16 == RULE_INT && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 63;}

                        else if ( LA214_16 == 23 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 64;}

                        else if ( LA214_16 == 24 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 65;}

                         
                        input.seek(index214_16);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA214_0 = input.LA(1);

                         
                        int index214_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA214_0==EOF||LA214_0==18||LA214_0==37||LA214_0==99) ) {s = 1;}

                        else if ( LA214_0 == RULE_STRING && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 0) ) {s = 2;}

                        else if ( LA214_0 == 142 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 1) ) {s = 3;}

                        else if ( LA214_0 == 144 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 1) ) {s = 4;}

                        else if ( LA214_0 == 146 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 2) ) {s = 5;}

                        else if ( LA214_0 == 147 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 2) ) {s = 6;}

                        else if ( LA214_0 == 148 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 3) ) {s = 7;}

                        else if ( LA214_0 == 150 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 4) ) {s = 8;}

                        else if ( LA214_0 == 151 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 5) ) {s = 9;}

                        else if ( LA214_0 == 152 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 6) ) {s = 10;}

                        else if ( LA214_0 == 153 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 7) ) {s = 11;}

                        else if ( LA214_0 == 154 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 8) ) {s = 12;}

                        else if ( LA214_0 == 155 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 9) ) {s = 13;}

                        else if ( LA214_0 == 156 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 10) ) {s = 14;}

                        else if ( LA214_0 == 157 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 11) ) {s = 15;}

                        else if ( (LA214_0==158) ) {s = 16;}

                        else if ( LA214_0 == 160 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 13) ) {s = 17;}

                        else if ( LA214_0 == 161 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 14) ) {s = 18;}

                        else if ( LA214_0 == 162 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 14) ) {s = 19;}

                        else if ( LA214_0 == 163 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 14) ) {s = 20;}

                        else if ( LA214_0 == 164 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 15) ) {s = 21;}

                        else if ( LA214_0 == 165 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 16) ) {s = 22;}

                        else if ( LA214_0 == 166 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 17) ) {s = 23;}

                        else if ( LA214_0 == 167 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 18) ) {s = 24;}

                        else if ( LA214_0 == 168 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 19) ) {s = 25;}

                        else if ( LA214_0 == 175 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 26;}

                        else if ( LA214_0 == 176 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 27;}

                        else if ( LA214_0 == 177 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 28;}

                        else if ( LA214_0 == 38 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 29;}

                         
                        input.seek(index214_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 214, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_163s = "\1\u009e\1\4\1\uffff\2\13\1\40\1\4\2\40\1\uffff\4\13\1\4\1\40\2\13\1\40\2\13\1\40\1\uffff\1\130\3\13\2\4\1\40\2\13\1\40\1\130";
    static final String dfa_164s = "\1\u00b1\1\u00e8\1\uffff\2\13\1\u00e5\1\u0082\2\145\1\uffff\1\13\3\u00e3\1\10\1\u00e5\2\13\1\145\2\13\1\u00e5\1\uffff\1\132\1\13\2\u00e3\1\4\1\11\1\u00e5\2\13\1\145\1\132";
    static final String dfa_165s = "\2\uffff\1\1\6\uffff\1\2\14\uffff\1\3\13\uffff";
    static final String dfa_166s = "\42\uffff}>";
    static final String[] dfa_167s = {
            "\1\2\20\uffff\1\1\2\2",
            "\1\2\1\6\2\uffff\1\2\2\uffff\1\5\13\uffff\1\7\1\10\11\uffff\1\2\45\uffff\2\2\42\uffff\2\2\6\uffff\2\2\1\uffff\14\2\22\uffff\1\11\34\uffff\3\2\55\uffff\1\3\1\4\2\uffff\3\2",
            "",
            "\1\5",
            "\1\5",
            "\1\15\71\uffff\1\12\12\uffff\1\16\176\uffff\1\13\1\14",
            "\1\2\3\uffff\1\2\27\uffff\1\2\1\uffff\1\2\102\uffff\1\16\6\uffff\2\2\6\uffff\2\2\1\uffff\14\2",
            "\1\2\104\uffff\1\16",
            "\1\2\104\uffff\1\16",
            "",
            "\1\17",
            "\1\22\u00d6\uffff\1\20\1\21",
            "\1\22\u00d6\uffff\1\20\1\21",
            "\1\25\u00d6\uffff\1\23\1\24",
            "\1\27\3\uffff\1\26",
            "\1\15\104\uffff\1\16\176\uffff\1\13\1\14",
            "\1\22",
            "\1\22",
            "\1\15\104\uffff\1\16",
            "\1\25",
            "\1\25",
            "\1\2\71\uffff\1\30\12\uffff\1\16\176\uffff\1\31\1\32",
            "",
            "\1\34\1\uffff\1\33",
            "\1\35",
            "\1\40\u00d6\uffff\1\36\1\37",
            "\1\40\u00d6\uffff\1\36\1\37",
            "\1\41",
            "\1\2\3\uffff\1\26\1\2",
            "\1\2\104\uffff\1\16\176\uffff\1\31\1\32",
            "\1\40",
            "\1\40",
            "\1\2\104\uffff\1\16",
            "\1\34\1\uffff\1\33"
    };
    static final char[] dfa_163 = DFA.unpackEncodedStringToUnsignedChars(dfa_163s);
    static final char[] dfa_164 = DFA.unpackEncodedStringToUnsignedChars(dfa_164s);
    static final short[] dfa_165 = DFA.unpackEncodedString(dfa_165s);
    static final short[] dfa_166 = DFA.unpackEncodedString(dfa_166s);
    static final short[][] dfa_167 = unpackEncodedStringArray(dfa_167s);

    class DFA228 extends DFA {

        public DFA228(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 228;
            this.eot = dfa_50;
            this.eof = dfa_50;
            this.min = dfa_163;
            this.max = dfa_164;
            this.accept = dfa_165;
            this.special = dfa_166;
            this.transition = dfa_167;
        }
        public String getDescription() {
            return "10730:2: ( ( ( ( (lv_relType_0_1= 'uses' | lv_relType_0_2= 'has' | lv_relType_0_3= 'contains' | lv_relType_0_4= 'implies' ) ) ) ( (lv_definitions_1_0= ruleRestrictionDefinition ) ) (otherlv_2= ',' ( (lv_definitions_3_0= ruleRestrictionDefinition ) ) )* ) | (otherlv_4= 'uses' otherlv_5= 'authority' ( ( (lv_authorities_6_1= RULE_UPPERCASE_ID | lv_authorities_6_2= RULE_UPPERCASE_PATH ) ) ) ( ( ( ',' )=>otherlv_7= ',' ) ( ( (lv_authorities_8_1= RULE_UPPERCASE_ID | lv_authorities_8_2= RULE_UPPERCASE_PATH ) ) ) )* ) | (otherlv_9= 'uses' ( (lv_value_10_0= ruleLiteral ) ) ( (lv_literal_11_0= 'for' ) ) ( ( (lv_subject_12_1= RULE_CAMELCASE_ID | lv_subject_12_2= ruleNamespaceId ) ) ) ) )";
        }
    }
    static final String dfa_168s = "\23\uffff";
    static final String dfa_169s = "\3\uffff\1\11\7\uffff\1\11\2\uffff\1\11\4\uffff";
    static final String dfa_170s = "\1\5\2\13\1\26\2\uffff\3\13\1\uffff\1\13\1\26\2\13\1\26\2\13\1\0\1\uffff";
    static final String dfa_171s = "\1\u00e3\2\13\1\u00e5\2\uffff\1\13\2\u00e3\1\uffff\1\u00e3\1\u00e5\2\13\1\163\2\13\1\0\1\uffff";
    static final String dfa_172s = "\4\uffff\1\3\1\4\3\uffff\1\2\10\uffff\1\1";
    static final String dfa_173s = "\21\uffff\1\0\1\uffff}>";
    static final String[] dfa_174s = {
            "\1\4\5\uffff\1\3\13\uffff\2\5\u00c9\uffff\1\1\1\2",
            "\1\3",
            "\1\3",
            "\1\11\11\uffff\1\12\4\uffff\1\11\64\uffff\1\6\12\uffff\1\11\15\uffff\1\11\160\uffff\1\7\1\10",
            "",
            "",
            "\1\13",
            "\1\16\u00d6\uffff\1\14\1\15",
            "\1\16\u00d6\uffff\1\14\1\15",
            "",
            "\1\21\u00d6\uffff\1\17\1\20",
            "\1\11\11\uffff\1\12\4\uffff\1\11\77\uffff\1\11\15\uffff\1\11\160\uffff\1\7\1\10",
            "\1\16",
            "\1\16",
            "\1\11\11\uffff\1\12\4\uffff\1\11\77\uffff\1\11\15\uffff\1\11",
            "\1\21",
            "\1\21",
            "\1\uffff",
            ""
    };

    static final short[] dfa_168 = DFA.unpackEncodedString(dfa_168s);
    static final short[] dfa_169 = DFA.unpackEncodedString(dfa_169s);
    static final char[] dfa_170 = DFA.unpackEncodedStringToUnsignedChars(dfa_170s);
    static final char[] dfa_171 = DFA.unpackEncodedStringToUnsignedChars(dfa_171s);
    static final short[] dfa_172 = DFA.unpackEncodedString(dfa_172s);
    static final short[] dfa_173 = DFA.unpackEncodedString(dfa_173s);
    static final short[][] dfa_174 = unpackEncodedStringArray(dfa_174s);

    class DFA241 extends DFA {

        public DFA241(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 241;
            this.eot = dfa_168;
            this.eof = dfa_169;
            this.min = dfa_170;
            this.max = dfa_171;
            this.accept = dfa_172;
            this.special = dfa_173;
            this.transition = dfa_174;
        }
        public String getDescription() {
            return "11431:2: ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA241_17 = input.LA(1);

                         
                        int index241_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred418_InternalKim()) ) {s = 18;}

                        else if ( (synpred419_InternalKim()) ) {s = 9;}

                         
                        input.seek(index241_17);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 241, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_175s = "\21\uffff";
    static final String dfa_176s = "\3\uffff\1\13\11\uffff\1\13\2\uffff\1\13";
    static final String dfa_177s = "\1\5\2\13\1\4\4\uffff\3\13\2\uffff\1\4\2\13\1\4";
    static final String dfa_178s = "\1\u00e3\2\13\1\u00e5\4\uffff\1\13\2\u00e3\2\uffff\1\u00e5\2\13\1\u00e3";
    static final String dfa_179s = "\4\uffff\1\3\1\4\1\5\1\6\3\uffff\1\2\1\1\4\uffff";
    static final String dfa_180s = "\21\uffff}>";
    static final String[] dfa_181s = {
            "\1\4\4\uffff\1\6\1\3\12\uffff\1\7\2\5\u00c9\uffff\1\1\1\2",
            "\1\3",
            "\1\3",
            "\5\13\1\uffff\2\13\6\uffff\1\13\3\uffff\4\13\6\uffff\1\14\1\uffff\1\13\2\uffff\2\13\3\uffff\2\13\3\uffff\2\13\3\uffff\3\13\43\uffff\1\10\21\uffff\2\13\6\uffff\2\13\1\uffff\14\13\65\uffff\1\13\51\uffff\2\13\1\11\1\12",
            "",
            "",
            "",
            "",
            "\1\15",
            "\1\20\u00d6\uffff\1\16\1\17",
            "\1\20\u00d6\uffff\1\16\1\17",
            "",
            "",
            "\5\13\1\uffff\2\13\6\uffff\1\13\3\uffff\4\13\6\uffff\1\14\1\uffff\1\13\2\uffff\2\13\3\uffff\2\13\3\uffff\2\13\3\uffff\3\13\65\uffff\2\13\6\uffff\2\13\1\uffff\14\13\65\uffff\1\13\51\uffff\2\13\1\11\1\12",
            "\1\20",
            "\1\20",
            "\5\13\1\uffff\2\13\6\uffff\1\13\3\uffff\4\13\6\uffff\1\14\1\uffff\1\13\2\uffff\2\13\3\uffff\2\13\3\uffff\2\13\3\uffff\3\13\65\uffff\2\13\6\uffff\2\13\1\uffff\14\13\65\uffff\1\13\51\uffff\2\13"
    };

    static final short[] dfa_175 = DFA.unpackEncodedString(dfa_175s);
    static final short[] dfa_176 = DFA.unpackEncodedString(dfa_176s);
    static final char[] dfa_177 = DFA.unpackEncodedStringToUnsignedChars(dfa_177s);
    static final char[] dfa_178 = DFA.unpackEncodedStringToUnsignedChars(dfa_178s);
    static final short[] dfa_179 = DFA.unpackEncodedString(dfa_179s);
    static final short[] dfa_180 = DFA.unpackEncodedString(dfa_180s);
    static final short[][] dfa_181 = unpackEncodedStringArray(dfa_181s);

    class DFA245 extends DFA {

        public DFA245(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 245;
            this.eot = dfa_175;
            this.eof = dfa_176;
            this.min = dfa_177;
            this.max = dfa_178;
            this.accept = dfa_179;
            this.special = dfa_180;
            this.transition = dfa_181;
        }
        public String getDescription() {
            return "11672:2: ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) | ( (lv_id_6_0= RULE_ID ) ) | ( (lv_comma_7_0= ',' ) ) )";
        }
    }
    static final String dfa_182s = "\1\uffff\1\2\4\uffff";
    static final String dfa_183s = "\1\u00e3\1\u00bb\1\uffff\1\4\1\uffff\1\u00bb";
    static final String[] dfa_184s = {
            "\1\1\4\2\1\uffff\2\2\12\uffff\3\2\11\uffff\1\2\14\uffff\2\2\u0087\uffff\1\2\51\uffff\2\2",
            "\1\2\2\uffff\1\2\64\uffff\1\3\137\uffff\2\4",
            "",
            "\1\5",
            "",
            "\1\2\67\uffff\1\3\137\uffff\2\4"
    };
    static final short[] dfa_182 = DFA.unpackEncodedString(dfa_182s);
    static final char[] dfa_183 = DFA.unpackEncodedStringToUnsignedChars(dfa_183s);
    static final short[][] dfa_184 = unpackEncodedStringArray(dfa_184s);

    class DFA257 extends DFA {

        public DFA257(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 257;
            this.eot = dfa_94;
            this.eof = dfa_182;
            this.min = dfa_96;
            this.max = dfa_183;
            this.accept = dfa_98;
            this.special = dfa_99;
            this.transition = dfa_184;
        }
        public String getDescription() {
            return "12428:2: ( ( ( (lv_pairs_0_0= ruleKeyValuePair ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_pairs_2_0= ruleKeyValuePair ) ) )* ) | ( (lv_singleValue_3_0= ruleValue ) ) )";
        }
    }
    static final String dfa_185s = "\41\uffff";
    static final String dfa_186s = "\1\4\1\0\2\uffff\2\0\16\uffff\1\0\14\uffff";
    static final String dfa_187s = "\1\u00e3\1\0\2\uffff\2\0\16\uffff\1\0\14\uffff";
    static final String dfa_188s = "\2\uffff\1\1\22\uffff\1\3\4\uffff\1\4\1\5\1\7\1\10\1\11\1\2\1\6";
    static final String dfa_189s = "\1\uffff\1\0\2\uffff\1\1\1\2\16\uffff\1\3\14\uffff}>";
    static final String[] dfa_190s = {
            "\1\5\1\1\1\32\1\33\1\4\2\uffff\1\25\13\uffff\2\25\11\uffff\1\24\14\uffff\1\36\1\34\73\uffff\2\2\6\uffff\2\2\1\uffff\14\2\65\uffff\1\35\51\uffff\2\25",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_185 = DFA.unpackEncodedString(dfa_185s);
    static final char[] dfa_186 = DFA.unpackEncodedStringToUnsignedChars(dfa_186s);
    static final char[] dfa_187 = DFA.unpackEncodedStringToUnsignedChars(dfa_187s);
    static final short[] dfa_188 = DFA.unpackEncodedString(dfa_188s);
    static final short[] dfa_189 = DFA.unpackEncodedString(dfa_189s);
    static final short[][] dfa_190 = unpackEncodedStringArray(dfa_190s);

    class DFA259 extends DFA {

        public DFA259(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 259;
            this.eot = dfa_185;
            this.eof = dfa_185;
            this.min = dfa_186;
            this.max = dfa_187;
            this.accept = dfa_188;
            this.special = dfa_189;
            this.transition = dfa_190;
        }
        public String getDescription() {
            return "12516:2: ( ( (lv_concept_0_0= ruleConceptDeclaration ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( (lv_literal_2_0= ruleLiteral ) ) | ( (lv_expr_3_0= RULE_EXPR ) ) | ( ( (lv_id_4_1= RULE_LOWERCASE_ID | lv_id_4_2= RULE_UPPERCASE_ID | lv_id_4_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_5_0= ruleList ) ) | ( (lv_table_6_0= ruleLookupTable ) ) | ( (lv_map_7_0= ruleMap ) ) | ( (lv_null_8_0= 'unknown' ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA259_1 = input.LA(1);

                         
                        int index259_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred453_InternalKim()) ) {s = 2;}

                        else if ( (synpred455_InternalKim()) ) {s = 21;}

                         
                        input.seek(index259_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA259_4 = input.LA(1);

                         
                        int index259_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred453_InternalKim()) ) {s = 2;}

                        else if ( (synpred459_InternalKim()) ) {s = 27;}

                         
                        input.seek(index259_4);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA259_5 = input.LA(1);

                         
                        int index259_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred453_InternalKim()) ) {s = 2;}

                        else if ( (synpred454_InternalKim()) ) {s = 31;}

                        else if ( (synpred459_InternalKim()) ) {s = 27;}

                         
                        input.seek(index259_5);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA259_20 = input.LA(1);

                         
                        int index259_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred453_InternalKim()) ) {s = 2;}

                        else if ( (synpred460_InternalKim()) ) {s = 32;}

                         
                        input.seek(index259_20);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 259, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_191s = "\22\uffff";
    static final String dfa_192s = "\1\4\10\uffff\1\0\10\uffff";
    static final String dfa_193s = "\1\u00e3\10\uffff\1\0\10\uffff";
    static final String dfa_194s = "\1\uffff\1\1\10\uffff\1\3\1\4\1\uffff\1\5\1\6\1\7\1\10\1\2";
    static final String dfa_195s = "\11\uffff\1\0\10\uffff}>";
    static final String[] dfa_196s = {
            "\1\11\1\1\1\12\2\13\1\uffff\2\1\12\uffff\3\1\11\uffff\1\15\14\uffff\1\20\1\16\u0087\uffff\1\17\51\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_191 = DFA.unpackEncodedString(dfa_191s);
    static final char[] dfa_192 = DFA.unpackEncodedStringToUnsignedChars(dfa_192s);
    static final char[] dfa_193 = DFA.unpackEncodedStringToUnsignedChars(dfa_193s);
    static final short[] dfa_194 = DFA.unpackEncodedString(dfa_194s);
    static final short[] dfa_195 = DFA.unpackEncodedString(dfa_195s);
    static final short[][] dfa_196 = unpackEncodedStringArray(dfa_196s);

    class DFA261 extends DFA {

        public DFA261(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 261;
            this.eot = dfa_191;
            this.eof = dfa_191;
            this.min = dfa_192;
            this.max = dfa_193;
            this.accept = dfa_194;
            this.special = dfa_195;
            this.transition = dfa_196;
        }
        public String getDescription() {
            return "12739:2: ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( (lv_expr_2_0= RULE_EXPR ) ) | ( ( (lv_id_3_1= RULE_LOWERCASE_ID | lv_id_3_2= RULE_UPPERCASE_ID | lv_id_3_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_4_0= ruleList ) ) | ( (lv_table_5_0= ruleLookupTable ) ) | ( (lv_map_6_0= ruleMap ) ) | ( (lv_null_7_0= 'unknown' ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA261_9 = input.LA(1);

                         
                        int index261_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred464_InternalKim()) ) {s = 17;}

                        else if ( (synpred468_InternalKim()) ) {s = 11;}

                         
                        input.seek(index261_9);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 261, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_197s = "\13\uffff";
    static final String dfa_198s = "\1\1\12\uffff";
    static final String dfa_199s = "\1\13\12\uffff";
    static final String dfa_200s = "\1\u00e3\12\uffff";
    static final String dfa_201s = "\1\uffff\1\7\1\1\1\2\1\3\2\4\3\5\1\6";
    static final String dfa_202s = "\1\0\12\uffff}>";
    static final String[] dfa_203s = {
            "\1\11\15\uffff\1\1\5\uffff\1\4\16\uffff\1\5\57\uffff\1\2\1\3\1\6\2\uffff\1\12\176\uffff\1\7\1\10",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_197 = DFA.unpackEncodedString(dfa_197s);
    static final short[] dfa_198 = DFA.unpackEncodedString(dfa_198s);
    static final char[] dfa_199 = DFA.unpackEncodedStringToUnsignedChars(dfa_199s);
    static final char[] dfa_200 = DFA.unpackEncodedStringToUnsignedChars(dfa_200s);
    static final short[] dfa_201 = DFA.unpackEncodedString(dfa_201s);
    static final short[] dfa_202 = DFA.unpackEncodedString(dfa_202s);
    static final short[][] dfa_203 = unpackEncodedStringArray(dfa_203s);

    class DFA272 extends DFA {

        public DFA272(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 272;
            this.eot = dfa_197;
            this.eof = dfa_198;
            this.min = dfa_199;
            this.max = dfa_200;
            this.accept = dfa_201;
            this.special = dfa_202;
            this.transition = dfa_203;
        }
        public String getDescription() {
            return "()* loopback of 13464:6: ( ({...}? => ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA272_0 = input.LA(1);

                         
                        int index272_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA272_0==EOF||LA272_0==25) ) {s = 1;}

                        else if ( LA272_0 == 94 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 0) ) {s = 2;}

                        else if ( LA272_0 == 95 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 1) ) {s = 3;}

                        else if ( LA272_0 == 31 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 2) ) {s = 4;}

                        else if ( LA272_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 3) ) {s = 5;}

                        else if ( LA272_0 == 96 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 3) ) {s = 6;}

                        else if ( LA272_0 == 226 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 4) ) {s = 7;}

                        else if ( LA272_0 == 227 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 4) ) {s = 8;}

                        else if ( LA272_0 == RULE_INT && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 4) ) {s = 9;}

                        else if ( LA272_0 == 99 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 5) ) {s = 10;}

                         
                        input.seek(index272_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 272, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_204s = "\114\uffff";
    static final String dfa_205s = "\1\7\113\uffff";
    static final String dfa_206s = "\1\4\6\0\105\uffff";
    static final String dfa_207s = "\1\u00e9\6\0\105\uffff";
    static final String dfa_208s = "\7\uffff\1\2\103\uffff\1\1";
    static final String dfa_209s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\105\uffff}>";
    static final String[] dfa_210s = {
            "\1\2\1\7\2\uffff\1\1\2\uffff\1\5\6\uffff\1\7\3\uffff\1\7\2\uffff\5\7\1\uffff\1\7\1\uffff\1\7\1\6\1\uffff\3\7\7\uffff\1\7\5\uffff\3\7\42\uffff\1\7\4\uffff\6\7\10\uffff\2\7\6\uffff\2\7\1\uffff\14\7\13\uffff\1\7\1\uffff\1\7\1\uffff\3\7\1\uffff\11\7\1\uffff\11\7\6\uffff\3\7\60\uffff\1\3\1\4\5\uffff\1\7",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_204 = DFA.unpackEncodedString(dfa_204s);
    static final short[] dfa_205 = DFA.unpackEncodedString(dfa_205s);
    static final char[] dfa_206 = DFA.unpackEncodedStringToUnsignedChars(dfa_206s);
    static final char[] dfa_207 = DFA.unpackEncodedStringToUnsignedChars(dfa_207s);
    static final short[] dfa_208 = DFA.unpackEncodedString(dfa_208s);
    static final short[] dfa_209 = DFA.unpackEncodedString(dfa_209s);
    static final short[][] dfa_210 = unpackEncodedStringArray(dfa_210s);

    class DFA277 extends DFA {

        public DFA277(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 277;
            this.eot = dfa_204;
            this.eof = dfa_205;
            this.min = dfa_206;
            this.max = dfa_207;
            this.accept = dfa_208;
            this.special = dfa_209;
            this.transition = dfa_210;
        }
        public String getDescription() {
            return "14073:3: ( (lv_root_1_0= ruleUnitElement ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA277_1 = input.LA(1);

                         
                        int index277_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred528_InternalKim()) ) {s = 75;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index277_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA277_2 = input.LA(1);

                         
                        int index277_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred528_InternalKim()) ) {s = 75;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index277_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA277_3 = input.LA(1);

                         
                        int index277_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred528_InternalKim()) ) {s = 75;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index277_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA277_4 = input.LA(1);

                         
                        int index277_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred528_InternalKim()) ) {s = 75;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index277_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA277_5 = input.LA(1);

                         
                        int index277_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred528_InternalKim()) ) {s = 75;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index277_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA277_6 = input.LA(1);

                         
                        int index277_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred528_InternalKim()) ) {s = 75;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index277_6);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 277, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_211s = "\1\4\1\uffff\1\26\1\4\1\0\3\uffff\2\4\1\uffff\1\26\1\4\1\42";
    static final String dfa_212s = "\1\u00e3\1\uffff\1\132\1\u0082\1\0\3\uffff\1\4\1\10\1\uffff\1\132\1\4\1\132";
    static final String dfa_213s = "\1\uffff\1\1\3\uffff\1\3\1\4\1\5\2\uffff\1\2\3\uffff";
    static final String[] dfa_214s = {
            "\1\2\1\3\2\uffff\1\4\1\1\1\uffff\1\5\13\uffff\2\6\11\uffff\1\7\64\uffff\1\1\24\uffff\2\7\6\uffff\2\7\1\uffff\14\7\137\uffff\2\5",
            "",
            "\1\1\2\uffff\1\1\10\uffff\1\12\20\uffff\1\1\44\uffff\1\11\1\1\1\10",
            "\1\7\3\uffff\1\7\15\uffff\1\1\2\uffff\1\1\10\uffff\1\7\111\uffff\2\7\6\uffff\2\7\1\uffff\14\7",
            "\1\uffff",
            "",
            "",
            "",
            "\1\13",
            "\1\1\3\uffff\1\7",
            "",
            "\1\1\2\uffff\1\1\10\uffff\1\12\20\uffff\1\1\44\uffff\1\11\1\uffff\1\14",
            "\1\15",
            "\1\12\65\uffff\1\11\1\uffff\1\14"
    };
    static final char[] dfa_211 = DFA.unpackEncodedStringToUnsignedChars(dfa_211s);
    static final char[] dfa_212 = DFA.unpackEncodedStringToUnsignedChars(dfa_212s);
    static final short[] dfa_213 = DFA.unpackEncodedString(dfa_213s);
    static final short[][] dfa_214 = unpackEncodedStringArray(dfa_214s);

    class DFA301 extends DFA {

        public DFA301(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 301;
            this.eot = dfa_20;
            this.eof = dfa_20;
            this.min = dfa_211;
            this.max = dfa_212;
            this.accept = dfa_213;
            this.special = dfa_24;
            this.transition = dfa_214;
        }
        public String getDescription() {
            return "453:4: ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_function_4_0= ruleFunction ) ) | ( (lv_number_5_0= ruleNumber ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) | ( (lv_concept_7_0= ruleSimpleObservableSemantics ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA301_4 = input.LA(1);

                         
                        int index301_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index301_4);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 301, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA381 extends DFA {

        public DFA381(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 381;
            this.eot = dfa_88;
            this.eof = dfa_88;
            this.min = dfa_89;
            this.max = dfa_90;
            this.accept = dfa_91;
            this.special = dfa_92;
            this.transition = dfa_93;
        }
        public String getDescription() {
            return "5262:9: ( (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' ) | ( (lv_states_11_0= ruleObservableSemantics ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA381_1 = input.LA(1);

                         
                        int index381_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred209_InternalKim()) ) {s = 34;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index381_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 381, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA382 extends DFA {

        public DFA382(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 382;
            this.eot = dfa_88;
            this.eof = dfa_88;
            this.min = dfa_89;
            this.max = dfa_90;
            this.accept = dfa_91;
            this.special = dfa_92;
            this.transition = dfa_93;
        }
        public String getDescription() {
            return "5318:10: ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) | ( (lv_states_16_0= ruleObservableSemantics ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA382_1 = input.LA(1);

                         
                        int index382_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred210_InternalKim()) ) {s = 34;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index382_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 382, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000000000182002L,0x00000000080083F0L,0xF000780080003FC0L,0x000000000FFFFFFFL});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000000182000L,0x00000000000003F0L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0001800401E00FF0L,0xFFB0300020800000L,0x0100000000000007L,0x0000000C00000000L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000002400000L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000000000000330L,0x0000000000800000L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x00700042BC000002L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x00700042BC400002L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x00700042B8400002L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000000000050L,0x0000000000800000L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x00700042B0400002L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0000000040000000L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000000401800B30L,0xFFB0300000800000L,0x0000000000000007L,0x0000000C00000000L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0070004200000002L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000000000000010L,0x0000000000800000L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000440000000L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0000001800000010L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000002000400000L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0008C01401800B70L,0xFFB0300000800000L,0x0800000000000007L,0x0000000DF0000000L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0070004000000002L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000004000000002L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000000000400002L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x00000E0000000002L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000C01401800B30L,0xFFB0300000800000L,0x0800000000000007L,0x0000000DF0000000L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0000300100000000L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0000000000000800L,0x0000000000000000L,0x0000000000000000L,0x0000000C00000000L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0000300000000002L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x000AC01401800B70L,0xFFB0300000800000L,0x0800000000000007L,0x0000000DF0000000L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0002000000000000L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0004000000000002L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0020000000000000L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0xC000000000400002L,0x0000000000000007L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0xC000000000000000L,0x0000000000000007L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0F80000401800B30L,0xFFB0300000800000L,0x0000000000000007L,0x0000000C00000000L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0xC000000400000002L,0x0000000000000007L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0xC000400400000002L,0x0000000000000007L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x3000000000000000L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0xC000000000000002L,0x0000000000000007L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000800501C00DF0L,0x0000000000800000L,0x0000000000000000L,0x0000000C00000000L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x00000C0000400002L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0001800401C00DF0L,0x0000000000800000L,0x0100000000000000L,0x0000000C00000000L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0001800401C00DF0L,0x0000000000800008L,0x0100000000000000L,0x0000000C00000000L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0001800401C00DF2L,0x0000000000800000L,0x0100000000000000L,0x0000000C00000000L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0000400000000002L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0000000000000190L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0000000002000002L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0000000000182000L,0x0000000000001C00L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0000000000180000L,0x0000000000001C00L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0000404008040020L,0x00000000002E6000L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0000404008040000L,0x00000000002E6000L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0000001400000010L,0x0000000000800000L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0000404008440000L,0x00000000002E6000L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x0000000401800B30L,0xFFB0300000810000L,0x0000000000000007L,0x0000000C00000000L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0000000000400000L});
    public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x0000404008040010L,0x0000000000AE6000L});
    public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x0000404008040000L,0x00000000003E6000L});
    public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0000000000000000L,0x0000000000400000L});
    public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0000004000040000L});
    public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0000000000000000L,0x0000000000100000L});
    public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x0000000000000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x0008000000000002L,0x0000000001000000L});
    public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0008000000000002L});
    public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x0008000000000002L,0x0000000006000000L});
    public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x0000000000000310L});
    public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x0000000000002000L,0x0000000008000000L});
    public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x0070004401800B30L,0xFFB0300000800000L,0x0000000000000007L,0x0000000C00000000L});
    public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x007000440D800B32L,0xFFB0300010800000L,0x0000000000000007L,0x0000000C00000000L});
    public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x007000440DC00B32L,0xFFB0300000800000L,0x0000000000000007L,0x0000000C00000000L});
    public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x0070006401800B30L,0xFFB0300000800000L,0x0000000000000007L,0x0000000C00000000L});
    public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x0000002000000000L});
    public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x0070004409C00B32L,0xFFB0300000800000L,0x0000000000000007L,0x0000000C00000000L});
    public static final BitSet FOLLOW_85 = new BitSet(new long[]{0x0070004401800B32L,0xFFB0300000800000L,0x0000000000000007L,0x0000000C00000000L});
    public static final BitSet FOLLOW_86 = new BitSet(new long[]{0x0000000401800B30L,0xFFB0300020800000L,0x0000000000000007L,0x0000000C00000000L});
    public static final BitSet FOLLOW_87 = new BitSet(new long[]{0x0000400082000802L,0x0000000FC0000000L,0x0000000000000000L,0x0000000C00000000L});
    public static final BitSet FOLLOW_88 = new BitSet(new long[]{0x0000401482000990L,0x0000000FC2800000L,0x0000000000000000L,0x0000020C00000000L});
    public static final BitSet FOLLOW_89 = new BitSet(new long[]{0x0000401482000910L,0x0000000FC2000000L,0x0000000000000000L,0x0000020C00000000L});
    public static final BitSet FOLLOW_90 = new BitSet(new long[]{0x0000004401800B32L,0xFFB03FF000800000L,0x0000000000000007L,0x0000000C00000000L});
    public static final BitSet FOLLOW_91 = new BitSet(new long[]{0x0000004000000002L,0x00000FF000000000L});
    public static final BitSet FOLLOW_92 = new BitSet(new long[]{0x0000000000000000L,0x0000000040000000L});
    public static final BitSet FOLLOW_93 = new BitSet(new long[]{0x0000400000000000L});
    public static final BitSet FOLLOW_94 = new BitSet(new long[]{0x1000000000000000L,0x0007C1C000000000L});
    public static final BitSet FOLLOW_95 = new BitSet(new long[]{0x0000000000002000L,0x0000000010008000L,0xF000780080003FC0L,0x000000000FFFFFFFL});
    public static final BitSet FOLLOW_96 = new BitSet(new long[]{0x0000000000000000L,0x0008000000000000L});
    public static final BitSet FOLLOW_97 = new BitSet(new long[]{0x0000000000000110L,0x0030300000800000L});
    public static final BitSet FOLLOW_98 = new BitSet(new long[]{0x0000000000000002L,0x0040000000000000L});
    public static final BitSet FOLLOW_99 = new BitSet(new long[]{0x0000000000000C20L});
    public static final BitSet FOLLOW_100 = new BitSet(new long[]{0x0000000000001080L});
    public static final BitSet FOLLOW_101 = new BitSet(new long[]{0x0000000000000000L,0x0000001000000000L});
    public static final BitSet FOLLOW_102 = new BitSet(new long[]{0x0000000100000000L,0x0000000000100000L});
    public static final BitSet FOLLOW_103 = new BitSet(new long[]{0x0020000000000002L});
    public static final BitSet FOLLOW_104 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_105 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000030L});
    public static final BitSet FOLLOW_106 = new BitSet(new long[]{0x0000000401800B32L,0xFFB0300000800000L,0x0000000000000007L,0x0000000C00000000L});
    public static final BitSet FOLLOW_107 = new BitSet(new long[]{0x1000000008000000L,0x0007C1C000000000L,0x00000000000039C0L,0x000000000C000000L});
    public static final BitSet FOLLOW_108 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_109 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_110 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000003DC0L,0x000000000C000000L});
    public static final BitSet FOLLOW_111 = new BitSet(new long[]{0x0000000000002000L,0x0000000000008000L,0xF000780080003FC0L,0x000000000FFFFFFFL});
    public static final BitSet FOLLOW_112 = new BitSet(new long[]{0x0000000000002100L,0x0000000000010000L,0x0000000000000800L});
    public static final BitSet FOLLOW_113 = new BitSet(new long[]{0x0000000000000002L,0x0000000800000000L});
    public static final BitSet FOLLOW_114 = new BitSet(new long[]{0x0000000000000100L,0x0000000000010000L});
    public static final BitSet FOLLOW_115 = new BitSet(new long[]{0x0000004000000022L,0x0000000000000000L,0x000381FF7FDD4000L});
    public static final BitSet FOLLOW_116 = new BitSet(new long[]{0x0000004000000022L,0x0040000000000000L,0x000381FF7FDD4000L});
    public static final BitSet FOLLOW_117 = new BitSet(new long[]{0x0000000401800B30L,0xFFB0300000800000L,0x0000000000028007L,0x0000000C00000000L});
    public static final BitSet FOLLOW_118 = new BitSet(new long[]{0x0000000401800B30L,0xFFB0300000800000L,0x0000000000020007L,0x0000000C00000000L});
    public static final BitSet FOLLOW_119 = new BitSet(new long[]{0x0000004000400022L,0x0000000000000000L,0x000381FF7FDD4018L});
    public static final BitSet FOLLOW_120 = new BitSet(new long[]{0x0000004000400022L,0x0000000000000000L,0x000381FF7FDD4000L});
    public static final BitSet FOLLOW_121 = new BitSet(new long[]{0x0000000401800B30L,0xFFB0300000800000L,0x0000000000200007L,0x0000000C00000000L});
    public static final BitSet FOLLOW_122 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_123 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000780000200000L});
    public static final BitSet FOLLOW_124 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000080000000L});
    public static final BitSet FOLLOW_125 = new BitSet(new long[]{0x0000400000400000L,0x0000002000000000L});
    public static final BitSet FOLLOW_126 = new BitSet(new long[]{0x0000400000400000L});
    public static final BitSet FOLLOW_127 = new BitSet(new long[]{0x0000004100400022L,0x0000000000000000L,0x000381FF7FDD4000L});
    public static final BitSet FOLLOW_128 = new BitSet(new long[]{0x0000000000000000L,0x0000000000020000L,0x0000020000000000L});
    public static final BitSet FOLLOW_129 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_130 = new BitSet(new long[]{0x0000000400000100L,0x0000000000000000L,0x0000000000000800L});
    public static final BitSet FOLLOW_131 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_132 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_133 = new BitSet(new long[]{0x0000000000000100L});
    public static final BitSet FOLLOW_134 = new BitSet(new long[]{0x0000000401800B30L,0xFFB0300000800300L,0x001C000000000007L,0x000001CC00000000L});
    public static final BitSet FOLLOW_135 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000200000L});
    public static final BitSet FOLLOW_136 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_137 = new BitSet(new long[]{0x0000000000000110L,0x0000000000800000L});
    public static final BitSet FOLLOW_138 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0020000000000000L});
    public static final BitSet FOLLOW_139 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0040000000000000L});
    public static final BitSet FOLLOW_140 = new BitSet(new long[]{0x0000000002000002L,0x0000002000000000L,0x0080000000000000L});
    public static final BitSet FOLLOW_141 = new BitSet(new long[]{0x0000000002000002L,0x0000002000000000L});
    public static final BitSet FOLLOW_142 = new BitSet(new long[]{0x0000000100000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_143 = new BitSet(new long[]{0x0000000400000002L});
    public static final BitSet FOLLOW_144 = new BitSet(new long[]{0x0001802401C00DF0L,0x0000000000800000L,0x0100000000000000L,0x0000000C00000000L});
    public static final BitSet FOLLOW_145 = new BitSet(new long[]{0x0000000000000030L,0x0008000000800000L});
    public static final BitSet FOLLOW_146 = new BitSet(new long[]{0x0000000401800C20L,0x0000000000000000L,0x0100000000000000L,0x0000000C00000000L});
    public static final BitSet FOLLOW_147 = new BitSet(new long[]{0x0040000000000010L,0x0008000000800000L});
    public static final BitSet FOLLOW_148 = new BitSet(new long[]{0x0000000001800C20L,0x0000000000000000L,0x0000000000000000L,0x0000000C00000000L});
    public static final BitSet FOLLOW_149 = new BitSet(new long[]{0x0000C01401800B30L,0xFFB8300000800000L,0x0800000000000007L,0x0000000DF0000000L});
    public static final BitSet FOLLOW_150 = new BitSet(new long[]{0x0000000000400000L,0x0008000000000000L});
    public static final BitSet FOLLOW_151 = new BitSet(new long[]{0x0001800401800BF0L,0xFFB0300000800300L,0x011C000000000007L,0x000001CC00000000L});
    public static final BitSet FOLLOW_152 = new BitSet(new long[]{0x0C80000000000000L,0x0000000000000000L,0x0200000000000000L});
    public static final BitSet FOLLOW_153 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0C00000000000000L});
    public static final BitSet FOLLOW_154 = new BitSet(new long[]{0x0000400080000802L,0x00000009C0000000L,0x0000000000000000L,0x0000000C00000000L});
    public static final BitSet FOLLOW_155 = new BitSet(new long[]{0x0000401480000910L,0x00000009C2000000L,0x0000000000000000L,0x0000020C00000000L});
    public static final BitSet FOLLOW_156 = new BitSet(new long[]{0x0000000000000000L,0x0000000800000000L});
    public static final BitSet FOLLOW_157 = new BitSet(new long[]{0x0000000000000210L});
    public static final BitSet FOLLOW_158 = new BitSet(new long[]{0x0000003400000910L,0x0000000002000000L,0x0000000000000000L,0x0000020C00000000L});
    public static final BitSet FOLLOW_159 = new BitSet(new long[]{0x0000001000000002L,0x0000000002000000L,0x0000000000000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_160 = new BitSet(new long[]{0x0000000400000910L,0x0000000000000000L,0x0000000000000000L,0x0000000C00000000L});
    public static final BitSet FOLLOW_161 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_162 = new BitSet(new long[]{0x0000000000000002L,0x0000000004000000L,0x0000000000000000L,0x0000003000000000L});
    public static final BitSet FOLLOW_163 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000003000000000L});
    public static final BitSet FOLLOW_164 = new BitSet(new long[]{0x0000000000000002L,0x0000000004000000L});
    public static final BitSet FOLLOW_165 = new BitSet(new long[]{0x0000000000000002L,0x0000000006000000L});
    public static final BitSet FOLLOW_166 = new BitSet(new long[]{0x0000000000000092L,0x0000000004000000L,0x0000000000000000L,0x0000000800000000L});
    public static final BitSet FOLLOW_167 = new BitSet(new long[]{0x0000000000000092L,0x0000000000000000L,0x0000000000000000L,0x0000000800000000L});
    public static final BitSet FOLLOW_168 = new BitSet(new long[]{0x0000000000000092L});
    public static final BitSet FOLLOW_169 = new BitSet(new long[]{0x0000000000000012L,0x0000000000800000L});
    public static final BitSet FOLLOW_170 = new BitSet(new long[]{0x0000000000000002L,0x0000000000100000L});
    public static final BitSet FOLLOW_171 = new BitSet(new long[]{0x0000000008000002L,0x0000000000380000L});
    public static final BitSet FOLLOW_172 = new BitSet(new long[]{0x0000000008000012L,0x0000000000A80000L});
    public static final BitSet FOLLOW_173 = new BitSet(new long[]{0x0000000008000002L,0x0000000000280000L});
    public static final BitSet FOLLOW_174 = new BitSet(new long[]{0x000000000C000022L,0x0000000010000000L});
    public static final BitSet FOLLOW_175 = new BitSet(new long[]{0x000000000C000002L,0x0000000010000000L});
    public static final BitSet FOLLOW_176 = new BitSet(new long[]{0x000000000C400002L});
    public static final BitSet FOLLOW_177 = new BitSet(new long[]{0x0000000008400002L});
    public static final BitSet FOLLOW_178 = new BitSet(new long[]{0x0000001400000910L,0x0000000002000000L,0x0000000000000000L,0x0000020C00000000L});
    public static final BitSet FOLLOW_179 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x00000000000039C0L,0x000000000C000000L});
    public static final BitSet FOLLOW_180 = new BitSet(new long[]{0x0000000000400002L,0x0000000000000000L,0x0000000000000018L});
    public static final BitSet FOLLOW_181 = new BitSet(new long[]{0x0000000100400002L});
    public static final BitSet FOLLOW_182 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0003800040000000L});

}
