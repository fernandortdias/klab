/**
 * Copyright (C) 2009-2016 integratedmodelling.org
 * generated by Xtext 2.12.0
 */
package org.integratedmodelling.kim.kim.impl;

import java.util.Collection;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;
import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;
import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;
import org.integratedmodelling.kim.kim.ActionSpecification;
import org.integratedmodelling.kim.kim.Contextualization;
import org.integratedmodelling.kim.kim.Documentation;
import org.integratedmodelling.kim.kim.Function;
import org.integratedmodelling.kim.kim.KimPackage;
import org.integratedmodelling.kim.kim.Metadata;
import org.integratedmodelling.kim.kim.ModelBodyStatement;
import org.integratedmodelling.kim.kim.ObservableSemantics;
import org.integratedmodelling.kim.kim.Urn;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Model Body Statement</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.integratedmodelling.kim.kim.impl.ModelBodyStatementImpl#isInstantiator <em>Instantiator</em>}</li>
 *   <li>{@link org.integratedmodelling.kim.kim.impl.ModelBodyStatementImpl#getUrn <em>Urn</em>}</li>
 *   <li>{@link org.integratedmodelling.kim.kim.impl.ModelBodyStatementImpl#getFunction <em>Function</em>}</li>
 *   <li>{@link org.integratedmodelling.kim.kim.impl.ModelBodyStatementImpl#getNumber <em>Number</em>}</li>
 *   <li>{@link org.integratedmodelling.kim.kim.impl.ModelBodyStatementImpl#getBoolean <em>Boolean</em>}</li>
 *   <li>{@link org.integratedmodelling.kim.kim.impl.ModelBodyStatementImpl#getConcept <em>Concept</em>}</li>
 *   <li>{@link org.integratedmodelling.kim.kim.impl.ModelBodyStatementImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.integratedmodelling.kim.kim.impl.ModelBodyStatementImpl#getObservables <em>Observables</em>}</li>
 *   <li>{@link org.integratedmodelling.kim.kim.impl.ModelBodyStatementImpl#getDependencies <em>Dependencies</em>}</li>
 *   <li>{@link org.integratedmodelling.kim.kim.impl.ModelBodyStatementImpl#getContextualizers <em>Contextualizers</em>}</li>
 *   <li>{@link org.integratedmodelling.kim.kim.impl.ModelBodyStatementImpl#getActions <em>Actions</em>}</li>
 *   <li>{@link org.integratedmodelling.kim.kim.impl.ModelBodyStatementImpl#getMetadata <em>Metadata</em>}</li>
 *   <li>{@link org.integratedmodelling.kim.kim.impl.ModelBodyStatementImpl#getDocumentation <em>Documentation</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ModelBodyStatementImpl extends MinimalEObjectImpl.Container implements ModelBodyStatement
{
  /**
   * The default value of the '{@link #isInstantiator() <em>Instantiator</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isInstantiator()
   * @generated
   * @ordered
   */
  protected static final boolean INSTANTIATOR_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isInstantiator() <em>Instantiator</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isInstantiator()
   * @generated
   * @ordered
   */
  protected boolean instantiator = INSTANTIATOR_EDEFAULT;

  /**
   * The cached value of the '{@link #getUrn() <em>Urn</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUrn()
   * @generated
   * @ordered
   */
  protected Urn urn;

  /**
   * The cached value of the '{@link #getFunction() <em>Function</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFunction()
   * @generated
   * @ordered
   */
  protected Function function;

  /**
   * The cached value of the '{@link #getNumber() <em>Number</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNumber()
   * @generated
   * @ordered
   */
  protected org.integratedmodelling.kim.kim.Number number;

  /**
   * The default value of the '{@link #getBoolean() <em>Boolean</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBoolean()
   * @generated
   * @ordered
   */
  protected static final String BOOLEAN_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getBoolean() <em>Boolean</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBoolean()
   * @generated
   * @ordered
   */
  protected String boolean_ = BOOLEAN_EDEFAULT;

  /**
   * The cached value of the '{@link #getConcept() <em>Concept</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getConcept()
   * @generated
   * @ordered
   */
  protected ObservableSemantics concept;

  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getObservables() <em>Observables</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getObservables()
   * @generated
   * @ordered
   */
  protected EList<ObservableSemantics> observables;

  /**
   * The cached value of the '{@link #getDependencies() <em>Dependencies</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDependencies()
   * @generated
   * @ordered
   */
  protected EList<ObservableSemantics> dependencies;

  /**
   * The cached value of the '{@link #getContextualizers() <em>Contextualizers</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getContextualizers()
   * @generated
   * @ordered
   */
  protected EList<Contextualization> contextualizers;

  /**
   * The cached value of the '{@link #getActions() <em>Actions</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getActions()
   * @generated
   * @ordered
   */
  protected EList<ActionSpecification> actions;

  /**
   * The cached value of the '{@link #getMetadata() <em>Metadata</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMetadata()
   * @generated
   * @ordered
   */
  protected Metadata metadata;

  /**
   * The cached value of the '{@link #getDocumentation() <em>Documentation</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDocumentation()
   * @generated
   * @ordered
   */
  protected Documentation documentation;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ModelBodyStatementImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return KimPackage.Literals.MODEL_BODY_STATEMENT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isInstantiator()
  {
    return instantiator;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setInstantiator(boolean newInstantiator)
  {
    boolean oldInstantiator = instantiator;
    instantiator = newInstantiator;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KimPackage.MODEL_BODY_STATEMENT__INSTANTIATOR, oldInstantiator, instantiator));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Urn getUrn()
  {
    return urn;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetUrn(Urn newUrn, NotificationChain msgs)
  {
    Urn oldUrn = urn;
    urn = newUrn;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, KimPackage.MODEL_BODY_STATEMENT__URN, oldUrn, newUrn);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setUrn(Urn newUrn)
  {
    if (newUrn != urn)
    {
      NotificationChain msgs = null;
      if (urn != null)
        msgs = ((InternalEObject)urn).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - KimPackage.MODEL_BODY_STATEMENT__URN, null, msgs);
      if (newUrn != null)
        msgs = ((InternalEObject)newUrn).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - KimPackage.MODEL_BODY_STATEMENT__URN, null, msgs);
      msgs = basicSetUrn(newUrn, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KimPackage.MODEL_BODY_STATEMENT__URN, newUrn, newUrn));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Function getFunction()
  {
    return function;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetFunction(Function newFunction, NotificationChain msgs)
  {
    Function oldFunction = function;
    function = newFunction;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, KimPackage.MODEL_BODY_STATEMENT__FUNCTION, oldFunction, newFunction);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setFunction(Function newFunction)
  {
    if (newFunction != function)
    {
      NotificationChain msgs = null;
      if (function != null)
        msgs = ((InternalEObject)function).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - KimPackage.MODEL_BODY_STATEMENT__FUNCTION, null, msgs);
      if (newFunction != null)
        msgs = ((InternalEObject)newFunction).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - KimPackage.MODEL_BODY_STATEMENT__FUNCTION, null, msgs);
      msgs = basicSetFunction(newFunction, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KimPackage.MODEL_BODY_STATEMENT__FUNCTION, newFunction, newFunction));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public org.integratedmodelling.kim.kim.Number getNumber()
  {
    return number;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetNumber(org.integratedmodelling.kim.kim.Number newNumber, NotificationChain msgs)
  {
    org.integratedmodelling.kim.kim.Number oldNumber = number;
    number = newNumber;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, KimPackage.MODEL_BODY_STATEMENT__NUMBER, oldNumber, newNumber);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setNumber(org.integratedmodelling.kim.kim.Number newNumber)
  {
    if (newNumber != number)
    {
      NotificationChain msgs = null;
      if (number != null)
        msgs = ((InternalEObject)number).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - KimPackage.MODEL_BODY_STATEMENT__NUMBER, null, msgs);
      if (newNumber != null)
        msgs = ((InternalEObject)newNumber).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - KimPackage.MODEL_BODY_STATEMENT__NUMBER, null, msgs);
      msgs = basicSetNumber(newNumber, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KimPackage.MODEL_BODY_STATEMENT__NUMBER, newNumber, newNumber));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getBoolean()
  {
    return boolean_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setBoolean(String newBoolean)
  {
    String oldBoolean = boolean_;
    boolean_ = newBoolean;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KimPackage.MODEL_BODY_STATEMENT__BOOLEAN, oldBoolean, boolean_));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ObservableSemantics getConcept()
  {
    return concept;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetConcept(ObservableSemantics newConcept, NotificationChain msgs)
  {
    ObservableSemantics oldConcept = concept;
    concept = newConcept;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, KimPackage.MODEL_BODY_STATEMENT__CONCEPT, oldConcept, newConcept);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setConcept(ObservableSemantics newConcept)
  {
    if (newConcept != concept)
    {
      NotificationChain msgs = null;
      if (concept != null)
        msgs = ((InternalEObject)concept).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - KimPackage.MODEL_BODY_STATEMENT__CONCEPT, null, msgs);
      if (newConcept != null)
        msgs = ((InternalEObject)newConcept).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - KimPackage.MODEL_BODY_STATEMENT__CONCEPT, null, msgs);
      msgs = basicSetConcept(newConcept, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KimPackage.MODEL_BODY_STATEMENT__CONCEPT, newConcept, newConcept));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KimPackage.MODEL_BODY_STATEMENT__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<ObservableSemantics> getObservables()
  {
    if (observables == null)
    {
      observables = new EObjectContainmentEList<ObservableSemantics>(ObservableSemantics.class, this, KimPackage.MODEL_BODY_STATEMENT__OBSERVABLES);
    }
    return observables;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<ObservableSemantics> getDependencies()
  {
    if (dependencies == null)
    {
      dependencies = new EObjectContainmentEList<ObservableSemantics>(ObservableSemantics.class, this, KimPackage.MODEL_BODY_STATEMENT__DEPENDENCIES);
    }
    return dependencies;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Contextualization> getContextualizers()
  {
    if (contextualizers == null)
    {
      contextualizers = new EObjectContainmentEList<Contextualization>(Contextualization.class, this, KimPackage.MODEL_BODY_STATEMENT__CONTEXTUALIZERS);
    }
    return contextualizers;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<ActionSpecification> getActions()
  {
    if (actions == null)
    {
      actions = new EObjectContainmentEList<ActionSpecification>(ActionSpecification.class, this, KimPackage.MODEL_BODY_STATEMENT__ACTIONS);
    }
    return actions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Metadata getMetadata()
  {
    return metadata;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetMetadata(Metadata newMetadata, NotificationChain msgs)
  {
    Metadata oldMetadata = metadata;
    metadata = newMetadata;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, KimPackage.MODEL_BODY_STATEMENT__METADATA, oldMetadata, newMetadata);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMetadata(Metadata newMetadata)
  {
    if (newMetadata != metadata)
    {
      NotificationChain msgs = null;
      if (metadata != null)
        msgs = ((InternalEObject)metadata).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - KimPackage.MODEL_BODY_STATEMENT__METADATA, null, msgs);
      if (newMetadata != null)
        msgs = ((InternalEObject)newMetadata).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - KimPackage.MODEL_BODY_STATEMENT__METADATA, null, msgs);
      msgs = basicSetMetadata(newMetadata, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KimPackage.MODEL_BODY_STATEMENT__METADATA, newMetadata, newMetadata));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Documentation getDocumentation()
  {
    return documentation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetDocumentation(Documentation newDocumentation, NotificationChain msgs)
  {
    Documentation oldDocumentation = documentation;
    documentation = newDocumentation;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, KimPackage.MODEL_BODY_STATEMENT__DOCUMENTATION, oldDocumentation, newDocumentation);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDocumentation(Documentation newDocumentation)
  {
    if (newDocumentation != documentation)
    {
      NotificationChain msgs = null;
      if (documentation != null)
        msgs = ((InternalEObject)documentation).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - KimPackage.MODEL_BODY_STATEMENT__DOCUMENTATION, null, msgs);
      if (newDocumentation != null)
        msgs = ((InternalEObject)newDocumentation).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - KimPackage.MODEL_BODY_STATEMENT__DOCUMENTATION, null, msgs);
      msgs = basicSetDocumentation(newDocumentation, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KimPackage.MODEL_BODY_STATEMENT__DOCUMENTATION, newDocumentation, newDocumentation));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case KimPackage.MODEL_BODY_STATEMENT__URN:
        return basicSetUrn(null, msgs);
      case KimPackage.MODEL_BODY_STATEMENT__FUNCTION:
        return basicSetFunction(null, msgs);
      case KimPackage.MODEL_BODY_STATEMENT__NUMBER:
        return basicSetNumber(null, msgs);
      case KimPackage.MODEL_BODY_STATEMENT__CONCEPT:
        return basicSetConcept(null, msgs);
      case KimPackage.MODEL_BODY_STATEMENT__OBSERVABLES:
        return ((InternalEList<?>)getObservables()).basicRemove(otherEnd, msgs);
      case KimPackage.MODEL_BODY_STATEMENT__DEPENDENCIES:
        return ((InternalEList<?>)getDependencies()).basicRemove(otherEnd, msgs);
      case KimPackage.MODEL_BODY_STATEMENT__CONTEXTUALIZERS:
        return ((InternalEList<?>)getContextualizers()).basicRemove(otherEnd, msgs);
      case KimPackage.MODEL_BODY_STATEMENT__ACTIONS:
        return ((InternalEList<?>)getActions()).basicRemove(otherEnd, msgs);
      case KimPackage.MODEL_BODY_STATEMENT__METADATA:
        return basicSetMetadata(null, msgs);
      case KimPackage.MODEL_BODY_STATEMENT__DOCUMENTATION:
        return basicSetDocumentation(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case KimPackage.MODEL_BODY_STATEMENT__INSTANTIATOR:
        return isInstantiator();
      case KimPackage.MODEL_BODY_STATEMENT__URN:
        return getUrn();
      case KimPackage.MODEL_BODY_STATEMENT__FUNCTION:
        return getFunction();
      case KimPackage.MODEL_BODY_STATEMENT__NUMBER:
        return getNumber();
      case KimPackage.MODEL_BODY_STATEMENT__BOOLEAN:
        return getBoolean();
      case KimPackage.MODEL_BODY_STATEMENT__CONCEPT:
        return getConcept();
      case KimPackage.MODEL_BODY_STATEMENT__NAME:
        return getName();
      case KimPackage.MODEL_BODY_STATEMENT__OBSERVABLES:
        return getObservables();
      case KimPackage.MODEL_BODY_STATEMENT__DEPENDENCIES:
        return getDependencies();
      case KimPackage.MODEL_BODY_STATEMENT__CONTEXTUALIZERS:
        return getContextualizers();
      case KimPackage.MODEL_BODY_STATEMENT__ACTIONS:
        return getActions();
      case KimPackage.MODEL_BODY_STATEMENT__METADATA:
        return getMetadata();
      case KimPackage.MODEL_BODY_STATEMENT__DOCUMENTATION:
        return getDocumentation();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case KimPackage.MODEL_BODY_STATEMENT__INSTANTIATOR:
        setInstantiator((Boolean)newValue);
        return;
      case KimPackage.MODEL_BODY_STATEMENT__URN:
        setUrn((Urn)newValue);
        return;
      case KimPackage.MODEL_BODY_STATEMENT__FUNCTION:
        setFunction((Function)newValue);
        return;
      case KimPackage.MODEL_BODY_STATEMENT__NUMBER:
        setNumber((org.integratedmodelling.kim.kim.Number)newValue);
        return;
      case KimPackage.MODEL_BODY_STATEMENT__BOOLEAN:
        setBoolean((String)newValue);
        return;
      case KimPackage.MODEL_BODY_STATEMENT__CONCEPT:
        setConcept((ObservableSemantics)newValue);
        return;
      case KimPackage.MODEL_BODY_STATEMENT__NAME:
        setName((String)newValue);
        return;
      case KimPackage.MODEL_BODY_STATEMENT__OBSERVABLES:
        getObservables().clear();
        getObservables().addAll((Collection<? extends ObservableSemantics>)newValue);
        return;
      case KimPackage.MODEL_BODY_STATEMENT__DEPENDENCIES:
        getDependencies().clear();
        getDependencies().addAll((Collection<? extends ObservableSemantics>)newValue);
        return;
      case KimPackage.MODEL_BODY_STATEMENT__CONTEXTUALIZERS:
        getContextualizers().clear();
        getContextualizers().addAll((Collection<? extends Contextualization>)newValue);
        return;
      case KimPackage.MODEL_BODY_STATEMENT__ACTIONS:
        getActions().clear();
        getActions().addAll((Collection<? extends ActionSpecification>)newValue);
        return;
      case KimPackage.MODEL_BODY_STATEMENT__METADATA:
        setMetadata((Metadata)newValue);
        return;
      case KimPackage.MODEL_BODY_STATEMENT__DOCUMENTATION:
        setDocumentation((Documentation)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case KimPackage.MODEL_BODY_STATEMENT__INSTANTIATOR:
        setInstantiator(INSTANTIATOR_EDEFAULT);
        return;
      case KimPackage.MODEL_BODY_STATEMENT__URN:
        setUrn((Urn)null);
        return;
      case KimPackage.MODEL_BODY_STATEMENT__FUNCTION:
        setFunction((Function)null);
        return;
      case KimPackage.MODEL_BODY_STATEMENT__NUMBER:
        setNumber((org.integratedmodelling.kim.kim.Number)null);
        return;
      case KimPackage.MODEL_BODY_STATEMENT__BOOLEAN:
        setBoolean(BOOLEAN_EDEFAULT);
        return;
      case KimPackage.MODEL_BODY_STATEMENT__CONCEPT:
        setConcept((ObservableSemantics)null);
        return;
      case KimPackage.MODEL_BODY_STATEMENT__NAME:
        setName(NAME_EDEFAULT);
        return;
      case KimPackage.MODEL_BODY_STATEMENT__OBSERVABLES:
        getObservables().clear();
        return;
      case KimPackage.MODEL_BODY_STATEMENT__DEPENDENCIES:
        getDependencies().clear();
        return;
      case KimPackage.MODEL_BODY_STATEMENT__CONTEXTUALIZERS:
        getContextualizers().clear();
        return;
      case KimPackage.MODEL_BODY_STATEMENT__ACTIONS:
        getActions().clear();
        return;
      case KimPackage.MODEL_BODY_STATEMENT__METADATA:
        setMetadata((Metadata)null);
        return;
      case KimPackage.MODEL_BODY_STATEMENT__DOCUMENTATION:
        setDocumentation((Documentation)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case KimPackage.MODEL_BODY_STATEMENT__INSTANTIATOR:
        return instantiator != INSTANTIATOR_EDEFAULT;
      case KimPackage.MODEL_BODY_STATEMENT__URN:
        return urn != null;
      case KimPackage.MODEL_BODY_STATEMENT__FUNCTION:
        return function != null;
      case KimPackage.MODEL_BODY_STATEMENT__NUMBER:
        return number != null;
      case KimPackage.MODEL_BODY_STATEMENT__BOOLEAN:
        return BOOLEAN_EDEFAULT == null ? boolean_ != null : !BOOLEAN_EDEFAULT.equals(boolean_);
      case KimPackage.MODEL_BODY_STATEMENT__CONCEPT:
        return concept != null;
      case KimPackage.MODEL_BODY_STATEMENT__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case KimPackage.MODEL_BODY_STATEMENT__OBSERVABLES:
        return observables != null && !observables.isEmpty();
      case KimPackage.MODEL_BODY_STATEMENT__DEPENDENCIES:
        return dependencies != null && !dependencies.isEmpty();
      case KimPackage.MODEL_BODY_STATEMENT__CONTEXTUALIZERS:
        return contextualizers != null && !contextualizers.isEmpty();
      case KimPackage.MODEL_BODY_STATEMENT__ACTIONS:
        return actions != null && !actions.isEmpty();
      case KimPackage.MODEL_BODY_STATEMENT__METADATA:
        return metadata != null;
      case KimPackage.MODEL_BODY_STATEMENT__DOCUMENTATION:
        return documentation != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (instantiator: ");
    result.append(instantiator);
    result.append(", boolean: ");
    result.append(boolean_);
    result.append(", name: ");
    result.append(name);
    result.append(')');
    return result.toString();
  }

} //ModelBodyStatementImpl
