/**
 * Copyright (C) 2009-2016 integratedmodelling.org
 * generated by Xtext 2.12.0
 */
package org.integratedmodelling.kim.kim.impl;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

import org.integratedmodelling.kim.kim.*;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class KimFactoryImpl extends EFactoryImpl implements KimFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static KimFactory init()
  {
    try
    {
      KimFactory theKimFactory = (KimFactory)EPackage.Registry.INSTANCE.getEFactory(KimPackage.eNS_URI);
      if (theKimFactory != null)
      {
        return theKimFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new KimFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public KimFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case KimPackage.MODEL: return createModel();
      case KimPackage.STATEMENT: return createStatement();
      case KimPackage.MODEL_STATEMENT: return createModelStatement();
      case KimPackage.MODEL_BODY_STATEMENT: return createModelBodyStatement();
      case KimPackage.CONTEXTUALIZATION: return createContextualization();
      case KimPackage.ATTRIBUTE_IDENTIFIER: return createAttributeIdentifier();
      case KimPackage.CLASSIFICATION: return createClassification();
      case KimPackage.CLASSIFIER: return createClassifier();
      case KimPackage.CLASSIFIER_RHS: return createClassifierRHS();
      case KimPackage.LOOKUP_TABLE: return createLookupTable();
      case KimPackage.URN: return createUrn();
      case KimPackage.TABLE: return createTable();
      case KimPackage.ACTION_SPECIFICATION: return createActionSpecification();
      case KimPackage.FUNCTION_OR_ID: return createFunctionOrID();
      case KimPackage.ACTION: return createAction();
      case KimPackage.VALUE_ASSIGNMENT: return createValueAssignment();
      case KimPackage.COMPUTABLE_VALUE: return createComputableValue();
      case KimPackage.NAMESPACE: return createNamespace();
      case KimPackage.OWL_IMPORT: return createOwlImport();
      case KimPackage.IMPORT: return createImport();
      case KimPackage.OBSERVE_STATEMENT: return createObserveStatement();
      case KimPackage.OBSERVE_STATEMENT_BODY: return createObserveStatementBody();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Model createModel()
  {
    ModelImpl model = new ModelImpl();
    return model;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Statement createStatement()
  {
    StatementImpl statement = new StatementImpl();
    return statement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ModelStatement createModelStatement()
  {
    ModelStatementImpl modelStatement = new ModelStatementImpl();
    return modelStatement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ModelBodyStatement createModelBodyStatement()
  {
    ModelBodyStatementImpl modelBodyStatement = new ModelBodyStatementImpl();
    return modelBodyStatement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Contextualization createContextualization()
  {
    ContextualizationImpl contextualization = new ContextualizationImpl();
    return contextualization;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AttributeIdentifier createAttributeIdentifier()
  {
    AttributeIdentifierImpl attributeIdentifier = new AttributeIdentifierImpl();
    return attributeIdentifier;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Classification createClassification()
  {
    ClassificationImpl classification = new ClassificationImpl();
    return classification;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Classifier createClassifier()
  {
    ClassifierImpl classifier = new ClassifierImpl();
    return classifier;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ClassifierRHS createClassifierRHS()
  {
    ClassifierRHSImpl classifierRHS = new ClassifierRHSImpl();
    return classifierRHS;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public LookupTable createLookupTable()
  {
    LookupTableImpl lookupTable = new LookupTableImpl();
    return lookupTable;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Urn createUrn()
  {
    UrnImpl urn = new UrnImpl();
    return urn;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Table createTable()
  {
    TableImpl table = new TableImpl();
    return table;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ActionSpecification createActionSpecification()
  {
    ActionSpecificationImpl actionSpecification = new ActionSpecificationImpl();
    return actionSpecification;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public FunctionOrID createFunctionOrID()
  {
    FunctionOrIDImpl functionOrID = new FunctionOrIDImpl();
    return functionOrID;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Action createAction()
  {
    ActionImpl action = new ActionImpl();
    return action;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ValueAssignment createValueAssignment()
  {
    ValueAssignmentImpl valueAssignment = new ValueAssignmentImpl();
    return valueAssignment;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ComputableValue createComputableValue()
  {
    ComputableValueImpl computableValue = new ComputableValueImpl();
    return computableValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Namespace createNamespace()
  {
    NamespaceImpl namespace = new NamespaceImpl();
    return namespace;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public OwlImport createOwlImport()
  {
    OwlImportImpl owlImport = new OwlImportImpl();
    return owlImport;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Import createImport()
  {
    ImportImpl import_ = new ImportImpl();
    return import_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ObserveStatement createObserveStatement()
  {
    ObserveStatementImpl observeStatement = new ObserveStatementImpl();
    return observeStatement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ObserveStatementBody createObserveStatementBody()
  {
    ObserveStatementBodyImpl observeStatementBody = new ObserveStatementBodyImpl();
    return observeStatementBody;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public KimPackage getKimPackage()
  {
    return (KimPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static KimPackage getPackage()
  {
    return KimPackage.eINSTANCE;
  }

} //KimFactoryImpl
