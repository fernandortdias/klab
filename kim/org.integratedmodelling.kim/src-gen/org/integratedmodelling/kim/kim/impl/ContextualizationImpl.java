/**
 * Copyright (C) 2009-2016 integratedmodelling.org
 * generated by Xtext 2.12.0
 */
package org.integratedmodelling.kim.kim.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;
import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;
import org.integratedmodelling.kim.kim.Classification;
import org.integratedmodelling.kim.kim.Contextualization;
import org.integratedmodelling.kim.kim.KimPackage;
import org.integratedmodelling.kim.kim.LookupTable;
import org.integratedmodelling.kim.kim.ValueAssignment;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Contextualization</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.integratedmodelling.kim.kim.impl.ContextualizationImpl#getValue <em>Value</em>}</li>
 *   <li>{@link org.integratedmodelling.kim.kim.impl.ContextualizationImpl#isDiscretization <em>Discretization</em>}</li>
 *   <li>{@link org.integratedmodelling.kim.kim.impl.ContextualizationImpl#getClassification <em>Classification</em>}</li>
 *   <li>{@link org.integratedmodelling.kim.kim.impl.ContextualizationImpl#getLookupTable <em>Lookup Table</em>}</li>
 *   <li>{@link org.integratedmodelling.kim.kim.impl.ContextualizationImpl#getClassificationProperty <em>Classification Property</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ContextualizationImpl extends MinimalEObjectImpl.Container implements Contextualization
{
  /**
   * The cached value of the '{@link #getValue() <em>Value</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getValue()
   * @generated
   * @ordered
   */
  protected ValueAssignment value;

  /**
   * The default value of the '{@link #isDiscretization() <em>Discretization</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isDiscretization()
   * @generated
   * @ordered
   */
  protected static final boolean DISCRETIZATION_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isDiscretization() <em>Discretization</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isDiscretization()
   * @generated
   * @ordered
   */
  protected boolean discretization = DISCRETIZATION_EDEFAULT;

  /**
   * The cached value of the '{@link #getClassification() <em>Classification</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getClassification()
   * @generated
   * @ordered
   */
  protected Classification classification;

  /**
   * The cached value of the '{@link #getLookupTable() <em>Lookup Table</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLookupTable()
   * @generated
   * @ordered
   */
  protected LookupTable lookupTable;

  /**
   * The default value of the '{@link #getClassificationProperty() <em>Classification Property</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getClassificationProperty()
   * @generated
   * @ordered
   */
  protected static final String CLASSIFICATION_PROPERTY_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getClassificationProperty() <em>Classification Property</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getClassificationProperty()
   * @generated
   * @ordered
   */
  protected String classificationProperty = CLASSIFICATION_PROPERTY_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ContextualizationImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return KimPackage.Literals.CONTEXTUALIZATION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ValueAssignment getValue()
  {
    return value;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetValue(ValueAssignment newValue, NotificationChain msgs)
  {
    ValueAssignment oldValue = value;
    value = newValue;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, KimPackage.CONTEXTUALIZATION__VALUE, oldValue, newValue);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setValue(ValueAssignment newValue)
  {
    if (newValue != value)
    {
      NotificationChain msgs = null;
      if (value != null)
        msgs = ((InternalEObject)value).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - KimPackage.CONTEXTUALIZATION__VALUE, null, msgs);
      if (newValue != null)
        msgs = ((InternalEObject)newValue).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - KimPackage.CONTEXTUALIZATION__VALUE, null, msgs);
      msgs = basicSetValue(newValue, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KimPackage.CONTEXTUALIZATION__VALUE, newValue, newValue));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isDiscretization()
  {
    return discretization;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDiscretization(boolean newDiscretization)
  {
    boolean oldDiscretization = discretization;
    discretization = newDiscretization;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KimPackage.CONTEXTUALIZATION__DISCRETIZATION, oldDiscretization, discretization));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Classification getClassification()
  {
    return classification;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetClassification(Classification newClassification, NotificationChain msgs)
  {
    Classification oldClassification = classification;
    classification = newClassification;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, KimPackage.CONTEXTUALIZATION__CLASSIFICATION, oldClassification, newClassification);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setClassification(Classification newClassification)
  {
    if (newClassification != classification)
    {
      NotificationChain msgs = null;
      if (classification != null)
        msgs = ((InternalEObject)classification).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - KimPackage.CONTEXTUALIZATION__CLASSIFICATION, null, msgs);
      if (newClassification != null)
        msgs = ((InternalEObject)newClassification).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - KimPackage.CONTEXTUALIZATION__CLASSIFICATION, null, msgs);
      msgs = basicSetClassification(newClassification, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KimPackage.CONTEXTUALIZATION__CLASSIFICATION, newClassification, newClassification));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public LookupTable getLookupTable()
  {
    return lookupTable;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetLookupTable(LookupTable newLookupTable, NotificationChain msgs)
  {
    LookupTable oldLookupTable = lookupTable;
    lookupTable = newLookupTable;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, KimPackage.CONTEXTUALIZATION__LOOKUP_TABLE, oldLookupTable, newLookupTable);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setLookupTable(LookupTable newLookupTable)
  {
    if (newLookupTable != lookupTable)
    {
      NotificationChain msgs = null;
      if (lookupTable != null)
        msgs = ((InternalEObject)lookupTable).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - KimPackage.CONTEXTUALIZATION__LOOKUP_TABLE, null, msgs);
      if (newLookupTable != null)
        msgs = ((InternalEObject)newLookupTable).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - KimPackage.CONTEXTUALIZATION__LOOKUP_TABLE, null, msgs);
      msgs = basicSetLookupTable(newLookupTable, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KimPackage.CONTEXTUALIZATION__LOOKUP_TABLE, newLookupTable, newLookupTable));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getClassificationProperty()
  {
    return classificationProperty;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setClassificationProperty(String newClassificationProperty)
  {
    String oldClassificationProperty = classificationProperty;
    classificationProperty = newClassificationProperty;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KimPackage.CONTEXTUALIZATION__CLASSIFICATION_PROPERTY, oldClassificationProperty, classificationProperty));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case KimPackage.CONTEXTUALIZATION__VALUE:
        return basicSetValue(null, msgs);
      case KimPackage.CONTEXTUALIZATION__CLASSIFICATION:
        return basicSetClassification(null, msgs);
      case KimPackage.CONTEXTUALIZATION__LOOKUP_TABLE:
        return basicSetLookupTable(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case KimPackage.CONTEXTUALIZATION__VALUE:
        return getValue();
      case KimPackage.CONTEXTUALIZATION__DISCRETIZATION:
        return isDiscretization();
      case KimPackage.CONTEXTUALIZATION__CLASSIFICATION:
        return getClassification();
      case KimPackage.CONTEXTUALIZATION__LOOKUP_TABLE:
        return getLookupTable();
      case KimPackage.CONTEXTUALIZATION__CLASSIFICATION_PROPERTY:
        return getClassificationProperty();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case KimPackage.CONTEXTUALIZATION__VALUE:
        setValue((ValueAssignment)newValue);
        return;
      case KimPackage.CONTEXTUALIZATION__DISCRETIZATION:
        setDiscretization((Boolean)newValue);
        return;
      case KimPackage.CONTEXTUALIZATION__CLASSIFICATION:
        setClassification((Classification)newValue);
        return;
      case KimPackage.CONTEXTUALIZATION__LOOKUP_TABLE:
        setLookupTable((LookupTable)newValue);
        return;
      case KimPackage.CONTEXTUALIZATION__CLASSIFICATION_PROPERTY:
        setClassificationProperty((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case KimPackage.CONTEXTUALIZATION__VALUE:
        setValue((ValueAssignment)null);
        return;
      case KimPackage.CONTEXTUALIZATION__DISCRETIZATION:
        setDiscretization(DISCRETIZATION_EDEFAULT);
        return;
      case KimPackage.CONTEXTUALIZATION__CLASSIFICATION:
        setClassification((Classification)null);
        return;
      case KimPackage.CONTEXTUALIZATION__LOOKUP_TABLE:
        setLookupTable((LookupTable)null);
        return;
      case KimPackage.CONTEXTUALIZATION__CLASSIFICATION_PROPERTY:
        setClassificationProperty(CLASSIFICATION_PROPERTY_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case KimPackage.CONTEXTUALIZATION__VALUE:
        return value != null;
      case KimPackage.CONTEXTUALIZATION__DISCRETIZATION:
        return discretization != DISCRETIZATION_EDEFAULT;
      case KimPackage.CONTEXTUALIZATION__CLASSIFICATION:
        return classification != null;
      case KimPackage.CONTEXTUALIZATION__LOOKUP_TABLE:
        return lookupTable != null;
      case KimPackage.CONTEXTUALIZATION__CLASSIFICATION_PROPERTY:
        return CLASSIFICATION_PROPERTY_EDEFAULT == null ? classificationProperty != null : !CLASSIFICATION_PROPERTY_EDEFAULT.equals(classificationProperty);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (discretization: ");
    result.append(discretization);
    result.append(", classificationProperty: ");
    result.append(classificationProperty);
    result.append(')');
    return result.toString();
  }

} //ContextualizationImpl
