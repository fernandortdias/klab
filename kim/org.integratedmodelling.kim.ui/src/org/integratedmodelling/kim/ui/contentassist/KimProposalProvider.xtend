/*
 * generated by Xtext 2.9.1
 */
package org.integratedmodelling.kim.ui.contentassist

import java.util.Collection
import org.eclipse.emf.ecore.EObject
import org.eclipse.xtext.RuleCall
import org.eclipse.xtext.ui.editor.contentassist.ContentAssistContext
import org.eclipse.xtext.ui.editor.contentassist.ICompletionProposalAcceptor
import org.integratedmodelling.kim.kdecl.Function
import org.integratedmodelling.kim.ui.elink.ConceptHelper
import org.integratedmodelling.kim.ui.elink.FunctionParameterHelper

/**
 * See https://www.eclipse.org/Xtext/documentation/304_ide_concepts.html#content-assist
 * on how to customize the content assistant.
 */
class KimProposalProvider extends AbstractKimProposalProvider {
	
	private static FunctionParameterHelper functionHelper;
	private static ConceptHelper conceptHelper;
	
	def static void setFunctionParameterHelper(FunctionParameterHelper functionHelper) {
		KimProposalProvider.functionHelper = functionHelper;
	}
	
	def static void setConceptHelper(ConceptHelper functionHelper) {
		KimProposalProvider.conceptHelper = functionHelper;
	}

//	override complete_ValidID(EObject model, RuleCall ruleCall, ContentAssistContext context,
//		ICompletionProposalAcceptor acceptor) {
//		/*
//		 * check context and behave accordingly; then call action handler with
//		 * context of application.
//		 */
//		 if (conceptHelper != null) {
////		println("ZIOPORCO " + model + " rule " + ruleCall + " context " + context);	
//		 }
//	}

	override complete_Function(EObject model, RuleCall ruleCall, ContentAssistContext context,
		ICompletionProposalAcceptor acceptor) {

		if (model instanceof Function) {
			var function = (model as Function).getName();
			if (functionHelper !== null) {
				for (Collection<String> parameter : functionHelper.getParameterProposals(function)) {
					acceptor.accept(createCompletionProposal(parameter.get(0), parameter.get(1), /* image */null, context));
				}			
			}
		}
	}
}
