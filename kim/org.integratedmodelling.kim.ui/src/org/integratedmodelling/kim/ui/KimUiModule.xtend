/*
 * generated by Xtext 2.9.1
 */
package org.integratedmodelling.kim.ui

import com.google.inject.Binder
import com.google.inject.Provider
import org.eclipse.jface.text.hyperlink.IHyperlinkDetector
import org.eclipse.xtend.lib.annotations.FinalFieldsConstructor
import org.eclipse.xtext.documentation.IEObjectDocumentationProvider
import org.eclipse.xtext.ide.editor.syntaxcoloring.ISemanticHighlightingCalculator
import org.eclipse.xtext.resource.containers.IAllContainersState
import org.eclipse.xtext.ui.editor.IXtextEditorCallback
import org.eclipse.xtext.ui.editor.contentassist.ICompletionProposalAcceptor
import org.eclipse.xtext.ui.editor.hover.IEObjectHoverProvider
import org.eclipse.xtext.ui.editor.hyperlinking.IHyperlinkHelper
import org.eclipse.xtext.ui.editor.model.IResourceForEditorInputFactory
import org.eclipse.xtext.ui.editor.syntaxcoloring.AbstractAntlrTokenToAttributeIdMapper
import org.eclipse.xtext.ui.editor.syntaxcoloring.IHighlightingConfiguration
import org.eclipse.xtext.ui.resource.IResourceSetProvider
import org.eclipse.xtext.ui.resource.SimpleResourceSetProvider
import org.eclipse.xtext.ui.shared.Access
import org.integratedmodelling.kim.ui.contentassist.KimDocumentationProvider
import org.integratedmodelling.kim.ui.contentassist.KimHoverProvider
import org.integratedmodelling.kim.ui.contentassist.KimNatureAddingEditorCallback
import org.integratedmodelling.kim.ui.contentassist.KimProposalAcceptor
import org.integratedmodelling.kim.ui.elink.KimHighlightingCalculator
import org.integratedmodelling.kim.ui.elink.KimHighlightingConfiguration
import org.integratedmodelling.kim.ui.elink.KimHyperlinkHelper
import org.integratedmodelling.kim.ui.elink.KimJavaClassPathResourceForIEditorInputFactory
import org.integratedmodelling.kim.ui.elink.KimLinkDetector
import org.integratedmodelling.kim.ui.elink.KimSyntaxHighlighter

/**
 * Use this class to register components to be used within the Eclipse IDE.
 */
@FinalFieldsConstructor
class KimUiModule extends AbstractKimUiModule {

	override configure(Binder binder) {
		super.configure(binder)
	}

	override Provider<IAllContainersState> provideIAllContainersState() {
		return Access.getJavaProjectsState()
	}

	override Class<? extends IHyperlinkDetector> bindIHyperlinkDetector() {
		return typeof(KimLinkDetector);
	}

	def Class<? extends IHyperlinkHelper> bindIHyperlinkHelper() {
		return typeof(KimHyperlinkHelper);
	}

	def Class<? extends ISemanticHighlightingCalculator> bindISemanticHighlightingCalculator() {
		return typeof(KimHighlightingCalculator);
	}

	def Class<? extends AbstractAntlrTokenToAttributeIdMapper> bindAbstractAntlrTokenToAttributeIdMapper() {
		return typeof(KimSyntaxHighlighter)
	}

	override Class<? extends IResourceSetProvider> bindIResourceSetProvider() {
		return typeof(SimpleResourceSetProvider);
	}

	override Class<? extends IResourceForEditorInputFactory> bindIResourceForEditorInputFactory() {
		return typeof(KimJavaClassPathResourceForIEditorInputFactory);
	}

	override Class<? extends IXtextEditorCallback> bindIXtextEditorCallback() {
		return typeof(KimNatureAddingEditorCallback);
	}

// this does not do anything - but not adding @Inject to the acceptor does cause error
	def Class<? extends ICompletionProposalAcceptor> bindICompletionProposalAcceptor() {
		return typeof(KimProposalAcceptor);
	}

// this does not do anything - but not adding @Inject to the acceptor does cause errors
	def Class<? extends ICompletionProposalAcceptor.Delegate> bindICompletionProposalAcceptorDelegate() {
		return typeof(KimProposalAcceptor);
	}

	def Class<? extends IHighlightingConfiguration> bindIHighlightingConfiguration() {
		return typeof(KimHighlightingConfiguration);
	}

	def Class<? extends IEObjectHoverProvider> bindIEObjectHoverProvider() {
		return typeof(KimHoverProvider)
	}

	def Class<? extends IEObjectDocumentationProvider> bindIEObjectDocumentationProvider() {
		return typeof(KimDocumentationProvider)
	}
}
