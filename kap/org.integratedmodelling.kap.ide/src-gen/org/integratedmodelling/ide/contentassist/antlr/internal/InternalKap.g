/*
 * generated by Xtext 2.19.0
 */
grammar InternalKap;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
}

@lexer::header {
package org.integratedmodelling.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.integratedmodelling.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.integratedmodelling.services.KapGrammarAccess;

}
@parser::members {
	private KapGrammarAccess grammarAccess;

	public void setGrammarAccess(KapGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getGroup()); }
		(rule__Model__Group__0)
		{ after(grammarAccess.getModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePreamble
entryRulePreamble
:
{ before(grammarAccess.getPreambleRule()); }
	 rulePreamble
{ after(grammarAccess.getPreambleRule()); } 
	 EOF 
;

// Rule Preamble
rulePreamble 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPreambleAccess().getGroup()); }
		(rule__Preamble__Group__0)
		{ after(grammarAccess.getPreambleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDefinition
entryRuleDefinition
:
{ before(grammarAccess.getDefinitionRule()); }
	 ruleDefinition
{ after(grammarAccess.getDefinitionRule()); } 
	 EOF 
;

// Rule Definition
ruleDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDefinitionAccess().getGroup()); }
		(rule__Definition__Group__0)
		{ after(grammarAccess.getDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArgumentDeclaration
entryRuleArgumentDeclaration
:
{ before(grammarAccess.getArgumentDeclarationRule()); }
	 ruleArgumentDeclaration
{ after(grammarAccess.getArgumentDeclarationRule()); } 
	 EOF 
;

// Rule ArgumentDeclaration
ruleArgumentDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArgumentDeclarationAccess().getGroup()); }
		(rule__ArgumentDeclaration__Group__0)
		{ after(grammarAccess.getArgumentDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameterList
entryRuleParameterList
:
{ before(grammarAccess.getParameterListRule()); }
	 ruleParameterList
{ after(grammarAccess.getParameterListRule()); } 
	 EOF 
;

// Rule ParameterList
ruleParameterList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterListAccess().getGroup()); }
		(rule__ParameterList__Group__0)
		{ after(grammarAccess.getParameterListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleKeyValuePair
entryRuleKeyValuePair
:
{ before(grammarAccess.getKeyValuePairRule()); }
	 ruleKeyValuePair
{ after(grammarAccess.getKeyValuePairRule()); } 
	 EOF 
;

// Rule KeyValuePair
ruleKeyValuePair 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getKeyValuePairAccess().getGroup()); }
		(rule__KeyValuePair__Group__0)
		{ after(grammarAccess.getKeyValuePairAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValue
entryRuleValue
:
{ before(grammarAccess.getValueRule()); }
	 ruleValue
{ after(grammarAccess.getValueRule()); } 
	 EOF 
;

// Rule Value
ruleValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValueAccess().getAlternatives()); }
		(rule__Value__Alternatives)
		{ after(grammarAccess.getValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLiteral
entryRuleLiteral
:
{ before(grammarAccess.getLiteralRule()); }
	 ruleLiteral
{ after(grammarAccess.getLiteralRule()); } 
	 EOF 
;

// Rule Literal
ruleLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLiteralAccess().getAlternatives()); }
		(rule__Literal__Alternatives)
		{ after(grammarAccess.getLiteralAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBody
entryRuleBody
:
{ before(grammarAccess.getBodyRule()); }
	 ruleBody
{ after(grammarAccess.getBodyRule()); } 
	 EOF 
;

// Rule Body
ruleBody 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBodyAccess().getAlternatives()); }
		(rule__Body__Alternatives)
		{ after(grammarAccess.getBodyAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStatement
entryRuleStatement
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementAccess().getAlternatives()); }
		(rule__Statement__Alternatives)
		{ after(grammarAccess.getStatementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIfStatement
entryRuleIfStatement
:
{ before(grammarAccess.getIfStatementRule()); }
	 ruleIfStatement
{ after(grammarAccess.getIfStatementRule()); } 
	 EOF 
;

// Rule IfStatement
ruleIfStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIfStatementAccess().getGroup()); }
		(rule__IfStatement__Group__0)
		{ after(grammarAccess.getIfStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIfBody
entryRuleIfBody
:
{ before(grammarAccess.getIfBodyRule()); }
	 ruleIfBody
{ after(grammarAccess.getIfBodyRule()); } 
	 EOF 
;

// Rule IfBody
ruleIfBody 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIfBodyAccess().getAlternatives()); }
		(rule__IfBody__Alternatives)
		{ after(grammarAccess.getIfBodyAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCall
entryRuleCall
:
{ before(grammarAccess.getCallRule()); }
	 ruleCall
{ after(grammarAccess.getCallRule()); } 
	 EOF 
;

// Rule Call
ruleCall 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCallAccess().getGroup()); }
		(rule__Call__Group__0)
		{ after(grammarAccess.getCallAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleActions
entryRuleActions
:
{ before(grammarAccess.getActionsRule()); }
	 ruleActions
{ after(grammarAccess.getActionsRule()); } 
	 EOF 
;

// Rule Actions
ruleActions 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getActionsAccess().getAlternatives()); }
		(rule__Actions__Alternatives)
		{ after(grammarAccess.getActionsAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMatch
entryRuleMatch
:
{ before(grammarAccess.getMatchRule()); }
	 ruleMatch
{ after(grammarAccess.getMatchRule()); } 
	 EOF 
;

// Rule Match
ruleMatch 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMatchAccess().getAlternatives()); }
		(rule__Match__Alternatives)
		{ after(grammarAccess.getMatchAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNumber
entryRuleNumber
:
{ before(grammarAccess.getNumberRule()); }
	 ruleNumber
{ after(grammarAccess.getNumberRule()); } 
	 EOF 
;

// Rule Number
ruleNumber 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumberAccess().getGroup()); }
		(rule__Number__Group__0)
		{ after(grammarAccess.getNumberAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDate
entryRuleDate
:
{ before(grammarAccess.getDateRule()); }
	 ruleDate
{ after(grammarAccess.getDateRule()); } 
	 EOF 
;

// Rule Date
ruleDate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDateAccess().getGroup()); }
		(rule__Date__Group__0)
		{ after(grammarAccess.getDateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyValuePair__Alternatives_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getKeyValuePairAccess().getInteractiveAssignment_0_1_0()); }
		(rule__KeyValuePair__InteractiveAssignment_0_1_0)
		{ after(grammarAccess.getKeyValuePairAccess().getInteractiveAssignment_0_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getKeyValuePairAccess().getEqualsSignKeyword_0_1_1()); }
		'='
		{ after(grammarAccess.getKeyValuePairAccess().getEqualsSignKeyword_0_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getArgvalueAssignment_0()); }
		(rule__Value__ArgvalueAssignment_0)
		{ after(grammarAccess.getValueAccess().getArgvalueAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getLiteralAssignment_1()); }
		(rule__Value__LiteralAssignment_1)
		{ after(grammarAccess.getValueAccess().getLiteralAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getIdAssignment_2()); }
		(rule__Value__IdAssignment_2)
		{ after(grammarAccess.getValueAccess().getIdAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getObservableAssignment_3()); }
		(rule__Value__ObservableAssignment_3)
		{ after(grammarAccess.getValueAccess().getObservableAssignment_3()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getExpressionAssignment_4()); }
		(rule__Value__ExpressionAssignment_4)
		{ after(grammarAccess.getValueAccess().getExpressionAssignment_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralAccess().getNumberAssignment_0()); }
		(rule__Literal__NumberAssignment_0)
		{ after(grammarAccess.getLiteralAccess().getNumberAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getGroup_1()); }
		(rule__Literal__Group_1__0)
		{ after(grammarAccess.getLiteralAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getStringAssignment_2()); }
		(rule__Literal__StringAssignment_2)
		{ after(grammarAccess.getLiteralAccess().getStringAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getDateAssignment_3()); }
		(rule__Literal__DateAssignment_3)
		{ after(grammarAccess.getLiteralAccess().getDateAssignment_3()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getBooleanAssignment_4()); }
		(rule__Literal__BooleanAssignment_4)
		{ after(grammarAccess.getLiteralAccess().getBooleanAssignment_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__BooleanAlternatives_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralAccess().getBooleanTrueKeyword_4_0_0()); }
		'true'
		{ after(grammarAccess.getLiteralAccess().getBooleanTrueKeyword_4_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getBooleanFalseKeyword_4_0_1()); }
		'false'
		{ after(grammarAccess.getLiteralAccess().getBooleanFalseKeyword_4_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBodyAccess().getGroup_0()); }
		(rule__Body__Group_0__0)
		{ after(grammarAccess.getBodyAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getBodyAccess().getGroup_1()); }
		(rule__Body__Group_1__0)
		{ after(grammarAccess.getBodyAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getCallAssignment_0()); }
		(rule__Statement__CallAssignment_0)
		{ after(grammarAccess.getStatementAccess().getCallAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getTextAssignment_1()); }
		(rule__Statement__TextAssignment_1)
		{ after(grammarAccess.getStatementAccess().getTextAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getIfAssignment_2()); }
		(rule__Statement__IfAssignment_2)
		{ after(grammarAccess.getStatementAccess().getIfAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getGroup_3()); }
		(rule__Statement__Group_3__0)
		{ after(grammarAccess.getStatementAccess().getGroup_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfBody__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfBodyAccess().getCallAssignment_0()); }
		(rule__IfBody__CallAssignment_0)
		{ after(grammarAccess.getIfBodyAccess().getCallAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getIfBodyAccess().getBodyAssignment_1()); }
		(rule__IfBody__BodyAssignment_1)
		{ after(grammarAccess.getIfBodyAccess().getBodyAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCallAccess().getGroup_2_0()); }
		(rule__Call__Group_2_0__0)
		{ after(grammarAccess.getCallAccess().getGroup_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getCallAccess().getSemicolonKeyword_2_1()); }
		';'
		{ after(grammarAccess.getCallAccess().getSemicolonKeyword_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actions__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionsAccess().getCallAssignment_0()); }
		(rule__Actions__CallAssignment_0)
		{ after(grammarAccess.getActionsAccess().getCallAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getActionsAccess().getBodyAssignment_1()); }
		(rule__Actions__BodyAssignment_1)
		{ after(grammarAccess.getActionsAccess().getBodyAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getActionsAccess().getMatchAssignment_2()); }
		(rule__Actions__MatchAssignment_2)
		{ after(grammarAccess.getActionsAccess().getMatchAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getActionsAccess().getGroup_3()); }
		(rule__Actions__Group_3__0)
		{ after(grammarAccess.getActionsAccess().getGroup_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMatchAccess().getGroup_0()); }
		(rule__Match__Group_0__0)
		{ after(grammarAccess.getMatchAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getMatchAccess().getGroup_1()); }
		(rule__Match__Group_1__0)
		{ after(grammarAccess.getMatchAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getMatchAccess().getGroup_2()); }
		(rule__Match__Group_2__0)
		{ after(grammarAccess.getMatchAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getMatchAccess().getGroup_3()); }
		(rule__Match__Group_3__0)
		{ after(grammarAccess.getMatchAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getMatchAccess().getGroup_4()); }
		(rule__Match__Group_4__0)
		{ after(grammarAccess.getMatchAccess().getGroup_4()); }
	)
	|
	(
		{ before(grammarAccess.getMatchAccess().getGroup_5()); }
		(rule__Match__Group_5__0)
		{ after(grammarAccess.getMatchAccess().getGroup_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberAccess().getPlusSignKeyword_0_0()); }
		'+'
		{ after(grammarAccess.getNumberAccess().getPlusSignKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getNumberAccess().getNegativeAssignment_0_1()); }
		(rule__Number__NegativeAssignment_0_1)
		{ after(grammarAccess.getNumberAccess().getNegativeAssignment_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__ExponentialAlternatives_4_0_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberAccess().getExponentialEKeyword_4_0_0_0_0()); }
		'e'
		{ after(grammarAccess.getNumberAccess().getExponentialEKeyword_4_0_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getNumberAccess().getExponentialEKeyword_4_0_0_0_1()); }
		'E'
		{ after(grammarAccess.getNumberAccess().getExponentialEKeyword_4_0_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Alternatives_4_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberAccess().getPlusSignKeyword_4_0_1_0()); }
		'+'
		{ after(grammarAccess.getNumberAccess().getPlusSignKeyword_4_0_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getNumberAccess().getExpNegativeAssignment_4_0_1_1()); }
		(rule__Number__ExpNegativeAssignment_4_0_1_1)
		{ after(grammarAccess.getNumberAccess().getExpNegativeAssignment_4_0_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDateAccess().getADKeyword_1_0()); }
		'AD'
		{ after(grammarAccess.getDateAccess().getADKeyword_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getDateAccess().getCEKeyword_1_1()); }
		'CE'
		{ after(grammarAccess.getDateAccess().getCEKeyword_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getDateAccess().getBcAssignment_1_2()); }
		(rule__Date__BcAssignment_1_2)
		{ after(grammarAccess.getDateAccess().getBcAssignment_1_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getModelAction_0()); }
	()
	{ after(grammarAccess.getModelAccess().getModelAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getPreambleAssignment_1()); }
	(rule__Model__PreambleAssignment_1)?
	{ after(grammarAccess.getModelAccess().getPreambleAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getDefinitionsAssignment_2()); }
	(rule__Model__DefinitionsAssignment_2)*
	{ after(grammarAccess.getModelAccess().getDefinitionsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Preamble__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Preamble__Group__0__Impl
	rule__Preamble__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreambleAccess().getNameKeyword_0()); }
	'name'
	{ after(grammarAccess.getPreambleAccess().getNameKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Preamble__Group__1__Impl
	rule__Preamble__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreambleAccess().getNameAssignment_1()); }
	(rule__Preamble__NameAssignment_1)
	{ after(grammarAccess.getPreambleAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Preamble__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreambleAccess().getUnorderedGroup_2()); }
	(rule__Preamble__UnorderedGroup_2)
	{ after(grammarAccess.getPreambleAccess().getUnorderedGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Preamble__Group_2_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Preamble__Group_2_0__0__Impl
	rule__Preamble__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__Group_2_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreambleAccess().getWorldviewKeyword_2_0_0()); }
	'worldview'
	{ after(grammarAccess.getPreambleAccess().getWorldviewKeyword_2_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__Group_2_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Preamble__Group_2_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__Group_2_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreambleAccess().getWorldviewAssignment_2_0_1()); }
	(rule__Preamble__WorldviewAssignment_2_0_1)
	{ after(grammarAccess.getPreambleAccess().getWorldviewAssignment_2_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Preamble__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Preamble__Group_2_1__0__Impl
	rule__Preamble__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreambleAccess().getPermissionsKeyword_2_1_0()); }
	'permissions'
	{ after(grammarAccess.getPreambleAccess().getPermissionsKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Preamble__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreambleAccess().getPermissionsAssignment_2_1_1()); }
	(rule__Preamble__PermissionsAssignment_2_1_1)
	{ after(grammarAccess.getPreambleAccess().getPermissionsAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Preamble__Group_2_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Preamble__Group_2_2__0__Impl
	rule__Preamble__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__Group_2_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreambleAccess().getAuthorKeyword_2_2_0()); }
	'author'
	{ after(grammarAccess.getPreambleAccess().getAuthorKeyword_2_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__Group_2_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Preamble__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__Group_2_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreambleAccess().getAuthorsAssignment_2_2_1()); }
	(rule__Preamble__AuthorsAssignment_2_2_1)
	{ after(grammarAccess.getPreambleAccess().getAuthorsAssignment_2_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Preamble__Group_2_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Preamble__Group_2_3__0__Impl
	rule__Preamble__Group_2_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__Group_2_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreambleAccess().getVersionKeyword_2_3_0()); }
	'version'
	{ after(grammarAccess.getPreambleAccess().getVersionKeyword_2_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__Group_2_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Preamble__Group_2_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__Group_2_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreambleAccess().getVersionAssignment_2_3_1()); }
	(rule__Preamble__VersionAssignment_2_3_1)
	{ after(grammarAccess.getPreambleAccess().getVersionAssignment_2_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group__0__Impl
	rule__Definition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getDefKeyword_0()); }
	'def'
	{ after(grammarAccess.getDefinitionAccess().getDefKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group__1__Impl
	rule__Definition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getNameAssignment_1()); }
	(rule__Definition__NameAssignment_1)
	{ after(grammarAccess.getDefinitionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group__2__Impl
	rule__Definition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getArgumentsAssignment_2()); }
	(rule__Definition__ArgumentsAssignment_2)?
	{ after(grammarAccess.getDefinitionAccess().getArgumentsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group__3__Impl
	rule__Definition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getColonKeyword_3()); }
	':'
	{ after(grammarAccess.getDefinitionAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getBodyAssignment_4()); }
	(rule__Definition__BodyAssignment_4)
	{ after(grammarAccess.getDefinitionAccess().getBodyAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArgumentDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgumentDeclaration__Group__0__Impl
	rule__ArgumentDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentDeclarationAccess().getArgumentDeclarationAction_0()); }
	()
	{ after(grammarAccess.getArgumentDeclarationAccess().getArgumentDeclarationAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgumentDeclaration__Group__1__Impl
	rule__ArgumentDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentDeclarationAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getArgumentDeclarationAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgumentDeclaration__Group__2__Impl
	rule__ArgumentDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentDeclarationAccess().getGroup_2()); }
	(rule__ArgumentDeclaration__Group_2__0)?
	{ after(grammarAccess.getArgumentDeclarationAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgumentDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentDeclarationAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getArgumentDeclarationAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArgumentDeclaration__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgumentDeclaration__Group_2__0__Impl
	rule__ArgumentDeclaration__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentDeclaration__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentDeclarationAccess().getIdsAssignment_2_0()); }
	(rule__ArgumentDeclaration__IdsAssignment_2_0)
	{ after(grammarAccess.getArgumentDeclarationAccess().getIdsAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentDeclaration__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgumentDeclaration__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentDeclaration__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentDeclarationAccess().getGroup_2_1()); }
	(rule__ArgumentDeclaration__Group_2_1__0)*
	{ after(grammarAccess.getArgumentDeclarationAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArgumentDeclaration__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgumentDeclaration__Group_2_1__0__Impl
	rule__ArgumentDeclaration__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentDeclaration__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentDeclarationAccess().getCommaKeyword_2_1_0()); }
	','
	{ after(grammarAccess.getArgumentDeclarationAccess().getCommaKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentDeclaration__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgumentDeclaration__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentDeclaration__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentDeclarationAccess().getIdsAssignment_2_1_1()); }
	(rule__ArgumentDeclaration__IdsAssignment_2_1_1)
	{ after(grammarAccess.getArgumentDeclarationAccess().getIdsAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group__0__Impl
	rule__ParameterList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getPairsAssignment_0()); }
	(rule__ParameterList__PairsAssignment_0)
	{ after(grammarAccess.getParameterListAccess().getPairsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getGroup_1()); }
	(rule__ParameterList__Group_1__0)*
	{ after(grammarAccess.getParameterListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group_1__0__Impl
	rule__ParameterList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getCommaKeyword_1_0()); }
	(',')
	{ after(grammarAccess.getParameterListAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getPairsAssignment_1_1()); }
	(rule__ParameterList__PairsAssignment_1_1)
	{ after(grammarAccess.getParameterListAccess().getPairsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__KeyValuePair__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__KeyValuePair__Group__0__Impl
	rule__KeyValuePair__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyValuePair__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeyValuePairAccess().getGroup_0()); }
	(rule__KeyValuePair__Group_0__0)?
	{ after(grammarAccess.getKeyValuePairAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyValuePair__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__KeyValuePair__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyValuePair__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeyValuePairAccess().getValueAssignment_1()); }
	(rule__KeyValuePair__ValueAssignment_1)
	{ after(grammarAccess.getKeyValuePairAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__KeyValuePair__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__KeyValuePair__Group_0__0__Impl
	rule__KeyValuePair__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyValuePair__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeyValuePairAccess().getNameAssignment_0_0()); }
	(rule__KeyValuePair__NameAssignment_0_0)
	{ after(grammarAccess.getKeyValuePairAccess().getNameAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyValuePair__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__KeyValuePair__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyValuePair__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeyValuePairAccess().getAlternatives_0_1()); }
	(rule__KeyValuePair__Alternatives_0_1)
	{ after(grammarAccess.getKeyValuePairAccess().getAlternatives_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Literal__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Literal__Group_1__0__Impl
	rule__Literal__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralAccess().getFromAssignment_1_0()); }
	(rule__Literal__FromAssignment_1_0)
	{ after(grammarAccess.getLiteralAccess().getFromAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Literal__Group_1__1__Impl
	rule__Literal__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralAccess().getToKeyword_1_1()); }
	'to'
	{ after(grammarAccess.getLiteralAccess().getToKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Literal__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralAccess().getToAssignment_1_2()); }
	(rule__Literal__ToAssignment_1_2)
	{ after(grammarAccess.getLiteralAccess().getToAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Body__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Body__Group_0__0__Impl
	rule__Body__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBodyAccess().getBodyAction_0_0()); }
	()
	{ after(grammarAccess.getBodyAccess().getBodyAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Body__Group_0__1__Impl
	rule__Body__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBodyAccess().getListAssignment_0_1()); }
	(rule__Body__ListAssignment_0_1)
	{ after(grammarAccess.getBodyAccess().getListAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Body__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBodyAccess().getListAssignment_0_2()); }
	(rule__Body__ListAssignment_0_2)*
	{ after(grammarAccess.getBodyAccess().getListAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Body__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Body__Group_1__0__Impl
	rule__Body__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBodyAccess().getIsgroupAssignment_1_0()); }
	(rule__Body__IsgroupAssignment_1_0)
	{ after(grammarAccess.getBodyAccess().getIsgroupAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Body__Group_1__1__Impl
	rule__Body__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBodyAccess().getGroup_1_1()); }
	(rule__Body__Group_1_1__0)?
	{ after(grammarAccess.getBodyAccess().getGroup_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Body__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBodyAccess().getRightParenthesisKeyword_1_2()); }
	')'
	{ after(grammarAccess.getBodyAccess().getRightParenthesisKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Body__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Body__Group_1_1__0__Impl
	rule__Body__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBodyAccess().getGroupAssignment_1_1_0()); }
	(rule__Body__GroupAssignment_1_1_0)
	{ after(grammarAccess.getBodyAccess().getGroupAssignment_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Body__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBodyAccess().getGroupAssignment_1_1_1()); }
	(rule__Body__GroupAssignment_1_1_1)*
	{ after(grammarAccess.getBodyAccess().getGroupAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_3__0__Impl
	rule__Statement__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getLeftParenthesisKeyword_3_0()); }
	'('
	{ after(grammarAccess.getStatementAccess().getLeftParenthesisKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_3__1__Impl
	rule__Statement__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getGroupAssignment_3_1()); }
	(rule__Statement__GroupAssignment_3_1)
	{ after(grammarAccess.getStatementAccess().getGroupAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_3__2__Impl
	rule__Statement__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getGroupAssignment_3_2()); }
	(rule__Statement__GroupAssignment_3_2)*
	{ after(grammarAccess.getStatementAccess().getGroupAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getRightParenthesisKeyword_3_3()); }
	')'
	{ after(grammarAccess.getStatementAccess().getRightParenthesisKeyword_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__0__Impl
	rule__IfStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getIfKeyword_0()); }
	'if'
	{ after(grammarAccess.getIfStatementAccess().getIfKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__1__Impl
	rule__IfStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getExpressionAssignment_1()); }
	(rule__IfStatement__ExpressionAssignment_1)
	{ after(grammarAccess.getIfStatementAccess().getExpressionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__2__Impl
	rule__IfStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getBodyAssignment_2()); }
	(rule__IfStatement__BodyAssignment_2)
	{ after(grammarAccess.getIfStatementAccess().getBodyAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__3__Impl
	rule__IfStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getGroup_3()); }
	(rule__IfStatement__Group_3__0)*
	{ after(grammarAccess.getIfStatementAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getGroup_4()); }
	(rule__IfStatement__Group_4__0)?
	{ after(grammarAccess.getIfStatementAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group_3__0__Impl
	rule__IfStatement__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getElseKeyword_3_0()); }
	'else'
	{ after(grammarAccess.getIfStatementAccess().getElseKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group_3__1__Impl
	rule__IfStatement__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getIfKeyword_3_1()); }
	'if'
	{ after(grammarAccess.getIfStatementAccess().getIfKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group_3__2__Impl
	rule__IfStatement__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getElseIfExpressionAssignment_3_2()); }
	(rule__IfStatement__ElseIfExpressionAssignment_3_2)
	{ after(grammarAccess.getIfStatementAccess().getElseIfExpressionAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getElseIfCallAssignment_3_3()); }
	(rule__IfStatement__ElseIfCallAssignment_3_3)
	{ after(grammarAccess.getIfStatementAccess().getElseIfCallAssignment_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group_4__0__Impl
	rule__IfStatement__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getElseKeyword_4_0()); }
	'else'
	{ after(grammarAccess.getIfStatementAccess().getElseKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getElseCallAssignment_4_1()); }
	(rule__IfStatement__ElseCallAssignment_4_1)
	{ after(grammarAccess.getIfStatementAccess().getElseCallAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Call__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Call__Group__0__Impl
	rule__Call__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallAccess().getNameAssignment_0()); }
	(rule__Call__NameAssignment_0)
	{ after(grammarAccess.getCallAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Call__Group__1__Impl
	rule__Call__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallAccess().getGroup_1()); }
	(rule__Call__Group_1__0)?
	{ after(grammarAccess.getCallAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Call__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallAccess().getAlternatives_2()); }
	(rule__Call__Alternatives_2)?
	{ after(grammarAccess.getCallAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Call__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Call__Group_1__0__Impl
	rule__Call__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallAccess().getLeftParenthesisKeyword_1_0()); }
	'('
	{ after(grammarAccess.getCallAccess().getLeftParenthesisKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Call__Group_1__1__Impl
	rule__Call__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallAccess().getParametersAssignment_1_1()); }
	(rule__Call__ParametersAssignment_1_1)?
	{ after(grammarAccess.getCallAccess().getParametersAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Call__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallAccess().getRightParenthesisKeyword_1_2()); }
	')'
	{ after(grammarAccess.getCallAccess().getRightParenthesisKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Call__Group_2_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Call__Group_2_0__0__Impl
	rule__Call__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group_2_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallAccess().getColonKeyword_2_0_0()); }
	':'
	{ after(grammarAccess.getCallAccess().getColonKeyword_2_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group_2_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Call__Group_2_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group_2_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallAccess().getActionsAssignment_2_0_1()); }
	(rule__Call__ActionsAssignment_2_0_1)
	{ after(grammarAccess.getCallAccess().getActionsAssignment_2_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Actions__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actions__Group_3__0__Impl
	rule__Actions__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Actions__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionsAccess().getLeftParenthesisKeyword_3_0()); }
	'('
	{ after(grammarAccess.getActionsAccess().getLeftParenthesisKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actions__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actions__Group_3__1__Impl
	rule__Actions__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Actions__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionsAccess().getMatchesAssignment_3_1()); }
	(rule__Actions__MatchesAssignment_3_1)
	{ after(grammarAccess.getActionsAccess().getMatchesAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actions__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actions__Group_3__2__Impl
	rule__Actions__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Actions__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionsAccess().getMatchesAssignment_3_2()); }
	(rule__Actions__MatchesAssignment_3_2)*
	{ after(grammarAccess.getActionsAccess().getMatchesAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actions__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actions__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Actions__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionsAccess().getRightParenthesisKeyword_3_3()); }
	')'
	{ after(grammarAccess.getActionsAccess().getRightParenthesisKeyword_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Match__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Match__Group_0__0__Impl
	rule__Match__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchAccess().getIdAssignment_0_0()); }
	(rule__Match__IdAssignment_0_0)
	{ after(grammarAccess.getMatchAccess().getIdAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Match__Group_0__1__Impl
	rule__Match__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchAccess().getHyphenMinusGreaterThanSignKeyword_0_1()); }
	'->'
	{ after(grammarAccess.getMatchAccess().getHyphenMinusGreaterThanSignKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Match__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchAccess().getBodyAssignment_0_2()); }
	(rule__Match__BodyAssignment_0_2)
	{ after(grammarAccess.getMatchAccess().getBodyAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Match__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Match__Group_1__0__Impl
	rule__Match__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchAccess().getRegexpAssignment_1_0()); }
	(rule__Match__RegexpAssignment_1_0)
	{ after(grammarAccess.getMatchAccess().getRegexpAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Match__Group_1__1__Impl
	rule__Match__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchAccess().getHyphenMinusGreaterThanSignKeyword_1_1()); }
	'->'
	{ after(grammarAccess.getMatchAccess().getHyphenMinusGreaterThanSignKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Match__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchAccess().getBodyAssignment_1_2()); }
	(rule__Match__BodyAssignment_1_2)
	{ after(grammarAccess.getMatchAccess().getBodyAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Match__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Match__Group_2__0__Impl
	rule__Match__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchAccess().getObservableAssignment_2_0()); }
	(rule__Match__ObservableAssignment_2_0)
	{ after(grammarAccess.getMatchAccess().getObservableAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Match__Group_2__1__Impl
	rule__Match__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchAccess().getHyphenMinusGreaterThanSignKeyword_2_1()); }
	'->'
	{ after(grammarAccess.getMatchAccess().getHyphenMinusGreaterThanSignKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Match__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchAccess().getBodyAssignment_2_2()); }
	(rule__Match__BodyAssignment_2_2)
	{ after(grammarAccess.getMatchAccess().getBodyAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Match__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Match__Group_3__0__Impl
	rule__Match__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchAccess().getLiteralAssignment_3_0()); }
	(rule__Match__LiteralAssignment_3_0)
	{ after(grammarAccess.getMatchAccess().getLiteralAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Match__Group_3__1__Impl
	rule__Match__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchAccess().getHyphenMinusGreaterThanSignKeyword_3_1()); }
	'->'
	{ after(grammarAccess.getMatchAccess().getHyphenMinusGreaterThanSignKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Match__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchAccess().getBodyAssignment_3_2()); }
	(rule__Match__BodyAssignment_3_2)
	{ after(grammarAccess.getMatchAccess().getBodyAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Match__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Match__Group_4__0__Impl
	rule__Match__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchAccess().getTextAssignment_4_0()); }
	(rule__Match__TextAssignment_4_0)
	{ after(grammarAccess.getMatchAccess().getTextAssignment_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Match__Group_4__1__Impl
	rule__Match__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchAccess().getHyphenMinusGreaterThanSignKeyword_4_1()); }
	'->'
	{ after(grammarAccess.getMatchAccess().getHyphenMinusGreaterThanSignKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Match__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchAccess().getBodyAssignment_4_2()); }
	(rule__Match__BodyAssignment_4_2)
	{ after(grammarAccess.getMatchAccess().getBodyAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Match__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Match__Group_5__0__Impl
	rule__Match__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchAccess().getArgumentsAssignment_5_0()); }
	(rule__Match__ArgumentsAssignment_5_0)
	{ after(grammarAccess.getMatchAccess().getArgumentsAssignment_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Match__Group_5__1__Impl
	rule__Match__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchAccess().getHyphenMinusGreaterThanSignKeyword_5_1()); }
	'->'
	{ after(grammarAccess.getMatchAccess().getHyphenMinusGreaterThanSignKeyword_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Match__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchAccess().getBodyAssignment_5_2()); }
	(rule__Match__BodyAssignment_5_2)
	{ after(grammarAccess.getMatchAccess().getBodyAssignment_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Number__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Number__Group__0__Impl
	rule__Number__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberAccess().getAlternatives_0()); }
	(rule__Number__Alternatives_0)?
	{ after(grammarAccess.getNumberAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Number__Group__1__Impl
	rule__Number__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberAccess().getRealAssignment_1()); }
	(rule__Number__RealAssignment_1)
	{ after(grammarAccess.getNumberAccess().getRealAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Number__Group__2__Impl
	rule__Number__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberAccess().getLongAssignment_2()); }
	(rule__Number__LongAssignment_2)?
	{ after(grammarAccess.getNumberAccess().getLongAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Number__Group__3__Impl
	rule__Number__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberAccess().getGroup_3()); }
	(rule__Number__Group_3__0)?
	{ after(grammarAccess.getNumberAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Number__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberAccess().getGroup_4()); }
	(rule__Number__Group_4__0)?
	{ after(grammarAccess.getNumberAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Number__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Number__Group_3__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberAccess().getGroup_3_0()); }
	(rule__Number__Group_3_0__0)
	{ after(grammarAccess.getNumberAccess().getGroup_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Number__Group_3_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Number__Group_3_0__0__Impl
	rule__Number__Group_3_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group_3_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberAccess().getDecimalAssignment_3_0_0()); }
	(rule__Number__DecimalAssignment_3_0_0)
	{ after(grammarAccess.getNumberAccess().getDecimalAssignment_3_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group_3_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Number__Group_3_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group_3_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberAccess().getDecimalPartAssignment_3_0_1()); }
	(rule__Number__DecimalPartAssignment_3_0_1)
	{ after(grammarAccess.getNumberAccess().getDecimalPartAssignment_3_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Number__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Number__Group_4__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberAccess().getGroup_4_0()); }
	(rule__Number__Group_4_0__0)
	{ after(grammarAccess.getNumberAccess().getGroup_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Number__Group_4_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Number__Group_4_0__0__Impl
	rule__Number__Group_4_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group_4_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberAccess().getExponentialAssignment_4_0_0()); }
	(rule__Number__ExponentialAssignment_4_0_0)
	{ after(grammarAccess.getNumberAccess().getExponentialAssignment_4_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group_4_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Number__Group_4_0__1__Impl
	rule__Number__Group_4_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group_4_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberAccess().getAlternatives_4_0_1()); }
	(rule__Number__Alternatives_4_0_1)?
	{ after(grammarAccess.getNumberAccess().getAlternatives_4_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group_4_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Number__Group_4_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group_4_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberAccess().getExpAssignment_4_0_2()); }
	(rule__Number__ExpAssignment_4_0_2)
	{ after(grammarAccess.getNumberAccess().getExpAssignment_4_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Date__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Date__Group__0__Impl
	rule__Date__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateAccess().getYearAssignment_0()); }
	(rule__Date__YearAssignment_0)
	{ after(grammarAccess.getDateAccess().getYearAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Date__Group__1__Impl
	rule__Date__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateAccess().getAlternatives_1()); }
	(rule__Date__Alternatives_1)?
	{ after(grammarAccess.getDateAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Date__Group__2__Impl
	rule__Date__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateAccess().getHyphenMinusKeyword_2()); }
	'-'
	{ after(grammarAccess.getDateAccess().getHyphenMinusKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Date__Group__3__Impl
	rule__Date__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateAccess().getMonthAssignment_3()); }
	(rule__Date__MonthAssignment_3)
	{ after(grammarAccess.getDateAccess().getMonthAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Date__Group__4__Impl
	rule__Date__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateAccess().getHyphenMinusKeyword_4()); }
	'-'
	{ after(grammarAccess.getDateAccess().getHyphenMinusKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Date__Group__5__Impl
	rule__Date__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateAccess().getDayAssignment_5()); }
	(rule__Date__DayAssignment_5)
	{ after(grammarAccess.getDateAccess().getDayAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Date__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateAccess().getGroup_6()); }
	(rule__Date__Group_6__0)?
	{ after(grammarAccess.getDateAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Date__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Date__Group_6__0__Impl
	rule__Date__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateAccess().getHourAssignment_6_0()); }
	(rule__Date__HourAssignment_6_0)
	{ after(grammarAccess.getDateAccess().getHourAssignment_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Date__Group_6__1__Impl
	rule__Date__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateAccess().getColonKeyword_6_1()); }
	':'
	{ after(grammarAccess.getDateAccess().getColonKeyword_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group_6__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Date__Group_6__2__Impl
	rule__Date__Group_6__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group_6__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateAccess().getMinAssignment_6_2()); }
	(rule__Date__MinAssignment_6_2)
	{ after(grammarAccess.getDateAccess().getMinAssignment_6_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group_6__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Date__Group_6__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group_6__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateAccess().getGroup_6_3()); }
	(rule__Date__Group_6_3__0)?
	{ after(grammarAccess.getDateAccess().getGroup_6_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Date__Group_6_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Date__Group_6_3__0__Impl
	rule__Date__Group_6_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group_6_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateAccess().getColonKeyword_6_3_0()); }
	':'
	{ after(grammarAccess.getDateAccess().getColonKeyword_6_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group_6_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Date__Group_6_3__1__Impl
	rule__Date__Group_6_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group_6_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateAccess().getSecAssignment_6_3_1()); }
	(rule__Date__SecAssignment_6_3_1)
	{ after(grammarAccess.getDateAccess().getSecAssignment_6_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group_6_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Date__Group_6_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group_6_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateAccess().getGroup_6_3_2()); }
	(rule__Date__Group_6_3_2__0)?
	{ after(grammarAccess.getDateAccess().getGroup_6_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Date__Group_6_3_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Date__Group_6_3_2__0__Impl
	rule__Date__Group_6_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group_6_3_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateAccess().getFullStopKeyword_6_3_2_0()); }
	'.'
	{ after(grammarAccess.getDateAccess().getFullStopKeyword_6_3_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group_6_3_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Date__Group_6_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group_6_3_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateAccess().getMsAssignment_6_3_2_1()); }
	(rule__Date__MsAssignment_6_3_2_1)
	{ after(grammarAccess.getDateAccess().getMsAssignment_6_3_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Preamble__UnorderedGroup_2
	@init {
		int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getPreambleAccess().getUnorderedGroup_2());
	}
:
	rule__Preamble__UnorderedGroup_2__0
	?
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getPreambleAccess().getUnorderedGroup_2());
	restoreStackSize(stackSize);
}

rule__Preamble__UnorderedGroup_2__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
	}
:
		(
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getPreambleAccess().getUnorderedGroup_2(), 0)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getPreambleAccess().getUnorderedGroup_2(), 0);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getPreambleAccess().getGroup_2_0()); }
					(rule__Preamble__Group_2_0__0)
					{ after(grammarAccess.getPreambleAccess().getGroup_2_0()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getPreambleAccess().getUnorderedGroup_2(), 1)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getPreambleAccess().getUnorderedGroup_2(), 1);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getPreambleAccess().getGroup_2_1()); }
					(rule__Preamble__Group_2_1__0)
					{ after(grammarAccess.getPreambleAccess().getGroup_2_1()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getPreambleAccess().getUnorderedGroup_2(), 2)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getPreambleAccess().getUnorderedGroup_2(), 2);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getPreambleAccess().getGroup_2_2()); }
					(rule__Preamble__Group_2_2__0)
					{ after(grammarAccess.getPreambleAccess().getGroup_2_2()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getPreambleAccess().getUnorderedGroup_2(), 3)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getPreambleAccess().getUnorderedGroup_2(), 3);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getPreambleAccess().getGroup_2_3()); }
					(rule__Preamble__Group_2_3__0)
					{ after(grammarAccess.getPreambleAccess().getGroup_2_3()); }
				)
			)
		)
		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPreambleAccess().getUnorderedGroup_2());
	restoreStackSize(stackSize);
}

rule__Preamble__UnorderedGroup_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Preamble__UnorderedGroup_2__Impl
	rule__Preamble__UnorderedGroup_2__1?
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__UnorderedGroup_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Preamble__UnorderedGroup_2__Impl
	rule__Preamble__UnorderedGroup_2__2?
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__UnorderedGroup_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Preamble__UnorderedGroup_2__Impl
	rule__Preamble__UnorderedGroup_2__3?
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__UnorderedGroup_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Preamble__UnorderedGroup_2__Impl
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__PreambleAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getPreamblePreambleParserRuleCall_1_0()); }
		rulePreamble
		{ after(grammarAccess.getModelAccess().getPreamblePreambleParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__DefinitionsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getDefinitionsDefinitionParserRuleCall_2_0()); }
		ruleDefinition
		{ after(grammarAccess.getModelAccess().getDefinitionsDefinitionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPreambleAccess().getNameLOWERCASE_IDTerminalRuleCall_1_0()); }
		RULE_LOWERCASE_ID
		{ after(grammarAccess.getPreambleAccess().getNameLOWERCASE_IDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__WorldviewAssignment_2_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPreambleAccess().getWorldviewLOWERCASE_IDTerminalRuleCall_2_0_1_0()); }
		RULE_LOWERCASE_ID
		{ after(grammarAccess.getPreambleAccess().getWorldviewLOWERCASE_IDTerminalRuleCall_2_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__PermissionsAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPreambleAccess().getPermissionsSTRINGTerminalRuleCall_2_1_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getPreambleAccess().getPermissionsSTRINGTerminalRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__AuthorsAssignment_2_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPreambleAccess().getAuthorsSTRINGTerminalRuleCall_2_2_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getPreambleAccess().getAuthorsSTRINGTerminalRuleCall_2_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__VersionAssignment_2_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPreambleAccess().getVersionLOWERCASE_IDTerminalRuleCall_2_3_1_0()); }
		RULE_LOWERCASE_ID
		{ after(grammarAccess.getPreambleAccess().getVersionLOWERCASE_IDTerminalRuleCall_2_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionAccess().getNameLOWERCASE_IDTerminalRuleCall_1_0()); }
		RULE_LOWERCASE_ID
		{ after(grammarAccess.getDefinitionAccess().getNameLOWERCASE_IDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__ArgumentsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionAccess().getArgumentsArgumentDeclarationParserRuleCall_2_0()); }
		ruleArgumentDeclaration
		{ after(grammarAccess.getDefinitionAccess().getArgumentsArgumentDeclarationParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__BodyAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionAccess().getBodyBodyParserRuleCall_4_0()); }
		ruleBody
		{ after(grammarAccess.getDefinitionAccess().getBodyBodyParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentDeclaration__IdsAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentDeclarationAccess().getIdsLOWERCASE_IDTerminalRuleCall_2_0_0()); }
		RULE_LOWERCASE_ID
		{ after(grammarAccess.getArgumentDeclarationAccess().getIdsLOWERCASE_IDTerminalRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentDeclaration__IdsAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentDeclarationAccess().getIdsLOWERCASE_IDTerminalRuleCall_2_1_1_0()); }
		RULE_LOWERCASE_ID
		{ after(grammarAccess.getArgumentDeclarationAccess().getIdsLOWERCASE_IDTerminalRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__PairsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterListAccess().getPairsKeyValuePairParserRuleCall_0_0()); }
		ruleKeyValuePair
		{ after(grammarAccess.getParameterListAccess().getPairsKeyValuePairParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__PairsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterListAccess().getPairsKeyValuePairParserRuleCall_1_1_0()); }
		ruleKeyValuePair
		{ after(grammarAccess.getParameterListAccess().getPairsKeyValuePairParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyValuePair__NameAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getKeyValuePairAccess().getNameLOWERCASE_IDTerminalRuleCall_0_0_0()); }
		RULE_LOWERCASE_ID
		{ after(grammarAccess.getKeyValuePairAccess().getNameLOWERCASE_IDTerminalRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyValuePair__InteractiveAssignment_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getKeyValuePairAccess().getInteractiveEqualsSignQuestionMarkKeyword_0_1_0_0()); }
		(
			{ before(grammarAccess.getKeyValuePairAccess().getInteractiveEqualsSignQuestionMarkKeyword_0_1_0_0()); }
			'=?'
			{ after(grammarAccess.getKeyValuePairAccess().getInteractiveEqualsSignQuestionMarkKeyword_0_1_0_0()); }
		)
		{ after(grammarAccess.getKeyValuePairAccess().getInteractiveEqualsSignQuestionMarkKeyword_0_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyValuePair__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getKeyValuePairAccess().getValueValueParserRuleCall_1_0()); }
		ruleValue
		{ after(grammarAccess.getKeyValuePairAccess().getValueValueParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__ArgvalueAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getArgvalueARGVALUETerminalRuleCall_0_0()); }
		RULE_ARGVALUE
		{ after(grammarAccess.getValueAccess().getArgvalueARGVALUETerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__LiteralAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getLiteralLiteralParserRuleCall_1_0()); }
		ruleLiteral
		{ after(grammarAccess.getValueAccess().getLiteralLiteralParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__IdAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getIdLOWERCASE_IDTerminalRuleCall_2_0()); }
		RULE_LOWERCASE_ID
		{ after(grammarAccess.getValueAccess().getIdLOWERCASE_IDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__ObservableAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getObservableOBSERVABLETerminalRuleCall_3_0()); }
		RULE_OBSERVABLE
		{ after(grammarAccess.getValueAccess().getObservableOBSERVABLETerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__ExpressionAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getExpressionEXPRTerminalRuleCall_4_0()); }
		RULE_EXPR
		{ after(grammarAccess.getValueAccess().getExpressionEXPRTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__NumberAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralAccess().getNumberNumberParserRuleCall_0_0()); }
		ruleNumber
		{ after(grammarAccess.getLiteralAccess().getNumberNumberParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__FromAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralAccess().getFromNumberParserRuleCall_1_0_0()); }
		ruleNumber
		{ after(grammarAccess.getLiteralAccess().getFromNumberParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__ToAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralAccess().getToNumberParserRuleCall_1_2_0()); }
		ruleNumber
		{ after(grammarAccess.getLiteralAccess().getToNumberParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__StringAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralAccess().getStringSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getLiteralAccess().getStringSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__DateAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralAccess().getDateDateParserRuleCall_3_0()); }
		ruleDate
		{ after(grammarAccess.getLiteralAccess().getDateDateParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__BooleanAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralAccess().getBooleanAlternatives_4_0()); }
		(rule__Literal__BooleanAlternatives_4_0)
		{ after(grammarAccess.getLiteralAccess().getBooleanAlternatives_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__ListAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBodyAccess().getListStatementParserRuleCall_0_1_0()); }
		ruleStatement
		{ after(grammarAccess.getBodyAccess().getListStatementParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__ListAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBodyAccess().getListStatementParserRuleCall_0_2_0()); }
		ruleStatement
		{ after(grammarAccess.getBodyAccess().getListStatementParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__IsgroupAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBodyAccess().getIsgroupLeftParenthesisKeyword_1_0_0()); }
		(
			{ before(grammarAccess.getBodyAccess().getIsgroupLeftParenthesisKeyword_1_0_0()); }
			'('
			{ after(grammarAccess.getBodyAccess().getIsgroupLeftParenthesisKeyword_1_0_0()); }
		)
		{ after(grammarAccess.getBodyAccess().getIsgroupLeftParenthesisKeyword_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__GroupAssignment_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBodyAccess().getGroupStatementParserRuleCall_1_1_0_0()); }
		ruleStatement
		{ after(grammarAccess.getBodyAccess().getGroupStatementParserRuleCall_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__GroupAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBodyAccess().getGroupStatementParserRuleCall_1_1_1_0()); }
		ruleStatement
		{ after(grammarAccess.getBodyAccess().getGroupStatementParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__CallAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getCallCallParserRuleCall_0_0()); }
		ruleCall
		{ after(grammarAccess.getStatementAccess().getCallCallParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__TextAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getTextEMBEDDEDTEXTTerminalRuleCall_1_0()); }
		RULE_EMBEDDEDTEXT
		{ after(grammarAccess.getStatementAccess().getTextEMBEDDEDTEXTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__IfAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getIfIfStatementParserRuleCall_2_0()); }
		ruleIfStatement
		{ after(grammarAccess.getStatementAccess().getIfIfStatementParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__GroupAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getGroupStatementParserRuleCall_3_1_0()); }
		ruleStatement
		{ after(grammarAccess.getStatementAccess().getGroupStatementParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__GroupAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getGroupStatementParserRuleCall_3_2_0()); }
		ruleStatement
		{ after(grammarAccess.getStatementAccess().getGroupStatementParserRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__ExpressionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStatementAccess().getExpressionEXPRTerminalRuleCall_1_0()); }
		RULE_EXPR
		{ after(grammarAccess.getIfStatementAccess().getExpressionEXPRTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__BodyAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStatementAccess().getBodyIfBodyParserRuleCall_2_0()); }
		ruleIfBody
		{ after(grammarAccess.getIfStatementAccess().getBodyIfBodyParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__ElseIfExpressionAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStatementAccess().getElseIfExpressionEXPRTerminalRuleCall_3_2_0()); }
		RULE_EXPR
		{ after(grammarAccess.getIfStatementAccess().getElseIfExpressionEXPRTerminalRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__ElseIfCallAssignment_3_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStatementAccess().getElseIfCallIfBodyParserRuleCall_3_3_0()); }
		ruleIfBody
		{ after(grammarAccess.getIfStatementAccess().getElseIfCallIfBodyParserRuleCall_3_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__ElseCallAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStatementAccess().getElseCallIfBodyParserRuleCall_4_1_0()); }
		ruleIfBody
		{ after(grammarAccess.getIfStatementAccess().getElseCallIfBodyParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfBody__CallAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfBodyAccess().getCallCallParserRuleCall_0_0()); }
		ruleCall
		{ after(grammarAccess.getIfBodyAccess().getCallCallParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfBody__BodyAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfBodyAccess().getBodyBodyParserRuleCall_1_0()); }
		ruleBody
		{ after(grammarAccess.getIfBodyAccess().getBodyBodyParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCallAccess().getNameLOWERCASE_IDTerminalRuleCall_0_0()); }
		RULE_LOWERCASE_ID
		{ after(grammarAccess.getCallAccess().getNameLOWERCASE_IDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__ParametersAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCallAccess().getParametersParameterListParserRuleCall_1_1_0()); }
		ruleParameterList
		{ after(grammarAccess.getCallAccess().getParametersParameterListParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__ActionsAssignment_2_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCallAccess().getActionsActionsParserRuleCall_2_0_1_0()); }
		ruleActions
		{ after(grammarAccess.getCallAccess().getActionsActionsParserRuleCall_2_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actions__CallAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionsAccess().getCallCallParserRuleCall_0_0()); }
		ruleCall
		{ after(grammarAccess.getActionsAccess().getCallCallParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actions__BodyAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionsAccess().getBodyBodyParserRuleCall_1_0()); }
		ruleBody
		{ after(grammarAccess.getActionsAccess().getBodyBodyParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actions__MatchAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionsAccess().getMatchMatchParserRuleCall_2_0()); }
		ruleMatch
		{ after(grammarAccess.getActionsAccess().getMatchMatchParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actions__MatchesAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionsAccess().getMatchesMatchParserRuleCall_3_1_0()); }
		ruleMatch
		{ after(grammarAccess.getActionsAccess().getMatchesMatchParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actions__MatchesAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionsAccess().getMatchesMatchParserRuleCall_3_2_0()); }
		ruleMatch
		{ after(grammarAccess.getActionsAccess().getMatchesMatchParserRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__IdAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMatchAccess().getIdLOWERCASE_IDTerminalRuleCall_0_0_0()); }
		RULE_LOWERCASE_ID
		{ after(grammarAccess.getMatchAccess().getIdLOWERCASE_IDTerminalRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__BodyAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMatchAccess().getBodyBodyParserRuleCall_0_2_0()); }
		ruleBody
		{ after(grammarAccess.getMatchAccess().getBodyBodyParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__RegexpAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMatchAccess().getRegexpREGEXPTerminalRuleCall_1_0_0()); }
		RULE_REGEXP
		{ after(grammarAccess.getMatchAccess().getRegexpREGEXPTerminalRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__BodyAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMatchAccess().getBodyBodyParserRuleCall_1_2_0()); }
		ruleBody
		{ after(grammarAccess.getMatchAccess().getBodyBodyParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__ObservableAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMatchAccess().getObservableOBSERVABLETerminalRuleCall_2_0_0()); }
		RULE_OBSERVABLE
		{ after(grammarAccess.getMatchAccess().getObservableOBSERVABLETerminalRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__BodyAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMatchAccess().getBodyBodyParserRuleCall_2_2_0()); }
		ruleBody
		{ after(grammarAccess.getMatchAccess().getBodyBodyParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__LiteralAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMatchAccess().getLiteralLiteralParserRuleCall_3_0_0()); }
		ruleLiteral
		{ after(grammarAccess.getMatchAccess().getLiteralLiteralParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__BodyAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMatchAccess().getBodyBodyParserRuleCall_3_2_0()); }
		ruleBody
		{ after(grammarAccess.getMatchAccess().getBodyBodyParserRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__TextAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMatchAccess().getTextSTRINGTerminalRuleCall_4_0_0()); }
		RULE_STRING
		{ after(grammarAccess.getMatchAccess().getTextSTRINGTerminalRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__BodyAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMatchAccess().getBodyBodyParserRuleCall_4_2_0()); }
		ruleBody
		{ after(grammarAccess.getMatchAccess().getBodyBodyParserRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__ArgumentsAssignment_5_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMatchAccess().getArgumentsArgumentDeclarationParserRuleCall_5_0_0()); }
		ruleArgumentDeclaration
		{ after(grammarAccess.getMatchAccess().getArgumentsArgumentDeclarationParserRuleCall_5_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__BodyAssignment_5_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMatchAccess().getBodyBodyParserRuleCall_5_2_0()); }
		ruleBody
		{ after(grammarAccess.getMatchAccess().getBodyBodyParserRuleCall_5_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__NegativeAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberAccess().getNegativeHyphenMinusKeyword_0_1_0()); }
		(
			{ before(grammarAccess.getNumberAccess().getNegativeHyphenMinusKeyword_0_1_0()); }
			'-'
			{ after(grammarAccess.getNumberAccess().getNegativeHyphenMinusKeyword_0_1_0()); }
		)
		{ after(grammarAccess.getNumberAccess().getNegativeHyphenMinusKeyword_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__RealAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberAccess().getRealINTTerminalRuleCall_1_0()); }
		RULE_INT
		{ after(grammarAccess.getNumberAccess().getRealINTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__LongAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberAccess().getLongLKeyword_2_0()); }
		(
			{ before(grammarAccess.getNumberAccess().getLongLKeyword_2_0()); }
			'l'
			{ after(grammarAccess.getNumberAccess().getLongLKeyword_2_0()); }
		)
		{ after(grammarAccess.getNumberAccess().getLongLKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__DecimalAssignment_3_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberAccess().getDecimalFullStopKeyword_3_0_0_0()); }
		(
			{ before(grammarAccess.getNumberAccess().getDecimalFullStopKeyword_3_0_0_0()); }
			'.'
			{ after(grammarAccess.getNumberAccess().getDecimalFullStopKeyword_3_0_0_0()); }
		)
		{ after(grammarAccess.getNumberAccess().getDecimalFullStopKeyword_3_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__DecimalPartAssignment_3_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberAccess().getDecimalPartINTTerminalRuleCall_3_0_1_0()); }
		RULE_INT
		{ after(grammarAccess.getNumberAccess().getDecimalPartINTTerminalRuleCall_3_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__ExponentialAssignment_4_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberAccess().getExponentialAlternatives_4_0_0_0()); }
		(rule__Number__ExponentialAlternatives_4_0_0_0)
		{ after(grammarAccess.getNumberAccess().getExponentialAlternatives_4_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__ExpNegativeAssignment_4_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberAccess().getExpNegativeHyphenMinusKeyword_4_0_1_1_0()); }
		(
			{ before(grammarAccess.getNumberAccess().getExpNegativeHyphenMinusKeyword_4_0_1_1_0()); }
			'-'
			{ after(grammarAccess.getNumberAccess().getExpNegativeHyphenMinusKeyword_4_0_1_1_0()); }
		)
		{ after(grammarAccess.getNumberAccess().getExpNegativeHyphenMinusKeyword_4_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__ExpAssignment_4_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberAccess().getExpINTTerminalRuleCall_4_0_2_0()); }
		RULE_INT
		{ after(grammarAccess.getNumberAccess().getExpINTTerminalRuleCall_4_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__YearAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDateAccess().getYearINTTerminalRuleCall_0_0()); }
		RULE_INT
		{ after(grammarAccess.getDateAccess().getYearINTTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__BcAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDateAccess().getBcBCKeyword_1_2_0()); }
		(
			{ before(grammarAccess.getDateAccess().getBcBCKeyword_1_2_0()); }
			'BC'
			{ after(grammarAccess.getDateAccess().getBcBCKeyword_1_2_0()); }
		)
		{ after(grammarAccess.getDateAccess().getBcBCKeyword_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__MonthAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDateAccess().getMonthINTTerminalRuleCall_3_0()); }
		RULE_INT
		{ after(grammarAccess.getDateAccess().getMonthINTTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__DayAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDateAccess().getDayINTTerminalRuleCall_5_0()); }
		RULE_INT
		{ after(grammarAccess.getDateAccess().getDayINTTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__HourAssignment_6_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDateAccess().getHourINTTerminalRuleCall_6_0_0()); }
		RULE_INT
		{ after(grammarAccess.getDateAccess().getHourINTTerminalRuleCall_6_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__MinAssignment_6_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDateAccess().getMinINTTerminalRuleCall_6_2_0()); }
		RULE_INT
		{ after(grammarAccess.getDateAccess().getMinINTTerminalRuleCall_6_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__SecAssignment_6_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDateAccess().getSecINTTerminalRuleCall_6_3_1_0()); }
		RULE_INT
		{ after(grammarAccess.getDateAccess().getSecINTTerminalRuleCall_6_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__MsAssignment_6_3_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDateAccess().getMsINTTerminalRuleCall_6_3_2_1_0()); }
		RULE_INT
		{ after(grammarAccess.getDateAccess().getMsINTTerminalRuleCall_6_3_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_LOWERCASE_ID : 'a'..'z' ('a'..'z'|'0'..'9'|'_')*;

RULE_ARGVALUE : '$' ('0'..'9')*;

RULE_EXPR : '[' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|']'|'\\')|~(('\\'|']')))* ']';

RULE_EMBEDDEDTEXT : '%%%' (' '* '-')* '\r' ( options {greedy=false;} : . )*'%%%' (' '* '-')* '\r';

RULE_REGEXP : '%' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'%'|'\\')|~(('\\'|'%')))* '%';

RULE_OBSERVABLE : '{' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'\\')|~(('\\'|'}')))* '}';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
