/*
 * generated by Xtext 2.19.0
 */
package org.integratedmodelling.ui.labeling

import com.google.inject.Inject
import org.eclipse.emf.edit.ui.provider.AdapterFactoryLabelProvider
import org.eclipse.xtext.ui.label.DefaultEObjectLabelProvider
import org.integratedmodelling.kap.kap.Body
import org.integratedmodelling.kap.kap.Call
import org.integratedmodelling.kap.kap.Statement

/**
 * Provides labels for EObjects.
 * 
 * See https://www.eclipse.org/Xtext/documentation/304_ide_concepts.html#label-provider
 */
class KapLabelProvider extends DefaultEObjectLabelProvider {

	@Inject
	new(AdapterFactoryLabelProvider delegate) {
		super(delegate);
	}

	def text(Body body) {
		 if (body.isgroup) {
			'asynchronous group'
		} else if (body.list !== null && body.list.size > 0) {
			'synchronous list'
		} 
	}
	
	// temporary: must skip
	def text(Statement statement) {
		if (statement.group !== null && statement.group.size > 0) {
			'asynchronous group'
		} else if (statement.call !== null) {
			statement.call.name
		}
	}
	
	def text(Call call) {
		call.name
	}

// Labels and icons can be computed like this:
//	def text(Greeting ele) {
//		'A greeting to ' + ele.name
//	}
//
//	def image(Greeting ele) {
//		'Greeting.gif'
//	}
}
