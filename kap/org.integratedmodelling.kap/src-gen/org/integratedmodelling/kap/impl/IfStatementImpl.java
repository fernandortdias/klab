/**
 * generated by Xtext 2.19.0
 */
package org.integratedmodelling.kap.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EDataTypeEList;
import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.integratedmodelling.kap.IfBody;
import org.integratedmodelling.kap.IfStatement;
import org.integratedmodelling.kap.KapPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>If Statement</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.integratedmodelling.kap.impl.IfStatementImpl#getExpression <em>Expression</em>}</li>
 *   <li>{@link org.integratedmodelling.kap.impl.IfStatementImpl#getBody <em>Body</em>}</li>
 *   <li>{@link org.integratedmodelling.kap.impl.IfStatementImpl#getElseIfExpression <em>Else If Expression</em>}</li>
 *   <li>{@link org.integratedmodelling.kap.impl.IfStatementImpl#getElseIfCall <em>Else If Call</em>}</li>
 *   <li>{@link org.integratedmodelling.kap.impl.IfStatementImpl#getElseCall <em>Else Call</em>}</li>
 * </ul>
 *
 * @generated
 */
public class IfStatementImpl extends MinimalEObjectImpl.Container implements IfStatement
{
  /**
   * The default value of the '{@link #getExpression() <em>Expression</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExpression()
   * @generated
   * @ordered
   */
  protected static final String EXPRESSION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getExpression() <em>Expression</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExpression()
   * @generated
   * @ordered
   */
  protected String expression = EXPRESSION_EDEFAULT;

  /**
   * The cached value of the '{@link #getBody() <em>Body</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBody()
   * @generated
   * @ordered
   */
  protected IfBody body;

  /**
   * The cached value of the '{@link #getElseIfExpression() <em>Else If Expression</em>}' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getElseIfExpression()
   * @generated
   * @ordered
   */
  protected EList<String> elseIfExpression;

  /**
   * The cached value of the '{@link #getElseIfCall() <em>Else If Call</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getElseIfCall()
   * @generated
   * @ordered
   */
  protected EList<IfBody> elseIfCall;

  /**
   * The cached value of the '{@link #getElseCall() <em>Else Call</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getElseCall()
   * @generated
   * @ordered
   */
  protected IfBody elseCall;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected IfStatementImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return KapPackage.Literals.IF_STATEMENT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getExpression()
  {
    return expression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setExpression(String newExpression)
  {
    String oldExpression = expression;
    expression = newExpression;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KapPackage.IF_STATEMENT__EXPRESSION, oldExpression, expression));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public IfBody getBody()
  {
    return body;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetBody(IfBody newBody, NotificationChain msgs)
  {
    IfBody oldBody = body;
    body = newBody;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, KapPackage.IF_STATEMENT__BODY, oldBody, newBody);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setBody(IfBody newBody)
  {
    if (newBody != body)
    {
      NotificationChain msgs = null;
      if (body != null)
        msgs = ((InternalEObject)body).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - KapPackage.IF_STATEMENT__BODY, null, msgs);
      if (newBody != null)
        msgs = ((InternalEObject)newBody).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - KapPackage.IF_STATEMENT__BODY, null, msgs);
      msgs = basicSetBody(newBody, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KapPackage.IF_STATEMENT__BODY, newBody, newBody));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<String> getElseIfExpression()
  {
    if (elseIfExpression == null)
    {
      elseIfExpression = new EDataTypeEList<String>(String.class, this, KapPackage.IF_STATEMENT__ELSE_IF_EXPRESSION);
    }
    return elseIfExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<IfBody> getElseIfCall()
  {
    if (elseIfCall == null)
    {
      elseIfCall = new EObjectContainmentEList<IfBody>(IfBody.class, this, KapPackage.IF_STATEMENT__ELSE_IF_CALL);
    }
    return elseIfCall;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public IfBody getElseCall()
  {
    return elseCall;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetElseCall(IfBody newElseCall, NotificationChain msgs)
  {
    IfBody oldElseCall = elseCall;
    elseCall = newElseCall;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, KapPackage.IF_STATEMENT__ELSE_CALL, oldElseCall, newElseCall);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setElseCall(IfBody newElseCall)
  {
    if (newElseCall != elseCall)
    {
      NotificationChain msgs = null;
      if (elseCall != null)
        msgs = ((InternalEObject)elseCall).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - KapPackage.IF_STATEMENT__ELSE_CALL, null, msgs);
      if (newElseCall != null)
        msgs = ((InternalEObject)newElseCall).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - KapPackage.IF_STATEMENT__ELSE_CALL, null, msgs);
      msgs = basicSetElseCall(newElseCall, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KapPackage.IF_STATEMENT__ELSE_CALL, newElseCall, newElseCall));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case KapPackage.IF_STATEMENT__BODY:
        return basicSetBody(null, msgs);
      case KapPackage.IF_STATEMENT__ELSE_IF_CALL:
        return ((InternalEList<?>)getElseIfCall()).basicRemove(otherEnd, msgs);
      case KapPackage.IF_STATEMENT__ELSE_CALL:
        return basicSetElseCall(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case KapPackage.IF_STATEMENT__EXPRESSION:
        return getExpression();
      case KapPackage.IF_STATEMENT__BODY:
        return getBody();
      case KapPackage.IF_STATEMENT__ELSE_IF_EXPRESSION:
        return getElseIfExpression();
      case KapPackage.IF_STATEMENT__ELSE_IF_CALL:
        return getElseIfCall();
      case KapPackage.IF_STATEMENT__ELSE_CALL:
        return getElseCall();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case KapPackage.IF_STATEMENT__EXPRESSION:
        setExpression((String)newValue);
        return;
      case KapPackage.IF_STATEMENT__BODY:
        setBody((IfBody)newValue);
        return;
      case KapPackage.IF_STATEMENT__ELSE_IF_EXPRESSION:
        getElseIfExpression().clear();
        getElseIfExpression().addAll((Collection<? extends String>)newValue);
        return;
      case KapPackage.IF_STATEMENT__ELSE_IF_CALL:
        getElseIfCall().clear();
        getElseIfCall().addAll((Collection<? extends IfBody>)newValue);
        return;
      case KapPackage.IF_STATEMENT__ELSE_CALL:
        setElseCall((IfBody)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case KapPackage.IF_STATEMENT__EXPRESSION:
        setExpression(EXPRESSION_EDEFAULT);
        return;
      case KapPackage.IF_STATEMENT__BODY:
        setBody((IfBody)null);
        return;
      case KapPackage.IF_STATEMENT__ELSE_IF_EXPRESSION:
        getElseIfExpression().clear();
        return;
      case KapPackage.IF_STATEMENT__ELSE_IF_CALL:
        getElseIfCall().clear();
        return;
      case KapPackage.IF_STATEMENT__ELSE_CALL:
        setElseCall((IfBody)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case KapPackage.IF_STATEMENT__EXPRESSION:
        return EXPRESSION_EDEFAULT == null ? expression != null : !EXPRESSION_EDEFAULT.equals(expression);
      case KapPackage.IF_STATEMENT__BODY:
        return body != null;
      case KapPackage.IF_STATEMENT__ELSE_IF_EXPRESSION:
        return elseIfExpression != null && !elseIfExpression.isEmpty();
      case KapPackage.IF_STATEMENT__ELSE_IF_CALL:
        return elseIfCall != null && !elseIfCall.isEmpty();
      case KapPackage.IF_STATEMENT__ELSE_CALL:
        return elseCall != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (expression: ");
    result.append(expression);
    result.append(", elseIfExpression: ");
    result.append(elseIfExpression);
    result.append(')');
    return result.toString();
  }

} //IfStatementImpl
