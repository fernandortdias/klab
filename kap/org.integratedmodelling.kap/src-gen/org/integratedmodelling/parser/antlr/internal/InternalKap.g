/*
 * generated by Xtext 2.19.0
 */
grammar InternalKap;

options {
	superClass=AbstractInternalAntlrParser;
	backtrack=true;
}

@lexer::header {
package org.integratedmodelling.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.integratedmodelling.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.IUnorderedGroupHelper.UnorderedGroupState;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.integratedmodelling.services.KapGrammarAccess;

}

@parser::members {

/*
  This grammar contains a lot of empty actions to work around a bug in ANTLR.
  Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
*/

 	private KapGrammarAccess grammarAccess;

    public InternalKapParser(TokenStream input, KapGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected KapGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getModelAccess().getModelAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getPreamblePreambleParserRuleCall_1_0());
				}
				lv_preamble_1_0=rulePreamble
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					set(
						$current,
						"preamble",
						lv_preamble_1_0,
						"org.integratedmodelling.Kap.Preamble");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getDefinitionsDefinitionParserRuleCall_2_0());
				}
				lv_definitions_2_0=ruleDefinition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"definitions",
						lv_definitions_2_0,
						"org.integratedmodelling.Kap.Definition");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRulePreamble
entryRulePreamble returns [EObject current=null]@init {
	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
	grammarAccess.getPreambleAccess().getUnorderedGroup_2()
	);
}:
	{ newCompositeNode(grammarAccess.getPreambleRule()); }
	iv_rulePreamble=rulePreamble
	{ $current=$iv_rulePreamble.current; }
	EOF;
finally {
	myUnorderedGroupState.restore();
}

// Rule Preamble
rulePreamble returns [EObject current=null]
@init {
	enterRule();
	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
	grammarAccess.getPreambleAccess().getUnorderedGroup_2()
	);
}
@after {
	leaveRule();
}:
	(
		otherlv_0='name'
		{
			newLeafNode(otherlv_0, grammarAccess.getPreambleAccess().getNameKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_LOWERCASE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getPreambleAccess().getNameLOWERCASE_IDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPreambleRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.integratedmodelling.Kap.LOWERCASE_ID");
				}
			)
		)
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getPreambleAccess().getUnorderedGroup_2());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getPreambleAccess().getUnorderedGroup_2(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getPreambleAccess().getUnorderedGroup_2(), 0);
					}
								({true}?=>(otherlv_3='worldview'
								{
									newLeafNode(otherlv_3, grammarAccess.getPreambleAccess().getWorldviewKeyword_2_0_0());
								}
								(
									(
										lv_worldview_4_0=RULE_LOWERCASE_ID
										{
											newLeafNode(lv_worldview_4_0, grammarAccess.getPreambleAccess().getWorldviewLOWERCASE_IDTerminalRuleCall_2_0_1_0());
										}
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getPreambleRule());
											}
											setWithLastConsumed(
												$current,
												"worldview",
												lv_worldview_4_0,
												"org.integratedmodelling.Kap.LOWERCASE_ID");
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPreambleAccess().getUnorderedGroup_2());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getPreambleAccess().getUnorderedGroup_2(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getPreambleAccess().getUnorderedGroup_2(), 1);
					}
								({true}?=>(otherlv_5='permissions'
								{
									newLeafNode(otherlv_5, grammarAccess.getPreambleAccess().getPermissionsKeyword_2_1_0());
								}
								(
									(
										lv_permissions_6_0=RULE_STRING
										{
											newLeafNode(lv_permissions_6_0, grammarAccess.getPreambleAccess().getPermissionsSTRINGTerminalRuleCall_2_1_1_0());
										}
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getPreambleRule());
											}
											setWithLastConsumed(
												$current,
												"permissions",
												lv_permissions_6_0,
												"org.eclipse.xtext.common.Terminals.STRING");
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPreambleAccess().getUnorderedGroup_2());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getPreambleAccess().getUnorderedGroup_2(), 2)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getPreambleAccess().getUnorderedGroup_2(), 2);
					}
								({true}?=>(otherlv_7='author'
								{
									newLeafNode(otherlv_7, grammarAccess.getPreambleAccess().getAuthorKeyword_2_2_0());
								}
								(
									(
										lv_authors_8_0=RULE_STRING
										{
											newLeafNode(lv_authors_8_0, grammarAccess.getPreambleAccess().getAuthorsSTRINGTerminalRuleCall_2_2_1_0());
										}
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getPreambleRule());
											}
											setWithLastConsumed(
												$current,
												"authors",
												lv_authors_8_0,
												"org.eclipse.xtext.common.Terminals.STRING");
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPreambleAccess().getUnorderedGroup_2());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getPreambleAccess().getUnorderedGroup_2(), 3)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getPreambleAccess().getUnorderedGroup_2(), 3);
					}
								({true}?=>(otherlv_9='version'
								{
									newLeafNode(otherlv_9, grammarAccess.getPreambleAccess().getVersionKeyword_2_3_0());
								}
								(
									(
										lv_version_10_0=RULE_LOWERCASE_ID
										{
											newLeafNode(lv_version_10_0, grammarAccess.getPreambleAccess().getVersionLOWERCASE_IDTerminalRuleCall_2_3_1_0());
										}
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getPreambleRule());
											}
											setWithLastConsumed(
												$current,
												"version",
												lv_version_10_0,
												"org.integratedmodelling.Kap.LOWERCASE_ID");
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPreambleAccess().getUnorderedGroup_2());
					}
				)
			)
					)*
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getPreambleAccess().getUnorderedGroup_2());
				}
		)
	)
;
finally {
	myUnorderedGroupState.restore();
}

// Entry rule entryRuleDefinition
entryRuleDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDefinitionRule()); }
	iv_ruleDefinition=ruleDefinition
	{ $current=$iv_ruleDefinition.current; }
	EOF;

// Rule Definition
ruleDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='def'
		{
			newLeafNode(otherlv_0, grammarAccess.getDefinitionAccess().getDefKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_LOWERCASE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDefinitionAccess().getNameLOWERCASE_IDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDefinitionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.integratedmodelling.Kap.LOWERCASE_ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDefinitionAccess().getArgumentsArgumentDeclarationParserRuleCall_2_0());
				}
				lv_arguments_2_0=ruleArgumentDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDefinitionRule());
					}
					set(
						$current,
						"arguments",
						lv_arguments_2_0,
						"org.integratedmodelling.Kap.ArgumentDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getDefinitionAccess().getColonKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDefinitionAccess().getBodyBodyParserRuleCall_4_0());
				}
				lv_body_4_0=ruleBody
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDefinitionRule());
					}
					set(
						$current,
						"body",
						lv_body_4_0,
						"org.integratedmodelling.Kap.Body");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleArgumentDeclaration
entryRuleArgumentDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArgumentDeclarationRule()); }
	iv_ruleArgumentDeclaration=ruleArgumentDeclaration
	{ $current=$iv_ruleArgumentDeclaration.current; }
	EOF;

// Rule ArgumentDeclaration
ruleArgumentDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getArgumentDeclarationAccess().getArgumentDeclarationAction_0(),
					$current);
			}
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getArgumentDeclarationAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				(
					lv_ids_2_0=RULE_LOWERCASE_ID
					{
						newLeafNode(lv_ids_2_0, grammarAccess.getArgumentDeclarationAccess().getIdsLOWERCASE_IDTerminalRuleCall_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getArgumentDeclarationRule());
						}
						addWithLastConsumed(
							$current,
							"ids",
							lv_ids_2_0,
							"org.integratedmodelling.Kap.LOWERCASE_ID");
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getArgumentDeclarationAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						lv_ids_4_0=RULE_LOWERCASE_ID
						{
							newLeafNode(lv_ids_4_0, grammarAccess.getArgumentDeclarationAccess().getIdsLOWERCASE_IDTerminalRuleCall_2_1_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getArgumentDeclarationRule());
							}
							addWithLastConsumed(
								$current,
								"ids",
								lv_ids_4_0,
								"org.integratedmodelling.Kap.LOWERCASE_ID");
						}
					)
				)
			)*
		)?
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getArgumentDeclarationAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleParameterList
entryRuleParameterList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterListRule()); }
	iv_ruleParameterList=ruleParameterList
	{ $current=$iv_ruleParameterList.current; }
	EOF;

// Rule ParameterList
ruleParameterList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getParameterListAccess().getPairsKeyValuePairParserRuleCall_0_0());
				}
				lv_pairs_0_0=ruleKeyValuePair
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParameterListRule());
					}
					add(
						$current,
						"pairs",
						lv_pairs_0_0,
						"org.integratedmodelling.Kap.KeyValuePair");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(',')=>
				otherlv_1=','
				{
					newLeafNode(otherlv_1, grammarAccess.getParameterListAccess().getCommaKeyword_1_0());
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getParameterListAccess().getPairsKeyValuePairParserRuleCall_1_1_0());
					}
					lv_pairs_2_0=ruleKeyValuePair
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getParameterListRule());
						}
						add(
							$current,
							"pairs",
							lv_pairs_2_0,
							"org.integratedmodelling.Kap.KeyValuePair");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleKeyValuePair
entryRuleKeyValuePair returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getKeyValuePairRule()); }
	iv_ruleKeyValuePair=ruleKeyValuePair
	{ $current=$iv_ruleKeyValuePair.current; }
	EOF;

// Rule KeyValuePair
ruleKeyValuePair returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_name_0_0=RULE_LOWERCASE_ID
					{
						newLeafNode(lv_name_0_0, grammarAccess.getKeyValuePairAccess().getNameLOWERCASE_IDTerminalRuleCall_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getKeyValuePairRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_0_0,
							"org.integratedmodelling.Kap.LOWERCASE_ID");
					}
				)
			)
			(
				(
					(
						lv_interactive_1_0='=?'
						{
							newLeafNode(lv_interactive_1_0, grammarAccess.getKeyValuePairAccess().getInteractiveEqualsSignQuestionMarkKeyword_0_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getKeyValuePairRule());
							}
							setWithLastConsumed($current, "interactive", true, "=?");
						}
					)
				)
				    |
				otherlv_2='='
				{
					newLeafNode(otherlv_2, grammarAccess.getKeyValuePairAccess().getEqualsSignKeyword_0_1_1());
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getKeyValuePairAccess().getValueValueParserRuleCall_1_0());
				}
				lv_value_3_0=ruleValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getKeyValuePairRule());
					}
					set(
						$current,
						"value",
						lv_value_3_0,
						"org.integratedmodelling.Kap.Value");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleValue
entryRuleValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getValueRule()); }
	iv_ruleValue=ruleValue
	{ $current=$iv_ruleValue.current; }
	EOF;

// Rule Value
ruleValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_argvalue_0_0=RULE_ARGVALUE
				{
					newLeafNode(lv_argvalue_0_0, grammarAccess.getValueAccess().getArgvalueARGVALUETerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getValueRule());
					}
					setWithLastConsumed(
						$current,
						"argvalue",
						lv_argvalue_0_0,
						"org.integratedmodelling.Kap.ARGVALUE");
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getValueAccess().getLiteralLiteralParserRuleCall_1_0());
				}
				lv_literal_1_0=ruleLiteral
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getValueRule());
					}
					set(
						$current,
						"literal",
						lv_literal_1_0,
						"org.integratedmodelling.Kap.Literal");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				lv_id_2_0=RULE_LOWERCASE_ID
				{
					newLeafNode(lv_id_2_0, grammarAccess.getValueAccess().getIdLOWERCASE_IDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getValueRule());
					}
					setWithLastConsumed(
						$current,
						"id",
						lv_id_2_0,
						"org.integratedmodelling.Kap.LOWERCASE_ID");
				}
			)
		)
		    |
		(
			(
				lv_observable_3_0=RULE_OBSERVABLE
				{
					newLeafNode(lv_observable_3_0, grammarAccess.getValueAccess().getObservableOBSERVABLETerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getValueRule());
					}
					setWithLastConsumed(
						$current,
						"observable",
						lv_observable_3_0,
						"org.integratedmodelling.Kap.OBSERVABLE");
				}
			)
		)
		    |
		(
			(
				lv_expression_4_0=RULE_EXPR
				{
					newLeafNode(lv_expression_4_0, grammarAccess.getValueAccess().getExpressionEXPRTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getValueRule());
					}
					setWithLastConsumed(
						$current,
						"expression",
						lv_expression_4_0,
						"org.integratedmodelling.Kap.EXPR");
				}
			)
		)
	)
;

// Entry rule entryRuleLiteral
entryRuleLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLiteralRule()); }
	iv_ruleLiteral=ruleLiteral
	{ $current=$iv_ruleLiteral.current; }
	EOF;

// Rule Literal
ruleLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getLiteralAccess().getNumberNumberParserRuleCall_0_0());
				}
				lv_number_0_0=ruleNumber
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLiteralRule());
					}
					set(
						$current,
						"number",
						lv_number_0_0,
						"org.integratedmodelling.Kap.Number");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getLiteralAccess().getFromNumberParserRuleCall_1_0_0());
					}
					lv_from_1_0=ruleNumber
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLiteralRule());
						}
						set(
							$current,
							"from",
							lv_from_1_0,
							"org.integratedmodelling.Kap.Number");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_2='to'
			{
				newLeafNode(otherlv_2, grammarAccess.getLiteralAccess().getToKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLiteralAccess().getToNumberParserRuleCall_1_2_0());
					}
					lv_to_3_0=ruleNumber
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLiteralRule());
						}
						set(
							$current,
							"to",
							lv_to_3_0,
							"org.integratedmodelling.Kap.Number");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				lv_string_4_0=RULE_STRING
				{
					newLeafNode(lv_string_4_0, grammarAccess.getLiteralAccess().getStringSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLiteralRule());
					}
					setWithLastConsumed(
						$current,
						"string",
						lv_string_4_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getLiteralAccess().getDateDateParserRuleCall_3_0());
				}
				lv_date_5_0=ruleDate
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLiteralRule());
					}
					set(
						$current,
						"date",
						lv_date_5_0,
						"org.integratedmodelling.Kap.Date");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				(
					lv_boolean_6_1='true'
					{
						newLeafNode(lv_boolean_6_1, grammarAccess.getLiteralAccess().getBooleanTrueKeyword_4_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLiteralRule());
						}
						setWithLastConsumed($current, "boolean", lv_boolean_6_1, null);
					}
					    |
					lv_boolean_6_2='false'
					{
						newLeafNode(lv_boolean_6_2, grammarAccess.getLiteralAccess().getBooleanFalseKeyword_4_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLiteralRule());
						}
						setWithLastConsumed($current, "boolean", lv_boolean_6_2, null);
					}
				)
			)
		)
	)
;

// Entry rule entryRuleBody
entryRuleBody returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBodyRule()); }
	iv_ruleBody=ruleBody
	{ $current=$iv_ruleBody.current; }
	EOF;

// Rule Body
ruleBody returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getBodyAccess().getBodyAction_0_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getBodyAccess().getListStatementParserRuleCall_0_1_0());
					}
					lv_list_1_0=ruleStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBodyRule());
						}
						add(
							$current,
							"list",
							lv_list_1_0,
							"org.integratedmodelling.Kap.Statement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getBodyAccess().getListStatementParserRuleCall_0_2_0());
					}
					lv_list_2_0=ruleStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBodyRule());
						}
						add(
							$current,
							"list",
							lv_list_2_0,
							"org.integratedmodelling.Kap.Statement");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)
		    |
		(
			(
				(
					lv_isgroup_3_0='('
					{
						newLeafNode(lv_isgroup_3_0, grammarAccess.getBodyAccess().getIsgroupLeftParenthesisKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getBodyRule());
						}
						setWithLastConsumed($current, "isgroup", true, "(");
					}
				)
			)
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getBodyAccess().getGroupStatementParserRuleCall_1_1_0_0());
						}
						lv_group_4_0=ruleStatement
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBodyRule());
							}
							add(
								$current,
								"group",
								lv_group_4_0,
								"org.integratedmodelling.Kap.Statement");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getBodyAccess().getGroupStatementParserRuleCall_1_1_1_0());
						}
						lv_group_5_0=ruleStatement
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBodyRule());
							}
							add(
								$current,
								"group",
								lv_group_5_0,
								"org.integratedmodelling.Kap.Statement");
							afterParserOrEnumRuleCall();
						}
					)
				)*
			)?
			otherlv_6=')'
			{
				newLeafNode(otherlv_6, grammarAccess.getBodyAccess().getRightParenthesisKeyword_1_2());
			}
		)
	)
;

// Entry rule entryRuleStatement
entryRuleStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStatementRule()); }
	iv_ruleStatement=ruleStatement
	{ $current=$iv_ruleStatement.current; }
	EOF;

// Rule Statement
ruleStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getStatementAccess().getCallCallParserRuleCall_0_0());
				}
				lv_call_0_0=ruleCall
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatementRule());
					}
					set(
						$current,
						"call",
						lv_call_0_0,
						"org.integratedmodelling.Kap.Call");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				lv_text_1_0=RULE_EMBEDDEDTEXT
				{
					newLeafNode(lv_text_1_0, grammarAccess.getStatementAccess().getTextEMBEDDEDTEXTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStatementRule());
					}
					setWithLastConsumed(
						$current,
						"text",
						lv_text_1_0,
						"org.integratedmodelling.Kap.EMBEDDEDTEXT");
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getStatementAccess().getIfIfStatementParserRuleCall_2_0());
				}
				lv_if_2_0=ruleIfStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatementRule());
					}
					set(
						$current,
						"if",
						lv_if_2_0,
						"org.integratedmodelling.Kap.IfStatement");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			otherlv_3='('
			{
				newLeafNode(otherlv_3, grammarAccess.getStatementAccess().getLeftParenthesisKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getStatementAccess().getGroupStatementParserRuleCall_3_1_0());
					}
					lv_group_4_0=ruleStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatementRule());
						}
						add(
							$current,
							"group",
							lv_group_4_0,
							"org.integratedmodelling.Kap.Statement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getStatementAccess().getGroupStatementParserRuleCall_3_2_0());
					}
					lv_group_5_0=ruleStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatementRule());
						}
						add(
							$current,
							"group",
							lv_group_5_0,
							"org.integratedmodelling.Kap.Statement");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_6=')'
			{
				newLeafNode(otherlv_6, grammarAccess.getStatementAccess().getRightParenthesisKeyword_3_3());
			}
		)
	)
;

// Entry rule entryRuleIfStatement
entryRuleIfStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIfStatementRule()); }
	iv_ruleIfStatement=ruleIfStatement
	{ $current=$iv_ruleIfStatement.current; }
	EOF;

// Rule IfStatement
ruleIfStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='if'
		{
			newLeafNode(otherlv_0, grammarAccess.getIfStatementAccess().getIfKeyword_0());
		}
		(
			(
				lv_expression_1_0=RULE_EXPR
				{
					newLeafNode(lv_expression_1_0, grammarAccess.getIfStatementAccess().getExpressionEXPRTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIfStatementRule());
					}
					setWithLastConsumed(
						$current,
						"expression",
						lv_expression_1_0,
						"org.integratedmodelling.Kap.EXPR");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getIfStatementAccess().getBodyIfBodyParserRuleCall_2_0());
				}
				lv_body_2_0=ruleIfBody
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfStatementRule());
					}
					set(
						$current,
						"body",
						lv_body_2_0,
						"org.integratedmodelling.Kap.IfBody");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3='else'
			{
				newLeafNode(otherlv_3, grammarAccess.getIfStatementAccess().getElseKeyword_3_0());
			}
			otherlv_4='if'
			{
				newLeafNode(otherlv_4, grammarAccess.getIfStatementAccess().getIfKeyword_3_1());
			}
			(
				(
					lv_elseIfExpression_5_0=RULE_EXPR
					{
						newLeafNode(lv_elseIfExpression_5_0, grammarAccess.getIfStatementAccess().getElseIfExpressionEXPRTerminalRuleCall_3_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getIfStatementRule());
						}
						addWithLastConsumed(
							$current,
							"elseIfExpression",
							lv_elseIfExpression_5_0,
							"org.integratedmodelling.Kap.EXPR");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getIfStatementAccess().getElseIfCallIfBodyParserRuleCall_3_3_0());
					}
					lv_elseIfCall_6_0=ruleIfBody
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIfStatementRule());
						}
						add(
							$current,
							"elseIfCall",
							lv_elseIfCall_6_0,
							"org.integratedmodelling.Kap.IfBody");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			otherlv_7='else'
			{
				newLeafNode(otherlv_7, grammarAccess.getIfStatementAccess().getElseKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getIfStatementAccess().getElseCallIfBodyParserRuleCall_4_1_0());
					}
					lv_elseCall_8_0=ruleIfBody
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIfStatementRule());
						}
						set(
							$current,
							"elseCall",
							lv_elseCall_8_0,
							"org.integratedmodelling.Kap.IfBody");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleIfBody
entryRuleIfBody returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIfBodyRule()); }
	iv_ruleIfBody=ruleIfBody
	{ $current=$iv_ruleIfBody.current; }
	EOF;

// Rule IfBody
ruleIfBody returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getIfBodyAccess().getCallCallParserRuleCall_0_0());
				}
				lv_call_0_0=ruleCall
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfBodyRule());
					}
					set(
						$current,
						"call",
						lv_call_0_0,
						"org.integratedmodelling.Kap.Call");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getIfBodyAccess().getBodyBodyParserRuleCall_1_0());
				}
				lv_body_1_0=ruleBody
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfBodyRule());
					}
					set(
						$current,
						"body",
						lv_body_1_0,
						"org.integratedmodelling.Kap.Body");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleCall
entryRuleCall returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCallRule()); }
	iv_ruleCall=ruleCall
	{ $current=$iv_ruleCall.current; }
	EOF;

// Rule Call
ruleCall returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_LOWERCASE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getCallAccess().getNameLOWERCASE_IDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCallRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.integratedmodelling.Kap.LOWERCASE_ID");
				}
			)
		)
		(
			otherlv_1='('
			{
				newLeafNode(otherlv_1, grammarAccess.getCallAccess().getLeftParenthesisKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCallAccess().getParametersParameterListParserRuleCall_1_1_0());
					}
					lv_parameters_2_0=ruleParameterList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCallRule());
						}
						set(
							$current,
							"parameters",
							lv_parameters_2_0,
							"org.integratedmodelling.Kap.ParameterList");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			otherlv_3=')'
			{
				newLeafNode(otherlv_3, grammarAccess.getCallAccess().getRightParenthesisKeyword_1_2());
			}
		)?
		(
			(
				otherlv_4=':'
				{
					newLeafNode(otherlv_4, grammarAccess.getCallAccess().getColonKeyword_2_0_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getCallAccess().getActionsActionsParserRuleCall_2_0_1_0());
						}
						lv_actions_5_0=ruleActions
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCallRule());
							}
							set(
								$current,
								"actions",
								lv_actions_5_0,
								"org.integratedmodelling.Kap.Actions");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			otherlv_6=';'
			{
				newLeafNode(otherlv_6, grammarAccess.getCallAccess().getSemicolonKeyword_2_1());
			}
		)?
	)
;

// Entry rule entryRuleActions
entryRuleActions returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActionsRule()); }
	iv_ruleActions=ruleActions
	{ $current=$iv_ruleActions.current; }
	EOF;

// Rule Actions
ruleActions returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getActionsAccess().getCallCallParserRuleCall_0_0());
				}
				lv_call_0_0=ruleCall
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getActionsRule());
					}
					set(
						$current,
						"call",
						lv_call_0_0,
						"org.integratedmodelling.Kap.Call");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getActionsAccess().getBodyBodyParserRuleCall_1_0());
				}
				lv_body_1_0=ruleBody
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getActionsRule());
					}
					set(
						$current,
						"body",
						lv_body_1_0,
						"org.integratedmodelling.Kap.Body");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getActionsAccess().getMatchMatchParserRuleCall_2_0());
				}
				lv_match_2_0=ruleMatch
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getActionsRule());
					}
					set(
						$current,
						"match",
						lv_match_2_0,
						"org.integratedmodelling.Kap.Match");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			otherlv_3='('
			{
				newLeafNode(otherlv_3, grammarAccess.getActionsAccess().getLeftParenthesisKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getActionsAccess().getMatchesMatchParserRuleCall_3_1_0());
					}
					lv_matches_4_0=ruleMatch
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getActionsRule());
						}
						add(
							$current,
							"matches",
							lv_matches_4_0,
							"org.integratedmodelling.Kap.Match");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getActionsAccess().getMatchesMatchParserRuleCall_3_2_0());
					}
					lv_matches_5_0=ruleMatch
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getActionsRule());
						}
						add(
							$current,
							"matches",
							lv_matches_5_0,
							"org.integratedmodelling.Kap.Match");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_6=')'
			{
				newLeafNode(otherlv_6, grammarAccess.getActionsAccess().getRightParenthesisKeyword_3_3());
			}
		)
	)
;

// Entry rule entryRuleMatch
entryRuleMatch returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMatchRule()); }
	iv_ruleMatch=ruleMatch
	{ $current=$iv_ruleMatch.current; }
	EOF;

// Rule Match
ruleMatch returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_id_0_0=RULE_LOWERCASE_ID
					{
						newLeafNode(lv_id_0_0, grammarAccess.getMatchAccess().getIdLOWERCASE_IDTerminalRuleCall_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMatchRule());
						}
						setWithLastConsumed(
							$current,
							"id",
							true,
							"org.integratedmodelling.Kap.LOWERCASE_ID");
					}
				)
			)
			otherlv_1='->'
			{
				newLeafNode(otherlv_1, grammarAccess.getMatchAccess().getHyphenMinusGreaterThanSignKeyword_0_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMatchAccess().getBodyBodyParserRuleCall_0_2_0());
					}
					lv_body_2_0=ruleBody
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMatchRule());
						}
						set(
							$current,
							"body",
							lv_body_2_0,
							"org.integratedmodelling.Kap.Body");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_regexp_3_0=RULE_REGEXP
					{
						newLeafNode(lv_regexp_3_0, grammarAccess.getMatchAccess().getRegexpREGEXPTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMatchRule());
						}
						setWithLastConsumed(
							$current,
							"regexp",
							true,
							"org.integratedmodelling.Kap.REGEXP");
					}
				)
			)
			otherlv_4='->'
			{
				newLeafNode(otherlv_4, grammarAccess.getMatchAccess().getHyphenMinusGreaterThanSignKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMatchAccess().getBodyBodyParserRuleCall_1_2_0());
					}
					lv_body_5_0=ruleBody
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMatchRule());
						}
						set(
							$current,
							"body",
							lv_body_5_0,
							"org.integratedmodelling.Kap.Body");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_observable_6_0=RULE_OBSERVABLE
					{
						newLeafNode(lv_observable_6_0, grammarAccess.getMatchAccess().getObservableOBSERVABLETerminalRuleCall_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMatchRule());
						}
						setWithLastConsumed(
							$current,
							"observable",
							true,
							"org.integratedmodelling.Kap.OBSERVABLE");
					}
				)
			)
			otherlv_7='->'
			{
				newLeafNode(otherlv_7, grammarAccess.getMatchAccess().getHyphenMinusGreaterThanSignKeyword_2_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMatchAccess().getBodyBodyParserRuleCall_2_2_0());
					}
					lv_body_8_0=ruleBody
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMatchRule());
						}
						set(
							$current,
							"body",
							lv_body_8_0,
							"org.integratedmodelling.Kap.Body");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getMatchAccess().getLiteralLiteralParserRuleCall_3_0_0());
					}
					lv_literal_9_0=ruleLiteral
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMatchRule());
						}
						set(
							$current,
							"literal",
							true,
							"org.integratedmodelling.Kap.Literal");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_10='->'
			{
				newLeafNode(otherlv_10, grammarAccess.getMatchAccess().getHyphenMinusGreaterThanSignKeyword_3_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMatchAccess().getBodyBodyParserRuleCall_3_2_0());
					}
					lv_body_11_0=ruleBody
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMatchRule());
						}
						set(
							$current,
							"body",
							lv_body_11_0,
							"org.integratedmodelling.Kap.Body");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_text_12_0=RULE_STRING
					{
						newLeafNode(lv_text_12_0, grammarAccess.getMatchAccess().getTextSTRINGTerminalRuleCall_4_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMatchRule());
						}
						setWithLastConsumed(
							$current,
							"text",
							true,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
			otherlv_13='->'
			{
				newLeafNode(otherlv_13, grammarAccess.getMatchAccess().getHyphenMinusGreaterThanSignKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMatchAccess().getBodyBodyParserRuleCall_4_2_0());
					}
					lv_body_14_0=ruleBody
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMatchRule());
						}
						set(
							$current,
							"body",
							lv_body_14_0,
							"org.integratedmodelling.Kap.Body");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getMatchAccess().getArgumentsArgumentDeclarationParserRuleCall_5_0_0());
					}
					lv_arguments_15_0=ruleArgumentDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMatchRule());
						}
						set(
							$current,
							"arguments",
							lv_arguments_15_0,
							"org.integratedmodelling.Kap.ArgumentDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_16='->'
			{
				newLeafNode(otherlv_16, grammarAccess.getMatchAccess().getHyphenMinusGreaterThanSignKeyword_5_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMatchAccess().getBodyBodyParserRuleCall_5_2_0());
					}
					lv_body_17_0=ruleBody
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMatchRule());
						}
						set(
							$current,
							"body",
							lv_body_17_0,
							"org.integratedmodelling.Kap.Body");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleNumber
entryRuleNumber returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNumberRule()); }
	iv_ruleNumber=ruleNumber
	{ $current=$iv_ruleNumber.current; }
	EOF;

// Rule Number
ruleNumber returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='+'
			{
				newLeafNode(otherlv_0, grammarAccess.getNumberAccess().getPlusSignKeyword_0_0());
			}
			    |
			(
				(
					lv_negative_1_0='-'
					{
						newLeafNode(lv_negative_1_0, grammarAccess.getNumberAccess().getNegativeHyphenMinusKeyword_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNumberRule());
						}
						setWithLastConsumed($current, "negative", true, "-");
					}
				)
			)
		)?
		(
			((
				RULE_INT
			)
			)=>
			(
				lv_real_2_0=RULE_INT
				{
					newLeafNode(lv_real_2_0, grammarAccess.getNumberAccess().getRealINTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNumberRule());
					}
					setWithLastConsumed(
						$current,
						"real",
						lv_real_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		(
			((
				'l'
			)
			)=>
			(
				lv_long_3_0='l'
				{
					newLeafNode(lv_long_3_0, grammarAccess.getNumberAccess().getLongLKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNumberRule());
					}
					setWithLastConsumed($current, "long", true, "l");
				}
			)
		)?
		(
			((
				(
					(
						'.'
					)
				)
				(
					(
						RULE_INT
					)
				)
			)
			)=>
			(
				(
					(
						lv_decimal_4_0='.'
						{
							newLeafNode(lv_decimal_4_0, grammarAccess.getNumberAccess().getDecimalFullStopKeyword_3_0_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getNumberRule());
							}
							setWithLastConsumed($current, "decimal", true, ".");
						}
					)
				)
				(
					(
						lv_decimalPart_5_0=RULE_INT
						{
							newLeafNode(lv_decimalPart_5_0, grammarAccess.getNumberAccess().getDecimalPartINTTerminalRuleCall_3_0_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getNumberRule());
							}
							setWithLastConsumed(
								$current,
								"decimalPart",
								lv_decimalPart_5_0,
								"org.eclipse.xtext.common.Terminals.INT");
						}
					)
				)
			)
		)?
		(
			((
				(
					(
						(
							'e'
							    |
							'E'
						)
					)
				)
				(
					'+'
					    |
					(
						(
							'-'
						)
					)
				)?
				(
					(
						RULE_INT
					)
				)
			)
			)=>
			(
				(
					(
						(
							lv_exponential_6_1='e'
							{
								newLeafNode(lv_exponential_6_1, grammarAccess.getNumberAccess().getExponentialEKeyword_4_0_0_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getNumberRule());
								}
								setWithLastConsumed($current, "exponential", true, null);
							}
							    |
							lv_exponential_6_2='E'
							{
								newLeafNode(lv_exponential_6_2, grammarAccess.getNumberAccess().getExponentialEKeyword_4_0_0_0_1());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getNumberRule());
								}
								setWithLastConsumed($current, "exponential", true, null);
							}
						)
					)
				)
				(
					otherlv_7='+'
					{
						newLeafNode(otherlv_7, grammarAccess.getNumberAccess().getPlusSignKeyword_4_0_1_0());
					}
					    |
					(
						(
							lv_expNegative_8_0='-'
							{
								newLeafNode(lv_expNegative_8_0, grammarAccess.getNumberAccess().getExpNegativeHyphenMinusKeyword_4_0_1_1_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getNumberRule());
								}
								setWithLastConsumed($current, "expNegative", true, "-");
							}
						)
					)
				)?
				(
					(
						lv_exp_9_0=RULE_INT
						{
							newLeafNode(lv_exp_9_0, grammarAccess.getNumberAccess().getExpINTTerminalRuleCall_4_0_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getNumberRule());
							}
							setWithLastConsumed(
								$current,
								"exp",
								lv_exp_9_0,
								"org.eclipse.xtext.common.Terminals.INT");
						}
					)
				)
			)
		)?
	)
;

// Entry rule entryRuleDate
entryRuleDate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDateRule()); }
	iv_ruleDate=ruleDate
	{ $current=$iv_ruleDate.current; }
	EOF;

// Rule Date
ruleDate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_year_0_0=RULE_INT
				{
					newLeafNode(lv_year_0_0, grammarAccess.getDateAccess().getYearINTTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDateRule());
					}
					setWithLastConsumed(
						$current,
						"year",
						lv_year_0_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		(
			otherlv_1='AD'
			{
				newLeafNode(otherlv_1, grammarAccess.getDateAccess().getADKeyword_1_0());
			}
			    |
			otherlv_2='CE'
			{
				newLeafNode(otherlv_2, grammarAccess.getDateAccess().getCEKeyword_1_1());
			}
			    |
			(
				(
					lv_bc_3_0='BC'
					{
						newLeafNode(lv_bc_3_0, grammarAccess.getDateAccess().getBcBCKeyword_1_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDateRule());
						}
						setWithLastConsumed($current, "bc", true, "BC");
					}
				)
			)
		)?
		otherlv_4='-'
		{
			newLeafNode(otherlv_4, grammarAccess.getDateAccess().getHyphenMinusKeyword_2());
		}
		(
			(
				lv_month_5_0=RULE_INT
				{
					newLeafNode(lv_month_5_0, grammarAccess.getDateAccess().getMonthINTTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDateRule());
					}
					setWithLastConsumed(
						$current,
						"month",
						lv_month_5_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_6='-'
		{
			newLeafNode(otherlv_6, grammarAccess.getDateAccess().getHyphenMinusKeyword_4());
		}
		(
			(
				lv_day_7_0=RULE_INT
				{
					newLeafNode(lv_day_7_0, grammarAccess.getDateAccess().getDayINTTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDateRule());
					}
					setWithLastConsumed(
						$current,
						"day",
						lv_day_7_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		(
			(
				(
					lv_hour_8_0=RULE_INT
					{
						newLeafNode(lv_hour_8_0, grammarAccess.getDateAccess().getHourINTTerminalRuleCall_6_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDateRule());
						}
						setWithLastConsumed(
							$current,
							"hour",
							lv_hour_8_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
			otherlv_9=':'
			{
				newLeafNode(otherlv_9, grammarAccess.getDateAccess().getColonKeyword_6_1());
			}
			(
				(
					lv_min_10_0=RULE_INT
					{
						newLeafNode(lv_min_10_0, grammarAccess.getDateAccess().getMinINTTerminalRuleCall_6_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDateRule());
						}
						setWithLastConsumed(
							$current,
							"min",
							lv_min_10_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
			(
				otherlv_11=':'
				{
					newLeafNode(otherlv_11, grammarAccess.getDateAccess().getColonKeyword_6_3_0());
				}
				(
					(
						lv_sec_12_0=RULE_INT
						{
							newLeafNode(lv_sec_12_0, grammarAccess.getDateAccess().getSecINTTerminalRuleCall_6_3_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getDateRule());
							}
							setWithLastConsumed(
								$current,
								"sec",
								lv_sec_12_0,
								"org.eclipse.xtext.common.Terminals.INT");
						}
					)
				)
				(
					otherlv_13='.'
					{
						newLeafNode(otherlv_13, grammarAccess.getDateAccess().getFullStopKeyword_6_3_2_0());
					}
					(
						(
							lv_ms_14_0=RULE_INT
							{
								newLeafNode(lv_ms_14_0, grammarAccess.getDateAccess().getMsINTTerminalRuleCall_6_3_2_1_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getDateRule());
								}
								setWithLastConsumed(
									$current,
									"ms",
									lv_ms_14_0,
									"org.eclipse.xtext.common.Terminals.INT");
							}
						)
					)
				)?
			)?
		)?
	)
;

RULE_LOWERCASE_ID : 'a'..'z' ('a'..'z'|'0'..'9'|'_')*;

RULE_ARGVALUE : '$' ('0'..'9')*;

RULE_EXPR : '[' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|']'|'\\')|~(('\\'|']')))* ']';

RULE_EMBEDDEDTEXT : '%%%' (' '* '-')* '\r' ( options {greedy=false;} : . )*'%%%' (' '* '-')* '\r';

RULE_REGEXP : '%' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'%'|'\\')|~(('\\'|'%')))* '%';

RULE_OBSERVABLE : '{' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'\\')|~(('\\'|'}')))* '}';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
