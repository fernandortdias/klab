<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<artifactId>docs</artifactId>
	<parent>
		<groupId>org.integratedmodelling</groupId>
		<artifactId>klab</artifactId>
		<version>0.11.0-SNAPSHOT</version>
	</parent>
	<name>k.LAB documentation</name>
	<description>k.LAB Asciidoc documentation.</description>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>11</maven.compiler.source>
		<maven.compiler.target>11</maven.compiler.target>
		<asciidoctor.maven.plugin.version>2.0.0-RC.1</asciidoctor.maven.plugin.version>
		<asciidoctorj.pdf.version>1.5.0-alpha.18</asciidoctorj.pdf.version>
		<asciidoctorj.version>2.0.0</asciidoctorj.version>
		<jruby.version>9.2.7.0</jruby.version>
	</properties>

	<build>
		<defaultGoal>process-resources</defaultGoal>
		<plugins>
	  		<plugin>
	  			<groupId>com.google.cloud.tools</groupId>
	  			<artifactId>jib-maven-plugin</artifactId>
	  			<configuration>
	  				<!-- we don't want jib to execute on this module -->
	  				<skip>true</skip>
	  			</configuration>
	      	</plugin>
			<plugin>
				<groupId>org.asciidoctor</groupId>
				<artifactId>asciidoctor-maven-plugin</artifactId>
				<version>${asciidoctor.maven.plugin.version}</version>
				<dependencies>
					<dependency>
						<groupId>org.asciidoctor</groupId>
						<artifactId>asciidoctorj-pdf</artifactId>
						<version>${asciidoctorj.pdf.version}</version>
					</dependency>
					<!-- Comment this section to use the default jruby artifact provided 
						by the plugin -->
					<dependency>
						<groupId>org.jruby</groupId>
						<artifactId>jruby-complete</artifactId>
						<version>${jruby.version}</version>
					</dependency>
					<!-- Comment this section to use the default AsciidoctorJ artifact provided 
						by the plugin -->
					<dependency>
						<groupId>org.asciidoctor</groupId>
						<artifactId>asciidoctorj</artifactId>
						<version>${asciidoctorj.version}</version>
					</dependency>
				</dependencies>
				<configuration>
					<!-- Attributes common to all output formats -->
					<attributes>
						<sourcedir>${project.build.sourceDirectory}</sourcedir>
						<project-version>${project.version}</project-version>
					</attributes>
					<doctype>book</doctype>
				</configuration>
				<!-- Multiple execution blocks allow to configure different input documents, 
					output formats or other configuration options -->
				<executions>
					<execution>
						<id>documentation-to-html</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>process-asciidoc</goal>
						</goals>
						<configuration>
							<sourceDirectory>src/main/asciidoc/org/integratedmodelling/documentation</sourceDirectory>
							<backend>html5</backend>
							<!-- original was coderay -->
							<sourceHighlighter>highlight.js</sourceHighlighter>
							<attributes>
								<imagesdir>./images</imagesdir>
								<toc>left</toc>
								<icons>font</icons>
								<sectanchors>true</sectanchors>
								<idseparator>-</idseparator>
							</attributes>
						</configuration>
					</execution>
					<execution>
						<id>documentation-to-pdf</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>process-asciidoc</goal>
						</goals>
						<configuration>
							<sourceDirectory>src/main/asciidoc/org/integratedmodelling/documentation</sourceDirectory>
							<backend>pdf</backend>
							<!-- Since 1.5.0-alpha.9, PDF back-end can also use 'rouge' which 
								provides more coverage for other languages like scala -->
							<sourceHighlighter>highlight.js</sourceHighlighter>
							<attributes>
								<pagenums />
								<toc />
								<idprefix />
								<idseparator>-</idseparator>
							</attributes>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<dependencies>
		<!-- for the examples -->
		<dependency>
			<groupId>org.integratedmodelling</groupId>
			<artifactId>klab.modeler</artifactId>
			<version>${klab.version}</version>
		</dependency>
	</dependencies>

</project>
