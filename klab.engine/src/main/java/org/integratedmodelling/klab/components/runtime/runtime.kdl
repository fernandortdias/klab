/**
 * This file defines the contract for functions compiled by the runtime into dataflow calls. These
 * are normally not seen by users.
 */
@klab 0.10.0
@version 0.10.0
@namespace klab.runtime

contextualizer exec
	"Return an appropriate contextualizer for an expression."
{
	
	text code
		"The code to be executed"
		
	optional input ifcondition 
		"A condition to check before executing the code" 
		default ""

	optional input unlesscondition 
		"A negative conditions to check before executing the code" 
		default ""

	optional input language 
		"The language of the expression" 
		default "groovy"
		
	class org.integratedmodelling.klab.components.runtime.contextualizers.ExpressionResolver

}

contextualizer literal
	"Return a mediating resolver that wraps a state into another with compatible, but 
	 different value semantics"
{
	
	object val
		"The value to be contextualized"
				
	class org.integratedmodelling.klab.components.runtime.contextualizers.LiteralStateResolver

}

contextualizer convert
	"Return a contextualizer for a literal value"
{
	
	object 'from'
		"The value mediator (unit, range, currency) describing the source values"

	object 'to'
		"The value mediator (unit, range, currency) describing the target values"
				
	class org.integratedmodelling.klab.components.runtime.contextualizers.ConversionResolver

}

contextualizer resolve
	"Return a resolver for a URN-specified resource"
{
	
	text urn
		"The URN pointing to the resource to be resolved and retrieved"
				
	class org.integratedmodelling.klab.components.runtime.contextualizers.UrnResolver
}

contextualizer instantiate
	"Return an instantiator for a URN-specified resource"
{
	
	text urn
		"The URN pointing to the resource to be resolved and retrieved"
				
	class org.integratedmodelling.klab.components.runtime.contextualizers.UrnInstantiator

}