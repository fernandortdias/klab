/**
 * This file defines the contract for all core annotations recognized in k.IM. Those with a
 * 'class' specification also have handlers that perform specific tasks when the annotations
 * are encountered.
 */
@klab 0.10.0
@version 0.10.0

annotation extensive for models 
	"The model produces extensive results, whose values are aggregated over $value when outputs are generated."
{
	list 'value'
		"The extents over which the results are aggregated."
}

annotation reliability for models
	"The reliability score forms part of the strategy used by k.LAB to rank models during resolution. The value 
     is used as part of the set of subjective rankings, which are combined using a multiple criteria algorithm
     and added to the remaining, objective ranking criteria. When not specified, a model has an implicit value
     of 50."
{
	number 'value' 
		"A value between 0 and 100 for unreliable to completely reliable. In normal situations
	     only the range 25-75 should be used, leaving the extremes for internal use."
}

annotation 'parameter' for models
	"Specify parameters with their name and default value to use in Groovy code executed by this model.
	 Optionally set interact=true and provide a description to make the parameter user-editable in 
	 interactive mode."
{
	text name
		"The name of the parameter. Can be any Groovy compatible (lowercase) variable name that does not conflict with
		 dependencies."
		 
	optional text 'label'
		"A label to use for display in the interactive form. Unused if interact=false. Default is built from the
		 name using capitalization and other embellishments."

	optional text 'sectiontitle'
		"The title of the section where the parameter should appear in the interactive entry form. Parameters in
		 the same section will be grouped."

	optional text 'sectiondescription'
		"The description for the section where the parameter should appear in the interactive entry form. If this
		 appears in more than one annotation, the last one evaluated will be used."

	value 'default'
		"The default value for the parameter, which will be used silently if interactive mode is not engaged."
		
	optional text description
		"A description for the parameter and its role in the model. Needed if interact=true, to explain the
		 role of the parameter to the user changing it."
		 
    optional boolean interact
    	"If true, this parameter becomes part of the interactive parameter form when the model is used. Default
    	 false."
}

annotation documented for models, definitions
	"Documentation for each model is tied to phases of execution and is written as a template, which is 
     computed at run time and used to assemble the final contextualization report using the provenance
     diagram as a guide. It is kept in a separate, hidden file; the ID specified here ties a model to
     its documentation in the corresponding file. The k.LAB IDE automatically manages the editing and 
     maintenance of documentation."
{
	text 'value' 
		"An identifier that specifies the documentation for this model. It is needed to avoid confusion
         if model names change due to changing observables."
}

/**
 * Deprecation
 */
annotation deprecated
	"Add the @deprecated annotation to any object to add markers in the language notifying
     users of the need to prepare for their future removal."
{
	
	optional text 'value'
		"A string description of the reason for deprecation and the suggested
         alternatives."
		default ""
}

/**
 * Interactivity of complex computables (tables, classifications)
 */
annotation interactive for definitions, models
	"Make a specific object editable by the user in interactive mode. Applies to lookup tables and classifications when
	 used to annotate a model or a definition that contains them." 
{
}

/**
 * Batch run: use CL parameters to enable multiple batch contexts
 */
annotation run for observers
	"Mark a context for batch execution, specifying the observations to be made in it."
{
	optional text name 
		"A name for this run. If given, the results will be saved in a subdirectory
         of the same name." 
		default ""
	
	optional text description 
		"A description for this run, its parameters and intended outputs."
		default ""
			
	optional list observations
		"A list of the concepts or objects to observe in the context after it is resolved."
		default ()

	optional boolean visualize
		"After resolving the observable, launch a suitable viewer for the context."
		default false
		
	class org.integratedmodelling.klab.engine.apps.AppRunner
}

/**
 * Batch unit test with optional assertions
 */
annotation test for observers
	"Mark a context for execution as a test, specifying the observations to be made in it and
     any checks to apply on the results."
{
	text name 
		"A name for this test. If given, the test logs will include it." 

	optional number repeat
		"Repeat the test the indicated number of times. Default is 1. Used to catch non-deterministic conditions."
		default 1

	optional boolean save 
		"If given with a value of true, the result context will be saved in a directory
         with the test name, or a random name if a name is not given." 
		default false
	
	optional text description 
		"A description for this test, its purpose, parameters and intended outputs."
		default ""
			
	optional list observations
		"A list of the concepts or objects to observe in the context after it is resolved."
		default ()
		
	optional list assertions
		"A list of functions or Groovy code fragments returning a boolean, to execute on the resulting
         context (identified by the 'context' variable) after all observations are made. Any
         fragment returning false or raising an exception causes the test to fail."
		default ()

	optional list resources
		"A list of resource URNs that must be available in for the test to run. If the named resources
		 are unavailable, a warning is emitted and the test terminates without failure."
		default ()

	optional boolean visualize
		"After resolving the observable, launch a suitable viewer for the context."
		default false

	class org.integratedmodelling.klab.engine.apps.TestRunner

}
