@namespace gis.features
@klab 0.10.0
@version 0.10.0

export object extract 
	"Extract polygonal features from a raster map based on clumping of its values."
	label 'Vectorize into features'
{
	optional boolean expression select
		"Pass an expression that will return true or false per each point in the spatial context, 
		 producing a mask that will be vectorized into spatial contexts for the objects. Use quality
		 dependency names to refer to their state in each point."
	    default ""

	optional boolean expression categorize
		"Pass an expression that will return a value per each point in the spatial context. 
		 Polygons with contiguous, equal values will be extracted. If 'semantics' is passed,
		 add that value as a state to each object produced."
	    default ""
	    
	optional concept semantics
		"The observable that will describe the values that we categorized on in each extracted
		 object."

	optional boolean simplify
		"If true, the polygons resulting from vectorization will be simplified before they are
	     returned to k.LAB."
		default false
		
	optional boolean holes
		"If true, generated polygons may have holes in them."
		default false
		
	optional boolean points
		"If true, single points will be extracted as cell polygons."
		default false
		
	optional value min_area
		"Minimum area in m^2 for the generated polygons, or specify unit as in 100.km^2"
		default 0

	optional value max_area
		"Maximum area in m^2 for the generated polygons, or specify unit as in 100.km^2"
		default 0
	
	/*
	 * produces multiple 2d shapes
	 */
	geometry #s2
	
	class org.integratedmodelling.klab.components.geospace.processing.PolygonInstantiatorJAI

}

export object concavehull 
	"Extract one polygonal feature from a raster map based on the concave hull of all matching points."
	label 'Concave hull'
{
	optional boolean expression select
		"Pass an expression that will return true or false per each point in the spatial context, 
		 producing a mask that will be vectorized into spatial contexts for the objects. Use quality
		 dependency names to refer to their state in each point."
	    default ""
	
	class org.integratedmodelling.klab.components.geospace.processing.ConcaveHullInstantiator

}

export object convexhull 
	"Extract one polygonal feature from a raster map based on the convex hull of all matching points."
	label 'Convex hull'
{
	optional boolean expression select
		"Pass an expression that will return true or false per each point in the spatial context, 
		 producing a mask that will be vectorized into spatial contexts for the objects. Use quality
		 dependency names to refer to their state in each point."
	    default ""

	class org.integratedmodelling.klab.components.geospace.processing.ConvexHullInstantiator
}

export object cluster 
	"Cluster point features into polygons, using the DBSCAN algorithm."
	label 'Cluster features'
{
	import object artifact
		"The name of the artifact containing the features to be clustered. If the features are not points, the
		 centroid will be used."
	
	optional number radius
		"Radius in m of the neighborhood to consider. Default is defined in grid contexts to allow near-contiguous 
		 cells to be clustered."
		default 0.0
		
	optional boolean convex
		"Use convex hull to build polygons after clustering. Default true. False will use a concave
		 hull, which tends to give artifacts due to the non-exhausting nature of the clustering process."
		default true
	
	geometry #s2
	
	class org.integratedmodelling.klab.components.geospace.processing.FeatureClusterInstantiator

}
