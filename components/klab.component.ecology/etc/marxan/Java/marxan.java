class marxan extends c2jrt {
    private static String class_name                       = "marxan";

    static Class          pcMarZone[]                      = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cMarZone;
    static Class          pcLoadZones[]                    = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cLoadZones;
    static Class          pcDefaultZones[]                 = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cDefaultZones;
    static Class          pcDumpZoneNames[]                = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cDumpZoneNames;
    static Class          pcLoadCostNames[]                = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cLoadCostNames;
    static Class          pcDefaultCostNames[]             = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cDefaultCostNames;
    static Class          pcDumpCostNames[]                = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cDumpCostNames;
    static Class          pcrtnCostIndex[]                 = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     crtnCostIndex;
    static Class          pcLoadCostValues[]               = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cLoadCostValues;
    static Class          pcDumpCostFieldNumber[]          = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cDumpCostFieldNumber;
    static Class          pcDumpCostValues[]               = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cDumpCostValues;
    static Class          pcLoadZoneContrib[]              = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cLoadZoneContrib;
    static Class          pcLoadZoneContrib2[]             = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cLoadZoneContrib2;
    static Class          pcLoadZoneContrib3[]             = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cLoadZoneContrib3;
    static Class          pcBuild_ZoneContrib[]            = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cBuild_ZoneContrib;
    static Class          pcBuild_ZoneContrib2[]           = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cBuild_ZoneContrib2;
    static Class          pcUpdate_ZoneContrib2[]          = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cUpdate_ZoneContrib2;
    static Class          pcBuild_ZoneContrib3[]           = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cBuild_ZoneContrib3;
    static Class          pcDefault_ZoneContrib[]          = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cDefault_ZoneContrib;
    static Class          pcDump_ZoneContrib[]             = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cDump_ZoneContrib;
    static Class          pcDumpZoneContrib[]              = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cDumpZoneContrib;
    static Class          pcDumpZoneContrib2[]             = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cDumpZoneContrib2;
    static Class          pcDumpZoneContrib3[]             = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cDumpZoneContrib3;
    static Class          pcLoadZoneTarget[]               = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cLoadZoneTarget;
    static Class          pcLoadZoneTarget2[]              = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cLoadZoneTarget2;
    static Class          pcBuild_ZoneTarget[]             = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cBuild_ZoneTarget;
    static Class          pcBuild_ZoneTarget2[]            = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cBuild_ZoneTarget2;
    static Class          pcUpdate_ZoneTarget2[]           = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cUpdate_ZoneTarget2;
    static Class          pcDefault_ZoneTarget[]           = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cDefault_ZoneTarget;
    static Class          pcDump_ZoneTarget[]              = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cDump_ZoneTarget;
    static Class          pcDumpZoneTarget[]               = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cDumpZoneTarget;
    static Class          pcDumpZoneTarget2[]              = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cDumpZoneTarget2;
    static Class          pcLoadZoneCost[]                 = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cLoadZoneCost;
    static Class          pcDefaultZoneCost[]              = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cDefaultZoneCost;
    static Class          pcBuild_ZoneCost[]               = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cBuild_ZoneCost;
    static Class          pcDump_ZoneCost[]                = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cDump_ZoneCost;
    static Class          pcDumpZoneCost[]                 = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cDumpZoneCost;
    static Class          pcLoadPuLock[]                   = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cLoadPuLock;
    static Class          pcDumpPuLock[]                   = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cDumpPuLock;
    static Class          pcLoadPuZone[]                   = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cLoadPuZone;
    static Class          pcDumpPuZone[]                   = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cDumpPuZone;
    static Class          pcDumpPuZone_Debug[]             = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cDumpPuZone_Debug;
    static Class          pcLoadRelConnectionCost[]        = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cLoadRelConnectionCost;
    static Class          pcDumpRelConnectionCost[]        = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cDumpRelConnectionCost;
    static Class          pcBuild_RelConnectionCost[]      = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cBuild_RelConnectionCost;
    static Class          pcDefault_RelConnectionCost[]    = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cDefault_RelConnectionCost;
    static Class          pcDump_RelConnectionCost[]       = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cDump_RelConnectionCost;
    static Class          pcBuildZoneSpec[]                = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cBuildZoneSpec;
    static Class          pcInitZoneSpec[]                 = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cInitZoneSpec;
    static Class          pcDumpZoneSpec[]                 = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cDumpZoneSpec;
    static Class          pcDumpR[]                        = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cDumpR;
    static Class          pcInitSumSoln[]                  = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cInitSumSoln;
    static Class          pcDumpFileNames[]                = {
            java.lang.Integer.TYPE
    };
    public static int     cDumpFileNames;
    static Class          pcTestrtnAmountSpecAtPu[]        = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cTestrtnAmountSpecAtPu;
    static Class          pcrtnIdxSpecAtPu[]               = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     crtnIdxSpecAtPu;
    static Class          pcrtnClumpSpecAtPu[]             = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     crtnClumpSpecAtPu;
    static Class          pcsetClumpSpecAtPu[]             = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     csetClumpSpecAtPu;
    static Class          pcrtnAmountSpecAtPu[]            = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     crtnAmountSpecAtPu;
    static Class          pcrtnConvertZoneAmount[]         = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Double.TYPE
    };
    public static int     crtnConvertZoneAmount;
    static Class          pcParsePuLock[]                  = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cParsePuLock;
    static Class          pcParsePuZone[]                  = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cParsePuZone;
    static Class          pcCheckPuZone[]                  = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cCheckPuZone;
    static Class          pcDumpPuLockZone[]               = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cDumpPuLockZone;
    static Class          pcSetBlockDefs[]                 = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cSetBlockDefs;
    static Class          pcSetDefs[]                      = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cSetDefs;
    static Class          pcSetRunOptions[]                = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cSetRunOptions;
    static Class          pcPuNotInAllowedZone[]           = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Byte.TYPE
    };
    public static int     cPuNotInAllowedZone;
    static Class          pcInitialiseReserve[]            = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cInitialiseReserve;
    static Class          pcAddReserve[]                   = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cAddReserve;
    static Class          pcCalcPenalties[]                = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cCalcPenalties;
    static Class          pcAddReserve_CPO[]               = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cAddReserve_CPO;
    static Class          pcCalcPenaltiesOptimise[]        = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cCalcPenaltiesOptimise;
    static Class          pcConnectionCost1[]              = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cConnectionCost1;
    static Class          pccost[]                         = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     ccost;
    static Class          pcrtnMaxNonAvailableCost[]       = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     crtnMaxNonAvailableCost;
    static Class          pcConnectionCost2[]              = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cConnectionCost2;
    static Class          pcChangePen[]                    = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cChangePen;
    static Class          pcConnectionCost2Linear[]        = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cConnectionCost2Linear;
    static Class          pcOutputZonationCostDebugTable[] = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cOutputZonationCostDebugTable;
    static Class          pcZonationCost[]                 = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Double.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cZonationCost;
    static Class          pcInitReserve[]                  = {
            java.lang.Integer.TYPE,
            java.lang.Double.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cInitReserve;
    static Class          pcSpeciesAmounts[]               = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cSpeciesAmounts;
    static Class          pcThresholdPenalty[]             = {
            java.lang.Double.TYPE,
            java.lang.Double.TYPE,
            java.lang.Double.TYPE
    };
    public static int     cThresholdPenalty;
    static Class          pcCheckChange[]                  = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Double.TYPE,
            java.lang.Double.TYPE,
            java.lang.Double.TYPE,
            java.lang.Double.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cCheckChange;
    static Class          pcNewPenalty[]                   = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cNewPenalty;
    static Class          pcGoodChange[]                   = {
            java.lang.Integer.TYPE,
            java.lang.Double.TYPE
    };
    public static int     cGoodChange;
    static Class          pcDoChange[]                     = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cDoChange;
    static Class          pcCountMissing[]                 = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Double.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cCountMissing;
    static Class          pcCountPuZones[]                 = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cCountPuZones;
    static Class          pcPrintResVal[]                  = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Double.TYPE
    };
    public static int     cPrintResVal;
    static Class          pcChangeCost[]                   = {
            java.lang.Integer.TYPE,
            java.lang.Double.TYPE
    };
    public static int     cChangeCost;
    static Class          pcConnollyInit[]                 = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Double.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cConnollyInit;
    static Class          pcAdaptiveInit[]                 = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Double.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cAdaptiveInit;
    static Class          pcAdaptiveDec[]                  = {
            java.lang.Integer.TYPE
    };
    public static int     cAdaptiveDec;
    static Class          pcAnnealing[]                    = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Double.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Double.TYPE,
            java.lang.Double.TYPE,
            java.lang.Double.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Double.TYPE
    };
    public static int     cAnnealing;
    static Class          pcDumpBinarySearchArrays[]       = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cDumpBinarySearchArrays;
    static Class          pcsiftDown[]                     = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     csiftDown;
    static Class          pcheapSort[]                     = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cheapSort;
    static Class          pcheapSortBinSearch[]            = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cheapSortBinSearch;
    static Class          pcPrepareBinarySearchArrays[]    = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cPrepareBinarySearchArrays;
    static Class          pcTestFastPUIDtoPUINDEX[]        = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cTestFastPUIDtoPUINDEX;
    static Class          pcFastPUIDtoPUINDEX[]            = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cFastPUIDtoPUINDEX;
    static Class          pcTestFastSPIDtoSPINDEX[]        = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cTestFastSPIDtoSPINDEX;
    static Class          pcFastSPIDtoSPINDEX[]            = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cFastSPIDtoSPINDEX;
    static Class          pcClearClump[]                   = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cClearClump;
    static Class          pcClumpCut[]                     = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cClumpCut;
    static Class          pcClearClumps[]                  = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cClearClumps;
    static Class          pcAddNewClump[]                  = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cAddNewClump;
    static Class          pcAddNewPU[]                     = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cAddNewPU;
    static Class          pcRemPu[]                        = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cRemPu;
    static Class          pcSetSpeciesClumps[]             = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cSetSpeciesClumps;
    static Class          pcSpeciesAmounts4[]              = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cSpeciesAmounts4;
    static Class          pcRemClumpCheck[]                = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cRemClumpCheck;
    static Class          pcCalcPenaltyType4[]             = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cCalcPenaltyType4;
    static Class          pcPartialPen4[]                  = {
            java.lang.Integer.TYPE,
            java.lang.Double.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cPartialPen4;
    static Class          pcValueAdd[]                     = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cValueAdd;
    static Class          pcValueRem[]                     = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cValueRem;
    static Class          pcNewPenalty4[]                  = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cNewPenalty4;
    static Class          pcShowStartupScreen[]            = {

    };
    public static int     cShowStartupScreen;
    static Class          pcShowShutdownScreen[]           = {

    };
    public static int     cShowShutdownScreen;
    static Class          pcWriteStopErrorFile[]           = {
            java.lang.Integer.TYPE
    };
    public static int     cWriteStopErrorFile;
    static Class          pcShowPauseExit[]                = {

    };
    public static int     cShowPauseExit;
    static Class          pcWriteSlaveSyncFileRun[]        = {
            java.lang.Integer.TYPE
    };
    public static int     cWriteSlaveSyncFileRun;
    static Class          pcWriteSlaveSyncFile[]           = {

    };
    public static int     cWriteSlaveSyncFile;
    static Class          pcSlaveExit[]                    = {

    };
    public static int     cSlaveExit;
    static Class          pcShowPauseProg[]                = {

    };
    public static int     cShowPauseProg;
    static Class          pcSetVerbosity[]                 = {
            java.lang.Integer.TYPE
    };
    public static int     cSetVerbosity;
    static Class          pcShowErrorMessage[]             = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cShowErrorMessage;
    static Class          pcShowWarningMessage[]           = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cShowWarningMessage;
    static Class          pcShowProg[]                     = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cShowProg;
    static Class          pcStartDebugTraceFile[]          = {

    };
    public static int     cStartDebugTraceFile;
    static Class          pcAppendDebugTraceFile[]         = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cAppendDebugTraceFile;
    static Class          pcStartDebugFile[]               = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cStartDebugFile;
    static Class          pcAppendDebugFile[]              = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cAppendDebugFile;
    static Class          pcShowGenProg[]                  = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cShowGenProg;
    static Class          pcShowGenProgInfo[]              = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cShowGenProgInfo;
    static Class          pcShowDetProg[]                  = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cShowDetProg;
    static Class          pcShowTimePassed[]               = {

    };
    public static int     cShowTimePassed;
    static Class          pcSetLogFile[]                   = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cSetLogFile;
    static Class          pcGetVarNamePU[]                 = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cGetVarNamePU;
    static Class          pcGetVarName[]                   = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cGetVarName;
    static Class          pcCheckVarName[]                 = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cCheckVarName;
    static Class          pcReadNameList[]                 = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cReadNameList;
    static Class          pcrdsvar[]                       = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     crdsvar;
    static Class          pcSetOptions[]                   = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cSetOptions;
    static Class          pcReadPUCosts[]                  = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cReadPUCosts;
    static Class          pcReadSpeciesData[]              = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cReadSpeciesData;
    static Class          pcReadPUFile[]                   = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cReadPUFile;
    static Class          pcReadPUXYfile[]                 = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cReadPUXYfile;
    static Class          pcReadPUData[]                   = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cReadPUData;
    static Class          pcReadSpeciesData2[]             = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cReadSpeciesData2;
    static Class          pcReadGenSpeciesData[]           = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cReadGenSpeciesData;
    static Class          pcReadConnections[]              = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cReadConnections;
    static Class          pcLoadSparseMatrix[]             = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cLoadSparseMatrix;
    static Class          pcLoadSparseMatrix_sporder[]     = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cLoadSparseMatrix_sporder;
    static Class          pcDumpPU_richness_offset[]       = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cDumpPU_richness_offset;
    static Class          pcDumpSparseMatrix[]             = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cDumpSparseMatrix;
    static Class          pcSaveSeed[]                     = {
            java.lang.Integer.TYPE
    };
    public static int     cSaveSeed;
    static Class          pcCountPuZones2[]                = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cCountPuZones2;
    static Class          pcCostPuZones[]                  = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cCostPuZones;
    static Class          pcOutputSummary[]                = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Double.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cOutputSummary;
    static Class          pcOutputSpeciesData[]            = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cOutputSpeciesData;
    static Class          pcOutputPenalty[]                = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cOutputPenalty;
    static Class          pcLoadPenalty[]                  = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cLoadPenalty;
    static Class          pcInitSolutionsMatrix[]          = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cInitSolutionsMatrix;
    static Class          pcAppendSolutionsMatrix[]        = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cAppendSolutionsMatrix;
    static Class          pcAppendSolutionsMatrixZone[]    = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cAppendSolutionsMatrixZone;
    static Class          pcOutputSolution[]               = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cOutputSolution;
    static Class          pcOutputScenario[]               = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Double.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Double.TYPE,
            java.lang.Double.TYPE,
            java.lang.Double.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cOutputScenario;
    static Class          pcOutputFeatures[]               = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Double.TYPE
    };
    public static int     cOutputFeatures;
    static Class          pcOutputSumSoln[]                = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cOutputSumSoln;
    static Class          pcGreedyPen[]                    = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cGreedyPen;
    static Class          pcGreedyScore[]                  = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cGreedyScore;
    static Class          pcSetRareness[]                  = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cSetRareness;
    static Class          pcRareScore[]                    = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cRareScore;
    static Class          pcMaxRareScore[]                 = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cMaxRareScore;
    static Class          pcBestRareScore[]                = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cBestRareScore;
    static Class          pcAveRareScore[]                 = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cAveRareScore;
    static Class          pcSumRareScore[]                 = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cSumRareScore;
    static Class          pcSetAbundance[]                 = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cSetAbundance;
    static Class          pcIrreplaceability[]             = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cIrreplaceability;
    static Class          pcProdIrr[]                      = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cProdIrr;
    static Class          pcSumIrr[]                       = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cSumIrr;
    static Class          pcHeuristics[]                   = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Double.TYPE,
            java.lang.Double.TYPE,
            java.lang.Double.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cHeuristics;
    static Class          pcItImpDiscard[]                 = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cItImpDiscard;
    static Class          pcItImpUndiscard[]               = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cItImpUndiscard;
    static Class          pcFindSwap[]                     = {
            java.lang.Integer.TYPE,
            java.lang.Double.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Double.TYPE,
            java.lang.Double.TYPE,
            java.lang.Double.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cFindSwap;
    static Class          pcIterativeImprovement[]         = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Double.TYPE,
            java.lang.Double.TYPE,
            java.lang.Double.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cIterativeImprovement;
    static Class          pcsiftDown_ii[]                  = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     csiftDown_ii;
    static Class          pcheapSort_ii[]                  = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cheapSort_ii;
    static Class          pcIterativeImprovementOptimise[] = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Double.TYPE,
            java.lang.Double.TYPE,
            java.lang.Double.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cIterativeImprovementOptimise;
    static Class          pcrand1[]                        = {

    };
    public static int     crand1;
    static Class          pcInitRandSeed[]                 = {
            java.lang.Integer.TYPE
    };
    public static int     cInitRandSeed;
    static Class          pcRandNum[]                      = {
            java.lang.Integer.TYPE
    };
    public static int     cRandNum;
    static Class          pcSepPenalty[]                   = {
            java.lang.Integer.TYPE
    };
    public static int     cSepPenalty;
    static Class          pcSepPenalty2[]                  = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cSepPenalty2;
    static Class          pcValidPU[]                      = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cValidPU;
    static Class          pcCheckDistance[]                = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Double.TYPE
    };
    public static int     cCheckDistance;
    static Class          pcCountSeparation[]              = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cCountSeparation;
    static Class          pcmakelist[]                     = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cmakelist;
    static Class          pcSepDealList[]                  = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Double.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cSepDealList;
    static Class          pcCountSeparation2[]             = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cCountSeparation2;
    static Class          pcUsage[]                        = {
            java.lang.Integer.TYPE
    };
    public static int     cUsage;
    static Class          pcHandleOptions[]                = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cHandleOptions;
    static Class          pcmain[]                         = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cmain;
    static Class          pcApplySpecProp[]                = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cApplySpecProp;
    static Class          pcReturnPuZoneCost[]             = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cReturnPuZoneCost;
    static Class          pcCalcTotalAreas[]               = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cCalcTotalAreas;
    static Class          pcComputeZoneConnectivitySum[]   = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cComputeZoneConnectivitySum;
    static Class          pcOutputZoneConnectivitySum[]    = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cOutputZoneConnectivitySum;
    static Class          pcDumpAsymmetricConnectionFile[] = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cDumpAsymmetricConnectionFile;
    static Class          pcOutputTotalAreas[]             = {
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE,
            java.lang.Integer.TYPE
    };
    public static int     cOutputTotalAreas;

    static {
        try {
            cMarZone = getMethod(Class.forName(class_name), "cMarZone", pcMarZone);
            cLoadZones = getMethod(Class.forName(class_name), "cLoadZones", pcLoadZones);
            cDefaultZones = getMethod(Class.forName(class_name), "cDefaultZones", pcDefaultZones);
            cDumpZoneNames = getMethod(Class.forName(class_name), "cDumpZoneNames", pcDumpZoneNames);
            cLoadCostNames = getMethod(Class.forName(class_name), "cLoadCostNames", pcLoadCostNames);
            cDefaultCostNames = getMethod(Class.forName(class_name), "cDefaultCostNames", pcDefaultCostNames);
            cDumpCostNames = getMethod(Class.forName(class_name), "cDumpCostNames", pcDumpCostNames);
            crtnCostIndex = getMethod(Class.forName(class_name), "crtnCostIndex", pcrtnCostIndex);
            cLoadCostValues = getMethod(Class.forName(class_name), "cLoadCostValues", pcLoadCostValues);
            cDumpCostFieldNumber = getMethod(Class
                    .forName(class_name), "cDumpCostFieldNumber", pcDumpCostFieldNumber);
            cDumpCostValues = getMethod(Class.forName(class_name), "cDumpCostValues", pcDumpCostValues);
            cLoadZoneContrib = getMethod(Class.forName(class_name), "cLoadZoneContrib", pcLoadZoneContrib);
            cLoadZoneContrib2 = getMethod(Class.forName(class_name), "cLoadZoneContrib2", pcLoadZoneContrib2);
            cLoadZoneContrib3 = getMethod(Class.forName(class_name), "cLoadZoneContrib3", pcLoadZoneContrib3);
            cBuild_ZoneContrib = getMethod(Class
                    .forName(class_name), "cBuild_ZoneContrib", pcBuild_ZoneContrib);
            cBuild_ZoneContrib2 = getMethod(Class
                    .forName(class_name), "cBuild_ZoneContrib2", pcBuild_ZoneContrib2);
            cUpdate_ZoneContrib2 = getMethod(Class
                    .forName(class_name), "cUpdate_ZoneContrib2", pcUpdate_ZoneContrib2);
            cBuild_ZoneContrib3 = getMethod(Class
                    .forName(class_name), "cBuild_ZoneContrib3", pcBuild_ZoneContrib3);
            cDefault_ZoneContrib = getMethod(Class
                    .forName(class_name), "cDefault_ZoneContrib", pcDefault_ZoneContrib);
            cDump_ZoneContrib = getMethod(Class.forName(class_name), "cDump_ZoneContrib", pcDump_ZoneContrib);
            cDumpZoneContrib = getMethod(Class.forName(class_name), "cDumpZoneContrib", pcDumpZoneContrib);
            cDumpZoneContrib2 = getMethod(Class.forName(class_name), "cDumpZoneContrib2", pcDumpZoneContrib2);
            cDumpZoneContrib3 = getMethod(Class.forName(class_name), "cDumpZoneContrib3", pcDumpZoneContrib3);
            cLoadZoneTarget = getMethod(Class.forName(class_name), "cLoadZoneTarget", pcLoadZoneTarget);
            cLoadZoneTarget2 = getMethod(Class.forName(class_name), "cLoadZoneTarget2", pcLoadZoneTarget2);
            cBuild_ZoneTarget = getMethod(Class.forName(class_name), "cBuild_ZoneTarget", pcBuild_ZoneTarget);
            cBuild_ZoneTarget2 = getMethod(Class
                    .forName(class_name), "cBuild_ZoneTarget2", pcBuild_ZoneTarget2);
            cUpdate_ZoneTarget2 = getMethod(Class
                    .forName(class_name), "cUpdate_ZoneTarget2", pcUpdate_ZoneTarget2);
            cDefault_ZoneTarget = getMethod(Class
                    .forName(class_name), "cDefault_ZoneTarget", pcDefault_ZoneTarget);
            cDump_ZoneTarget = getMethod(Class.forName(class_name), "cDump_ZoneTarget", pcDump_ZoneTarget);
            cDumpZoneTarget = getMethod(Class.forName(class_name), "cDumpZoneTarget", pcDumpZoneTarget);
            cDumpZoneTarget2 = getMethod(Class.forName(class_name), "cDumpZoneTarget2", pcDumpZoneTarget2);
            cLoadZoneCost = getMethod(Class.forName(class_name), "cLoadZoneCost", pcLoadZoneCost);
            cDefaultZoneCost = getMethod(Class.forName(class_name), "cDefaultZoneCost", pcDefaultZoneCost);
            cBuild_ZoneCost = getMethod(Class.forName(class_name), "cBuild_ZoneCost", pcBuild_ZoneCost);
            cDump_ZoneCost = getMethod(Class.forName(class_name), "cDump_ZoneCost", pcDump_ZoneCost);
            cDumpZoneCost = getMethod(Class.forName(class_name), "cDumpZoneCost", pcDumpZoneCost);
            cLoadPuLock = getMethod(Class.forName(class_name), "cLoadPuLock", pcLoadPuLock);
            cDumpPuLock = getMethod(Class.forName(class_name), "cDumpPuLock", pcDumpPuLock);
            cLoadPuZone = getMethod(Class.forName(class_name), "cLoadPuZone", pcLoadPuZone);
            cDumpPuZone = getMethod(Class.forName(class_name), "cDumpPuZone", pcDumpPuZone);
            cDumpPuZone_Debug = getMethod(Class.forName(class_name), "cDumpPuZone_Debug", pcDumpPuZone_Debug);
            cLoadRelConnectionCost = getMethod(Class
                    .forName(class_name), "cLoadRelConnectionCost", pcLoadRelConnectionCost);
            cDumpRelConnectionCost = getMethod(Class
                    .forName(class_name), "cDumpRelConnectionCost", pcDumpRelConnectionCost);
            cBuild_RelConnectionCost = getMethod(Class
                    .forName(class_name), "cBuild_RelConnectionCost", pcBuild_RelConnectionCost);
            cDefault_RelConnectionCost = getMethod(Class
                    .forName(class_name), "cDefault_RelConnectionCost", pcDefault_RelConnectionCost);
            cDump_RelConnectionCost = getMethod(Class
                    .forName(class_name), "cDump_RelConnectionCost", pcDump_RelConnectionCost);
            cBuildZoneSpec = getMethod(Class.forName(class_name), "cBuildZoneSpec", pcBuildZoneSpec);
            cInitZoneSpec = getMethod(Class.forName(class_name), "cInitZoneSpec", pcInitZoneSpec);
            cDumpZoneSpec = getMethod(Class.forName(class_name), "cDumpZoneSpec", pcDumpZoneSpec);
            cDumpR = getMethod(Class.forName(class_name), "cDumpR", pcDumpR);
            cInitSumSoln = getMethod(Class.forName(class_name), "cInitSumSoln", pcInitSumSoln);
            cDumpFileNames = getMethod(Class.forName(class_name), "cDumpFileNames", pcDumpFileNames);
            cTestrtnAmountSpecAtPu = getMethod(Class
                    .forName(class_name), "cTestrtnAmountSpecAtPu", pcTestrtnAmountSpecAtPu);
            crtnIdxSpecAtPu = getMethod(Class.forName(class_name), "crtnIdxSpecAtPu", pcrtnIdxSpecAtPu);
            crtnClumpSpecAtPu = getMethod(Class.forName(class_name), "crtnClumpSpecAtPu", pcrtnClumpSpecAtPu);
            csetClumpSpecAtPu = getMethod(Class.forName(class_name), "csetClumpSpecAtPu", pcsetClumpSpecAtPu);
            crtnAmountSpecAtPu = getMethod(Class
                    .forName(class_name), "crtnAmountSpecAtPu", pcrtnAmountSpecAtPu);
            crtnConvertZoneAmount = getMethod(Class
                    .forName(class_name), "crtnConvertZoneAmount", pcrtnConvertZoneAmount);
            cParsePuLock = getMethod(Class.forName(class_name), "cParsePuLock", pcParsePuLock);
            cParsePuZone = getMethod(Class.forName(class_name), "cParsePuZone", pcParsePuZone);
            cCheckPuZone = getMethod(Class.forName(class_name), "cCheckPuZone", pcCheckPuZone);
            cDumpPuLockZone = getMethod(Class.forName(class_name), "cDumpPuLockZone", pcDumpPuLockZone);
            cSetBlockDefs = getMethod(Class.forName(class_name), "cSetBlockDefs", pcSetBlockDefs);
            cSetDefs = getMethod(Class.forName(class_name), "cSetDefs", pcSetDefs);
            cSetRunOptions = getMethod(Class.forName(class_name), "cSetRunOptions", pcSetRunOptions);
            cPuNotInAllowedZone = getMethod(Class
                    .forName(class_name), "cPuNotInAllowedZone", pcPuNotInAllowedZone);
            cInitialiseReserve = getMethod(Class
                    .forName(class_name), "cInitialiseReserve", pcInitialiseReserve);
            cAddReserve = getMethod(Class.forName(class_name), "cAddReserve", pcAddReserve);
            cCalcPenalties = getMethod(Class.forName(class_name), "cCalcPenalties", pcCalcPenalties);
            cAddReserve_CPO = getMethod(Class.forName(class_name), "cAddReserve_CPO", pcAddReserve_CPO);
            cCalcPenaltiesOptimise = getMethod(Class
                    .forName(class_name), "cCalcPenaltiesOptimise", pcCalcPenaltiesOptimise);
            cConnectionCost1 = getMethod(Class.forName(class_name), "cConnectionCost1", pcConnectionCost1);
            ccost = getMethod(Class.forName(class_name), "ccost", pccost);
            crtnMaxNonAvailableCost = getMethod(Class
                    .forName(class_name), "crtnMaxNonAvailableCost", pcrtnMaxNonAvailableCost);
            cConnectionCost2 = getMethod(Class.forName(class_name), "cConnectionCost2", pcConnectionCost2);
            cChangePen = getMethod(Class.forName(class_name), "cChangePen", pcChangePen);
            cConnectionCost2Linear = getMethod(Class
                    .forName(class_name), "cConnectionCost2Linear", pcConnectionCost2Linear);
            cOutputZonationCostDebugTable = getMethod(Class
                    .forName(class_name), "cOutputZonationCostDebugTable", pcOutputZonationCostDebugTable);
            cZonationCost = getMethod(Class.forName(class_name), "cZonationCost", pcZonationCost);
            cInitReserve = getMethod(Class.forName(class_name), "cInitReserve", pcInitReserve);
            cSpeciesAmounts = getMethod(Class.forName(class_name), "cSpeciesAmounts", pcSpeciesAmounts);
            cThresholdPenalty = getMethod(Class.forName(class_name), "cThresholdPenalty", pcThresholdPenalty);
            cCheckChange = getMethod(Class.forName(class_name), "cCheckChange", pcCheckChange);
            cNewPenalty = getMethod(Class.forName(class_name), "cNewPenalty", pcNewPenalty);
            cGoodChange = getMethod(Class.forName(class_name), "cGoodChange", pcGoodChange);
            cDoChange = getMethod(Class.forName(class_name), "cDoChange", pcDoChange);
            cCountMissing = getMethod(Class.forName(class_name), "cCountMissing", pcCountMissing);
            cCountPuZones = getMethod(Class.forName(class_name), "cCountPuZones", pcCountPuZones);
            cPrintResVal = getMethod(Class.forName(class_name), "cPrintResVal", pcPrintResVal);
            cChangeCost = getMethod(Class.forName(class_name), "cChangeCost", pcChangeCost);
            cConnollyInit = getMethod(Class.forName(class_name), "cConnollyInit", pcConnollyInit);
            cAdaptiveInit = getMethod(Class.forName(class_name), "cAdaptiveInit", pcAdaptiveInit);
            cAdaptiveDec = getMethod(Class.forName(class_name), "cAdaptiveDec", pcAdaptiveDec);
            cAnnealing = getMethod(Class.forName(class_name), "cAnnealing", pcAnnealing);
            cDumpBinarySearchArrays = getMethod(Class
                    .forName(class_name), "cDumpBinarySearchArrays", pcDumpBinarySearchArrays);
            csiftDown = getMethod(Class.forName(class_name), "csiftDown", pcsiftDown);
            cheapSort = getMethod(Class.forName(class_name), "cheapSort", pcheapSort);
            cheapSortBinSearch = getMethod(Class
                    .forName(class_name), "cheapSortBinSearch", pcheapSortBinSearch);
            cPrepareBinarySearchArrays = getMethod(Class
                    .forName(class_name), "cPrepareBinarySearchArrays", pcPrepareBinarySearchArrays);
            cTestFastPUIDtoPUINDEX = getMethod(Class
                    .forName(class_name), "cTestFastPUIDtoPUINDEX", pcTestFastPUIDtoPUINDEX);
            cFastPUIDtoPUINDEX = getMethod(Class
                    .forName(class_name), "cFastPUIDtoPUINDEX", pcFastPUIDtoPUINDEX);
            cTestFastSPIDtoSPINDEX = getMethod(Class
                    .forName(class_name), "cTestFastSPIDtoSPINDEX", pcTestFastSPIDtoSPINDEX);
            cFastSPIDtoSPINDEX = getMethod(Class
                    .forName(class_name), "cFastSPIDtoSPINDEX", pcFastSPIDtoSPINDEX);
            cClearClump = getMethod(Class.forName(class_name), "cClearClump", pcClearClump);
            cClumpCut = getMethod(Class.forName(class_name), "cClumpCut", pcClumpCut);
            cClearClumps = getMethod(Class.forName(class_name), "cClearClumps", pcClearClumps);
            cAddNewClump = getMethod(Class.forName(class_name), "cAddNewClump", pcAddNewClump);
            cAddNewPU = getMethod(Class.forName(class_name), "cAddNewPU", pcAddNewPU);
            cRemPu = getMethod(Class.forName(class_name), "cRemPu", pcRemPu);
            cSetSpeciesClumps = getMethod(Class.forName(class_name), "cSetSpeciesClumps", pcSetSpeciesClumps);
            cSpeciesAmounts4 = getMethod(Class.forName(class_name), "cSpeciesAmounts4", pcSpeciesAmounts4);
            cRemClumpCheck = getMethod(Class.forName(class_name), "cRemClumpCheck", pcRemClumpCheck);
            cCalcPenaltyType4 = getMethod(Class.forName(class_name), "cCalcPenaltyType4", pcCalcPenaltyType4);
            cPartialPen4 = getMethod(Class.forName(class_name), "cPartialPen4", pcPartialPen4);
            cValueAdd = getMethod(Class.forName(class_name), "cValueAdd", pcValueAdd);
            cValueRem = getMethod(Class.forName(class_name), "cValueRem", pcValueRem);
            cNewPenalty4 = getMethod(Class.forName(class_name), "cNewPenalty4", pcNewPenalty4);
            cShowStartupScreen = getMethod(Class
                    .forName(class_name), "cShowStartupScreen", pcShowStartupScreen);
            cShowShutdownScreen = getMethod(Class
                    .forName(class_name), "cShowShutdownScreen", pcShowShutdownScreen);
            cWriteStopErrorFile = getMethod(Class
                    .forName(class_name), "cWriteStopErrorFile", pcWriteStopErrorFile);
            cShowPauseExit = getMethod(Class.forName(class_name), "cShowPauseExit", pcShowPauseExit);
            cWriteSlaveSyncFileRun = getMethod(Class
                    .forName(class_name), "cWriteSlaveSyncFileRun", pcWriteSlaveSyncFileRun);
            cWriteSlaveSyncFile = getMethod(Class
                    .forName(class_name), "cWriteSlaveSyncFile", pcWriteSlaveSyncFile);
            cSlaveExit = getMethod(Class.forName(class_name), "cSlaveExit", pcSlaveExit);
            cShowPauseProg = getMethod(Class.forName(class_name), "cShowPauseProg", pcShowPauseProg);
            cSetVerbosity = getMethod(Class.forName(class_name), "cSetVerbosity", pcSetVerbosity);
            cShowErrorMessage = getMethod(Class.forName(class_name), "cShowErrorMessage", pcShowErrorMessage);
            cShowWarningMessage = getMethod(Class
                    .forName(class_name), "cShowWarningMessage", pcShowWarningMessage);
            cShowProg = getMethod(Class.forName(class_name), "cShowProg", pcShowProg);
            cStartDebugTraceFile = getMethod(Class
                    .forName(class_name), "cStartDebugTraceFile", pcStartDebugTraceFile);
            cAppendDebugTraceFile = getMethod(Class
                    .forName(class_name), "cAppendDebugTraceFile", pcAppendDebugTraceFile);
            cStartDebugFile = getMethod(Class.forName(class_name), "cStartDebugFile", pcStartDebugFile);
            cAppendDebugFile = getMethod(Class.forName(class_name), "cAppendDebugFile", pcAppendDebugFile);
            cShowGenProg = getMethod(Class.forName(class_name), "cShowGenProg", pcShowGenProg);
            cShowGenProgInfo = getMethod(Class.forName(class_name), "cShowGenProgInfo", pcShowGenProgInfo);
            cShowDetProg = getMethod(Class.forName(class_name), "cShowDetProg", pcShowDetProg);
            cShowTimePassed = getMethod(Class.forName(class_name), "cShowTimePassed", pcShowTimePassed);
            cSetLogFile = getMethod(Class.forName(class_name), "cSetLogFile", pcSetLogFile);
            cGetVarNamePU = getMethod(Class.forName(class_name), "cGetVarNamePU", pcGetVarNamePU);
            cGetVarName = getMethod(Class.forName(class_name), "cGetVarName", pcGetVarName);
            cCheckVarName = getMethod(Class.forName(class_name), "cCheckVarName", pcCheckVarName);
            cReadNameList = getMethod(Class.forName(class_name), "cReadNameList", pcReadNameList);
            crdsvar = getMethod(Class.forName(class_name), "crdsvar", pcrdsvar);
            cSetOptions = getMethod(Class.forName(class_name), "cSetOptions", pcSetOptions);
            cReadPUCosts = getMethod(Class.forName(class_name), "cReadPUCosts", pcReadPUCosts);
            cReadSpeciesData = getMethod(Class.forName(class_name), "cReadSpeciesData", pcReadSpeciesData);
            cReadPUFile = getMethod(Class.forName(class_name), "cReadPUFile", pcReadPUFile);
            cReadPUXYfile = getMethod(Class.forName(class_name), "cReadPUXYfile", pcReadPUXYfile);
            cReadPUData = getMethod(Class.forName(class_name), "cReadPUData", pcReadPUData);
            cReadSpeciesData2 = getMethod(Class.forName(class_name), "cReadSpeciesData2", pcReadSpeciesData2);
            cReadGenSpeciesData = getMethod(Class
                    .forName(class_name), "cReadGenSpeciesData", pcReadGenSpeciesData);
            cReadConnections = getMethod(Class.forName(class_name), "cReadConnections", pcReadConnections);
            cLoadSparseMatrix = getMethod(Class.forName(class_name), "cLoadSparseMatrix", pcLoadSparseMatrix);
            cLoadSparseMatrix_sporder = getMethod(Class
                    .forName(class_name), "cLoadSparseMatrix_sporder", pcLoadSparseMatrix_sporder);
            cDumpPU_richness_offset = getMethod(Class
                    .forName(class_name), "cDumpPU_richness_offset", pcDumpPU_richness_offset);
            cDumpSparseMatrix = getMethod(Class.forName(class_name), "cDumpSparseMatrix", pcDumpSparseMatrix);
            cSaveSeed = getMethod(Class.forName(class_name), "cSaveSeed", pcSaveSeed);
            cCountPuZones2 = getMethod(Class.forName(class_name), "cCountPuZones2", pcCountPuZones2);
            cCostPuZones = getMethod(Class.forName(class_name), "cCostPuZones", pcCostPuZones);
            cOutputSummary = getMethod(Class.forName(class_name), "cOutputSummary", pcOutputSummary);
            cOutputSpeciesData = getMethod(Class
                    .forName(class_name), "cOutputSpeciesData", pcOutputSpeciesData);
            cOutputPenalty = getMethod(Class.forName(class_name), "cOutputPenalty", pcOutputPenalty);
            cLoadPenalty = getMethod(Class.forName(class_name), "cLoadPenalty", pcLoadPenalty);
            cInitSolutionsMatrix = getMethod(Class
                    .forName(class_name), "cInitSolutionsMatrix", pcInitSolutionsMatrix);
            cAppendSolutionsMatrix = getMethod(Class
                    .forName(class_name), "cAppendSolutionsMatrix", pcAppendSolutionsMatrix);
            cAppendSolutionsMatrixZone = getMethod(Class
                    .forName(class_name), "cAppendSolutionsMatrixZone", pcAppendSolutionsMatrixZone);
            cOutputSolution = getMethod(Class.forName(class_name), "cOutputSolution", pcOutputSolution);
            cOutputScenario = getMethod(Class.forName(class_name), "cOutputScenario", pcOutputScenario);
            cOutputFeatures = getMethod(Class.forName(class_name), "cOutputFeatures", pcOutputFeatures);
            cOutputSumSoln = getMethod(Class.forName(class_name), "cOutputSumSoln", pcOutputSumSoln);
            cGreedyPen = getMethod(Class.forName(class_name), "cGreedyPen", pcGreedyPen);
            cGreedyScore = getMethod(Class.forName(class_name), "cGreedyScore", pcGreedyScore);
            cSetRareness = getMethod(Class.forName(class_name), "cSetRareness", pcSetRareness);
            cRareScore = getMethod(Class.forName(class_name), "cRareScore", pcRareScore);
            cMaxRareScore = getMethod(Class.forName(class_name), "cMaxRareScore", pcMaxRareScore);
            cBestRareScore = getMethod(Class.forName(class_name), "cBestRareScore", pcBestRareScore);
            cAveRareScore = getMethod(Class.forName(class_name), "cAveRareScore", pcAveRareScore);
            cSumRareScore = getMethod(Class.forName(class_name), "cSumRareScore", pcSumRareScore);
            cSetAbundance = getMethod(Class.forName(class_name), "cSetAbundance", pcSetAbundance);
            cIrreplaceability = getMethod(Class.forName(class_name), "cIrreplaceability", pcIrreplaceability);
            cProdIrr = getMethod(Class.forName(class_name), "cProdIrr", pcProdIrr);
            cSumIrr = getMethod(Class.forName(class_name), "cSumIrr", pcSumIrr);
            cHeuristics = getMethod(Class.forName(class_name), "cHeuristics", pcHeuristics);
            cItImpDiscard = getMethod(Class.forName(class_name), "cItImpDiscard", pcItImpDiscard);
            cItImpUndiscard = getMethod(Class.forName(class_name), "cItImpUndiscard", pcItImpUndiscard);
            cFindSwap = getMethod(Class.forName(class_name), "cFindSwap", pcFindSwap);
            cIterativeImprovement = getMethod(Class
                    .forName(class_name), "cIterativeImprovement", pcIterativeImprovement);
            csiftDown_ii = getMethod(Class.forName(class_name), "csiftDown_ii", pcsiftDown_ii);
            cheapSort_ii = getMethod(Class.forName(class_name), "cheapSort_ii", pcheapSort_ii);
            cIterativeImprovementOptimise = getMethod(Class
                    .forName(class_name), "cIterativeImprovementOptimise", pcIterativeImprovementOptimise);
            crand1 = getMethod(Class.forName(class_name), "crand1", pcrand1);
            cInitRandSeed = getMethod(Class.forName(class_name), "cInitRandSeed", pcInitRandSeed);
            cRandNum = getMethod(Class.forName(class_name), "cRandNum", pcRandNum);
            cSepPenalty = getMethod(Class.forName(class_name), "cSepPenalty", pcSepPenalty);
            cSepPenalty2 = getMethod(Class.forName(class_name), "cSepPenalty2", pcSepPenalty2);
            cValidPU = getMethod(Class.forName(class_name), "cValidPU", pcValidPU);
            cCheckDistance = getMethod(Class.forName(class_name), "cCheckDistance", pcCheckDistance);
            cCountSeparation = getMethod(Class.forName(class_name), "cCountSeparation", pcCountSeparation);
            cmakelist = getMethod(Class.forName(class_name), "cmakelist", pcmakelist);
            cSepDealList = getMethod(Class.forName(class_name), "cSepDealList", pcSepDealList);
            cCountSeparation2 = getMethod(Class.forName(class_name), "cCountSeparation2", pcCountSeparation2);
            cUsage = getMethod(Class.forName(class_name), "cUsage", pcUsage);
            cHandleOptions = getMethod(Class.forName(class_name), "cHandleOptions", pcHandleOptions);
            cmain = getMethod(Class.forName(class_name), "cmain", pcmain);
            cApplySpecProp = getMethod(Class.forName(class_name), "cApplySpecProp", pcApplySpecProp);
            cReturnPuZoneCost = getMethod(Class.forName(class_name), "cReturnPuZoneCost", pcReturnPuZoneCost);
            cCalcTotalAreas = getMethod(Class.forName(class_name), "cCalcTotalAreas", pcCalcTotalAreas);
            cComputeZoneConnectivitySum = getMethod(Class
                    .forName(class_name), "cComputeZoneConnectivitySum", pcComputeZoneConnectivitySum);
            cOutputZoneConnectivitySum = getMethod(Class
                    .forName(class_name), "cOutputZoneConnectivitySum", pcOutputZoneConnectivitySum);
            cDumpAsymmetricConnectionFile = getMethod(Class
                    .forName(class_name), "cDumpAsymmetricConnectionFile", pcDumpAsymmetricConnectionFile);
            cOutputTotalAreas = getMethod(Class.forName(class_name), "cOutputTotalAreas", pcOutputTotalAreas);
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }
    public static int cbestyet                           = alloconstack(0);
    public static int cdelta                             = alloconstack(0);
    public static int cZones                             = alloconstack(0);
    public static int cCostNames                         = alloconstack(0);
    public static int cZoneContrib                       = alloconstack(0);
    public static int cZoneContrib2                      = alloconstack(0);
    public static int c_ZoneContrib                      = alloconstack(0);
    public static int cZoneContrib3                      = alloconstack(0);
    public static int c_ZoneContrib                      = alloconstack(0);
    public static int cZoneTarget                        = alloconstack(0);
    public static int cZoneTarget2                       = alloconstack(0);
    public static int c_ZoneTarget                       = alloconstack(0);
    public static int cZoneCost                          = alloconstack(0);
    public static int c_ZoneCost                         = alloconstack(0);
    public static int cPuLock                            = alloconstack(0);
    public static int cPuZone                            = alloconstack(0);
    public static int cRelConnectionCost                 = alloconstack(0);
    public static int c_RelConnectionCost                = alloconstack(0);
    public static int cZoneSpec                          = alloconstack(0);
    public static int cPULookup                          = alloconstack(0);
    public static int cSPLookup                          = alloconstack(0);
    public static int cSM                                = alloconstack(0);
    public static int cSMsporder                         = alloconstack(0);
    public static int cpu                                = alloconstack(0);
    public static int creserve                           = calloc_init(52);
    public static int cchange                            = calloc_init(52);
    public static int cdebugcost                         = calloc_init(52);
    public static int cspec                              = alloconstack(0);
    public static int cdebugnbr                          = alloconstack(0);
    public static int cconnections                       = alloconstack(0);
    public static int canneal                            = calloc_init(72);
    public static int cfnames                            = calloc_init(168);
    public static int crunoptions                        = calloc_init(12);
    public static int cjmpbuf                            = calloc_init(48);
    public static int ciMemoryUsed                       = alloconstack(0);
    public static int ciCostCount                        = alloconstack(0);
    public static int ciZoneCount                        = alloconstack(0);
    public static int cfSpecPROPLoaded                   = alloconstack(0);
    public static int cmarxanisslave                     = alloconstack(0);
    public static int cCostValues                        = alloconstack(0);
    public static int cRandSeed1                         = alloconstack(0);
    public static int csVersionString                    = (int) (jtocstr("Marxan with Zones v 2.03", 50));
    public static int csIanBallEmail                     = (int) (jtocstr("ian.ball@aad.gov.au", 50));
    public static int csHughPossinghamEmail              = (int) (jtocstr("h.possingham@uq.edu.au", 50));
    public static int csMattWattsEmail                   = (int) (jtocstr("m.watts@uq.edu.au", 50));
    public static int csMarxanWebSite                    = (int) (jtocstr("http://www.uq.edu.au/marxan", 50));
    public static int csDebugTraceFileName               = (int) (jtocstr("DebugTraceFile_Marxan_with_Zones.txt", 50));
    public static int ciAvailableZoneInput               = alloconstack(0);
    public static int ciVerbosity                        = alloconstack(0);
    public static int csavelog                           = alloconstack(0);
    public static int csavelogname                       = alloconstack(0);
    public static int cfsavelog                          = alloconstack(0);
    public static int ciOptimisationIterativeImprovement = alloconstack(1);
    public static int ciPuZoneCount                      = alloconstack(0);
    public static int ciOptimisationCalcPenalties        = alloconstack(1);
    public static int crClocksPerSec                     = alloconstack(0);
    public static int cTotalAreas                        = alloconstack(0);
    public static int casymmetricconnectivity            = alloconstack(0);
    public static int ciZoneContrib3On                   = alloconstack(0);
    public static int ciZonationCost                     = alloconstack(0);
    static int        strmarxan2                         = jtocstr("%s begin execution\n\n");
    static int        strmarxan3                         = jtocstr("LoadOptions\n");
    static int        strmarxan4                         = jtocstr("%s_log.dat");
    static int        strmarxan5                         = jtocstr("RandSeed iseed %i RandSeed1 %li\n");
    static int        strmarxan6                         = jtocstr("style is %i\n");
    static int        strmarxan7                         = jtocstr("\nEntering in the data files \n");
    static int        strmarxan8                         = jtocstr("NULL");
    static int        strmarxan9                         = jtocstr("before LoadZones\n");
    static int        strmarxan10                        = jtocstr("after LoadZones\n");
    static int        strmarxan11                        = jtocstr("before DefaultZones\n");
    static int        strmarxan12                        = jtocstr("after DefaultZones\n");
    static int        strmarxan13                        = jtocstr("before LoadCostNames\n");
    static int        strmarxan14                        = jtocstr("after LoadCostNames\n");
    static int        strmarxan15                        = jtocstr("before DefaultCostNames\n");
    static int        strmarxan16                        = jtocstr("after DefaultCostNames\n");
    static int        strmarxan17                        = jtocstr("before LoadZoneContrib\n");
    static int        strmarxan18                        = jtocstr("after LoadZoneContrib\n");
    static int        strmarxan19                        = jtocstr("before LoadZoneContrib2\n");
    static int        strmarxan20                        = jtocstr("after LoadZoneContrib2\n");
    static int        strmarxan21                        = jtocstr("before LoadZoneContrib3\n");
    static int        strmarxan22                        = jtocstr("after LoadZoneContrib3\n");
    static int        strmarxan23                        = jtocstr("before LoadZoneTarget\n");
    static int        strmarxan24                        = jtocstr("after LoadZoneTarget\n");
    static int        strmarxan25                        = jtocstr("before LoadZoneTarget2\n");
    static int        strmarxan26                        = jtocstr("after LoadZoneTarget2\n");
    static int        strmarxan27                        = jtocstr("before LoadZoneCost\n");
    static int        strmarxan28                        = jtocstr("after LoadZoneCost\n");
    static int        strmarxan29                        = jtocstr("before DefaultZoneCost\n");
    static int        strmarxan30                        = jtocstr("after DefaultZoneCost\n");
    static int        strmarxan31                        = jtocstr("before LoadPuLock\n");
    static int        strmarxan32                        = jtocstr("after LoadPuLock\n");
    static int        strmarxan33                        = jtocstr("before LoadPuZone\n");
    static int        strmarxan34                        = jtocstr("after LoadPuZone\n");
    static int        strmarxan35                        = jtocstr("before LoadZoneConnectionCost\n");
    static int        strmarxan36                        = jtocstr("after LoadZoneConnectionCost\n");
    static int        strmarxan37                        = jtocstr("before LoadPuData\n");
    static int        strmarxan38                        = jtocstr("    Reading in the Planning Unit names \n");
    static int        strmarxan39                        = jtocstr("after LoadPuData\n");
    static int        strmarxan40                        = jtocstr("   There are %i Planning units.\n  %i Planning Unit names read in \n");
    static int        strmarxan41                        = jtocstr("before LoadCostValues\n");
    static int        strmarxan42                        = jtocstr("after LoadCostValues\n");
    static int        strmarxan43                        = jtocstr("    Reading in the species file \n");
    static int        strmarxan44                        = jtocstr("before LoadSpeciesData\n");
    static int        strmarxan45                        = jtocstr("after LoadSpeciesData\n");
    static int        strmarxan46                        = jtocstr("  %i species read in \n");
    static int        strmarxan47                        = jtocstr("before build search arrays\n");
    static int        strmarxan48                        = jtocstr("after build search arrays\n");
    static int        strmarxan49                        = jtocstr("both zonecontrib & zonecontrib2 are defined\n");
    static int        strmarxan50                        = jtocstr("both zonecontrib & zonecontrib3 are defined\n");
    static int        strmarxan51                        = jtocstr("before Build_ZoneContrib\n");
    static int        strmarxan52                        = jtocstr("after Build_ZoneContrib\n");
    static int        strmarxan53                        = jtocstr("both zonecontrib2 & zonecontrib3 are defined\n");
    static int        strmarxan54                        = jtocstr("before Build_ZoneContrib2\n");
    static int        strmarxan55                        = jtocstr("after Build_ZoneContrib2\n");
    static int        strmarxan56                        = jtocstr("before Build_ZoneContrib3\n");
    static int        strmarxan57                        = jtocstr("after Build_ZoneContrib3\n");
    static int        strmarxan58                        = jtocstr("before Default_ZoneContrib\n");
    static int        strmarxan59                        = jtocstr("after Default_ZoneContrib\n");
    static int        strmarxan60                        = jtocstr("Warning: No targets specified for zones.\n");
    static int        strmarxan61                        = jtocstr("before Default_ZoneTarget\n");
    static int        strmarxan62                        = jtocstr("after Default_ZoneTarget\n");
    static int        strmarxan63                        = jtocstr("before Build_ZoneCost\n");
    static int        strmarxan64                        = jtocstr("after Build_ZoneCost\n");
    static int        strmarxan65                        = jtocstr("before Build_RelConnectionCost\n");
    static int        strmarxan66                        = jtocstr("after Build_RelConnectionCost\n");
    static int        strmarxan67                        = jtocstr("before Default_RelConnectionCost\n");
    static int        strmarxan68                        = jtocstr("after Default_RelConnectionCost\n");
    static int        strmarxan69                        = jtocstr("before BuildZoneSpec\n");
    static int        strmarxan70                        = jtocstr("after BuildZoneSpec\n");
    static int        strmarxan71                        = jtocstr("before InitZoneSpec\n");
    static int        strmarxan72                        = jtocstr("after InitZoneSpec\n");
    static int        strmarxan73                        = jtocstr("before ParsePuLock\n");
    static int        strmarxan74                        = jtocstr("after ParsePuLock\n");
    static int        strmarxan75                        = jtocstr("before ParsePuZone\n");
    static int        strmarxan76                        = jtocstr("after ParsePuZone\n");
    static int        strmarxan77                        = jtocstr("before CheckPuZone\n");
    static int        strmarxan78                        = jtocstr("after CheckPuZone\n");
    static int        strmarxan79                        = jtocstr("before InitSumSoln\n");
    static int        strmarxan80                        = jtocstr("after InitSumSoln\n");
    static int        strmarxan81                        = jtocstr("    Reading in the Connection file :\n");
    static int        strmarxan82                        = jtocstr("before ReadConnections\n");
    static int        strmarxan83                        = jtocstr("after ReadConnections\n");
    static int        strmarxan84                        = jtocstr("Asymmetric connectivity is on.\n");
    static int        strmarxan85                        = jtocstr("  %i connections entered \n");
    static int        strmarxan86                        = jtocstr("    Reading in the Planning Unit versus Species File \n");
    static int        strmarxan87                        = jtocstr("before LoadSparseMatrix\n");
    static int        strmarxan88                        = jtocstr("after LoadSparseMatrix\n");
    static int        strmarxan89                        = jtocstr("before LoadSparseMatrix_sporder\n");
    static int        strmarxan90                        = jtocstr("after LoadSparseMatrix_sporder\n");
    static int        strmarxan91                        = jtocstr("before CalcTotalAreas\n");
    static int        strmarxan92                        = jtocstr("after CalcTotalAreas\n");
    static int        strmarxan93                        = jtocstr("%s_totalareas.csv");
    static int        strmarxan94                        = jtocstr("%s_totalareas.txt");
    static int        strmarxan95                        = jtocstr("%s_totalareas.dat");
    static int        strmarxan96                        = jtocstr("before ApplySpecProp\n");
    static int        strmarxan97                        = jtocstr("after ApplySpecProp\n");
    static int        strmarxan98                        = jtocstr("before Build_ZoneTarget\n");
    static int        strmarxan99                        = jtocstr("after Build_ZoneTarget\n");
    static int        strmarxan100                       = jtocstr("before Build_ZoneTarget2\n");
    static int        strmarxan101                       = jtocstr("after Build_ZoneTarget2\n");
    static int        strmarxan102                       = jtocstr("before Update_ZoneTarget2\n");
    static int        strmarxan103                       = jtocstr("after Update_ZoneTarget2\n");
    static int        strmarxan104                       = jtocstr("before process block definitions\n");
    static int        strmarxan105                       = jtocstr("    Reading in the Block Definition File \n");
    static int        strmarxan106                       = jtocstr("after process block definitions\n");
    static int        strmarxan107                       = jtocstr("Checking to see if there are aggregating or separating species.\n");
    static int        strmarxan108                       = jtocstr("before OutputScenario\n");
    static int        strmarxan109                       = jtocstr("%s_sen.dat");
    static int        strmarxan110                       = jtocstr("after OutputScenario\n");
    static int        strmarxan111                       = jtocstr("before InitialiseReserve\n");
    static int        strmarxan112                       = jtocstr("after InitialiseReserve\n");
    static int        strmarxan113                       = jtocstr("\nPre-processing Section. \n");
    static int        strmarxan114                       = jtocstr("    Calculating all the penalties \n");
    static int        strmarxan115                       = jtocstr("before CalcPenalties\n");
    static int        strmarxan116                       = jtocstr("after CalcPenalties\n");
    static int        strmarxan117                       = jtocstr("before CalcPenaltiesOptimise\n");
    static int        strmarxan118                       = jtocstr("after CalcPenaltiesOptimise\n");
    static int        strmarxan119                       = jtocstr("%d species cannot meet target%c.\n");
    static int        strmarxan120                       = jtocstr("before LoadPenalties\n");
    static int        strmarxan121                       = jtocstr("after LoadPenalties\n");
    static int        strmarxan122                       = jtocstr("    Calculating temperatures.\n");
    static int        strmarxan123                       = jtocstr("Initial Temperature is set to zero. Fatal Error \n");
    static int        strmarxan124                       = jtocstr("  Temperature length %d \n");
    static int        strmarxan125                       = jtocstr("  iterations %i, repeats %i \n");
    static int        strmarxan126                       = jtocstr("%s_penalty.csv");
    static int        strmarxan127                       = jtocstr("%s_penalty.txt");
    static int        strmarxan128                       = jtocstr("%s_penalty.dat");
    static int        strmarxan129                       = jtocstr("%s_spec.csv");
    static int        strmarxan130                       = jtocstr("%s_solutionsmatrix.csv");
    static int        strmarxan131                       = jtocstr("%s_solutionsmatrix.txt");
    static int        strmarxan132                       = jtocstr("%s_solutionsmatrix.dat");
    static int        strmarxan133                       = jtocstr("%s_solutionsmatrix_zone%i.csv");
    static int        strmarxan134                       = jtocstr("%s_solutionsmatrix_zone%i.txt");
    static int        strmarxan135                       = jtocstr("%s_solutionsmatrix_zone%i.dat");
    static int        strmarxan136                       = jtocstr("annealing start run %i\n");
    static int        strmarxan137                       = jtocstr("\n");
    static int        strmarxan138                       = jtocstr("Run %i ");
    static int        strmarxan139                       = jtocstr("before ConnollyInit run %i\n");
    static int        strmarxan140                       = jtocstr("after ConnollyInit run %i\n");
    static int        strmarxan141                       = jtocstr("before AdaptiveInit run %i\n");
    static int        strmarxan142                       = jtocstr("after AdaptiveInit run %i\n");
    static int        strmarxan143                       = jtocstr("  Using Calculated Tinit = %.4f Tcool = %.8f \n");
    static int        strmarxan144                       = jtocstr("  creating the initial reserve \n");
    static int        strmarxan145                       = jtocstr("before ZonationCost run %i\n");
    static int        strmarxan146                       = jtocstr("after ZonationCost run %i\n");
    static int        strmarxan147                       = jtocstr("\n  Init:");
    static int        strmarxan148                       = jtocstr("before Annealing run %i\n");
    static int        strmarxan149                       = jtocstr("after Annealing run %i\n");
    static int        strmarxan150                       = jtocstr("before Heuristics run %i\n");
    static int        strmarxan151                       = jtocstr("\n  Heuristic:");
    static int        strmarxan152                       = jtocstr("after Heuristics run %i\n");
    static int        strmarxan153                       = jtocstr("before IterativeImprovementOptimise run %i\n");
    static int        strmarxan154                       = jtocstr("after IterativeImprovementOptimise run %i\n");
    static int        strmarxan155                       = jtocstr("before IterativeImprovement run %i\n");
    static int        strmarxan156                       = jtocstr("after IterativeImprovement run %i\n");
    static int        strmarxan157                       = jtocstr("  Iterative Improvement:");
    static int        strmarxan158                       = jtocstr("before file output run %i\n");
    static int        strmarxan159                       = jtocstr("%s_r%05i.csv");
    static int        strmarxan160                       = jtocstr("%s_r%05i.txt");
    static int        strmarxan161                       = jtocstr("%s_r%05i.dat");
    static int        strmarxan162                       = jtocstr("%s_mv%05i.csv");
    static int        strmarxan163                       = jtocstr("%s_mv%05i.txt");
    static int        strmarxan164                       = jtocstr("%s_mv%05i.dat");
    static int        strmarxan165                       = jtocstr("%s_sum.csv");
    static int        strmarxan166                       = jtocstr("%s_sum.txt");
    static int        strmarxan167                       = jtocstr("%s_sum.dat");
    static int        strmarxan168                       = jtocstr("  Best:");
    static int        strmarxan169                       = jtocstr("%s_zoneconnectivitysum%05i.csv");
    static int        strmarxan170                       = jtocstr("%s_zoneconnectivitysum%05i.txt");
    static int        strmarxan171                       = jtocstr("%s_zoneconnectivitysum%05i.dat");
    static int        strmarxan172                       = jtocstr("after file output run %i\n");
    static int        strmarxan173                       = jtocstr("annealing end run %i\n");
    static int        strmarxan174                       = jtocstr("before final file output\n");
    static int        strmarxan175                       = jtocstr("%s_best.csv");
    static int        strmarxan176                       = jtocstr("%s_best.txt");
    static int        strmarxan177                       = jtocstr("%s_best.dat");
    static int        strmarxan178                       = jtocstr("Best solution is run %i\n");
    static int        strmarxan179                       = jtocstr("\nBest solution is run %i\n");
    static int        strmarxan180                       = jtocstr("%s_zoneconnectivitysumbest.csv");
    static int        strmarxan181                       = jtocstr("%s_zoneconnectivitysumbest.txt");
    static int        strmarxan182                       = jtocstr("%s_zoneconnectivitysumbest.dat");
    static int        strmarxan183                       = jtocstr("%s_mvbest.csv");
    static int        strmarxan184                       = jtocstr("%s_mvbest.txt");
    static int        strmarxan185                       = jtocstr("%s_mvbest.dat");
    static int        strmarxan186                       = jtocstr("%s_ssoln.csv");
    static int        strmarxan187                       = jtocstr("%s_ssoln.txt");
    static int        strmarxan188                       = jtocstr("%s_ssoln.dat");
    static int        strmarxan189                       = jtocstr("end final file output\n");
    static int        strmarxan190                       = jtocstr("\nMarxan with Zones end execution\n");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 109 */

    public static int cMarZone(int csInputFileName, int cstyle) {
        nextlevel();
        if (true) {
            int label = 0;
            int retval = 0;
            int ciSparseMatrixFileLength_5 = alloconstack(0);
            int ciSparseMatrixFileLength_sporder_6 = alloconstack(0);
            int ciZoneContribCount_7 = alloconstack(0);
            int ciZoneTargetCount_8 = alloconstack(0);
            int ciZoneCostCount_9 = alloconstack(0);
            int ciPuLockCount_10 = alloconstack(0);
            int ciZoneContrib2Count_11 = alloconstack(0);
            int ciZoneTarget2Count_12 = alloconstack(0);
            int ciRelConnectionCostCount_13 = alloconstack(0);
            int ciZoneContrib3Count_14 = alloconstack(0);
            int ciMessageCounter_15 = 0;
            int ciZoneSumSolnIndex_16 = 0;
            int cpuno_17 = alloconstack(0);
            int cspno_18 = alloconstack(0);
            int cgspno_19 = alloconstack(0);
            int crunopts_20 = alloconstack(0);
            int cheurotype_21 = alloconstack(0);
            int cverbose_22 = alloconstack(0);
            int cclumptype_23 = alloconstack(0);
            int citimptype_24 = alloconstack(0);
            int crepeats_25 = alloconstack(0);
            int ciseed_26 = alloconstack(0);
            int cseedinit_27 = 0;
            int caggexist_28 = alloconstack(0);
            int csepexist_29 = alloconstack(0);
            int cR_30 = 0;
            int cR_CalcPenalties_31 = 0;
            int csumsoln_32 = 0;
            int cZoneSumSoln_33 = 0;
            int citemp_34 = 0;
            int cirun_35 = 0;
            int cipu_36 = 0;
            int ciBestRun_37 = 0;
            int ci_38 = 0;
            int cgspec_39 = alloconstack(0);
            int cprop_40 = alloconstack(0);
            int cmisslevel_41 = alloconstack(0);
            int ccostthresh_42 = alloconstack(0);
            int ctpf1_43 = alloconstack(0);
            int ctpf2_44 = alloconstack(0);
            double crBestScore_45 = 0;
            int csavename_46 = 0;
            int ctempname2_47 = 0;
            int cdebugbuffer_48 = 0;
            int y1 = 0;
            int y2 = 0;

            {
                setMEMINT((int) (ciSparseMatrixFileLength_5), (int) (0));
                setMEMINT((int) (ciSparseMatrixFileLength_sporder_6), (int) (0));
                setMEMINT((int) (ciZoneContribCount_7), (int) (0));
                setMEMINT((int) (ciZoneTargetCount_8), (int) (0));
                setMEMINT((int) (ciZoneCostCount_9), (int) (0));
                setMEMINT((int) (ciPuLockCount_10), (int) (0));
                setMEMINT((int) (ciZoneContrib2Count_11), (int) (0));
                setMEMINT((int) (ciZoneTarget2Count_12), (int) (0));
                setMEMINT((int) (ciRelConnectionCostCount_13), (int) (0));
                setMEMINT((int) (ciZoneContrib3Count_14), (int) (0));
                ciMessageCounter_15 = 0;
                ciZoneSumSolnIndex_16 = 0;
                setMEMINT((int) (cpuno_17), (int) (0));
                setMEMINT((int) (cspno_18), (int) (0));
                setMEMINT((int) (cgspno_19), (int) (0));
                setMEMINT((int) (crunopts_20), (int) (0));
                setMEMINT((int) (cheurotype_21), (int) (0));
                setMEMINT((int) (cverbose_22), (int) (0));
                setMEMINT((int) (cclumptype_23), (int) (0));
                setMEMINT((int) (citimptype_24), (int) (0));
                setMEMINT((int) (crepeats_25), (int) (0));
                setMEMINT((int) (ciseed_26), (int) (0));
                cseedinit_27 = 0;
                setMEMINT((int) (caggexist_28), (int) (0));
                setMEMINT((int) (csepexist_29), (int) (0));
                cR_30 = 0;
                cR_CalcPenalties_31 = 0;
                csumsoln_32 = 0;
                cZoneSumSoln_33 = 0;
                citemp_34 = 0;
                cirun_35 = 0;
                cipu_36 = 0;
                ciBestRun_37 = 1;
                ci_38 = 0;
                setMEMINT((int) (cgspec_39), (int) (0));
                setMEMINT((int) (cprop_40), (int) (0));
                setMEMINT((int) (cmisslevel_41), (int) (0));
                setMEMINT((int) (ccostthresh_42), (int) (0));
                setMEMINT((int) (ctpf1_43), (int) (0));
                setMEMINT((int) (ctpf2_44), (int) (0));
                crBestScore_45 = 0;
                csavename_46 = calloca(1000);
                ctempname2_47 = calloca(1000);
                cdebugbuffer_48 = calloca(1000);
                setMEMDOUBLE((int) (marxan.crClocksPerSec), (double) (100));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 131 */
                if (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 130 */
                csetjmp((int) (marxan.cjmpbuf)) != 0) {
                    retval = 1;
                    if (true) {
                        prevlevel();
                        return retval;
                    }
                    ;

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 133 */
                marxan.cShowStartupScreen();

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 138 */
                marxan.cSetOptions(cprop_40, (int) (marxan.canneal), ciseed_26, crepeats_25, (int) (csavename_46), (int) (marxan.cfnames), (int) (csInputFileName), crunopts_20, cmisslevel_41, cheurotype_21, cverbose_22, cclumptype_23, citimptype_24, ccostthresh_42, ctpf1_43, ctpf2_44);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 140 */
                marxan.cSetVerbosity(getMEMINT((int) (cverbose_22)));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 141 */
                marxan.cSetRunOptions(getMEMINT((int) (crunopts_20)), (int) (marxan.crunoptions));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 144 */
                marxan.cStartDebugTraceFile();
                startargs(marxan.csVersionString);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 145 */
                csprintf((int) (cdebugbuffer_48), strmarxan2, endargs());

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 146 */
                marxan.cAppendDebugTraceFile((int) (cdebugbuffer_48), 0);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 147 */
                marxan.cAppendDebugTraceFile((int) (strmarxan3), 0);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 149 */
                if ((((getMEMINT((int) (marxan.ciVerbosity))) > (3)) ? 1 : 0) != 0) {

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 149 */
                    marxan.cDumpFileNames((int) (marxan.cfnames));

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 169 */
                if (getMEMINT((int) ((marxan.cfnames + 108))) != 0) {

                    {
                        startargs(csavename_46);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 170
                         */
                        csprintf((int) (ctempname2_47), strmarxan4, endargs());

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 171
                         */
                        marxan.cSetLogFile(getMEMINT((int) ((marxan.cfnames + 108))), (int) (ctempname2_47));

                    }

                }
                ;
                setMEMDOUBLE((int) (marxan.cdelta), (double) (1e-14));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 178 */
                marxan.cInitRandSeed(getMEMINT((int) (ciseed_26)));
                cseedinit_27 = getMEMINT((int) (ciseed_26));
                startargs(getMEMINT((int) (ciseed_26)));
                addarg(getMEMINT((int) (marxan.cRandSeed1)));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 185 */
                csprintf((int) (cdebugbuffer_48), strmarxan5, endargs());

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 186 */
                marxan.cAppendDebugTraceFile((int) (cdebugbuffer_48), 0);
                startargs(cstyle);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 187 */
                csprintf((int) (cdebugbuffer_48), strmarxan6, endargs());

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 188 */
                marxan.cAppendDebugTraceFile((int) (cdebugbuffer_48), 0);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 192 */
                marxan.cShowGenProg((int) (strmarxan7), 0);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 196 */
                if ((((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 195 */
                cstrcmp(strmarxan8, getMEMINT((int) ((marxan.cfnames + 32))))) != (0)) ? 1 : 0) != 0) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 198
                         */
                        marxan.cAppendDebugTraceFile((int) (strmarxan9), 0);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 201
                         */
                        marxan.cLoadZones(marxan.ciZoneCount, (int) (marxan.cZones), (int) (marxan.cfnames));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 204
                         */
                        marxan.cAppendDebugTraceFile((int) (strmarxan10), 0);

                    }

                } else {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 210
                         */
                        marxan.cAppendDebugTraceFile((int) (strmarxan11), 0);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 213
                         */
                        marxan.cDefaultZones(marxan.ciZoneCount, (int) (marxan.cZones));
                        setMEMINT((int) (marxan.ciAvailableZoneInput), (int) (1));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 218
                         */
                        marxan.cAppendDebugTraceFile((int) (strmarxan12), 0);

                    }

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 223 */
                if ((((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 222 */
                cstrcmp(strmarxan8, getMEMINT((int) ((marxan.cfnames + 36))))) != (0)) ? 1 : 0) != 0) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 225
                         */
                        marxan.cAppendDebugTraceFile((int) (strmarxan13), 0);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 228
                         */
                        marxan.cLoadCostNames(marxan.ciCostCount, (int) (marxan.cCostNames), (int) (marxan.cfnames));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 231
                         */
                        marxan.cAppendDebugTraceFile((int) (strmarxan14), 0);

                    }

                } else {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 237
                         */
                        marxan.cAppendDebugTraceFile((int) (strmarxan15), 0);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 240
                         */
                        marxan.cDefaultCostNames(marxan.ciCostCount, (int) (marxan.cCostNames));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 243
                         */
                        marxan.cAppendDebugTraceFile((int) (strmarxan16), 0);

                    }

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 248 */
                if ((((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 247 */
                cstrcmp(strmarxan8, getMEMINT((int) ((marxan.cfnames + 40))))) != (0)) ? 1 : 0) != 0) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 250
                         */
                        marxan.cAppendDebugTraceFile((int) (strmarxan17), 0);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 253
                         */
                        marxan.cLoadZoneContrib(ciZoneContribCount_7, (int) (marxan.cZoneContrib), (int) (marxan.cfnames));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 256
                         */
                        marxan.cAppendDebugTraceFile((int) (strmarxan18), 0);

                    }

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 260 */
                if ((((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 259 */
                cstrcmp(strmarxan8, getMEMINT((int) ((marxan.cfnames + 44))))) != (0)) ? 1 : 0) != 0) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 262
                         */
                        marxan.cAppendDebugTraceFile((int) (strmarxan19), 0);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 265
                         */
                        marxan.cLoadZoneContrib2(ciZoneContrib2Count_11, (int) (marxan.cZoneContrib2), (int) (marxan.cfnames));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 268
                         */
                        marxan.cAppendDebugTraceFile((int) (strmarxan20), 0);

                    }

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 272 */
                if ((((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 271 */
                cstrcmp(strmarxan8, getMEMINT((int) ((marxan.cfnames + 48))))) != (0)) ? 1 : 0) != 0) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 274
                         */
                        marxan.cAppendDebugTraceFile((int) (strmarxan21), 0);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 277
                         */
                        marxan.cLoadZoneContrib3(ciZoneContrib3Count_14, (int) (marxan.cZoneContrib3), (int) (marxan.cfnames));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 280
                         */
                        marxan.cAppendDebugTraceFile((int) (strmarxan22), 0);

                    }

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 284 */
                if ((((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 283 */
                cstrcmp(strmarxan8, getMEMINT((int) ((marxan.cfnames + 52))))) != (0)) ? 1 : 0) != 0) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 286
                         */
                        marxan.cAppendDebugTraceFile((int) (strmarxan23), 0);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 289
                         */
                        marxan.cLoadZoneTarget(ciZoneTargetCount_8, (int) (marxan.cZoneTarget), (int) (marxan.cfnames));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 292
                         */
                        marxan.cAppendDebugTraceFile((int) (strmarxan24), 0);

                    }

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 296 */
                if ((((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 295 */
                cstrcmp(strmarxan8, getMEMINT((int) ((marxan.cfnames + 56))))) != (0)) ? 1 : 0) != 0) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 298
                         */
                        marxan.cAppendDebugTraceFile((int) (strmarxan25), 0);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 301
                         */
                        marxan.cLoadZoneTarget2(ciZoneTarget2Count_12, (int) (marxan.cZoneTarget2), (int) (marxan.cfnames));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 304
                         */
                        marxan.cAppendDebugTraceFile((int) (strmarxan26), 0);

                    }

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 308 */
                if ((((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 307 */
                cstrcmp(strmarxan8, getMEMINT((int) ((marxan.cfnames + 60))))) != (0)) ? 1 : 0) != 0) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 310
                         */
                        marxan.cAppendDebugTraceFile((int) (strmarxan27), 0);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 313
                         */
                        marxan.cLoadZoneCost(ciZoneCostCount_9, (int) (marxan.cZoneCost), (int) (marxan.cfnames));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 316
                         */
                        marxan.cAppendDebugTraceFile((int) (strmarxan28), 0);

                    }

                } else {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 322
                         */
                        marxan.cAppendDebugTraceFile((int) (strmarxan29), 0);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 325
                         */
                        marxan.cDefaultZoneCost(ciZoneCostCount_9, (int) (marxan.cZoneCost));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 328
                         */
                        marxan.cAppendDebugTraceFile((int) (strmarxan30), 0);

                    }

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 333 */
                if ((((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 332 */
                cstrcmp(strmarxan8, getMEMINT((int) ((marxan.cfnames + 64))))) != (0)) ? 1 : 0) != 0) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 335
                         */
                        marxan.cAppendDebugTraceFile((int) (strmarxan31), 0);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 338
                         */
                        marxan.cLoadPuLock(ciPuLockCount_10, (int) (marxan.cPuLock), (int) (marxan.cfnames));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 341
                         */
                        marxan.cAppendDebugTraceFile((int) (strmarxan32), 0);

                    }

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 345 */
                if ((((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 344 */
                cstrcmp(strmarxan8, getMEMINT((int) ((marxan.cfnames + 68))))) != (0)) ? 1 : 0) != 0) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 347
                         */
                        marxan.cAppendDebugTraceFile((int) (strmarxan33), 0);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 350
                         */
                        marxan.cLoadPuZone(marxan.ciPuZoneCount, (int) (marxan.cPuZone), (int) (marxan.cfnames));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 353
                         */
                        marxan.cAppendDebugTraceFile((int) (strmarxan34), 0);

                    }

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 357 */
                if ((((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 356 */
                cstrcmp(strmarxan8, getMEMINT((int) ((marxan.cfnames + 72))))) != (0)) ? 1 : 0) != 0) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 359
                         */
                        marxan.cAppendDebugTraceFile((int) (strmarxan35), 0);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 362
                         */
                        marxan.cLoadRelConnectionCost(ciRelConnectionCostCount_13, (int) (marxan.cRelConnectionCost), (int) (marxan.cfnames));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 365
                         */
                        marxan.cAppendDebugTraceFile((int) (strmarxan36), 0);

                    }

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 371 */
                if ((((getMEMINT((int) (marxan.ciVerbosity))) > (3)) ? 1 : 0) != 0) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 372
                         */
                        marxan.cDumpZoneNames(getMEMINT((int) (marxan.ciZoneCount)), (int) (getMEMINT((int) (marxan.cZones))), (int) (marxan.cfnames));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 373
                         */
                        marxan.cDumpCostNames(getMEMINT((int) (marxan.ciCostCount)), (int) (getMEMINT((int) (marxan.cCostNames))), (int) (marxan.cfnames));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 374
                         */
                        marxan.cDumpZoneContrib(getMEMINT((int) (ciZoneContribCount_7)), (int) (getMEMINT((int) (marxan.cZoneContrib))), (int) (marxan.cfnames));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 375
                         */
                        marxan.cDumpZoneContrib2(getMEMINT((int) (ciZoneContrib2Count_11)), (int) (getMEMINT((int) (marxan.cZoneContrib2))), (int) (marxan.cfnames));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 376
                         */
                        marxan.cDumpZoneContrib3(getMEMINT((int) (ciZoneContrib3Count_14)), (int) (getMEMINT((int) (marxan.cZoneContrib3))), (int) (marxan.cfnames));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 377
                         */
                        marxan.cDumpZoneTarget(getMEMINT((int) (ciZoneTargetCount_8)), (int) (getMEMINT((int) (marxan.cZoneTarget))), (int) (marxan.cfnames));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 378
                         */
                        marxan.cDumpZoneTarget2(getMEMINT((int) (ciZoneTarget2Count_12)), (int) (getMEMINT((int) (marxan.cZoneTarget2))), (int) (marxan.cfnames));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 379
                         */
                        marxan.cDumpZoneCost(getMEMINT((int) (ciZoneCostCount_9)), (int) (getMEMINT((int) (marxan.cZoneCost))), (int) (marxan.cfnames));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 381
                         */
                        if ((((
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 380
                         */
                        cstrcmp(strmarxan8, getMEMINT((int) ((marxan.cfnames + 64))))) != (0)) ? 1
                                : 0) != 0) {

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 381
                             */
                            marxan.cDumpPuLock(getMEMINT((int) (ciPuLockCount_10)), (int) (getMEMINT((int) (marxan.cPuLock))), (int) (marxan.cfnames));

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 383
                         */
                        if ((((
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 382
                         */
                        cstrcmp(strmarxan8, getMEMINT((int) ((marxan.cfnames + 68))))) != (0)) ? 1
                                : 0) != 0) {

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 383
                             */
                            marxan.cDumpPuZone(getMEMINT((int) (marxan.ciPuZoneCount)), (int) (getMEMINT((int) (marxan.cPuZone))), (int) (marxan.cfnames));

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 385
                         */
                        if ((((
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 384
                         */
                        cstrcmp(strmarxan8, getMEMINT((int) ((marxan.cfnames + 72))))) != (0)) ? 1
                                : 0) != 0) {

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 385
                             */
                            marxan.cDumpRelConnectionCost(getMEMINT((int) (ciRelConnectionCostCount_13)), (int) (getMEMINT((int) (marxan.cRelConnectionCost))), (int) (marxan.cfnames));

                        }
                        ;

                    }

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 390 */
                marxan.cAppendDebugTraceFile((int) (strmarxan37), 0);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 393 */
                marxan.cShowDetProg((int) (strmarxan38), 0);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 395 */
                if ((((cstyle) == (1)) ? 1 : 0) != 0) {
                    citemp_34 =
                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 395
                             */
                            marxan.cReadNameList(cpuno_17, (int) (marxan.cpu), (int) (getMEMINT((int) ((marxan.cfnames
                                    + 0)))));

                } else {
                    citemp_34 =
                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 397
                             */
                            marxan.cReadPUData(cpuno_17, (int) (marxan.cpu), getMEMINT((int) (marxan.ciCostCount)), (int) (getMEMINT((int) (marxan.cCostNames))), (int) (marxan.cfnames));

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 400 */
                marxan.cAppendDebugTraceFile((int) (strmarxan39), 0);
                startargs(getMEMINT((int) (cpuno_17)));
                addarg(citemp_34);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 403 */
                marxan.cShowGenProg((int) (strmarxan40), endargs());

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 406 */
                if (getMEMINT((int) (marxan.ciCostCount)) != 0) {

                    {
                        setMEMINT((int) (marxan.cCostValues), (int) ((int) (
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 408
                         */
                        ccalloc(getMEMINT((int) (cpuno_17)), 4))));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 410
                         */
                        citemp_34 = 0;
                        lab_marxan0: for (; (((citemp_34) < (getMEMINT((int) (cpuno_17)))) ? 1 : 0) != 0;) {
                            setMEMINT((int) ((getMEMINT((int) (marxan.cCostValues))
                                    + (citemp_34 * 4))), (int) ((int) (
                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 410
                             */
                            ccalloc(getMEMINT((int) (marxan.ciCostCount)), 8))));
                            citemp_34++;

                        }

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 413
                         */
                        marxan.cAppendDebugTraceFile((int) (strmarxan41), 0);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 417
                         */
                        marxan.cLoadCostValues(getMEMINT((int) (marxan.ciCostCount)), getMEMINT((int) (marxan.cCostValues)), (int) (getMEMINT((int) (marxan.cCostNames))), (int) (marxan.cfnames), getMEMINT((int) (cpuno_17)));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 420
                         */
                        marxan.cAppendDebugTraceFile((int) (strmarxan42), 0);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 425
                         */
                        if ((((getMEMINT((int) (marxan.ciVerbosity))) > (3)) ? 1 : 0) != 0) {

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 425
                             */
                            marxan.cDumpCostValues(getMEMINT((int) (marxan.ciCostCount)), getMEMINT((int) (cpuno_17)), getMEMINT((int) (marxan.cCostValues)), (int) (marxan.cfnames));

                        }
                        ;

                    }

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 429 */
                marxan.cShowDetProg((int) (strmarxan43), 0);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 432 */
                marxan.cAppendDebugTraceFile((int) (strmarxan44), 0);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 436 */
                if ((((cstyle) == (1)) ? 1 : 0) != 0) {
                    citemp_34 =
                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 436
                             */
                            marxan.cReadSpeciesData(cspno_18, (int) (marxan.cspec), caggexist_28, csepexist_29, (int) (getMEMINT((int) ((marxan.cfnames
                                    + 0)))));

                } else {
                    citemp_34 =
                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 438
                             */
                            marxan.cReadSpeciesData2(cspno_18, (int) (marxan.cspec), (int) (marxan.cfnames));

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 442 */
                marxan.cAppendDebugTraceFile((int) (strmarxan45), 0);
                startargs(citemp_34);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 445 */
                marxan.cShowGenProg((int) (strmarxan46), endargs());

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 448 */
                marxan.cAppendDebugTraceFile((int) (strmarxan47), 0);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 452 */
                marxan.cPrepareBinarySearchArrays(getMEMINT((int) (cpuno_17)), getMEMINT((int) (cspno_18)), (int) (getMEMINT((int) (marxan.cpu))), (int) (getMEMINT((int) (marxan.cspec))), (int) (marxan.cPULookup), (int) (marxan.cSPLookup));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 455 */
                marxan.cAppendDebugTraceFile((int) (strmarxan48), 0);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 459 */
                if ((((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 458 */
                cstrcmp(strmarxan8, getMEMINT((int) ((marxan.cfnames + 40))))) != (0)) ? 1 : 0) != 0) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 461
                         */
                        if ((((
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 460
                         */
                        cstrcmp(strmarxan8, getMEMINT((int) ((marxan.cfnames + 44))))) != (0)) ? 1
                                : 0) != 0) {

                            {

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 463
                                 */
                                marxan.cWriteStopErrorFile((int) (strmarxan49));

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 465
                                 */
                                marxan.cAppendDebugTraceFile((int) (strmarxan49), 0);

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 467
                                 */
                                marxan.cShowGenProg((int) (strmarxan49), 0);

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 468
                                 */
                                marxan.cShowGenProgInfo((int) (strmarxan49), 0);

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 469
                                 */
                                marxan.cShowShutdownScreen();
                                retval = 0;
                                if (true) {
                                    prevlevel();
                                    return retval;
                                }
                                ;

                            }

                        } else {

                            {

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 475
                                 */
                                if ((((
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 474
                                 */
                                cstrcmp(strmarxan8, getMEMINT((int) ((marxan.cfnames + 48))))) != (0)) ? 1
                                        : 0) != 0) {

                                    {

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 477
                                         */
                                        marxan.cWriteStopErrorFile((int) (strmarxan50));

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 479
                                         */
                                        marxan.cAppendDebugTraceFile((int) (strmarxan50), 0);

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 481
                                         */
                                        marxan.cShowGenProg((int) (strmarxan50), 0);

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 482
                                         */
                                        marxan.cShowGenProgInfo((int) (strmarxan50), 0);

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 483
                                         */
                                        marxan.cShowShutdownScreen();
                                        retval = 0;
                                        if (true) {
                                            prevlevel();
                                            return retval;
                                        }
                                        ;

                                    }

                                } else {

                                    {

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 489
                                         */
                                        marxan.cAppendDebugTraceFile((int) (strmarxan51), 0);

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 492
                                         */
                                        marxan.cBuild_ZoneContrib(getMEMINT((int) (cspno_18)), getMEMINT((int) (marxan.ciZoneCount)), getMEMINT((int) (ciZoneContribCount_7)), (int) (getMEMINT((int) (marxan.cZoneContrib))), (int) (marxan.c_ZoneContrib));

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 493
                                         */
                                        cfree(getMEMINT((int) (marxan.cZoneContrib)));

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 496
                                         */
                                        marxan.cAppendDebugTraceFile((int) (strmarxan52), 0);

                                    }

                                }
                                ;

                            }

                        }
                        ;

                    }

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 502 */
                if ((((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 501 */
                cstrcmp(strmarxan8, getMEMINT((int) ((marxan.cfnames + 44))))) != (0)) ? 1 : 0) != 0) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 504
                         */
                        if ((((
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 503
                         */
                        cstrcmp(strmarxan8, getMEMINT((int) ((marxan.cfnames + 40))))) != (0)) ? 1
                                : 0) != 0) {

                            {

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 506
                                 */
                                marxan.cWriteStopErrorFile((int) (strmarxan49));

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 508
                                 */
                                marxan.cAppendDebugTraceFile((int) (strmarxan49), 0);

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 510
                                 */
                                marxan.cShowGenProg((int) (strmarxan49), 0);

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 511
                                 */
                                marxan.cShowGenProgInfo((int) (strmarxan49), 0);

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 512
                                 */
                                marxan.cShowShutdownScreen();
                                retval = 0;
                                if (true) {
                                    prevlevel();
                                    return retval;
                                }
                                ;

                            }

                        } else {

                            {

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 528
                                 */
                                if ((((
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 527
                                 */
                                cstrcmp(strmarxan8, getMEMINT((int) ((marxan.cfnames + 48))))) != (0)) ? 1
                                        : 0) != 0) {

                                    {

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 530
                                         */
                                        marxan.cWriteStopErrorFile((int) (strmarxan53));

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 532
                                         */
                                        marxan.cAppendDebugTraceFile((int) (strmarxan53), 0);

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 534
                                         */
                                        marxan.cShowGenProg((int) (strmarxan53), 0);

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 535
                                         */
                                        marxan.cShowGenProgInfo((int) (strmarxan53), 0);

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 536
                                         */
                                        marxan.cShowShutdownScreen();
                                        retval = 0;
                                        if (true) {
                                            prevlevel();
                                            return retval;
                                        }
                                        ;

                                    }

                                } else {

                                    {

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 542
                                         */
                                        marxan.cAppendDebugTraceFile((int) (strmarxan54), 0);

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 545
                                         */
                                        marxan.cBuild_ZoneContrib2(getMEMINT((int) (cspno_18)), getMEMINT((int) (marxan.ciZoneCount)), getMEMINT((int) (ciZoneContrib2Count_11)), (int) (getMEMINT((int) (marxan.cZoneContrib2))), (int) (marxan.c_ZoneContrib));

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 548
                                         */
                                        marxan.cAppendDebugTraceFile((int) (strmarxan55), 0);

                                    }

                                }
                                ;

                            }

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 552
                         */
                        cfree(getMEMINT((int) (marxan.cZoneContrib)));

                    }

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 555 */
                if ((((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 554 */
                cstrcmp(strmarxan8, getMEMINT((int) ((marxan.cfnames + 48))))) != (0)) ? 1 : 0) != 0) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 557
                         */
                        if ((((
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 556
                         */
                        cstrcmp(strmarxan8, getMEMINT((int) ((marxan.cfnames + 40))))) != (0)) ? 1
                                : 0) != 0) {

                        } else {

                            {

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 563
                                 */
                                if ((((
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 562
                                 */
                                cstrcmp(strmarxan8, getMEMINT((int) ((marxan.cfnames + 44))))) != (0)) ? 1
                                        : 0) != 0) {

                                    {

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 565
                                         */
                                        marxan.cWriteStopErrorFile((int) (strmarxan53));

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 567
                                         */
                                        marxan.cAppendDebugTraceFile((int) (strmarxan53), 0);

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 569
                                         */
                                        marxan.cShowGenProg((int) (strmarxan53), 0);

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 570
                                         */
                                        marxan.cShowGenProgInfo((int) (strmarxan53), 0);

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 571
                                         */
                                        marxan.cShowShutdownScreen();
                                        retval = 0;
                                        if (true) {
                                            prevlevel();
                                            return retval;
                                        }
                                        ;

                                    }

                                } else {

                                    {

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 577
                                         */
                                        marxan.cAppendDebugTraceFile((int) (strmarxan56), 0);

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 580
                                         */
                                        marxan.cBuild_ZoneContrib3(getMEMINT((int) (cpuno_17)), getMEMINT((int) (cspno_18)), getMEMINT((int) (marxan.ciZoneCount)), getMEMINT((int) (ciZoneContrib3Count_14)), (int) (getMEMINT((int) (marxan.cZoneContrib3))), (int) (marxan.c_ZoneContrib));

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 581
                                         */
                                        cfree(getMEMINT((int) (marxan.cZoneContrib3)));
                                        setMEMINT((int) (marxan.ciZoneContrib3On), (int) (1));

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 585
                                         */
                                        marxan.cAppendDebugTraceFile((int) (strmarxan57), 0);

                                    }

                                }
                                ;

                            }

                        }
                        ;

                    }

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 591 */
                if ((((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 590 */
                cstrcmp(strmarxan8, getMEMINT((int) ((marxan.cfnames + 40))))) == (0)) ? 1 : 0) != 0) {

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 592 */
                    if ((((
                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 591 */
                    cstrcmp(strmarxan8, getMEMINT((int) ((marxan.cfnames + 44))))) == (0)) ? 1 : 0) != 0) {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 593
                         */
                        if ((((
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 592
                         */
                        cstrcmp(strmarxan8, getMEMINT((int) ((marxan.cfnames + 48))))) == (0)) ? 1
                                : 0) != 0) {

                            {

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 595
                                 */
                                marxan.cAppendDebugTraceFile((int) (strmarxan58), 0);

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 598
                                 */
                                marxan.cDefault_ZoneContrib(getMEMINT((int) (cspno_18)), getMEMINT((int) (marxan.ciZoneCount)), (int) (marxan.c_ZoneContrib), getMEMINT((int) (marxan.ciAvailableZoneInput)));

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 601
                                 */
                                marxan.cAppendDebugTraceFile((int) (strmarxan59), 0);

                            }

                        }
                        ;

                    }
                    ;

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 606 */
                if ((((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 605 */
                cstrcmp(strmarxan8, getMEMINT((int) ((marxan.cfnames + 52))))) == (0)) ? 1 : 0) != 0) {

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 607 */
                    if ((((
                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 606 */
                    cstrcmp(strmarxan8, getMEMINT((int) ((marxan.cfnames + 56))))) == (0)) ? 1 : 0) != 0) {

                        {

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 608
                             */
                            marxan.cShowGenProg((int) (strmarxan60), 0);

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 611
                             */
                            marxan.cAppendDebugTraceFile((int) (strmarxan60), 0);

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 612
                             */
                            marxan.cAppendDebugTraceFile((int) (strmarxan61), 0);

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 615
                             */
                            marxan.cDefault_ZoneTarget(getMEMINT((int) (cspno_18)), getMEMINT((int) (marxan.ciZoneCount)), (int) (marxan.c_ZoneTarget));

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 618
                             */
                            marxan.cAppendDebugTraceFile((int) (strmarxan62), 0);

                        }

                    }
                    ;

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 623 */
                marxan.cAppendDebugTraceFile((int) (strmarxan63), 0);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 626 */
                marxan.cBuild_ZoneCost(getMEMINT((int) (marxan.ciCostCount)), getMEMINT((int) (marxan.ciZoneCount)), getMEMINT((int) (ciZoneCostCount_9)), (int) (getMEMINT((int) (marxan.cZoneCost))), (int) (marxan.c_ZoneCost));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 627 */
                cfree(getMEMINT((int) (marxan.cZoneCost)));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 630 */
                marxan.cAppendDebugTraceFile((int) (strmarxan64), 0);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 634 */
                if ((((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 633 */
                cstrcmp(strmarxan8, getMEMINT((int) ((marxan.cfnames + 72))))) != (0)) ? 1 : 0) != 0) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 636
                         */
                        marxan.cAppendDebugTraceFile((int) (strmarxan65), 0);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 639
                         */
                        marxan.cBuild_RelConnectionCost(getMEMINT((int) (marxan.ciZoneCount)), getMEMINT((int) (ciRelConnectionCostCount_13)), (int) (getMEMINT((int) (marxan.cRelConnectionCost))), (int) (marxan.c_RelConnectionCost));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 640
                         */
                        cfree(getMEMINT((int) (marxan.cRelConnectionCost)));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 643
                         */
                        marxan.cAppendDebugTraceFile((int) (strmarxan66), 0);

                    }

                } else {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 649
                         */
                        marxan.cAppendDebugTraceFile((int) (strmarxan67), 0);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 652
                         */
                        marxan.cDefault_RelConnectionCost(getMEMINT((int) (marxan.ciZoneCount)), (int) (marxan.c_RelConnectionCost));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 655
                         */
                        marxan.cAppendDebugTraceFile((int) (strmarxan68), 0);

                    }

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 660 */
                marxan.cAppendDebugTraceFile((int) (strmarxan69), 0);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 663 */
                marxan.cBuildZoneSpec(getMEMINT((int) (cspno_18)), getMEMINT((int) (marxan.ciZoneCount)), (int) (marxan.cZoneSpec));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 666 */
                marxan.cAppendDebugTraceFile((int) (strmarxan70), 0);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 667 */
                marxan.cAppendDebugTraceFile((int) (strmarxan71), 0);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 670 */
                marxan.cInitZoneSpec(getMEMINT((int) (cspno_18)), getMEMINT((int) (marxan.ciZoneCount)), (int) (getMEMINT((int) (marxan.cZoneSpec))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 673 */
                marxan.cAppendDebugTraceFile((int) (strmarxan72), 0);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 678 */
                if ((((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 677 */
                cstrcmp(strmarxan8, getMEMINT((int) ((marxan.cfnames + 64))))) != (0)) ? 1 : 0) != 0) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 680
                         */
                        marxan.cAppendDebugTraceFile((int) (strmarxan73), 0);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 683
                         */
                        marxan.cParsePuLock(getMEMINT((int) (cpuno_17)), (int) (getMEMINT((int) (marxan.cpu))), getMEMINT((int) (ciPuLockCount_10)), (int) (getMEMINT((int) (marxan.cPuLock))), (int) (getMEMINT((int) (marxan.cPULookup))));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 684
                         */
                        cfree(getMEMINT((int) (marxan.cPuLock)));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 687
                         */
                        marxan.cAppendDebugTraceFile((int) (strmarxan74), 0);

                    }

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 691 */
                if ((((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 690 */
                cstrcmp(strmarxan8, getMEMINT((int) ((marxan.cfnames + 68))))) != (0)) ? 1 : 0) != 0) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 693
                         */
                        marxan.cAppendDebugTraceFile((int) (strmarxan75), 0);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 696
                         */
                        marxan.cParsePuZone(getMEMINT((int) (cpuno_17)), (int) (getMEMINT((int) (marxan.cpu))), getMEMINT((int) (marxan.ciPuZoneCount)), (int) (getMEMINT((int) (marxan.cPuZone))), (int) (getMEMINT((int) (marxan.cPULookup))));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 699
                         */
                        marxan.cAppendDebugTraceFile((int) (strmarxan76), 0);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 700
                         */
                        marxan.cAppendDebugTraceFile((int) (strmarxan77), 0);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 703
                         */
                        marxan.cCheckPuZone(getMEMINT((int) (cpuno_17)), (int) (getMEMINT((int) (marxan.cpu))));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 706
                         */
                        marxan.cAppendDebugTraceFile((int) (strmarxan78), 0);

                    }

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 712 */
                if ((((getMEMINT((int) (marxan.ciVerbosity))) > (3)) ? 1 : 0) != 0) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 713
                         */
                        marxan.cDump_ZoneContrib(getMEMINT((int) (cpuno_17)), getMEMINT((int) (cspno_18)), (int) (getMEMINT((int) (marxan.cspec))), getMEMINT((int) (marxan.ciZoneCount)), (int) (getMEMINT((int) (marxan.c_ZoneContrib))), (int) (marxan.cfnames));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 714
                         */
                        marxan.cDump_ZoneCost(getMEMINT((int) (marxan.ciCostCount)), getMEMINT((int) (marxan.ciZoneCount)), (int) (getMEMINT((int) (marxan.c_ZoneCost))), (int) (marxan.cfnames));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 715
                         */
                        marxan.cDump_RelConnectionCost(getMEMINT((int) (marxan.ciZoneCount)), (int) (getMEMINT((int) (marxan.c_RelConnectionCost))), (int) (marxan.cfnames));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 716
                         */
                        marxan.cDumpZoneSpec(ciMessageCounter_15, getMEMINT((int) (cspno_18)), getMEMINT((int) (marxan.ciZoneCount)), (int) (getMEMINT((int) (marxan.cZoneSpec))), (int) (getMEMINT((int) (marxan.cspec))), (int) (marxan.cfnames));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 717
                         */
                        marxan.cDumpPuLockZone(getMEMINT((int) (cpuno_17)), (int) (getMEMINT((int) (marxan.cpu))));

                    }

                }
                ;
                setMEMINT((int) (marxan.cbestyet), (int) ((int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 723 */
                ccalloc(getMEMINT((int) (cpuno_17)), 4))));
                cR_30 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 725 */
                ccalloc(getMEMINT((int) (cpuno_17)), 4));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 729 */
                if (getMEMINT((int) ((marxan.cfnames + 104))) != 0) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 731
                         */
                        marxan.cAppendDebugTraceFile((int) (strmarxan79), 0);
                        csumsoln_32 = (int) (
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 734
                         */
                        ccalloc(getMEMINT((int) (cpuno_17)), 4));
                        cZoneSumSoln_33 = (int) (
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 735
                         */
                        ccalloc((getMEMINT((int) (cpuno_17)) * getMEMINT((int) (marxan.ciZoneCount))), 4));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 736
                         */
                        marxan.cInitSumSoln(getMEMINT((int) (cpuno_17)), getMEMINT((int) (marxan.ciZoneCount)), (int) (csumsoln_32), (int) (cZoneSumSoln_33));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 739
                         */
                        marxan.cAppendDebugTraceFile((int) (strmarxan80), 0);

                    }

                }
                ;
                setMEMINT((int) (marxan.cconnections), (int) ((int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 743 */
                ccalloc(getMEMINT((int) (cpuno_17)), 16))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 745 */
                marxan.cShowDetProg((int) (strmarxan81), 0);
                citemp_34 = 0;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 748 */
                if (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 747 */
                cstrcmp(strmarxan8, getMEMINT((int) ((marxan.cfnames + 24)))) != 0) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 750
                         */
                        marxan.cAppendDebugTraceFile((int) (strmarxan82), 0);
                        citemp_34 =
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 753
                                 */
                                marxan.cReadConnections(getMEMINT((int) (cpuno_17)), (int) (getMEMINT((int) (marxan.cconnections))), getMEMINT((int) (cverbose_22)), (int) (getMEMINT((int) (marxan.cpu))), (int) (getMEMINT((int) (marxan.cPULookup))), (int) (marxan.cfnames));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 756
                         */
                        marxan.cAppendDebugTraceFile((int) (strmarxan83), 0);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 758
                         */
                        if (getMEMINT((int) (marxan.casymmetricconnectivity)) != 0) {

                            {

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 759
                                 */
                                marxan.cAppendDebugTraceFile((int) (strmarxan84), 0);

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 760
                                 */
                                marxan.cDumpAsymmetricConnectionFile(getMEMINT((int) (cpuno_17)), (int) (getMEMINT((int) (marxan.cconnections))), (int) (getMEMINT((int) (marxan.cpu))), (int) (marxan.cfnames));

                            }

                        }
                        ;

                    }

                }
                ;
                startargs(citemp_34);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 765 */
                marxan.cShowGenProg((int) (strmarxan85), endargs());

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 771 */
                marxan.cShowDetProg((int) (strmarxan86), 0);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 774 */
                marxan.cAppendDebugTraceFile((int) (strmarxan87), 0);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 777 */
                marxan.cLoadSparseMatrix(ciSparseMatrixFileLength_5, (int) (marxan.cSM), getMEMINT((int) (cpuno_17)), getMEMINT((int) (cspno_18)), (int) (getMEMINT((int) (marxan.cpu))), (int) (getMEMINT((int) (marxan.cPULookup))), (int) (getMEMINT((int) (marxan.cSPLookup))), (int) (marxan.cfnames));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 780 */
                marxan.cAppendDebugTraceFile((int) (strmarxan88), 0);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 784 */
                if ((((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 783 */
                cstrcmp(strmarxan8, getMEMINT((int) ((marxan.cfnames + 20))))) != (0)) ? 1 : 0) != 0) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 786
                         */
                        marxan.cAppendDebugTraceFile((int) (strmarxan89), 0);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 789
                         */
                        marxan.cLoadSparseMatrix_sporder(ciSparseMatrixFileLength_sporder_6, (int) (marxan.cSMsporder), getMEMINT((int) (cpuno_17)), getMEMINT((int) (cspno_18)), (int) (getMEMINT((int) (marxan.cPULookup))), (int) (getMEMINT((int) (marxan.cSPLookup))), (int) (marxan.cfnames));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 792
                         */
                        marxan.cAppendDebugTraceFile((int) (strmarxan90), 0);

                    }

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 804 */
                marxan.cAppendDebugTraceFile((int) (strmarxan91), 0);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 805 */
                marxan.cCalcTotalAreas(getMEMINT((int) (cpuno_17)), getMEMINT((int) (cspno_18)), (int) (getMEMINT((int) (marxan.cpu))), (int) (getMEMINT((int) (marxan.cspec))), (int) (getMEMINT((int) (marxan.cSM))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 806 */
                marxan.cAppendDebugTraceFile((int) (strmarxan92), 0);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 810 */
                if (getMEMINT((int) ((marxan.cfnames + 128))) != 0) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 812
                         */
                        if ((((getMEMINT((int) ((marxan.cfnames + 128)))) == (3)) ? 1 : 0) != 0) {
                            startargs(csavename_46);

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 812
                             */
                            csprintf((int) (ctempname2_47), strmarxan93, endargs());

                        } else {

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 815
                             */
                            if ((((getMEMINT((int) ((marxan.cfnames + 128)))) == (2)) ? 1 : 0) != 0) {
                                startargs(csavename_46);

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 815
                                 */
                                csprintf((int) (ctempname2_47), strmarxan94, endargs());

                            } else {
                                startargs(csavename_46);

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 817
                                 */
                                csprintf((int) (ctempname2_47), strmarxan95, endargs());

                            }
                            ;

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 819
                         */
                        marxan.cOutputTotalAreas(getMEMINT((int) (cpuno_17)), getMEMINT((int) (cspno_18)), (int) (getMEMINT((int) (marxan.cpu))), (int) (getMEMINT((int) (marxan.cspec))), (int) (getMEMINT((int) (marxan.cSM))), (int) (ctempname2_47), getMEMINT((int) ((marxan.cfnames
                                + 124))));

                    }

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 824 */
                if ((((getMEMINT((int) (marxan.cfSpecPROPLoaded))) > (0)) ? 1 : 0) != 0) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 826
                         */
                        marxan.cAppendDebugTraceFile((int) (strmarxan96), 0);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 830
                         */
                        marxan.cApplySpecProp(getMEMINT((int) (cspno_18)), (int) (getMEMINT((int) (marxan.cspec))), getMEMINT((int) (cpuno_17)), (int) (getMEMINT((int) (marxan.cpu))), (int) (getMEMINT((int) (marxan.cSM))));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 833
                         */
                        marxan.cAppendDebugTraceFile((int) (strmarxan97), 0);

                    }

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 837 */
                if ((((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 836 */
                cstrcmp(strmarxan8, getMEMINT((int) ((marxan.cfnames + 52))))) != (0)) ? 1 : 0) != 0) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 839
                         */
                        marxan.cAppendDebugTraceFile((int) (strmarxan98), 0);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 842
                         */
                        marxan.cBuild_ZoneTarget(getMEMINT((int) (cspno_18)), getMEMINT((int) (marxan.ciZoneCount)), getMEMINT((int) (ciZoneTargetCount_8)), (int) (getMEMINT((int) (marxan.cZoneTarget))), (int) (marxan.c_ZoneTarget), getMEMINT((int) (cpuno_17)), (int) (getMEMINT((int) (marxan.cpu))), (int) (getMEMINT((int) (marxan.cSM))));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 843
                         */
                        cfree(getMEMINT((int) (marxan.cZoneTarget)));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 846
                         */
                        marxan.cAppendDebugTraceFile((int) (strmarxan99), 0);

                    }

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 850 */
                if ((((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 849 */
                cstrcmp(strmarxan8, getMEMINT((int) ((marxan.cfnames + 56))))) != (0)) ? 1 : 0) != 0) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 852
                         */
                        if ((((
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 851
                         */
                        cstrcmp(strmarxan8, getMEMINT((int) ((marxan.cfnames + 52))))) != (0)) ? 1
                                : 0) != 0) {

                            {

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 854
                                 */
                                marxan.cAppendDebugTraceFile((int) (strmarxan100), 0);

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 857
                                 */
                                marxan.cBuild_ZoneTarget2(getMEMINT((int) (cspno_18)), getMEMINT((int) (marxan.ciZoneCount)), getMEMINT((int) (ciZoneTarget2Count_12)), (int) (getMEMINT((int) (marxan.cZoneTarget2))), (int) (marxan.c_ZoneTarget), getMEMINT((int) (cpuno_17)), (int) (getMEMINT((int) (marxan.cpu))), (int) (getMEMINT((int) (marxan.cSM))));

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 860
                                 */
                                marxan.cAppendDebugTraceFile((int) (strmarxan101), 0);

                            }

                        } else {

                            {

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 866
                                 */
                                marxan.cAppendDebugTraceFile((int) (strmarxan102), 0);

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 869
                                 */
                                marxan.cUpdate_ZoneTarget2(getMEMINT((int) (cspno_18)), getMEMINT((int) (marxan.ciZoneCount)), getMEMINT((int) (ciZoneTarget2Count_12)), (int) (getMEMINT((int) (marxan.cZoneTarget2))), (int) (getMEMINT((int) (marxan.c_ZoneTarget))), getMEMINT((int) (cpuno_17)), (int) (getMEMINT((int) (marxan.cpu))), (int) (getMEMINT((int) (marxan.cSM))));

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 872
                                 */
                                marxan.cAppendDebugTraceFile((int) (strmarxan103), 0);

                            }

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 875
                         */
                        cfree(getMEMINT((int) (marxan.cZoneTarget2)));

                    }

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 880 */
                if ((((getMEMINT((int) (marxan.ciVerbosity))) > (3)) ? 1 : 0) != 0) {

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 880 */
                    marxan.cDump_ZoneTarget(getMEMINT((int) (cspno_18)), getMEMINT((int) (marxan.ciZoneCount)), (int) (getMEMINT((int) (marxan.c_ZoneTarget))), (int) (marxan.cfnames));

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 884 */
                if ((((cstyle) != (1)) ? 1 : 0) != 0) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 886
                         */
                        marxan.cAppendDebugTraceFile((int) (strmarxan104), 0);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 890
                         */
                        if ((((
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 889
                         */
                        cstrcmp(strmarxan8, getMEMINT((int) ((marxan.cfnames + 28))))) != (0)) ? 1
                                : 0) != 0) {

                            {

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 891
                                 */
                                marxan.cShowDetProg((int) (strmarxan105), 0);

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 892
                                 */
                                marxan.cReadGenSpeciesData(cgspno_19, (int) (cgspec_39), (int) (marxan.cfnames));

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 893
                                 */
                                marxan.cSetBlockDefs(getMEMINT((int) (cgspno_19)), getMEMINT((int) (cspno_18)), getMEMINT((int) (cpuno_17)), (int) (getMEMINT((int) (cgspec_39))), (int) (getMEMINT((int) (marxan.cspec))), (int) (getMEMINT((int) (marxan.cpu))), (int) (getMEMINT((int) (marxan.cSM))));

                            }

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 896
                         */
                        marxan.cSetDefs(getMEMINT((int) (cspno_18)), (int) (getMEMINT((int) (marxan.cspec))));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 899
                         */
                        marxan.cAppendDebugTraceFile((int) (strmarxan106), 0);

                    }

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 903 */
                marxan.cShowGenProgInfo((int) (strmarxan107), 0);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 910 */
                cipu_36 = 0;
                lab_marxan1: for (; (((cipu_36) < (getMEMINT((int) (cspno_18)))) ? 1 : 0) != 0;) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 907
                         */
                        if ((((getMEMDOUBLE((int) (((getMEMINT((int) (marxan.cspec)) + (cipu_36 * 100))
                                + 80)))) > (0)) ? 1 : 0) != 0) {
                            setMEMINT((int) (caggexist_28), (int) (1));

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 909
                         */
                        if ((((getMEMDOUBLE((int) (((getMEMINT((int) (marxan.cspec)) + (cipu_36 * 100))
                                + 60)))) > (0)) ? 1 : 0) != 0) {
                            setMEMINT((int) (csepexist_29), (int) (1));

                        }
                        ;

                    }
                    cipu_36++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 913 */
                if (getMEMINT((int) ((marxan.cfnames + 96))) != 0) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 915
                         */
                        marxan.cAppendDebugTraceFile((int) (strmarxan108), 0);
                        startargs(csavename_46);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 918
                         */
                        csprintf((int) (ctempname2_47), strmarxan109, endargs());

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 920
                         */
                        marxan.cOutputScenario(getMEMINT((int) (cpuno_17)), getMEMINT((int) (cspno_18)), getMEMDOUBLE((int) (cprop_40)), (int) (marxan.canneal), cseedinit_27, getMEMINT((int) (crepeats_25)), getMEMINT((int) (cclumptype_23)), getMEMINT((int) (crunopts_20)), getMEMINT((int) (cheurotype_21)), getMEMDOUBLE((int) (ccostthresh_42)), getMEMDOUBLE((int) (ctpf1_43)), getMEMDOUBLE((int) (ctpf2_44)), (int) (ctempname2_47));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 923
                         */
                        marxan.cAppendDebugTraceFile((int) (strmarxan110), 0);

                    }

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 928 */
                if ((((getMEMINT((int) (cverbose_22))) > (1)) ? 1 : 0) != 0) {

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 928 */
                    marxan.cShowTimePassed();

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 931 */
                marxan.cAppendDebugTraceFile((int) (strmarxan111), 0);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 934 */
                marxan.cInitialiseReserve(getMEMINT((int) (cpuno_17)), (int) (getMEMINT((int) (marxan.cpu))), (int) (cR_30), getMEMINT((int) (marxan.ciZoneCount)), (int) (getMEMINT((int) (marxan.cPuZone))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 937 */
                marxan.cAppendDebugTraceFile((int) (strmarxan112), 0);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 941 */
                marxan.cShowGenProg((int) (strmarxan113), 0);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 942 */
                marxan.cShowGenProgInfo((int) (strmarxan114), 0);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 945 */
                if ((((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 944 */
                cstrcmp(strmarxan8, getMEMINT((int) ((marxan.cfnames + 76))))) == (0)) ? 1 : 0) != 0) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 947
                         */
                        if ((((
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 946
                         */
                        cstrcmp(strmarxan8, getMEMINT((int) ((marxan.cfnames + 20))))) == (0)) ? 1
                                : 0) != 0) {

                            {

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 949
                                 */
                                marxan.cAppendDebugTraceFile((int) (strmarxan115), 0);
                                citemp_34 =
                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 953
                                         */
                                        marxan.cCalcPenalties(getMEMINT((int) (cpuno_17)), getMEMINT((int) (cspno_18)), (int) (getMEMINT((int) (marxan.cpu))), (int) (getMEMINT((int) (marxan.cspec))), (int) (getMEMINT((int) (marxan.cconnections))), (int) (getMEMINT((int) (marxan.cSM))), getMEMINT((int) (caggexist_28)), getMEMINT((int) (cclumptype_23)), getMEMINT((int) (marxan.ciZoneCount)), (int) (cR_30), (int) (getMEMINT((int) (marxan.c_ZoneTarget))));

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 956
                                 */
                                marxan.cAppendDebugTraceFile((int) (strmarxan116), 0);

                            }

                        } else {

                            {

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 963
                                 */
                                if ((((getMEMINT((int) (marxan.ciOptimisationCalcPenalties))) == (1)) ? 1
                                        : 0) != 0) {

                                    {

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 965
                                         */
                                        marxan.cAppendDebugTraceFile((int) (strmarxan117), 0);
                                        citemp_34 =
                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 968
                                                 */
                                                marxan.cCalcPenaltiesOptimise(getMEMINT((int) (cpuno_17)), getMEMINT((int) (cspno_18)), (int) (getMEMINT((int) (marxan.cpu))), (int) (getMEMINT((int) (marxan.cspec))), (int) (getMEMINT((int) (marxan.cconnections))), (int) (getMEMINT((int) (marxan.cSM))), (int) (getMEMINT((int) (marxan.cSMsporder))), (int) (cR_30), getMEMINT((int) (caggexist_28)), getMEMINT((int) (cclumptype_23)));

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 971
                                         */
                                        marxan.cAppendDebugTraceFile((int) (strmarxan118), 0);

                                    }

                                } else {

                                    {

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 977
                                         */
                                        marxan.cAppendDebugTraceFile((int) (strmarxan115), 0);
                                        citemp_34 =
                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 980
                                                 */
                                                marxan.cCalcPenalties(getMEMINT((int) (cpuno_17)), getMEMINT((int) (cspno_18)), (int) (getMEMINT((int) (marxan.cpu))), (int) (getMEMINT((int) (marxan.cspec))), (int) (getMEMINT((int) (marxan.cconnections))), (int) (getMEMINT((int) (marxan.cSM))), getMEMINT((int) (caggexist_28)), getMEMINT((int) (cclumptype_23)), getMEMINT((int) (marxan.ciZoneCount)), (int) (cR_30), (int) (getMEMINT((int) (marxan.c_ZoneTarget))));

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 983
                                         */
                                        marxan.cAppendDebugTraceFile((int) (strmarxan116), 0);

                                    }

                                }
                                ;

                            }

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 988
                         */
                        if ((((citemp_34) > (0)) ? 1 : 0) != 0) {
                            startargs(citemp_34);
                            addarg(((((citemp_34) == (1)) ? 1 : 0) != 0 ? 32 : 115));

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 988
                             */
                            marxan.cShowProg((int) (strmarxan119), endargs());

                        }
                        ;

                    }

                } else {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 993
                         */
                        marxan.cAppendDebugTraceFile((int) (strmarxan120), 0);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 996
                         */
                        marxan.cLoadPenalty(getMEMINT((int) (cspno_18)), (int) (getMEMINT((int) (marxan.cspec))), (int) (marxan.cfnames));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 999
                         */
                        marxan.cAppendDebugTraceFile((int) (strmarxan121), 0);

                    }

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1004 */
                if (getMEMINT((int) ((marxan.crunoptions + 0))) != 0) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1005
                         */
                        marxan.cShowGenProgInfo((int) (strmarxan122), 0);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1007
                         */
                        if (((getMEMINT((int) ((marxan.canneal + 0))) == 0) ? 1 : 0) != 0) {

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 1007
                             */
                            marxan.cShowErrorMessage((int) (strmarxan123), 0);

                        }
                        ;
                        setMEMINT((int) ((marxan.canneal
                                + 8)), (int) ((getMEMINT((int) ((marxan.canneal + 4)))
                                        / getMEMINT((int) ((marxan.canneal + 0))))));
                        startargs(getMEMINT((int) ((marxan.canneal + 8))));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1010
                         */
                        marxan.cShowGenProgInfo((int) (strmarxan124), endargs());
                        startargs(getMEMINT((int) ((marxan.canneal + 4))));
                        addarg(getMEMINT((int) (crepeats_25)));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1011
                         */
                        marxan.cShowGenProgInfo((int) (strmarxan125), endargs());

                    }

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1015 */
                if (getMEMINT((int) ((marxan.cfnames + 124))) != 0) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1017
                         */
                        if ((((getMEMINT((int) ((marxan.cfnames + 124)))) == (3)) ? 1 : 0) != 0) {
                            startargs(csavename_46);

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 1017
                             */
                            csprintf((int) (ctempname2_47), strmarxan126, endargs());

                        } else {

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 1020
                             */
                            if ((((getMEMINT((int) ((marxan.cfnames + 124)))) == (2)) ? 1 : 0) != 0) {
                                startargs(csavename_46);

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 1020
                                 */
                                csprintf((int) (ctempname2_47), strmarxan127, endargs());

                            } else {
                                startargs(csavename_46);

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 1022
                                 */
                                csprintf((int) (ctempname2_47), strmarxan128, endargs());

                            }
                            ;

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1024
                         */
                        marxan.cOutputPenalty(getMEMINT((int) (cspno_18)), (int) (getMEMINT((int) (marxan.cspec))), (int) (ctempname2_47), getMEMINT((int) ((marxan.cfnames
                                + 124))));

                    }

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1028 */
                if (getMEMINT((int) ((marxan.cfnames + 160))) != 0) {

                    {
                        startargs(csavename_46);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1029
                         */
                        csprintf((int) (ctempname2_47), strmarxan129, endargs());

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1030
                         */
                        marxan.cOutputSpeciesData(getMEMINT((int) (cspno_18)), (int) (getMEMINT((int) (marxan.cspec))), (int) (ctempname2_47));

                    }

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1034 */
                if (getMEMINT((int) ((marxan.cfnames + 132))) != 0) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1036
                         */
                        if ((((getMEMINT((int) ((marxan.cfnames + 132)))) == (3)) ? 1 : 0) != 0) {
                            startargs(csavename_46);

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 1036
                             */
                            csprintf((int) (ctempname2_47), strmarxan130, endargs());

                        } else {

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 1039
                             */
                            if ((((getMEMINT((int) ((marxan.cfnames + 132)))) == (2)) ? 1 : 0) != 0) {
                                startargs(csavename_46);

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 1039
                                 */
                                csprintf((int) (ctempname2_47), strmarxan131, endargs());

                            } else {
                                startargs(csavename_46);

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 1041
                                 */
                                csprintf((int) (ctempname2_47), strmarxan132, endargs());

                            }
                            ;

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1043
                         */
                        marxan.cInitSolutionsMatrix(getMEMINT((int) (cpuno_17)), (int) (getMEMINT((int) (marxan.cpu))), (int) (ctempname2_47), getMEMINT((int) ((marxan.cfnames
                                + 132))), getMEMINT((int) ((marxan.cfnames + 136))));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1057
                         */
                        ci_38 = 1;
                        lab_marxan2: for (; (((ci_38) <= (getMEMINT((int) (marxan.ciZoneCount)))) ? 1
                                : 0) != 0;) {

                            {

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 1049
                                 */
                                if ((((getMEMINT((int) ((marxan.cfnames + 132)))) == (3)) ? 1 : 0) != 0) {
                                    startargs(csavename_46);
                                    addarg(ci_38);

                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 1049
                                     */
                                    csprintf((int) (ctempname2_47), strmarxan133, endargs());

                                } else {

                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 1052
                                     */
                                    if ((((getMEMINT((int) ((marxan.cfnames + 132)))) == (2)) ? 1 : 0) != 0) {
                                        startargs(csavename_46);
                                        addarg(ci_38);

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 1052
                                         */
                                        csprintf((int) (ctempname2_47), strmarxan134, endargs());

                                    } else {
                                        startargs(csavename_46);
                                        addarg(ci_38);

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 1054
                                         */
                                        csprintf((int) (ctempname2_47), strmarxan135, endargs());

                                    }
                                    ;

                                }
                                ;

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 1056
                                 */
                                marxan.cInitSolutionsMatrix(getMEMINT((int) (cpuno_17)), (int) (getMEMINT((int) (marxan.cpu))), (int) (ctempname2_47), getMEMINT((int) ((marxan.cfnames
                                        + 132))), getMEMINT((int) ((marxan.cfnames + 136))));

                            }
                            ci_38++;

                        }

                    }

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1402 */
                cirun_35 = 1;
                lab_marxan3: for (; (((cirun_35) <= (getMEMINT((int) (crepeats_25)))) ? 1 : 0) != 0;) {

                    {
                        startargs(cirun_35);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1064
                         */
                        csprintf((int) (cdebugbuffer_48), strmarxan136, endargs());

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1065
                         */
                        marxan.cAppendDebugTraceFile((int) (cdebugbuffer_48), 0);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1068
                         */
                        marxan.cShowGenProg((int) (strmarxan137), 0);
                        startargs(cirun_35);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1069
                         */
                        marxan.cShowProg((int) (strmarxan138), endargs());

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1072
                         */
                        if (getMEMINT((int) ((marxan.crunoptions + 0))) != 0) {

                            {

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 1074
                                 */
                                if ((((getMEMINT((int) ((marxan.canneal + 44)))) >= (2)) ? 1 : 0) != 0) {

                                    {

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 1076
                                         */
                                        if ((((getMEMINT((int) ((marxan.canneal + 44)))) == (2)) ? 1
                                                : 0) != 0) {

                                            {
                                                startargs(cirun_35);

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 1078
                                                 */
                                                csprintf((int) (cdebugbuffer_48), strmarxan139, endargs());

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 1079
                                                 */
                                                marxan.cAppendDebugTraceFile((int) (cdebugbuffer_48), 0);

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 1082
                                                 */
                                                marxan.cConnollyInit(cirun_35, getMEMINT((int) (cpuno_17)), getMEMINT((int) (cspno_18)), (int) (getMEMINT((int) (marxan.cpu))), (int) (getMEMINT((int) (marxan.cconnections))), (int) (getMEMINT((int) (marxan.cspec))), (int) (getMEMINT((int) (marxan.cSM))), (int) (marxan.canneal), getMEMINT((int) (caggexist_28)), (int) (cR_30), getMEMDOUBLE((int) (cprop_40)), getMEMINT((int) (cclumptype_23)), getMEMINT((int) (marxan.ciZoneCount)), getMEMINT((int) (cverbose_22)));
                                                startargs(cirun_35);

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 1085
                                                 */
                                                csprintf((int) (cdebugbuffer_48), strmarxan140, endargs());

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 1086
                                                 */
                                                marxan.cAppendDebugTraceFile((int) (cdebugbuffer_48), 0);

                                            }

                                        }
                                        ;

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 1091
                                         */
                                        if ((((getMEMINT((int) ((marxan.canneal + 44)))) == (3)) ? 1
                                                : 0) != 0) {

                                            {
                                                startargs(cirun_35);

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 1093
                                                 */
                                                csprintf((int) (cdebugbuffer_48), strmarxan141, endargs());

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 1094
                                                 */
                                                marxan.cAppendDebugTraceFile((int) (cdebugbuffer_48), 0);

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 1097
                                                 */
                                                marxan.cAdaptiveInit(cirun_35, getMEMINT((int) (cpuno_17)), getMEMINT((int) (cspno_18)), getMEMDOUBLE((int) (cprop_40)), (int) (cR_30), (int) (getMEMINT((int) (marxan.cpu))), (int) (getMEMINT((int) (marxan.cconnections))), (int) (getMEMINT((int) (marxan.cSM))), (int) (getMEMINT((int) (marxan.cspec))), getMEMINT((int) (caggexist_28)), (int) (marxan.canneal), getMEMINT((int) (cclumptype_23)), getMEMINT((int) (marxan.ciZoneCount)));
                                                startargs(cirun_35);

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 1100
                                                 */
                                                csprintf((int) (cdebugbuffer_48), strmarxan142, endargs());

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 1101
                                                 */
                                                marxan.cAppendDebugTraceFile((int) (cdebugbuffer_48), 0);

                                            }

                                        }
                                        ;
                                        startargs(getMEMDOUBLE((int) ((marxan.canneal + 12))));
                                        addarg(getMEMDOUBLE((int) ((marxan.canneal + 20))));

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 1106
                                         */
                                        marxan.cShowGenProg((int) (strmarxan143), endargs());

                                    }

                                }
                                ;

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 1110
                                 */
                                if ((((getMEMINT((int) ((marxan.canneal + 44)))) == (3)) ? 1 : 0) != 0) {

                                }
                                ;
                                setMEMDOUBLE((int) ((marxan.canneal
                                        + 28)), (double) (getMEMDOUBLE((int) ((marxan.canneal + 12)))));

                            }

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1118
                         */
                        marxan.cShowGenProg((int) (strmarxan144), 0);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1121
                         */
                        if (getMEMINT((int) (caggexist_28)) != 0) {

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 1121
                             */
                            marxan.cClearClumps(getMEMINT((int) (cspno_18)), (int) (getMEMINT((int) (marxan.cspec))), (int) (getMEMINT((int) (marxan.cpu))), (int) (getMEMINT((int) (marxan.cSM))));

                        }
                        ;
                        startargs(cirun_35);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1124
                         */
                        csprintf((int) (cdebugbuffer_48), strmarxan145, endargs());

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1125
                         */
                        marxan.cAppendDebugTraceFile((int) (cdebugbuffer_48), 0);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1128
                         */
                        marxan.cZonationCost(cirun_35, getMEMINT((int) (cpuno_17)), getMEMINT((int) (cspno_18)), cR_30, (int) (getMEMINT((int) (marxan.cpu))), (int) (getMEMINT((int) (marxan.cconnections))), (int) (getMEMINT((int) (marxan.cSM))), (int) (getMEMINT((int) (marxan.cspec))), getMEMINT((int) (caggexist_28)), (int) (marxan.creserve), getMEMINT((int) (cclumptype_23)), getMEMDOUBLE((int) (cprop_40)), 1);
                        startargs(cirun_35);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1131
                         */
                        csprintf((int) (cdebugbuffer_48), strmarxan146, endargs());

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1132
                         */
                        marxan.cAppendDebugTraceFile((int) (cdebugbuffer_48), 0);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1136
                         */
                        if ((((getMEMINT((int) (cverbose_22))) > (1)) ? 1 : 0) != 0) {

                            {

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 1137
                                 */
                                marxan.cShowGenProg((int) (strmarxan147), 0);

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 1138
                                 */
                                marxan.cPrintResVal(getMEMINT((int) (cpuno_17)), getMEMINT((int) (cspno_18)), (int) (cR_30), (int) (marxan.creserve), (int) (getMEMINT((int) (marxan.cspec))), getMEMDOUBLE((int) (cmisslevel_41)));

                            }

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1142
                         */
                        if ((((getMEMINT((int) (cverbose_22))) > (5)) ? 1 : 0) != 0) {

                            {

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 1143
                                 */
                                marxan.cShowTimePassed();

                            }

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1151
                         */
                        if (getMEMINT((int) ((marxan.crunoptions + 0))) != 0) {

                            {
                                startargs(cirun_35);

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 1153
                                 */
                                csprintf((int) (cdebugbuffer_48), strmarxan148, endargs());

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 1154
                                 */
                                marxan.cAppendDebugTraceFile((int) (cdebugbuffer_48), 0);

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 1159
                                 */
                                marxan.cAnnealing(getMEMINT((int) (cspno_18)), getMEMINT((int) (cpuno_17)), (int) (getMEMINT((int) (marxan.cconnections))), (int) (cR_30), getMEMINT((int) (marxan.cspec)), (int) (getMEMINT((int) (marxan.cpu))), (int) (getMEMINT((int) (marxan.cSM))), (int) (marxan.cchange), (int) (marxan.creserve), getMEMINT((int) (crepeats_25)), cirun_35, (int) (csavename_46), getMEMINT((int) (cverbose_22)), getMEMDOUBLE((int) (cmisslevel_41)), getMEMINT((int) (caggexist_28)), getMEMDOUBLE((int) (ccostthresh_42)), getMEMDOUBLE((int) (ctpf1_43)), getMEMDOUBLE((int) (ctpf2_44)), getMEMINT((int) (cclumptype_23)), getMEMDOUBLE((int) (cprop_40)));
                                startargs(cirun_35);

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 1162
                                 */
                                csprintf((int) (cdebugbuffer_48), strmarxan149, endargs());

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 1163
                                 */
                                marxan.cAppendDebugTraceFile((int) (cdebugbuffer_48), 0);

                            }

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1168
                         */
                        if (getMEMINT((int) ((marxan.crunoptions + 4))) != 0) {

                            {
                                startargs(cirun_35);

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 1170
                                 */
                                csprintf((int) (cdebugbuffer_48), strmarxan150, endargs());

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 1171
                                 */
                                marxan.cAppendDebugTraceFile((int) (cdebugbuffer_48), 0);

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 1175
                                 */
                                marxan.cHeuristics(getMEMINT((int) (cspno_18)), getMEMINT((int) (cpuno_17)), (int) (getMEMINT((int) (marxan.cpu))), (int) (getMEMINT((int) (marxan.cconnections))), (int) (cR_30), getMEMINT((int) (marxan.cspec)), (int) (getMEMINT((int) (marxan.cSM))), (int) (marxan.creserve), getMEMDOUBLE((int) (ccostthresh_42)), getMEMDOUBLE((int) (ctpf1_43)), getMEMDOUBLE((int) (ctpf2_44)), getMEMINT((int) (cheurotype_21)), getMEMINT((int) (cclumptype_23)));

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 1178
                                 */
                                if (((((((getMEMINT((int) (cverbose_22))) > (1)) ? 1 : 0)) != 0)
                                        ? (((((((getMEMINT((int) (crunopts_20))) == (2)) ? 1 : 0)) != 0) ? 1
                                                : ((((getMEMINT((int) (crunopts_20))) == (5)) ? 1 : 0))))
                                        : 0) != 0) {

                                    {

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 1179
                                         */
                                        marxan.cShowGenProg((int) (strmarxan151), 0);

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 1180
                                         */
                                        marxan.cPrintResVal(getMEMINT((int) (cpuno_17)), getMEMINT((int) (cspno_18)), (int) (cR_30), (int) (marxan.creserve), (int) (getMEMINT((int) (marxan.cspec))), getMEMDOUBLE((int) (cmisslevel_41)));

                                    }

                                }
                                ;
                                startargs(cirun_35);

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 1184
                                 */
                                csprintf((int) (cdebugbuffer_48), strmarxan152, endargs());

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 1185
                                 */
                                marxan.cAppendDebugTraceFile((int) (cdebugbuffer_48), 0);

                            }

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1190
                         */
                        if (getMEMINT((int) ((marxan.crunoptions + 8))) != 0) {

                            {

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 1192
                                 */
                                if ((((getMEMINT((int) (marxan.ciOptimisationIterativeImprovement))) == (1))
                                        ? 1 : 0) != 0) {

                                    {
                                        startargs(cirun_35);

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 1194
                                         */
                                        csprintf((int) (cdebugbuffer_48), strmarxan153, endargs());

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 1195
                                         */
                                        marxan.cAppendDebugTraceFile((int) (cdebugbuffer_48), 0);

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 1199
                                         */
                                        marxan.cIterativeImprovementOptimise(getMEMINT((int) (cpuno_17)), (int) (getMEMINT((int) (marxan.cpu))), (int) (getMEMINT((int) (marxan.cconnections))), (int) (getMEMINT((int) (marxan.cspec))), (int) (getMEMINT((int) (marxan.cSM))), (int) (cR_30), (int) (marxan.creserve), (int) (marxan.cchange), getMEMDOUBLE((int) (ccostthresh_42)), getMEMDOUBLE((int) (ctpf1_43)), getMEMDOUBLE((int) (ctpf2_44)), getMEMINT((int) (cclumptype_23)), cirun_35, (int) (csavename_46));

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 1202
                                         */
                                        if ((((getMEMINT((int) (citimptype_24))) == (3)) ? 1 : 0) != 0) {

                                            /*
                                             * file
                                             * E:/git/klab-ecology-component/etc/marxan/
                                             * marxan.c line 1203
                                             */
                                            marxan.cIterativeImprovementOptimise(getMEMINT((int) (cpuno_17)), (int) (getMEMINT((int) (marxan.cpu))), (int) (getMEMINT((int) (marxan.cconnections))), (int) (getMEMINT((int) (marxan.cspec))), (int) (getMEMINT((int) (marxan.cSM))), (int) (cR_30), (int) (marxan.creserve), (int) (marxan.cchange), getMEMDOUBLE((int) (ccostthresh_42)), getMEMDOUBLE((int) (ctpf1_43)), getMEMDOUBLE((int) (ctpf2_44)), getMEMINT((int) (cclumptype_23)), cirun_35, (int) (csavename_46));

                                        }
                                        ;
                                        startargs(cirun_35);

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 1206
                                         */
                                        csprintf((int) (cdebugbuffer_48), strmarxan154, endargs());

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 1207
                                         */
                                        marxan.cAppendDebugTraceFile((int) (cdebugbuffer_48), 0);

                                    }

                                } else {

                                    {
                                        startargs(cirun_35);

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 1213
                                         */
                                        csprintf((int) (cdebugbuffer_48), strmarxan155, endargs());

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 1214
                                         */
                                        marxan.cAppendDebugTraceFile((int) (cdebugbuffer_48), 0);

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 1218
                                         */
                                        marxan.cIterativeImprovement(getMEMINT((int) (cpuno_17)), (int) (getMEMINT((int) (marxan.cpu))), (int) (getMEMINT((int) (marxan.cconnections))), (int) (getMEMINT((int) (marxan.cspec))), (int) (getMEMINT((int) (marxan.cSM))), (int) (cR_30), (int) (marxan.creserve), (int) (marxan.cchange), getMEMDOUBLE((int) (ccostthresh_42)), getMEMDOUBLE((int) (ctpf1_43)), getMEMDOUBLE((int) (ctpf2_44)), getMEMINT((int) (cclumptype_23)), getMEMINT((int) (citimptype_24)));

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 1220
                                         */
                                        if ((((getMEMINT((int) (citimptype_24))) == (3)) ? 1 : 0) != 0) {

                                            /*
                                             * file
                                             * E:/git/klab-ecology-component/etc/marxan/
                                             * marxan.c line 1221
                                             */
                                            marxan.cIterativeImprovement(getMEMINT((int) (cpuno_17)), (int) (getMEMINT((int) (marxan.cpu))), (int) (getMEMINT((int) (marxan.cconnections))), (int) (getMEMINT((int) (marxan.cspec))), (int) (getMEMINT((int) (marxan.cSM))), (int) (cR_30), (int) (marxan.creserve), (int) (marxan.cchange), getMEMDOUBLE((int) (ccostthresh_42)), getMEMDOUBLE((int) (ctpf1_43)), getMEMDOUBLE((int) (ctpf2_44)), getMEMINT((int) (cclumptype_23)), 1);

                                        }
                                        ;
                                        startargs(cirun_35);

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 1224
                                         */
                                        csprintf((int) (cdebugbuffer_48), strmarxan156, endargs());

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 1225
                                         */
                                        marxan.cAppendDebugTraceFile((int) (cdebugbuffer_48), 0);

                                    }

                                }
                                ;

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 1230
                                 */
                                if (getMEMINT((int) (caggexist_28)) != 0) {

                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 1230
                                     */
                                    marxan.cClearClumps(getMEMINT((int) (cspno_18)), (int) (getMEMINT((int) (marxan.cspec))), (int) (getMEMINT((int) (marxan.cpu))), (int) (getMEMINT((int) (marxan.cSM))));

                                }
                                ;

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 1233
                                 */
                                if ((((getMEMINT((int) (cverbose_22))) > (1)) ? 1 : 0) != 0) {

                                    {

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 1234
                                         */
                                        marxan.cShowGenProg((int) (strmarxan157), 0);

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 1235
                                         */
                                        marxan.cPrintResVal(getMEMINT((int) (cpuno_17)), getMEMINT((int) (cspno_18)), (int) (cR_30), (int) (marxan.creserve), (int) (getMEMINT((int) (marxan.cspec))), getMEMDOUBLE((int) (cmisslevel_41)));

                                    }

                                }
                                ;

                            }

                        }
                        ;
                        startargs(cirun_35);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1240
                         */
                        csprintf((int) (cdebugbuffer_48), strmarxan158, endargs());

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1241
                         */
                        marxan.cAppendDebugTraceFile((int) (cdebugbuffer_48), 0);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1245
                         */
                        if (getMEMINT((int) ((marxan.cfnames + 88))) != 0) {

                            {

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 1247
                                 */
                                if ((((getMEMINT((int) ((marxan.cfnames + 88)))) == (3)) ? 1 : 0) != 0) {
                                    startargs(csavename_46);
                                    addarg((cirun_35 % 10000));

                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 1247
                                     */
                                    csprintf((int) (ctempname2_47), strmarxan159, endargs());

                                } else {

                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 1250
                                     */
                                    if ((((getMEMINT((int) ((marxan.cfnames + 88)))) == (2)) ? 1 : 0) != 0) {
                                        startargs(csavename_46);
                                        addarg((cirun_35 % 10000));

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 1250
                                         */
                                        csprintf((int) (ctempname2_47), strmarxan160, endargs());

                                    } else {
                                        startargs(csavename_46);
                                        addarg((cirun_35 % 10000));

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 1252
                                         */
                                        csprintf((int) (ctempname2_47), strmarxan161, endargs());

                                    }
                                    ;

                                }
                                ;

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 1254
                                 */
                                marxan.cOutputSolution(getMEMINT((int) (cpuno_17)), (int) (cR_30), (int) (getMEMINT((int) (marxan.cpu))), (int) (ctempname2_47), getMEMINT((int) ((marxan.cfnames
                                        + 88))));

                            }

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1263
                         */
                        if ((((getMEMINT((int) ((marxan.cfnames + 100)))) != 0)
                                ? (getMEMINT((int) ((marxan.cfnames + 88)))) : 0) != 0) {

                            {

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 1265
                                 */
                                if ((((getMEMINT((int) ((marxan.cfnames + 100)))) == (3)) ? 1 : 0) != 0) {
                                    startargs(csavename_46);
                                    addarg((cirun_35 % 10000));

                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 1265
                                     */
                                    csprintf((int) (ctempname2_47), strmarxan162, endargs());

                                } else {

                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 1268
                                     */
                                    if ((((getMEMINT((int) ((marxan.cfnames + 100)))) == (2)) ? 1 : 0) != 0) {
                                        startargs(csavename_46);
                                        addarg((cirun_35 % 10000));

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 1268
                                         */
                                        csprintf((int) (ctempname2_47), strmarxan163, endargs());

                                    } else {
                                        startargs(csavename_46);
                                        addarg((cirun_35 % 10000));

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 1270
                                         */
                                        csprintf((int) (ctempname2_47), strmarxan164, endargs());

                                    }
                                    ;

                                }
                                ;

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 1272
                                 */
                                marxan.cOutputFeatures(getMEMINT((int) (cspno_18)), (int) (getMEMINT((int) (marxan.cspec))), (int) (ctempname2_47), getMEMINT((int) ((marxan.cfnames
                                        + 100))), getMEMDOUBLE((int) (cmisslevel_41)));

                            }

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1280
                         */
                        if (getMEMINT((int) ((marxan.cfnames + 92))) != 0) {

                            {

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 1282
                                 */
                                if ((((getMEMINT((int) ((marxan.cfnames + 92)))) == (3)) ? 1 : 0) != 0) {
                                    startargs(csavename_46);

                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 1282
                                     */
                                    csprintf((int) (ctempname2_47), strmarxan165, endargs());

                                } else {

                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 1285
                                     */
                                    if ((((getMEMINT((int) ((marxan.cfnames + 92)))) == (2)) ? 1 : 0) != 0) {
                                        startargs(csavename_46);

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 1285
                                         */
                                        csprintf((int) (ctempname2_47), strmarxan166, endargs());

                                    } else {
                                        startargs(csavename_46);

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 1287
                                         */
                                        csprintf((int) (ctempname2_47), strmarxan167, endargs());

                                    }
                                    ;

                                }
                                ;

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 1290
                                 */
                                if ((((cirun_35) == (1)) ? 1 : 0) != 0) {

                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 1290
                                     */
                                    marxan.cOutputSummary(getMEMINT((int) (cpuno_17)), getMEMINT((int) (cspno_18)), (int) (cR_30), (int) (getMEMINT((int) (marxan.cspec))), (int) (marxan.creserve), cirun_35, (int) (ctempname2_47), getMEMDOUBLE((int) (cmisslevel_41)), getMEMINT((int) ((marxan.cfnames
                                            + 92))));

                                } else {

                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 1292
                                     */
                                    marxan.cOutputSummary(getMEMINT((int) (cpuno_17)), getMEMINT((int) (cspno_18)), (int) (cR_30), (int) (getMEMINT((int) (marxan.cspec))), (int) (marxan.creserve), cirun_35, (int) (ctempname2_47), getMEMDOUBLE((int) (cmisslevel_41)), getMEMINT((int) ((marxan.cfnames
                                            + 92))));

                                }
                                ;

                            }

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1301
                         */
                        if (getMEMINT((int) ((marxan.cfnames + 84))) != 0) {

                            {

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 1302
                                 */
                                marxan.cZonationCost(cirun_35, getMEMINT((int) (cpuno_17)), getMEMINT((int) (cspno_18)), cR_30, (int) (getMEMINT((int) (marxan.cpu))), (int) (getMEMINT((int) (marxan.cconnections))), (int) (getMEMINT((int) (marxan.cSM))), (int) (getMEMINT((int) (marxan.cspec))), getMEMINT((int) (caggexist_28)), (int) (marxan.cchange), getMEMINT((int) (cclumptype_23)), getMEMDOUBLE((int) (cprop_40)), 0);

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 1305
                                 */
                                if ((((cirun_35) == (1)) ? 1 : 0) != 0) {

                                    {
                                        crBestScore_45 = getMEMDOUBLE((int) ((marxan.cchange + 0)));

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 1307
                                         */
                                        cmemcpy(getMEMINT((int) (marxan.cbestyet)), cR_30, (4
                                                * getMEMINT((int) (cpuno_17))));
                                        ciBestRun_37 = cirun_35;

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 1311
                                         */
                                        if ((((getMEMINT((int) (cverbose_22))) > (1)) ? 1 : 0) != 0) {

                                            {

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 1312
                                                 */
                                                marxan.cShowGenProg((int) (strmarxan168), 0);

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 1313
                                                 */
                                                marxan.cPrintResVal(getMEMINT((int) (cpuno_17)), getMEMINT((int) (cspno_18)), (int) (getMEMINT((int) (marxan.cbestyet))), (int) (marxan.cchange), (int) (getMEMINT((int) (marxan.cspec))), getMEMDOUBLE((int) (cmisslevel_41)));

                                            }

                                        }
                                        ;

                                    }

                                } else {

                                    {

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 1319
                                         */
                                        if ((((getMEMDOUBLE((int) ((marxan.cchange
                                                + 0)))) <= (crBestScore_45)) ? 1 : 0) != 0) {

                                            {
                                                crBestScore_45 = getMEMDOUBLE((int) ((marxan.cchange + 0)));

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 1321
                                                 */
                                                cmemcpy(getMEMINT((int) (marxan.cbestyet)), cR_30, (4
                                                        * getMEMINT((int) (cpuno_17))));
                                                ciBestRun_37 = cirun_35;

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 1325
                                                 */
                                                if ((((getMEMINT((int) (cverbose_22))) > (1)) ? 1 : 0) != 0) {

                                                    {

                                                        /*
                                                         * file
                                                         * E:/git/klab-ecology-component/
                                                         * etc/marxan/marxan.c line 1326
                                                         */
                                                        marxan.cShowGenProg((int) (strmarxan168), 0);

                                                        /*
                                                         * file
                                                         * E:/git/klab-ecology-component/
                                                         * etc/marxan/marxan.c line 1327
                                                         */
                                                        marxan.cPrintResVal(getMEMINT((int) (cpuno_17)), getMEMINT((int) (cspno_18)), (int) (getMEMINT((int) (marxan.cbestyet))), (int) (marxan.cchange), (int) (getMEMINT((int) (marxan.cspec))), getMEMDOUBLE((int) (cmisslevel_41)));

                                                    }

                                                }
                                                ;

                                            }

                                        }
                                        ;

                                    }

                                }
                                ;

                            }

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1338
                         */
                        if (getMEMINT((int) ((marxan.cfnames + 104))) != 0) {

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 1346
                             */
                            cipu_36 = 0;
                            lab_marxan4: for (; (((cipu_36) < (getMEMINT((int) (cpuno_17)))) ? 1 : 0) != 0;) {

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 1340
                                 */
                                if ((((getMEMINT((int) ((cR_30 + (cipu_36 * 4))))) > (0)) ? 1 : 0) != 0) {

                                    {
                                        y1 = (int) ((csumsoln_32 + (cipu_36 * 4)));
                                        setMEMINT((int) (y1), (int) ((getMEMINT((int) (y1)) + 1)));
                                        ciZoneSumSolnIndex_16 = ((getMEMINT((int) (cpuno_17))
                                                * (getMEMINT((int) ((cR_30 + (cipu_36 * 4)))) - 1))
                                                + cipu_36);
                                        y2 = (int) ((cZoneSumSoln_33 + (ciZoneSumSolnIndex_16 * 4)));
                                        setMEMINT((int) (y2), (int) ((getMEMINT((int) (y2)) + 1)));

                                    }

                                }
                                ;
                                cipu_36++;

                            }

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1347
                         */
                        if (getMEMINT((int) ((marxan.cfnames + 132))) != 0) {

                            {

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 1349
                                 */
                                if ((((getMEMINT((int) ((marxan.cfnames + 132)))) == (3)) ? 1 : 0) != 0) {
                                    startargs(csavename_46);

                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 1349
                                     */
                                    csprintf((int) (ctempname2_47), strmarxan130, endargs());

                                } else {

                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 1352
                                     */
                                    if ((((getMEMINT((int) ((marxan.cfnames + 132)))) == (2)) ? 1 : 0) != 0) {
                                        startargs(csavename_46);

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 1352
                                         */
                                        csprintf((int) (ctempname2_47), strmarxan131, endargs());

                                    } else {
                                        startargs(csavename_46);

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 1354
                                         */
                                        csprintf((int) (ctempname2_47), strmarxan132, endargs());

                                    }
                                    ;

                                }
                                ;

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 1356
                                 */
                                marxan.cAppendSolutionsMatrix(cirun_35, getMEMINT((int) (cpuno_17)), (int) (cR_30), (int) (ctempname2_47), getMEMINT((int) ((marxan.cfnames
                                        + 132))), getMEMINT((int) ((marxan.cfnames + 136))));

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 1370
                                 */
                                ci_38 = 1;
                                lab_marxan5: for (; (((ci_38) <= (getMEMINT((int) (marxan.ciZoneCount)))) ? 1
                                        : 0) != 0;) {

                                    {

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 1362
                                         */
                                        if ((((getMEMINT((int) ((marxan.cfnames + 132)))) == (3)) ? 1
                                                : 0) != 0) {
                                            startargs(csavename_46);
                                            addarg(ci_38);

                                            /*
                                             * file
                                             * E:/git/klab-ecology-component/etc/marxan/
                                             * marxan.c line 1362
                                             */
                                            csprintf((int) (ctempname2_47), strmarxan133, endargs());

                                        } else {

                                            /*
                                             * file
                                             * E:/git/klab-ecology-component/etc/marxan/
                                             * marxan.c line 1365
                                             */
                                            if ((((getMEMINT((int) ((marxan.cfnames + 132)))) == (2)) ? 1
                                                    : 0) != 0) {
                                                startargs(csavename_46);
                                                addarg(ci_38);

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 1365
                                                 */
                                                csprintf((int) (ctempname2_47), strmarxan134, endargs());

                                            } else {
                                                startargs(csavename_46);
                                                addarg(ci_38);

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 1367
                                                 */
                                                csprintf((int) (ctempname2_47), strmarxan135, endargs());

                                            }
                                            ;

                                        }
                                        ;

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 1369
                                         */
                                        marxan.cAppendSolutionsMatrixZone(ci_38, cirun_35, getMEMINT((int) (cpuno_17)), (int) (cR_30), (int) (ctempname2_47), getMEMINT((int) ((marxan.cfnames
                                                + 132))), getMEMINT((int) ((marxan.cfnames + 136))));

                                    }
                                    ci_38++;

                                }

                            }

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1374
                         */
                        if (getMEMINT((int) ((marxan.cfnames + 164))) != 0) {

                            {

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 1376
                                 */
                                if ((((getMEMINT((int) ((marxan.cfnames + 164)))) == (3)) ? 1 : 0) != 0) {
                                    startargs(csavename_46);
                                    addarg((cirun_35 % 10000));

                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 1376
                                     */
                                    csprintf((int) (ctempname2_47), strmarxan169, endargs());

                                } else {

                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 1379
                                     */
                                    if ((((getMEMINT((int) ((marxan.cfnames + 164)))) == (2)) ? 1 : 0) != 0) {
                                        startargs(csavename_46);
                                        addarg((cirun_35 % 10000));

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 1379
                                         */
                                        csprintf((int) (ctempname2_47), strmarxan170, endargs());

                                    } else {
                                        startargs(csavename_46);
                                        addarg((cirun_35 % 10000));

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 1381
                                         */
                                        csprintf((int) (ctempname2_47), strmarxan171, endargs());

                                    }
                                    ;

                                }
                                ;

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 1383
                                 */
                                marxan.cOutputZoneConnectivitySum(getMEMINT((int) (cpuno_17)), (int) (cR_30), (int) (ctempname2_47), getMEMINT((int) ((marxan.cfnames
                                        + 164))));

                            }

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1387
                         */
                        if (getMEMINT((int) (caggexist_28)) != 0) {

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 1387
                             */
                            marxan.cClearClumps(getMEMINT((int) (cspno_18)), (int) (getMEMINT((int) (marxan.cspec))), (int) (getMEMINT((int) (marxan.cpu))), (int) (getMEMINT((int) (marxan.cSM))));

                        }
                        ;
                        startargs(cirun_35);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1390
                         */
                        csprintf((int) (cdebugbuffer_48), strmarxan172, endargs());

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1391
                         */
                        marxan.cAppendDebugTraceFile((int) (cdebugbuffer_48), 0);
                        startargs(cirun_35);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1392
                         */
                        csprintf((int) (cdebugbuffer_48), strmarxan173, endargs());

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1393
                         */
                        marxan.cAppendDebugTraceFile((int) (cdebugbuffer_48), 0);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1397
                         */
                        if ((((getMEMINT((int) (marxan.cmarxanisslave))) == (1)) ? 1 : 0) != 0) {

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 1397
                             */
                            marxan.cWriteSlaveSyncFileRun(cirun_35);

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1400
                         */
                        if ((((getMEMINT((int) (cverbose_22))) > (1)) ? 1 : 0) != 0) {

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 1400
                             */
                            marxan.cShowTimePassed();

                        }
                        ;

                    }
                    cirun_35++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1405 */
                csprintf((int) (cdebugbuffer_48), strmarxan174, 0);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1406 */
                marxan.cAppendDebugTraceFile((int) (cdebugbuffer_48), 0);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1410 */
                if (getMEMINT((int) ((marxan.cfnames + 84))) != 0) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1412
                         */
                        if ((((getMEMINT((int) ((marxan.cfnames + 84)))) == (3)) ? 1 : 0) != 0) {
                            startargs(csavename_46);

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 1412
                             */
                            csprintf((int) (ctempname2_47), strmarxan175, endargs());

                        } else {

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 1415
                             */
                            if ((((getMEMINT((int) ((marxan.cfnames + 84)))) == (2)) ? 1 : 0) != 0) {
                                startargs(csavename_46);

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 1415
                                 */
                                csprintf((int) (ctempname2_47), strmarxan176, endargs());

                            } else {
                                startargs(csavename_46);

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 1417
                                 */
                                csprintf((int) (ctempname2_47), strmarxan177, endargs());

                            }
                            ;

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1418
                         */
                        marxan.cOutputSolution(getMEMINT((int) (cpuno_17)), (int) (getMEMINT((int) (marxan.cbestyet))), (int) (getMEMINT((int) (marxan.cpu))), (int) (ctempname2_47), getMEMINT((int) ((marxan.cfnames
                                + 84))));
                        startargs(ciBestRun_37);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1421
                         */
                        csprintf((int) (cdebugbuffer_48), strmarxan178, endargs());

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1422
                         */
                        marxan.cAppendDebugTraceFile((int) (cdebugbuffer_48), 0);
                        startargs(ciBestRun_37);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1425
                         */
                        marxan.cShowGenProg((int) (strmarxan179), endargs());

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1428
                         */
                        if (getMEMINT((int) ((marxan.cfnames + 164))) != 0) {

                            {

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 1430
                                 */
                                if ((((getMEMINT((int) ((marxan.cfnames + 164)))) == (3)) ? 1 : 0) != 0) {
                                    startargs(csavename_46);

                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 1430
                                     */
                                    csprintf((int) (ctempname2_47), strmarxan180, endargs());

                                } else {

                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 1433
                                     */
                                    if ((((getMEMINT((int) ((marxan.cfnames + 164)))) == (2)) ? 1 : 0) != 0) {
                                        startargs(csavename_46);

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 1433
                                         */
                                        csprintf((int) (ctempname2_47), strmarxan181, endargs());

                                    } else {
                                        startargs(csavename_46);

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 1435
                                         */
                                        csprintf((int) (ctempname2_47), strmarxan182, endargs());

                                    }
                                    ;

                                }
                                ;

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 1437
                                 */
                                marxan.cOutputZoneConnectivitySum(getMEMINT((int) (cpuno_17)), (int) (getMEMINT((int) (marxan.cbestyet))), (int) (ctempname2_47), getMEMINT((int) ((marxan.cfnames
                                        + 164))));

                            }

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1441
                         */
                        if (getMEMINT((int) ((marxan.cfnames + 100))) != 0) {

                            {

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 1443
                                 */
                                if ((((getMEMINT((int) ((marxan.cfnames + 100)))) == (3)) ? 1 : 0) != 0) {
                                    startargs(csavename_46);

                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 1443
                                     */
                                    csprintf((int) (ctempname2_47), strmarxan183, endargs());

                                } else {

                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 1446
                                     */
                                    if ((((getMEMINT((int) ((marxan.cfnames + 100)))) == (2)) ? 1 : 0) != 0) {
                                        startargs(csavename_46);

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 1446
                                         */
                                        csprintf((int) (ctempname2_47), strmarxan184, endargs());

                                    } else {
                                        startargs(csavename_46);

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 1448
                                         */
                                        csprintf((int) (ctempname2_47), strmarxan185, endargs());

                                    }
                                    ;

                                }
                                ;

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 1450
                                 */
                                marxan.cOutputFeatures(getMEMINT((int) (cspno_18)), (int) (getMEMINT((int) (marxan.cspec))), (int) (ctempname2_47), getMEMINT((int) ((marxan.cfnames
                                        + 100))), getMEMDOUBLE((int) (cmisslevel_41)));

                            }

                        }
                        ;

                    }

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1455 */
                if (getMEMINT((int) ((marxan.cfnames + 104))) != 0) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1457
                         */
                        if ((((getMEMINT((int) ((marxan.cfnames + 104)))) == (3)) ? 1 : 0) != 0) {
                            startargs(csavename_46);

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 1457
                             */
                            csprintf((int) (ctempname2_47), strmarxan186, endargs());

                        } else {

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 1460
                             */
                            if ((((getMEMINT((int) ((marxan.cfnames + 104)))) == (2)) ? 1 : 0) != 0) {
                                startargs(csavename_46);

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 1460
                                 */
                                csprintf((int) (ctempname2_47), strmarxan187, endargs());

                            } else {
                                startargs(csavename_46);

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 1462
                                 */
                                csprintf((int) (ctempname2_47), strmarxan188, endargs());

                            }
                            ;

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1464
                         */
                        marxan.cOutputSumSoln(getMEMINT((int) (cpuno_17)), (int) (csumsoln_32), (int) (cZoneSumSoln_33), (int) (cR_30), (int) (getMEMINT((int) (marxan.cpu))), (int) (ctempname2_47), getMEMINT((int) ((marxan.cfnames
                                + 104))));

                    }

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1468 */
                if (getMEMINT((int) (caggexist_28)) != 0) {

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1468 */
                    marxan.cClearClumps(getMEMINT((int) (cspno_18)), (int) (getMEMINT((int) (marxan.cspec))), (int) (getMEMINT((int) (marxan.cpu))), (int) (getMEMINT((int) (marxan.cSM))));

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1471 */
                cfree(getMEMINT((int) (marxan.c_ZoneTarget)));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1472 */
                cfree(getMEMINT((int) (marxan.c_ZoneContrib)));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1473 */
                cfree(getMEMINT((int) (marxan.cTotalAreas)));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1476 */
                marxan.cShowShutdownScreen();

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1479 */
                if (getMEMINT((int) ((marxan.cfnames + 108))) != 0) {

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1479 */
                    marxan.cSetLogFile(0, (int) (0));

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1482 */
                csprintf((int) (cdebugbuffer_48), strmarxan189, 0);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1483 */
                marxan.cAppendDebugTraceFile((int) (cdebugbuffer_48), 0);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1484 */
                marxan.cAppendDebugTraceFile((int) (strmarxan190), 0);
                retval = 0;
                if (true) {
                    prevlevel();
                    return retval;
                }
                ;

            }
        }
        ;
        prevlevel();
        return 0;
    }

    static int strmarxan191 = jtocstr("r");
    static int strmarxan192 = jtocstr("cannot open Zones file %s\n");
    static int strmarxan193 = jtocstr(" ,;:^*\"/|\t\'\\\n");
    static int strmarxan194 = jtocstr("%d");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1499 */

    public static void cLoadZones(int ciZoneCount, int cZones, int cfnames) {
        nextlevel();
        if (true) {
            int label = 0;
            int cfp_5 = 0;
            int creadname_6 = 0;
            int cwritename_7 = 0;
            int csLine_8 = 0;
            int csVarVal_9 = 0;
            int ci_10 = 0;
            int ciLineCount_11 = 0;
            int cdebugbuffer_12 = 0;

            {
                cfp_5 = 0;
                creadname_6 = 0;
                cwritename_7 = 0;
                csLine_8 = calloca(5000);
                csVarVal_9 = 0;
                ci_10 = 0;
                ciLineCount_11 = 0;
                cdebugbuffer_12 = calloca(1000);
                creadname_6 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1505 */
                ccalloc(((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1505 */
                cstrlen(getMEMINT((int) ((cfnames + 0)))) +
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1505 */
                        cstrlen(getMEMINT((int) ((cfnames + 32))))) + 2), 1));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1506 */
                cstrcpy(creadname_6, getMEMINT((int) ((cfnames + 0))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1507 */
                cstrcat(creadname_6, getMEMINT((int) ((cfnames + 32))));
                cfp_5 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1508
                         */
                        cfopen(creadname_6, strmarxan191);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1510 */
                if ((((cfp_5) == ((int) (0))) ? 1 : 0) != 0) {
                    startargs(creadname_6);

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1510 */
                    marxan.cShowErrorMessage((int) (strmarxan192), endargs());

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1513 */
                cfgets((int) (csLine_8), 999, cfp_5);
                lab_marxan6: while ((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1514 */
                cfgets((int) (csLine_8), 999, cfp_5)) != 0) {
                    ciLineCount_11++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1516 */
                cfclose(cfp_5);
                setMEMINT((int) (ciZoneCount), (int) (ciLineCount_11));
                setMEMINT((int) (cZones), (int) ((int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1520 */
                ccalloc(ciLineCount_11, 254))));
                cfp_5 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1523
                         */
                        cfopen(creadname_6, strmarxan191);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1524 */
                cfgets((int) (csLine_8), 999, cfp_5);
                lab_marxan7: while ((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1525 */
                cfgets((int) (csLine_8), 999, cfp_5)) != 0) {

                    {
                        csVarVal_9 =
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 1528
                                 */
                                cstrtok((int) (csLine_8), strmarxan193);
                        startargs(((getMEMINT((int) (cZones)) + (ci_10 * 254)) + 0));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1529
                         */
                        csscanf(csVarVal_9, strmarxan194, endargs());
                        csVarVal_9 =
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 1532
                                 */
                                cstrtok((int) (0), strmarxan193);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1533
                         */
                        cstrcpy((int) (((getMEMINT((int) (cZones)) + (ci_10 * 254)) + 4)), csVarVal_9);
                        ci_10++;

                    }

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1537 */
                cfclose(cfp_5);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1539 */
                cfree(creadname_6);

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan195 = jtocstr("available");
    static int strmarxan196 = jtocstr("reserved");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1543 */

    public static void cDefaultZones(int ciZoneCount, int cZones) {
        nextlevel();
        if (true) {
            int label = 0;

            {
                setMEMINT((int) (ciZoneCount), (int) (2));
                setMEMINT((int) (cZones), (int) ((int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1546 */
                ccalloc(2, 254))));
                setMEMINT((int) (((getMEMINT((int) (cZones)) + (0 * 254)) + 0)), (int) (1));
                setMEMINT((int) (((getMEMINT((int) (cZones)) + (1 * 254)) + 0)), (int) (2));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1551 */
                cstrcpy((int) (((getMEMINT((int) (cZones)) + (0 * 254)) + 4)), strmarxan195);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1552 */
                cstrcpy((int) (((getMEMINT((int) (cZones)) + (1 * 254)) + 4)), strmarxan196);

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan197 = jtocstr("debugZoneNames.csv");
    static int strmarxan198 = jtocstr("w");
    static int strmarxan199 = jtocstr("cannot create DumpZoneNames file %s\n");
    static int strmarxan200 = jtocstr("zoneid,zonename\n");
    static int strmarxan201 = jtocstr("%d,%s\n");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1556 */

    public static void cDumpZoneNames(int ciZoneCount, int cZones, int cfnames) {
        nextlevel();
        if (true) {
            int label = 0;
            int cfp_5 = 0;
            int cwritename_6 = 0;
            int ci_7 = 0;

            {
                cfp_5 = 0;
                cwritename_6 = 0;
                ci_7 = 0;
                cwritename_6 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1561 */
                ccalloc(((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1561 */
                cstrlen(getMEMINT((int) ((cfnames + 4)))) +
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1561 */
                        cstrlen(strmarxan197)) + 2), 1));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1562 */
                cstrcpy(cwritename_6, getMEMINT((int) ((cfnames + 4))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1563 */
                cstrcat(cwritename_6, strmarxan197);
                cfp_5 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1564
                         */
                        cfopen(cwritename_6, strmarxan198);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1566 */
                if ((((cfp_5) == ((int) (0))) ? 1 : 0) != 0) {
                    startargs(cwritename_6);

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1566 */
                    marxan.cShowErrorMessage((int) (strmarxan199), endargs());

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1567 */
                cfree(cwritename_6);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1569 */
                cfprintf(cfp_5, strmarxan200, 0);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1574 */
                ci_7 = 0;
                lab_marxan8: for (; (((ci_7) < (ciZoneCount)) ? 1 : 0) != 0;) {

                    {
                        startargs(getMEMINT((int) (((cZones + ((int) (ci_7) * 254)) + 0))));
                        addarg(((cZones + ((int) (ci_7) * 254)) + 4));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1573
                         */
                        cfprintf(cfp_5, strmarxan201, endargs());

                    }
                    ci_7++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1576 */
                cfclose(cfp_5);

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan202 = jtocstr("cannot open CostNames file %s\n");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1580 */

    public static void cLoadCostNames(int ciCostCount, int cCostNames, int cfnames) {
        nextlevel();
        if (true) {
            int label = 0;
            int cfp_5 = 0;
            int creadname_6 = 0;
            int cwritename_7 = 0;
            int csLine_8 = 0;
            int csVarVal_9 = 0;
            int ci_10 = 0;
            int ciLineCount_11 = 0;

            {
                cfp_5 = 0;
                creadname_6 = 0;
                cwritename_7 = 0;
                csLine_8 = calloca(1000);
                csVarVal_9 = 0;
                ci_10 = 0;
                ciLineCount_11 = 0;
                creadname_6 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1586 */
                ccalloc(((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1586 */
                cstrlen(getMEMINT((int) ((cfnames + 0)))) +
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1586 */
                        cstrlen(getMEMINT((int) ((cfnames + 36))))) + 2), 1));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1587 */
                cstrcpy(creadname_6, getMEMINT((int) ((cfnames + 0))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1588 */
                cstrcat(creadname_6, getMEMINT((int) ((cfnames + 36))));
                cfp_5 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1589
                         */
                        cfopen(creadname_6, strmarxan191);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1591 */
                if ((((cfp_5) == ((int) (0))) ? 1 : 0) != 0) {
                    startargs(creadname_6);

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1591 */
                    marxan.cShowErrorMessage((int) (strmarxan202), endargs());

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1594 */
                cfgets((int) (csLine_8), 999, cfp_5);
                lab_marxan9: while ((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1595 */
                cfgets((int) (csLine_8), 999, cfp_5)) != 0) {
                    ciLineCount_11++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1597 */
                cfclose(cfp_5);
                setMEMINT((int) (ciCostCount), (int) (ciLineCount_11));
                setMEMINT((int) (cCostNames), (int) ((int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1601 */
                ccalloc(ciLineCount_11, 254))));
                cfp_5 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1604
                         */
                        cfopen(creadname_6, strmarxan191);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1605 */
                cfgets((int) (csLine_8), 999, cfp_5);
                lab_marxan10: while ((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1606 */
                cfgets((int) (csLine_8), 999, cfp_5)) != 0) {

                    {
                        csVarVal_9 =
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 1608
                                 */
                                cstrtok((int) (csLine_8), strmarxan193);
                        startargs(((getMEMINT((int) (cCostNames)) + (ci_10 * 254)) + 0));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1609
                         */
                        csscanf(csVarVal_9, strmarxan194, endargs());
                        csVarVal_9 =
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 1611
                                 */
                                cstrtok((int) (0), strmarxan193);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1612
                         */
                        cstrcpy((int) (((getMEMINT((int) (cCostNames)) + (ci_10 * 254)) + 4)), csVarVal_9);
                        ci_10++;

                    }

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1615 */
                cfclose(cfp_5);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1617 */
                cfree(creadname_6);

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan203 = jtocstr("cost");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1621 */

    public static void cDefaultCostNames(int ciCostCount, int cCostNames) {
        nextlevel();
        if (true) {
            int label = 0;

            {
                setMEMINT((int) (ciCostCount), (int) (1));
                setMEMINT((int) (cCostNames), (int) ((int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1623 */
                ccalloc(1, 254))));
                setMEMINT((int) (((getMEMINT((int) (cCostNames)) + (0 * 254)) + 0)), (int) (1));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1627 */
                cstrcpy((int) (((getMEMINT((int) (cCostNames)) + (0 * 254)) + 4)), strmarxan203);

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan204 = jtocstr("debugCostNames.csv");
    static int strmarxan205 = jtocstr("cannot create DumpCostNames file %s\n");
    static int strmarxan206 = jtocstr("costid,costname\n");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1631 */

    public static void cDumpCostNames(int ciCostCount, int cCostNames, int cfnames) {
        nextlevel();
        if (true) {
            int label = 0;
            int cfp_5 = 0;
            int cwritename_6 = 0;
            int ci_7 = 0;

            {
                cfp_5 = 0;
                cwritename_6 = 0;
                ci_7 = 0;
                cwritename_6 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1636 */
                ccalloc(((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1636 */
                cstrlen(getMEMINT((int) ((cfnames + 4)))) +
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1636 */
                        cstrlen(strmarxan204)) + 2), 1));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1637 */
                cstrcpy(cwritename_6, getMEMINT((int) ((cfnames + 4))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1638 */
                cstrcat(cwritename_6, strmarxan204);
                cfp_5 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1639
                         */
                        cfopen(cwritename_6, strmarxan198);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1641 */
                if ((((cfp_5) == ((int) (0))) ? 1 : 0) != 0) {
                    startargs(cwritename_6);

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1641 */
                    marxan.cShowErrorMessage((int) (strmarxan205), endargs());

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1642 */
                cfree(cwritename_6);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1644 */
                cfprintf(cfp_5, strmarxan206, 0);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1649 */
                ci_7 = 0;
                lab_marxan11: for (; (((ci_7) < (ciCostCount)) ? 1 : 0) != 0;) {

                    {
                        startargs(getMEMINT((int) (((cCostNames + ((int) (ci_7) * 254)) + 0))));
                        addarg(((cCostNames + ((int) (ci_7) * 254)) + 4));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1648
                         */
                        cfprintf(cfp_5, strmarxan201, endargs());

                    }
                    ci_7++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1651 */
                cfclose(cfp_5);

            }
        }
        ;
        prevlevel();
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1655 */

    public static int crtnCostIndex(int ciCostCount, int cCostNames, int csFieldName) {
        nextlevel();
        if (true) {
            int label = 0;
            int retval = 0;
            int ci_6 = 0;
            int ciReturn_7 = 0;

            {
                ci_6 = 0;
                ciReturn_7 = (-(1));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1663 */
                ci_6 = 0;
                lab_marxan12: for (; (((ci_6) < (ciCostCount)) ? 1 : 0) != 0;) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1662
                         */
                        if ((((
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1661
                         */
                        cstrcmp(csFieldName, (int) (((cCostNames + ((int) (ci_6) * 254)) + 4)))) == (0)) ? 1
                                : 0) != 0) {
                            ciReturn_7 = ci_6;

                        }
                        ;

                    }
                    ci_6++;

                }
                retval = ciReturn_7;
                if (true) {
                    prevlevel();
                    return retval;
                }
                ;

            }
        }
        ;
        prevlevel();
        return 0;
    }

    static int strmarxan207 = jtocstr("cannot open Cost Values file %s\n");
    static int strmarxan208 = jtocstr("%lf");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1669 */

    public static void cLoadCostValues(int ciCostCount, int cCostValues, int cCostNames, int cfnames, int cpuno) {
        nextlevel();
        if (true) {
            int label = 0;
            int cfp_7 = 0;
            int creadname_8 = 0;
            int cwritename_9 = 0;
            int csLine_10 = 0;
            int csFields_11 = 0;
            int csVarVal_12 = 0;
            int csField_13 = 0;
            int ci_14 = 0;
            int ciLine_15 = 0;
            int ciFieldCount_16 = 0;
            int cCostFieldNumber_17 = 0;
            int ciCostIndex_18 = 0;

            {
                cfp_7 = 0;
                creadname_8 = 0;
                cwritename_9 = 0;
                csLine_10 = calloca(1000);
                csFields_11 = calloca(1000);
                csVarVal_12 = 0;
                csField_13 = calloca(1000);
                ci_14 = 0;
                ciLine_15 = 0;
                ciFieldCount_16 = 0;
                cCostFieldNumber_17 = 0;
                ciCostIndex_18 = 0;
                creadname_8 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1675 */
                ccalloc(((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1675 */
                cstrlen(getMEMINT((int) ((cfnames + 0)))) +
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1675 */
                        cstrlen(getMEMINT((int) ((cfnames + 12))))) + 2), 1));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1676 */
                cstrcpy(creadname_8, getMEMINT((int) ((cfnames + 0))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1677 */
                cstrcat(creadname_8, getMEMINT((int) ((cfnames + 12))));
                cfp_7 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1678
                         */
                        cfopen(creadname_8, strmarxan191);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1680 */
                if ((((cfp_7) == ((int) (0))) ? 1 : 0) != 0) {
                    startargs(creadname_8);

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1680 */
                    marxan.cShowErrorMessage((int) (strmarxan207), endargs());

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1682 */
                cfgets((int) (csLine_10), 999, cfp_7);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1683 */
                cstrcpy((int) (csFields_11), (int) (csLine_10));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1685 */
                cstrtok((int) (csFields_11), strmarxan193);
                ciFieldCount_16++;
                lab_marxan13: while (true) {
                    csVarVal_12 =
                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 1687
                             */
                            cstrtok((int) (0), strmarxan193);
                    ;
                    if ((((csVarVal_12) != ((int) (0))) ? 1 : 0) == 0) {
                        break lab_marxan13;
                    }
                    ciFieldCount_16++;

                }
                ci_14 = 0;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1691 */
                cstrcpy((int) (csFields_11), (int) (csLine_10));
                cCostFieldNumber_17 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1692 */
                ccalloc(ciFieldCount_16, 4));
                csVarVal_12 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1693
                         */
                        cstrtok((int) (csFields_11), strmarxan193);
                setMEMINT((int) ((cCostFieldNumber_17 + (ci_14 * 4))), (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1694 */
                crtnCostIndex(ciCostCount, (int) (cCostNames), csVarVal_12)));
                lab_marxan14: while (true) {
                    csVarVal_12 =
                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 1695
                             */
                            cstrtok((int) (0), strmarxan193);
                    ;
                    if ((((csVarVal_12) != ((int) (0))) ? 1 : 0) == 0) {
                        break lab_marxan14;
                    }

                    {
                        ci_14++;
                        setMEMINT((int) ((cCostFieldNumber_17 + (ci_14 * 4))), (int) (
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1698
                         */
                        crtnCostIndex(ciCostCount, (int) (cCostNames), csVarVal_12)));

                    }

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1702 */
                if ((((getMEMINT((int) (marxan.ciVerbosity))) > (3)) ? 1 : 0) != 0) {

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1702 */
                    marxan.cDumpCostFieldNumber(ciFieldCount_16, (int) (cCostFieldNumber_17), (int) (csLine_10), (int) (cfnames));

                }
                ;
                lab_marxan15: while ((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1706 */
                cfgets((int) (csLine_10), 999, cfp_7)) != 0) {

                    {
                        ci_14 = 0;
                        csVarVal_12 =
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 1709
                                 */
                                cstrtok((int) (csLine_10), strmarxan193);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1711
                         */
                        if ((((getMEMINT((int) ((cCostFieldNumber_17 + (ci_14 * 4))))) != ((-(1)))) ? 1
                                : 0) != 0) {
                            startargs((getMEMINT((int) ((cCostValues + (((cpuno - ciLine_15) - 1) * 4))))
                                    + (getMEMINT((int) ((cCostFieldNumber_17 + (ci_14 * 4)))) * 8)));

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 1711
                             */
                            csscanf(csVarVal_12, strmarxan208, endargs());

                        }
                        ;
                        lab_marxan16: while (true) {
                            csVarVal_12 =
                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 1712
                                     */
                                    cstrtok((int) (0), strmarxan193);
                            ;
                            if ((((csVarVal_12) != ((int) (0))) ? 1 : 0) == 0) {
                                break lab_marxan16;
                            }

                            {
                                ci_14++;

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 1716
                                 */
                                if ((((getMEMINT((int) ((cCostFieldNumber_17 + (ci_14 * 4))))) != ((-(1))))
                                        ? 1 : 0) != 0) {
                                    startargs((getMEMINT((int) ((cCostValues
                                            + (((cpuno - ciLine_15) - 1) * 4))))
                                            + (getMEMINT((int) ((cCostFieldNumber_17 + (ci_14 * 4)))) * 8)));

                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 1716
                                     */
                                    csscanf(csVarVal_12, strmarxan208, endargs());

                                }
                                ;

                            }

                        }
                        ciLine_15++;

                    }

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1720 */
                cfclose(cfp_7);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1722 */
                cfree(creadname_8);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1723 */
                cfree(cCostFieldNumber_17);

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan209 = jtocstr("debugCostFieldNumber.csv");
    static int strmarxan210 = jtocstr("cannot create DumpCostFieldNumber file %s\n");
    static int strmarxan211 = jtocstr("%s");
    static int strmarxan212 = jtocstr(",");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1727 */

    public static void cDumpCostFieldNumber(int ciFieldCount, int cCostFieldNumber, int csFields, int cfnames) {
        nextlevel();
        if (true) {
            int label = 0;
            int cfp_6 = 0;
            int cwritename_7 = 0;
            int ci_8 = 0;

            {
                cfp_6 = 0;
                cwritename_7 = 0;
                ci_8 = 0;
                cwritename_7 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1732 */
                ccalloc(((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1732 */
                cstrlen(getMEMINT((int) ((cfnames + 4)))) +
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1732 */
                        cstrlen(strmarxan209)) + 2), 1));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1733 */
                cstrcpy(cwritename_7, getMEMINT((int) ((cfnames + 4))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1734 */
                cstrcat(cwritename_7, strmarxan209);
                cfp_6 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1735
                         */
                        cfopen(cwritename_7, strmarxan198);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1737 */
                if ((((cfp_6) == ((int) (0))) ? 1 : 0) != 0) {
                    startargs(cwritename_7);

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1737 */
                    marxan.cShowErrorMessage((int) (strmarxan210), endargs());

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1738 */
                cfree(cwritename_7);
                startargs(csFields);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1740 */
                cfprintf(cfp_6, strmarxan211, endargs());

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1746 */
                ci_8 = 0;
                lab_marxan17: for (; (((ci_8) < (ciFieldCount)) ? 1 : 0) != 0;) {

                    {
                        startargs(getMEMINT((int) ((cCostFieldNumber + ((int) (ci_8) * 4)))));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1743
                         */
                        cfprintf(cfp_6, strmarxan194, endargs());

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1745
                         */
                        if ((((ci_8) != ((ciFieldCount - 1))) ? 1 : 0) != 0) {

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 1745
                             */
                            cfprintf(cfp_6, strmarxan212, 0);

                        }
                        ;

                    }
                    ci_8++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1747 */
                cfprintf(cfp_6, strmarxan137, 0);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1749 */
                cfclose(cfp_6);

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan213 = jtocstr("debugCostValues.csv");
    static int strmarxan214 = jtocstr("cannot create DumpCostValues file %s\n");
    static int strmarxan215 = jtocstr("puindex");
    static int strmarxan216 = jtocstr(",%d");
    static int strmarxan217 = jtocstr("%d,");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1753 */

    public static void cDumpCostValues(int ciCostCount, int cpuno, int cCostValues, int cfnames) {
        nextlevel();
        if (true) {
            int label = 0;
            int cfp_6 = 0;
            int cwritename_7 = 0;
            int ci_8 = 0;
            int cj_9 = 0;

            {
                cfp_6 = 0;
                cwritename_7 = 0;
                ci_8 = 0;
                cj_9 = 0;
                cwritename_7 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1758 */
                ccalloc(((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1758 */
                cstrlen(getMEMINT((int) ((cfnames + 4)))) +
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1758 */
                        cstrlen(strmarxan213)) + 2), 1));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1759 */
                cstrcpy(cwritename_7, getMEMINT((int) ((cfnames + 4))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1760 */
                cstrcat(cwritename_7, strmarxan213);
                cfp_6 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1761
                         */
                        cfopen(cwritename_7, strmarxan198);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1763 */
                if ((((cfp_6) == ((int) (0))) ? 1 : 0) != 0) {
                    startargs(cwritename_7);

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1763 */
                    marxan.cShowErrorMessage((int) (strmarxan214), endargs());

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1764 */
                cfree(cwritename_7);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1766 */
                cfprintf(cfp_6, strmarxan215, 0);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1768 */
                cj_9 = 0;
                lab_marxan18: for (; (((cj_9) < (ciCostCount)) ? 1 : 0) != 0;) {
                    startargs(cj_9);

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1768 */
                    cfprintf(cfp_6, strmarxan216, endargs());
                    cj_9++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1769 */
                cfprintf(cfp_6, strmarxan137, 0);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1782 */
                ci_8 = 0;
                lab_marxan19: for (; (((ci_8) < (cpuno)) ? 1 : 0) != 0;) {

                    {
                        startargs(ci_8);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1773
                         */
                        cfprintf(cfp_6, strmarxan217, endargs());

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1780
                         */
                        cj_9 = 0;
                        lab_marxan20: for (; (((cj_9) < (ciCostCount)) ? 1 : 0) != 0;) {

                            {
                                startargs(getMEMDOUBLE((int) ((getMEMINT((int) ((cCostValues + (ci_8 * 4))))
                                        + (cj_9 * 8)))));

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 1777
                                 */
                                cfprintf(cfp_6, strmarxan208, endargs());

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 1779
                                 */
                                if ((((cj_9) != ((ciCostCount - 1))) ? 1 : 0) != 0) {

                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 1779
                                     */
                                    cfprintf(cfp_6, strmarxan212, 0);

                                }
                                ;

                            }
                            cj_9++;

                        }

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1781
                         */
                        cfprintf(cfp_6, strmarxan137, 0);

                    }
                    ci_8++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1783 */
                cfclose(cfp_6);

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan218 = jtocstr("cannot open ZoneContrib file %s\n");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1787 */

    public static void cLoadZoneContrib(int ciZoneContribCount, int cZoneContrib, int cfnames) {
        nextlevel();
        if (true) {
            int label = 0;
            int cfp_5 = 0;
            int creadname_6 = 0;
            int csLine_7 = 0;
            int csVarVal_8 = 0;
            int ci_9 = 0;
            int ciLineCount_10 = 0;
            int cid_11 = 0;

            {
                cfp_5 = 0;
                creadname_6 = 0;
                csLine_7 = calloca(1000);
                csVarVal_8 = 0;
                ci_9 = 0;
                ciLineCount_10 = 0;
                cid_11 = 0;
                creadname_6 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1793 */
                ccalloc(((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1793 */
                cstrlen(getMEMINT((int) ((cfnames + 0)))) +
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1793 */
                        cstrlen(getMEMINT((int) ((cfnames + 40))))) + 2), 1));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1794 */
                cstrcpy(creadname_6, getMEMINT((int) ((cfnames + 0))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1795 */
                cstrcat(creadname_6, getMEMINT((int) ((cfnames + 40))));
                cfp_5 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1796
                         */
                        cfopen(creadname_6, strmarxan191);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1798 */
                if ((((cfp_5) == ((int) (0))) ? 1 : 0) != 0) {
                    startargs(creadname_6);

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1798 */
                    marxan.cShowErrorMessage((int) (strmarxan218), endargs());

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1801 */
                cfgets((int) (csLine_7), 999, cfp_5);
                lab_marxan21: while ((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1802 */
                cfgets((int) (csLine_7), 999, cfp_5)) != 0) {
                    ciLineCount_10++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1804 */
                cfclose(cfp_5);
                setMEMINT((int) (ciZoneContribCount), (int) (ciLineCount_10));
                setMEMINT((int) (cZoneContrib), (int) ((int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1808 */
                ccalloc(ciLineCount_10, 16))));
                cfp_5 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1811
                         */
                        cfopen(creadname_6, strmarxan191);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1812 */
                cfgets((int) (csLine_7), 999, cfp_5);
                lab_marxan22: while ((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1813 */
                cfgets((int) (csLine_7), 999, cfp_5)) != 0) {

                    {
                        csVarVal_8 =
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 1816
                                 */
                                cstrtok((int) (csLine_7), strmarxan193);
                        startargs(((getMEMINT((int) (cZoneContrib)) + (ci_9 * 16)) + 0));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1817
                         */
                        csscanf(csVarVal_8, strmarxan194, endargs());
                        csVarVal_8 =
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 1820
                                 */
                                cstrtok((int) (0), strmarxan193);
                        startargs(((getMEMINT((int) (cZoneContrib)) + (ci_9 * 16)) + 4));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1821
                         */
                        csscanf(csVarVal_8, strmarxan194, endargs());
                        csVarVal_8 =
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 1824
                                 */
                                cstrtok((int) (0), strmarxan193);
                        startargs(((getMEMINT((int) (cZoneContrib)) + (ci_9 * 16)) + 8));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1825
                         */
                        csscanf(csVarVal_8, strmarxan208, endargs());
                        ci_9++;

                    }

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1829 */
                cfclose(cfp_5);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1831 */
                cfree(creadname_6);

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan219 = jtocstr("cannot open ZoneContrib2 file %s\n");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1835 */

    public static void cLoadZoneContrib2(int ciZoneContrib2Count, int cZoneContrib2, int cfnames) {
        nextlevel();
        if (true) {
            int label = 0;
            int cfp_5 = 0;
            int creadname_6 = 0;
            int csLine_7 = 0;
            int csVarVal_8 = 0;
            int ci_9 = 0;
            int ciLineCount_10 = 0;
            int cid_11 = 0;

            {
                cfp_5 = 0;
                creadname_6 = 0;
                csLine_7 = calloca(1000);
                csVarVal_8 = 0;
                ci_9 = 0;
                ciLineCount_10 = 0;
                cid_11 = 0;
                creadname_6 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1841 */
                ccalloc(((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1841 */
                cstrlen(getMEMINT((int) ((cfnames + 0)))) +
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1841 */
                        cstrlen(getMEMINT((int) ((cfnames + 44))))) + 2), 1));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1842 */
                cstrcpy(creadname_6, getMEMINT((int) ((cfnames + 0))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1843 */
                cstrcat(creadname_6, getMEMINT((int) ((cfnames + 44))));
                cfp_5 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1844
                         */
                        cfopen(creadname_6, strmarxan191);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1846 */
                if ((((cfp_5) == ((int) (0))) ? 1 : 0) != 0) {
                    startargs(creadname_6);

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1846 */
                    marxan.cShowErrorMessage((int) (strmarxan219), endargs());

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1849 */
                cfgets((int) (csLine_7), 999, cfp_5);
                lab_marxan23: while ((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1850 */
                cfgets((int) (csLine_7), 999, cfp_5)) != 0) {
                    ciLineCount_10++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1852 */
                cfclose(cfp_5);
                setMEMINT((int) (ciZoneContrib2Count), (int) (ciLineCount_10));
                setMEMINT((int) (cZoneContrib2), (int) ((int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1856 */
                ccalloc(ciLineCount_10, 12))));
                cfp_5 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1859
                         */
                        cfopen(creadname_6, strmarxan191);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1860 */
                cfgets((int) (csLine_7), 999, cfp_5);
                lab_marxan24: while ((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1861 */
                cfgets((int) (csLine_7), 999, cfp_5)) != 0) {

                    {
                        csVarVal_8 =
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 1864
                                 */
                                cstrtok((int) (csLine_7), strmarxan193);
                        startargs(((getMEMINT((int) (cZoneContrib2)) + (ci_9 * 12)) + 0));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1865
                         */
                        csscanf(csVarVal_8, strmarxan194, endargs());
                        csVarVal_8 =
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 1868
                                 */
                                cstrtok((int) (0), strmarxan193);
                        startargs(((getMEMINT((int) (cZoneContrib2)) + (ci_9 * 12)) + 4));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1869
                         */
                        csscanf(csVarVal_8, strmarxan208, endargs());
                        ci_9++;

                    }

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1873 */
                cfclose(cfp_5);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1875 */
                cfree(creadname_6);

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan220 = jtocstr("cannot open ZoneContrib3 file %s\n");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1879 */

    public static void cLoadZoneContrib3(int ciZoneContrib3Count, int cZoneContrib3, int cfnames) {
        nextlevel();
        if (true) {
            int label = 0;
            int cfp_5 = 0;
            int creadname_6 = 0;
            int csLine_7 = 0;
            int csVarVal_8 = 0;
            int ci_9 = 0;
            int ciLineCount_10 = 0;
            int cid_11 = 0;

            {
                cfp_5 = 0;
                creadname_6 = 0;
                csLine_7 = calloca(1000);
                csVarVal_8 = 0;
                ci_9 = 0;
                ciLineCount_10 = 0;
                cid_11 = 0;
                creadname_6 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1885 */
                ccalloc(((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1885 */
                cstrlen(getMEMINT((int) ((cfnames + 0)))) +
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1885 */
                        cstrlen(getMEMINT((int) ((cfnames + 48))))) + 2), 1));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1886 */
                cstrcpy(creadname_6, getMEMINT((int) ((cfnames + 0))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1887 */
                cstrcat(creadname_6, getMEMINT((int) ((cfnames + 48))));
                cfp_5 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1888
                         */
                        cfopen(creadname_6, strmarxan191);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1890 */
                if ((((cfp_5) == ((int) (0))) ? 1 : 0) != 0) {
                    startargs(creadname_6);

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1890 */
                    marxan.cShowErrorMessage((int) (strmarxan220), endargs());

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1893 */
                cfgets((int) (csLine_7), 999, cfp_5);
                lab_marxan25: while ((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1894 */
                cfgets((int) (csLine_7), 999, cfp_5)) != 0) {
                    ciLineCount_10++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1896 */
                cfclose(cfp_5);
                setMEMINT((int) (ciZoneContrib3Count), (int) (ciLineCount_10));
                setMEMINT((int) (cZoneContrib3), (int) ((int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1900 */
                ccalloc(ciLineCount_10, 20))));
                cfp_5 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1903
                         */
                        cfopen(creadname_6, strmarxan191);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1904 */
                cfgets((int) (csLine_7), 999, cfp_5);
                lab_marxan26: while ((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1905 */
                cfgets((int) (csLine_7), 999, cfp_5)) != 0) {

                    {
                        csVarVal_8 =
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 1908
                                 */
                                cstrtok((int) (csLine_7), strmarxan193);
                        startargs(((getMEMINT((int) (cZoneContrib3)) + (ci_9 * 20)) + 0));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1909
                         */
                        csscanf(csVarVal_8, strmarxan194, endargs());
                        csVarVal_8 =
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 1912
                                 */
                                cstrtok((int) (0), strmarxan193);
                        startargs(((getMEMINT((int) (cZoneContrib3)) + (ci_9 * 20)) + 4));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1913
                         */
                        csscanf(csVarVal_8, strmarxan194, endargs());
                        csVarVal_8 =
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 1916
                                 */
                                cstrtok((int) (0), strmarxan193);
                        startargs(((getMEMINT((int) (cZoneContrib3)) + (ci_9 * 20)) + 8));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1917
                         */
                        csscanf(csVarVal_8, strmarxan194, endargs());
                        csVarVal_8 =
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 1920
                                 */
                                cstrtok((int) (0), strmarxan193);
                        startargs(((getMEMINT((int) (cZoneContrib3)) + (ci_9 * 20)) + 12));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1921
                         */
                        csscanf(csVarVal_8, strmarxan208, endargs());
                        ci_9++;

                    }

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1925 */
                cfclose(cfp_5);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1927 */
                cfree(creadname_6);

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan221 = jtocstr("Build_ZoneContrib start\n");
    static int strmarxan222 = jtocstr("Build_ZoneContrib spno %i iZoneCount %i iArraySize %i iZoneContribCount %i\n");
    static int strmarxan223 = jtocstr("Build_ZoneContrib end\n");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1931 */

    public static void cBuild_ZoneContrib(int cspno, int ciZoneCount, int ciZoneContribCount, int cZoneContrib, int c_ZoneContrib) {
        nextlevel();
        if (true) {
            int label = 0;
            int ci_7 = 0;
            int cj_8 = 0;
            int ciArraySize_9 = 0;
            int ciSpeciesIndex_10 = 0;
            double crArraySize_11 = 0;
            int cdebugbuffer_12 = 0;

            {
                ci_7 = 0;
                cj_8 = 0;
                ciArraySize_9 = 0;
                ciSpeciesIndex_10 = 0;
                crArraySize_11 = 0;
                cdebugbuffer_12 = calloca(1000);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1937 */
                marxan.cAppendDebugTraceFile((int) (strmarxan221), 0);
                crArraySize_11 = (cspno * ciZoneCount);
                ciArraySize_9 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1942 */
                cfloor(crArraySize_11));
                startargs(cspno);
                addarg(ciZoneCount);
                addarg(ciArraySize_9);
                addarg(ciZoneContribCount);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1945 */
                csprintf((int) (cdebugbuffer_12), strmarxan222, endargs());

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1946 */
                marxan.cAppendDebugTraceFile((int) (cdebugbuffer_12), 0);
                setMEMINT((int) (c_ZoneContrib), (int) ((int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1949 */
                ccalloc(ciArraySize_9, 8))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1956 */
                cj_8 = 0;
                lab_marxan27: for (; (((cj_8) < (cspno)) ? 1 : 0) != 0;) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1955
                         */
                        ci_7 = 0;
                        lab_marxan28: for (; (((ci_7) < (ciZoneCount)) ? 1 : 0) != 0;) {

                            {
                                setMEMDOUBLE((int) ((getMEMINT((int) (c_ZoneContrib))
                                        + (((cj_8 * ciZoneCount) + ci_7) * 8))), (double) (0));

                            }
                            ci_7++;

                        }

                    }
                    cj_8++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1966 */
                ci_7 = 0;
                lab_marxan29: for (; (((ci_7) < (ciZoneContribCount)) ? 1 : 0) != 0;) {

                    {
                        ciSpeciesIndex_10 =
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 1963
                                 */
                                marxan.cFastSPIDtoSPINDEX(cspno, getMEMINT((int) (((cZoneContrib
                                        + ((int) (ci_7) * 16))
                                        + 4))), (int) (getMEMINT((int) (marxan.cSPLookup))));
                        setMEMDOUBLE((int) ((getMEMINT((int) (c_ZoneContrib))
                                + (((ciSpeciesIndex_10 * ciZoneCount)
                                        + (getMEMINT((int) (((cZoneContrib + ((int) (ci_7) * 16)) + 0))) - 1))
                                        * 8))), (double) (getMEMDOUBLE((int) (((cZoneContrib
                                                + ((int) (ci_7) * 16)) + 8)))));

                    }
                    ci_7++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1969 */
                marxan.cAppendDebugTraceFile((int) (strmarxan223), 0);

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan224 = jtocstr("Build_ZoneContrib2 start\n");
    static int strmarxan225 = jtocstr("Build_ZoneContrib2 spno %i iZoneCount %i iArraySize %i iZoneContrib2Count %i\n");
    static int strmarxan226 = jtocstr("Build_ZoneContrib2 end\n");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1974 */

    public static void cBuild_ZoneContrib2(int cspno, int ciZoneCount, int ciZoneContrib2Count, int cZoneContrib2, int c_ZoneContrib) {
        nextlevel();
        if (true) {
            int label = 0;
            int ci_7 = 0;
            int cj_8 = 0;
            int ciArraySize_9 = 0;
            double crArraySize_10 = 0;
            int cdebugbuffer_11 = 0;

            {
                ci_7 = 0;
                cj_8 = 0;
                ciArraySize_9 = 0;
                crArraySize_10 = 0;
                cdebugbuffer_11 = calloca(1000);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1980 */
                marxan.cAppendDebugTraceFile((int) (strmarxan224), 0);
                crArraySize_10 = (cspno * ciZoneCount);
                ciArraySize_9 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1985 */
                cfloor(crArraySize_10));
                startargs(cspno);
                addarg(ciZoneCount);
                addarg(ciArraySize_9);
                addarg(ciZoneContrib2Count);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1988 */
                csprintf((int) (cdebugbuffer_11), strmarxan225, endargs());

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1989 */
                marxan.cAppendDebugTraceFile((int) (cdebugbuffer_11), 0);
                setMEMINT((int) (c_ZoneContrib), (int) ((int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1992 */
                ccalloc(ciArraySize_9, 8))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 1999 */
                cj_8 = 0;
                lab_marxan30: for (; (((cj_8) < (cspno)) ? 1 : 0) != 0;) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 1998
                         */
                        ci_7 = 0;
                        lab_marxan31: for (; (((ci_7) < (ciZoneCount)) ? 1 : 0) != 0;) {

                            {
                                setMEMDOUBLE((int) ((getMEMINT((int) (c_ZoneContrib))
                                        + (((cj_8 * ciZoneCount) + ci_7) * 8))), (double) (0));

                            }
                            ci_7++;

                        }

                    }
                    cj_8++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2007 */
                ci_7 = 0;
                lab_marxan32: for (; (((ci_7) < (ciZoneContrib2Count)) ? 1 : 0) != 0;) {

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2007 */
                    cj_8 = 0;
                    lab_marxan33: for (; (((cj_8) < (cspno)) ? 1 : 0) != 0;) {

                        {
                            setMEMDOUBLE((int) ((getMEMINT((int) (c_ZoneContrib)) + (((cj_8 * ciZoneCount)
                                    + (getMEMINT((int) (((cZoneContrib2 + ((int) (ci_7) * 12)) + 0))) - 1))
                                    * 8))), (double) (getMEMDOUBLE((int) (((cZoneContrib2
                                            + ((int) (ci_7) * 12)) + 4)))));

                        }
                        cj_8++;

                    }
                    ci_7++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2010 */
                marxan.cAppendDebugTraceFile((int) (strmarxan226), 0);

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan227 = jtocstr("Update_ZoneContrib2 start\n");
    static int strmarxan228 = jtocstr("Update_ZoneContrib2 spno %i iZoneCount %i iArraySize %i iZoneContrib2Count %i\n");
    static int strmarxan229 = jtocstr("Update_ZoneContrib2 i %i j %i fraction %f _ZCidx %i\n");
    static int strmarxan230 = jtocstr("Update_ZoneContrib2 end\n");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2015 */

    public static void cUpdate_ZoneContrib2(int cspno, int ciZoneCount, int ciZoneContrib2Count, int cZoneContrib2, int c_ZoneContrib) {
        nextlevel();
        if (true) {
            int label = 0;
            int ci_7 = 0;
            int cj_8 = 0;
            int ciArraySize_9 = 0;
            double crArraySize_10 = 0;
            int cdebugbuffer_11 = 0;

            {
                ci_7 = 0;
                cj_8 = 0;
                ciArraySize_9 = 0;
                crArraySize_10 = 0;
                cdebugbuffer_11 = calloca(1000);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2021 */
                marxan.cAppendDebugTraceFile((int) (strmarxan227), 0);
                crArraySize_10 = (cspno * ciZoneCount);
                ciArraySize_9 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2026 */
                cfloor(crArraySize_10));
                startargs(cspno);
                addarg(ciZoneCount);
                addarg(ciArraySize_9);
                addarg(ciZoneContrib2Count);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2029 */
                csprintf((int) (cdebugbuffer_11), strmarxan228, endargs());

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2030 */
                marxan.cAppendDebugTraceFile((int) (cdebugbuffer_11), 0);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2043 */
                ci_7 = 0;
                lab_marxan34: for (; (((ci_7) < (ciZoneContrib2Count)) ? 1 : 0) != 0;) {

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2043 */
                    cj_8 = 0;
                    lab_marxan35: for (; (((cj_8) < (cspno)) ? 1 : 0) != 0;) {

                        {
                            startargs(ci_7);
                            addarg(cj_8);
                            addarg(getMEMDOUBLE((int) (((cZoneContrib2 + ((int) (ci_7) * 12)) + 4))));
                            addarg(((cj_8 * ciZoneCount)
                                    + (getMEMINT((int) (((cZoneContrib2 + ((int) (ci_7) * 12)) + 0))) - 1)));

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 2038
                             */
                            csprintf((int) (cdebugbuffer_11), strmarxan229, endargs());

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 2039
                             */
                            marxan.cAppendDebugTraceFile((int) (cdebugbuffer_11), 0);
                            setMEMDOUBLE((int) ((c_ZoneContrib + ((int) (((cj_8 * ciZoneCount)
                                    + (getMEMINT((int) (((cZoneContrib2 + ((int) (ci_7) * 12)) + 0))) - 1)))
                                    * 8))), (double) (getMEMDOUBLE((int) (((cZoneContrib2
                                            + ((int) (ci_7) * 12)) + 4)))));

                        }
                        cj_8++;

                    }
                    ci_7++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2046 */
                marxan.cAppendDebugTraceFile((int) (strmarxan230), 0);

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan231 = jtocstr("Build_ZoneContrib3 start\n");
    static int strmarxan232 = jtocstr("Build_ZoneContrib3 puno %i spno %i iZoneCount %i iArraySize %i iZoneContrib3Count %i\n");
    static int strmarxan233 = jtocstr("Build_ZoneContrib3 end\n");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2051 */

    public static void cBuild_ZoneContrib3(int cpuno, int cspno, int ciZoneCount, int ciZoneContrib3Count, int cZoneContrib3, int c_ZoneContrib) {
        nextlevel();
        if (true) {
            int label = 0;
            int ci_8 = 0;
            int cj_9 = 0;
            int ck_10 = 0;
            int ciArraySize_11 = 0;
            int ciSpeciesIndex_12 = 0;
            int ciPUIndex_13 = 0;
            double crArraySize_14 = 0;
            int cdebugbuffer_15 = 0;

            {
                ci_8 = 0;
                cj_9 = 0;
                ck_10 = 0;
                ciArraySize_11 = 0;
                ciSpeciesIndex_12 = 0;
                ciPUIndex_13 = 0;
                crArraySize_14 = 0;
                cdebugbuffer_15 = calloca(1000);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2057 */
                marxan.cAppendDebugTraceFile((int) (strmarxan231), 0);
                crArraySize_14 = ((cpuno * cspno) * ciZoneCount);
                ciArraySize_11 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2062 */
                cfloor(crArraySize_14));
                startargs(cpuno);
                addarg(cspno);
                addarg(ciZoneCount);
                addarg(ciArraySize_11);
                addarg(ciZoneContrib3Count);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2065 */
                csprintf((int) (cdebugbuffer_15), strmarxan232, endargs());

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2066 */
                marxan.cAppendDebugTraceFile((int) (cdebugbuffer_15), 0);
                setMEMINT((int) (c_ZoneContrib), (int) ((int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2069 */
                ccalloc(ciArraySize_11, 8))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2071 */
                ci_8 = 0;
                lab_marxan36: for (; (((ci_8) < (ciArraySize_11)) ? 1 : 0) != 0;) {
                    setMEMDOUBLE((int) ((getMEMINT((int) (c_ZoneContrib)) + (ci_8 * 8))), (double) (0));
                    ci_8++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2084 */
                ci_8 = 0;
                lab_marxan37: for (; (((ci_8) < (ciZoneContrib3Count)) ? 1 : 0) != 0;) {

                    {
                        ciSpeciesIndex_12 =
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 2076
                                 */
                                marxan.cFastSPIDtoSPINDEX(cspno, getMEMINT((int) (((cZoneContrib3
                                        + ((int) (ci_8) * 20))
                                        + 8))), (int) (getMEMINT((int) (marxan.cSPLookup))));
                        ciPUIndex_13 =
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 2077
                                 */
                                marxan.cFastPUIDtoPUINDEX(cpuno, getMEMINT((int) (((cZoneContrib3
                                        + ((int) (ci_8) * 20))
                                        + 4))), (int) (getMEMINT((int) (marxan.cPULookup))));
                        setMEMDOUBLE((int) ((getMEMINT((int) (c_ZoneContrib))
                                + (((((ciSpeciesIndex_12 * cpuno) * ciZoneCount)
                                        + (ciPUIndex_13 * ciZoneCount))
                                        + (getMEMINT((int) (((cZoneContrib3 + ((int) (ci_8) * 20)) + 0)))
                                                - 1))
                                        * 8))), (double) (getMEMDOUBLE((int) (((cZoneContrib3
                                                + ((int) (ci_8) * 20)) + 12)))));

                    }
                    ci_8++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2087 */
                marxan.cAppendDebugTraceFile((int) (strmarxan233), 0);

            }
        }
        ;
        prevlevel();
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2092 */

    public static void cDefault_ZoneContrib(int cspno, int ciZoneCount, int c_ZoneContrib, int ciAvailableZoneFromInput) {
        nextlevel();
        if (true) {
            int label = 0;
            int ci_6 = 0;
            int cj_7 = 0;
            int ciArraySize_8 = 0;
            double crArraySize_9 = 0;
            int cdebugbuffer_10 = 0;

            {
                ci_6 = 0;
                cj_7 = 0;
                ciArraySize_8 = 0;
                crArraySize_9 = 0;
                cdebugbuffer_10 = calloca(1000);
                crArraySize_9 = (cspno * ciZoneCount);
                ciArraySize_8 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2105 */
                cfloor(crArraySize_9));
                setMEMINT((int) (c_ZoneContrib), (int) ((int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2112 */
                ccalloc(ciArraySize_8, 8))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2124 */
                cj_7 = 0;
                lab_marxan38: for (; (((cj_7) < (cspno)) ? 1 : 0) != 0;) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 2123
                         */
                        ci_6 = 0;
                        lab_marxan39: for (; (((ci_6) < (ciZoneCount)) ? 1 : 0) != 0;) {

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 2117
                             */
                            if ((((ciAvailableZoneFromInput) == ((ci_6 + 1))) ? 1 : 0) != 0) {

                                {
                                    setMEMDOUBLE((int) ((getMEMINT((int) (c_ZoneContrib))
                                            + (((cj_7 * ciZoneCount) + ci_6) * 8))), (double) (0));

                                }

                            } else {

                                {
                                    setMEMDOUBLE((int) ((getMEMINT((int) (c_ZoneContrib))
                                            + (((cj_7 * ciZoneCount) + ci_6) * 8))), (double) (1));

                                }

                            }
                            ;
                            ci_6++;

                        }

                    }
                    cj_7++;

                }

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan234 = jtocstr("%i");
    static int strmarxan235 = jtocstr("debug_Zone_Contrib.csv");
    static int strmarxan236 = jtocstr("debug_Zone");
    static int strmarxan237 = jtocstr("_Contrib.csv");
    static int strmarxan238 = jtocstr("cannot create Dump_ZoneContrib file %s\n");
    static int strmarxan239 = jtocstr("pu/feature");
    static int strmarxan240 = jtocstr(",%i");
    static int strmarxan241 = jtocstr(",%lf");
    static int strmarxan242 = jtocstr("debug_ZoneContrib.csv");
    static int strmarxan243 = jtocstr("spname,spindex");
    static int strmarxan244 = jtocstr(",contrib%i");
    static int strmarxan245 = jtocstr("%i,%i");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2132 */

    public static void cDump_ZoneContrib(int cpuno, int cspno, int cspec, int ciZoneCount, int c_ZoneContrib, int cfnames) {
        nextlevel();
        if (true) {
            int label = 0;
            int cfp_8 = 0;
            int cwritename_9 = 0;
            int ci_10 = 0;
            int cj_11 = 0;
            int ck_12 = 0;
            int cmessagebuffer_13 = 0;

            {
                cfp_8 = 0;
                cwritename_9 = 0;
                ci_10 = 0;
                cj_11 = 0;
                ck_12 = 0;
                cmessagebuffer_13 = calloca(1000);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2143 */
                if ((((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2142 */
                cstrcmp(strmarxan8, getMEMINT((int) ((cfnames + 48))))) != (0)) ? 1 : 0) != 0) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 2181
                         */
                        ci_10 = 0;
                        lab_marxan40: for (; (((ci_10) < (ciZoneCount)) ? 1 : 0) != 0;) {

                            {
                                startargs((ci_10 + 1));

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 2147
                                 */
                                csprintf((int) (cmessagebuffer_13), strmarxan234, endargs());
                                cwritename_9 = (int) (
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 2148
                                 */
                                ccalloc(((
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 2148
                                 */
                                cstrlen(getMEMINT((int) ((cfnames + 4)))) +
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 2148
                                 */
                                        cstrlen(strmarxan235)) + 5), 1));

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 2149
                                 */
                                cstrcpy(cwritename_9, getMEMINT((int) ((cfnames + 4))));

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 2150
                                 */
                                cstrcat(cwritename_9, strmarxan236);

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 2151
                                 */
                                cstrcat(cwritename_9, (int) (cmessagebuffer_13));

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 2152
                                 */
                                cstrcat(cwritename_9, strmarxan237);
                                cfp_8 =
                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 2153
                                         */
                                        cfopen(cwritename_9, strmarxan198);

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 2155
                                 */
                                if ((((cfp_8) == ((int) (0))) ? 1 : 0) != 0) {
                                    startargs(cwritename_9);

                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 2155
                                     */
                                    marxan.cShowErrorMessage((int) (strmarxan238), endargs());

                                }
                                ;

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 2156
                                 */
                                cfree(cwritename_9);

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 2159
                                 */
                                cfprintf(cfp_8, strmarxan239, 0);

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 2161
                                 */
                                cj_11 = 0;
                                lab_marxan41: for (; (((cj_11) < (cspno)) ? 1 : 0) != 0;) {
                                    startargs((cj_11 + 1));

                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 2161
                                     */
                                    cfprintf(cfp_8, strmarxan240, endargs());
                                    cj_11++;

                                }

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 2162
                                 */
                                cfprintf(cfp_8, strmarxan137, 0);

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 2178
                                 */
                                ck_12 = 0;
                                lab_marxan42: for (; (((ck_12) < (cpuno)) ? 1 : 0) != 0;) {

                                    {
                                        startargs((ck_12 + 1));

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 2166
                                         */
                                        cfprintf(cfp_8, strmarxan234, endargs());

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 2175
                                         */
                                        cj_11 = 0;
                                        lab_marxan43: for (; (((cj_11) < (cspno)) ? 1 : 0) != 0;) {

                                            {
                                                startargs(getMEMDOUBLE((int) ((c_ZoneContrib
                                                        + ((int) (((((cj_11 * cpuno) * ciZoneCount)
                                                                + (ck_12 * ciZoneCount)) + ci_10)) * 8)))));

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 2170
                                                 */
                                                cfprintf(cfp_8, strmarxan241, endargs());

                                            }
                                            cj_11++;

                                        }

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 2177
                                         */
                                        cfprintf(cfp_8, strmarxan137, 0);

                                    }
                                    ck_12++;

                                }

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 2180
                                 */
                                cfclose(cfp_8);

                            }
                            ci_10++;

                        }

                    }

                } else {

                    {
                        cwritename_9 = (int) (
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 2185
                         */
                        ccalloc(((
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 2185
                         */
                        cstrlen(getMEMINT((int) ((cfnames + 4)))) +
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 2185
                         */
                                cstrlen(strmarxan242)) + 2), 1));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 2186
                         */
                        cstrcpy(cwritename_9, getMEMINT((int) ((cfnames + 4))));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 2187
                         */
                        cstrcat(cwritename_9, strmarxan242);
                        cfp_8 =
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 2188
                                 */
                                cfopen(cwritename_9, strmarxan198);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 2190
                         */
                        if ((((cfp_8) == ((int) (0))) ? 1 : 0) != 0) {
                            startargs(cwritename_9);

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 2190
                             */
                            marxan.cShowErrorMessage((int) (strmarxan238), endargs());

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 2191
                         */
                        cfree(cwritename_9);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 2194
                         */
                        cfprintf(cfp_8, strmarxan243, 0);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 2196
                         */
                        ci_10 = 0;
                        lab_marxan44: for (; (((ci_10) < (ciZoneCount)) ? 1 : 0) != 0;) {
                            startargs((ci_10 + 1));

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 2196
                             */
                            cfprintf(cfp_8, strmarxan244, endargs());
                            ci_10++;

                        }

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 2197
                         */
                        cfprintf(cfp_8, strmarxan137, 0);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 2207
                         */
                        cj_11 = 0;
                        lab_marxan45: for (; (((cj_11) < (cspno)) ? 1 : 0) != 0;) {

                            {
                                startargs(getMEMINT((int) (((cspec + ((int) (cj_11) * 100)) + 0))));
                                addarg(cj_11);

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 2201
                                 */
                                cfprintf(cfp_8, strmarxan245, endargs());

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 2204
                                 */
                                ci_10 = 0;
                                lab_marxan46: for (; (((ci_10) < (ciZoneCount)) ? 1 : 0) != 0;) {
                                    startargs(getMEMDOUBLE((int) ((c_ZoneContrib
                                            + ((int) (((cj_11 * ciZoneCount) + ci_10)) * 8)))));

                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 2204
                                     */
                                    cfprintf(cfp_8, strmarxan241, endargs());
                                    ci_10++;

                                }

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 2206
                                 */
                                cfprintf(cfp_8, strmarxan137, 0);

                            }
                            cj_11++;

                        }

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 2209
                         */
                        cfclose(cfp_8);

                    }

                }
                ;

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan246 = jtocstr("debugZoneContrib.csv");
    static int strmarxan247 = jtocstr("cannot create DumpZoneContrib file %s\n");
    static int strmarxan248 = jtocstr("zoneid,speciesid,fraction\n");
    static int strmarxan249 = jtocstr("%d,%d,%lf\n");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2218 */

    public static void cDumpZoneContrib(int ciZoneContribCount, int cZoneContrib, int cfnames) {
        nextlevel();
        if (true) {
            int label = 0;
            int cfp_5 = 0;
            int cwritename_6 = 0;
            int ci_7 = 0;

            {
                cfp_5 = 0;
                cwritename_6 = 0;
                ci_7 = 0;
                cwritename_6 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2223 */
                ccalloc(((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2223 */
                cstrlen(getMEMINT((int) ((cfnames + 4)))) +
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2223 */
                        cstrlen(strmarxan246)) + 2), 1));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2224 */
                cstrcpy(cwritename_6, getMEMINT((int) ((cfnames + 4))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2225 */
                cstrcat(cwritename_6, strmarxan246);
                cfp_5 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 2226
                         */
                        cfopen(cwritename_6, strmarxan198);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2228 */
                if ((((cfp_5) == ((int) (0))) ? 1 : 0) != 0) {
                    startargs(cwritename_6);

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2228 */
                    marxan.cShowErrorMessage((int) (strmarxan247), endargs());

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2229 */
                cfree(cwritename_6);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2231 */
                cfprintf(cfp_5, strmarxan248, 0);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2236 */
                ci_7 = 0;
                lab_marxan47: for (; (((ci_7) < (ciZoneContribCount)) ? 1 : 0) != 0;) {

                    {
                        startargs(getMEMINT((int) (((cZoneContrib + ((int) (ci_7) * 16)) + 0))));
                        addarg(getMEMINT((int) (((cZoneContrib + ((int) (ci_7) * 16)) + 4))));
                        addarg(getMEMDOUBLE((int) (((cZoneContrib + ((int) (ci_7) * 16)) + 8))));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 2235
                         */
                        cfprintf(cfp_5, strmarxan249, endargs());

                    }
                    ci_7++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2238 */
                cfclose(cfp_5);

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan250 = jtocstr("debugZoneContrib2.csv");
    static int strmarxan251 = jtocstr("cannot create DumpZoneContrib2 file %s\n");
    static int strmarxan252 = jtocstr("zoneid,fraction\n");
    static int strmarxan253 = jtocstr("%d,%lf\n");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2242 */

    public static void cDumpZoneContrib2(int ciZoneContrib2Count, int cZoneContrib2, int cfnames) {
        nextlevel();
        if (true) {
            int label = 0;
            int cfp_5 = 0;
            int cwritename_6 = 0;
            int ci_7 = 0;

            {
                cfp_5 = 0;
                cwritename_6 = 0;
                ci_7 = 0;
                cwritename_6 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2247 */
                ccalloc(((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2247 */
                cstrlen(getMEMINT((int) ((cfnames + 4)))) +
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2247 */
                        cstrlen(strmarxan250)) + 2), 1));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2248 */
                cstrcpy(cwritename_6, getMEMINT((int) ((cfnames + 4))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2249 */
                cstrcat(cwritename_6, strmarxan250);
                cfp_5 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 2250
                         */
                        cfopen(cwritename_6, strmarxan198);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2252 */
                if ((((cfp_5) == ((int) (0))) ? 1 : 0) != 0) {
                    startargs(cwritename_6);

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2252 */
                    marxan.cShowErrorMessage((int) (strmarxan251), endargs());

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2253 */
                cfree(cwritename_6);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2255 */
                cfprintf(cfp_5, strmarxan252, 0);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2260 */
                ci_7 = 0;
                lab_marxan48: for (; (((ci_7) < (ciZoneContrib2Count)) ? 1 : 0) != 0;) {

                    {
                        startargs(getMEMINT((int) (((cZoneContrib2 + ((int) (ci_7) * 12)) + 0))));
                        addarg(getMEMDOUBLE((int) (((cZoneContrib2 + ((int) (ci_7) * 12)) + 4))));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 2259
                         */
                        cfprintf(cfp_5, strmarxan253, endargs());

                    }
                    ci_7++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2262 */
                cfclose(cfp_5);

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan254 = jtocstr("debugZoneContrib3.csv");
    static int strmarxan255 = jtocstr("cannot create DumpZoneContrib3 file %s\n");
    static int strmarxan256 = jtocstr("zoneid,puid,speciesid,fraction\n");
    static int strmarxan257 = jtocstr("%d,%d,%d,%lf\n");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2266 */

    public static void cDumpZoneContrib3(int ciZoneContrib3Count, int cZoneContrib3, int cfnames) {
        nextlevel();
        if (true) {
            int label = 0;
            int cfp_5 = 0;
            int cwritename_6 = 0;
            int ci_7 = 0;

            {
                cfp_5 = 0;
                cwritename_6 = 0;
                ci_7 = 0;
                cwritename_6 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2271 */
                ccalloc(((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2271 */
                cstrlen(getMEMINT((int) ((cfnames + 4)))) +
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2271 */
                        cstrlen(strmarxan254)) + 2), 1));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2272 */
                cstrcpy(cwritename_6, getMEMINT((int) ((cfnames + 4))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2273 */
                cstrcat(cwritename_6, strmarxan254);
                cfp_5 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 2274
                         */
                        cfopen(cwritename_6, strmarxan198);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2276 */
                if ((((cfp_5) == ((int) (0))) ? 1 : 0) != 0) {
                    startargs(cwritename_6);

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2276 */
                    marxan.cShowErrorMessage((int) (strmarxan255), endargs());

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2277 */
                cfree(cwritename_6);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2279 */
                cfprintf(cfp_5, strmarxan256, 0);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2284 */
                ci_7 = 0;
                lab_marxan49: for (; (((ci_7) < (ciZoneContrib3Count)) ? 1 : 0) != 0;) {

                    {
                        startargs(getMEMINT((int) (((cZoneContrib3 + ((int) (ci_7) * 20)) + 0))));
                        addarg(getMEMINT((int) (((cZoneContrib3 + ((int) (ci_7) * 20)) + 4))));
                        addarg(getMEMINT((int) (((cZoneContrib3 + ((int) (ci_7) * 20)) + 8))));
                        addarg(getMEMDOUBLE((int) (((cZoneContrib3 + ((int) (ci_7) * 20)) + 12))));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 2283
                         */
                        cfprintf(cfp_5, strmarxan257, endargs());

                    }
                    ci_7++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2286 */
                cfclose(cfp_5);

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan258 = jtocstr("cannot open ZoneTarget file %s\n");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2290 */

    public static void cLoadZoneTarget(int ciZoneTargetCount, int cZoneTarget, int cfnames) {
        nextlevel();
        if (true) {
            int label = 0;
            int cfp_5 = 0;
            int creadname_6 = 0;
            int csLine_7 = 0;
            int csVarVal_8 = 0;
            int ci_9 = 0;
            int ciLineCount_10 = 0;
            int cid_11 = 0;

            {
                cfp_5 = 0;
                creadname_6 = 0;
                csLine_7 = calloca(1000);
                csVarVal_8 = 0;
                ci_9 = 0;
                ciLineCount_10 = 0;
                cid_11 = 0;
                creadname_6 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2296 */
                ccalloc(((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2296 */
                cstrlen(getMEMINT((int) ((cfnames + 0)))) +
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2296 */
                        cstrlen(getMEMINT((int) ((cfnames + 52))))) + 2), 1));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2297 */
                cstrcpy(creadname_6, getMEMINT((int) ((cfnames + 0))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2298 */
                cstrcat(creadname_6, getMEMINT((int) ((cfnames + 52))));
                cfp_5 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 2299
                         */
                        cfopen(creadname_6, strmarxan191);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2301 */
                if ((((cfp_5) == ((int) (0))) ? 1 : 0) != 0) {
                    startargs(creadname_6);

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2301 */
                    marxan.cShowErrorMessage((int) (strmarxan258), endargs());

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2304 */
                cfgets((int) (csLine_7), 999, cfp_5);
                lab_marxan50: while ((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2305 */
                cfgets((int) (csLine_7), 999, cfp_5)) != 0) {
                    ciLineCount_10++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2307 */
                cfclose(cfp_5);
                setMEMINT((int) (ciZoneTargetCount), (int) (ciLineCount_10));
                setMEMINT((int) (cZoneTarget), (int) ((int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2311 */
                ccalloc(ciLineCount_10, 20))));
                cfp_5 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 2314
                         */
                        cfopen(creadname_6, strmarxan191);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2315 */
                cfgets((int) (csLine_7), 999, cfp_5);
                lab_marxan51: while ((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2318 */
                cfgets((int) (csLine_7), 999, cfp_5)) != 0) {

                    {
                        csVarVal_8 =
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 2321
                                 */
                                cstrtok((int) (csLine_7), strmarxan193);
                        startargs(((getMEMINT((int) (cZoneTarget)) + (ci_9 * 20)) + 0));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 2322
                         */
                        csscanf(csVarVal_8, strmarxan194, endargs());
                        csVarVal_8 =
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 2325
                                 */
                                cstrtok((int) (0), strmarxan193);
                        startargs(((getMEMINT((int) (cZoneTarget)) + (ci_9 * 20)) + 4));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 2326
                         */
                        csscanf(csVarVal_8, strmarxan194, endargs());
                        csVarVal_8 =
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 2329
                                 */
                                cstrtok((int) (0), strmarxan193);
                        startargs(((getMEMINT((int) (cZoneTarget)) + (ci_9 * 20)) + 8));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 2330
                         */
                        csscanf(csVarVal_8, strmarxan208, endargs());
                        csVarVal_8 =
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 2333
                                 */
                                cstrtok((int) (0), strmarxan193);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 2335
                         */
                        if ((((csVarVal_8) == ((int) (0))) ? 1 : 0) != 0) {
                            setMEMINT((int) (((getMEMINT((int) (cZoneTarget)) + (ci_9 * 20))
                                    + 16)), (int) (0));

                        } else {
                            startargs(((getMEMINT((int) (cZoneTarget)) + (ci_9 * 20)) + 16));

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 2337
                             */
                            csscanf(csVarVal_8, strmarxan194, endargs());

                        }
                        ;
                        ci_9++;

                    }

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2341 */
                cfclose(cfp_5);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2343 */
                cfree(creadname_6);

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan259 = jtocstr("cannot open ZoneTarget2 file %s\n");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2347 */

    public static void cLoadZoneTarget2(int ciZoneTarget2Count, int cZoneTarget2, int cfnames) {
        nextlevel();
        if (true) {
            int label = 0;
            int cfp_5 = 0;
            int creadname_6 = 0;
            int csLine_7 = 0;
            int csVarVal_8 = 0;
            int ci_9 = 0;
            int ciLineCount_10 = 0;
            int cid_11 = 0;

            {
                cfp_5 = 0;
                creadname_6 = 0;
                csLine_7 = calloca(1000);
                csVarVal_8 = 0;
                ci_9 = 0;
                ciLineCount_10 = 0;
                cid_11 = 0;
                creadname_6 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2353 */
                ccalloc(((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2353 */
                cstrlen(getMEMINT((int) ((cfnames + 0)))) +
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2353 */
                        cstrlen(getMEMINT((int) ((cfnames + 56))))) + 2), 1));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2354 */
                cstrcpy(creadname_6, getMEMINT((int) ((cfnames + 0))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2355 */
                cstrcat(creadname_6, getMEMINT((int) ((cfnames + 56))));
                cfp_5 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 2356
                         */
                        cfopen(creadname_6, strmarxan191);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2358 */
                if ((((cfp_5) == ((int) (0))) ? 1 : 0) != 0) {
                    startargs(creadname_6);

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2358 */
                    marxan.cShowErrorMessage((int) (strmarxan259), endargs());

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2361 */
                cfgets((int) (csLine_7), 999, cfp_5);
                lab_marxan52: while ((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2362 */
                cfgets((int) (csLine_7), 999, cfp_5)) != 0) {
                    ciLineCount_10++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2364 */
                cfclose(cfp_5);
                setMEMINT((int) (ciZoneTarget2Count), (int) (ciLineCount_10));
                setMEMINT((int) (cZoneTarget2), (int) ((int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2368 */
                ccalloc(ciLineCount_10, 16))));
                cfp_5 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 2371
                         */
                        cfopen(creadname_6, strmarxan191);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2372 */
                cfgets((int) (csLine_7), 999, cfp_5);
                lab_marxan53: while ((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2375 */
                cfgets((int) (csLine_7), 999, cfp_5)) != 0) {

                    {
                        csVarVal_8 =
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 2378
                                 */
                                cstrtok((int) (csLine_7), strmarxan193);
                        startargs(((getMEMINT((int) (cZoneTarget2)) + (ci_9 * 16)) + 0));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 2379
                         */
                        csscanf(csVarVal_8, strmarxan194, endargs());
                        csVarVal_8 =
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 2382
                                 */
                                cstrtok((int) (0), strmarxan193);
                        startargs(((getMEMINT((int) (cZoneTarget2)) + (ci_9 * 16)) + 4));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 2383
                         */
                        csscanf(csVarVal_8, strmarxan208, endargs());
                        csVarVal_8 =
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 2386
                                 */
                                cstrtok((int) (0), strmarxan193);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 2388
                         */
                        if ((((csVarVal_8) == ((int) (0))) ? 1 : 0) != 0) {
                            setMEMINT((int) (((getMEMINT((int) (cZoneTarget2)) + (ci_9 * 16))
                                    + 12)), (int) (0));

                        } else {
                            startargs(((getMEMINT((int) (cZoneTarget2)) + (ci_9 * 16)) + 12));

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 2390
                             */
                            csscanf(csVarVal_8, strmarxan234, endargs());

                        }
                        ;
                        ci_9++;

                    }

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2394 */
                cfclose(cfp_5);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2396 */
                cfree(creadname_6);

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan260 = jtocstr("Build_ZoneTarget start\n");
    static int strmarxan261 = jtocstr("Build_ZoneTarget spno %i iZoneCount %i iArraySize %i iZoneTargetCount %i\n");
    static int strmarxan262 = jtocstr("Build_ZoneTarget end\n");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2401 */

    public static void cBuild_ZoneTarget(int cspno, int ciZoneCount, int ciZoneTargetCount, int cZoneTarget, int c_ZoneTarget, int cpuno, int cpu, int cSM) {
        nextlevel();
        if (true) {
            int label = 0;
            int ci_10 = 0;
            int cj_11 = 0;
            int ciArraySize_12 = 0;
            int ciSpeciesIndex_13 = 0;
            double crArraySize_14 = 0;
            int cdebugbuffer_15 = 0;
            int c_ZT_16 = 0;
            int cSpecArea_17 = 0;
            int cSpecOcc_18 = 0;
            int y3 = 0;

            {
                ci_10 = 0;
                cj_11 = 0;
                ciArraySize_12 = 0;
                ciSpeciesIndex_13 = 0;
                crArraySize_14 = 0;
                cdebugbuffer_15 = calloca(1000);
                c_ZT_16 = calloca(12);
                cSpecArea_17 = 0;
                cSpecOcc_18 = 0;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2410 */
                marxan.cAppendDebugTraceFile((int) (strmarxan260), 0);
                crArraySize_14 = (cspno * ciZoneCount);
                ciArraySize_12 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2415 */
                cfloor(crArraySize_14));
                startargs(cspno);
                addarg(ciZoneCount);
                addarg(ciArraySize_12);
                addarg(ciZoneTargetCount);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2418 */
                csprintf((int) (cdebugbuffer_15), strmarxan261, endargs());

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2419 */
                marxan.cAppendDebugTraceFile((int) (cdebugbuffer_15), 0);
                cSpecArea_17 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2423 */
                ccalloc(cspno, 8));
                cSpecOcc_18 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2424 */
                ccalloc(cspno, 4));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2429 */
                ci_10 = 0;
                lab_marxan54: for (; (((ci_10) < (cspno)) ? 1 : 0) != 0;) {

                    {
                        setMEMDOUBLE((int) ((cSpecArea_17 + (ci_10 * 8))), (double) (0));
                        setMEMINT((int) ((cSpecOcc_18 + (ci_10 * 4))), (int) (0));

                    }
                    ci_10++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2440 */
                ci_10 = 0;
                lab_marxan55: for (; (((ci_10) < (cpuno)) ? 1 : 0) != 0;) {

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2434 */
                    if ((((getMEMINT((int) (((cpu + ((int) (ci_10) * 64)) + 32)))) > (0)) ? 1 : 0) != 0) {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 2438
                         */
                        cj_11 = 0;
                        lab_marxan56: for (; (((cj_11) < (getMEMINT((int) (((cpu + ((int) (ci_10) * 64))
                                + 32))))) ? 1 : 0) != 0;) {

                            {
                                y3 = (int) ((cSpecArea_17 + (getMEMINT((int) (((cSM
                                        + ((int) ((getMEMINT((int) (((cpu + ((int) (ci_10) * 64)) + 36)))
                                                + cj_11)) * 16))
                                        + 12))) * 8)));
                                setMEMDOUBLE((int) (y3), (double) ((getMEMDOUBLE((int) (y3))
                                        + getMEMDOUBLE((int) (((cSM
                                                + ((int) ((getMEMINT((int) (((cpu + ((int) (ci_10) * 64))
                                                        + 36))) + cj_11)) * 16))
                                                + 0))))));
                                sincMEMINT((int) ((cSpecOcc_18 + (getMEMINT((int) (((cSM
                                        + ((int) ((getMEMINT((int) (((cpu + ((int) (ci_10) * 64)) + 36)))
                                                + cj_11)) * 16))
                                        + 12))) * 4))), +1);

                            }
                            cj_11++;

                        }

                    }
                    ;
                    ci_10++;

                }
                setMEMINT((int) (c_ZoneTarget), (int) ((int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2440 */
                ccalloc(ciArraySize_12, 12))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2458 */
                cj_11 = 0;
                lab_marxan57: for (; (((cj_11) < (cspno)) ? 1 : 0) != 0;) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 2457
                         */
                        ci_10 = 0;
                        lab_marxan58: for (; (((ci_10) < (ciZoneCount)) ? 1 : 0) != 0;) {

                            {
                                setMEMDOUBLE((int) (((getMEMINT((int) (c_ZoneTarget))
                                        + (((cj_11 * ciZoneCount) + ci_10) * 12)) + 0)), (double) (0));
                                setMEMINT((int) (((getMEMINT((int) (c_ZoneTarget))
                                        + (((cj_11 * ciZoneCount) + ci_10) * 12)) + 8)), (int) (0));

                            }
                            ci_10++;

                        }

                    }
                    cj_11++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2491 */
                ci_10 = 0;
                lab_marxan59: for (; (((ci_10) < (ciZoneTargetCount)) ? 1 : 0) != 0;) {

                    {
                        ciSpeciesIndex_13 =
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 2471
                                 */
                                marxan.cFastSPIDtoSPINDEX(cspno, getMEMINT((int) (((cZoneTarget
                                        + ((int) (ci_10) * 20))
                                        + 4))), (int) (getMEMINT((int) (marxan.cSPLookup))));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 2475
                         */
                        if ((((getMEMINT((int) (((cZoneTarget + ((int) (ci_10) * 20)) + 16)))) == (0)) ? 1
                                : 0) != 0) {
                            setMEMDOUBLE((int) (((getMEMINT((int) (c_ZoneTarget)) + (((ciSpeciesIndex_13
                                    * ciZoneCount)
                                    + (getMEMINT((int) (((cZoneTarget + ((int) (ci_10) * 20)) + 0))) - 1))
                                    * 12))
                                    + 0)), (double) (getMEMDOUBLE((int) (((cZoneTarget + ((int) (ci_10) * 20))
                                            + 8)))));

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 2477
                         */
                        if ((((getMEMINT((int) (((cZoneTarget + ((int) (ci_10) * 20)) + 16)))) == (1)) ? 1
                                : 0) != 0) {
                            setMEMDOUBLE((int) (((getMEMINT((int) (c_ZoneTarget)) + (((ciSpeciesIndex_13
                                    * ciZoneCount)
                                    + (getMEMINT((int) (((cZoneTarget + ((int) (ci_10) * 20)) + 0))) - 1))
                                    * 12))
                                    + 0)), (double) ((getMEMDOUBLE((int) (((cZoneTarget
                                            + ((int) (ci_10) * 20)) + 8)))
                                            * getMEMDOUBLE((int) ((cSpecArea_17
                                                    + (ciSpeciesIndex_13 * 8)))))));

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 2479
                         */
                        if ((((getMEMINT((int) (((cZoneTarget + ((int) (ci_10) * 20)) + 16)))) == (2)) ? 1
                                : 0) != 0) {
                            setMEMINT((int) (((getMEMINT((int) (c_ZoneTarget)) + (((ciSpeciesIndex_13
                                    * ciZoneCount)
                                    + (getMEMINT((int) (((cZoneTarget + ((int) (ci_10) * 20)) + 0))) - 1))
                                    * 12)) + 8)), (int) ((int) (
                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 2479
                             */
                            cceil(getMEMDOUBLE((int) (((cZoneTarget + ((int) (ci_10) * 20)) + 8)))))));

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 2481
                         */
                        if ((((getMEMINT((int) (((cZoneTarget + ((int) (ci_10) * 20)) + 16)))) == (3)) ? 1
                                : 0) != 0) {
                            setMEMINT((int) (((getMEMINT((int) (c_ZoneTarget)) + (((ciSpeciesIndex_13
                                    * ciZoneCount)
                                    + (getMEMINT((int) (((cZoneTarget + ((int) (ci_10) * 20)) + 0))) - 1))
                                    * 12)) + 8)), (int) ((int) (
                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 2481
                             */
                            cceil((getMEMDOUBLE((int) (((cZoneTarget + ((int) (ci_10) * 20)) + 8)))
                                    * (double) (getMEMINT((int) ((cSpecOcc_18
                                            + (ciSpeciesIndex_13 * 4))))))))));

                        }
                        ;

                    }
                    ci_10++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2494 */
                cfree(cSpecArea_17);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2495 */
                cfree(cSpecOcc_18);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2498 */
                marxan.cAppendDebugTraceFile((int) (strmarxan262), 0);

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan263 = jtocstr("Build_ZoneTarget2 start\n");
    static int strmarxan264 = jtocstr("Build_ZoneTarget spno %i iZoneCount %i iArraySize %i iZoneTarget2Count %i\n");
    static int strmarxan265 = jtocstr("Build_ZoneTarget2 end\n");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2504 */

    public static void cBuild_ZoneTarget2(int cspno, int ciZoneCount, int ciZoneTarget2Count, int cZoneTarget2, int c_ZoneTarget, int cpuno, int cpu, int cSM) {
        nextlevel();
        if (true) {
            int label = 0;
            int ci_10 = 0;
            int cj_11 = 0;
            int ciArraySize_12 = 0;
            double crArraySize_13 = 0;
            int cdebugbuffer_14 = 0;
            int c_ZT_15 = 0;
            int cSpecArea_16 = 0;
            int cSpecOcc_17 = 0;
            int y4 = 0;

            {
                ci_10 = 0;
                cj_11 = 0;
                ciArraySize_12 = 0;
                crArraySize_13 = 0;
                cdebugbuffer_14 = calloca(1000);
                c_ZT_15 = calloca(12);
                cSpecArea_16 = 0;
                cSpecOcc_17 = 0;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2514 */
                marxan.cAppendDebugTraceFile((int) (strmarxan263), 0);
                crArraySize_13 = (cspno * ciZoneCount);
                ciArraySize_12 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2519 */
                cfloor(crArraySize_13));
                startargs(cspno);
                addarg(ciZoneCount);
                addarg(ciArraySize_12);
                addarg(ciZoneTarget2Count);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2522 */
                csprintf((int) (cdebugbuffer_14), strmarxan264, endargs());

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2523 */
                marxan.cAppendDebugTraceFile((int) (cdebugbuffer_14), 0);
                cSpecArea_16 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2527 */
                ccalloc(cspno, 8));
                cSpecOcc_17 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2528 */
                ccalloc(cspno, 4));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2533 */
                ci_10 = 0;
                lab_marxan60: for (; (((ci_10) < (cspno)) ? 1 : 0) != 0;) {

                    {
                        setMEMDOUBLE((int) ((cSpecArea_16 + (ci_10 * 8))), (double) (0));
                        setMEMINT((int) ((cSpecOcc_17 + (ci_10 * 4))), (int) (0));

                    }
                    ci_10++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2544 */
                ci_10 = 0;
                lab_marxan61: for (; (((ci_10) < (cpuno)) ? 1 : 0) != 0;) {

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2538 */
                    if ((((getMEMINT((int) (((cpu + ((int) (ci_10) * 64)) + 32)))) > (0)) ? 1 : 0) != 0) {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 2542
                         */
                        cj_11 = 0;
                        lab_marxan62: for (; (((cj_11) < (getMEMINT((int) (((cpu + ((int) (ci_10) * 64))
                                + 32))))) ? 1 : 0) != 0;) {

                            {
                                y4 = (int) ((cSpecArea_16 + (getMEMINT((int) (((cSM
                                        + ((int) ((getMEMINT((int) (((cpu + ((int) (ci_10) * 64)) + 36)))
                                                + cj_11)) * 16))
                                        + 12))) * 8)));
                                setMEMDOUBLE((int) (y4), (double) ((getMEMDOUBLE((int) (y4))
                                        + getMEMDOUBLE((int) (((cSM
                                                + ((int) ((getMEMINT((int) (((cpu + ((int) (ci_10) * 64))
                                                        + 36))) + cj_11)) * 16))
                                                + 0))))));
                                sincMEMINT((int) ((cSpecOcc_17 + (getMEMINT((int) (((cSM
                                        + ((int) ((getMEMINT((int) (((cpu + ((int) (ci_10) * 64)) + 36)))
                                                + cj_11)) * 16))
                                        + 12))) * 4))), +1);

                            }
                            cj_11++;

                        }

                    }
                    ;
                    ci_10++;

                }
                setMEMINT((int) (c_ZoneTarget), (int) ((int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2544 */
                ccalloc(ciArraySize_12, 12))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2562 */
                cj_11 = 0;
                lab_marxan63: for (; (((cj_11) < (cspno)) ? 1 : 0) != 0;) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 2561
                         */
                        ci_10 = 0;
                        lab_marxan64: for (; (((ci_10) < (ciZoneCount)) ? 1 : 0) != 0;) {

                            {
                                setMEMDOUBLE((int) (((getMEMINT((int) (c_ZoneTarget))
                                        + (((cj_11 * ciZoneCount) + ci_10) * 12)) + 0)), (double) (0));
                                setMEMINT((int) (((getMEMINT((int) (c_ZoneTarget))
                                        + (((cj_11 * ciZoneCount) + ci_10) * 12)) + 8)), (int) (0));

                            }
                            ci_10++;

                        }

                    }
                    cj_11++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2591 */
                ci_10 = 0;
                lab_marxan65: for (; (((ci_10) < (ciZoneTarget2Count)) ? 1 : 0) != 0;) {

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2591 */
                    cj_11 = 0;
                    lab_marxan66: for (; (((cj_11) < (cspno)) ? 1 : 0) != 0;) {

                        {

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 2579
                             */
                            if ((((getMEMINT((int) (((cZoneTarget2 + ((int) (ci_10) * 16)) + 12)))) == (0))
                                    ? 1 : 0) != 0) {
                                setMEMDOUBLE((int) (((getMEMINT((int) (c_ZoneTarget)) + (((cj_11
                                        * ciZoneCount)
                                        + (getMEMINT((int) (((cZoneTarget2 + ((int) (ci_10) * 16)) + 0)))
                                                - 1))
                                        * 12))
                                        + 0)), (double) (getMEMDOUBLE((int) (((cZoneTarget2
                                                + ((int) (ci_10) * 16)) + 4)))));

                            }
                            ;

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 2581
                             */
                            if ((((getMEMINT((int) (((cZoneTarget2 + ((int) (ci_10) * 16)) + 12)))) == (1))
                                    ? 1 : 0) != 0) {
                                setMEMDOUBLE((int) (((getMEMINT((int) (c_ZoneTarget)) + (((cj_11
                                        * ciZoneCount)
                                        + (getMEMINT((int) (((cZoneTarget2 + ((int) (ci_10) * 16)) + 0)))
                                                - 1))
                                        * 12))
                                        + 0)), (double) ((getMEMDOUBLE((int) (((cZoneTarget2
                                                + ((int) (ci_10) * 16)) + 4)))
                                                * getMEMDOUBLE((int) ((cSpecArea_16 + (cj_11 * 8)))))));

                            }
                            ;

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 2583
                             */
                            if ((((getMEMINT((int) (((cZoneTarget2 + ((int) (ci_10) * 16)) + 12)))) == (2))
                                    ? 1 : 0) != 0) {
                                setMEMINT((int) (((getMEMINT((int) (c_ZoneTarget)) + (((cj_11 * ciZoneCount)
                                        + (getMEMINT((int) (((cZoneTarget2 + ((int) (ci_10) * 16)) + 0)))
                                                - 1))
                                        * 12)) + 8)), (int) ((int) (
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 2583
                                 */
                                cceil(getMEMDOUBLE((int) (((cZoneTarget2 + ((int) (ci_10) * 16)) + 4)))))));

                            }
                            ;

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 2585
                             */
                            if ((((getMEMINT((int) (((cZoneTarget2 + ((int) (ci_10) * 16)) + 12)))) == (3))
                                    ? 1 : 0) != 0) {
                                setMEMINT((int) (((getMEMINT((int) (c_ZoneTarget)) + (((cj_11 * ciZoneCount)
                                        + (getMEMINT((int) (((cZoneTarget2 + ((int) (ci_10) * 16)) + 0)))
                                                - 1))
                                        * 12)) + 8)), (int) ((int) (
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 2585
                                 */
                                cceil((getMEMDOUBLE((int) (((cZoneTarget2 + ((int) (ci_10) * 16)) + 4)))
                                        * (double) (getMEMINT((int) ((cSpecOcc_17 + (cj_11 * 4))))))))));

                            }
                            ;

                        }
                        cj_11++;

                    }
                    ci_10++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2594 */
                cfree(cSpecArea_16);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2595 */
                cfree(cSpecOcc_17);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2598 */
                marxan.cAppendDebugTraceFile((int) (strmarxan265), 0);

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan266 = jtocstr("Update_ZoneTarget2 start\n");
    static int strmarxan267 = jtocstr("Update_ZoneTarget2 spno %i iZoneCount %i iArraySize %i iZoneTarget2Count %i\n");
    static int strmarxan268 = jtocstr("Update_ZoneTarget2 end\n");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2604 */

    public static void cUpdate_ZoneTarget2(int cspno, int ciZoneCount, int ciZoneTarget2Count, int cZoneTarget2, int c_ZoneTarget, int cpuno, int cpu, int cSM) {
        nextlevel();
        if (true) {
            int label = 0;
            int ci_10 = 0;
            int cj_11 = 0;
            int ciArraySize_12 = 0;
            double crArraySize_13 = 0;
            int cdebugbuffer_14 = 0;
            int c_ZT_15 = 0;
            int cSpecArea_16 = 0;
            int cSpecOcc_17 = 0;
            int y5 = 0;

            {
                ci_10 = 0;
                cj_11 = 0;
                ciArraySize_12 = 0;
                crArraySize_13 = 0;
                cdebugbuffer_14 = calloca(1000);
                c_ZT_15 = calloca(12);
                cSpecArea_16 = 0;
                cSpecOcc_17 = 0;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2614 */
                marxan.cAppendDebugTraceFile((int) (strmarxan266), 0);
                crArraySize_13 = (cspno * ciZoneCount);
                ciArraySize_12 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2619 */
                cfloor(crArraySize_13));
                startargs(cspno);
                addarg(ciZoneCount);
                addarg(ciArraySize_12);
                addarg(ciZoneTarget2Count);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2622 */
                csprintf((int) (cdebugbuffer_14), strmarxan267, endargs());

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2623 */
                marxan.cAppendDebugTraceFile((int) (cdebugbuffer_14), 0);
                cSpecArea_16 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2627 */
                ccalloc(cspno, 8));
                cSpecOcc_17 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2628 */
                ccalloc(cspno, 4));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2633 */
                ci_10 = 0;
                lab_marxan67: for (; (((ci_10) < (cspno)) ? 1 : 0) != 0;) {

                    {
                        setMEMDOUBLE((int) ((cSpecArea_16 + (ci_10 * 8))), (double) (0));
                        setMEMINT((int) ((cSpecOcc_17 + (ci_10 * 4))), (int) (0));

                    }
                    ci_10++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2645 */
                ci_10 = 0;
                lab_marxan68: for (; (((ci_10) < (cpuno)) ? 1 : 0) != 0;) {

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2638 */
                    if ((((getMEMINT((int) (((cpu + ((int) (ci_10) * 64)) + 32)))) > (0)) ? 1 : 0) != 0) {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 2642
                         */
                        cj_11 = 0;
                        lab_marxan69: for (; (((cj_11) < (getMEMINT((int) (((cpu + ((int) (ci_10) * 64))
                                + 32))))) ? 1 : 0) != 0;) {

                            {
                                y5 = (int) ((cSpecArea_16 + (getMEMINT((int) (((cSM
                                        + ((int) ((getMEMINT((int) (((cpu + ((int) (ci_10) * 64)) + 36)))
                                                + cj_11)) * 16))
                                        + 12))) * 8)));
                                setMEMDOUBLE((int) (y5), (double) ((getMEMDOUBLE((int) (y5))
                                        + getMEMDOUBLE((int) (((cSM
                                                + ((int) ((getMEMINT((int) (((cpu + ((int) (ci_10) * 64))
                                                        + 36))) + cj_11)) * 16))
                                                + 0))))));
                                sincMEMINT((int) ((cSpecOcc_17 + (getMEMINT((int) (((cSM
                                        + ((int) ((getMEMINT((int) (((cpu + ((int) (ci_10) * 64)) + 36)))
                                                + cj_11)) * 16))
                                        + 12))) * 4))), +1);

                            }
                            cj_11++;

                        }

                    }
                    ;
                    ci_10++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2669 */
                ci_10 = 0;
                lab_marxan70: for (; (((ci_10) < (ciZoneTarget2Count)) ? 1 : 0) != 0;) {

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2669 */
                    cj_11 = 0;
                    lab_marxan71: for (; (((cj_11) < (cspno)) ? 1 : 0) != 0;) {

                        {

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 2657
                             */
                            if ((((getMEMINT((int) (((cZoneTarget2 + ((int) (ci_10) * 16)) + 12)))) == (0))
                                    ? 1 : 0) != 0) {
                                setMEMDOUBLE((int) (((c_ZoneTarget + ((int) (((cj_11 * ciZoneCount)
                                        + (getMEMINT((int) (((cZoneTarget2 + ((int) (ci_10) * 16)) + 0)))
                                                - 1)))
                                        * 12))
                                        + 0)), (double) (getMEMDOUBLE((int) (((cZoneTarget2
                                                + ((int) (ci_10) * 16)) + 4)))));

                            }
                            ;

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 2659
                             */
                            if ((((getMEMINT((int) (((cZoneTarget2 + ((int) (ci_10) * 16)) + 12)))) == (1))
                                    ? 1 : 0) != 0) {
                                setMEMDOUBLE((int) (((c_ZoneTarget + ((int) (((cj_11 * ciZoneCount)
                                        + (getMEMINT((int) (((cZoneTarget2 + ((int) (ci_10) * 16)) + 0)))
                                                - 1)))
                                        * 12))
                                        + 0)), (double) ((getMEMDOUBLE((int) (((cZoneTarget2
                                                + ((int) (ci_10) * 16)) + 4)))
                                                * getMEMDOUBLE((int) ((cSpecArea_16 + (cj_11 * 8)))))));

                            }
                            ;

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 2661
                             */
                            if ((((getMEMINT((int) (((cZoneTarget2 + ((int) (ci_10) * 16)) + 12)))) == (2))
                                    ? 1 : 0) != 0) {
                                setMEMINT((int) (((c_ZoneTarget + ((int) (((cj_11 * ciZoneCount)
                                        + (getMEMINT((int) (((cZoneTarget2 + ((int) (ci_10) * 16)) + 0)))
                                                - 1)))
                                        * 12)) + 8)), (int) ((int) (
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 2661
                                 */
                                cceil(getMEMDOUBLE((int) (((cZoneTarget2 + ((int) (ci_10) * 16)) + 4)))))));

                            }
                            ;

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 2663
                             */
                            if ((((getMEMINT((int) (((cZoneTarget2 + ((int) (ci_10) * 16)) + 12)))) == (3))
                                    ? 1 : 0) != 0) {
                                setMEMINT((int) (((c_ZoneTarget + ((int) (((cj_11 * ciZoneCount)
                                        + (getMEMINT((int) (((cZoneTarget2 + ((int) (ci_10) * 16)) + 0)))
                                                - 1)))
                                        * 12)) + 8)), (int) ((int) (
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 2663
                                 */
                                cceil((getMEMDOUBLE((int) (((cZoneTarget2 + ((int) (ci_10) * 16)) + 4)))
                                        * (double) (getMEMINT((int) ((cSpecOcc_17 + (cj_11 * 4))))))))));

                            }
                            ;

                        }
                        cj_11++;

                    }
                    ci_10++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2672 */
                cfree(cSpecArea_16);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2673 */
                cfree(cSpecOcc_17);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2676 */
                marxan.cAppendDebugTraceFile((int) (strmarxan268), 0);

            }
        }
        ;
        prevlevel();
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2681 */

    public static void cDefault_ZoneTarget(int cspno, int ciZoneCount, int c_ZoneTarget) {
        nextlevel();
        if (true) {
            int label = 0;
            int ci_5 = 0;
            int cj_6 = 0;
            int ciArraySize_7 = 0;
            double crArraySize_8 = 0;
            int cdebugbuffer_9 = 0;
            int c_ZT_10 = 0;

            {
                ci_5 = 0;
                cj_6 = 0;
                ciArraySize_7 = 0;
                crArraySize_8 = 0;
                cdebugbuffer_9 = calloca(1000);
                c_ZT_10 = calloca(12);
                crArraySize_8 = (cspno * ciZoneCount);
                ciArraySize_7 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2695 */
                cfloor(crArraySize_8));
                setMEMINT((int) (c_ZoneTarget), (int) ((int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2702 */
                ccalloc(ciArraySize_7, 12))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2720 */
                cj_6 = 0;
                lab_marxan72: for (; (((cj_6) < (cspno)) ? 1 : 0) != 0;) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 2719
                         */
                        ci_5 = 0;
                        lab_marxan73: for (; (((ci_5) < (ciZoneCount)) ? 1 : 0) != 0;) {

                            {
                                setMEMDOUBLE((int) (((getMEMINT((int) (c_ZoneTarget))
                                        + (((cj_6 * ciZoneCount) + ci_5) * 12)) + 0)), (double) (0));
                                setMEMINT((int) (((getMEMINT((int) (c_ZoneTarget))
                                        + (((cj_6 * ciZoneCount) + ci_5) * 12)) + 8)), (int) (0));

                            }
                            ci_5++;

                        }

                    }
                    cj_6++;

                }

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan269 = jtocstr("debug_ZoneTarget.csv");
    static int strmarxan270 = jtocstr("cannot create Dump_ZoneTarget file %s\n");
    static int strmarxan271 = jtocstr("spname,spindex,");
    static int strmarxan272 = jtocstr("zone%dtarget,zone%doccurrence");
    static int strmarxan273 = jtocstr("%i,%i,");
    static int strmarxan274 = jtocstr("%lf,%i");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2728 */

    public static void cDump_ZoneTarget(int cspno, int ciZoneCount, int c_ZoneTarget, int cfnames) {
        nextlevel();
        if (true) {
            int label = 0;
            int cfp_6 = 0;
            int cwritename_7 = 0;
            int ci_8 = 0;
            int cj_9 = 0;
            int cdebugbuffer_10 = 0;

            {
                cfp_6 = 0;
                cwritename_7 = 0;
                ci_8 = 0;
                cj_9 = 0;
                cdebugbuffer_10 = calloca(1000);
                cwritename_7 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2739 */
                ccalloc(((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2739 */
                cstrlen(getMEMINT((int) ((cfnames + 4)))) +
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2739 */
                        cstrlen(strmarxan269)) + 2), 1));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2740 */
                cstrcpy(cwritename_7, getMEMINT((int) ((cfnames + 4))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2741 */
                cstrcat(cwritename_7, strmarxan269);
                cfp_6 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 2742
                         */
                        cfopen(cwritename_7, strmarxan198);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2744 */
                if ((((cfp_6) == ((int) (0))) ? 1 : 0) != 0) {
                    startargs(cwritename_7);

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2744 */
                    marxan.cShowErrorMessage((int) (strmarxan270), endargs());

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2745 */
                cfree(cwritename_7);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2748 */
                cfprintf(cfp_6, strmarxan271, 0);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2754 */
                ci_8 = 0;
                lab_marxan74: for (; (((ci_8) < (ciZoneCount)) ? 1 : 0) != 0;) {

                    {
                        startargs((ci_8 + 1));
                        addarg((ci_8 + 1));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 2751
                         */
                        cfprintf(cfp_6, strmarxan272, endargs());

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 2753
                         */
                        if ((((ci_8) != ((ciZoneCount - 1))) ? 1 : 0) != 0) {

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 2753
                             */
                            cfprintf(cfp_6, strmarxan212, 0);

                        }
                        ;

                    }
                    ci_8++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2755 */
                cfprintf(cfp_6, strmarxan137, 0);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2772 */
                cj_9 = 0;
                lab_marxan75: for (; (((cj_9) < (cspno)) ? 1 : 0) != 0;) {

                    {
                        startargs(getMEMINT((int) (((getMEMINT((int) (marxan.cspec)) + (cj_9 * 100)) + 0))));
                        addarg(cj_9);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 2759
                         */
                        cfprintf(cfp_6, strmarxan273, endargs());

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 2770
                         */
                        ci_8 = 0;
                        lab_marxan76: for (; (((ci_8) < (ciZoneCount)) ? 1 : 0) != 0;) {

                            {
                                startargs(getMEMDOUBLE((int) (((c_ZoneTarget
                                        + ((int) (((cj_9 * ciZoneCount) + ci_8)) * 12)) + 0))));
                                addarg(getMEMINT((int) (((c_ZoneTarget
                                        + ((int) (((cj_9 * ciZoneCount) + ci_8)) * 12)) + 8))));

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 2767
                                 */
                                cfprintf(cfp_6, strmarxan274, endargs());

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 2769
                                 */
                                if ((((ci_8) != ((ciZoneCount - 1))) ? 1 : 0) != 0) {

                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 2769
                                     */
                                    cfprintf(cfp_6, strmarxan212, 0);

                                }
                                ;

                            }
                            ci_8++;

                        }

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 2771
                         */
                        cfprintf(cfp_6, strmarxan137, 0);

                    }
                    cj_9++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2774 */
                cfclose(cfp_6);

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan275 = jtocstr("debugZoneTarget.csv");
    static int strmarxan276 = jtocstr("cannot create DumpZoneTarget file %s\n");
    static int strmarxan277 = jtocstr("zoneid,speciesid,target,targettype\n");
    static int strmarxan278 = jtocstr("%d,%d,%lf,%d\n");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2782 */

    public static void cDumpZoneTarget(int ciZoneTargetCount, int cZoneTarget, int cfnames) {
        nextlevel();
        if (true) {
            int label = 0;
            int cfp_5 = 0;
            int cwritename_6 = 0;
            int ci_7 = 0;

            {
                cfp_5 = 0;
                cwritename_6 = 0;
                ci_7 = 0;
                cwritename_6 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2787 */
                ccalloc(((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2787 */
                cstrlen(getMEMINT((int) ((cfnames + 4)))) +
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2787 */
                        cstrlen(strmarxan275)) + 2), 1));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2788 */
                cstrcpy(cwritename_6, getMEMINT((int) ((cfnames + 4))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2789 */
                cstrcat(cwritename_6, strmarxan275);
                cfp_5 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 2790
                         */
                        cfopen(cwritename_6, strmarxan198);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2792 */
                if ((((cfp_5) == ((int) (0))) ? 1 : 0) != 0) {
                    startargs(cwritename_6);

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2792 */
                    marxan.cShowErrorMessage((int) (strmarxan276), endargs());

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2793 */
                cfree(cwritename_6);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2795 */
                cfprintf(cfp_5, strmarxan277, 0);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2800 */
                ci_7 = 0;
                lab_marxan77: for (; (((ci_7) < (ciZoneTargetCount)) ? 1 : 0) != 0;) {

                    {
                        startargs(getMEMINT((int) (((cZoneTarget + ((int) (ci_7) * 20)) + 0))));
                        addarg(getMEMINT((int) (((cZoneTarget + ((int) (ci_7) * 20)) + 4))));
                        addarg(getMEMDOUBLE((int) (((cZoneTarget + ((int) (ci_7) * 20)) + 8))));
                        addarg(getMEMINT((int) (((cZoneTarget + ((int) (ci_7) * 20)) + 16))));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 2799
                         */
                        cfprintf(cfp_5, strmarxan278, endargs());

                    }
                    ci_7++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2802 */
                cfclose(cfp_5);

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan279 = jtocstr("debugZoneTarget2.csv");
    static int strmarxan280 = jtocstr("cannot create DumpZoneTarget2 file %s\n");
    static int strmarxan281 = jtocstr("zoneid,target,targettype\n");
    static int strmarxan282 = jtocstr("%d,%lf,%d\n");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2806 */

    public static void cDumpZoneTarget2(int ciZoneTarget2Count, int cZoneTarget2, int cfnames) {
        nextlevel();
        if (true) {
            int label = 0;
            int cfp_5 = 0;
            int cwritename_6 = 0;
            int ci_7 = 0;

            {
                cfp_5 = 0;
                cwritename_6 = 0;
                ci_7 = 0;
                cwritename_6 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2811 */
                ccalloc(((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2811 */
                cstrlen(getMEMINT((int) ((cfnames + 4)))) +
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2811 */
                        cstrlen(strmarxan279)) + 2), 1));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2812 */
                cstrcpy(cwritename_6, getMEMINT((int) ((cfnames + 4))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2813 */
                cstrcat(cwritename_6, strmarxan279);
                cfp_5 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 2814
                         */
                        cfopen(cwritename_6, strmarxan198);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2816 */
                if ((((cfp_5) == ((int) (0))) ? 1 : 0) != 0) {
                    startargs(cwritename_6);

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2816 */
                    marxan.cShowErrorMessage((int) (strmarxan280), endargs());

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2817 */
                cfree(cwritename_6);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2819 */
                cfprintf(cfp_5, strmarxan281, 0);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2824 */
                ci_7 = 0;
                lab_marxan78: for (; (((ci_7) < (ciZoneTarget2Count)) ? 1 : 0) != 0;) {

                    {
                        startargs(getMEMINT((int) (((cZoneTarget2 + ((int) (ci_7) * 16)) + 0))));
                        addarg(getMEMDOUBLE((int) (((cZoneTarget2 + ((int) (ci_7) * 16)) + 4))));
                        addarg(getMEMINT((int) (((cZoneTarget2 + ((int) (ci_7) * 16)) + 12))));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 2823
                         */
                        cfprintf(cfp_5, strmarxan282, endargs());

                    }
                    ci_7++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2826 */
                cfclose(cfp_5);

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan283 = jtocstr("cannot open ZoneCost file %s\n");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2830 */

    public static void cLoadZoneCost(int ciZoneCostCount, int cZoneCost, int cfnames) {
        nextlevel();
        if (true) {
            int label = 0;
            int cfp_5 = 0;
            int creadname_6 = 0;
            int csLine_7 = 0;
            int csVarVal_8 = 0;
            int ci_9 = 0;
            int ciLineCount_10 = 0;
            int cid_11 = 0;

            {
                cfp_5 = 0;
                creadname_6 = 0;
                csLine_7 = calloca(1000);
                csVarVal_8 = 0;
                ci_9 = 0;
                ciLineCount_10 = 0;
                cid_11 = 0;
                creadname_6 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2836 */
                ccalloc(((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2836 */
                cstrlen(getMEMINT((int) ((cfnames + 0)))) +
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2836 */
                        cstrlen(getMEMINT((int) ((cfnames + 60))))) + 2), 1));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2837 */
                cstrcpy(creadname_6, getMEMINT((int) ((cfnames + 0))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2838 */
                cstrcat(creadname_6, getMEMINT((int) ((cfnames + 60))));
                cfp_5 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 2839
                         */
                        cfopen(creadname_6, strmarxan191);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2841 */
                if ((((cfp_5) == ((int) (0))) ? 1 : 0) != 0) {
                    startargs(creadname_6);

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2841 */
                    marxan.cShowErrorMessage((int) (strmarxan283), endargs());

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2844 */
                cfgets((int) (csLine_7), 999, cfp_5);
                lab_marxan79: while ((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2845 */
                cfgets((int) (csLine_7), 999, cfp_5)) != 0) {
                    ciLineCount_10++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2847 */
                cfclose(cfp_5);
                setMEMINT((int) (ciZoneCostCount), (int) (ciLineCount_10));
                setMEMINT((int) (cZoneCost), (int) ((int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2851 */
                ccalloc(ciLineCount_10, 16))));
                cfp_5 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 2854
                         */
                        cfopen(creadname_6, strmarxan191);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2855 */
                cfgets((int) (csLine_7), 999, cfp_5);
                lab_marxan80: while ((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2856 */
                cfgets((int) (csLine_7), 999, cfp_5)) != 0) {

                    {
                        csVarVal_8 =
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 2859
                                 */
                                cstrtok((int) (csLine_7), strmarxan193);
                        startargs(((getMEMINT((int) (cZoneCost)) + (ci_9 * 16)) + 0));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 2860
                         */
                        csscanf(csVarVal_8, strmarxan194, endargs());
                        csVarVal_8 =
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 2863
                                 */
                                cstrtok((int) (0), strmarxan193);
                        startargs(((getMEMINT((int) (cZoneCost)) + (ci_9 * 16)) + 4));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 2864
                         */
                        csscanf(csVarVal_8, strmarxan194, endargs());
                        csVarVal_8 =
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 2867
                                 */
                                cstrtok((int) (0), strmarxan193);
                        startargs(((getMEMINT((int) (cZoneCost)) + (ci_9 * 16)) + 8));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 2868
                         */
                        csscanf(csVarVal_8, strmarxan208, endargs());
                        ci_9++;

                    }

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2872 */
                cfclose(cfp_5);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2874 */
                cfree(creadname_6);

            }
        }
        ;
        prevlevel();
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2878 */

    public static void cDefaultZoneCost(int ciZoneCostCount, int cZoneCost) {
        nextlevel();
        if (true) {
            int label = 0;

            {
                setMEMINT((int) (ciZoneCostCount), (int) (1));
                setMEMINT((int) (cZoneCost), (int) ((int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2881 */
                ccalloc(1, 16))));
                setMEMINT((int) (((getMEMINT((int) (cZoneCost)) + (0 * 16)) + 0)), (int) (2));
                setMEMINT((int) (((getMEMINT((int) (cZoneCost)) + (0 * 16)) + 4)), (int) (1));
                setMEMDOUBLE((int) (((getMEMINT((int) (cZoneCost)) + (0 * 16)) + 8)), (double) (1));

            }
        }
        ;
        prevlevel();
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2891 */

    public static void cBuild_ZoneCost(int ciCostCount, int ciZoneCount, int ciZoneCostCount, int cZoneCost, int c_ZoneCost) {
        nextlevel();
        if (true) {
            int label = 0;
            int ci_7 = 0;
            int cj_8 = 0;
            int ciArraySize_9 = 0;
            double crArraySize_10 = 0;
            int cdebugbuffer_11 = 0;

            {
                ci_7 = 0;
                cj_8 = 0;
                ciArraySize_9 = 0;
                crArraySize_10 = 0;
                cdebugbuffer_11 = calloca(1000);
                crArraySize_10 = (ciCostCount * ciZoneCount);
                ciArraySize_9 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2902 */
                cfloor(crArraySize_10));
                setMEMINT((int) (c_ZoneCost), (int) ((int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2909 */
                ccalloc(ciArraySize_9, 8))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2916 */
                cj_8 = 0;
                lab_marxan81: for (; (((cj_8) < (ciCostCount)) ? 1 : 0) != 0;) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 2915
                         */
                        ci_7 = 0;
                        lab_marxan82: for (; (((ci_7) < (ciZoneCount)) ? 1 : 0) != 0;) {

                            {
                                setMEMDOUBLE((int) ((getMEMINT((int) (c_ZoneCost))
                                        + (((cj_8 * ciZoneCount) + ci_7) * 8))), (double) (0));

                            }
                            ci_7++;

                        }

                    }
                    cj_8++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2930 */
                ci_7 = 0;
                lab_marxan83: for (; (((ci_7) < (ciZoneCostCount)) ? 1 : 0) != 0;) {

                    {
                        setMEMDOUBLE((int) ((getMEMINT((int) (c_ZoneCost))
                                + ((((getMEMINT((int) (((cZoneCost + ((int) (ci_7) * 16)) + 4))) - 1)
                                        * ciZoneCount)
                                        + (getMEMINT((int) (((cZoneCost + ((int) (ci_7) * 16)) + 0))) - 1))
                                        * 8))), (double) (getMEMDOUBLE((int) (((cZoneCost
                                                + ((int) (ci_7) * 16)) + 8)))));

                    }
                    ci_7++;

                }

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan284 = jtocstr("debug_ZoneCost.csv");
    static int strmarxan285 = jtocstr("cannot create Dump_ZoneCost file %s\n");
    static int strmarxan286 = jtocstr("costindex");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2937 */

    public static void cDump_ZoneCost(int ciCostCount, int ciZoneCount, int c_ZoneCost, int cfnames) {
        nextlevel();
        if (true) {
            int label = 0;
            int cfp_6 = 0;
            int cwritename_7 = 0;
            int ci_8 = 0;
            int cj_9 = 0;

            {
                cfp_6 = 0;
                cwritename_7 = 0;
                ci_8 = 0;
                cj_9 = 0;
                cwritename_7 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2946 */
                ccalloc(((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2946 */
                cstrlen(getMEMINT((int) ((cfnames + 4)))) +
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2946 */
                        cstrlen(strmarxan284)) + 2), 1));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2947 */
                cstrcpy(cwritename_7, getMEMINT((int) ((cfnames + 4))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2948 */
                cstrcat(cwritename_7, strmarxan284);
                cfp_6 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 2949
                         */
                        cfopen(cwritename_7, strmarxan198);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2951 */
                if ((((cfp_6) == ((int) (0))) ? 1 : 0) != 0) {
                    startargs(cwritename_7);

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2951 */
                    marxan.cShowErrorMessage((int) (strmarxan285), endargs());

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2952 */
                cfree(cwritename_7);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2954 */
                cfprintf(cfp_6, strmarxan286, 0);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2956 */
                ci_8 = 0;
                lab_marxan84: for (; (((ci_8) < (ciZoneCount)) ? 1 : 0) != 0;) {
                    startargs(ci_8);

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2956 */
                    cfprintf(cfp_6, strmarxan216, endargs());
                    ci_8++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2957 */
                cfprintf(cfp_6, strmarxan137, 0);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2968 */
                cj_9 = 0;
                lab_marxan85: for (; (((cj_9) < (ciCostCount)) ? 1 : 0) != 0;) {

                    {
                        startargs(cj_9);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 2961
                         */
                        cfprintf(cfp_6, strmarxan194, endargs());

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 2966
                         */
                        ci_8 = 0;
                        lab_marxan86: for (; (((ci_8) < (ciZoneCount)) ? 1 : 0) != 0;) {

                            {
                                startargs(getMEMDOUBLE((int) ((c_ZoneCost
                                        + ((int) (((cj_9 * ciZoneCount) + ci_8)) * 8)))));

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 2965
                                 */
                                cfprintf(cfp_6, strmarxan241, endargs());

                            }
                            ci_8++;

                        }

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 2967
                         */
                        cfprintf(cfp_6, strmarxan137, 0);

                    }
                    cj_9++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2970 */
                cfclose(cfp_6);

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan287 = jtocstr("debugZoneCost.csv");
    static int strmarxan288 = jtocstr("cannot create DumpZoneCost file %s\n");
    static int strmarxan289 = jtocstr("zoneid,costid,fraction\n");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2978 */

    public static void cDumpZoneCost(int ciZoneCostCount, int cZoneCost, int cfnames) {
        nextlevel();
        if (true) {
            int label = 0;
            int cfp_5 = 0;
            int cwritename_6 = 0;
            int ci_7 = 0;

            {
                cfp_5 = 0;
                cwritename_6 = 0;
                ci_7 = 0;
                cwritename_6 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2983 */
                ccalloc(((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2983 */
                cstrlen(getMEMINT((int) ((cfnames + 4)))) +
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2983 */
                        cstrlen(strmarxan287)) + 2), 1));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2984 */
                cstrcpy(cwritename_6, getMEMINT((int) ((cfnames + 4))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2985 */
                cstrcat(cwritename_6, strmarxan287);
                cfp_5 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 2986
                         */
                        cfopen(cwritename_6, strmarxan198);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2988 */
                if ((((cfp_5) == ((int) (0))) ? 1 : 0) != 0) {
                    startargs(cwritename_6);

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2988 */
                    marxan.cShowErrorMessage((int) (strmarxan288), endargs());

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2989 */
                cfree(cwritename_6);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2991 */
                cfprintf(cfp_5, strmarxan289, 0);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2996 */
                ci_7 = 0;
                lab_marxan87: for (; (((ci_7) < (ciZoneCostCount)) ? 1 : 0) != 0;) {

                    {
                        startargs(getMEMINT((int) (((cZoneCost + ((int) (ci_7) * 16)) + 0))));
                        addarg(getMEMINT((int) (((cZoneCost + ((int) (ci_7) * 16)) + 4))));
                        addarg(getMEMDOUBLE((int) (((cZoneCost + ((int) (ci_7) * 16)) + 8))));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 2995
                         */
                        cfprintf(cfp_5, strmarxan249, endargs());

                    }
                    ci_7++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 2998 */
                cfclose(cfp_5);

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan290 = jtocstr("cannot open PuLock file %s\n");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3002 */

    public static void cLoadPuLock(int ciPuLockCount, int cPuLock, int cfnames) {
        nextlevel();
        if (true) {
            int label = 0;
            int cfp_5 = 0;
            int creadname_6 = 0;
            int csLine_7 = 0;
            int csVarVal_8 = 0;
            int ci_9 = 0;
            int ciLineCount_10 = 0;
            int cid_11 = 0;

            {
                cfp_5 = 0;
                creadname_6 = 0;
                csLine_7 = calloca(1000);
                csVarVal_8 = 0;
                ci_9 = 0;
                ciLineCount_10 = 0;
                cid_11 = 0;
                creadname_6 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3008 */
                ccalloc(((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3008 */
                cstrlen(getMEMINT((int) ((cfnames + 0)))) +
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3008 */
                        cstrlen(getMEMINT((int) ((cfnames + 64))))) + 2), 1));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3009 */
                cstrcpy(creadname_6, getMEMINT((int) ((cfnames + 0))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3010 */
                cstrcat(creadname_6, getMEMINT((int) ((cfnames + 64))));
                cfp_5 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 3011
                         */
                        cfopen(creadname_6, strmarxan191);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3013 */
                if ((((cfp_5) == ((int) (0))) ? 1 : 0) != 0) {
                    startargs(creadname_6);

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3013 */
                    marxan.cShowErrorMessage((int) (strmarxan290), endargs());

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3016 */
                cfgets((int) (csLine_7), 999, cfp_5);
                lab_marxan88: while ((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3017 */
                cfgets((int) (csLine_7), 999, cfp_5)) != 0) {
                    ciLineCount_10++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3019 */
                cfclose(cfp_5);
                setMEMINT((int) (ciPuLockCount), (int) (ciLineCount_10));
                setMEMINT((int) (cPuLock), (int) ((int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3023 */
                ccalloc(ciLineCount_10, 8))));
                cfp_5 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 3026
                         */
                        cfopen(creadname_6, strmarxan191);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3027 */
                cfgets((int) (csLine_7), 999, cfp_5);
                lab_marxan89: while ((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3028 */
                cfgets((int) (csLine_7), 999, cfp_5)) != 0) {

                    {
                        csVarVal_8 =
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 3031
                                 */
                                cstrtok((int) (csLine_7), strmarxan193);
                        startargs(((getMEMINT((int) (cPuLock)) + (ci_9 * 8)) + 0));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 3032
                         */
                        csscanf(csVarVal_8, strmarxan194, endargs());
                        csVarVal_8 =
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 3035
                                 */
                                cstrtok((int) (0), strmarxan193);
                        startargs(((getMEMINT((int) (cPuLock)) + (ci_9 * 8)) + 4));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 3036
                         */
                        csscanf(csVarVal_8, strmarxan194, endargs());
                        ci_9++;

                    }

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3040 */
                cfclose(cfp_5);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3042 */
                cfree(creadname_6);

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan291 = jtocstr("debugPuLock.csv");
    static int strmarxan292 = jtocstr("cannot create DumpPuLock file %s\n");
    static int strmarxan293 = jtocstr("puid,zoneid\n");
    static int strmarxan294 = jtocstr("%d,%d\n");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3046 */

    public static void cDumpPuLock(int ciPuLockCount, int cPuLock, int cfnames) {
        nextlevel();
        if (true) {
            int label = 0;
            int cfp_5 = 0;
            int cwritename_6 = 0;
            int ci_7 = 0;

            {
                cfp_5 = 0;
                cwritename_6 = 0;
                ci_7 = 0;
                cwritename_6 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3051 */
                ccalloc(((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3051 */
                cstrlen(getMEMINT((int) ((cfnames + 4)))) +
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3051 */
                        cstrlen(strmarxan291)) + 2), 1));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3052 */
                cstrcpy(cwritename_6, getMEMINT((int) ((cfnames + 4))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3053 */
                cstrcat(cwritename_6, strmarxan291);
                cfp_5 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 3054
                         */
                        cfopen(cwritename_6, strmarxan198);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3056 */
                if ((((cfp_5) == ((int) (0))) ? 1 : 0) != 0) {
                    startargs(cwritename_6);

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3056 */
                    marxan.cShowErrorMessage((int) (strmarxan292), endargs());

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3057 */
                cfree(cwritename_6);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3059 */
                cfprintf(cfp_5, strmarxan293, 0);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3064 */
                ci_7 = 0;
                lab_marxan90: for (; (((ci_7) < (ciPuLockCount)) ? 1 : 0) != 0;) {

                    {
                        startargs(getMEMINT((int) (((cPuLock + ((int) (ci_7) * 8)) + 0))));
                        addarg(getMEMINT((int) (((cPuLock + ((int) (ci_7) * 8)) + 4))));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 3063
                         */
                        cfprintf(cfp_5, strmarxan294, endargs());

                    }
                    ci_7++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3066 */
                cfclose(cfp_5);

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan295 = jtocstr("cannot open PuZone file %s\n");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3070 */

    public static void cLoadPuZone(int ciPuZoneCount, int cPuZone, int cfnames) {
        nextlevel();
        if (true) {
            int label = 0;
            int cfp_5 = 0;
            int creadname_6 = 0;
            int csLine_7 = 0;
            int csVarVal_8 = 0;
            int ci_9 = 0;
            int ciLineCount_10 = 0;
            int cid_11 = 0;

            {
                cfp_5 = 0;
                creadname_6 = 0;
                csLine_7 = calloca(1000);
                csVarVal_8 = 0;
                ci_9 = 0;
                ciLineCount_10 = 0;
                cid_11 = 0;
                creadname_6 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3076 */
                ccalloc(((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3076 */
                cstrlen(getMEMINT((int) ((cfnames + 0)))) +
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3076 */
                        cstrlen(getMEMINT((int) ((cfnames + 68))))) + 2), 1));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3077 */
                cstrcpy(creadname_6, getMEMINT((int) ((cfnames + 0))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3078 */
                cstrcat(creadname_6, getMEMINT((int) ((cfnames + 68))));
                cfp_5 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 3079
                         */
                        cfopen(creadname_6, strmarxan191);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3081 */
                if ((((cfp_5) == ((int) (0))) ? 1 : 0) != 0) {
                    startargs(creadname_6);

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3081 */
                    marxan.cShowErrorMessage((int) (strmarxan295), endargs());

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3084 */
                cfgets((int) (csLine_7), 999, cfp_5);
                lab_marxan91: while ((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3085 */
                cfgets((int) (csLine_7), 999, cfp_5)) != 0) {
                    ciLineCount_10++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3087 */
                cfclose(cfp_5);
                setMEMINT((int) (ciPuZoneCount), (int) (ciLineCount_10));
                setMEMINT((int) (cPuZone), (int) ((int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3091 */
                ccalloc(ciLineCount_10, 8))));
                cfp_5 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 3094
                         */
                        cfopen(creadname_6, strmarxan191);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3095 */
                cfgets((int) (csLine_7), 999, cfp_5);
                lab_marxan92: while ((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3096 */
                cfgets((int) (csLine_7), 999, cfp_5)) != 0) {

                    {
                        csVarVal_8 =
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 3099
                                 */
                                cstrtok((int) (csLine_7), strmarxan193);
                        startargs(((getMEMINT((int) (cPuZone)) + (ci_9 * 8)) + 0));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 3100
                         */
                        csscanf(csVarVal_8, strmarxan194, endargs());
                        csVarVal_8 =
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 3103
                                 */
                                cstrtok((int) (0), strmarxan193);
                        startargs(((getMEMINT((int) (cPuZone)) + (ci_9 * 8)) + 4));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 3104
                         */
                        csscanf(csVarVal_8, strmarxan194, endargs());
                        ci_9++;

                    }

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3108 */
                cfclose(cfp_5);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3110 */
                cfree(creadname_6);

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan296 = jtocstr("debugPuZone.csv");
    static int strmarxan297 = jtocstr("cannot create DumpPuZone file %s\n");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3114 */

    public static void cDumpPuZone(int ciPuZoneCount, int cPuZone, int cfnames) {
        nextlevel();
        if (true) {
            int label = 0;
            int cfp_5 = 0;
            int cwritename_6 = 0;
            int ci_7 = 0;

            {
                cfp_5 = 0;
                cwritename_6 = 0;
                ci_7 = 0;
                cwritename_6 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3119 */
                ccalloc(((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3119 */
                cstrlen(getMEMINT((int) ((cfnames + 4)))) +
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3119 */
                        cstrlen(strmarxan296)) + 2), 1));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3120 */
                cstrcpy(cwritename_6, getMEMINT((int) ((cfnames + 4))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3121 */
                cstrcat(cwritename_6, strmarxan296);
                cfp_5 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 3122
                         */
                        cfopen(cwritename_6, strmarxan198);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3124 */
                if ((((cfp_5) == ((int) (0))) ? 1 : 0) != 0) {
                    startargs(cwritename_6);

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3124 */
                    marxan.cShowErrorMessage((int) (strmarxan297), endargs());

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3125 */
                cfree(cwritename_6);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3127 */
                cfprintf(cfp_5, strmarxan293, 0);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3132 */
                ci_7 = 0;
                lab_marxan93: for (; (((ci_7) < (ciPuZoneCount)) ? 1 : 0) != 0;) {

                    {
                        startargs(getMEMINT((int) (((cPuZone + ((int) (ci_7) * 8)) + 0))));
                        addarg(getMEMINT((int) (((cPuZone + ((int) (ci_7) * 8)) + 4))));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 3131
                         */
                        cfprintf(cfp_5, strmarxan294, endargs());

                    }
                    ci_7++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3134 */
                cfclose(cfp_5);

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan298 = jtocstr("debugPuZone_.csv");
    static int strmarxan299 = jtocstr("debugPuZone_");
    static int strmarxan300 = jtocstr(".csv");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3138 */

    public static void cDumpPuZone_Debug(int ciPuZoneCount, int cPuZone, int cfnames, int ciMessage) {
        nextlevel();
        if (true) {
            int label = 0;
            int cfp_6 = 0;
            int cwritename_7 = 0;
            int cmessagebuffer_8 = 0;
            int ci_9 = 0;

            {
                cfp_6 = 0;
                cwritename_7 = 0;
                cmessagebuffer_8 = calloca(1000);
                ci_9 = 0;
                startargs(ciMessage);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3144 */
                csprintf((int) (cmessagebuffer_8), strmarxan234, endargs());
                cwritename_7 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3146 */
                ccalloc((((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3146 */
                cstrlen(getMEMINT((int) ((cfnames + 4)))) +
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3146 */
                        cstrlen(strmarxan298)) +
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3146 */
                        cstrlen((int) (cmessagebuffer_8))) + 2), 1));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3147 */
                cstrcpy(cwritename_7, getMEMINT((int) ((cfnames + 4))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3148 */
                cstrcat(cwritename_7, strmarxan299);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3149 */
                cstrcat(cwritename_7, (int) (cmessagebuffer_8));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3150 */
                cstrcat(cwritename_7, strmarxan300);
                cfp_6 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 3151
                         */
                        cfopen(cwritename_7, strmarxan198);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3153 */
                if ((((cfp_6) == ((int) (0))) ? 1 : 0) != 0) {
                    startargs(cwritename_7);

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3153 */
                    marxan.cShowErrorMessage((int) (strmarxan297), endargs());

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3154 */
                cfree(cwritename_7);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3156 */
                cfprintf(cfp_6, strmarxan293, 0);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3161 */
                ci_9 = 0;
                lab_marxan94: for (; (((ci_9) < (ciPuZoneCount)) ? 1 : 0) != 0;) {

                    {
                        startargs(getMEMINT((int) (((cPuZone + ((int) (ci_9) * 8)) + 0))));
                        addarg(getMEMINT((int) (((cPuZone + ((int) (ci_9) * 8)) + 4))));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 3160
                         */
                        cfprintf(cfp_6, strmarxan294, endargs());

                    }
                    ci_9++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3163 */
                cfclose(cfp_6);

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan301 = jtocstr("cannot open RelConnectionCost file %s\n");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3167 */

    public static void cLoadRelConnectionCost(int ciRelConnectionCostCount, int cRelConnectionCost, int cfnames) {
        nextlevel();
        if (true) {
            int label = 0;
            int cfp_5 = 0;
            int creadname_6 = 0;
            int csLine_7 = 0;
            int csVarVal_8 = 0;
            int ci_9 = 0;
            int ciLineCount_10 = 0;
            int cid_11 = 0;

            {
                cfp_5 = 0;
                creadname_6 = 0;
                csLine_7 = calloca(1000);
                csVarVal_8 = 0;
                ci_9 = 0;
                ciLineCount_10 = 0;
                cid_11 = 0;
                creadname_6 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3173 */
                ccalloc(((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3173 */
                cstrlen(getMEMINT((int) ((cfnames + 0)))) +
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3173 */
                        cstrlen(getMEMINT((int) ((cfnames + 72))))) + 2), 1));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3174 */
                cstrcpy(creadname_6, getMEMINT((int) ((cfnames + 0))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3175 */
                cstrcat(creadname_6, getMEMINT((int) ((cfnames + 72))));
                cfp_5 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 3176
                         */
                        cfopen(creadname_6, strmarxan191);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3178 */
                if ((((cfp_5) == ((int) (0))) ? 1 : 0) != 0) {
                    startargs(creadname_6);

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3178 */
                    marxan.cShowErrorMessage((int) (strmarxan301), endargs());

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3181 */
                cfgets((int) (csLine_7), 999, cfp_5);
                lab_marxan95: while ((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3182 */
                cfgets((int) (csLine_7), 999, cfp_5)) != 0) {
                    ciLineCount_10++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3184 */
                cfclose(cfp_5);
                setMEMINT((int) (ciRelConnectionCostCount), (int) (ciLineCount_10));
                setMEMINT((int) (cRelConnectionCost), (int) ((int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3188 */
                ccalloc(ciLineCount_10, 16))));
                cfp_5 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 3191
                         */
                        cfopen(creadname_6, strmarxan191);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3192 */
                cfgets((int) (csLine_7), 999, cfp_5);
                lab_marxan96: while ((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3193 */
                cfgets((int) (csLine_7), 999, cfp_5)) != 0) {

                    {
                        csVarVal_8 =
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 3196
                                 */
                                cstrtok((int) (csLine_7), strmarxan193);
                        startargs(((getMEMINT((int) (cRelConnectionCost)) + (ci_9 * 16)) + 0));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 3197
                         */
                        csscanf(csVarVal_8, strmarxan194, endargs());
                        csVarVal_8 =
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 3200
                                 */
                                cstrtok((int) (0), strmarxan193);
                        startargs(((getMEMINT((int) (cRelConnectionCost)) + (ci_9 * 16)) + 4));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 3201
                         */
                        csscanf(csVarVal_8, strmarxan194, endargs());
                        csVarVal_8 =
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 3204
                                 */
                                cstrtok((int) (0), strmarxan193);
                        startargs(((getMEMINT((int) (cRelConnectionCost)) + (ci_9 * 16)) + 8));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 3205
                         */
                        csscanf(csVarVal_8, strmarxan208, endargs());
                        ci_9++;

                    }

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3209 */
                cfclose(cfp_5);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3211 */
                cfree(creadname_6);

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan302 = jtocstr("debugZoneConnectionCost.csv");
    static int strmarxan303 = jtocstr("cannot create DumpZoneConnectionCost file %s\n");
    static int strmarxan304 = jtocstr("zoneid1,zoneid2,fraction\n");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3215 */

    public static void cDumpRelConnectionCost(int ciRelConnectionCostCount, int cRelConnectionCost, int cfnames) {
        nextlevel();
        if (true) {
            int label = 0;
            int cfp_5 = 0;
            int cwritename_6 = 0;
            int ci_7 = 0;

            {
                cfp_5 = 0;
                cwritename_6 = 0;
                ci_7 = 0;
                cwritename_6 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3220 */
                ccalloc(((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3220 */
                cstrlen(getMEMINT((int) ((cfnames + 4)))) +
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3220 */
                        cstrlen(strmarxan302)) + 2), 1));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3221 */
                cstrcpy(cwritename_6, getMEMINT((int) ((cfnames + 4))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3222 */
                cstrcat(cwritename_6, strmarxan302);
                cfp_5 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 3223
                         */
                        cfopen(cwritename_6, strmarxan198);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3225 */
                if ((((cfp_5) == ((int) (0))) ? 1 : 0) != 0) {
                    startargs(cwritename_6);

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3225 */
                    marxan.cShowErrorMessage((int) (strmarxan303), endargs());

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3226 */
                cfree(cwritename_6);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3228 */
                cfprintf(cfp_5, strmarxan304, 0);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3233 */
                ci_7 = 0;
                lab_marxan97: for (; (((ci_7) < (ciRelConnectionCostCount)) ? 1 : 0) != 0;) {

                    {
                        startargs(getMEMINT((int) (((cRelConnectionCost + ((int) (ci_7) * 16)) + 0))));
                        addarg(getMEMINT((int) (((cRelConnectionCost + ((int) (ci_7) * 16)) + 4))));
                        addarg(getMEMDOUBLE((int) (((cRelConnectionCost + ((int) (ci_7) * 16)) + 8))));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 3232
                         */
                        cfprintf(cfp_5, strmarxan249, endargs());

                    }
                    ci_7++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3235 */
                cfclose(cfp_5);

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan305 = jtocstr("Build_ZoneConnectionCost start\n");
    static int strmarxan306 = jtocstr("Build_ZoneConnectionCost iZoneCount %i iArraySize %i iZoneConnectionCostCount %i\n");
    static int strmarxan307 = jtocstr("Build_ZoneConnectionCost end\n");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3239 */

    public static void cBuild_RelConnectionCost(int ciZoneCount, int ciRelConnectionCostCount, int cRelConnectionCost, int c_RelConnectionCost) {
        nextlevel();
        if (true) {
            int label = 0;
            int ci_6 = 0;
            int cj_7 = 0;
            int ciArraySize_8 = 0;
            double crArraySize_9 = 0;
            int cdebugbuffer_10 = 0;

            {
                ci_6 = 0;
                cj_7 = 0;
                ciArraySize_8 = 0;
                crArraySize_9 = 0;
                cdebugbuffer_10 = calloca(1000);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3245 */
                marxan.cAppendDebugTraceFile((int) (strmarxan305), 0);
                crArraySize_9 = (ciZoneCount * ciZoneCount);
                ciArraySize_8 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3250 */
                cfloor(crArraySize_9));
                startargs(ciZoneCount);
                addarg(ciArraySize_8);
                addarg(ciRelConnectionCostCount);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3253 */
                csprintf((int) (cdebugbuffer_10), strmarxan306, endargs());

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3254 */
                marxan.cAppendDebugTraceFile((int) (cdebugbuffer_10), 0);
                setMEMINT((int) (c_RelConnectionCost), (int) ((int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3258 */
                ccalloc(ciArraySize_8, 8))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3265 */
                cj_7 = 0;
                lab_marxan98: for (; (((cj_7) < (ciZoneCount)) ? 1 : 0) != 0;) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 3264
                         */
                        ci_6 = 0;
                        lab_marxan99: for (; (((ci_6) < (ciZoneCount)) ? 1 : 0) != 0;) {

                            {
                                setMEMDOUBLE((int) ((getMEMINT((int) (c_RelConnectionCost))
                                        + (((cj_7 * ciZoneCount) + ci_6) * 8))), (double) (0));

                            }
                            ci_6++;

                        }

                    }
                    cj_7++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3280 */
                ci_6 = 0;
                lab_marxan100: for (; (((ci_6) < (ciRelConnectionCostCount)) ? 1 : 0) != 0;) {

                    {
                        setMEMDOUBLE((int) ((getMEMINT((int) (c_RelConnectionCost))
                                + ((((getMEMINT((int) (((cRelConnectionCost + ((int) (ci_6) * 16)) + 0))) - 1)
                                        * ciZoneCount)
                                        + (getMEMINT((int) (((cRelConnectionCost + ((int) (ci_6) * 16)) + 4)))
                                                - 1))
                                        * 8))), (double) (getMEMDOUBLE((int) (((cRelConnectionCost
                                                + ((int) (ci_6) * 16)) + 8)))));
                        setMEMDOUBLE((int) ((getMEMINT((int) (c_RelConnectionCost))
                                + ((((getMEMINT((int) (((cRelConnectionCost + ((int) (ci_6) * 16)) + 4))) - 1)
                                        * ciZoneCount)
                                        + (getMEMINT((int) (((cRelConnectionCost + ((int) (ci_6) * 16)) + 0)))
                                                - 1))
                                        * 8))), (double) (getMEMDOUBLE((int) (((cRelConnectionCost
                                                + ((int) (ci_6) * 16)) + 8)))));

                    }
                    ci_6++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3282 */
                marxan.cAppendDebugTraceFile((int) (strmarxan307), 0);

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan308 = jtocstr("Default_RelConnectionCost start\n");
    static int strmarxan309 = jtocstr("Default_RelConnectionCost iZoneCount %i iArraySize %i\n");
    static int strmarxan310 = jtocstr("Default_RelConnectionCost end\n");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3287 */

    public static void cDefault_RelConnectionCost(int ciZoneCount, int c_RelConnectionCost) {
        nextlevel();
        if (true) {
            int label = 0;
            int ci_4 = 0;
            int cj_5 = 0;
            int ciArraySize_6 = 0;
            double crArraySize_7 = 0;
            int cdebugbuffer_8 = 0;

            {
                ci_4 = 0;
                cj_5 = 0;
                ciArraySize_6 = 0;
                crArraySize_7 = 0;
                cdebugbuffer_8 = calloca(1000);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3293 */
                marxan.cAppendDebugTraceFile((int) (strmarxan308), 0);
                crArraySize_7 = (ciZoneCount * ciZoneCount);
                ciArraySize_6 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3298 */
                cfloor(crArraySize_7));
                startargs(ciZoneCount);
                addarg(ciArraySize_6);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3301 */
                csprintf((int) (cdebugbuffer_8), strmarxan309, endargs());

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3302 */
                marxan.cAppendDebugTraceFile((int) (cdebugbuffer_8), 0);
                setMEMINT((int) (c_RelConnectionCost), (int) ((int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3306 */
                ccalloc(ciArraySize_6, 8))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3317 */
                cj_5 = 0;
                lab_marxan101: for (; (((cj_5) < (ciZoneCount)) ? 1 : 0) != 0;) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 3316
                         */
                        ci_4 = 0;
                        lab_marxan102: for (; (((ci_4) < (ciZoneCount)) ? 1 : 0) != 0;) {

                            {
                                setMEMDOUBLE((int) ((getMEMINT((int) (c_RelConnectionCost))
                                        + (((cj_5 * ciZoneCount) + ci_4) * 8))), (double) (0));

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 3313
                                 */
                                if ((((cj_5) == (0)) ? 1 : 0) != 0) {
                                    setMEMDOUBLE((int) ((getMEMINT((int) (c_RelConnectionCost))
                                            + (((cj_5 * ciZoneCount) + ci_4) * 8))), (double) (1));

                                }
                                ;

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 3315
                                 */
                                if ((((ci_4) == (0)) ? 1 : 0) != 0) {
                                    setMEMDOUBLE((int) ((getMEMINT((int) (c_RelConnectionCost))
                                            + (((cj_5 * ciZoneCount) + ci_4) * 8))), (double) (1));

                                }
                                ;

                            }
                            ci_4++;

                        }

                    }
                    cj_5++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3320 */
                marxan.cAppendDebugTraceFile((int) (strmarxan310), 0);

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan311 = jtocstr("Dump_ZoneConnectionCost start\n");
    static int strmarxan312 = jtocstr("debug_ZoneConnectionCost.csv");
    static int strmarxan313 = jtocstr("cannot create Dump_ZoneConnectionCost file %s\n");
    static int strmarxan314 = jtocstr("zoneindex");
    static int strmarxan315 = jtocstr("Dump_ZoneConnectionCost end\n");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3325 */

    public static void cDump_RelConnectionCost(int ciZoneCount, int c_RelConnectionCost, int cfnames) {
        nextlevel();
        if (true) {
            int label = 0;
            int cfp_5 = 0;
            int cwritename_6 = 0;
            int ci_7 = 0;
            int cj_8 = 0;

            {
                cfp_5 = 0;
                cwritename_6 = 0;
                ci_7 = 0;
                cj_8 = 0;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3331 */
                marxan.cAppendDebugTraceFile((int) (strmarxan311), 0);
                cwritename_6 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3334 */
                ccalloc(((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3334 */
                cstrlen(getMEMINT((int) ((cfnames + 4)))) +
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3334 */
                        cstrlen(strmarxan312)) + 2), 1));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3335 */
                cstrcpy(cwritename_6, getMEMINT((int) ((cfnames + 4))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3336 */
                cstrcat(cwritename_6, strmarxan312);
                cfp_5 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 3337
                         */
                        cfopen(cwritename_6, strmarxan198);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3339 */
                if ((((cfp_5) == ((int) (0))) ? 1 : 0) != 0) {
                    startargs(cwritename_6);

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3339 */
                    marxan.cShowErrorMessage((int) (strmarxan313), endargs());

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3340 */
                cfree(cwritename_6);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3342 */
                cfprintf(cfp_5, strmarxan314, 0);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3344 */
                cj_8 = 0;
                lab_marxan103: for (; (((cj_8) < (ciZoneCount)) ? 1 : 0) != 0;) {
                    startargs(cj_8);

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3344 */
                    cfprintf(cfp_5, strmarxan216, endargs());
                    cj_8++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3345 */
                cfprintf(cfp_5, strmarxan137, 0);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3356 */
                cj_8 = 0;
                lab_marxan104: for (; (((cj_8) < (ciZoneCount)) ? 1 : 0) != 0;) {

                    {
                        startargs(cj_8);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 3349
                         */
                        cfprintf(cfp_5, strmarxan194, endargs());

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 3354
                         */
                        ci_7 = 0;
                        lab_marxan105: for (; (((ci_7) < (ciZoneCount)) ? 1 : 0) != 0;) {

                            {
                                startargs(getMEMDOUBLE((int) ((c_RelConnectionCost
                                        + ((int) (((cj_8 * ciZoneCount) + ci_7)) * 8)))));

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 3353
                                 */
                                cfprintf(cfp_5, strmarxan241, endargs());

                            }
                            ci_7++;

                        }

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 3355
                         */
                        cfprintf(cfp_5, strmarxan137, 0);

                    }
                    cj_8++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3358 */
                cfclose(cfp_5);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3361 */
                marxan.cAppendDebugTraceFile((int) (strmarxan315), 0);

            }
        }
        ;
        prevlevel();
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3366 */

    public static void cBuildZoneSpec(int cspno, int ciZoneCount, int cZoneSpec) {
        nextlevel();
        if (true) {
            int label = 0;
            int ci_5 = 0;
            int cj_6 = 0;
            int ciArraySize_7 = 0;
            double crArraySize_8 = 0;
            int cdebugbuffer_9 = 0;

            {
                ci_5 = 0;
                cj_6 = 0;
                ciArraySize_7 = 0;
                crArraySize_8 = 0;
                cdebugbuffer_9 = calloca(1000);
                crArraySize_8 = (cspno * ciZoneCount);
                ciArraySize_7 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3377 */
                cfloor(crArraySize_8));
                setMEMINT((int) (cZoneSpec), (int) ((int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3384 */
                ccalloc(ciArraySize_7, 12))));

            }
        }
        ;
        prevlevel();
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3392 */

    public static void cInitZoneSpec(int cspno, int ciZoneCount, int cZoneSpec) {
        nextlevel();
        if (true) {
            int label = 0;
            int ci_5 = 0;
            int cj_6 = 0;
            int cdebugbuffer_7 = 0;

            {
                ci_5 = 0;
                cj_6 = 0;
                cdebugbuffer_7 = calloca(1000);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3407 */
                cj_6 = 0;
                lab_marxan106: for (; (((cj_6) < (cspno)) ? 1 : 0) != 0;) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 3406
                         */
                        ci_5 = 0;
                        lab_marxan107: for (; (((ci_5) < (ciZoneCount)) ? 1 : 0) != 0;) {

                            {
                                setMEMDOUBLE((int) (((cZoneSpec
                                        + ((int) (((cj_6 * ciZoneCount) + ci_5)) * 12)) + 0)), (double) (0));
                                setMEMINT((int) (((cZoneSpec + ((int) (((cj_6 * ciZoneCount) + ci_5)) * 12))
                                        + 8)), (int) (0));

                            }
                            ci_5++;

                        }

                    }
                    cj_6++;

                }

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan316 = jtocstr("debugZoneSpec_.csv");
    static int strmarxan317 = jtocstr("debugZoneSpec_");
    static int strmarxan318 = jtocstr("cannot create DumpZoneSpec file %s\n");
    static int strmarxan319 = jtocstr("spname,spindex,amount,occurrence,");
    static int strmarxan320 = jtocstr("amount%i,occurrence%i");
    static int strmarxan321 = jtocstr("%i,%i,%lf,%i,");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3415 */

    public static void cDumpZoneSpec(int ciMessage, int cspno, int ciZoneCount, int cZoneSpec, int cspec, int cfnames) {
        nextlevel();
        if (true) {
            int label = 0;
            int cfp_8 = 0;
            int cwritename_9 = 0;
            int ci_10 = 0;
            int cj_11 = 0;
            int cmessagebuffer_12 = 0;
            int cdebugbuffer_13 = 0;

            {
                cfp_8 = 0;
                cwritename_9 = 0;
                ci_10 = 0;
                cj_11 = 0;
                cmessagebuffer_12 = calloca(1000);
                cdebugbuffer_13 = calloca(1000);
                startargs(ciMessage);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3422 */
                csprintf((int) (cmessagebuffer_12), strmarxan234, endargs());
                cwritename_9 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3429 */
                ccalloc((((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3429 */
                cstrlen(getMEMINT((int) ((cfnames + 4)))) +
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3429 */
                        cstrlen(strmarxan316)) +
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3429 */
                        cstrlen((int) (cmessagebuffer_12))) + 2), 1));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3430 */
                cstrcpy(cwritename_9, getMEMINT((int) ((cfnames + 4))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3431 */
                cstrcat(cwritename_9, strmarxan317);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3432 */
                cstrcat(cwritename_9, (int) (cmessagebuffer_12));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3433 */
                cstrcat(cwritename_9, strmarxan300);
                cfp_8 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 3434
                         */
                        cfopen(cwritename_9, strmarxan198);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3436 */
                if ((((cfp_8) == ((int) (0))) ? 1 : 0) != 0) {
                    startargs(cwritename_9);

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3436 */
                    marxan.cShowErrorMessage((int) (strmarxan318), endargs());

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3437 */
                cfree(cwritename_9);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3440 */
                cfprintf(cfp_8, strmarxan319, 0);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3446 */
                ci_10 = 0;
                lab_marxan108: for (; (((ci_10) < (ciZoneCount)) ? 1 : 0) != 0;) {

                    {
                        startargs((ci_10 + 1));
                        addarg((ci_10 + 1));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 3443
                         */
                        cfprintf(cfp_8, strmarxan320, endargs());

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 3445
                         */
                        if ((((ci_10) != ((ciZoneCount - 1))) ? 1 : 0) != 0) {

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 3445
                             */
                            cfprintf(cfp_8, strmarxan212, 0);

                        }
                        ;

                    }
                    ci_10++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3447 */
                cfprintf(cfp_8, strmarxan137, 0);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3460 */
                cj_11 = 0;
                lab_marxan109: for (; (((cj_11) < (cspno)) ? 1 : 0) != 0;) {

                    {
                        startargs(getMEMINT((int) (((cspec + ((int) (cj_11) * 100)) + 0))));
                        addarg(cj_11);
                        addarg(getMEMDOUBLE((int) (((cspec + ((int) (cj_11) * 100)) + 48))));
                        addarg(getMEMINT((int) (((cspec + ((int) (cj_11) * 100)) + 56))));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 3451
                         */
                        cfprintf(cfp_8, strmarxan321, endargs());

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 3458
                         */
                        ci_10 = 0;
                        lab_marxan110: for (; (((ci_10) < (ciZoneCount)) ? 1 : 0) != 0;) {

                            {
                                startargs(getMEMDOUBLE((int) (((cZoneSpec
                                        + ((int) (((cj_11 * ciZoneCount) + ci_10)) * 12)) + 0))));
                                addarg(getMEMINT((int) (((cZoneSpec
                                        + ((int) (((cj_11 * ciZoneCount) + ci_10)) * 12)) + 8))));

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 3455
                                 */
                                cfprintf(cfp_8, strmarxan274, endargs());

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 3457
                                 */
                                if ((((ci_10) != ((ciZoneCount - 1))) ? 1 : 0) != 0) {

                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 3457
                                     */
                                    cfprintf(cfp_8, strmarxan212, 0);

                                }
                                ;

                            }
                            ci_10++;

                        }

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 3459
                         */
                        cfprintf(cfp_8, strmarxan137, 0);

                    }
                    cj_11++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3462 */
                cfclose(cfp_8);

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan322 = jtocstr("%s%i");
    static int strmarxan323 = jtocstr("DumpR %s %i\n");
    static int strmarxan324 = jtocstr("debugR_.csv");
    static int strmarxan325 = jtocstr("debugR_");
    static int strmarxan326 = jtocstr("cannot create DumpR file %s\n");
    static int strmarxan327 = jtocstr("puid,reservedarray\n");
    static int strmarxan328 = jtocstr("%i,%i\n");
    static int strmarxan329 = jtocstr("DumpR %s %i end\n");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3472 */

    public static void cDumpR(int ciMessage, int csMessage, int cpuno, int creservedarray, int cpu, int cfnames) {
        nextlevel();
        if (true) {
            int label = 0;
            int cfp_8 = 0;
            int cwritename_9 = 0;
            int ci_10 = 0;
            int cmessagebuffer_11 = 0;
            int cdebugbuffer_12 = 0;

            {
                cfp_8 = 0;
                cwritename_9 = 0;
                ci_10 = 0;
                cmessagebuffer_11 = calloca(1000);
                cdebugbuffer_12 = calloca(1000);
                startargs(csMessage);
                addarg(ciMessage);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3479 */
                csprintf((int) (cmessagebuffer_11), strmarxan322, endargs());
                startargs(csMessage);
                addarg(ciMessage);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3481 */
                csprintf((int) (cdebugbuffer_12), strmarxan323, endargs());

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3482 */
                marxan.cAppendDebugTraceFile((int) (cdebugbuffer_12), 0);
                cwritename_9 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3484 */
                ccalloc((((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3484 */
                cstrlen(getMEMINT((int) ((cfnames + 4)))) +
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3484 */
                        cstrlen(strmarxan324)) +
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3484 */
                        cstrlen((int) (cmessagebuffer_11))) + 2), 1));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3485 */
                cstrcpy(cwritename_9, getMEMINT((int) ((cfnames + 4))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3486 */
                cstrcat(cwritename_9, strmarxan325);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3487 */
                cstrcat(cwritename_9, (int) (cmessagebuffer_11));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3488 */
                cstrcat(cwritename_9, strmarxan300);
                cfp_8 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 3489
                         */
                        cfopen(cwritename_9, strmarxan198);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3491 */
                if ((((cfp_8) == ((int) (0))) ? 1 : 0) != 0) {
                    startargs(cwritename_9);

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3491 */
                    marxan.cShowErrorMessage((int) (strmarxan326), endargs());

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3492 */
                cfree(cwritename_9);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3495 */
                cfprintf(cfp_8, strmarxan327, 0);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3500 */
                ci_10 = 0;
                lab_marxan111: for (; (((ci_10) < (cpuno)) ? 1 : 0) != 0;) {

                    {
                        startargs(getMEMINT((int) (((cpu + ((int) (ci_10) * 64)) + 0))));
                        addarg(getMEMINT((int) ((creservedarray + ((int) (ci_10) * 4)))));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 3499
                         */
                        cfprintf(cfp_8, strmarxan328, endargs());

                    }
                    ci_10++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3502 */
                cfclose(cfp_8);
                startargs(csMessage);
                addarg(ciMessage);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3504 */
                csprintf((int) (cdebugbuffer_12), strmarxan329, endargs());

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3505 */
                marxan.cAppendDebugTraceFile((int) (cdebugbuffer_12), 0);

            }
        }
        ;
        prevlevel();
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3510 */

    public static void cInitSumSoln(int cpuno, int ciZoneCount, int csumsoln, int cZoneSumSoln) {
        nextlevel();
        if (true) {
            int label = 0;
            int ci_6 = 0;
            int cj_7 = 0;

            {
                ci_6 = 0;
                cj_7 = 0;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3519 */
                ci_6 = 0;
                lab_marxan112: for (; (((ci_6) < (cpuno)) ? 1 : 0) != 0;) {

                    {
                        setMEMINT((int) ((csumsoln + ((int) (ci_6) * 4))), (int) (0));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 3518
                         */
                        cj_7 = 0;
                        lab_marxan113: for (; (((cj_7) < (ciZoneCount)) ? 1 : 0) != 0;) {
                            setMEMINT((int) ((cZoneSumSoln
                                    + ((int) (((cpuno * cj_7) + ci_6)) * 4))), (int) (0));
                            cj_7++;

                        }

                    }
                    ci_6++;

                }

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan330 = jtocstr("debugFileNames.csv");
    static int strmarxan331 = jtocstr("cannot create DumpFileNames file %s\n");
    static int strmarxan332 = jtocstr("input name,file name\n");
    static int strmarxan333 = jtocstr("zonesname,%s\n");
    static int strmarxan334 = jtocstr("costsname,%s\n");
    static int strmarxan335 = jtocstr("zonecontribname,%s\n");
    static int strmarxan336 = jtocstr("zonecontrib2name,%s\n");
    static int strmarxan337 = jtocstr("zonecontrib3name,%s\n");
    static int strmarxan338 = jtocstr("zonetargetname,%s\n");
    static int strmarxan339 = jtocstr("zonetarget2name,%s\n");
    static int strmarxan340 = jtocstr("zonecostname,%s\n");
    static int strmarxan341 = jtocstr("pulockname,%s\n");
    static int strmarxan342 = jtocstr("puzonename,%s\n");
    static int strmarxan343 = jtocstr("zoneconnectioncostname,%s\n");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3523 */

    public static void cDumpFileNames(int cfnames) {
        nextlevel();
        if (true) {
            int label = 0;
            int cfp_3 = 0;
            int cwritename_4 = 0;

            {
                cfp_3 = 0;
                cwritename_4 = 0;
                cwritename_4 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3527 */
                ccalloc(((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3527 */
                cstrlen(getMEMINT((int) ((cfnames + 4)))) +
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3527 */
                        cstrlen(strmarxan330)) + 2), 1));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3528 */
                cstrcpy(cwritename_4, getMEMINT((int) ((cfnames + 4))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3529 */
                cstrcat(cwritename_4, strmarxan330);
                cfp_3 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 3530
                         */
                        cfopen(cwritename_4, strmarxan198);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3532 */
                if ((((cfp_3) == ((int) (0))) ? 1 : 0) != 0) {
                    startargs(cwritename_4);

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3532 */
                    marxan.cShowErrorMessage((int) (strmarxan331), endargs());

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3533 */
                cfree(cwritename_4);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3535 */
                cfprintf(cfp_3, strmarxan332, 0);
                startargs(getMEMINT((int) ((cfnames + 32))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3537 */
                cfprintf(cfp_3, strmarxan333, endargs());
                startargs(getMEMINT((int) ((cfnames + 36))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3538 */
                cfprintf(cfp_3, strmarxan334, endargs());
                startargs(getMEMINT((int) ((cfnames + 40))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3539 */
                cfprintf(cfp_3, strmarxan335, endargs());
                startargs(getMEMINT((int) ((cfnames + 44))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3540 */
                cfprintf(cfp_3, strmarxan336, endargs());
                startargs(getMEMINT((int) ((cfnames + 48))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3541 */
                cfprintf(cfp_3, strmarxan337, endargs());
                startargs(getMEMINT((int) ((cfnames + 52))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3542 */
                cfprintf(cfp_3, strmarxan338, endargs());
                startargs(getMEMINT((int) ((cfnames + 56))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3543 */
                cfprintf(cfp_3, strmarxan339, endargs());
                startargs(getMEMINT((int) ((cfnames + 60))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3544 */
                cfprintf(cfp_3, strmarxan340, endargs());
                startargs(getMEMINT((int) ((cfnames + 64))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3545 */
                cfprintf(cfp_3, strmarxan341, endargs());
                startargs(getMEMINT((int) ((cfnames + 68))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3546 */
                cfprintf(cfp_3, strmarxan342, endargs());
                startargs(getMEMINT((int) ((cfnames + 72))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3547 */
                cfprintf(cfp_3, strmarxan343, endargs());

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3549 */
                cfclose(cfp_3);

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan344 = jtocstr("debugTestrtnAmountSpecAtPu.csv");
    static int strmarxan345 = jtocstr("cannot create TestrtnAmountSpecAtPu file %s\n");
    static int strmarxan346 = jtocstr("puindex,specindex,puname,specname,amount\n");
    static int strmarxan347 = jtocstr("%d,%d,%d,%d,%g\n");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3555 */

    public static void cTestrtnAmountSpecAtPu(int cpuno, int cspno, int cpu, int cspec, int cSM, int cfnames) {
        nextlevel();
        if (true) {
            int label = 0;
            int cfp_8 = 0;
            int ci_9 = 0;
            int cj_10 = 0;
            int cwritename_11 = 0;

            {
                cfp_8 = 0;
                ci_9 = 0;
                cj_10 = 0;
                cwritename_11 = 0;
                cwritename_11 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3560 */
                ccalloc(((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3560 */
                cstrlen(getMEMINT((int) ((cfnames + 4)))) +
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3560 */
                        cstrlen(strmarxan344)) + 2), 1));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3561 */
                cstrcpy(cwritename_11, getMEMINT((int) ((cfnames + 4))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3562 */
                cstrcat(cwritename_11, strmarxan344);
                cfp_8 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 3563
                         */
                        cfopen(cwritename_11, strmarxan198);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3565 */
                if ((((cfp_8) == ((int) (0))) ? 1 : 0) != 0) {
                    startargs(cwritename_11);

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3565 */
                    marxan.cShowErrorMessage((int) (strmarxan345), endargs());

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3566 */
                cfree(cwritename_11);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3567 */
                cfputs(strmarxan346, cfp_8);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3570 */
                ci_9 = 0;
                lab_marxan114: for (; (((ci_9) < (cpuno)) ? 1 : 0) != 0;) {

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3570 */
                    cj_10 = 0;
                    lab_marxan115: for (; (((cj_10) < (cspno)) ? 1 : 0) != 0;) {
                        startargs(ci_9);
                        addarg(cj_10);
                        addarg(getMEMINT((int) (((cpu + ((int) (ci_9) * 64)) + 0))));
                        addarg(getMEMINT((int) (((cspec + ((int) (cj_10) * 100)) + 0))));
                        addarg(
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 3570
                                 */
                                marxan.crtnAmountSpecAtPu((int) (cpu), (int) (cSM), ci_9, cj_10));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 3570
                         */
                        cfprintf(cfp_8, strmarxan347, endargs());
                        cj_10++;

                    }
                    ci_9++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3572 */
                cfclose(cfp_8);

            }
        }
        ;
        prevlevel();
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3606 */

    public static int crtnIdxSpecAtPu(int cPU, int cSM, int ciPUIndex, int ciSpecIndex) {
        nextlevel();
        if (true) {
            int label = 0;
            int retval = 0;
            int ci_7 = 0;

            {
                ci_7 = 0;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3612 */
                if ((((getMEMINT((int) (((cPU + ((int) (ciPUIndex) * 64)) + 32)))) > (0)) ? 1 : 0) != 0) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 3616
                         */
                        ci_7 = 0;
                        lab_marxan116: for (; (((ci_7) < (getMEMINT((int) (((cPU + ((int) (ciPUIndex) * 64))
                                + 32))))) ? 1 : 0) != 0;) {

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 3615
                             */
                            if ((((getMEMINT((int) (((cSM
                                    + ((int) ((getMEMINT((int) (((cPU + ((int) (ciPUIndex) * 64)) + 36)))
                                            + ci_7)) * 16))
                                    + 12)))) == (ciSpecIndex)) ? 1 : 0) != 0) {
                                retval = (getMEMINT((int) (((cPU + ((int) (ciPUIndex) * 64)) + 36))) + ci_7);
                                if (true) {
                                    prevlevel();
                                    return retval;
                                }
                                ;

                            }
                            ;
                            ci_7++;

                        }

                    }

                }
                ;
                retval = (-(1));
                if (true) {
                    prevlevel();
                    return retval;
                }
                ;

            }
        }
        ;
        prevlevel();
        return 0;
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3653 */

    public static int crtnClumpSpecAtPu(int cPU, int cSM, int ciPUIndex, int ciSpecIndex) {
        nextlevel();
        if (true) {
            int label = 0;
            int retval = 0;
            int ci_7 = 0;

            {
                ci_7 = 0;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3657 */
                if ((((getMEMINT((int) (((cPU + ((int) (ciPUIndex) * 64)) + 32)))) > (0)) ? 1 : 0) != 0) {

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3667 */
                    ci_7 = 0;
                    lab_marxan117: for (; (((ci_7) < (getMEMINT((int) (((cPU + ((int) (ciPUIndex) * 64))
                            + 32))))) ? 1 : 0) != 0;) {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 3659
                         */
                        if ((((getMEMINT((int) (((cSM
                                + ((int) ((getMEMINT((int) (((cPU + ((int) (ciPUIndex) * 64)) + 36))) + ci_7))
                                        * 16))
                                + 12)))) == (ciSpecIndex)) ? 1 : 0) != 0) {
                            retval = getMEMINT((int) (((cSM
                                    + ((int) ((getMEMINT((int) (((cPU + ((int) (ciPUIndex) * 64)) + 36)))
                                            + ci_7)) * 16))
                                    + 8)));
                            if (true) {
                                prevlevel();
                                return retval;
                            }
                            ;

                        }
                        ;
                        ci_7++;

                    }

                }
                ;
                retval = 0;
                if (true) {
                    prevlevel();
                    return retval;
                }
                ;

            }
        }
        ;
        prevlevel();
        return 0;
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3672 */

    public static void csetClumpSpecAtPu(int cPU, int cSM, int ciPUIndex, int ciSpecIndex, int ciSetClump) {
        nextlevel();
        if (true) {
            int label = 0;
            int ci_7 = 0;

            {
                ci_7 = 0;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3676 */
                if ((((getMEMINT((int) (((cPU + ((int) (ciPUIndex) * 64)) + 32)))) > (0)) ? 1 : 0) != 0) {

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3684 */
                    ci_7 = 0;
                    lab_marxan118: for (; (((ci_7) < (getMEMINT((int) (((cPU + ((int) (ciPUIndex) * 64))
                            + 32))))) ? 1 : 0) != 0;) {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 3678
                         */
                        if ((((getMEMINT((int) (((cSM
                                + ((int) ((getMEMINT((int) (((cPU + ((int) (ciPUIndex) * 64)) + 36))) + ci_7))
                                        * 16))
                                + 12)))) == (ciSpecIndex)) ? 1 : 0) != 0) {
                            setMEMINT((int) (((cSM
                                    + ((int) ((getMEMINT((int) (((cPU + ((int) (ciPUIndex) * 64)) + 36)))
                                            + ci_7)) * 16))
                                    + 8)), (int) (ciSetClump));

                        }
                        ;
                        ci_7++;

                    }

                }
                ;

            }
        }
        ;
        prevlevel();
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3688 */

    public static double crtnAmountSpecAtPu(int cPU, int cSM, int ciPUIndex, int ciSpecIndex) {
        nextlevel();
        if (true) {
            int label = 0;
            double retval = 0;
            int ci_7 = 0;

            {
                ci_7 = 0;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3692 */
                if ((((getMEMINT((int) (((cPU + ((int) (ciPUIndex) * 64)) + 32)))) > (0)) ? 1 : 0) != 0) {

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3696 */
                    ci_7 = 0;
                    lab_marxan119: for (; (((ci_7) < (getMEMINT((int) (((cPU + ((int) (ciPUIndex) * 64))
                            + 32))))) ? 1 : 0) != 0;) {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 3694
                         */
                        if ((((getMEMINT((int) (((cSM
                                + ((int) ((getMEMINT((int) (((cPU + ((int) (ciPUIndex) * 64)) + 36))) + ci_7))
                                        * 16))
                                + 12)))) == (ciSpecIndex)) ? 1 : 0) != 0) {
                            retval = getMEMDOUBLE((int) (((cSM
                                    + ((int) ((getMEMINT((int) (((cPU + ((int) (ciPUIndex) * 64)) + 36)))
                                            + ci_7)) * 16))
                                    + 0)));
                            if (true) {
                                prevlevel();
                                return retval;
                            }
                            ;

                        }
                        ;
                        ci_7++;

                    }

                }
                ;
                retval = 0;
                if (true) {
                    prevlevel();
                    return retval;
                }
                ;

            }
        }
        ;
        prevlevel();
        return 0;
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3731 */

    public static double crtnConvertZoneAmount(int ciZone, int ciSpecIndex, int ciPUIndex, int cpuno, double crAmount) {
        nextlevel();
        if (true) {
            int label = 0;
            double retval = 0;

            {

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3733 */
                if ((((getMEMINT((int) (marxan.ciZoneContrib3On))) == (1)) ? 1 : 0) != 0) {
                    retval = (getMEMDOUBLE((int) ((getMEMINT((int) (marxan.c_ZoneContrib))
                            + (((((ciSpecIndex * cpuno) * getMEMINT((int) (marxan.ciZoneCount)))
                                    + (ciPUIndex * getMEMINT((int) (marxan.ciZoneCount)))) + ciZone) * 8))))
                            * crAmount);
                    if (true) {
                        prevlevel();
                        return retval;
                    }
                    ;

                } else {
                    retval = (getMEMDOUBLE((int) ((getMEMINT((int) (marxan.c_ZoneContrib))
                            + (((ciSpecIndex * getMEMINT((int) (marxan.ciZoneCount))) + ciZone) * 8))))
                            * crAmount);
                    if (true) {
                        prevlevel();
                        return retval;
                    }
                    ;

                }
                ;

            }
        }
        ;
        prevlevel();
        return 0;
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3739 */

    public static void cParsePuLock(int cpuno, int cpu, int ciPuLockCount, int cPuLock, int cPULookup) {
        nextlevel();
        if (true) {
            int label = 0;
            int ci_7 = 0;
            int ciPUIndex_8 = 0;

            {
                ci_7 = 0;
                ciPUIndex_8 = 0;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3749 */
                ci_7 = 0;
                lab_marxan120: for (; (((ci_7) < (ciPuLockCount)) ? 1 : 0) != 0;) {

                    {
                        ciPUIndex_8 =
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 3744
                                 */
                                marxan.cFastPUIDtoPUINDEX(cpuno, getMEMINT((int) (((cPuLock
                                        + ((int) (ci_7) * 8)) + 0))), (int) (cPULookup));
                        setMEMINT((int) (((cpu + ((int) (ciPUIndex_8) * 64)) + 40)), (int) (1));
                        setMEMINT((int) (((cpu + ((int) (ciPUIndex_8) * 64))
                                + 44)), (int) (getMEMINT((int) (((cPuLock + ((int) (ci_7) * 8)) + 4)))));

                    }
                    ci_7++;

                }

            }
        }
        ;
        prevlevel();
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3753 */

    public static void cParsePuZone(int cpuno, int cpu, int ciPuZoneCount, int cPuZone, int cPULookup) {
        nextlevel();
        if (true) {
            int label = 0;
            int ci_7 = 0;
            int ciPUIndex_8 = 0;

            {
                ci_7 = 0;
                ciPUIndex_8 = 0;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3765 */
                ci_7 = 0;
                lab_marxan121: for (; (((ci_7) < (ciPuZoneCount)) ? 1 : 0) != 0;) {

                    {
                        ciPUIndex_8 =
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 3758
                                 */
                                marxan.cFastPUIDtoPUINDEX(cpuno, getMEMINT((int) (((cPuZone
                                        + ((int) (ci_7) * 8)) + 0))), (int) (cPULookup));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 3762
                         */
                        if ((((getMEMINT((int) (((cpu + ((int) (ciPUIndex_8) * 64)) + 48)))) == (0)) ? 1
                                : 0) != 0) {
                            setMEMINT((int) (((cpu + ((int) (ciPUIndex_8) * 64)) + 52)), (int) (ci_7));

                        }
                        ;
                        setMEMINT((int) (((cpu + ((int) (ciPUIndex_8) * 64)) + 48)), (int) (1));
                        sincMEMINT((int) (((cpu + ((int) (ciPUIndex_8) * 64)) + 56)), +1);

                    }
                    ci_7++;

                }

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan348 = jtocstr("Error: planning unit %i is locked to a single zone in %s.\nDo not use this file to lock planning units to a single zone; use pulock.dat for this purpose.\nAborting Program.\n");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3769 */

    public static void cCheckPuZone(int cpuno, int cpu) {
        nextlevel();
        if (true) {
            int label = 0;
            int ci_4 = 0;
            int cdebugbuffer_5 = 0;

            {
                ci_4 = 0;
                cdebugbuffer_5 = calloca(500);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3787 */
                ci_4 = 0;
                lab_marxan122: for (; (((ci_4) < (cpuno)) ? 1 : 0) != 0;) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 3778
                         */
                        if ((((getMEMINT((int) (((cpu + ((int) (ci_4) * 64)) + 56)))) == (1)) ? 1 : 0) != 0) {

                            {
                                startargs(getMEMINT((int) (((cpu + ((int) (ci_4) * 64)) + 0))));
                                addarg(getMEMINT((int) ((marxan.cfnames + 68))));

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 3781
                                 */
                                csprintf((int) (cdebugbuffer_5), strmarxan348, endargs());

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 3782
                                 */
                                marxan.cAppendDebugTraceFile((int) (cdebugbuffer_5), 0);
                                startargs(getMEMINT((int) (((cpu + ((int) (ci_4) * 64)) + 0))));
                                addarg(getMEMINT((int) ((marxan.cfnames + 68))));

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 3785
                                 */
                                marxan.cShowErrorMessage((int) (strmarxan348), endargs());

                            }

                        }
                        ;

                    }
                    ci_4++;

                }

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan349 = jtocstr("debugPuLockZone.csv");
    static int strmarxan350 = jtocstr("cannot create DumpPuLockZone file %s\n");
    static int strmarxan351 = jtocstr("id,fPULock,iPULock,fPUZone,iPUZone,iPUZones,iPreviousStatus\n");
    static int strmarxan352 = jtocstr("%d,%d,%d,%d,%d,%d,%d\n");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3791 */

    public static void cDumpPuLockZone(int cpuno, int cpu) {
        nextlevel();
        if (true) {
            int label = 0;
            int cfp_4 = 0;
            int cwritename_5 = 0;
            int ci_6 = 0;

            {
                cfp_4 = 0;
                cwritename_5 = 0;
                ci_6 = 0;
                cwritename_5 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3796 */
                ccalloc(((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3796 */
                cstrlen(getMEMINT((int) ((marxan.cfnames + 4)))) +
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3796 */
                        cstrlen(strmarxan349)) + 2), 1));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3797 */
                cstrcpy(cwritename_5, getMEMINT((int) ((marxan.cfnames + 4))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3798 */
                cstrcat(cwritename_5, strmarxan349);
                cfp_4 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 3799
                         */
                        cfopen(cwritename_5, strmarxan198);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3801 */
                if ((((cfp_4) == ((int) (0))) ? 1 : 0) != 0) {
                    startargs(cwritename_5);

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3801 */
                    marxan.cShowErrorMessage((int) (strmarxan350), endargs());

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3802 */
                cfree(cwritename_5);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3804 */
                cfprintf(cfp_4, strmarxan351, 0);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3808 */
                ci_6 = 0;
                lab_marxan123: for (; (((ci_6) < (cpuno)) ? 1 : 0) != 0;) {

                    {
                        startargs(getMEMINT((int) (((cpu + ((int) (ci_6) * 64)) + 0))));
                        addarg(getMEMINT((int) (((cpu + ((int) (ci_6) * 64)) + 40))));
                        addarg(getMEMINT((int) (((cpu + ((int) (ci_6) * 64)) + 44))));
                        addarg(getMEMINT((int) (((cpu + ((int) (ci_6) * 64)) + 48))));
                        addarg(getMEMINT((int) (((cpu + ((int) (ci_6) * 64)) + 52))));
                        addarg(getMEMINT((int) (((cpu + ((int) (ci_6) * 64)) + 56))));
                        addarg(getMEMINT((int) (((cpu + ((int) (ci_6) * 64)) + 60))));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 3807
                         */
                        cfprintf(cfp_4, strmarxan352, endargs());

                    }
                    ci_6++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3810 */
                cfclose(cfp_4);

            }
        }
        ;
        prevlevel();
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3815 */

    public static void cSetBlockDefs(int cgspno, int cspno, int cpuno, int cgspec, int cspec, int cPU, int cSM) {
        nextlevel();
        if (true) {
            int label = 0;
            int cigsp_9 = 0;
            int cisp_10 = 0;
            int cipu_11 = 0;
            double ctotalamount_12 = 0;

            {
                cigsp_9 = 0;
                cisp_10 = 0;
                cipu_11 = 0;
                ctotalamount_12 = 0;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3860 */
                cigsp_9 = 0;
                lab_marxan124: for (; (((cigsp_9) < (cgspno)) ? 1 : 0) != 0;) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 3822
                         */
                        if ((((getMEMDOUBLE((int) (((cgspec + ((int) (cigsp_9) * 52)) + 36)))) > (0)) ? 1
                                : 0) != 0) {

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 3829
                             */
                            cisp_10 = 0;
                            lab_marxan125: for (; (((cisp_10) < (cspno)) ? 1 : 0) != 0;) {

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 3824
                                 */
                                if (((((((getMEMINT((int) (((cspec + ((int) (cisp_10) * 100))
                                        + 4)))) == (getMEMINT((int) (((cgspec + ((int) (cigsp_9) * 52))
                                                + 0))))) ? 1 : 0)) != 0)
                                                        ? ((((getMEMDOUBLE((int) (((cspec
                                                                + ((int) (cisp_10) * 100)) + 12)))) < (0)) ? 1
                                                                        : 0))
                                                        : 0) != 0) {

                                    {

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 3826
                                         */
                                        cipu_11 = 0;
                                        ctotalamount_12 = 0;
                                        lab_marxan126: for (; (((cipu_11) < (cpuno)) ? 1 : 0) != 0;) {
                                            ctotalamount_12 +=
                                                    /*
                                                     * file
                                                     * E:/git/klab-ecology-component/etc/
                                                     * marxan/marxan.c line 3826
                                                     */
                                                    crtnAmountSpecAtPu((int) (cPU), (int) (cSM), cipu_11, cisp_10);
                                            cipu_11++;

                                        }
                                        setMEMDOUBLE((int) (((cspec + ((int) (cisp_10) * 100))
                                                + 12)), (double) ((ctotalamount_12
                                                        * getMEMDOUBLE((int) (((cgspec
                                                                + ((int) (cigsp_9) * 52)) + 36))))));

                                    }

                                }
                                ;
                                cisp_10++;

                            }

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 3830
                         */
                        if ((((getMEMDOUBLE((int) (((cgspec + ((int) (cigsp_9) * 52)) + 8)))) > (0)) ? 1
                                : 0) != 0) {

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 3833
                             */
                            cisp_10 = 0;
                            lab_marxan127: for (; (((cisp_10) < (cspno)) ? 1 : 0) != 0;) {

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 3832
                                 */
                                if (((((((getMEMINT((int) (((cspec + ((int) (cisp_10) * 100))
                                        + 4)))) == (getMEMINT((int) (((cgspec + ((int) (cigsp_9) * 52))
                                                + 0))))) ? 1 : 0)) != 0)
                                                        ? ((((getMEMDOUBLE((int) (((cspec
                                                                + ((int) (cisp_10) * 100)) + 12)))) < (0)) ? 1
                                                                        : 0))
                                                        : 0) != 0) {
                                    setMEMDOUBLE((int) (((cspec + ((int) (cisp_10) * 100))
                                            + 12)), (double) (getMEMDOUBLE((int) (((cgspec
                                                    + ((int) (cigsp_9) * 52)) + 8)))));

                                }
                                ;
                                cisp_10++;

                            }

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 3834
                         */
                        if ((((getMEMDOUBLE((int) (((cgspec + ((int) (cigsp_9) * 52)) + 16)))) > (0)) ? 1
                                : 0) != 0) {

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 3840
                             */
                            cisp_10 = 0;
                            lab_marxan128: for (; (((cisp_10) < (cspno)) ? 1 : 0) != 0;) {

                                {

                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 3837
                                     */
                                    if (((((((getMEMINT((int) (((cspec + ((int) (cisp_10) * 100))
                                            + 4)))) == (getMEMINT((int) (((cgspec + ((int) (cigsp_9) * 52))
                                                    + 0))))) ? 1 : 0)) != 0)
                                                            ? ((((getMEMDOUBLE((int) (((cspec
                                                                    + ((int) (cisp_10) * 100)) + 80)))) < (0))
                                                                            ? 1 : 0))
                                                            : 0) != 0) {

                                        {
                                            setMEMDOUBLE((int) (((cspec + ((int) (cisp_10) * 100))
                                                    + 80)), (double) (getMEMDOUBLE((int) (((cgspec
                                                            + ((int) (cigsp_9) * 52)) + 16)))));

                                        }

                                    }
                                    ;

                                }
                                cisp_10++;

                            }

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 3842
                         */
                        if ((((getMEMINT((int) (((cgspec + ((int) (cigsp_9) * 52)) + 4)))) > (0)) ? 1
                                : 0) != 0) {

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 3845
                             */
                            cisp_10 = 0;
                            lab_marxan129: for (; (((cisp_10) < (cspno)) ? 1 : 0) != 0;) {

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 3844
                                 */
                                if (((((((getMEMINT((int) (((cspec + ((int) (cisp_10) * 100))
                                        + 4)))) == (getMEMINT((int) (((cgspec + ((int) (cigsp_9) * 52))
                                                + 0))))) ? 1 : 0)) != 0)
                                                        ? ((((getMEMINT((int) (((cspec
                                                                + ((int) (cisp_10) * 100)) + 28)))) < (0)) ? 1
                                                                        : 0))
                                                        : 0) != 0) {
                                    setMEMINT((int) (((cspec + ((int) (cisp_10) * 100))
                                            + 28)), (int) (getMEMINT((int) (((cgspec + ((int) (cigsp_9) * 52))
                                                    + 4)))));

                                }
                                ;
                                cisp_10++;

                            }

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 3846
                         */
                        if ((((getMEMINT((int) (((cgspec + ((int) (cigsp_9) * 52)) + 24)))) > (0)) ? 1
                                : 0) != 0) {

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 3849
                             */
                            cisp_10 = 0;
                            lab_marxan130: for (; (((cisp_10) < (cspno)) ? 1 : 0) != 0;) {

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 3848
                                 */
                                if (((((((getMEMINT((int) (((cspec + ((int) (cisp_10) * 100))
                                        + 4)))) == (getMEMINT((int) (((cgspec + ((int) (cigsp_9) * 52))
                                                + 0))))) ? 1 : 0)) != 0)
                                                        ? ((((getMEMINT((int) (((cspec
                                                                + ((int) (cisp_10) * 100)) + 68)))) < (0)) ? 1
                                                                        : 0))
                                                        : 0) != 0) {
                                    setMEMINT((int) (((cspec + ((int) (cisp_10) * 100))
                                            + 68)), (int) (getMEMINT((int) (((cgspec + ((int) (cigsp_9) * 52))
                                                    + 24)))));

                                }
                                ;
                                cisp_10++;

                            }

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 3850
                         */
                        if ((((getMEMDOUBLE((int) (((cgspec + ((int) (cigsp_9) * 52)) + 44)))) > (0)) ? 1
                                : 0) != 0) {

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 3853
                             */
                            cisp_10 = 0;
                            lab_marxan131: for (; (((cisp_10) < (cspno)) ? 1 : 0) != 0;) {

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 3852
                                 */
                                if (((((((getMEMINT((int) (((cspec + ((int) (cisp_10) * 100))
                                        + 4)))) == (getMEMINT((int) (((cgspec + ((int) (cigsp_9) * 52))
                                                + 0))))) ? 1 : 0)) != 0)
                                                        ? ((((getMEMDOUBLE((int) (((cspec
                                                                + ((int) (cisp_10) * 100)) + 32)))) < (0)) ? 1
                                                                        : 0))
                                                        : 0) != 0) {
                                    setMEMDOUBLE((int) (((cspec + ((int) (cisp_10) * 100))
                                            + 32)), (double) (getMEMDOUBLE((int) (((cgspec
                                                    + ((int) (cigsp_9) * 52)) + 44)))));

                                }
                                ;
                                cisp_10++;

                            }

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 3854
                         */
                        if ((((getMEMDOUBLE((int) (((cgspec + ((int) (cigsp_9) * 52)) + 28)))) > (0)) ? 1
                                : 0) != 0) {

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 3860
                             */
                            cisp_10 = 0;
                            lab_marxan132: for (; (((cisp_10) < (cspno)) ? 1 : 0) != 0;) {

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 3856
                                 */
                                if (((((((getMEMINT((int) (((cspec + ((int) (cisp_10) * 100))
                                        + 4)))) == (getMEMINT((int) (((cgspec + ((int) (cigsp_9) * 52))
                                                + 0))))) ? 1 : 0)) != 0)
                                                        ? ((((getMEMDOUBLE((int) (((cspec
                                                                + ((int) (cisp_10) * 100)) + 60)))) < (0)) ? 1
                                                                        : 0))
                                                        : 0) != 0) {
                                    setMEMDOUBLE((int) (((cspec + ((int) (cisp_10) * 100))
                                            + 60)), (double) (getMEMDOUBLE((int) (((cgspec
                                                    + ((int) (cigsp_9) * 52)) + 28)))));

                                }
                                ;
                                cisp_10++;

                            }

                        }
                        ;

                    }
                    cigsp_9++;

                }

            }
        }
        ;
        prevlevel();
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3867 */

    public static void cSetDefs(int cspno, int cspec) {
        nextlevel();
        if (true) {
            int label = 0;
            int cisp_4 = 0;

            {
                cisp_4 = 0;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3884 */
                cisp_4 = 0;
                lab_marxan133: for (; (((cisp_4) < (cspno)) ? 1 : 0) != 0;) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 3873
                         */
                        if ((((getMEMDOUBLE((int) (((cspec + ((int) (cisp_4) * 100)) + 12)))) < (0)) ? 1
                                : 0) != 0) {
                            setMEMDOUBLE((int) (((cspec + ((int) (cisp_4) * 100)) + 12)), (double) (0));

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 3875
                         */
                        if ((((getMEMDOUBLE((int) (((cspec + ((int) (cisp_4) * 100)) + 80)))) < (0)) ? 1
                                : 0) != 0) {
                            setMEMDOUBLE((int) (((cspec + ((int) (cisp_4) * 100)) + 80)), (double) (0));

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 3877
                         */
                        if ((((getMEMINT((int) (((cspec + ((int) (cisp_4) * 100)) + 28)))) < (0)) ? 1
                                : 0) != 0) {
                            setMEMINT((int) (((cspec + ((int) (cisp_4) * 100)) + 28)), (int) (0));

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 3879
                         */
                        if ((((getMEMINT((int) (((cspec + ((int) (cisp_4) * 100)) + 68)))) < (0)) ? 1
                                : 0) != 0) {
                            setMEMINT((int) (((cspec + ((int) (cisp_4) * 100)) + 68)), (int) (0));

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 3881
                         */
                        if ((((getMEMDOUBLE((int) (((cspec + ((int) (cisp_4) * 100)) + 60)))) < (0)) ? 1
                                : 0) != 0) {
                            setMEMDOUBLE((int) (((cspec + ((int) (cisp_4) * 100)) + 60)), (double) (0));

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 3883
                         */
                        if ((((getMEMDOUBLE((int) (((cspec + ((int) (cisp_4) * 100)) + 32)))) < (0)) ? 1
                                : 0) != 0) {
                            setMEMDOUBLE((int) (((cspec + ((int) (cisp_4) * 100)) + 32)), (double) (1));

                        }
                        ;

                    }
                    cisp_4++;

                }

            }
        }
        ;
        prevlevel();
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3889 */

    public static void cSetRunOptions(int crunopts, int crunoptions) {
        nextlevel();
        if (true) {
            int label = 0;

            {

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3891 */
                if ((((crunopts) < (0)) ? 1 : 0) != 0) {
                    if (true) {
                        prevlevel();
                        return;
                    }
                    ;

                }
                ;
                lab_marxan134: {
                    switch ((int) (crunopts))

                    {

                    case 0:
                        setMEMINT((int) ((crunoptions + 0)), (int) (1));
                        setMEMINT((int) ((crunoptions + 4)), (int) (1));
                        setMEMINT((int) ((crunoptions + 8)), (int) (0));
                        if (true) {
                            break lab_marxan134;
                        }
                        ;

                    case 1:
                        setMEMINT((int) ((crunoptions + 0)), (int) (1));
                        setMEMINT((int) ((crunoptions + 4)), (int) (0));
                        setMEMINT((int) ((crunoptions + 8)), (int) (1));
                        if (true) {
                            break lab_marxan134;
                        }
                        ;

                    case 2:
                        setMEMINT((int) ((crunoptions + 0)), (int) (1));
                        setMEMINT((int) ((crunoptions + 4)), (int) (1));
                        setMEMINT((int) ((crunoptions + 8)), (int) (1));
                        if (true) {
                            break lab_marxan134;
                        }
                        ;

                    case 3:
                        setMEMINT((int) ((crunoptions + 0)), (int) (0));
                        setMEMINT((int) ((crunoptions + 4)), (int) (1));
                        setMEMINT((int) ((crunoptions + 8)), (int) (0));
                        if (true) {
                            break lab_marxan134;
                        }
                        ;

                    case 4:
                        setMEMINT((int) ((crunoptions + 0)), (int) (0));
                        setMEMINT((int) ((crunoptions + 4)), (int) (0));
                        setMEMINT((int) ((crunoptions + 8)), (int) (1));
                        if (true) {
                            break lab_marxan134;
                        }
                        ;

                    case 5:
                        setMEMINT((int) ((crunoptions + 0)), (int) (0));
                        setMEMINT((int) ((crunoptions + 4)), (int) (1));
                        setMEMINT((int) ((crunoptions + 8)), (int) (1));
                        if (true) {
                            break lab_marxan134;
                        }
                        ;

                    case 6:
                        setMEMINT((int) ((crunoptions + 0)), (int) (1));
                        setMEMINT((int) ((crunoptions + 4)), (int) (0));
                        setMEMINT((int) ((crunoptions + 8)), (int) (0));
                        if (true) {
                            break lab_marxan134;
                        }
                        ;

                    default:
                        setMEMINT((int) ((crunoptions + 0)), (int) (0));
                        setMEMINT((int) ((crunoptions + 4)), (int) (0));
                        setMEMINT((int) ((crunoptions + 8)), (int) (0));
                        if (true) {
                            break lab_marxan134;
                        }
                        ;

                    }

                }

            }
        }
        ;
        prevlevel();
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3933 */

    public static int cPuNotInAllowedZone(int cGivenPu, int ciStatus, int cPuZone, int ciLoopCounter, byte ccCall) {
        nextlevel();
        if (true) {
            int label = 0;
            int retval = 0;
            int ci_8 = 0;
            int ciReturn_9 = 0;

            {
                ci_8 = 0;
                ciReturn_9 = 1;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3959 */
                ci_8 = 0;
                lab_marxan135: for (; (((ci_8) < (getMEMINT((int) ((cGivenPu + 56))))) ? 1 : 0) != 0;) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 3958
                         */
                        if ((((getMEMINT((int) (((cPuZone
                                + ((int) ((getMEMINT((int) ((cGivenPu + 52))) + ci_8)) * 8))
                                + 4)))) == (ciStatus)) ? 1 : 0) != 0) {
                            ciReturn_9 = 0;

                        }
                        ;

                    }
                    ci_8++;

                }
                retval = ciReturn_9;
                if (true) {
                    prevlevel();
                    return retval;
                }
                ;

            }
        }
        ;
        prevlevel();
        return 0;
    }

    static int strmarxan353 = jtocstr("PuZone endless loop in InitialiseReserve detected\n");
    static int strmarxan354 = jtocstr("puid %i R %i\n");
    static int strmarxan355 = jtocstr("\nPuZone endless loop in InitialiseReserve detected\n");
    static int strmarxan356 = jtocstr("Internal error detected.  Please inform the Marxan with Zones developers.\n\n");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 3975 */

    public static void cInitialiseReserve(int cpuno, int cpu, int cR, int ciZoneCount, int cPuZone) {
        nextlevel();
        if (true) {
            int label = 0;
            int ci_7 = 0;
            int ciRandNum_8 = 0;
            int ciLoopCounter_9 = 0;
            int cdebugbuffer_10 = 0;

            {
                ci_7 = 0;
                ciRandNum_8 = 0;
                ciLoopCounter_9 = 0;
                cdebugbuffer_10 = calloca(1000);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 4023 */
                ci_7 = 0;
                lab_marxan136: for (; (((ci_7) < (cpuno)) ? 1 : 0) != 0;) {

                    {
                        setMEMINT((int) ((cR + ((int) (ci_7) * 4))), (int) (1));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 3997
                         */
                        if ((((getMEMINT((int) (((cpu + ((int) (ci_7) * 64)) + 4)))) > (0)) ? 1 : 0) != 0) {
                            setMEMINT((int) ((cR + ((int) (ci_7)
                                    * 4))), (int) (getMEMINT((int) (((cpu + ((int) (ci_7) * 64)) + 4)))));

                        }
                        ;
                        ciLoopCounter_9 = 0;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 4002
                         */
                        if ((((getMEMINT((int) (((cpu + ((int) (ci_7) * 64)) + 48)))) == (1)) ? 1 : 0) != 0) {
                            lab_marxan137: while ((
                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 4002
                             */
                            cPuNotInAllowedZone((int) ((cpu
                                    + ((int) (ci_7) * 64))), getMEMINT((int) ((cR + ((int) (ci_7)
                                            * 4)))), (int) (cPuZone), ciLoopCounter_9, (byte) (105))) != 0) {

                                {
                                    setMEMINT((int) ((cR + ((int) (ci_7) * 4))), (int) ((
                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 4004
                                     */
                                    marxan.cRandNum(ciZoneCount) + 1)));
                                    ciLoopCounter_9++;

                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 4008
                                     */
                                    if ((((ciLoopCounter_9) > (5000)) ? 1 : 0) != 0) {

                                        {

                                            /*
                                             * file
                                             * E:/git/klab-ecology-component/etc/marxan/
                                             * marxan.c line 4010
                                             */
                                            cDumpPuZone_Debug(getMEMINT((int) (marxan.ciPuZoneCount)), (int) (cPuZone), (int) (marxan.cfnames), 999);

                                            /*
                                             * file
                                             * E:/git/klab-ecology-component/etc/marxan/
                                             * marxan.c line 4011
                                             */
                                            marxan.cAppendDebugTraceFile((int) (strmarxan353), 0);
                                            startargs(getMEMINT((int) (((cpu + ((int) (ci_7) * 64)) + 0))));
                                            addarg(getMEMINT((int) ((cR + ((int) (ci_7) * 4)))));

                                            /*
                                             * file
                                             * E:/git/klab-ecology-component/etc/marxan/
                                             * marxan.c line 4012
                                             */
                                            csprintf((int) (cdebugbuffer_10), strmarxan354, endargs());

                                            /*
                                             * file
                                             * E:/git/klab-ecology-component/etc/marxan/
                                             * marxan.c line 4013
                                             */
                                            marxan.cAppendDebugTraceFile((int) (cdebugbuffer_10), 0);

                                            /*
                                             * file
                                             * E:/git/klab-ecology-component/etc/marxan/
                                             * marxan.c line 4015
                                             */
                                            marxan.cShowGenProg((int) (strmarxan355), 0);

                                            /*
                                             * file
                                             * E:/git/klab-ecology-component/etc/marxan/
                                             * marxan.c line 4016
                                             */
                                            marxan.cShowGenProg((int) (strmarxan356), 0);

                                            /*
                                             * file
                                             * E:/git/klab-ecology-component/etc/marxan/
                                             * marxan.c line 4017
                                             */
                                            marxan.cShowPauseExit();

                                            /*
                                             * file
                                             * E:/git/klab-ecology-component/etc/marxan/
                                             * marxan.c line 4018
                                             */
                                            cexit(1);

                                        }

                                    }
                                    ;

                                }

                            }

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 4022
                         */
                        if ((((getMEMINT((int) (((cpu + ((int) (ci_7) * 64)) + 40)))) == (1)) ? 1 : 0) != 0) {
                            setMEMINT((int) ((cR + ((int) (ci_7)
                                    * 4))), (int) (getMEMINT((int) (((cpu + ((int) (ci_7) * 64)) + 44)))));

                        }
                        ;

                    }
                    ci_7++;

                }

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan357 = jtocstr("PuZone endless loop in AddReserve detected\n");
    static int strmarxan358 = jtocstr("\nPuZone endless loop in AddReserve detected\n");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 4033 */

    public static void cAddReserve(int cpuno, int cpu, int cR, int ciZoneCount, int cPuZone) {
        nextlevel();
        if (true) {
            int label = 0;
            int ci_7 = 0;
            int ciLoopCounter_8 = 0;
            int cdebugbuffer_9 = 0;

            {
                ci_7 = 0;
                ciLoopCounter_8 = 0;
                cdebugbuffer_9 = calloca(1000);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 4067 */
                ci_7 = 0;
                lab_marxan138: for (; (((ci_7) < (cpuno)) ? 1 : 0) != 0;) {

                    {
                        ciLoopCounter_8 = 0;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 4044
                         */
                        if ((((getMEMINT((int) (((cpu + ((int) (ci_7) * 64)) + 48)))) == (1)) ? 1 : 0) != 0) {

                            {
                                lab_marxan139: while ((
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 4045
                                 */
                                cPuNotInAllowedZone((int) ((cpu + ((int) (ci_7) * 64))), getMEMINT((int) ((cR
                                        + ((int) (ci_7) * 4)))), (int) (cPuZone), 0, (byte) (114))) != 0) {

                                    {
                                        setMEMINT((int) ((cR + ((int) (ci_7) * 4))), (int) ((
                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 4047
                                         */
                                        marxan.cRandNum(ciZoneCount) + 1)));
                                        ciLoopCounter_8++;

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 4051
                                         */
                                        if ((((ciLoopCounter_8) > (5000)) ? 1 : 0) != 0) {

                                            {

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 4053
                                                 */
                                                cDumpPuZone_Debug(getMEMINT((int) (marxan.ciPuZoneCount)), (int) (cPuZone), (int) (marxan.cfnames), 999);

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 4054
                                                 */
                                                marxan.cAppendDebugTraceFile((int) (strmarxan357), 0);
                                                startargs(getMEMINT((int) (((cpu + ((int) (ci_7) * 64))
                                                        + 0))));
                                                addarg(getMEMINT((int) ((cR + ((int) (ci_7) * 4)))));

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 4055
                                                 */
                                                csprintf((int) (cdebugbuffer_9), strmarxan354, endargs());

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 4056
                                                 */
                                                marxan.cAppendDebugTraceFile((int) (cdebugbuffer_9), 0);

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 4058
                                                 */
                                                marxan.cShowGenProg((int) (strmarxan358), 0);

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 4059
                                                 */
                                                marxan.cShowGenProg((int) (strmarxan356), 0);

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 4060
                                                 */
                                                marxan.cShowPauseExit();

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 4061
                                                 */
                                                cexit(1);

                                            }

                                        }
                                        ;

                                    }

                                }

                            }

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 4066
                         */
                        if ((((getMEMINT((int) (((cpu + ((int) (ci_7) * 64)) + 40)))) == (1)) ? 1 : 0) != 0) {
                            setMEMINT((int) ((cR + ((int) (ci_7)
                                    * 4))), (int) (getMEMINT((int) (((cpu + ((int) (ci_7) * 64)) + 44)))));

                        }
                        ;

                    }
                    ci_7++;

                }

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan359 = jtocstr("Species %i (%s) has already met target %.2f\n");
    static int strmarxan360 = jtocstr("Species %d (%s) cannot reach target %.2f there is only %.2f available.\n");
    static int strmarxan361 = jtocstr("%i species are already adequately represented.\n");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 4075 */

    public static int cCalcPenalties(int cpuno, int cspno, int cpu, int cspec, int cconnections, int cSM, int caggexist, int cclumptype, int ciZoneCount, int cR, int c_ZoneTarget) {
        nextlevel();
        if (true) {
            int label = 0;
            int retval = 0;
            int ci_14 = 0;
            int cj_15 = 0;
            int cibest_16 = 0;
            int cimaxtarget_17 = 0;
            int citargetocc_18 = 0;
            int ciArrayIndex_19 = 0;
            int cPUtemp_20 = 0;
            double cftarget_21 = 0;
            double cfbest_22 = 0;
            double cfbestrat_23 = 0;
            double cfcost_24 = 0;
            double cftemp_25 = 0;
            double crAmount_26 = 0;
            double crZoneSumTarg_27 = 0;
            int cbadspecies_28 = 0;
            int cgoodspecies_29 = 0;
            int ciZone_30 = 0;
            int ciZoneSumOcc_31 = 0;
            int y6 = 0;
            int y7 = 0;

            {
                ci_14 = 0;
                cj_15 = 0;
                cibest_16 = 0;
                cimaxtarget_17 = 0;
                citargetocc_18 = 0;
                ciArrayIndex_19 = 0;
                cPUtemp_20 = 0;
                cftarget_21 = 0;
                cfbest_22 = 0;
                cfbestrat_23 = 0;
                cfcost_24 = 0;
                cftemp_25 = 0;
                crAmount_26 = 0;
                crZoneSumTarg_27 = 0;
                cbadspecies_28 = 0;
                cgoodspecies_29 = 0;
                ciZone_30 = 0;
                ciZoneSumOcc_31 = 0;
                cPUtemp_20 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 4086 */
                ccalloc(cpuno, 4));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 4247 */
                ci_14 = 0;
                lab_marxan140: for (; (((ci_14) < (cspno)) ? 1 : 0) != 0;) {

                    {
                        crZoneSumTarg_27 = 0;
                        ciZoneSumOcc_31 = 0;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 4105
                         */
                        cj_15 = 0;
                        lab_marxan141: for (; (((cj_15) < (ciZoneCount)) ? 1 : 0) != 0;) {

                            {
                                ciArrayIndex_19 = ((ci_14 * ciZoneCount) + cj_15);
                                crZoneSumTarg_27 = (crZoneSumTarg_27
                                        + getMEMDOUBLE((int) (((c_ZoneTarget + ((int) (ciArrayIndex_19) * 12))
                                                + 0))));
                                ciZoneSumOcc_31 = (ciZoneSumOcc_31
                                        + getMEMINT((int) (((c_ZoneTarget + ((int) (ciArrayIndex_19) * 12))
                                                + 8))));

                            }
                            cj_15++;

                        }

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 4108
                         */
                        if ((((getMEMDOUBLE((int) (((cspec + ((int) (ci_14) * 100))
                                + 12)))) > (crZoneSumTarg_27)) ? 1 : 0) != 0) {
                            crZoneSumTarg_27 = getMEMDOUBLE((int) (((cspec + ((int) (ci_14) * 100)) + 12)));

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 4110
                         */
                        if ((((getMEMINT((int) (((cspec + ((int) (ci_14) * 100)) + 56)))) > (ciZoneSumOcc_31))
                                ? 1 : 0) != 0) {
                            ciZoneSumOcc_31 = getMEMINT((int) (((cspec + ((int) (ci_14) * 100)) + 56)));

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 4118
                         */
                        if ((((getMEMDOUBLE((int) (((cspec + ((int) (ci_14) * 100)) + 80)))) != 0) ? 1
                                : (getMEMINT((int) (((cspec + ((int) (ci_14) * 100)) + 68))))) != 0) {

                            {
                                cj_15 =
                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 4119
                                         */
                                        marxan.cCalcPenaltyType4(ci_14, cpuno, (int) (cSM), (int) (cconnections), (int) (cspec), (int) (cpu), cclumptype, (int) (cR));
                                cbadspecies_28 += (((cj_15) > (0)) ? 1 : 0);
                                cgoodspecies_29 += (((cj_15) < (0)) ? 1 : 0);
                                ci_14++;
                                if (true) {
                                    continue lab_marxan140;
                                }
                                ;

                            }

                        }
                        ;
                        cftarget_21 = 0;
                        citargetocc_18 = 0;
                        setMEMDOUBLE((int) (((cspec + ((int) (ci_14) * 100)) + 40)), (double) (0));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 4151
                         */
                        cj_15 = 0;
                        lab_marxan142: for (; (((cj_15) < (cpuno)) ? 1 : 0) != 0;) {

                            {
                                setMEMINT((int) ((cPUtemp_20 + (cj_15
                                        * 4))), (int) (getMEMINT((int) ((cR + ((int) (cj_15) * 4))))));
                                ciZone_30 = getMEMINT((int) ((cPUtemp_20 + (cj_15 * 4))));

                                {
                                    crAmount_26 =
                                            /*
                                             * file
                                             * E:/git/klab-ecology-component/etc/marxan/
                                             * marxan.c line 4142
                                             */
                                            crtnAmountSpecAtPu((int) (cpu), (int) (cSM), cj_15, ci_14);
                                    cftarget_21 += crAmount_26;
                                    citargetocc_18++;
                                    y6 = (int) (((cspec + ((int) (ci_14) * 100)) + 40));
                                    setMEMDOUBLE((int) (y6), (double) ((getMEMDOUBLE((int) (y6)) +
                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 4145
                                     */
                                            marxan.crtnMaxNonAvailableCost(cj_15, (int) (cconnections)))));

                                }

                            }
                            cj_15++;

                        }

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 4155
                         */
                        if (((((((cftarget_21) >= (crZoneSumTarg_27)) ? 1 : 0)) != 0)
                                ? ((((citargetocc_18) >= (ciZoneSumOcc_31)) ? 1 : 0)) : 0) != 0) {

                            {
                                cgoodspecies_29++;
                                startargs(getMEMINT((int) (((cspec + ((int) (ci_14) * 100)) + 0))));
                                addarg(getMEMINT((int) (((cspec + ((int) (ci_14) * 100)) + 8))));
                                addarg(crZoneSumTarg_27);

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 4158
                                 */
                                marxan.cShowGenProgInfo((int) (strmarxan359), endargs());
                                ci_14++;
                                if (true) {
                                    continue lab_marxan140;
                                }
                                ;

                            }

                        }
                        ;

                        lab_marxan143: do {

                            {
                                cfbest_22 = 0;
                                cimaxtarget_17 = 0;
                                cfbestrat_23 = 0;

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 4205
                                 */
                                cj_15 = 0;
                                lab_marxan144: for (; (((cj_15) < (cpuno)) ? 1 : 0) != 0;) {

                                    {
                                        crAmount_26 =
                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 4180
                                                 */
                                                crtnAmountSpecAtPu((int) (cpu), (int) (cSM), cj_15, ci_14);

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 4182
                                         */
                                        if ((((crAmount_26) > (0)) ? 1 : 0) != 0) {

                                            {
                                                cfcost_24 =
                                                        /*
                                                         * file
                                                         * E:/git/klab-ecology-component/
                                                         * etc/marxan/marxan.c line 4183
                                                         */
                                                        marxan.crtnMaxNonAvailableCost(cj_15, (int) (cconnections));

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 4185
                                                 */
                                                if ((((cfcost_24) == (0)) ? 1 : 0) != 0) {
                                                    cfcost_24 = getMEMDOUBLE((int) (marxan.cdelta));

                                                }
                                                ;

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 4188
                                                 */
                                                if (((((((crAmount_26) >= ((crZoneSumTarg_27 - cftarget_21)))
                                                        ? 1
                                                        : 0)) != 0) ? (((((((cimaxtarget_17) == (0)) ? 1
                                                                : 0)) != 0)
                                                                        ? 1
                                                                        : (((((((cimaxtarget_17) == (1)) ? 1
                                                                                : 0)) != 0)
                                                                                        ? ((((cfcost_24) < (cfbest_22))
                                                                                                ? 1 : 0))
                                                                                        : 0))))
                                                                : 0) != 0) {

                                                    {
                                                        cimaxtarget_17 = 1;
                                                        cibest_16 = cj_15;
                                                        cfbest_22 = cfcost_24;

                                                    }

                                                } else {

                                                    /*
                                                     * file
                                                     * E:/git/klab-ecology-component/etc/
                                                     * marxan/marxan.c line 4194
                                                     */
                                                    if ((((cfbestrat_23) < ((crAmount_26 / cfcost_24))) ? 1
                                                            : 0) != 0) {

                                                        {
                                                            cfbest_22 = cfcost_24;
                                                            cfbestrat_23 = (crAmount_26 / cfbest_22);
                                                            cibest_16 = cj_15;

                                                        }

                                                    }
                                                    ;

                                                }
                                                ;

                                            }

                                        }
                                        ;

                                    }
                                    cj_15++;

                                }

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 4208
                                 */
                                if ((((cfbest_22) > (0)) ? 1 : 0) != 0) {

                                    {
                                        setMEMINT((int) ((cPUtemp_20
                                                + (cibest_16 * 4))), (int) (ciZoneCount));
                                        cftarget_21 +=
                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 4210
                                                 */
                                                crtnAmountSpecAtPu((int) (cpu), (int) (cSM), cibest_16, ci_14);
                                        citargetocc_18++;
                                        y7 = (int) (((cspec + ((int) (ci_14) * 100)) + 40));
                                        setMEMDOUBLE((int) (y7), (double) ((getMEMDOUBLE((int) (y7))
                                                + cfbest_22)));

                                    }

                                }
                                ;

                            }

                        } while ((((((((((cftarget_21) < (crZoneSumTarg_27)) ? 1 : 0)) != 0) ? 1
                                : ((((citargetocc_18) < (ciZoneSumOcc_31)) ? 1 : 0)))) != 0)
                                        ? ((((cfbest_22) > (0)) ? 1 : 0)) : 0) != 0);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 4222
                         */
                        if ((((cfbest_22) == (0)) ? 1 : 0) != 0) {

                            {
                                startargs(getMEMINT((int) (((cspec + ((int) (ci_14) * 100)) + 0))));
                                addarg(getMEMINT((int) (((cspec + ((int) (ci_14) * 100)) + 8))));
                                addarg(crZoneSumTarg_27);
                                addarg(cftarget_21);

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 4224
                                 */
                                marxan.cShowGenProgInfo((int) (strmarxan360), endargs());

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 4227
                                 */
                                if ((((cftarget_21) == (0)) ? 1 : 0) != 0) {
                                    cftarget_21 = getMEMDOUBLE((int) (marxan.cdelta));

                                }
                                ;
                                cftemp_25 = 0;

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 4230
                                 */
                                if ((((cftarget_21) < (crZoneSumTarg_27)) ? 1 : 0) != 0) {
                                    cftemp_25 = (crZoneSumTarg_27 / cftarget_21);

                                }
                                ;

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 4232
                                 */
                                if (((((((citargetocc_18) < (ciZoneSumOcc_31)) ? 1 : 0)) != 0)
                                        ? (citargetocc_18) : 0) != 0) {
                                    cftemp_25 += ((double) (ciZoneSumOcc_31) / (double) (citargetocc_18));

                                }
                                ;
                                setMEMDOUBLE((int) (((cspec + ((int) (ci_14) * 100))
                                        + 40)), (double) ((getMEMDOUBLE((int) (((cspec
                                                + ((int) (ci_14) * 100)) + 40))) * cftemp_25)));
                                cbadspecies_28++;

                            }

                        }
                        ;

                    }
                    ci_14++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 4250 */
                if (caggexist != 0) {

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 4250 */
                    marxan.cClearClumps(cspno, (int) (cspec), (int) (cpu), (int) (cSM));

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 4252 */
                cfree(cPUtemp_20);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 4256 */
                if (cgoodspecies_29 != 0) {
                    startargs(cgoodspecies_29);

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 4256 */
                    marxan.cShowGenProg((int) (strmarxan361), endargs());

                }
                ;
                retval = cbadspecies_28;
                if (true) {
                    prevlevel();
                    return retval;
                }
                ;

            }
        }
        ;
        prevlevel();
        return 0;
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 4267 */

    public static void cAddReserve_CPO(int cpuno, int cpu, int cR, int ciZoneCount, int cPuZone) {
        nextlevel();
        if (true) {
            int label = 0;
            int ci_7 = 0;
            int ciLoopCounter_8 = 0;
            int cdebugbuffer_9 = 0;

            {
                ci_7 = 0;
                ciLoopCounter_8 = 0;
                cdebugbuffer_9 = calloca(1000);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 4303 */
                ci_7 = 0;
                lab_marxan145: for (; (((ci_7) < (cpuno)) ? 1 : 0) != 0;) {

                    {
                        setMEMINT((int) ((cR + ((int) (ci_7) * 4))), (int) (0));
                        ciLoopCounter_8 = 0;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 4280
                         */
                        if ((((getMEMINT((int) (((cpu + ((int) (ci_7) * 64)) + 48)))) == (1)) ? 1 : 0) != 0) {

                            {
                                lab_marxan146: while ((
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 4281
                                 */
                                cPuNotInAllowedZone((int) ((cpu + ((int) (ci_7) * 64))), getMEMINT((int) ((cR
                                        + ((int) (ci_7) * 4)))), (int) (cPuZone), 0, (byte) (114))) != 0) {

                                    {
                                        setMEMINT((int) ((cR + ((int) (ci_7) * 4))), (int) ((
                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 4283
                                         */
                                        marxan.cRandNum(ciZoneCount) + 1)));
                                        ciLoopCounter_8++;

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 4287
                                         */
                                        if ((((ciLoopCounter_8) > (5000)) ? 1 : 0) != 0) {

                                            {

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 4289
                                                 */
                                                cDumpPuZone_Debug(getMEMINT((int) (marxan.ciPuZoneCount)), (int) (cPuZone), (int) (marxan.cfnames), 999);

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 4290
                                                 */
                                                marxan.cAppendDebugTraceFile((int) (strmarxan357), 0);
                                                startargs(getMEMINT((int) (((cpu + ((int) (ci_7) * 64))
                                                        + 0))));
                                                addarg(getMEMINT((int) ((cR + ((int) (ci_7) * 4)))));

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 4291
                                                 */
                                                csprintf((int) (cdebugbuffer_9), strmarxan354, endargs());

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 4292
                                                 */
                                                marxan.cAppendDebugTraceFile((int) (cdebugbuffer_9), 0);

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 4294
                                                 */
                                                marxan.cShowGenProg((int) (strmarxan358), 0);

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 4295
                                                 */
                                                marxan.cShowGenProg((int) (strmarxan356), 0);

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 4296
                                                 */
                                                marxan.cShowPauseExit();

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 4297
                                                 */
                                                cexit(1);

                                            }

                                        }
                                        ;

                                    }

                                }

                            }

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 4302
                         */
                        if ((((getMEMINT((int) (((cpu + ((int) (ci_7) * 64)) + 40)))) == (1)) ? 1 : 0) != 0) {
                            setMEMINT((int) ((cR + ((int) (ci_7)
                                    * 4))), (int) (getMEMINT((int) (((cpu + ((int) (ci_7) * 64)) + 44)))));

                        }
                        ;

                    }
                    ci_7++;

                }

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan362 = jtocstr("CalcPenaltiesOptimise start\n");
    static int strmarxan363 = jtocstr("CalcPenaltiesOptimise spname %i\n");
    static int strmarxan364 = jtocstr("CalcPenaltiesOptimise spname %i penalty %g target %g\n");
    static int strmarxan365 = jtocstr("CalcPenaltiesOptimise end\n");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 4308 */

    public static int cCalcPenaltiesOptimise(int cpuno, int cspno, int cpu, int cspec, int cconnections, int cSM, int cSMsp, int cR, int caggexist, int cclumptype) {
        nextlevel();
        if (true) {
            int label = 0;
            int retval = 0;
            int ci_13 = 0;
            int cj_14 = 0;
            int cibest_15 = 0;
            int cimaxtarget_16 = 0;
            int citargetocc_17 = 0;
            int cism_18 = 0;
            int cipu_19 = 0;
            int ciPUsToTest_20 = 0;
            int ciArrayIndex_21 = 0;
            int ciZone_22 = 0;
            int cPUtemp_23 = 0;
            double cftarget_24 = 0;
            double cfbest_25 = 0;
            double cfbestrat_26 = 0;
            double cfcost_27 = 0;
            double cftemp_28 = 0;
            double crAmount_29 = 0;
            double cr_ibest_amount_30 = 0;
            double crZoneSumTarg_31 = 0;
            int cbadspecies_32 = 0;
            int cgoodspecies_33 = 0;
            int ciZoneSumOcc_34 = 0;
            int cdebugbuffer_35 = 0;
            int y8 = 0;
            int y9 = 0;

            {
                ci_13 = 0;
                cj_14 = 0;
                cibest_15 = 0;
                cimaxtarget_16 = 0;
                citargetocc_17 = 0;
                cism_18 = 0;
                cipu_19 = 0;
                ciPUsToTest_20 = 0;
                ciArrayIndex_21 = 0;
                ciZone_22 = 0;
                cPUtemp_23 = 0;
                cftarget_24 = 0;
                cfbest_25 = 0;
                cfbestrat_26 = 0;
                cfcost_27 = 0;
                cftemp_28 = 0;
                crAmount_29 = 0;
                cr_ibest_amount_30 = 0;
                crZoneSumTarg_31 = 0;
                cbadspecies_32 = 0;
                cgoodspecies_33 = 0;
                ciZoneSumOcc_34 = 0;
                cdebugbuffer_35 = calloca(80);
                cPUtemp_23 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 4315 */
                ccalloc(cpuno, 4));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 4318 */
                marxan.cAppendDebugTraceFile((int) (strmarxan362), 0);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 4459 */
                ci_13 = 0;
                lab_marxan147: for (; (((ci_13) < (cspno)) ? 1 : 0) != 0;) {

                    {
                        startargs(getMEMINT((int) (((cspec + ((int) (ci_13) * 100)) + 0))));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 4324
                         */
                        csprintf((int) (cdebugbuffer_35), strmarxan363, endargs());

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 4325
                         */
                        marxan.cAppendDebugTraceFile((int) (cdebugbuffer_35), 0);
                        crZoneSumTarg_31 = 0;
                        ciZoneSumOcc_34 = 0;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 4338
                         */
                        cj_14 = 0;
                        lab_marxan148: for (; (((cj_14) < (getMEMINT((int) (marxan.ciZoneCount)))) ? 1
                                : 0) != 0;) {

                            {
                                ciArrayIndex_21 = ((ci_13 * getMEMINT((int) (marxan.ciZoneCount))) + cj_14);
                                crZoneSumTarg_31 = (crZoneSumTarg_31
                                        + getMEMDOUBLE((int) (((getMEMINT((int) (marxan.c_ZoneTarget))
                                                + (ciArrayIndex_21 * 12)) + 0))));
                                ciZoneSumOcc_34 = (ciZoneSumOcc_34
                                        + getMEMINT((int) (((getMEMINT((int) (marxan.c_ZoneTarget))
                                                + (ciArrayIndex_21 * 12)) + 8))));

                            }
                            cj_14++;

                        }

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 4341
                         */
                        if ((((getMEMDOUBLE((int) (((cspec + ((int) (ci_13) * 100))
                                + 12)))) > (crZoneSumTarg_31)) ? 1 : 0) != 0) {
                            crZoneSumTarg_31 = getMEMDOUBLE((int) (((cspec + ((int) (ci_13) * 100)) + 12)));

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 4343
                         */
                        if ((((getMEMINT((int) (((cspec + ((int) (ci_13) * 100)) + 56)))) > (ciZoneSumOcc_34))
                                ? 1 : 0) != 0) {
                            ciZoneSumOcc_34 = getMEMINT((int) (((cspec + ((int) (ci_13) * 100)) + 56)));

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 4351
                         */
                        if ((((getMEMDOUBLE((int) (((cspec + ((int) (ci_13) * 100)) + 80)))) != 0) ? 1
                                : (getMEMINT((int) (((cspec + ((int) (ci_13) * 100)) + 68))))) != 0) {

                            {
                                cj_14 =
                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 4352
                                         */
                                        marxan.cCalcPenaltyType4(ci_13, cpuno, (int) (cSM), (int) (cconnections), (int) (cspec), (int) (cpu), cclumptype, (int) (cPUtemp_23));
                                cbadspecies_32 += (((cj_14) > (0)) ? 1 : 0);
                                cgoodspecies_33 += (((cj_14) < (0)) ? 1 : 0);
                                ci_13++;
                                if (true) {
                                    continue lab_marxan147;
                                }
                                ;

                            }

                        }
                        ;
                        cftarget_24 = 0;
                        citargetocc_17 = 0;
                        setMEMDOUBLE((int) (((cspec + ((int) (ci_13) * 100)) + 40)), (double) (0));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 4363
                         */
                        if ((((getMEMINT((int) (((cspec + ((int) (ci_13) * 100)) + 92)))) > (0)) ? 1
                                : 0) != 0) {

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 4378
                             */
                            cj_14 = 0;
                            lab_marxan149: for (; (((cj_14) < (getMEMINT((int) (((cspec
                                    + ((int) (ci_13) * 100)) + 92))))) ? 1 : 0) != 0;) {

                                {
                                    cism_18 = (getMEMINT((int) (((cspec + ((int) (ci_13) * 100)) + 96)))
                                            + cj_14);
                                    cipu_19 = getMEMINT((int) (((cSMsp + ((int) (cism_18) * 12)) + 8)));
                                    setMEMINT((int) ((cPUtemp_23 + (cipu_19
                                            * 4))), (int) (getMEMINT((int) ((cR + ((int) (cipu_19) * 4))))));
                                    ciZone_22 = getMEMINT((int) ((cPUtemp_23 + (cipu_19 * 4))));

                                    {
                                        cftarget_24 += getMEMDOUBLE((int) (((cSMsp + ((int) (cism_18) * 12))
                                                + 0)));
                                        citargetocc_17++;
                                        y8 = (int) (((cspec + ((int) (ci_13) * 100)) + 40));
                                        setMEMDOUBLE((int) (y8), (double) ((getMEMDOUBLE((int) (y8)) +
                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 4376
                                         */
                                                marxan.crtnMaxNonAvailableCost(cipu_19, (int) (cconnections)))));

                                    }

                                }
                                cj_14++;

                            }

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 4382
                         */
                        if (((((((cftarget_24) >= (crZoneSumTarg_31)) ? 1 : 0)) != 0)
                                ? ((((citargetocc_17) >= (ciZoneSumOcc_34)) ? 1 : 0)) : 0) != 0) {

                            {
                                cgoodspecies_33++;
                                startargs(getMEMINT((int) (((cspec + ((int) (ci_13) * 100)) + 0))));
                                addarg(getMEMINT((int) (((cspec + ((int) (ci_13) * 100)) + 8))));
                                addarg(crZoneSumTarg_31);

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 4385
                                 */
                                marxan.cShowGenProgInfo((int) (strmarxan359), endargs());
                                ci_13++;
                                if (true) {
                                    continue lab_marxan147;
                                }
                                ;

                            }

                        }
                        ;

                        lab_marxan150: do {

                            {
                                cfbest_25 = 0;
                                cimaxtarget_16 = 0;
                                cfbestrat_26 = 0;

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 4398
                                 */
                                if ((((getMEMINT((int) (((cspec + ((int) (ci_13) * 100)) + 92)))) > (0)) ? 1
                                        : 0) != 0) {

                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 4425
                                     */
                                    cj_14 = 0;
                                    lab_marxan151: for (; (((cj_14) < (getMEMINT((int) (((cspec
                                            + ((int) (ci_13) * 100)) + 92))))) ? 1 : 0) != 0;) {

                                        {
                                            cism_18 = (getMEMINT((int) (((cspec + ((int) (ci_13) * 100))
                                                    + 96))) + cj_14);
                                            cipu_19 = getMEMINT((int) (((cSMsp + ((int) (cism_18) * 12))
                                                    + 8)));
                                            crAmount_29 = getMEMDOUBLE((int) (((cSMsp
                                                    + ((int) (cism_18) * 12)) + 0)));

                                            /*
                                             * file
                                             * E:/git/klab-ecology-component/etc/marxan/
                                             * marxan.c line 4405
                                             */
                                            if ((((crAmount_29) > (0)) ? 1 : 0) != 0) {

                                                {
                                                    cfcost_27 =
                                                            /*
                                                             * file E:/git/klab-ecology-
                                                             * component/etc/marxan/marxan
                                                             * .c line 4406
                                                             */
                                                            marxan.crtnMaxNonAvailableCost(cipu_19, (int) (cconnections));

                                                    /*
                                                     * file
                                                     * E:/git/klab-ecology-component/etc/
                                                     * marxan/marxan.c line 4408
                                                     */
                                                    if ((((cfcost_27) == (0)) ? 1 : 0) != 0) {
                                                        cfcost_27 = getMEMDOUBLE((int) (marxan.cdelta));

                                                    }
                                                    ;

                                                    /*
                                                     * file
                                                     * E:/git/klab-ecology-component/etc/
                                                     * marxan/marxan.c line 4411
                                                     */
                                                    if (((((((crAmount_29) >= ((crZoneSumTarg_31
                                                            - cftarget_24))) ? 1 : 0)) != 0)
                                                                    ? (((((((cimaxtarget_16) == (0)) ? 1
                                                                            : 0)) != 0)
                                                                                    ? 1
                                                                                    : (((((((cimaxtarget_16) == (1))
                                                                                            ? 1 : 0)) != 0)
                                                                                                    ? ((((cfcost_27) < (cfbest_25))
                                                                                                            ? 1
                                                                                                            : 0))
                                                                                                    : 0))))
                                                                    : 0) != 0) {

                                                        {
                                                            cimaxtarget_16 = 1;
                                                            cibest_15 = cipu_19;
                                                            cr_ibest_amount_30 = crAmount_29;
                                                            cfbest_25 = cfcost_27;

                                                        }

                                                    } else {

                                                        /*
                                                         * file
                                                         * E:/git/klab-ecology-component/
                                                         * etc/marxan/marxan.c line 4418
                                                         */
                                                        if ((((cfbestrat_26) < ((crAmount_29 / cfcost_27)))
                                                                ? 1 : 0) != 0) {

                                                            {
                                                                cfbest_25 = cfcost_27;
                                                                cfbestrat_26 = (crAmount_29 / cfbest_25);
                                                                cibest_15 = cipu_19;
                                                                cr_ibest_amount_30 = crAmount_29;

                                                            }

                                                        }
                                                        ;

                                                    }
                                                    ;

                                                }

                                            }
                                            ;

                                        }
                                        cj_14++;

                                    }

                                }
                                ;

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 4428
                                 */
                                if ((((cfbest_25) > (0)) ? 1 : 0) != 0) {

                                    {
                                        setMEMINT((int) ((cPUtemp_23 + (cibest_15
                                                * 4))), (int) (getMEMINT((int) (marxan.ciZoneCount))));
                                        cftarget_24 += cr_ibest_amount_30;
                                        citargetocc_17++;
                                        y9 = (int) (((cspec + ((int) (ci_13) * 100)) + 40));
                                        setMEMDOUBLE((int) (y9), (double) ((getMEMDOUBLE((int) (y9))
                                                + cfbest_25)));

                                    }

                                }
                                ;

                            }

                        } while ((((((((((cftarget_24) < (crZoneSumTarg_31)) ? 1 : 0)) != 0) ? 1
                                : ((((citargetocc_17) < (ciZoneSumOcc_34)) ? 1 : 0)))) != 0)
                                        ? ((((cfbest_25) > (0)) ? 1 : 0)) : 0) != 0);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 4439
                         */
                        if ((((cfbest_25) == (0)) ? 1 : 0) != 0) {

                            {
                                startargs(getMEMINT((int) (((cspec + ((int) (ci_13) * 100)) + 0))));
                                addarg(getMEMINT((int) (((cspec + ((int) (ci_13) * 100)) + 8))));
                                addarg(getMEMDOUBLE((int) (((cspec + ((int) (ci_13) * 100)) + 12))));
                                addarg(cftarget_24);

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 4441
                                 */
                                marxan.cShowGenProgInfo((int) (strmarxan360), endargs());

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 4443
                                 */
                                if ((((cftarget_24) == (0)) ? 1 : 0) != 0) {
                                    cftarget_24 = getMEMDOUBLE((int) (marxan.cdelta));

                                }
                                ;
                                cftemp_28 = 0;

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 4446
                                 */
                                if ((((cftarget_24) < (crZoneSumTarg_31)) ? 1 : 0) != 0) {
                                    cftemp_28 = (crZoneSumTarg_31 / cftarget_24);

                                }
                                ;

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 4448
                                 */
                                if (((((((citargetocc_17) < (ciZoneSumOcc_34)) ? 1 : 0)) != 0)
                                        ? (citargetocc_17) : 0) != 0) {
                                    cftemp_28 += ((double) (ciZoneSumOcc_34) / (double) (citargetocc_17));

                                }
                                ;
                                setMEMDOUBLE((int) (((cspec + ((int) (ci_13) * 100))
                                        + 40)), (double) ((getMEMDOUBLE((int) (((cspec
                                                + ((int) (ci_13) * 100)) + 40))) * cftemp_28)));
                                cbadspecies_32++;

                            }

                        }
                        ;
                        startargs(getMEMINT((int) (((cspec + ((int) (ci_13) * 100)) + 0))));
                        addarg(getMEMDOUBLE((int) (((cspec + ((int) (ci_13) * 100)) + 40))));
                        addarg(crZoneSumTarg_31);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 4455
                         */
                        csprintf((int) (cdebugbuffer_35), strmarxan364, endargs());

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 4456
                         */
                        marxan.cAppendDebugTraceFile((int) (cdebugbuffer_35), 0);

                    }
                    ci_13++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 4463 */
                if (caggexist != 0) {

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 4463 */
                    marxan.cClearClumps(cspno, (int) (cspec), (int) (cpu), (int) (cSM));

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 4465 */
                cfree(cPUtemp_23);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 4468 */
                if (cgoodspecies_33 != 0) {
                    startargs(cgoodspecies_33);

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 4468 */
                    marxan.cShowGenProg((int) (strmarxan361), endargs());

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 4471 */
                marxan.cAppendDebugTraceFile((int) (strmarxan365), 0);
                retval = cbadspecies_32;
                if (true) {
                    prevlevel();
                    return retval;
                }
                ;

            }
        }
        ;
        prevlevel();
        return 0;
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 4482 */

    public static double cConnectionCost1(int cipu, int cconnections) {
        nextlevel();
        if (true) {
            int label = 0;
            double retval = 0;
            double cfcost_5 = 0;
            int cp_6 = 0;

            {
                cfcost_5 = 0;
                cp_6 = 0;
                cfcost_5 = getMEMDOUBLE((int) (((cconnections + ((int) (cipu) * 16)) + 4)));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 4496 */
                cp_6 = getMEMINT((int) (((cconnections + ((int) (cipu) * 16)) + 0)));
                lab_marxan152: for (; cp_6 != 0;) {
                    cfcost_5 += getMEMDOUBLE((int) ((cp_6 + 4)));
                    cp_6 = getMEMINT((int) ((cp_6 + 12)));

                }
                retval = cfcost_5;
                if (true) {
                    prevlevel();
                    return retval;
                }
                ;

            }
        }
        ;
        prevlevel();
        return 0;
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 4505 */

    public static double ccost(int cipu, int cconnections, int ciZone) {
        nextlevel();
        if (true) {
            int label = 0;
            double retval = 0;
            double cfcost_6 = 0;

            {
                cfcost_6 = 0;
                cfcost_6 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 4507
                         */
                        marxan.cReturnPuZoneCost(cipu, ciZone);
                cfcost_6 +=
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 4509
                         */
                        cConnectionCost1(cipu, (int) (cconnections));
                retval = cfcost_6;
                if (true) {
                    prevlevel();
                    return retval;
                }
                ;

            }
        }
        ;
        prevlevel();
        return 0;
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 4515 */

    public static double crtnMaxNonAvailableCost(int cipu, int cconnections) {
        nextlevel();
        if (true) {
            int label = 0;
            double retval = 0;
            double cfcost_5 = 0;
            double crMaxCost_6 = 0;
            int ciZone_7 = 0;

            {
                cfcost_5 = 0;
                crMaxCost_6 = 0;
                ciZone_7 = 0;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 4525 */
                ciZone_7 = 1;
                lab_marxan153: for (; (((ciZone_7) <= (getMEMINT((int) (marxan.ciZoneCount)))) ? 1
                        : 0) != 0;) {

                    {
                        cfcost_5 =
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 4522
                                 */
                                marxan.cReturnPuZoneCost(cipu, ciZone_7);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 4524
                         */
                        if ((((cfcost_5) > (crMaxCost_6)) ? 1 : 0) != 0) {
                            crMaxCost_6 = cfcost_5;

                        }
                        ;

                    }
                    ciZone_7++;

                }
                crMaxCost_6 +=
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 4527
                         */
                        cConnectionCost1(cipu, (int) (cconnections));
                retval = crMaxCost_6;
                if (true) {
                    prevlevel();
                    return retval;
                }
                ;

            }
        }
        ;
        prevlevel();
        return 0;
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 4538 */

    public static double cConnectionCost2(int cipu, int ciCurrentZone, int cconnections, int cR, int cimode, int ciDebugMode) {
        nextlevel();
        if (true) {
            int label = 0;
            double retval = 0;
            double cfcost_9 = 0;
            double crResult_10 = 0;
            double crZoneConnectionCost_11 = 0;
            double crDelta_12 = 0;
            int cp_13 = 0;

            {
                cfcost_9 = 0;
                crResult_10 = 0;
                crZoneConnectionCost_11 = 0;
                crDelta_12 = 0;
                cp_13 = 0;
                cfcost_9 = (getMEMDOUBLE((int) (((cconnections + ((int) (cipu) * 16)) + 4)))
                        * (double) (cimode));
                cp_13 = getMEMINT((int) (((cconnections + ((int) (cipu) * 16)) + 0)));

                {
                    lab_marxan154: while ((cp_13) != 0) {

                        {
                            crZoneConnectionCost_11 = getMEMDOUBLE((int) ((getMEMINT((int) (marxan.c_RelConnectionCost))
                                    + ((((ciCurrentZone - 1) * getMEMINT((int) (marxan.ciZoneCount)))
                                            + (getMEMINT((int) ((cR
                                                    + ((int) (getMEMINT((int) ((cp_13 + 0)))) * 4)))) - 1))
                                            * 8))));
                            cfcost_9 += ((cimode * getMEMDOUBLE((int) ((cp_13 + 4))))
                                    * crZoneConnectionCost_11);
                            cp_13 = getMEMINT((int) ((cp_13 + 12)));

                        }

                    }

                }
                crResult_10 = cfcost_9;
                retval = crResult_10;
                if (true) {
                    prevlevel();
                    return retval;
                }
                ;

            }
        }
        ;
        prevlevel();
        return 0;
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 4644 */

    public static double cChangePen(int ciIteration, int cipu, int cpuno, int cspec, int cpu, int cSM, int cR, int cconnections, int cimode, int cclumptype, int ciZone, int crShortfall) {
        nextlevel();
        if (true) {
            int label = 0;
            double retval = 0;
            int ci_15 = 0;
            int ck_16 = 0;
            int cism_17 = 0;
            int cisp_18 = 0;
            int ciArrayIndex_19 = 0;
            int ciNewOccurrence_20 = 0;
            int ciCurrentShortfall_21 = 0;
            int ciNewShortfall_22 = 0;
            double crShortFraction_23 = 0;
            double crNewShortFraction_24 = 0;
            double crOldShortfall_25 = 0;
            double crNewShortfall_26 = 0;
            double crNewAmount_27 = 0;
            double crSumDeltaPenalty_28 = 0;
            double crDeltaPenalty_29 = 0;
            double crCurrentContribAmount_30 = 0;
            double crNewContribAmount_31 = 0;
            int y10 = 0;

            {
                ci_15 = 0;
                ck_16 = 0;
                cism_17 = 0;
                cisp_18 = 0;
                ciArrayIndex_19 = 0;
                ciNewOccurrence_20 = 0;
                ciCurrentShortfall_21 = 0;
                ciNewShortfall_22 = 0;
                crShortFraction_23 = 0;
                crNewShortFraction_24 = 0;
                crOldShortfall_25 = 0;
                crNewShortfall_26 = 0;
                crNewAmount_27 = 0;
                crSumDeltaPenalty_28 = 0;
                crDeltaPenalty_29 = 0;
                crCurrentContribAmount_30 = 0;
                crNewContribAmount_31 = 0;
                setMEMDOUBLE((int) (crShortfall), (double) (0));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 4671 */
                if (getMEMINT((int) (((cpu + ((int) (cipu) * 64)) + 32))) != 0) {

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 4848 */
                    ci_15 = 0;
                    lab_marxan155: for (; (((ci_15) < (getMEMINT((int) (((cpu + ((int) (cipu) * 64)) + 32)))))
                            ? 1 : 0) != 0;) {

                        {
                            cism_17 = (getMEMINT((int) (((cpu + ((int) (cipu) * 64)) + 36))) + ci_15);
                            cisp_18 = getMEMINT((int) (((cSM + ((int) (cism_17) * 16)) + 12)));

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 4676
                             */
                            if (getMEMDOUBLE((int) (((cSM + ((int) (cism_17) * 16)) + 0))) != 0) {

                                {
                                    crOldShortfall_25 = 0;
                                    crShortFraction_23 = 0;
                                    ciCurrentShortfall_21 = 0;
                                    crNewShortfall_26 = 0;
                                    crNewShortFraction_24 = 0;
                                    ciNewShortfall_22 = 0;
                                    crCurrentContribAmount_30 =
                                            /*
                                             * file
                                             * E:/git/klab-ecology-component/etc/marxan/
                                             * marxan.c line 4689
                                             */
                                            crtnConvertZoneAmount((getMEMINT((int) ((cR
                                                    + ((int) (cipu) * 4))))
                                                    - 1), cisp_18, cipu, cpuno, getMEMDOUBLE((int) (((cSM
                                                            + ((int) (cism_17) * 16)) + 0))));
                                    crNewContribAmount_31 =
                                            /*
                                             * file
                                             * E:/git/klab-ecology-component/etc/marxan/
                                             * marxan.c line 4690
                                             */
                                            crtnConvertZoneAmount((ciZone
                                                    - 1), cisp_18, cipu, cpuno, getMEMDOUBLE((int) (((cSM
                                                            + ((int) (cism_17) * 16)) + 0))));
                                    crNewAmount_27 = ((getMEMDOUBLE((int) (((cspec + ((int) (cisp_18) * 100))
                                            + 48))) + crNewContribAmount_31) - crCurrentContribAmount_30);
                                    ciNewOccurrence_20 = (int) (((getMEMINT((int) (((cspec
                                            + ((int) (cisp_18) * 100)) + 56)))
                                            + (((crNewContribAmount_31) > (0)) ? 1 : 0))
                                            - (((crCurrentContribAmount_30) > (0)) ? 1 : 0)));

                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 4696
                                     */
                                    if ((((getMEMDOUBLE((int) (((cspec + ((int) (cisp_18) * 100))
                                            + 12)))) > (0)) ? 1 : 0) != 0) {

                                        {

                                            /*
                                             * file
                                             * E:/git/klab-ecology-component/etc/marxan/
                                             * marxan.c line 4698
                                             */
                                            if ((((getMEMDOUBLE((int) (((cspec + ((int) (cisp_18) * 100))
                                                    + 12)))) > (getMEMDOUBLE((int) (((cspec
                                                            + ((int) (cisp_18) * 100)) + 48))))) ? 1
                                                                    : 0) != 0) {

                                                {
                                                    crOldShortfall_25 += (getMEMDOUBLE((int) (((cspec
                                                            + ((int) (cisp_18) * 100)) + 12)))
                                                            - getMEMDOUBLE((int) (((cspec
                                                                    + ((int) (cisp_18) * 100)) + 48))));
                                                    crShortFraction_23 += ((getMEMDOUBLE((int) (((cspec
                                                            + ((int) (cisp_18) * 100)) + 12)))
                                                            - getMEMDOUBLE((int) (((cspec
                                                                    + ((int) (cisp_18) * 100)) + 48))))
                                                            / getMEMDOUBLE((int) (((cspec
                                                                    + ((int) (cisp_18) * 100)) + 12))));
                                                    ciCurrentShortfall_21++;

                                                }

                                            }
                                            ;

                                            /*
                                             * file
                                             * E:/git/klab-ecology-component/etc/marxan/
                                             * marxan.c line 4705
                                             */
                                            if ((((getMEMDOUBLE((int) (((cspec + ((int) (cisp_18) * 100))
                                                    + 12)))) > (crNewAmount_27)) ? 1 : 0) != 0) {

                                                {
                                                    crNewShortfall_26 += (getMEMDOUBLE((int) (((cspec
                                                            + ((int) (cisp_18) * 100)) + 12)))
                                                            - crNewAmount_27);
                                                    crNewShortFraction_24 += ((getMEMDOUBLE((int) (((cspec
                                                            + ((int) (cisp_18) * 100)) + 12)))
                                                            - crNewAmount_27)
                                                            / getMEMDOUBLE((int) (((cspec
                                                                    + ((int) (cisp_18) * 100)) + 12))));
                                                    ciNewShortfall_22++;

                                                }

                                            }
                                            ;

                                        }

                                    }
                                    ;

                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 4722
                                     */
                                    if ((((getMEMINT((int) (((cspec + ((int) (cisp_18) * 100)) + 28)))) > (0))
                                            ? 1 : 0) != 0) {

                                        {

                                            /*
                                             * file
                                             * E:/git/klab-ecology-component/etc/marxan/
                                             * marxan.c line 4724
                                             */
                                            if ((((getMEMINT((int) (((cspec + ((int) (cisp_18) * 100))
                                                    + 28)))) > (getMEMINT((int) (((cspec
                                                            + ((int) (cisp_18) * 100)) + 56))))) ? 1
                                                                    : 0) != 0) {

                                                {
                                                    crOldShortfall_25 += (getMEMINT((int) (((cspec
                                                            + ((int) (cisp_18) * 100)) + 28)))
                                                            - getMEMINT((int) (((cspec
                                                                    + ((int) (cisp_18) * 100)) + 56))));
                                                    crShortFraction_23 += ((getMEMINT((int) (((cspec
                                                            + ((int) (cisp_18) * 100)) + 28)))
                                                            - getMEMINT((int) (((cspec
                                                                    + ((int) (cisp_18) * 100)) + 56))))
                                                            / getMEMINT((int) (((cspec
                                                                    + ((int) (cisp_18) * 100)) + 28))));
                                                    ciCurrentShortfall_21++;

                                                }

                                            }
                                            ;

                                            /*
                                             * file
                                             * E:/git/klab-ecology-component/etc/marxan/
                                             * marxan.c line 4731
                                             */
                                            if ((((getMEMINT((int) (((cspec + ((int) (cisp_18) * 100))
                                                    + 28)))) > (ciNewOccurrence_20)) ? 1 : 0) != 0) {

                                                {
                                                    crNewShortfall_26 += (getMEMINT((int) (((cspec
                                                            + ((int) (cisp_18) * 100)) + 28)))
                                                            - ciNewOccurrence_20);
                                                    crNewShortFraction_24 += ((getMEMINT((int) (((cspec
                                                            + ((int) (cisp_18) * 100)) + 28)))
                                                            - ciNewOccurrence_20)
                                                            / getMEMINT((int) (((cspec
                                                                    + ((int) (cisp_18) * 100)) + 28))));
                                                    ciNewShortfall_22++;

                                                }

                                            }
                                            ;

                                        }

                                    }
                                    ;

                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 4810
                                     */
                                    ck_16 = 0;
                                    lab_marxan156: for (; (((ck_16) < (getMEMINT((int) (marxan.ciZoneCount))))
                                            ? 1 : 0) != 0;) {

                                        {

                                            /*
                                             * file
                                             * E:/git/klab-ecology-component/etc/marxan/
                                             * marxan.c line 4744
                                             */
                                            if (((((((ck_16) == ((getMEMINT((int) ((cR + ((int) (cipu) * 4))))
                                                    - 1))) ? 1 : 0)) != 0) ? 1
                                                            : ((((ck_16) == ((ciZone - 1))) ? 1 : 0))) != 0) {

                                                {
                                                    ciArrayIndex_19 = ((cisp_18
                                                            * getMEMINT((int) (marxan.ciZoneCount))) + ck_16);

                                                    /*
                                                     * file
                                                     * E:/git/klab-ecology-component/etc/
                                                     * marxan/marxan.c line 4749
                                                     */
                                                    if ((((ck_16) == ((getMEMINT((int) ((cR
                                                            + ((int) (cipu) * 4)))) - 1))) ? 1 : 0) != 0) {

                                                        {
                                                            crNewAmount_27 = (getMEMDOUBLE((int) (((getMEMINT((int) (marxan.cZoneSpec))
                                                                    + (ciArrayIndex_19 * 12)) + 0)))
                                                                    - getMEMDOUBLE((int) (((cSM
                                                                            + ((int) (cism_17) * 16)) + 0))));
                                                            ciNewOccurrence_20 = (getMEMINT((int) (((getMEMINT((int) (marxan.cZoneSpec))
                                                                    + (ciArrayIndex_19 * 12)) + 8))) - 1);

                                                        }

                                                    } else {

                                                        {
                                                            crNewAmount_27 = (getMEMDOUBLE((int) (((getMEMINT((int) (marxan.cZoneSpec))
                                                                    + (ciArrayIndex_19 * 12)) + 0)))
                                                                    + getMEMDOUBLE((int) (((cSM
                                                                            + ((int) (cism_17) * 16)) + 0))));
                                                            ciNewOccurrence_20 = (getMEMINT((int) (((getMEMINT((int) (marxan.cZoneSpec))
                                                                    + (ciArrayIndex_19 * 12)) + 8))) + 1);

                                                        }

                                                    }
                                                    ;

                                                    /*
                                                     * file
                                                     * E:/git/klab-ecology-component/etc/
                                                     * marxan/marxan.c line 4762
                                                     */
                                                    if ((((getMEMDOUBLE((int) (((getMEMINT((int) (marxan.c_ZoneTarget))
                                                            + (ciArrayIndex_19 * 12)) + 0)))) > (0)) ? 1
                                                                    : 0) != 0) {

                                                        {

                                                            /*
                                                             * file E:/git/klab-ecology-
                                                             * component/etc/marxan/marxan
                                                             * .c line 4765
                                                             */
                                                            if ((((getMEMDOUBLE((int) (((getMEMINT((int) (marxan.c_ZoneTarget))
                                                                    + (ciArrayIndex_19 * 12))
                                                                    + 0)))) > (getMEMDOUBLE((int) (((getMEMINT((int) (marxan.cZoneSpec))
                                                                            + (ciArrayIndex_19 * 12)) + 0)))))
                                                                                    ? 1 : 0) != 0) {

                                                                {
                                                                    crOldShortfall_25 += (getMEMDOUBLE((int) (((getMEMINT((int) (marxan.c_ZoneTarget))
                                                                            + (ciArrayIndex_19 * 12)) + 0)))
                                                                            - getMEMDOUBLE((int) (((getMEMINT((int) (marxan.cZoneSpec))
                                                                                    + (ciArrayIndex_19 * 12))
                                                                                    + 0))));
                                                                    crShortFraction_23 += ((getMEMDOUBLE((int) (((getMEMINT((int) (marxan.c_ZoneTarget))
                                                                            + (ciArrayIndex_19 * 12)) + 0)))
                                                                            - getMEMDOUBLE((int) (((getMEMINT((int) (marxan.cZoneSpec))
                                                                                    + (ciArrayIndex_19 * 12))
                                                                                    + 0))))
                                                                            / getMEMDOUBLE((int) (((getMEMINT((int) (marxan.c_ZoneTarget))
                                                                                    + (ciArrayIndex_19 * 12))
                                                                                    + 0))));
                                                                    ciCurrentShortfall_21++;

                                                                }

                                                            }
                                                            ;

                                                            /*
                                                             * file E:/git/klab-ecology-
                                                             * component/etc/marxan/marxan
                                                             * .c line 4773
                                                             */
                                                            if ((((getMEMDOUBLE((int) (((getMEMINT((int) (marxan.c_ZoneTarget))
                                                                    + (ciArrayIndex_19 * 12))
                                                                    + 0)))) > (crNewAmount_27)) ? 1
                                                                            : 0) != 0) {

                                                                {
                                                                    crNewShortfall_26 += (getMEMDOUBLE((int) (((getMEMINT((int) (marxan.c_ZoneTarget))
                                                                            + (ciArrayIndex_19 * 12)) + 0)))
                                                                            - crNewAmount_27);
                                                                    crNewShortFraction_24 += ((getMEMDOUBLE((int) (((getMEMINT((int) (marxan.c_ZoneTarget))
                                                                            + (ciArrayIndex_19 * 12)) + 0)))
                                                                            - crNewAmount_27)
                                                                            / getMEMDOUBLE((int) (((getMEMINT((int) (marxan.c_ZoneTarget))
                                                                                    + (ciArrayIndex_19 * 12))
                                                                                    + 0))));
                                                                    ciNewShortfall_22++;

                                                                }

                                                            }
                                                            ;

                                                        }

                                                    }
                                                    ;

                                                    /*
                                                     * file
                                                     * E:/git/klab-ecology-component/etc/
                                                     * marxan/marxan.c line 4792
                                                     */
                                                    if ((((getMEMINT((int) (((getMEMINT((int) (marxan.c_ZoneTarget))
                                                            + (ciArrayIndex_19 * 12)) + 8)))) > (0)) ? 1
                                                                    : 0) != 0) {

                                                        {

                                                            /*
                                                             * file E:/git/klab-ecology-
                                                             * component/etc/marxan/marxan
                                                             * .c line 4795
                                                             */
                                                            if ((((getMEMINT((int) (((getMEMINT((int) (marxan.c_ZoneTarget))
                                                                    + (ciArrayIndex_19 * 12))
                                                                    + 8)))) > (getMEMINT((int) (((getMEMINT((int) (marxan.cZoneSpec))
                                                                            + (ciArrayIndex_19 * 12)) + 8)))))
                                                                                    ? 1 : 0) != 0) {

                                                                {
                                                                    crOldShortfall_25 += (getMEMINT((int) (((getMEMINT((int) (marxan.c_ZoneTarget))
                                                                            + (ciArrayIndex_19 * 12)) + 8)))
                                                                            - getMEMINT((int) (((getMEMINT((int) (marxan.cZoneSpec))
                                                                                    + (ciArrayIndex_19 * 12))
                                                                                    + 8))));
                                                                    crShortFraction_23 += ((getMEMINT((int) (((getMEMINT((int) (marxan.c_ZoneTarget))
                                                                            + (ciArrayIndex_19 * 12)) + 8)))
                                                                            - getMEMINT((int) (((getMEMINT((int) (marxan.cZoneSpec))
                                                                                    + (ciArrayIndex_19 * 12))
                                                                                    + 8))))
                                                                            / getMEMINT((int) (((getMEMINT((int) (marxan.c_ZoneTarget))
                                                                                    + (ciArrayIndex_19 * 12))
                                                                                    + 8))));
                                                                    ciCurrentShortfall_21++;

                                                                }

                                                            }
                                                            ;

                                                            /*
                                                             * file E:/git/klab-ecology-
                                                             * component/etc/marxan/marxan
                                                             * .c line 4803
                                                             */
                                                            if ((((getMEMINT((int) (((getMEMINT((int) (marxan.c_ZoneTarget))
                                                                    + (ciArrayIndex_19 * 12))
                                                                    + 8)))) > (ciNewOccurrence_20)) ? 1
                                                                            : 0) != 0) {

                                                                {
                                                                    crNewShortfall_26 += (getMEMINT((int) (((getMEMINT((int) (marxan.c_ZoneTarget))
                                                                            + (ciArrayIndex_19 * 12)) + 8)))
                                                                            - ciNewOccurrence_20);
                                                                    crNewShortFraction_24 += ((getMEMINT((int) (((getMEMINT((int) (marxan.c_ZoneTarget))
                                                                            + (ciArrayIndex_19 * 12)) + 8)))
                                                                            - ciNewOccurrence_20)
                                                                            / getMEMINT((int) (((getMEMINT((int) (marxan.c_ZoneTarget))
                                                                                    + (ciArrayIndex_19 * 12))
                                                                                    + 8))));
                                                                    ciNewShortfall_22++;

                                                                }

                                                            }
                                                            ;

                                                        }

                                                    }
                                                    ;

                                                }

                                            }
                                            ;

                                        }
                                        ck_16++;

                                    }
                                    crDeltaPenalty_29 = ((getMEMDOUBLE((int) (((cspec
                                            + ((int) (cisp_18) * 100)) + 40)))
                                            * getMEMDOUBLE((int) (((cspec + ((int) (cisp_18) * 100)) + 32))))
                                            * (crNewShortFraction_24 - crShortFraction_23));
                                    crSumDeltaPenalty_28 += crDeltaPenalty_29;
                                    y10 = (int) (crShortfall);
                                    setMEMDOUBLE((int) (y10), (double) ((getMEMDOUBLE((int) (y10))
                                            + (crNewShortfall_26 - crOldShortfall_25))));

                                }

                            }
                            ;

                        }
                        ci_15++;

                    }

                }
                ;
                retval = crSumDeltaPenalty_28;
                if (true) {
                    prevlevel();
                    return retval;
                }
                ;

            }
        }
        ;
        prevlevel();
        return 0;
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 4859 */

    public static double cConnectionCost2Linear(int cipu, int ciCurrentZone, int cpu, int cconnections, int cR, int cimode, int ciDebugMode) {
        nextlevel();
        if (true) {
            int label = 0;
            double retval = 0;
            double cfcost_10 = 0;
            double crResult_11 = 0;
            double crZoneConnectionCost_12 = 0;
            int cp_13 = 0;

            {
                cfcost_10 = 0;
                crResult_11 = 0;
                crZoneConnectionCost_12 = 0;
                cp_13 = 0;
                cfcost_10 = (getMEMDOUBLE((int) (((cconnections + ((int) (cipu) * 16)) + 4)))
                        * (double) (cimode));
                cp_13 = getMEMINT((int) (((cconnections + ((int) (cipu) * 16)) + 0)));
                lab_marxan157: while ((cp_13) != 0) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 4881
                         */
                        if ((((getMEMINT((int) ((cp_13 + 0)))) > (cipu)) ? 1 : 0) != 0) {

                            {
                                crZoneConnectionCost_12 = getMEMDOUBLE((int) ((getMEMINT((int) (marxan.c_RelConnectionCost))
                                        + ((((ciCurrentZone - 1) * getMEMINT((int) (marxan.ciZoneCount)))
                                                + (getMEMINT((int) ((cR
                                                        + ((int) (getMEMINT((int) ((cp_13 + 0)))) * 4))))
                                                        - 1))
                                                * 8))));
                                cfcost_10 += ((cimode * getMEMDOUBLE((int) ((cp_13 + 4))))
                                        * crZoneConnectionCost_12);

                            }

                        }
                        ;
                        cp_13 = getMEMINT((int) ((cp_13 + 12)));

                    }

                }
                crResult_11 = cfcost_10;
                retval = crResult_11;
                if (true) {
                    prevlevel();
                    return retval;
                }
                ;

            }
        }
        ;
        prevlevel();
        return 0;
    }

    static int strmarxan366 = jtocstr("SPID,target,amount,shortfall");
    static int strmarxan367 = jtocstr(",Z%itarget,Z%iamount,Z%ishortfall");
    static int strmarxan368 = jtocstr(",total shortfall\n");
    static int strmarxan369 = jtocstr("%i,%f,%f,%f");
    static int strmarxan370 = jtocstr(",%f,%f,%f");
    static int strmarxan371 = jtocstr(",%f\n");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 4912 */

    public static void cOutputZonationCostDebugTable(int cspno, int cspec, int csavename) {
        nextlevel();
        if (true) {
            int label = 0;
            int cfp_5 = 0;
            int ci_6 = 0;
            int ck_7 = 0;
            int ciExistingArrayIndex_8 = 0;
            double crShortfall_9 = 0;
            double crTotalShortfall_10 = 0;

            {
                cfp_5 = 0;
                ci_6 = 0;
                ck_7 = 0;
                ciExistingArrayIndex_8 = 0;
                crShortfall_9 = 0;
                crTotalShortfall_10 = 0;
                cfp_5 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 4917
                         */
                        cfopen((int) (csavename), strmarxan198);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 4919 */
                cfprintf(cfp_5, strmarxan366, 0);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 4921 */
                ck_7 = 1;
                lab_marxan158: for (; (((ck_7) <= (getMEMINT((int) (marxan.ciZoneCount)))) ? 1 : 0) != 0;) {
                    startargs(ck_7);
                    addarg(ck_7);
                    addarg(ck_7);

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 4921 */
                    cfprintf(cfp_5, strmarxan367, endargs());
                    ck_7++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 4922 */
                cfprintf(cfp_5, strmarxan368, 0);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 4957 */
                ci_6 = (cspno - 1);
                lab_marxan159: for (; (((ci_6) >= (0)) ? 1 : 0) != 0;) {

                    {
                        crShortfall_9 = 0;
                        crTotalShortfall_10 = 0;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 4930
                         */
                        if ((((getMEMDOUBLE((int) (((cspec + ((int) (ci_6) * 100)) + 12)))) > (0)) ? 1
                                : 0) != 0) {

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 4931
                             */
                            if ((((getMEMDOUBLE((int) (((cspec + ((int) (ci_6) * 100))
                                    + 12)))) > (getMEMDOUBLE((int) (((cspec + ((int) (ci_6) * 100)) + 48)))))
                                            ? 1 : 0) != 0) {

                                {
                                    crShortfall_9 = (getMEMDOUBLE((int) (((cspec + ((int) (ci_6) * 100))
                                            + 12)))
                                            - getMEMDOUBLE((int) (((cspec + ((int) (ci_6) * 100)) + 48))));

                                }

                            }
                            ;

                        }
                        ;
                        startargs(getMEMINT((int) (((cspec + ((int) (ci_6) * 100)) + 0))));
                        addarg(getMEMDOUBLE((int) (((cspec + ((int) (ci_6) * 100)) + 12))));
                        addarg(getMEMDOUBLE((int) (((cspec + ((int) (ci_6) * 100)) + 48))));
                        addarg(crShortfall_9);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 4935
                         */
                        cfprintf(cfp_5, strmarxan369, endargs());
                        crTotalShortfall_10 += crShortfall_9;
                        crShortfall_9 = 0;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 4954
                         */
                        ck_7 = 0;
                        lab_marxan160: for (; (((ck_7) < (getMEMINT((int) (marxan.ciZoneCount)))) ? 1
                                : 0) != 0;) {

                            {
                                ciExistingArrayIndex_8 = ((ci_6 * getMEMINT((int) (marxan.ciZoneCount)))
                                        + ck_7);

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 4945
                                 */
                                if ((((getMEMDOUBLE((int) (((getMEMINT((int) (marxan.c_ZoneTarget))
                                        + (ciExistingArrayIndex_8 * 12)) + 0)))) > (0)) ? 1 : 0) != 0) {

                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 4946
                                     */
                                    if ((((getMEMDOUBLE((int) (((getMEMINT((int) (marxan.c_ZoneTarget))
                                            + (ciExistingArrayIndex_8 * 12))
                                            + 0)))) > (getMEMDOUBLE((int) (((getMEMINT((int) (marxan.cZoneSpec))
                                                    + (ciExistingArrayIndex_8 * 12)) + 0))))) ? 1 : 0) != 0) {

                                        {
                                            crShortfall_9 = (getMEMDOUBLE((int) (((getMEMINT((int) (marxan.c_ZoneTarget))
                                                    + (ciExistingArrayIndex_8 * 12)) + 0)))
                                                    - getMEMDOUBLE((int) (((getMEMINT((int) (marxan.cZoneSpec))
                                                            + (ciExistingArrayIndex_8 * 12)) + 0))));

                                        }

                                    }
                                    ;

                                }
                                ;
                                startargs(getMEMDOUBLE((int) (((getMEMINT((int) (marxan.c_ZoneTarget))
                                        + (ciExistingArrayIndex_8 * 12)) + 0))));
                                addarg(getMEMDOUBLE((int) (((getMEMINT((int) (marxan.cZoneSpec))
                                        + (ciExistingArrayIndex_8 * 12)) + 0))));
                                addarg(crShortfall_9);

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 4950
                                 */
                                cfprintf(cfp_5, strmarxan370, endargs());
                                crTotalShortfall_10 += crShortfall_9;
                                crShortfall_9 = 0;

                            }
                            ck_7++;

                        }
                        startargs(crTotalShortfall_10);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 4956
                         */
                        cfprintf(cfp_5, strmarxan371, endargs());

                    }
                    ci_6--;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 4959 */
                cfclose(cfp_5);

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan372 = jtocstr("output_penalty_detail_");
    static int strmarxan373 = jtocstr("i,SPID,shortfall,spec_penalty,spf,reserve_penalty\n");
    static int strmarxan374 = jtocstr("ZonationCost file >%i< was created.\n");
    static int strmarxan375 = jtocstr("%i,%i,%g,%g,%g,%g\n");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 4966 */

    public static void cZonationCost(int cirun, int cpuno, int cspno, int cR, int cpu, int cconnections, int cSM, int cspec, int caggexist, int creserve, int cclumptype, double cprop, int ciApplyReserveInit) {
        nextlevel();
        if (true) {
            int label = 0;
            int ci_15 = 0;
            int cj_16 = 0;
            int ck_17 = 0;
            int ciArrayIndex_18 = 0;
            int ciExistingArrayIndex_19 = 0;
            int ciShortfall_20 = 0;
            int ciMissingFeatures_21 = 0;
            int cfDebugPenaltyNegative_22 = 0;
            double crShortfall_23 = 0;
            double crShortFraction_24 = 0;
            double crCurrentShortfall_25 = 0;
            double crTotalShortfall_26 = 0;
            int csDebugFile_27 = 0;
            int csDebugMessage_28 = 0;
            int csDebugIndex_29 = 0;
            int cDebugFile_30 = 0;
            int y11 = 0;
            int y12 = 0;
            int y13 = 0;
            int y14 = 0;
            int y15 = 0;
            int y16 = 0;
            int y17 = 0;

            {
                ci_15 = 0;
                cj_16 = 0;
                ck_17 = 0;
                ciArrayIndex_18 = 0;
                ciExistingArrayIndex_19 = 0;
                ciShortfall_20 = 0;
                ciMissingFeatures_21 = 0;
                cfDebugPenaltyNegative_22 = 0;
                crShortfall_23 = 0;
                crShortFraction_24 = 0;
                crCurrentShortfall_25 = 0;
                crTotalShortfall_26 = 0;
                csDebugFile_27 = calloca(1000);
                csDebugMessage_28 = calloca(1000);
                csDebugIndex_29 = calloca(100);
                cDebugFile_30 = 0;
                cfDebugPenaltyNegative_22 = 1;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 4982 */
                if (cfDebugPenaltyNegative_22 != 0) {

                    {
                        sincMEMINT((int) (marxan.ciZonationCost), +1);
                        startargs(getMEMINT((int) (marxan.ciZonationCost)));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 4985
                         */
                        csprintf((int) (csDebugIndex_29), strmarxan234, endargs());

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 4986
                         */
                        cstrcpy((int) (csDebugFile_27), getMEMINT((int) ((marxan.cfnames + 4))));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 4987
                         */
                        cstrcat((int) (csDebugFile_27), strmarxan372);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 4988
                         */
                        cstrcat((int) (csDebugFile_27), (int) (csDebugIndex_29));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 4989
                         */
                        cstrcat((int) (csDebugFile_27), strmarxan300);
                        cDebugFile_30 =
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 4991
                                 */
                                cfopen((int) (csDebugFile_27), strmarxan198);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 4992
                         */
                        cfprintf(cDebugFile_30, strmarxan373, 0);
                        startargs(getMEMINT((int) (marxan.ciZonationCost)));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 4994
                         */
                        csprintf((int) (csDebugMessage_28), strmarxan374, endargs());

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 4995
                         */
                        marxan.cAppendDebugTraceFile((int) (csDebugMessage_28), 0);

                    }

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 4999 */
                if ((((ciApplyReserveInit) > (0)) ? 1 : 0) != 0) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 5000
                         */
                        marxan.cInitReserve(cpuno, cprop, (int) (cR), (int) (cpu), getMEMINT((int) (marxan.ciZoneCount)));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 5001
                         */
                        cAddReserve(cpuno, (int) (cpu), (int) (cR), getMEMINT((int) (marxan.ciZoneCount)), (int) (getMEMINT((int) (marxan.cPuZone))));

                    }

                }
                ;
                setMEMDOUBLE((int) ((creserve + 28)), (double) (0));
                setMEMDOUBLE((int) ((creserve + 20)), (double) (0));
                setMEMDOUBLE((int) ((creserve + 8)), (double) (0));
                setMEMDOUBLE((int) ((creserve + 44)), (double) (0));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 5013 */
                if (caggexist != 0) {

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 5013 */
                    marxan.cSetSpeciesClumps(cpuno, (int) (cR), (int) (cspec), (int) (cpu), (int) (cSM), (int) (cconnections), cclumptype);

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 5016 */
                cInitZoneSpec(cspno, getMEMINT((int) (marxan.ciZoneCount)), (int) (getMEMINT((int) (marxan.cZoneSpec))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 5017 */
                marxan.cSpeciesAmounts(cspno, cpuno, (int) (cspec), (int) (cpu), (int) (cSM), (int) (cR), cclumptype, (int) (getMEMINT((int) (marxan.cZoneSpec))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 5103 */
                ci_15 = 0;
                lab_marxan161: for (; (((ci_15) < (cspno)) ? 1 : 0) != 0;) {

                    {
                        crShortfall_23 = 0;
                        ciShortfall_20 = 0;
                        crShortFraction_24 = 0;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 5028
                         */
                        if ((((getMEMDOUBLE((int) (((cspec + ((int) (ci_15) * 100)) + 12)))) > (0)) ? 1
                                : 0) != 0) {

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 5029
                             */
                            if ((((getMEMDOUBLE((int) (((cspec + ((int) (ci_15) * 100))
                                    + 12)))) > (getMEMDOUBLE((int) (((cspec + ((int) (ci_15) * 100)) + 48)))))
                                            ? 1 : 0) != 0) {

                                {
                                    crShortfall_23 += (getMEMDOUBLE((int) (((cspec + ((int) (ci_15) * 100))
                                            + 12)))
                                            - getMEMDOUBLE((int) (((cspec + ((int) (ci_15) * 100)) + 48))));
                                    crShortFraction_24 += ((getMEMDOUBLE((int) (((cspec
                                            + ((int) (ci_15) * 100)) + 12)))
                                            - getMEMDOUBLE((int) (((cspec + ((int) (ci_15) * 100)) + 48))))
                                            / getMEMDOUBLE((int) (((cspec + ((int) (ci_15) * 100)) + 12))));
                                    ciShortfall_20++;
                                    y11 = (int) ((creserve + 44));
                                    setMEMDOUBLE((int) (y11), (double) ((getMEMDOUBLE((int) (y11))
                                            + (getMEMDOUBLE((int) (((cspec + ((int) (ci_15) * 100)) + 12)))
                                                    - getMEMDOUBLE((int) (((cspec + ((int) (ci_15) * 100))
                                                            + 48)))))));

                                }

                            }
                            ;

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 5038
                         */
                        if ((((getMEMINT((int) (((cspec + ((int) (ci_15) * 100)) + 28)))) > (0)) ? 1
                                : 0) != 0) {

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 5039
                             */
                            if ((((getMEMINT((int) (((cspec + ((int) (ci_15) * 100))
                                    + 28)))) > (getMEMINT((int) (((cspec + ((int) (ci_15) * 100)) + 56)))))
                                            ? 1 : 0) != 0) {

                                {
                                    crShortfall_23 += (getMEMINT((int) (((cspec + ((int) (ci_15) * 100))
                                            + 28)))
                                            - getMEMINT((int) (((cspec + ((int) (ci_15) * 100)) + 56))));
                                    crShortFraction_24 += ((getMEMINT((int) (((cspec + ((int) (ci_15) * 100))
                                            + 28)))
                                            - getMEMINT((int) (((cspec + ((int) (ci_15) * 100)) + 56))))
                                            / getMEMINT((int) (((cspec + ((int) (ci_15) * 100)) + 28))));
                                    ciShortfall_20++;
                                    y12 = (int) ((creserve + 44));
                                    setMEMDOUBLE((int) (y12), (double) ((getMEMDOUBLE((int) (y12))
                                            + (double) ((getMEMINT((int) (((cspec + ((int) (ci_15) * 100))
                                                    + 28)))
                                                    - getMEMINT((int) (((cspec + ((int) (ci_15) * 100))
                                                            + 56))))))));

                                }

                            }
                            ;

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 5077
                         */
                        ck_17 = 0;
                        lab_marxan162: for (; (((ck_17) < (getMEMINT((int) (marxan.ciZoneCount)))) ? 1
                                : 0) != 0;) {

                            {
                                ciExistingArrayIndex_19 = ((ci_15 * getMEMINT((int) (marxan.ciZoneCount)))
                                        + ck_17);

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 5054
                                 */
                                if ((((getMEMDOUBLE((int) (((getMEMINT((int) (marxan.c_ZoneTarget))
                                        + (ciExistingArrayIndex_19 * 12)) + 0)))) > (0)) ? 1 : 0) != 0) {

                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 5055
                                     */
                                    if ((((getMEMDOUBLE((int) (((getMEMINT((int) (marxan.c_ZoneTarget))
                                            + (ciExistingArrayIndex_19 * 12))
                                            + 0)))) > (getMEMDOUBLE((int) (((getMEMINT((int) (marxan.cZoneSpec))
                                                    + (ciExistingArrayIndex_19 * 12)) + 0))))) ? 1
                                                            : 0) != 0) {

                                        {
                                            crShortfall_23 += (getMEMDOUBLE((int) (((getMEMINT((int) (marxan.c_ZoneTarget))
                                                    + (ciExistingArrayIndex_19 * 12)) + 0)))
                                                    - getMEMDOUBLE((int) (((getMEMINT((int) (marxan.cZoneSpec))
                                                            + (ciExistingArrayIndex_19 * 12)) + 0))));
                                            crShortFraction_24 += ((getMEMDOUBLE((int) (((getMEMINT((int) (marxan.c_ZoneTarget))
                                                    + (ciExistingArrayIndex_19 * 12)) + 0)))
                                                    - getMEMDOUBLE((int) (((getMEMINT((int) (marxan.cZoneSpec))
                                                            + (ciExistingArrayIndex_19 * 12)) + 0))))
                                                    / getMEMDOUBLE((int) (((getMEMINT((int) (marxan.c_ZoneTarget))
                                                            + (ciExistingArrayIndex_19 * 12)) + 0))));
                                            ciShortfall_20++;
                                            y13 = (int) ((creserve + 44));
                                            setMEMDOUBLE((int) (y13), (double) ((getMEMDOUBLE((int) (y13))
                                                    + (getMEMDOUBLE((int) (((getMEMINT((int) (marxan.c_ZoneTarget))
                                                            + (ciExistingArrayIndex_19 * 12)) + 0)))
                                                            - getMEMDOUBLE((int) (((getMEMINT((int) (marxan.cZoneSpec))
                                                                    + (ciExistingArrayIndex_19 * 12))
                                                                    + 0)))))));

                                        }

                                    }
                                    ;

                                }
                                ;

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 5064
                                 */
                                if ((((getMEMINT((int) (((getMEMINT((int) (marxan.c_ZoneTarget))
                                        + (ciExistingArrayIndex_19 * 12)) + 8)))) > (0)) ? 1 : 0) != 0) {

                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 5065
                                     */
                                    if ((((getMEMINT((int) (((getMEMINT((int) (marxan.c_ZoneTarget))
                                            + (ciExistingArrayIndex_19 * 12))
                                            + 8)))) > (getMEMINT((int) (((getMEMINT((int) (marxan.cZoneSpec))
                                                    + (ciExistingArrayIndex_19 * 12)) + 8))))) ? 1
                                                            : 0) != 0) {

                                        {
                                            crShortfall_23 += (getMEMINT((int) (((getMEMINT((int) (marxan.c_ZoneTarget))
                                                    + (ciExistingArrayIndex_19 * 12)) + 8)))
                                                    - getMEMINT((int) (((getMEMINT((int) (marxan.cZoneSpec))
                                                            + (ciExistingArrayIndex_19 * 12)) + 8))));
                                            crShortFraction_24 += ((getMEMINT((int) (((getMEMINT((int) (marxan.c_ZoneTarget))
                                                    + (ciExistingArrayIndex_19 * 12)) + 8)))
                                                    - getMEMINT((int) (((getMEMINT((int) (marxan.cZoneSpec))
                                                            + (ciExistingArrayIndex_19 * 12)) + 8))))
                                                    / getMEMINT((int) (((getMEMINT((int) (marxan.c_ZoneTarget))
                                                            + (ciExistingArrayIndex_19 * 12)) + 8))));
                                            ciShortfall_20++;
                                            y14 = (int) ((creserve + 44));
                                            setMEMDOUBLE((int) (y14), (double) ((getMEMDOUBLE((int) (y14))
                                                    + (double) ((getMEMINT((int) (((getMEMINT((int) (marxan.c_ZoneTarget))
                                                            + (ciExistingArrayIndex_19 * 12)) + 8)))
                                                            - getMEMINT((int) (((getMEMINT((int) (marxan.cZoneSpec))
                                                                    + (ciExistingArrayIndex_19 * 12))
                                                                    + 8))))))));

                                        }

                                    }
                                    ;

                                }
                                ;

                            }
                            ck_17++;

                        }
                        crCurrentShortfall_25 = crShortFraction_24;
                        crTotalShortfall_26 += crShortfall_23;
                        ciMissingFeatures_21 += ciShortfall_20;
                        y15 = (int) ((creserve + 20));
                        setMEMDOUBLE((int) (y15), (double) ((getMEMDOUBLE((int) (y15))
                                + ((crCurrentShortfall_25
                                        * getMEMDOUBLE((int) (((cspec + ((int) (ci_15) * 100)) + 40))))
                                        * getMEMDOUBLE((int) (((cspec + ((int) (ci_15) * 100)) + 32)))))));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 5093
                         */
                        if (cfDebugPenaltyNegative_22 != 0) {

                            {
                                startargs(ci_15);
                                addarg(getMEMINT((int) (((cspec + ((int) (ci_15) * 100)) + 0))));
                                addarg(crCurrentShortfall_25);
                                addarg(getMEMDOUBLE((int) (((cspec + ((int) (ci_15) * 100)) + 40))));
                                addarg(getMEMDOUBLE((int) (((cspec + ((int) (ci_15) * 100)) + 32))));
                                addarg(getMEMDOUBLE((int) ((creserve + 20))));

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 5094
                                 */
                                cfprintf(cDebugFile_30, strmarxan375, endargs());

                            }

                        }
                        ;

                    }
                    ci_15++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 5110 */
                cj_16 = 0;
                lab_marxan163: for (; (((cj_16) < (cpuno)) ? 1 : 0) != 0;) {

                    {
                        y16 = (int) ((creserve + 28));
                        setMEMDOUBLE((int) (y16), (double) ((getMEMDOUBLE((int) (y16)) +
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 5107
                         */
                                marxan.cReturnPuZoneCost(cj_16, getMEMINT((int) ((cR
                                        + ((int) (cj_16) * 4))))))));
                        y17 = (int) ((creserve + 8));
                        setMEMDOUBLE((int) (y17), (double) ((getMEMDOUBLE((int) (y17)) +
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 5109
                         */
                                cConnectionCost2Linear(cj_16, getMEMINT((int) ((cR + ((int) (cj_16)
                                        * 4)))), (int) (cpu), (int) (cconnections), (int) (cR), 1, 1))));

                    }
                    cj_16++;

                }
                setMEMDOUBLE((int) ((creserve + 0)), (double) (((getMEMDOUBLE((int) ((creserve + 28)))
                        + getMEMDOUBLE((int) ((creserve + 8)))) + getMEMDOUBLE((int) ((creserve + 20))))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 5115 */
                if (cfDebugPenaltyNegative_22 != 0) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 5117
                         */
                        cfclose(cDebugFile_30);

                    }

                }
                ;

            }
        }
        ;
        prevlevel();
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 5138 */

    public static void cInitReserve(int cpuno, double cprop, int cR, int cpu, int ciZoneCount) {
        nextlevel();
        if (true) {
            int label = 0;
            int ci_7 = 0;

            {
                ci_7 = 0;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 5147 */
                ci_7 = 0;
                lab_marxan164: for (; (((ci_7) < (cpuno)) ? 1 : 0) != 0;) {

                    {
                        setMEMINT((int) (((cpu + ((int) (ci_7) * 64))
                                + 60)), (int) (getMEMINT((int) ((cR + ((int) (ci_7) * 4))))));
                        setMEMINT((int) ((cR + ((int) (ci_7) * 4))), (int) ((
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 5146
                         */
                        marxan.cRandNum(ciZoneCount) + 1)));

                    }
                    ci_7++;

                }

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan376 = jtocstr("SpeciesAmounts start\n");
    static int strmarxan377 = jtocstr("SpeciesAmounts end\n");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 5154 */

    public static void cSpeciesAmounts(int cspno, int cpuno, int cspec, int cpu, int cSM, int cR, int cclumptype, int cZoneSpec) {
        nextlevel();
        if (true) {
            int label = 0;
            int ci_10 = 0;
            int cism_11 = 0;
            int cisp_12 = 0;
            int cipu_13 = 0;
            int ciZoneSpecIndex_14 = 0;
            double crContribAmount_15 = 0;
            int y18 = 0;
            int y19 = 0;
            int y20 = 0;

            {
                ci_10 = 0;
                cism_11 = 0;
                cisp_12 = 0;
                cipu_13 = 0;
                ciZoneSpecIndex_14 = 0;
                crContribAmount_15 = 0;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 5162 */
                marxan.cAppendDebugTraceFile((int) (strmarxan376), 0);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 5171 */
                cisp_12 = 0;
                lab_marxan165: for (; (((cisp_12) < (cspno)) ? 1 : 0) != 0;) {

                    {
                        setMEMDOUBLE((int) (((cspec + ((int) (cisp_12) * 100)) + 48)), (double) (0));
                        setMEMINT((int) (((cspec + ((int) (cisp_12) * 100)) + 56)), (int) (0));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 5170
                         */
                        if (getMEMDOUBLE((int) (((cspec + ((int) (cisp_12) * 100)) + 80))) != 0) {

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 5170
                             */
                            marxan.cSpeciesAmounts4(cisp_12, (int) (cspec), cclumptype);

                        }
                        ;

                    }
                    cisp_12++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 5207 */
                cipu_13 = 0;
                lab_marxan166: for (; (((cipu_13) < (cpuno)) ? 1 : 0) != 0;) {

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 5175 */
                    if (getMEMINT((int) (((cpu + ((int) (cipu_13) * 64)) + 32))) != 0) {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 5176
                         */
                        if ((((getMEMINT((int) ((cR + ((int) (cipu_13) * 4))))) != (0)) ? 1 : 0) != 0) {

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 5195
                             */
                            ci_10 = 0;
                            lab_marxan167: for (; (((ci_10) < (getMEMINT((int) (((cpu
                                    + ((int) (cipu_13) * 64)) + 32))))) ? 1 : 0) != 0;) {

                                {
                                    cism_11 = (getMEMINT((int) (((cpu + ((int) (cipu_13) * 64)) + 36)))
                                            + ci_10);
                                    cisp_12 = getMEMINT((int) (((cSM + ((int) (cism_11) * 16)) + 12)));

                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 5181
                                     */
                                    if ((((getMEMDOUBLE((int) (((cspec + ((int) (cisp_12) * 100))
                                            + 80)))) == (0)) ? 1 : 0) != 0) {

                                        {

                                            {
                                                crContribAmount_15 =
                                                        /*
                                                         * file
                                                         * E:/git/klab-ecology-component/
                                                         * etc/marxan/marxan.c line 5184
                                                         */
                                                        crtnConvertZoneAmount((getMEMINT((int) ((cR
                                                                + ((int) (cipu_13) * 4))))
                                                                - 1), cisp_12, cipu_13, cpuno, getMEMDOUBLE((int) (((cSM
                                                                        + ((int) (cism_11) * 16)) + 0))));
                                                y18 = (int) (((cspec + ((int) (cisp_12) * 100)) + 48));
                                                setMEMDOUBLE((int) (y18), (double) ((getMEMDOUBLE((int) (y18))
                                                        + crContribAmount_15)));
                                                y19 = (int) (((cspec + ((int) (cisp_12) * 100)) + 56));
                                                setMEMINT((int) (y19), (int) ((getMEMINT((int) (y19))
                                                        + (int) ((((crContribAmount_15) > (0)) ? 1 : 0)))));

                                            }
                                            ciZoneSpecIndex_14 = ((cisp_12
                                                    * getMEMINT((int) (marxan.ciZoneCount)))
                                                    + (getMEMINT((int) ((cR + ((int) (cipu_13) * 4)))) - 1));
                                            y20 = (int) (((cZoneSpec + ((int) (ciZoneSpecIndex_14) * 12))
                                                    + 0));
                                            setMEMDOUBLE((int) (y20), (double) ((getMEMDOUBLE((int) (y20))
                                                    + getMEMDOUBLE((int) (((cSM + ((int) (cism_11) * 16))
                                                            + 0))))));
                                            sincMEMINT((int) (((cZoneSpec + ((int) (ciZoneSpecIndex_14) * 12))
                                                    + 8)), +1);

                                        }

                                    }
                                    ;

                                }
                                ci_10++;

                            }

                        }
                        ;

                    }
                    ;
                    cipu_13++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 5207 */
                marxan.cAppendDebugTraceFile((int) (strmarxan377), 0);

            }
        }
        ;
        prevlevel();
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 5219 */

    public static double cThresholdPenalty(double ctpf1, double ctpf2, double ctimeprop) {
        nextlevel();
        if (true) {
            int label = 0;
            double retval = 0;

            {

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 5221 */
                if ((((ctpf2) < (0)) ? 1 : 0) != 0) {
                    retval = ctpf1;
                    if (true) {
                        prevlevel();
                        return retval;
                    }
                    ;

                }
                ;
                retval = (ctpf1 *
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 5223 */
                        cexp((ctpf2 * ctimeprop)));
                if (true) {
                    prevlevel();
                    return retval;
                }
                ;

            }
        }
        ;
        prevlevel();
        return 0;
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 5233 */

    public static void cCheckChange(int ciIteration, int cipu, int cpuno, int cpu, int cconnections, int cspec, int cSM, int cR, int cimode, int ciZone, int cchange, int creserve, double ccostthresh, double ctpf1, double ctpf2, double ctimeprop, int cclumptype, int ciDebugMode) {
        nextlevel();
        if (true) {
            int label = 0;
            double cthreshpen_20 = 0;
            int cthreshtype_21 = 0;
            double ctchangeconnection_22 = 0;
            double ctresconnection_23 = 0;

            {
                cthreshpen_20 = 0;
                cthreshtype_21 = 1;
                ctchangeconnection_22 = 0;
                ctresconnection_23 = 0;
                setMEMDOUBLE((int) ((cchange + 28)), (double) ((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 5247 */
                marxan.cReturnPuZoneCost(cipu, ciZone) -
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 5247 */
                        marxan.cReturnPuZoneCost(cipu, getMEMINT((int) ((cR + ((int) (cipu) * 4))))))));
                setMEMDOUBLE((int) ((cchange + 8)), (double) ((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 5255 */
                cConnectionCost2(cipu, ciZone, (int) (cconnections), (int) (cR), 1, ciDebugMode) -
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 5256 */
                        cConnectionCost2(cipu, getMEMINT((int) ((cR
                                + ((int) (cipu) * 4)))), (int) (cconnections), (int) (cR), 1, ciDebugMode))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 5267 */
                if ((((cthreshtype_21) == (1)) ? 1 : 0) != 0) {

                    {
                        ctchangeconnection_22 = getMEMDOUBLE((int) ((cchange + 8)));
                        ctresconnection_23 = getMEMDOUBLE((int) ((creserve + 8)));
                        setMEMDOUBLE((int) ((cchange + 8)), (double) (0));
                        setMEMDOUBLE((int) ((creserve + 8)), (double) (0));

                    }

                }
                ;
                setMEMDOUBLE((int) ((cchange + 20)), (double) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 5274 */
                cChangePen(ciIteration, cipu, cpuno, (int) (cspec), (int) (cpu), (int) (cSM), (int) (cR), (int) (cconnections), cimode, cclumptype, ciZone, (cchange
                        + 44))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 5285 */
                if (ccostthresh != 0) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 5287
                         */
                        if (((((getMEMDOUBLE((int) ((creserve + 28)))
                                + getMEMDOUBLE((int) ((creserve + 8))))) <= (ccostthresh)) ? 1 : 0) != 0) {

                            {

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 5289
                                 */
                                if (((((((getMEMDOUBLE((int) ((cchange + 28)))
                                        + getMEMDOUBLE((int) ((cchange + 8))))
                                        + getMEMDOUBLE((int) ((creserve + 28))))
                                        + getMEMDOUBLE((int) ((creserve + 8))))) <= (ccostthresh)) ? 1
                                                : 0) != 0) {
                                    cthreshpen_20 = 0;

                                } else {
                                    cthreshpen_20 = (((((getMEMDOUBLE((int) ((cchange + 28)))
                                            + getMEMDOUBLE((int) ((cchange + 8))))
                                            + getMEMDOUBLE((int) ((creserve + 28))))
                                            + getMEMDOUBLE((int) ((creserve + 8)))) - ccostthresh) *
                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 5293
                                     */
                                            cThresholdPenalty(ctpf1, ctpf2, ctimeprop));

                                }
                                ;

                            }

                        } else {

                            {

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 5298
                                 */
                                if (((((((getMEMDOUBLE((int) ((cchange + 28)))
                                        + getMEMDOUBLE((int) ((cchange + 8))))
                                        + getMEMDOUBLE((int) ((creserve + 28))))
                                        + getMEMDOUBLE((int) ((creserve + 8))))) <= (ccostthresh)) ? 1
                                                : 0) != 0) {
                                    cthreshpen_20 = (((getMEMDOUBLE((int) ((creserve + 28)))
                                            + getMEMDOUBLE((int) ((creserve + 8)))) - ccostthresh) *
                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 5298
                                     */
                                            cThresholdPenalty(ctpf1, ctpf2, ctimeprop));

                                } else {
                                    cthreshpen_20 = ((getMEMDOUBLE((int) ((cchange + 28)))
                                            + getMEMDOUBLE((int) ((cchange + 8)))) *
                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 5300
                                     */
                                            cThresholdPenalty(ctpf1, ctpf2, ctimeprop));

                                }
                                ;

                            }

                        }
                        ;

                    }

                }
                ;
                setMEMDOUBLE((int) ((cchange + 36)), (double) (cthreshpen_20));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 5307 */
                if ((((cthreshtype_21) == (1)) ? 1 : 0) != 0) {

                    {
                        setMEMDOUBLE((int) ((cchange + 8)), (double) (ctchangeconnection_22));
                        setMEMDOUBLE((int) ((creserve + 8)), (double) (ctresconnection_23));

                    }

                }
                ;
                setMEMDOUBLE((int) ((cchange + 0)), (double) ((((getMEMDOUBLE((int) ((cchange + 28)))
                        + getMEMDOUBLE((int) ((cchange + 8)))) + getMEMDOUBLE((int) ((cchange + 20))))
                        + getMEMDOUBLE((int) ((cchange + 36))))));

            }
        }
        ;
        prevlevel();
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 5330 */

    public static double cNewPenalty(int cipu, int cisp, int cspec, int cpu, int cSM, int cimode) {
        nextlevel();
        if (true) {
            int label = 0;
            double retval = 0;
            double cnewpen_9 = 0;

            {
                cnewpen_9 = 0;
                cnewpen_9 = ((getMEMDOUBLE((int) (((cspec + ((int) (cisp) * 100)) + 12)))
                        - getMEMDOUBLE((int) (((cspec + ((int) (cisp) * 100)) + 48)))) - (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 5336 */
                crtnAmountSpecAtPu((int) (cpu), (int) (cSM), cipu, cisp) * (double) (cimode)));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 5339 */
                if ((((cnewpen_9) < (0)) ? 1 : 0) != 0) {
                    cnewpen_9 = 0;

                }
                ;
                retval = cnewpen_9;
                if (true) {
                    prevlevel();
                    return retval;
                }
                ;

            }
        }
        ;
        prevlevel();
        return 0;
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 5352 */

    public static int cGoodChange(int cchange, double ctemp) {
        nextlevel();
        if (true) {
            int label = 0;
            int retval = 0;

            {
                retval = ((((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 5353 */
                cexp(((-(getMEMDOUBLE((int) ((cchange + 0))))) / ctemp))) > (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 5353 */
                marxan.crand1())) ? 1 : 0) != 0 ? 1 : 0);
                if (true) {
                    prevlevel();
                    return retval;
                }
                ;

            }
        }
        ;
        prevlevel();
        return 0;
    }

    static int strmarxan378 = jtocstr("Warning Warning ! isp %i occ %i \n");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 5361 */

    public static void cDoChange(int cipu, int cpuno, int cR, int creserve, int cchange, int cpu, int cSM, int cspec, int cconnections, int cimode, int ciZone, int cclumptype) {
        nextlevel();
        if (true) {
            int label = 0;
            int ci_14 = 0;
            int cism_15 = 0;
            int cisp_16 = 0;
            int ciArrayIndexOrigon_17 = 0;
            int ciArrayIndexDestination_18 = 0;
            double crAmount_19 = 0;
            double crCurrentContribAmount_20 = 0;
            double crNewContribAmount_21 = 0;
            int y21 = 0;
            int y22 = 0;
            int y23 = 0;
            int y24 = 0;
            int y25 = 0;
            int y26 = 0;
            int y27 = 0;
            int y28 = 0;
            int y29 = 0;
            int y30 = 0;

            {
                ci_14 = 0;
                cism_15 = 0;
                cisp_16 = 0;
                ciArrayIndexOrigon_17 = 0;
                ciArrayIndexDestination_18 = 0;
                crAmount_19 = 0;
                crCurrentContribAmount_20 = 0;
                crNewContribAmount_21 = 0;
                y21 = (int) ((creserve + 28));
                setMEMDOUBLE((int) (y21), (double) ((getMEMDOUBLE((int) (y21))
                        + getMEMDOUBLE((int) ((cchange + 28))))));
                y22 = (int) ((creserve + 8));
                setMEMDOUBLE((int) (y22), (double) ((getMEMDOUBLE((int) (y22))
                        + getMEMDOUBLE((int) ((cchange + 8))))));
                y23 = (int) ((creserve + 20));
                setMEMDOUBLE((int) (y23), (double) ((getMEMDOUBLE((int) (y23))
                        + getMEMDOUBLE((int) ((cchange + 20))))));
                y24 = (int) ((creserve + 44));
                setMEMDOUBLE((int) (y24), (double) ((getMEMDOUBLE((int) (y24))
                        + getMEMDOUBLE((int) ((cchange + 44))))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 5376 */
                if (getMEMINT((int) (((cpu + ((int) (cipu) * 64)) + 32))) != 0) {

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 5430 */
                    ci_14 = 0;
                    lab_marxan168: for (; (((ci_14) < (getMEMINT((int) (((cpu + ((int) (cipu) * 64)) + 32)))))
                            ? 1 : 0) != 0;) {

                        {
                            cism_15 = (getMEMINT((int) (((cpu + ((int) (cipu) * 64)) + 36))) + ci_14);
                            cisp_16 = getMEMINT((int) (((cSM + ((int) (cism_15) * 16)) + 12)));
                            crAmount_19 = getMEMDOUBLE((int) (((cSM + ((int) (cism_15) * 16)) + 0)));

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 5384
                             */
                            if ((((getMEMDOUBLE((int) (((cspec + ((int) (cisp_16) * 100)) + 80)))) != 0)
                                    ? ((((crAmount_19) > (0)) ? 1 : 0)) : 0) != 0) {

                                {

                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 5386
                                     */
                                    if ((((cimode) == (1)) ? 1 : 0) != 0) {

                                        {

                                            /*
                                             * file
                                             * E:/git/klab-ecology-component/etc/marxan/
                                             * marxan.c line 5387
                                             */
                                            marxan.cAddNewPU(cipu, cisp_16, (int) (cconnections), (int) (cspec), (int) (cpu), (int) (cSM), cclumptype);

                                        }

                                    } else {

                                        {

                                            /*
                                             * file
                                             * E:/git/klab-ecology-component/etc/marxan/
                                             * marxan.c line 5391
                                             */
                                            marxan.cRemPu(cipu, cisp_16, (int) (cconnections), (int) (cspec), (int) (cpu), (int) (cSM), cclumptype);

                                        }

                                    }
                                    ;

                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 5394
                                     */
                                    if ((((getMEMINT((int) (((cspec + ((int) (cisp_16) * 100)) + 56)))) < (0))
                                            ? 1 : 0) != 0) {

                                        {
                                            startargs(cisp_16);
                                            addarg(getMEMINT((int) (((cspec + ((int) (cisp_16) * 100))
                                                    + 56))));

                                            /*
                                             * file
                                             * E:/git/klab-ecology-component/etc/marxan/
                                             * marxan.c line 5395
                                             */
                                            cprintf(strmarxan378, endargs());

                                            /*
                                             * file
                                             * E:/git/klab-ecology-component/etc/marxan/
                                             * marxan.c line 5396
                                             */
                                            marxan.cShowPauseProg();

                                        }

                                    }
                                    ;

                                }

                            } else {

                                {
                                    ciArrayIndexOrigon_17 = ((cisp_16 * getMEMINT((int) (marxan.ciZoneCount)))
                                            + (getMEMINT((int) ((cR + (cipu * 4)))) - 1));
                                    ciArrayIndexDestination_18 = ((cisp_16
                                            * getMEMINT((int) (marxan.ciZoneCount))) + (ciZone - 1));
                                    crCurrentContribAmount_20 =
                                            /*
                                             * file
                                             * E:/git/klab-ecology-component/etc/marxan/
                                             * marxan.c line 5406
                                             */
                                            crtnConvertZoneAmount((getMEMINT((int) ((cR + (cipu * 4))))
                                                    - 1), cisp_16, cipu, cpuno, crAmount_19);
                                    crNewContribAmount_21 =
                                            /*
                                             * file
                                             * E:/git/klab-ecology-component/etc/marxan/
                                             * marxan.c line 5407
                                             */
                                            crtnConvertZoneAmount((ciZone
                                                    - 1), cisp_16, cipu, cpuno, crAmount_19);
                                    y25 = (int) (((cspec + ((int) (cisp_16) * 100)) + 56));
                                    setMEMINT((int) (y25), (int) ((getMEMINT((int) (y25))
                                            + (int) (((((crNewContribAmount_21) > (0)) ? 1 : 0)
                                                    - (((crCurrentContribAmount_20) > (0)) ? 1 : 0))))));
                                    y26 = (int) (((cspec + ((int) (cisp_16) * 100)) + 48));
                                    setMEMDOUBLE((int) (y26), (double) ((getMEMDOUBLE((int) (y26))
                                            + (crNewContribAmount_21 - crCurrentContribAmount_20))));
                                    y27 = (int) (((getMEMINT((int) (marxan.cZoneSpec))
                                            + (ciArrayIndexOrigon_17 * 12)) + 8));
                                    setMEMINT((int) (y27), (int) ((getMEMINT((int) (y27))
                                            - (int) ((((crAmount_19) > (0)) ? 1 : 0)))));
                                    y28 = (int) (((getMEMINT((int) (marxan.cZoneSpec))
                                            + (ciArrayIndexOrigon_17 * 12)) + 0));
                                    setMEMDOUBLE((int) (y28), (double) ((getMEMDOUBLE((int) (y28))
                                            - crAmount_19)));
                                    y29 = (int) (((getMEMINT((int) (marxan.cZoneSpec))
                                            + (ciArrayIndexDestination_18 * 12)) + 8));
                                    setMEMINT((int) (y29), (int) ((getMEMINT((int) (y29))
                                            + (int) ((((crAmount_19) > (0)) ? 1 : 0)))));
                                    y30 = (int) (((getMEMINT((int) (marxan.cZoneSpec))
                                            + (ciArrayIndexDestination_18 * 12)) + 0));
                                    setMEMDOUBLE((int) (y30), (double) ((getMEMDOUBLE((int) (y30))
                                            + crAmount_19)));

                                }

                            }
                            ;

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 5428
                             */
                            if ((((getMEMINT((int) (((cspec + ((int) (cisp_16) * 100)) + 68)))) > (0)) ? 1
                                    : 0) != 0) {

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 5429
                                 */
                                if ((((((((((cimode) == (1)) ? 1 : 0)) != 0)
                                        ? ((((getMEMINT((int) (((cspec + ((int) (cisp_16) * 100))
                                                + 72)))) < (getMEMINT((int) (((cspec
                                                        + ((int) (cisp_16) * 100)) + 68))))) ? 1 : 0))
                                        : 0)) != 0)
                                                ? 1
                                                : (((((((cimode) == ((-(1)))) ? 1
                                                        : 0)) != 0) ? ((((getMEMINT((int) (((cspec
                                                                + ((int) (cisp_16) * 100)) + 72)))) > (1)) ? 1
                                                                        : 0))
                                                                : 0))) != 0) {
                                    setMEMINT((int) (((cspec + ((int) (cisp_16) * 100)) + 72)), (int) (
                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 5429
                                     */
                                    marxan.cCountSeparation2(cisp_16, 0, (int) (0), cpuno, (int) (cR), (int) (cpu), (int) (cSM), (int) (cspec), 0)));

                                }
                                ;

                            }
                            ;

                        }
                        ci_14++;

                    }

                }
                ;
                setMEMINT((int) ((cR + (cipu * 4))), (int) (ciZone));
                setMEMDOUBLE((int) ((creserve + 0)), (double) (((getMEMDOUBLE((int) ((creserve + 28)))
                        + getMEMDOUBLE((int) ((creserve + 8)))) + getMEMDOUBLE((int) ((creserve + 20))))));

            }
        }
        ;
        prevlevel();
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 5444 */

    public static int cCountMissing(int cspno, int cspec, double cmisslevel, int cshortfall, int crMinimumProportionMet) {
        nextlevel();
        if (true) {
            int label = 0;
            int retval = 0;
            int ci_8 = 0;
            int cj_9 = 0;
            int cisp_10 = 0;
            int ciArrayIndex_11 = 0;
            double crFeatureShortfall_12 = 0;
            double crProportionMet_13 = 0;
            int y31 = 0;

            {
                ci_8 = 0;
                cj_9 = 0;
                cisp_10 = 0;
                ciArrayIndex_11 = 0;
                crFeatureShortfall_12 = 0;
                crProportionMet_13 = 0;
                setMEMDOUBLE((int) (cshortfall), (double) (0));
                setMEMDOUBLE((int) (crMinimumProportionMet), (double) (1));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 5540 */
                ci_8 = 0;
                lab_marxan169: for (; (((ci_8) < (cspno)) ? 1 : 0) != 0;) {

                    {
                        crFeatureShortfall_12 = 0;
                        crProportionMet_13 = 1;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 5464
                         */
                        if ((((getMEMDOUBLE((int) (((cspec + ((int) (ci_8) * 100)) + 12)))) > (0)) ? 1
                                : 0) != 0) {

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 5465
                             */
                            if ((((getMEMDOUBLE((int) (((cspec + ((int) (ci_8) * 100))
                                    + 48)))) < (getMEMDOUBLE((int) (((cspec + ((int) (ci_8) * 100)) + 12)))))
                                            ? 1 : 0) != 0) {

                                {
                                    crFeatureShortfall_12 += (getMEMDOUBLE((int) (((cspec
                                            + ((int) (ci_8) * 100)) + 12)))
                                            - getMEMDOUBLE((int) (((cspec + ((int) (ci_8) * 100)) + 48))));
                                    crProportionMet_13 = (getMEMDOUBLE((int) (((cspec + ((int) (ci_8) * 100))
                                            + 48)))
                                            / getMEMDOUBLE((int) (((cspec + ((int) (ci_8) * 100)) + 12))));

                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 5470
                                     */
                                    if ((((crProportionMet_13) < (getMEMDOUBLE((int) (crMinimumProportionMet))))
                                            ? 1 : 0) != 0) {
                                        setMEMDOUBLE((int) (crMinimumProportionMet), (double) (crProportionMet_13));

                                    }
                                    ;

                                }

                            }
                            ;

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 5473
                         */
                        if ((((getMEMINT((int) (((cspec + ((int) (ci_8) * 100)) + 28)))) > (0)) ? 1
                                : 0) != 0) {

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 5474
                             */
                            if ((((getMEMINT((int) (((cspec + ((int) (ci_8) * 100))
                                    + 56)))) < (getMEMINT((int) (((cspec + ((int) (ci_8) * 100)) + 28))))) ? 1
                                            : 0) != 0) {

                                {
                                    crFeatureShortfall_12 += (getMEMINT((int) (((cspec + ((int) (ci_8) * 100))
                                            + 28)))
                                            - getMEMINT((int) (((cspec + ((int) (ci_8) * 100)) + 56))));
                                    crProportionMet_13 = (getMEMINT((int) (((cspec + ((int) (ci_8) * 100))
                                            + 56)))
                                            / getMEMINT((int) (((cspec + ((int) (ci_8) * 100)) + 28))));

                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 5479
                                     */
                                    if ((((crProportionMet_13) < (getMEMDOUBLE((int) (crMinimumProportionMet))))
                                            ? 1 : 0) != 0) {
                                        setMEMDOUBLE((int) (crMinimumProportionMet), (double) (crProportionMet_13));

                                    }
                                    ;

                                }

                            }
                            ;

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 5482
                         */
                        if ((((getMEMDOUBLE((int) (((cspec + ((int) (ci_8) * 100)) + 12)))) > (0)) ? 1
                                : 0) != 0) {

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 5483
                             */
                            if (((((getMEMDOUBLE((int) (((cspec + ((int) (ci_8) * 100)) + 48)))
                                    / getMEMDOUBLE((int) (((cspec + ((int) (ci_8) * 100))
                                            + 12))))) < (cmisslevel)) ? 1 : 0) != 0) {

                                {
                                    cisp_10++;

                                }

                            }
                            ;

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 5519
                         */
                        cj_9 = 0;
                        lab_marxan170: for (; (((cj_9) < (getMEMINT((int) (marxan.ciZoneCount)))) ? 1
                                : 0) != 0;) {

                            {
                                ciArrayIndex_11 = ((ci_8 * getMEMINT((int) (marxan.ciZoneCount))) + cj_9);

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 5492
                                 */
                                if ((((getMEMDOUBLE((int) (((getMEMINT((int) (marxan.c_ZoneTarget))
                                        + (ciArrayIndex_11 * 12)) + 0)))) > (0)) ? 1 : 0) != 0) {

                                    {

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 5494
                                         */
                                        if ((((getMEMDOUBLE((int) (((getMEMINT((int) (marxan.cZoneSpec))
                                                + (ciArrayIndex_11 * 12))
                                                + 0)))) < (getMEMDOUBLE((int) (((getMEMINT((int) (marxan.c_ZoneTarget))
                                                        + (ciArrayIndex_11 * 12)) + 0))))) ? 1 : 0) != 0) {

                                            {
                                                crFeatureShortfall_12 += (getMEMDOUBLE((int) (((getMEMINT((int) (marxan.c_ZoneTarget))
                                                        + (ciArrayIndex_11 * 12)) + 0)))
                                                        - getMEMDOUBLE((int) (((getMEMINT((int) (marxan.cZoneSpec))
                                                                + (ciArrayIndex_11 * 12)) + 0))));
                                                crProportionMet_13 = (getMEMDOUBLE((int) (((getMEMINT((int) (marxan.cZoneSpec))
                                                        + (ciArrayIndex_11 * 12)) + 0)))
                                                        / getMEMDOUBLE((int) (((getMEMINT((int) (marxan.c_ZoneTarget))
                                                                + (ciArrayIndex_11 * 12)) + 0))));

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 5500
                                                 */
                                                if ((((crProportionMet_13) < (getMEMDOUBLE((int) (crMinimumProportionMet))))
                                                        ? 1 : 0) != 0) {
                                                    setMEMDOUBLE((int) (crMinimumProportionMet), (double) (crProportionMet_13));

                                                }
                                                ;

                                            }

                                        }
                                        ;

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 5503
                                         */
                                        if (((((getMEMDOUBLE((int) (((getMEMINT((int) (marxan.cZoneSpec))
                                                + (ciArrayIndex_11 * 12)) + 0)))
                                                / getMEMDOUBLE((int) (((getMEMINT((int) (marxan.c_ZoneTarget))
                                                        + (ciArrayIndex_11 * 12)) + 0))))) < (cmisslevel)) ? 1
                                                                : 0) != 0) {
                                            cisp_10++;

                                        }
                                        ;

                                    }

                                }
                                ;

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 5506
                                 */
                                if ((((getMEMINT((int) (((getMEMINT((int) (marxan.c_ZoneTarget))
                                        + (ciArrayIndex_11 * 12)) + 8)))) > (0)) ? 1 : 0) != 0) {

                                    {

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 5508
                                         */
                                        if ((((getMEMINT((int) (((getMEMINT((int) (marxan.cZoneSpec))
                                                + (ciArrayIndex_11 * 12))
                                                + 8)))) < (getMEMINT((int) (((getMEMINT((int) (marxan.c_ZoneTarget))
                                                        + (ciArrayIndex_11 * 12)) + 8))))) ? 1 : 0) != 0) {

                                            {
                                                crFeatureShortfall_12 += (getMEMINT((int) (((getMEMINT((int) (marxan.c_ZoneTarget))
                                                        + (ciArrayIndex_11 * 12)) + 8)))
                                                        - getMEMINT((int) (((getMEMINT((int) (marxan.cZoneSpec))
                                                                + (ciArrayIndex_11 * 12)) + 8))));
                                                crProportionMet_13 = (getMEMINT((int) (((getMEMINT((int) (marxan.cZoneSpec))
                                                        + (ciArrayIndex_11 * 12)) + 8)))
                                                        / getMEMINT((int) (((getMEMINT((int) (marxan.c_ZoneTarget))
                                                                + (ciArrayIndex_11 * 12)) + 8))));

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 5514
                                                 */
                                                if ((((crProportionMet_13) < (getMEMDOUBLE((int) (crMinimumProportionMet))))
                                                        ? 1 : 0) != 0) {
                                                    setMEMDOUBLE((int) (crMinimumProportionMet), (double) (crProportionMet_13));

                                                }
                                                ;

                                            }

                                        }
                                        ;

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 5517
                                         */
                                        if (((((getMEMINT((int) (((getMEMINT((int) (marxan.cZoneSpec))
                                                + (ciArrayIndex_11 * 12)) + 8)))
                                                / getMEMINT((int) (((getMEMINT((int) (marxan.c_ZoneTarget))
                                                        + (ciArrayIndex_11 * 12)) + 8))))) < (cmisslevel)) ? 1
                                                                : 0) != 0) {
                                            cisp_10++;

                                        }
                                        ;

                                    }

                                }
                                ;

                            }
                            cj_9++;

                        }

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 5522
                         */
                        if (getMEMINT((int) (((cspec + ((int) (ci_8) * 100)) + 28))) != 0) {

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 5523
                             */
                            if ((((((double) (getMEMINT((int) (((cspec + ((int) (ci_8) * 100)) + 56))))
                                    / (double) (getMEMINT((int) (((cspec + ((int) (ci_8) * 100))
                                            + 28)))))) < (cmisslevel)) ? 1 : 0) != 0) {

                                {
                                    cisp_10++;

                                }

                            }
                            ;

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 5529
                         */
                        if ((((getMEMDOUBLE((int) (((cspec + ((int) (ci_8) * 100)) + 60)))) != 0)
                                ? ((((getMEMINT((int) (((cspec + ((int) (ci_8) * 100)) + 72)))) < (3)) ? 1
                                        : 0))
                                : 0) != 0) {

                            {
                                cisp_10++;

                            }

                        }
                        ;
                        y31 = (int) (cshortfall);
                        setMEMDOUBLE((int) (y31), (double) ((getMEMDOUBLE((int) (y31))
                                + crFeatureShortfall_12)));

                    }
                    ci_8++;

                }
                retval = cisp_10;
                if (true) {
                    prevlevel();
                    return retval;
                }
                ;

            }
        }
        ;
        prevlevel();
        return 0;
    }

    static int strmarxan379 = jtocstr("");
    static int strmarxan380 = jtocstr(" ");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 5551 */

    public static void cCountPuZones(int csLine, int cpuno, int cR) {
        nextlevel();
        if (true) {
            int label = 0;
            int ci_5 = 0;
            int cZoneCount_6 = 0;
            int csCount_7 = 0;
            int y32 = 0;

            {
                ci_5 = 0;
                cZoneCount_6 = 0;
                csCount_7 = calloca(20);
                cZoneCount_6 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 5554 */
                ccalloc(getMEMINT((int) (marxan.ciZoneCount)), 4));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 5556 */
                ci_5 = 0;
                lab_marxan171: for (; (((ci_5) < (getMEMINT((int) (marxan.ciZoneCount)))) ? 1 : 0) != 0;) {
                    setMEMINT((int) ((cZoneCount_6 + (ci_5 * 4))), (int) (0));
                    ci_5++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 5562 */
                ci_5 = 0;
                lab_marxan172: for (; (((ci_5) < (cpuno)) ? 1 : 0) != 0;) {

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 5560 */
                    if ((((getMEMINT((int) ((cR + ((int) (ci_5) * 4))))) > (0)) ? 1 : 0) != 0) {
                        y32 = (int) ((cZoneCount_6
                                + ((getMEMINT((int) ((cR + ((int) (ci_5) * 4)))) - 1) * 4)));
                        setMEMINT((int) (y32), (int) ((getMEMINT((int) (y32)) + 1)));

                    }
                    ;
                    ci_5++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 5562 */
                cstrcpy(csLine, strmarxan379);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 5570 */
                ci_5 = 0;
                lab_marxan173: for (; (((ci_5) < (getMEMINT((int) (marxan.ciZoneCount)))) ? 1 : 0) != 0;) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 5565
                         */
                        cstrcat(csLine, strmarxan380);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 5566
                         */
                        cstrcat(csLine, (int) (((getMEMINT((int) (marxan.cZones)) + (ci_5 * 254)) + 4)));
                        startargs(getMEMINT((int) ((cZoneCount_6 + (ci_5 * 4)))));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 5567
                         */
                        csprintf((int) (csCount_7), strmarxan234, endargs());

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 5568
                         */
                        cstrcat(csLine, strmarxan380);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 5569
                         */
                        cstrcat(csLine, (int) (csCount_7));

                    }
                    ci_5++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 5572 */
                cfree(cZoneCount_6);

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan381 = jtocstr("Value %.1f Cost %.1f %s Connection %.1f Missing %i Shortfall %.2f Penalty %.1f MPM %.1f\n");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 5578 */

    public static void cPrintResVal(int cpuno, int cspno, int cR, int creserve, int cspec, double cmisslevel) {
        nextlevel();
        if (true) {
            int label = 0;
            int ci_8 = 0;
            int ciMissing_9 = 0;
            double cconnectiontemp_10 = 0;
            int cshortfall_11 = alloconstack(0);
            int crMPM_12 = alloconstack(0);
            int csPuZones_13 = 0;

            {
                ci_8 = 0;
                ciMissing_9 = 0;
                cconnectiontemp_10 = 0;
                setMEMINT((int) (cshortfall_11), (int) (0));
                setMEMINT((int) (crMPM_12), (int) (0));
                csPuZones_13 = calloca(1000);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 5588 */
                ci_8 = 0;
                lab_marxan174: for (; (((ci_8) < (cpuno)) ? 1 : 0) != 0;) {

                    {
                        cconnectiontemp_10 +=
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 5587
                                 */
                                cConnectionCost2Linear(ci_8, getMEMINT((int) ((cR + ((int) (ci_8)
                                        * 4)))), (int) (getMEMINT((int) (marxan.cpu))), (int) (getMEMINT((int) (marxan.cconnections))), (int) (cR), 1, 0);

                    }
                    ci_8++;

                }
                ciMissing_9 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 5590
                         */
                        cCountMissing(cspno, (int) (cspec), cmisslevel, cshortfall_11, crMPM_12);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 5591 */
                cCountPuZones((int) (csPuZones_13), cpuno, (int) (cR));
                startargs(getMEMDOUBLE((int) ((creserve + 0))));
                addarg(getMEMDOUBLE((int) ((creserve + 28))));
                addarg(csPuZones_13);
                addarg(cconnectiontemp_10);
                addarg(ciMissing_9);
                addarg(getMEMDOUBLE((int) (cshortfall_11)));
                addarg(getMEMDOUBLE((int) ((creserve + 20))));
                addarg(getMEMDOUBLE((int) (crMPM_12)));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 5595 */
                marxan.cShowProg((int) (strmarxan381), endargs());

            }
        }
        ;
        prevlevel();
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 5603 */

    public static void cChangeCost(int ccost, double cchangemult) {
        nextlevel();
        if (true) {
            int label = 0;
            int y33 = 0;
            int y34 = 0;
            int y35 = 0;
            int y36 = 0;

            {
                y33 = (int) ((ccost + 0));
                setMEMDOUBLE((int) (y33), (double) ((getMEMDOUBLE((int) (y33)) * cchangemult)));
                y34 = (int) ((ccost + 8));
                setMEMDOUBLE((int) (y34), (double) ((getMEMDOUBLE((int) (y34)) * cchangemult)));
                y35 = (int) ((ccost + 20));
                setMEMDOUBLE((int) (y35), (double) ((getMEMDOUBLE((int) (y35)) * cchangemult)));
                y36 = (int) ((ccost + 28));
                setMEMDOUBLE((int) (y36), (double) ((getMEMDOUBLE((int) (y36)) * cchangemult)));

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan382 = jtocstr("ConnollyInit start\n");
    static int strmarxan383 = jtocstr("PuZone endless loop in Annealing detected\n");
    static int strmarxan384 = jtocstr("puid %i iZone %i\n");
    static int strmarxan385 = jtocstr("j %i zone %i\n");
    static int strmarxan386 = jtocstr("\nPuZone endless loop in Annealing detected\n");
    static int strmarxan387 = jtocstr("Tinit %g Titns %i Tcool %g\n");
    static int strmarxan388 = jtocstr("ConnollyInit end\n");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 5627 */

    public static void cConnollyInit(int cirun, int cpuno, int cspno, int cpu, int cconnections, int cspec, int cSM, int canneal, int caggexist, int cR, double cprop, int cclumptype, int ciZoneCount, int cverbose) {
        nextlevel();
        if (true) {
            int label = 0;
            int ci_16 = 0;
            int cipu_17 = 0;
            int cimode_18 = 0;
            int ciZone_19 = 0;
            int ciOldR_20 = 0;
            int ciPreviousR_21 = 0;
            int cj_22 = 0;
            double cdeltamin_23 = 0;
            double cdeltamax_24 = 0;
            double ciLoopCounter_25 = 0;
            double clocaldelta_26 = 0;
            int cdebugbuffer_27 = 0;
            int csRun_28 = 0;
            int cfp_29 = 0;
            int cwritename_30 = 0;

            {
                ci_16 = 0;
                cipu_17 = 0;
                cimode_18 = 0;
                ciZone_19 = 0;
                ciOldR_20 = 0;
                ciPreviousR_21 = 0;
                cj_22 = 0;
                cdeltamin_23 = 0;
                cdeltamax_24 = 0;
                ciLoopCounter_25 = 0;
                clocaldelta_26 = 0;
                cdebugbuffer_27 = calloca(1000);
                csRun_28 = calloca(20);
                cfp_29 = 0;
                cwritename_30 = 0;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 5638 */
                csprintf((int) (cdebugbuffer_27), strmarxan382, 0);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 5639 */
                marxan.cAppendDebugTraceFile((int) (cdebugbuffer_27), 0);
                clocaldelta_26 = 1E-10;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 5645 */
                if (caggexist != 0) {

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 5645 */
                    marxan.cClearClumps(cspno, (int) (cspec), (int) (cpu), (int) (cSM));

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 5667 */
                cZonationCost(cirun, cpuno, cspno, (int) (cR), (int) (cpu), (int) (cconnections), (int) (cSM), (int) (cspec), caggexist, (int) (marxan.creserve), cclumptype, cprop, 1);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 5758 */
                ci_16 = 1;
                lab_marxan175: for (; (((ci_16) <= ((getMEMINT((int) ((canneal + 4))) / 100))) ? 1
                        : 0) != 0;) {

                    {

                        lab_marxan176: do {
                            cipu_17 =
                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 5682
                                     */
                                    marxan.cRandNum(cpuno);

                        } while (((((((getMEMINT((int) (((cpu + ((int) (cipu_17) * 64)) + 4)))) > (1)) ? 1
                                : 0)) != 0) ? 1
                                        : ((((getMEMINT((int) (((cpu + ((int) (cipu_17) * 64))
                                                + 40)))) == (1)) ? 1 : 0))) != 0);
                        ciPreviousR_21 = getMEMINT((int) ((cR + ((int) (cipu_17) * 4))));
                        ciLoopCounter_25 = 0;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 5691
                         */
                        if ((((getMEMINT((int) (((cpu + ((int) (cipu_17) * 64)) + 48)))) == (1)) ? 1
                                : 0) != 0) {

                            {

                                lab_marxan177: do {

                                    {
                                        ciZone_19 = (
                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 5695
                                         */
                                        marxan.cRandNum(ciZoneCount) + 1);
                                        ciLoopCounter_25++;

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 5700
                                         */
                                        if ((((ciLoopCounter_25) > (5000)) ? 1 : 0) != 0) {

                                            {

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 5702
                                                 */
                                                cDumpPuZone_Debug(getMEMINT((int) (marxan.ciPuZoneCount)), (int) (getMEMINT((int) (marxan.cPuZone))), (int) (marxan.cfnames), 999);

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 5703
                                                 */
                                                marxan.cAppendDebugTraceFile((int) (strmarxan383), 0);
                                                startargs(getMEMINT((int) (((cpu + ((int) (cipu_17) * 64))
                                                        + 0))));
                                                addarg(ciZone_19);

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 5704
                                                 */
                                                csprintf((int) (cdebugbuffer_27), strmarxan384, endargs());

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 5705
                                                 */
                                                marxan.cAppendDebugTraceFile((int) (cdebugbuffer_27), 0);

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 5710
                                                 */
                                                cj_22 = 0;
                                                lab_marxan178: for (; (((cj_22) < (getMEMINT((int) (((cpu
                                                        + ((int) (cipu_17) * 64)) + 56))))) ? 1 : 0) != 0;) {

                                                    {
                                                        startargs(cj_22);
                                                        addarg(getMEMINT((int) (((getMEMINT((int) (marxan.cPuZone))
                                                                + ((getMEMINT((int) (((cpu
                                                                        + ((int) (cipu_17) * 64)) + 52)))
                                                                        + cj_22) * 8))
                                                                + 4))));

                                                        /*
                                                         * file
                                                         * E:/git/klab-ecology-component/
                                                         * etc/marxan/marxan.c line 5708
                                                         */
                                                        csprintf((int) (cdebugbuffer_27), strmarxan385, endargs());

                                                        /*
                                                         * file
                                                         * E:/git/klab-ecology-component/
                                                         * etc/marxan/marxan.c line 5709
                                                         */
                                                        marxan.cAppendDebugTraceFile((int) (cdebugbuffer_27), 0);

                                                    }
                                                    cj_22++;

                                                }

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 5712
                                                 */
                                                marxan.cShowGenProg((int) (strmarxan386), 0);

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 5713
                                                 */
                                                marxan.cShowGenProg((int) (strmarxan356), 0);

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 5714
                                                 */
                                                marxan.cShowPauseExit();

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 5715
                                                 */
                                                cexit(1);

                                            }

                                        }
                                        ;

                                    }

                                } while (((((((ciZone_19) == (ciPreviousR_21)) ? 1 : 0)) != 0) ? 1 : (
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 5718
                                 */
                                cPuNotInAllowedZone((int) ((cpu + ((int) (cipu_17)
                                        * 64))), ciZone_19, (int) (getMEMINT((int) (marxan.cPuZone))), 0, (byte) (99)))) != 0);

                            }

                        } else {

                            {

                                lab_marxan179: do {
                                    ciZone_19 = (
                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 5724
                                     */
                                    marxan.cRandNum(ciZoneCount) + 1);

                                } while ((((ciZone_19) == (ciPreviousR_21)) ? 1 : 0) != 0);

                            }

                        }
                        ;
                        cimode_18 = 1;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 5734
                         */
                        cCheckChange(ci_16, cipu_17, cpuno, (int) (cpu), (int) (cconnections), (int) (cspec), (int) (cSM), (int) (cR), cimode_18, ciZone_19, (int) (marxan.cchange), (int) (marxan.creserve), 0, 0, 0, 0, cclumptype, 1);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 5740
                         */
                        cDoChange(cipu_17, cpuno, (int) (cR), (int) (marxan.creserve), (int) (marxan.cchange), (int) (cpu), (int) (cSM), (int) (cspec), (int) (cconnections), cimode_18, ciZone_19, cclumptype);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 5747
                         */
                        if ((((getMEMDOUBLE((int) ((marxan.cchange + 0)))) > (cdeltamax_24)) ? 1 : 0) != 0) {
                            cdeltamax_24 = getMEMDOUBLE((int) ((marxan.cchange + 0)));

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 5749
                         */
                        if (((((((getMEMDOUBLE((int) ((marxan.cchange + 0)))) > (clocaldelta_26)) ? 1
                                : 0)) != 0)
                                        ? (((((((cdeltamin_23) < (clocaldelta_26)) ? 1
                                                : 0)) != 0)
                                                        ? 1
                                                        : ((((getMEMDOUBLE((int) ((marxan.cchange
                                                                + 0)))) < (cdeltamin_23)) ? 1 : 0))))
                                        : 0) != 0) {
                            cdeltamin_23 = getMEMDOUBLE((int) ((marxan.cchange + 0)));

                        }
                        ;

                    }
                    ci_16++;

                }
                setMEMDOUBLE((int) ((canneal + 12)), (double) (cdeltamax_24));
                cdeltamin_23 *= 0.1;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 5764 */
                if (getMEMDOUBLE((int) ((canneal + 12))) != 0) {

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 5765 */
                    if (getMEMINT((int) ((canneal + 0))) != 0) {
                        setMEMDOUBLE((int) ((canneal + 20)), (double) (
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 5765
                         */
                        cexp((
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 5765
                         */
                        clog((cdeltamin_23 / getMEMDOUBLE((int) ((canneal + 12)))))
                                / (double) (getMEMINT((int) ((canneal + 0))))))));

                    } else {
                        setMEMDOUBLE((int) ((canneal + 20)), (double) (1));

                    }
                    ;

                }
                ;
                startargs(getMEMDOUBLE((int) ((canneal + 12))));
                addarg(getMEMINT((int) ((canneal + 0))));
                addarg(getMEMDOUBLE((int) ((canneal + 20))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 5774 */
                csprintf((int) (cdebugbuffer_27), strmarxan387, endargs());

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 5775 */
                marxan.cAppendDebugTraceFile((int) (cdebugbuffer_27), 0);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 5776 */
                marxan.cAppendDebugTraceFile((int) (strmarxan388), 0);

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan389 = jtocstr("AdaptiveInit start\n");
    static int strmarxan390 = jtocstr("AdaptiveInit end\n");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 5786 */

    public static void cAdaptiveInit(int cirun, int cpuno, int cspno, double cprop, int cR, int cpu, int cconnections, int cSM, int cspec, int caggexist, int canneal, int cclumptype, int ciZoneCount) {
        nextlevel();
        if (true) {
            int label = 0;
            int ci_15 = 0;
            int cisamples_16 = 0;
            double csum_17 = 0;
            double csum2_18 = 0;
            double csigma_19 = 0;
            int ccost_20 = 0;
            double cc_21 = 0;
            int cdebugbuffer_22 = 0;

            {
                ci_15 = 0;
                cisamples_16 = 0;
                csum_17 = 0;
                csum2_18 = 0;
                csigma_19 = 0;
                ccost_20 = calloca(52);
                cc_21 = 10;
                cdebugbuffer_22 = calloca(1000);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 5797 */
                marxan.cAppendDebugTraceFile((int) (strmarxan389), 0);
                cisamples_16 = 1000;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 5811 */
                ci_15 = 0;
                lab_marxan180: for (; (((ci_15) < (cisamples_16)) ? 1 : 0) != 0;) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 5807
                         */
                        cZonationCost(cirun, cpuno, cspno, (int) (cR), (int) (cpu), (int) (cconnections), (int) (cSM), (int) (cspec), caggexist, (int) (ccost_20), cclumptype, cprop, 1);
                        csum_17 += getMEMDOUBLE((int) ((ccost_20 + 0)));
                        csum2_18 += (getMEMDOUBLE((int) ((ccost_20 + 0)))
                                * getMEMDOUBLE((int) ((ccost_20 + 0))));

                    }
                    ci_15++;

                }
                csigma_19 = (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 5813 */
                csqrt((csum2_18 -
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 5813 */
                        cpow((csum_17 / (double) (cisamples_16)), 2))) / (double) ((cisamples_16 - 1)));
                setMEMDOUBLE((int) ((canneal + 12)), (double) ((cc_21 * csigma_19)));
                setMEMDOUBLE((int) ((canneal + 48)), (double) (csigma_19));
                setMEMDOUBLE((int) ((canneal + 28)), (double) (getMEMDOUBLE((int) ((canneal + 12)))));
                setMEMDOUBLE((int) ((canneal + 36)), (double) (getMEMDOUBLE((int) ((canneal + 28)))));
                setMEMDOUBLE((int) ((canneal + 56)), (double) (0));
                setMEMDOUBLE((int) ((canneal + 64)), (double) (0));
                startargs(getMEMDOUBLE((int) ((canneal + 12))));
                addarg(getMEMINT((int) ((canneal + 0))));
                addarg(getMEMDOUBLE((int) ((canneal + 20))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 5823 */
                csprintf((int) (cdebugbuffer_22), strmarxan387, endargs());

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 5824 */
                marxan.cAppendDebugTraceFile((int) (cdebugbuffer_22), 0);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 5828 */
                marxan.cAppendDebugTraceFile((int) (strmarxan390), 0);

            }
        }
        ;
        prevlevel();
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 5837 */

    public static void cAdaptiveDec(int canneal) {
        nextlevel();
        if (true) {
            int label = 0;
            double comega_3 = 0;
            double csigmanew_4 = 0;
            double csigmamod_5 = 0;
            double clambda_6 = 0;

            {
                comega_3 = 0.7;
                csigmanew_4 = 0;
                csigmamod_5 = 0;
                clambda_6 = 0.7;
                csigmanew_4 = ((getMEMDOUBLE((int) ((canneal + 64))) -
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 5843 */
                        cpow((getMEMDOUBLE((int) ((canneal + 56)))
                                / (double) (getMEMINT((int) ((canneal + 8))))), 2))
                        / (double) ((getMEMINT((int) ((canneal + 8))) - 1)));
                csigmamod_5 = (((1 - comega_3) * csigmanew_4) + ((comega_3
                        * getMEMDOUBLE((int) ((canneal + 48))))
                        * (getMEMDOUBLE((int) ((canneal + 28))) / getMEMDOUBLE((int) ((canneal + 36))))));
                setMEMDOUBLE((int) ((canneal + 36)), (double) (getMEMDOUBLE((int) ((canneal + 28)))));
                setMEMDOUBLE((int) ((canneal + 28)), (double) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 5846 */
                cexp((((-(clambda_6)) * getMEMDOUBLE((int) ((canneal + 28)))) / csigmamod_5))));
                setMEMDOUBLE((int) ((canneal + 48)), (double) (csigmamod_5));
                setMEMDOUBLE((int) ((canneal + 56)), (double) (0));
                setMEMDOUBLE((int) ((canneal + 64)), (double) (0));

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan391 = jtocstr("Annealing start iterations %i\n");
    static int strmarxan392 = jtocstr("debug_marzone_annealing_.csv");
    static int strmarxan393 = jtocstr("debug_marzone_annealing_");
    static int strmarxan394 = jtocstr("cannot create annealing file %s\n");
    static int strmarxan395 = jtocstr("itime,ipu,puid,R,itemp,iZone,iGoodChange,changetotal,changecost,changeconnection,changepen,temp\n");
    static int strmarxan396 = jtocstr("%s_anneal_objective%05i.csv");
    static int strmarxan397 = jtocstr("%s_anneal_objective%05i.txt");
    static int strmarxan398 = jtocstr("%s_anneal_objective%05i.dat");
    static int strmarxan399 = jtocstr("cannot create threshold trace file %s\n");
    static int strmarxan400 = jtocstr("iteration,threshold,dochange,total,cost,connection,penalty,shortfall,puindex,anneal.temp\n");
    static int strmarxan401 = jtocstr("%i,%f,%i,%f,%f,%f,%f,%f,%i,%f\n");
    static int strmarxan402 = jtocstr("iteration threshold dochange total cost connection penalty shortfall puindex\n");
    static int strmarxan403 = jtocstr("%i %f %i %f %f %f %f %f %i %f\n");
    static int strmarxan404 = jtocstr("%s_anneal_zones%05i.csv");
    static int strmarxan405 = jtocstr("%s_anneal_zones%05i.txt");
    static int strmarxan406 = jtocstr("%s_anneal_zones%05i.dat");
    static int strmarxan407 = jtocstr("configuration");
    static int strmarxan408 = jtocstr("\n0");
    static int strmarxan409 = jtocstr(" %i");
    static int strmarxan410 = jtocstr("  Main Annealing Section.\n");
    static int strmarxan411 = jtocstr("time %i temp %f Complete %i%% currval %.4f\n");
    static int strmarxan412 = jtocstr("_r%05i");
    static int strmarxan413 = jtocstr("%s_snap%st%05i.csv");
    static int strmarxan414 = jtocstr("%s_snap%st%05i.txt");
    static int strmarxan415 = jtocstr("%s_snap%st%05i.dat");
    static int strmarxan416 = jtocstr("%s_snap%sc%05i.csv");
    static int strmarxan417 = jtocstr("%s_snap%sc%05i.txt");
    static int strmarxan418 = jtocstr("%s_snap%sc%05i.dat");
    static int strmarxan419 = jtocstr("%i,%i,%i,%i,%i,%i,%i,%f,%f,%f,%f,%f\n");
    static int strmarxan420 = jtocstr("  Annealing:");
    static int strmarxan421 = jtocstr("Annealing before ResevedCost\n");
    static int strmarxan422 = jtocstr("Annealing end changes %i\n");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 5864 */

    public static void cAnnealing(int cspno, int cpuno, int cconnections, int cR, int cspec, int cpu, int cSM, int cchange, int creserve, int crepeats, int cirun, int csavename, int cverbose, double cmisslevel, int caggexist, double ccostthresh, double ctpf1, double ctpf2, int cclumptype, double cprop) {
        nextlevel();
        if (true) {
            int label = 0;
            int citime_22 = 0;
            int ciPreviousR_23 = 0;
            int ciZone_24 = 0;
            int ciGoodChange_25 = 0;
            int ciLoopCounter_26 = 0;
            int cipu_27 = 0;
            int ci_28 = 0;
            int citemp_29 = 0;
            int ciRowCounter_30 = 0;
            int ciRowLimit_31 = 0;
            int ctempname1_32 = 0;
            int ctempname2_33 = 0;
            int csRun_34 = 0;
            int csnapcount_35 = 0;
            int cichanges_36 = 0;
            int cdebugbuffer_37 = 0;
            int cfp_38 = 0;
            int cttfp_39 = 0;
            int czonefp_40 = 0;
            int cwritename_41 = 0;
            int y37 = 0;
            int y38 = 0;

            {
                citime_22 = 0;
                ciPreviousR_23 = 0;
                ciZone_24 = 0;
                ciGoodChange_25 = 0;
                ciLoopCounter_26 = 0;
                cipu_27 = (-(1));
                ci_28 = 0;
                citemp_29 = 0;
                ciRowCounter_30 = 0;
                ciRowLimit_31 = 0;
                ctempname1_32 = calloca(1000);
                ctempname2_33 = calloca(1000);
                csRun_34 = calloca(20);
                csnapcount_35 = 0;
                cichanges_36 = 0;
                cdebugbuffer_37 = calloca(1000);
                cfp_38 = 0;
                cttfp_39 = 0;
                czonefp_40 = 0;
                cwritename_41 = 0;
                startargs(getMEMINT((int) ((marxan.canneal + 4))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 5878 */
                csprintf((int) (cdebugbuffer_37), strmarxan391, endargs());

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 5879 */
                marxan.cAppendDebugTraceFile((int) (cdebugbuffer_37), 0);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 5881 */
                if ((((cverbose) > (4)) ? 1 : 0) != 0) {

                    {
                        startargs(cirun);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 5882
                         */
                        csprintf((int) (csRun_34), strmarxan234, endargs());
                        cwritename_41 = (int) (
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 5883
                         */
                        ccalloc((((
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 5883
                         */
                        cstrlen(getMEMINT((int) ((marxan.cfnames + 4)))) +
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 5883
                         */
                                cstrlen(strmarxan392)) +
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 5883
                         */
                                cstrlen((int) (csRun_34))) + 2), 1));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 5884
                         */
                        cstrcpy(cwritename_41, getMEMINT((int) ((marxan.cfnames + 4))));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 5885
                         */
                        cstrcat(cwritename_41, strmarxan393);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 5886
                         */
                        cstrcat(cwritename_41, (int) (csRun_34));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 5887
                         */
                        cstrcat(cwritename_41, strmarxan300);
                        cfp_38 =
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 5888
                                 */
                                cfopen(cwritename_41, strmarxan198);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 5890
                         */
                        if ((((cfp_38) == ((int) (0))) ? 1 : 0) != 0) {
                            startargs(cwritename_41);

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 5890
                             */
                            marxan.cShowErrorMessage((int) (strmarxan394), endargs());

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 5891
                         */
                        cfree(cwritename_41);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 5892
                         */
                        cfprintf(cfp_38, strmarxan395, 0);

                    }

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 5897 */
                if (getMEMINT((int) ((marxan.cfnames + 140))) != 0) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 5899
                         */
                        if ((((getMEMINT((int) ((marxan.cfnames + 140)))) == (3)) ? 1 : 0) != 0) {
                            startargs(csavename);
                            addarg((cirun % 10000));

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 5899
                             */
                            csprintf((int) (ctempname2_33), strmarxan396, endargs());

                        } else {

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 5902
                             */
                            if ((((getMEMINT((int) ((marxan.cfnames + 140)))) == (2)) ? 1 : 0) != 0) {
                                startargs(csavename);
                                addarg((cirun % 10000));

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 5902
                                 */
                                csprintf((int) (ctempname2_33), strmarxan397, endargs());

                            } else {
                                startargs(csavename);
                                addarg((cirun % 10000));

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 5904
                                 */
                                csprintf((int) (ctempname2_33), strmarxan398, endargs());

                            }
                            ;

                        }
                        ;
                        cwritename_41 = (int) (
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 5906
                         */
                        ccalloc(((
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 5906
                         */
                        cstrlen(getMEMINT((int) ((marxan.cfnames + 4)))) +
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 5906
                         */
                                cstrlen((int) (ctempname2_33))) + 2), 1));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 5907
                         */
                        cstrcat(cwritename_41, (int) (ctempname2_33));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 5909
                         */
                        cttfp_39 =
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 5908
                                 */
                                cfopen(cwritename_41, strmarxan198);
                        if ((((cttfp_39) == ((int) (0))) ? 1 : 0) != 0) {
                            startargs(cwritename_41);

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 5909
                             */
                            marxan.cShowErrorMessage((int) (strmarxan399), endargs());

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 5910
                         */
                        cfree(cwritename_41);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 5912
                         */
                        if ((((getMEMINT((int) ((marxan.cfnames + 140)))) > (1)) ? 1 : 0) != 0) {

                            {

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 5913
                                 */
                                cfprintf(cttfp_39, strmarxan400, 0);
                                startargs(citime_22);
                                addarg(ccostthresh);
                                addarg(ciGoodChange_25);
                                addarg(getMEMDOUBLE((int) ((creserve + 0))));
                                addarg(getMEMDOUBLE((int) ((creserve + 28))));
                                addarg(getMEMDOUBLE((int) ((creserve + 8))));
                                addarg(getMEMDOUBLE((int) ((creserve + 20))));
                                addarg(getMEMDOUBLE((int) ((creserve + 44))));
                                addarg(cipu_27);
                                addarg(getMEMDOUBLE((int) ((marxan.canneal + 28))));

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 5919
                                 */
                                cfprintf(cttfp_39, strmarxan401, endargs());

                            }

                        } else {

                            {

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 5923
                                 */
                                cfprintf(cttfp_39, strmarxan402, 0);
                                startargs(citime_22);
                                addarg(ccostthresh);
                                addarg(ciGoodChange_25);
                                addarg(getMEMDOUBLE((int) ((creserve + 0))));
                                addarg(getMEMDOUBLE((int) ((creserve + 28))));
                                addarg(getMEMDOUBLE((int) ((creserve + 8))));
                                addarg(getMEMDOUBLE((int) ((creserve + 20))));
                                addarg(getMEMDOUBLE((int) ((creserve + 44))));
                                addarg(cipu_27);
                                addarg(getMEMDOUBLE((int) ((marxan.canneal + 28))));

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 5929
                                 */
                                cfprintf(cttfp_39, strmarxan403, endargs());

                            }

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 5933
                         */
                        if ((((getMEMINT((int) ((marxan.cfnames + 148)))) == (0)) ? 1 : 0) != 0) {

                            {

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 5935
                                 */
                                if ((((getMEMINT((int) ((marxan.cfnames + 140)))) == (3)) ? 1 : 0) != 0) {
                                    startargs(csavename);
                                    addarg((cirun % 10000));

                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 5935
                                     */
                                    csprintf((int) (ctempname2_33), strmarxan404, endargs());

                                } else {

                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 5938
                                     */
                                    if ((((getMEMINT((int) ((marxan.cfnames + 140)))) == (2)) ? 1 : 0) != 0) {
                                        startargs(csavename);
                                        addarg((cirun % 10000));

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 5938
                                         */
                                        csprintf((int) (ctempname2_33), strmarxan405, endargs());

                                    } else {
                                        startargs(csavename);
                                        addarg((cirun % 10000));

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 5940
                                         */
                                        csprintf((int) (ctempname2_33), strmarxan406, endargs());

                                    }
                                    ;

                                }
                                ;
                                cwritename_41 = (int) (
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 5943
                                 */
                                ccalloc(((
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 5943
                                 */
                                cstrlen(getMEMINT((int) ((marxan.cfnames + 4)))) +
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 5943
                                 */
                                        cstrlen((int) (ctempname2_33))) + 2), 1));

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 5945
                                 */
                                cstrcat(cwritename_41, (int) (ctempname2_33));

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 5947
                                 */
                                czonefp_40 =
                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 5946
                                         */
                                        cfopen(cwritename_41, strmarxan198);
                                if ((((czonefp_40) == ((int) (0))) ? 1 : 0) != 0) {
                                    startargs(cwritename_41);

                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 5947
                                     */
                                    marxan.cShowErrorMessage((int) (strmarxan399), endargs());

                                }
                                ;

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 5948
                                 */
                                cfree(cwritename_41);

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 5949
                                 */
                                cfprintf(czonefp_40, strmarxan407, 0);

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 5951
                                 */
                                if ((((getMEMINT((int) ((marxan.cfnames + 140)))) > (1)) ? 1 : 0) != 0) {

                                    {

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 5953
                                         */
                                        ci_28 = 0;
                                        lab_marxan181: for (; (((ci_28) < (cpuno)) ? 1 : 0) != 0;) {
                                            startargs(getMEMINT((int) (((cpu + ((int) (ci_28) * 64)) + 0))));

                                            /*
                                             * file
                                             * E:/git/klab-ecology-component/etc/marxan/
                                             * marxan.c line 5953
                                             */
                                            cfprintf(czonefp_40, strmarxan240, endargs());
                                            ci_28++;

                                        }

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 5954
                                         */
                                        cfprintf(czonefp_40, strmarxan408, 0);

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 5957
                                         */
                                        ci_28 = 0;
                                        lab_marxan182: for (; (((ci_28) < (cpuno)) ? 1 : 0) != 0;) {
                                            startargs(getMEMINT((int) ((cR + ((int) (ci_28) * 4)))));

                                            /*
                                             * file
                                             * E:/git/klab-ecology-component/etc/marxan/
                                             * marxan.c line 5957
                                             */
                                            cfprintf(czonefp_40, strmarxan240, endargs());
                                            ci_28++;

                                        }

                                    }

                                } else {

                                    {

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 5962
                                         */
                                        ci_28 = 0;
                                        lab_marxan183: for (; (((ci_28) < (cpuno)) ? 1 : 0) != 0;) {
                                            startargs(getMEMINT((int) (((cpu + ((int) (ci_28) * 64)) + 0))));

                                            /*
                                             * file
                                             * E:/git/klab-ecology-component/etc/marxan/
                                             * marxan.c line 5962
                                             */
                                            cfprintf(czonefp_40, strmarxan409, endargs());
                                            ci_28++;

                                        }

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 5963
                                         */
                                        cfprintf(czonefp_40, strmarxan408, 0);

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 5966
                                         */
                                        ci_28 = 0;
                                        lab_marxan184: for (; (((ci_28) < (cpuno)) ? 1 : 0) != 0;) {
                                            startargs(getMEMINT((int) ((cR + ((int) (ci_28) * 4)))));

                                            /*
                                             * file
                                             * E:/git/klab-ecology-component/etc/marxan/
                                             * marxan.c line 5966
                                             */
                                            cfprintf(czonefp_40, strmarxan409, endargs());
                                            ci_28++;

                                        }

                                    }

                                }
                                ;

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 5968
                                 */
                                cfprintf(czonefp_40, strmarxan137, 0);

                            }

                        }
                        ;
                        ciRowCounter_30 = 0;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 5973
                         */
                        if ((((getMEMINT((int) ((marxan.cfnames + 144)))) == (0)) ? 1 : 0) != 0) {
                            ciRowLimit_31 = 0;

                        } else {
                            ciRowLimit_31 = (int) (
                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 5975
                             */
                            cfloor((getMEMINT((int) ((marxan.canneal + 4)))
                                    / getMEMINT((int) ((marxan.cfnames + 144))))));

                        }
                        ;

                    }

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 5978 */
                marxan.cShowGenProgInfo((int) (strmarxan410), 0);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6172 */
                citime_22 = 1;
                lab_marxan185: for (; (((citime_22) <= (getMEMINT((int) ((marxan.canneal + 4))))) ? 1
                        : 0) != 0;) {

                    {

                        lab_marxan186: do {
                            cipu_27 =
                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 5984
                                     */
                                    marxan.cRandNum(cpuno);

                        } while (((((((getMEMINT((int) (((cpu + ((int) (cipu_27) * 64)) + 4)))) > (1)) ? 1
                                : 0)) != 0) ? 1
                                        : ((((getMEMINT((int) (((cpu + ((int) (cipu_27) * 64))
                                                + 40)))) == (1)) ? 1 : 0))) != 0);
                        ciPreviousR_23 = getMEMINT((int) ((cR + ((int) (cipu_27) * 4))));
                        ciLoopCounter_26 = 0;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 5995
                         */
                        if ((((getMEMINT((int) (((cpu + ((int) (cipu_27) * 64)) + 48)))) == (1)) ? 1
                                : 0) != 0) {

                            {

                                lab_marxan187: do {

                                    {
                                        ciZone_24 = (
                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 5999
                                         */
                                        marxan.cRandNum(getMEMINT((int) (marxan.ciZoneCount))) + 1);
                                        ciLoopCounter_26++;

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 6004
                                         */
                                        if ((((ciLoopCounter_26) > (5000)) ? 1 : 0) != 0) {

                                            {

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 6006
                                                 */
                                                cDumpPuZone_Debug(getMEMINT((int) (marxan.ciPuZoneCount)), (int) (getMEMINT((int) (marxan.cPuZone))), (int) (marxan.cfnames), 999);

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 6007
                                                 */
                                                marxan.cAppendDebugTraceFile((int) (strmarxan383), 0);
                                                startargs(getMEMINT((int) (((cpu + ((int) (cipu_27) * 64))
                                                        + 0))));
                                                addarg(ciZone_24);

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 6008
                                                 */
                                                csprintf((int) (cdebugbuffer_37), strmarxan384, endargs());

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 6009
                                                 */
                                                marxan.cAppendDebugTraceFile((int) (cdebugbuffer_37), 0);

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 6011
                                                 */
                                                marxan.cShowGenProg((int) (strmarxan386), 0);

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 6012
                                                 */
                                                marxan.cShowGenProg((int) (strmarxan356), 0);

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 6013
                                                 */
                                                marxan.cShowPauseExit();

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 6014
                                                 */
                                                cexit(1);

                                            }

                                        }
                                        ;

                                    }

                                } while (((((((ciZone_24) == (ciPreviousR_23)) ? 1 : 0)) != 0) ? 1 : (
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 6017
                                 */
                                cPuNotInAllowedZone((int) ((cpu + ((int) (cipu_27)
                                        * 64))), ciZone_24, (int) (getMEMINT((int) (marxan.cPuZone))), 0, (byte) (98)))) != 0);

                            }

                        } else {

                            {

                                lab_marxan188: do {
                                    ciZone_24 = (
                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 6023
                                     */
                                    marxan.cRandNum(getMEMINT((int) (marxan.ciZoneCount))) + 1);

                                } while ((((ciZone_24) == (ciPreviousR_23)) ? 1 : 0) != 0);

                            }

                        }
                        ;
                        citemp_29 = 1;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 6039
                         */
                        cCheckChange(citime_22, cipu_27, cpuno, (int) (cpu), (int) (cconnections), (int) (cspec), (int) (cSM), (int) (cR), citemp_29, ciZone_24, cchange, creserve, ccostthresh, ctpf1, ctpf2, ((double) (citime_22)
                                / (double) (getMEMINT((int) ((marxan.canneal + 4))))), cclumptype, 1);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 6049
                         */
                        if (((((citime_22 % getMEMINT((int) ((marxan.canneal + 8))))) == (0)) ? 1 : 0) != 0) {

                            {

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 6051
                                 */
                                if ((((getMEMINT((int) ((marxan.canneal + 44)))) == (3)) ? 1 : 0) != 0) {

                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 6051
                                     */
                                    cAdaptiveDec((int) (marxan.canneal));

                                } else {
                                    setMEMDOUBLE((int) ((marxan.canneal
                                            + 28)), (double) ((getMEMDOUBLE((int) ((marxan.canneal + 28)))
                                                    * getMEMDOUBLE((int) ((marxan.canneal + 20))))));

                                }
                                ;
                                startargs(citime_22);
                                addarg(getMEMDOUBLE((int) ((marxan.canneal + 28))));
                                addarg((((int) (citime_22) * 100) / getMEMINT((int) ((marxan.canneal + 4)))));
                                addarg(getMEMDOUBLE((int) ((creserve + 0))));

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 6056
                                 */
                                marxan.cShowDetProg((int) (strmarxan411), endargs());

                            }

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 6059
                         */
                        if ((((getMEMINT((int) ((marxan.cfnames + 112)))) != 0)
                                ? ((((citime_22 % getMEMINT((int) ((marxan.cfnames + 120)))) == 0) ? 1 : 0))
                                : 0) != 0) {

                            {

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 6061
                                 */
                                if ((((crepeats) > (1)) ? 1 : 0) != 0) {
                                    startargs(cirun);

                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 6061
                                     */
                                    csprintf((int) (ctempname1_32), strmarxan412, endargs());

                                } else {
                                    setMEMBYTE((int) ((ctempname1_32
                                            + ((int) (0) * 1))), (byte) ((byte) (0)));

                                }
                                ;

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 6065
                                 */
                                if ((((getMEMINT((int) ((marxan.cfnames + 116)))) == (3)) ? 1 : 0) != 0) {
                                    startargs(csavename);
                                    addarg(ctempname1_32);
                                    addarg(((++csnapcount_35) % 10000));

                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 6065
                                     */
                                    csprintf((int) (ctempname2_33), strmarxan413, endargs());

                                } else {

                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 6068
                                     */
                                    if ((((getMEMINT((int) ((marxan.cfnames + 116)))) == (2)) ? 1 : 0) != 0) {
                                        startargs(csavename);
                                        addarg(ctempname1_32);
                                        addarg(((++csnapcount_35) % 10000));

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 6068
                                         */
                                        csprintf((int) (ctempname2_33), strmarxan414, endargs());

                                    } else {
                                        startargs(csavename);
                                        addarg(ctempname1_32);
                                        addarg(((++csnapcount_35) % 10000));

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 6070
                                         */
                                        csprintf((int) (ctempname2_33), strmarxan415, endargs());

                                    }
                                    ;

                                }
                                ;

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 6072
                                 */
                                marxan.cOutputSolution(cpuno, (int) (cR), (int) (cpu), (int) (ctempname2_33), getMEMINT((int) ((marxan.cfnames
                                        + 112))));

                            }

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 6076
                         */
                        if ((((
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 6075
                         */
                        cGoodChange((int) (cchange), getMEMDOUBLE((int) ((marxan.canneal + 28))))) == (1)) ? 1
                                : 0) != 0) {

                            {
                                ciGoodChange_25 = 1;
                                ++cichanges_36;

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 6085
                                 */
                                cDoChange(cipu_27, cpuno, (int) (cR), creserve, (int) (cchange), (int) (cpu), (int) (cSM), (int) (cspec), (int) (cconnections), citemp_29, ciZone_24, cclumptype);

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 6087
                                 */
                                if ((((getMEMINT((int) ((marxan.cfnames + 116)))) != 0)
                                        ? ((((cichanges_36 % getMEMINT((int) ((marxan.cfnames + 120)))) == 0)
                                                ? 1 : 0))
                                        : 0) != 0) {

                                    {

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 6089
                                         */
                                        if ((((crepeats) > (1)) ? 1 : 0) != 0) {
                                            startargs(cirun);

                                            /*
                                             * file
                                             * E:/git/klab-ecology-component/etc/marxan/
                                             * marxan.c line 6089
                                             */
                                            csprintf((int) (ctempname1_32), strmarxan412, endargs());

                                        } else {
                                            setMEMBYTE((int) ((ctempname1_32
                                                    + ((int) (0) * 1))), (byte) ((byte) (0)));

                                        }
                                        ;

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 6093
                                         */
                                        if ((((getMEMINT((int) ((marxan.cfnames + 116)))) == (3)) ? 1
                                                : 0) != 0) {
                                            startargs(csavename);
                                            addarg(ctempname1_32);
                                            addarg(((++csnapcount_35) % 10000));

                                            /*
                                             * file
                                             * E:/git/klab-ecology-component/etc/marxan/
                                             * marxan.c line 6093
                                             */
                                            csprintf((int) (ctempname2_33), strmarxan416, endargs());

                                        } else {

                                            /*
                                             * file
                                             * E:/git/klab-ecology-component/etc/marxan/
                                             * marxan.c line 6096
                                             */
                                            if ((((getMEMINT((int) ((marxan.cfnames + 116)))) == (2)) ? 1
                                                    : 0) != 0) {
                                                startargs(csavename);
                                                addarg(ctempname1_32);
                                                addarg(((++csnapcount_35) % 10000));

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 6096
                                                 */
                                                csprintf((int) (ctempname2_33), strmarxan417, endargs());

                                            } else {
                                                startargs(csavename);
                                                addarg(ctempname1_32);
                                                addarg(((++csnapcount_35) % 10000));

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 6098
                                                 */
                                                csprintf((int) (ctempname2_33), strmarxan418, endargs());

                                            }
                                            ;

                                        }
                                        ;

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 6100
                                         */
                                        marxan.cOutputSolution(cpuno, (int) (cR), (int) (cpu), (int) (ctempname2_33), getMEMINT((int) ((marxan.cfnames
                                                + 116))));

                                    }

                                }
                                ;

                            }

                        } else {
                            ciGoodChange_25 = 0;

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 6113
                         */
                        if ((((getMEMINT((int) ((marxan.canneal + 44)))) == (3)) ? 1 : 0) != 0) {

                            {
                                y37 = (int) ((marxan.canneal + 56));
                                setMEMDOUBLE((int) (y37), (double) ((getMEMDOUBLE((int) (y37))
                                        + getMEMDOUBLE((int) ((creserve + 0))))));
                                y38 = (int) ((marxan.canneal + 64));
                                setMEMDOUBLE((int) (y38), (double) ((getMEMDOUBLE((int) (y38))
                                        + (getMEMDOUBLE((int) ((creserve + 0)))
                                                * getMEMDOUBLE((int) ((creserve + 0)))))));

                            }

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 6120
                         */
                        if ((((cverbose) > (4)) ? 1 : 0) != 0) {
                            startargs(citime_22);
                            addarg(cipu_27);
                            addarg(getMEMINT((int) (((cpu + ((int) (cipu_27) * 64)) + 0))));
                            addarg(ciPreviousR_23);
                            addarg(citemp_29);
                            addarg(ciZone_24);
                            addarg(ciGoodChange_25);
                            addarg(getMEMDOUBLE((int) ((cchange + 0))));
                            addarg(getMEMDOUBLE((int) ((cchange + 28))));
                            addarg(getMEMDOUBLE((int) ((cchange + 8))));
                            addarg(getMEMDOUBLE((int) ((cchange + 20))));
                            addarg(getMEMDOUBLE((int) ((marxan.canneal + 28))));

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 6121
                             */
                            cfprintf(cfp_38, strmarxan419, endargs());

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 6125
                         */
                        if (getMEMINT((int) ((marxan.cfnames + 140))) != 0) {

                            {
                                ciRowCounter_30++;

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 6128
                                 */
                                if ((((ciRowCounter_30) > (ciRowLimit_31)) ? 1 : 0) != 0) {
                                    ciRowCounter_30 = 1;

                                }
                                ;

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 6131
                                 */
                                if ((((ciRowCounter_30) == (1)) ? 1 : 0) != 0) {

                                    {

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 6133
                                         */
                                        if ((((getMEMINT((int) ((marxan.cfnames + 148)))) == (0)) ? 1
                                                : 0) != 0) {
                                            startargs(citime_22);

                                            /*
                                             * file
                                             * E:/git/klab-ecology-component/etc/marxan/
                                             * marxan.c line 6133
                                             */
                                            cfprintf(czonefp_40, strmarxan234, endargs());

                                        }
                                        ;

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 6136
                                         */
                                        if ((((getMEMINT((int) ((marxan.cfnames + 140)))) > (1)) ? 1
                                                : 0) != 0) {

                                            {
                                                startargs(citime_22);
                                                addarg(ccostthresh);
                                                addarg(ciGoodChange_25);
                                                addarg(getMEMDOUBLE((int) ((creserve + 0))));
                                                addarg(getMEMDOUBLE((int) ((creserve + 28))));
                                                addarg(getMEMDOUBLE((int) ((creserve + 8))));
                                                addarg(getMEMDOUBLE((int) ((creserve + 20))));
                                                addarg(getMEMDOUBLE((int) ((creserve + 44))));
                                                addarg(cipu_27);
                                                addarg(getMEMDOUBLE((int) ((marxan.canneal + 28))));

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 6140
                                                 */
                                                cfprintf(cttfp_39, strmarxan401, endargs());

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 6152
                                                 */
                                                if ((((getMEMINT((int) ((marxan.cfnames + 148)))) == (0)) ? 1
                                                        : 0) != 0) {

                                                    /*
                                                     * file
                                                     * E:/git/klab-ecology-component/etc/
                                                     * marxan/marxan.c line 6153
                                                     */
                                                    ci_28 = 0;
                                                    lab_marxan189: for (; (((ci_28) < (cpuno)) ? 1
                                                            : 0) != 0;) {
                                                        startargs(getMEMINT((int) ((cR
                                                                + ((int) (ci_28) * 4)))));

                                                        /*
                                                         * file
                                                         * E:/git/klab-ecology-component/
                                                         * etc/marxan/marxan.c line 6153
                                                         */
                                                        cfprintf(czonefp_40, strmarxan240, endargs());
                                                        ci_28++;

                                                    }

                                                }
                                                ;

                                            }

                                        } else {

                                            {
                                                startargs(citime_22);
                                                addarg(ccostthresh);
                                                addarg(ciGoodChange_25);
                                                addarg(getMEMDOUBLE((int) ((creserve + 0))));
                                                addarg(getMEMDOUBLE((int) ((creserve + 28))));
                                                addarg(getMEMDOUBLE((int) ((creserve + 8))));
                                                addarg(getMEMDOUBLE((int) ((creserve + 20))));
                                                addarg(getMEMDOUBLE((int) ((creserve + 44))));
                                                addarg(cipu_27);
                                                addarg(getMEMDOUBLE((int) ((marxan.canneal + 28))));

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 6160
                                                 */
                                                cfprintf(cttfp_39, strmarxan403, endargs());

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 6163
                                                 */
                                                if ((((getMEMINT((int) ((marxan.cfnames + 148)))) == (0)) ? 1
                                                        : 0) != 0) {

                                                    /*
                                                     * file
                                                     * E:/git/klab-ecology-component/etc/
                                                     * marxan/marxan.c line 6164
                                                     */
                                                    ci_28 = 0;
                                                    lab_marxan190: for (; (((ci_28) < (cpuno)) ? 1
                                                            : 0) != 0;) {
                                                        startargs(getMEMINT((int) ((cR
                                                                + ((int) (ci_28) * 4)))));

                                                        /*
                                                         * file
                                                         * E:/git/klab-ecology-component/
                                                         * etc/marxan/marxan.c line 6164
                                                         */
                                                        cfprintf(czonefp_40, strmarxan409, endargs());
                                                        ci_28++;

                                                    }

                                                }
                                                ;

                                            }

                                        }
                                        ;

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 6168
                                         */
                                        if ((((getMEMINT((int) ((marxan.cfnames + 148)))) == (0)) ? 1
                                                : 0) != 0) {

                                            /*
                                             * file
                                             * E:/git/klab-ecology-component/etc/marxan/
                                             * marxan.c line 6168
                                             */
                                            cfprintf(czonefp_40, strmarxan137, 0);

                                        }
                                        ;

                                    }

                                }
                                ;

                            }

                        }
                        ;

                    }
                    citime_22++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6176 */
                if ((((cverbose) > (1)) ? 1 : 0) != 0) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 6177
                         */
                        marxan.cShowGenProg((int) (strmarxan420), 0);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 6178
                         */
                        cPrintResVal(cpuno, cspno, (int) (cR), (int) (creserve), (int) (cspec), cmisslevel);

                    }

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6182 */
                if (caggexist != 0) {

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6182 */
                    marxan.cClearClumps(cspno, (int) (cspec), (int) (cpu), (int) (cSM));

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6186 */
                if ((((cverbose) > (4)) ? 1 : 0) != 0) {

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6186 */
                    marxan.cAppendDebugTraceFile((int) (strmarxan421), 0);

                }
                ;
                startargs(cichanges_36);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6190 */
                csprintf((int) (cdebugbuffer_37), strmarxan422, endargs());

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6191 */
                marxan.cAppendDebugTraceFile((int) (cdebugbuffer_37), 0);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6193 */
                if ((((cverbose) > (4)) ? 1 : 0) != 0) {

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6193 */
                    cfclose(cfp_38);

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6197 */
                if (getMEMINT((int) ((marxan.cfnames + 140))) != 0) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 6198
                         */
                        cfclose(cttfp_39);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 6200
                         */
                        if ((((getMEMINT((int) ((marxan.cfnames + 148)))) == (0)) ? 1 : 0) != 0) {

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 6200
                             */
                            cfclose(czonefp_40);

                        }
                        ;

                    }

                }
                ;

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan423 = jtocstr("pu.csv");
    static int strmarxan424 = jtocstr("debug");
    static int strmarxan425 = jtocstr("cannot create BinarySearchArrays pu file %s\n");
    static int strmarxan426 = jtocstr("name,index\n");
    static int strmarxan427 = jtocstr("spec.csv");
    static int strmarxan428 = jtocstr("cannot create BinarySearchArrays spec file %s\n");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6217 */

    public static void cDumpBinarySearchArrays(int csName, int cfnames, int cpuno, int cspno, int cPULookup, int cSPLookup) {
        nextlevel();
        if (true) {
            int label = 0;
            int cpufp_8 = 0;
            int cspecfp_9 = 0;
            int ci_10 = 0;
            int cwritename_11 = 0;

            {
                cpufp_8 = 0;
                cspecfp_9 = 0;
                ci_10 = 0;
                cwritename_11 = 0;
                cwritename_11 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6222 */
                ccalloc(((((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6222 */
                cstrlen(getMEMINT((int) ((cfnames + 4)))) +
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6222 */
                        cstrlen(strmarxan424)) +
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6222 */
                        cstrlen(csName)) +
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6222 */
                        cstrlen(strmarxan423)) + 2), 1));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6223 */
                cstrcpy(cwritename_11, getMEMINT((int) ((cfnames + 4))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6224 */
                cstrcat(cwritename_11, strmarxan424);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6225 */
                cstrcat(cwritename_11, csName);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6226 */
                cstrcat(cwritename_11, strmarxan423);
                cpufp_8 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 6227
                         */
                        cfopen(cwritename_11, strmarxan198);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6229 */
                if ((((cpufp_8) == ((int) (0))) ? 1 : 0) != 0) {
                    startargs(cwritename_11);

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6229 */
                    marxan.cShowErrorMessage((int) (strmarxan425), endargs());

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6230 */
                cfree(cwritename_11);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6231 */
                cfputs(strmarxan426, cpufp_8);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6235 */
                ci_10 = 0;
                lab_marxan191: for (; (((ci_10) < (cpuno)) ? 1 : 0) != 0;) {

                    {
                        startargs(getMEMINT((int) (((cPULookup + ((int) (ci_10) * 8)) + 0))));
                        addarg(getMEMINT((int) (((cPULookup + ((int) (ci_10) * 8)) + 4))));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 6234
                         */
                        cfprintf(cpufp_8, strmarxan294, endargs());

                    }
                    ci_10++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6236 */
                cfclose(cpufp_8);
                cwritename_11 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6238 */
                ccalloc(((((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6238 */
                cstrlen(getMEMINT((int) ((cfnames + 4)))) +
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6238 */
                        cstrlen(strmarxan424)) +
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6238 */
                        cstrlen(csName)) +
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6238 */
                        cstrlen(strmarxan427)) + 2), 1));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6239 */
                cstrcpy(cwritename_11, getMEMINT((int) ((cfnames + 4))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6240 */
                cstrcat(cwritename_11, strmarxan424);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6241 */
                cstrcat(cwritename_11, csName);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6242 */
                cstrcat(cwritename_11, strmarxan427);
                cspecfp_9 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 6243
                         */
                        cfopen(cwritename_11, strmarxan198);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6245 */
                if ((((cspecfp_9) == ((int) (0))) ? 1 : 0) != 0) {
                    startargs(cwritename_11);

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6245 */
                    marxan.cShowErrorMessage((int) (strmarxan428), endargs());

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6246 */
                cfree(cwritename_11);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6247 */
                cfputs(strmarxan426, cspecfp_9);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6251 */
                ci_10 = 0;
                lab_marxan192: for (; (((ci_10) < (cspno)) ? 1 : 0) != 0;) {

                    {
                        startargs(getMEMINT((int) (((cSPLookup + ((int) (ci_10) * 8)) + 0))));
                        addarg(getMEMINT((int) (((cSPLookup + ((int) (ci_10) * 8)) + 4))));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 6250
                         */
                        cfprintf(cspecfp_9, strmarxan294, endargs());

                    }
                    ci_10++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6252 */
                cfclose(cspecfp_9);

            }
        }
        ;
        prevlevel();
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6256 */

    public static void csiftDown(int cnumbers, int croot, int cbottom, int carray_size) {
        nextlevel();
        if (true) {
            int label = 0;
            int cdone_6 = 0;
            int cmaxChild_7 = 0;
            int ctemp_8 = 0;

            {
                cdone_6 = 0;
                cmaxChild_7 = 0;
                ctemp_8 = calloca(8);
                cdone_6 = 0;
                lab_marxan193: while (((((((((croot * 2)) <= (cbottom)) ? 1 : 0)) != 0)
                        ? (((cdone_6 == 0) ? 1 : 0)) : 0)) != 0) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 6264
                         */
                        if (((((croot * 2)) < (carray_size)) ? 1 : 0) != 0) {

                            {

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 6266
                                 */
                                if (((((croot * 2)) == (cbottom)) ? 1 : 0) != 0) {
                                    cmaxChild_7 = (croot * 2);

                                } else {

                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 6268
                                     */
                                    if ((((getMEMINT((int) (((cnumbers + ((int) ((croot * 2)) * 8))
                                            + 0)))) > (getMEMINT((int) (((cnumbers
                                                    + ((int) (((croot * 2) + 1)) * 8)) + 0))))) ? 1
                                                            : 0) != 0) {
                                        cmaxChild_7 = (croot * 2);

                                    } else {
                                        cmaxChild_7 = ((croot * 2) + 1);

                                    }
                                    ;

                                }
                                ;

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 6273
                                 */
                                if ((((getMEMINT((int) (((cnumbers + ((int) (croot) * 8))
                                        + 0)))) < (getMEMINT((int) (((cnumbers + ((int) (cmaxChild_7) * 8))
                                                + 0))))) ? 1 : 0) != 0) {

                                    {
                                        cmemcpy((int) ctemp_8, (int) ((int) ((cnumbers
                                                + ((int) (croot) * 8)))), 8);
                                        cmemcpy((int) (cnumbers
                                                + ((int) (croot) * 8)), (int) ((int) ((cnumbers
                                                        + ((int) (cmaxChild_7) * 8)))), 8);
                                        cmemcpy((int) (cnumbers
                                                + ((int) (cmaxChild_7) * 8)), (int) ((int) (ctemp_8)), 8);
                                        croot = cmaxChild_7;

                                    }

                                } else {
                                    cdone_6 = 1;

                                }
                                ;

                            }

                        } else {
                            cdone_6 = 1;

                        }
                        ;

                    }

                }

            }
        }
        ;
        prevlevel();
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6288 */

    public static void cheapSort(int cnumbers, int carray_size) {
        nextlevel();
        if (true) {
            int label = 0;
            int ci_4 = 0;
            int ctemp_5 = 0;

            {
                ci_4 = 0;
                ctemp_5 = calloca(8);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6293 */
                ci_4 = ((carray_size / 2) - 1);
                lab_marxan194: for (; (((ci_4) >= (0)) ? 1 : 0) != 0;) {

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6293 */
                    csiftDown((int) (cnumbers), ci_4, carray_size, carray_size);
                    ci_4--;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6301 */
                ci_4 = (carray_size - 1);
                lab_marxan195: for (; (((ci_4) >= (1)) ? 1 : 0) != 0;) {

                    {
                        cmemcpy((int) ctemp_5, (int) ((int) ((cnumbers + ((int) (0) * 8)))), 8);
                        cmemcpy((int) (cnumbers
                                + ((int) (0) * 8)), (int) ((int) ((cnumbers + ((int) (ci_4) * 8)))), 8);
                        cmemcpy((int) (cnumbers + ((int) (ci_4) * 8)), (int) ((int) (ctemp_5)), 8);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 6300
                         */
                        csiftDown((int) (cnumbers), 0, (ci_4 - 1), carray_size);

                    }
                    ci_4--;

                }

            }
        }
        ;
        prevlevel();
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6305 */

    public static void cheapSortBinSearch(int cnumbers, int carray_size) {
        nextlevel();
        if (true) {
            int label = 0;

            {

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6306 */
                cheapSort((int) (cnumbers), carray_size);

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan429 = jtocstr("before");
    static int strmarxan430 = jtocstr("after");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6311 */

    public static void cPrepareBinarySearchArrays(int cpuno, int cspno, int cPU, int cspec, int cPULookup, int cSPLookup) {
        nextlevel();
        if (true) {
            int label = 0;
            int ci_8 = 0;

            {
                ci_8 = 0;
                setMEMINT((int) (cPULookup), (int) ((int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6315 */
                ccalloc(cpuno, 8))));
                setMEMINT((int) (cSPLookup), (int) ((int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6316 */
                ccalloc(cspno, 8))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6323 */
                ci_8 = 0;
                lab_marxan196: for (; (((ci_8) < (cpuno)) ? 1 : 0) != 0;) {

                    {
                        setMEMINT((int) (((getMEMINT((int) (cPULookup)) + (ci_8 * 8))
                                + 0)), (int) (getMEMINT((int) (((cPU + ((int) (ci_8) * 64)) + 0)))));
                        setMEMINT((int) (((getMEMINT((int) (cPULookup)) + (ci_8 * 8)) + 4)), (int) (ci_8));

                    }
                    ci_8++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6328 */
                ci_8 = 0;
                lab_marxan197: for (; (((ci_8) < (cspno)) ? 1 : 0) != 0;) {

                    {
                        setMEMINT((int) (((getMEMINT((int) (cSPLookup)) + (ci_8 * 8))
                                + 0)), (int) (getMEMINT((int) (((cspec + ((int) (ci_8) * 100)) + 0)))));
                        setMEMINT((int) (((getMEMINT((int) (cSPLookup)) + (ci_8 * 8)) + 4)), (int) (ci_8));

                    }
                    ci_8++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6332 */
                if ((((getMEMINT((int) (marxan.ciVerbosity))) > (3)) ? 1 : 0) != 0) {

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6332 */
                    cDumpBinarySearchArrays(strmarxan429, (int) (marxan.cfnames), cpuno, cspno, (int) (getMEMINT((int) (cPULookup))), (int) (getMEMINT((int) (cSPLookup))));

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6336 */
                cheapSortBinSearch((int) (getMEMINT((int) (cPULookup))), cpuno);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6337 */
                cheapSortBinSearch((int) (getMEMINT((int) (cSPLookup))), cspno);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6341 */
                if ((((getMEMINT((int) (marxan.ciVerbosity))) > (3)) ? 1 : 0) != 0) {

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6341 */
                    cDumpBinarySearchArrays(strmarxan430, (int) (marxan.cfnames), cpuno, cspno, (int) (getMEMINT((int) (cPULookup))), (int) (getMEMINT((int) (cSPLookup))));

                }
                ;

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan431 = jtocstr("TestFastPUIDtoPUINDEX.csv");
    static int strmarxan432 = jtocstr("cannot create TestFastPUIDtoPUINDEX file %s\n");
    static int strmarxan433 = jtocstr("name,index,bin search index\n");
    static int strmarxan434 = jtocstr("%d,%d,%d\n");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6347 */

    public static void cTestFastPUIDtoPUINDEX(int cpuno, int cPULookup, int cPU, int cfnames) {
        nextlevel();
        if (true) {
            int label = 0;
            int cfp_6 = 0;
            int ci_7 = 0;
            int cwritename_8 = 0;

            {
                cfp_6 = 0;
                ci_7 = 0;
                cwritename_8 = 0;
                cwritename_8 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6352 */
                ccalloc(((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6352 */
                cstrlen(getMEMINT((int) ((cfnames + 4)))) +
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6352 */
                        cstrlen(strmarxan431)) + 2), 1));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6353 */
                cstrcpy(cwritename_8, getMEMINT((int) ((cfnames + 4))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6354 */
                cstrcat(cwritename_8, strmarxan431);
                cfp_6 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 6355
                         */
                        cfopen(cwritename_8, strmarxan198);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6357 */
                if ((((cfp_6) == ((int) (0))) ? 1 : 0) != 0) {
                    startargs(cwritename_8);

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6357 */
                    marxan.cShowErrorMessage((int) (strmarxan432), endargs());

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6358 */
                cfree(cwritename_8);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6359 */
                cfputs(strmarxan433, cfp_6);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6363 */
                ci_7 = 0;
                lab_marxan198: for (; (((ci_7) < (cpuno)) ? 1 : 0) != 0;) {

                    {
                        startargs(getMEMINT((int) (((cPU + ((int) (ci_7) * 64)) + 0))));
                        addarg(ci_7);
                        addarg(
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 6362
                                 */
                                marxan.cFastPUIDtoPUINDEX(cpuno, getMEMINT((int) (((cPU + ((int) (ci_7) * 64))
                                        + 0))), (int) (cPULookup)));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 6362
                         */
                        cfprintf(cfp_6, strmarxan434, endargs());

                    }
                    ci_7++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6364 */
                cfclose(cfp_6);

            }
        }
        ;
        prevlevel();
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6369 */

    public static int cFastPUIDtoPUINDEX(int cpuno, int cname, int cPULookup) {
        nextlevel();
        if (true) {
            int label = 0;
            int retval = 0;
            int ciTop_6 = 0;
            int ciBottom_7 = 0;
            int ciCentre_8 = 0;
            int ciCount_9 = 0;

            {
                ciTop_6 = 0;
                ciBottom_7 = 0;
                ciCentre_8 = 0;
                ciCount_9 = 0;
                ciTop_6 = 0;
                ciBottom_7 = (cpuno - 1);
                ciCentre_8 = (int) ((ciTop_6 +
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6375 */
                        cfloor((cpuno / 2))));
                lab_marxan199: while ((((((((ciTop_6) <= (ciBottom_7)) ? 1 : 0)) != 0)
                        ? ((((getMEMINT((int) (((cPULookup + ((int) (ciCentre_8) * 8)) + 0)))) != (cname)) ? 1
                                : 0))
                        : 0)) != 0) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 6380
                         */
                        if ((((cname) < (getMEMINT((int) (((cPULookup + ((int) (ciCentre_8) * 8)) + 0))))) ? 1
                                : 0) != 0) {

                            {
                                ciBottom_7 = (ciCentre_8 - 1);
                                ciCount_9 = ((ciBottom_7 - ciTop_6) + 1);
                                ciCentre_8 = (int) ((ciTop_6 +
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 6383
                                 */
                                        cfloor((ciCount_9 / 2))));

                            }

                        } else {

                            {
                                ciTop_6 = (ciCentre_8 + 1);
                                ciCount_9 = ((ciBottom_7 - ciTop_6) + 1);
                                ciCentre_8 = (int) ((ciTop_6 +
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 6389
                                 */
                                        cfloor((ciCount_9 / 2))));

                            }

                        }
                        ;

                    }

                }
                retval = getMEMINT((int) (((cPULookup + ((int) (ciCentre_8) * 8)) + 4)));
                if (true) {
                    prevlevel();
                    return retval;
                }
                ;

            }
        }
        ;
        prevlevel();
        return 0;
    }

    static int strmarxan435 = jtocstr("TestFastSPIDtoSPINDEX.csv");
    static int strmarxan436 = jtocstr("cannot create TestFastSPIDtoSPINDEX file %s\n");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6396 */

    public static void cTestFastSPIDtoSPINDEX(int cspno, int cSPLookup, int cspec, int cfnames) {
        nextlevel();
        if (true) {
            int label = 0;
            int cfp_6 = 0;
            int ci_7 = 0;
            int cwritename_8 = 0;

            {
                cfp_6 = 0;
                ci_7 = 0;
                cwritename_8 = 0;
                cwritename_8 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6401 */
                ccalloc(((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6401 */
                cstrlen(getMEMINT((int) ((cfnames + 4)))) +
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6401 */
                        cstrlen(strmarxan435)) + 2), 1));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6402 */
                cstrcpy(cwritename_8, getMEMINT((int) ((cfnames + 4))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6403 */
                cstrcat(cwritename_8, strmarxan435);
                cfp_6 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 6404
                         */
                        cfopen(cwritename_8, strmarxan198);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6406 */
                if ((((cfp_6) == ((int) (0))) ? 1 : 0) != 0) {
                    startargs(cwritename_8);

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6406 */
                    marxan.cShowErrorMessage((int) (strmarxan436), endargs());

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6407 */
                cfree(cwritename_8);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6408 */
                cfputs(strmarxan433, cfp_6);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6412 */
                ci_7 = 0;
                lab_marxan200: for (; (((ci_7) < (cspno)) ? 1 : 0) != 0;) {

                    {
                        startargs(getMEMINT((int) (((cspec + ((int) (ci_7) * 100)) + 0))));
                        addarg(ci_7);
                        addarg(
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 6411
                                 */
                                marxan.cFastSPIDtoSPINDEX(cspno, getMEMINT((int) (((cspec
                                        + ((int) (ci_7) * 100)) + 0))), (int) (cSPLookup)));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 6411
                         */
                        cfprintf(cfp_6, strmarxan434, endargs());

                    }
                    ci_7++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6413 */
                cfclose(cfp_6);

            }
        }
        ;
        prevlevel();
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6418 */

    public static int cFastSPIDtoSPINDEX(int cspno, int cname, int cSPLookup) {
        nextlevel();
        if (true) {
            int label = 0;
            int retval = 0;
            int ciTop_6 = 0;
            int ciBottom_7 = 0;
            int ciCentre_8 = 0;
            int ciCount_9 = 0;

            {
                ciTop_6 = 0;
                ciBottom_7 = 0;
                ciCentre_8 = 0;
                ciCount_9 = 0;
                ciTop_6 = 0;
                ciBottom_7 = (cspno - 1);
                ciCentre_8 = (int) ((ciTop_6 +
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6424 */
                        cfloor((cspno / 2))));
                lab_marxan201: while ((((((((ciTop_6) <= (ciBottom_7)) ? 1 : 0)) != 0)
                        ? ((((getMEMINT((int) (((cSPLookup + ((int) (ciCentre_8) * 8)) + 0)))) != (cname)) ? 1
                                : 0))
                        : 0)) != 0) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 6429
                         */
                        if ((((cname) < (getMEMINT((int) (((cSPLookup + ((int) (ciCentre_8) * 8)) + 0))))) ? 1
                                : 0) != 0) {

                            {
                                ciBottom_7 = (ciCentre_8 - 1);
                                ciCount_9 = ((ciBottom_7 - ciTop_6) + 1);
                                ciCentre_8 = (int) ((ciTop_6 +
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 6432
                                 */
                                        cfloor((ciCount_9 / 2))));

                            }

                        } else {

                            {
                                ciTop_6 = (ciCentre_8 + 1);
                                ciCount_9 = ((ciBottom_7 - ciTop_6) + 1);
                                ciCentre_8 = (int) ((ciTop_6 +
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 6438
                                 */
                                        cfloor((ciCount_9 / 2))));

                            }

                        }
                        ;

                    }

                }
                retval = getMEMINT((int) (((cSPLookup + ((int) (ciCentre_8) * 8)) + 4)));
                if (true) {
                    prevlevel();
                    return retval;
                }
                ;

            }
        }
        ;
        prevlevel();
        return 0;
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6460 */

    public static void cClearClump(int cisp, int ctarget, int cpu, int cSM) {
        nextlevel();
        if (true) {
            int label = 0;
            int cppu_6 = 0;

            {
                cppu_6 = 0;
                lab_marxan202: while ((getMEMINT((int) ((ctarget + 16)))) != 0) {

                    {
                        cppu_6 = getMEMINT((int) ((ctarget + 16)));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 6468
                         */
                        if ((((
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 6467
                         */
                        crtnClumpSpecAtPu((int) (cpu), (int) (cSM), getMEMINT((int) ((cppu_6
                                + 0))), cisp)) == (getMEMINT((int) ((ctarget + 0))))) ? 1 : 0) != 0) {

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 6468
                             */
                            csetClumpSpecAtPu((int) (cpu), (int) (cSM), getMEMINT((int) ((cppu_6
                                    + 0))), cisp, 0);

                        }
                        ;
                        setMEMINT((int) ((ctarget + 16)), (int) (getMEMINT((int) ((cppu_6 + 4)))));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 6470
                         */
                        cfree(cppu_6);

                    }

                }

            }
        }
        ;
        prevlevel();
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6485 */

    public static int cClumpCut(int cisp, int cpu, int cspec, int cclump, int cclumppu, int cconnections, int cSM, int ctotalamount, int ctotalocc, int ciseparation, int cimode, int cclumptype) {
        nextlevel();
        if (true) {
            int label = 0;
            int retval = 0;
            int cineighbour_15 = 0;
            int ciclumps_16 = 0;
            int chead_17 = 0;
            int cnewhead_18 = 0;
            int cthead_19 = 0;
            int cclumplist_20 = 0;
            int cclumpcurr_21 = 0;
            int cpnbr_22 = 0;
            int cspclump_23 = 0;
            int cnewpclump_24 = 0;
            int cpclumppu_25 = 0;
            double cclumpamount_26 = 0;
            double crAmount_27 = 0;
            int ciocc_28 = 0;
            int y39 = 0;
            int y40 = 0;

            {
                cineighbour_15 = 0;
                ciclumps_16 = 0;
                chead_17 = (int) (0);
                cnewhead_18 = 0;
                cthead_19 = 0;
                cclumplist_20 = 0;
                cclumpcurr_21 = 0;
                cpnbr_22 = 0;
                cspclump_23 = (int) (0);
                cnewpclump_24 = 0;
                cpclumppu_25 = 0;
                cclumpamount_26 = 0;
                crAmount_27 = 0;
                ciocc_28 = 0;
                setMEMDOUBLE((int) (ctotalamount), (double) (0));
                setMEMINT((int) (ctotalocc), (int) (0));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6499 */
                if (cimode != 0) {

                    {
                        cnewpclump_24 = (int) (
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 6500
                         */
                        cmalloc(24));
                        setMEMINT((int) ((cnewpclump_24 + 0)), (int) (getMEMINT((int) ((cclumppu + 0)))));
                        setMEMDOUBLE((int) ((cnewpclump_24 + 4)), (double) (0));
                        setMEMINT((int) ((cnewpclump_24 + 20)), (int) (cspclump_23));
                        cspclump_23 = cnewpclump_24;

                    }

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6511 */
                if ((((getMEMINT((int) (((cconnections + ((int) (getMEMINT((int) ((cclumppu + 0)))) * 16))
                        + 12)))) == (0)) ? 1 : 0) != 0) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 6513
                         */
                        if (cimode != 0) {

                            {
                                setMEMINT((int) (ciseparation), (int) (
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 6514
                                 */
                                marxan.cCountSeparation(cisp, cspclump_23, (int) (cpu), (int) (cSM), (int) (cspec), 0)));

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 6515
                                 */
                                cfree(cspclump_23);

                            }

                        }
                        ;
                        retval = 0;
                        if (true) {
                            prevlevel();
                            return retval;
                        }
                        ;

                    }

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6531 */
                cpnbr_22 = getMEMINT((int) (((cconnections + ((int) (getMEMINT((int) ((cclumppu + 0)))) * 16))
                        + 0)));
                lab_marxan203: for (; cpnbr_22 != 0;) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 6524
                         */
                        if ((((
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 6523
                         */
                        crtnClumpSpecAtPu((int) (cpu), (int) (cSM), getMEMINT((int) ((cpnbr_22
                                + 0))), cisp)) == (getMEMINT((int) ((cclump + 0))))) ? 1 : 0) != 0) {

                            {
                                cineighbour_15++;
                                cnewhead_18 = (int) (
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 6526
                                 */
                                cmalloc(8));
                                setMEMINT((int) ((cnewhead_18
                                        + 0)), (int) (getMEMINT((int) ((cpnbr_22 + 0)))));
                                setMEMINT((int) ((cnewhead_18 + 4)), (int) (chead_17));
                                chead_17 = cnewhead_18;

                            }

                        }
                        ;

                    }
                    cpnbr_22 = getMEMINT((int) ((cpnbr_22 + 12)));

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6533 */
                if ((((cineighbour_15) <= (1)) ? 1 : 0) != 0) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 6535
                         */
                        if (cimode != 0) {

                            {

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 6547
                                 */
                                cpclumppu_25 = getMEMINT((int) ((cclump + 16)));
                                lab_marxan204: for (; cpclumppu_25 != 0;) {

                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 6538
                                     */
                                    if ((((cpclumppu_25) != (cclumppu)) ? 1 : 0) != 0) {

                                        {
                                            cnewpclump_24 = (int) (
                                            /*
                                             * file
                                             * E:/git/klab-ecology-component/etc/marxan/
                                             * marxan.c line 6539
                                             */
                                            cmalloc(24));
                                            setMEMINT((int) ((cnewpclump_24
                                                    + 0)), (int) (getMEMINT((int) ((cpclumppu_25 + 0)))));
                                            setMEMDOUBLE((int) ((cnewpclump_24
                                                    + 4)), (double) ((getMEMDOUBLE((int) ((cclump + 4))) -
                                            /*
                                             * file
                                             * E:/git/klab-ecology-component/etc/marxan/
                                             * marxan.c line 6541
                                             */
                                                            crtnAmountSpecAtPu((int) (cpu), (int) (cSM), getMEMINT((int) ((cclumppu
                                                                    + 0))), cisp))));
                                            setMEMINT((int) ((cnewpclump_24 + 20)), (int) (cspclump_23));
                                            cspclump_23 = cnewpclump_24;

                                        }

                                    }
                                    ;
                                    cpclumppu_25 = getMEMINT((int) ((cpclumppu_25 + 4)));

                                }
                                setMEMINT((int) (ciseparation), (int) (
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 6547
                                 */
                                marxan.cCountSeparation(cisp, cspclump_23, (int) (cpu), (int) (cSM), (int) (cspec), 0)));

                            }

                        } else {
                            setMEMINT((int) (ciseparation), (int) (getMEMINT((int) (((cspec
                                    + ((int) (cisp) * 100)) + 68)))));

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 6551
                         */
                        if (chead_17 != 0) {

                            {

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 6552
                                 */
                                cfree(chead_17);

                            }

                        }
                        ;
                        lab_marxan205: while ((cspclump_23) != 0) {

                            {
                                cnewpclump_24 = cspclump_23;
                                cspclump_23 = getMEMINT((int) ((cspclump_23 + 20)));

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 6559
                                 */
                                cfree(cnewpclump_24);

                            }

                        }
                        crAmount_27 =
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 6562
                                 */
                                crtnAmountSpecAtPu((int) (cpu), (int) (cSM), getMEMINT((int) ((cclumppu
                                        + 0))), cisp);
                        setMEMDOUBLE((int) (ctotalamount), (double) (
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 6563
                         */
                        marxan.cPartialPen4(cisp, (getMEMDOUBLE((int) ((cclump + 4)))
                                - crAmount_27), (int) (cspec), cclumptype)));
                        setMEMINT((int) (ctotalocc), (int) ((int) (((getMEMINT((int) ((cclump + 12)))
                                - (((crAmount_27) > (0)) ? 1 : 0))
                                * (((getMEMDOUBLE((int) (ctotalamount))) > (0)) ? 1 : 0)))));
                        retval = 0;
                        if (true) {
                            prevlevel();
                            return retval;
                        }
                        ;

                    }

                }
                ;
                lab_marxan206: while ((chead_17) != 0) {

                    {
                        cclumpamount_26 = 0;
                        ciclumps_16++;
                        cclumplist_20 = (int) (
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 6574
                         */
                        cmalloc(8));
                        setMEMINT((int) ((cclumplist_20 + 4)), (int) ((int) (0)));
                        setMEMINT((int) ((cclumplist_20 + 0)), (int) (getMEMINT((int) ((chead_17 + 0)))));
                        cclumpcurr_21 = cclumplist_20;
                        cnewhead_18 = chead_17;
                        chead_17 = getMEMINT((int) ((chead_17 + 4)));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 6580
                         */
                        cfree(cnewhead_18);
                        cineighbour_15--;

                        lab_marxan207: do {

                            {

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 6616
                                 */
                                cpnbr_22 = getMEMINT((int) (((cconnections
                                        + ((int) (getMEMINT((int) ((cclumpcurr_21 + 0)))) * 16)) + 0)));
                                lab_marxan208: for (; cpnbr_22 != 0;) {

                                    {

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 6588
                                         */
                                        if (((((((
                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 6587
                                         */
                                        crtnClumpSpecAtPu((int) (cpu), (int) (cSM), getMEMINT((int) ((cpnbr_22
                                                + 0))), cisp)) == (getMEMINT((int) ((cclump + 0))))) ? 1
                                                        : 0)) != 0)
                                                                ? ((((getMEMINT((int) ((cpnbr_22
                                                                        + 0)))) != (getMEMINT((int) ((cclumppu
                                                                                + 0))))) ? 1 : 0))
                                                                : 0) != 0) {

                                            {

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 6590
                                                 */
                                                cnewhead_18 = cclumplist_20;
                                                lab_marxan209: for (; (((cnewhead_18) != 0)
                                                        ? ((((getMEMINT((int) ((cnewhead_18
                                                                + 0)))) != (getMEMINT((int) ((cpnbr_22
                                                                        + 0))))) ? 1 : 0))
                                                        : 0) != 0;) {
                                                    cnewhead_18 = getMEMINT((int) ((cnewhead_18 + 4)));

                                                }

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 6592
                                                 */
                                                if (((cnewhead_18 == 0) ? 1 : 0) != 0) {

                                                    {
                                                        cnewhead_18 = (int) (
                                                        /*
                                                         * file
                                                         * E:/git/klab-ecology-component/
                                                         * etc/marxan/marxan.c line 6593
                                                         */
                                                        cmalloc(8));
                                                        setMEMINT((int) ((cnewhead_18
                                                                + 0)), (int) (getMEMINT((int) ((cpnbr_22
                                                                        + 0)))));
                                                        setMEMINT((int) ((cnewhead_18
                                                                + 4)), (int) (getMEMINT((int) ((cclumpcurr_21
                                                                        + 4)))));
                                                        setMEMINT((int) ((cclumpcurr_21
                                                                + 4)), (int) (cnewhead_18));

                                                        /*
                                                         * file
                                                         * E:/git/klab-ecology-component/
                                                         * etc/marxan/marxan.c line 6599
                                                         */
                                                        cnewhead_18 = chead_17;
                                                        lab_marxan210: for (; (((cnewhead_18) != 0)
                                                                ? ((((getMEMINT((int) ((cnewhead_18
                                                                        + 0)))) != (getMEMINT((int) ((cpnbr_22
                                                                                + 0))))) ? 1 : 0))
                                                                : 0) != 0;) {
                                                            cnewhead_18 = getMEMINT((int) ((cnewhead_18
                                                                    + 4)));

                                                        }

                                                        /*
                                                         * file
                                                         * E:/git/klab-ecology-component/
                                                         * etc/marxan/marxan.c line 6601
                                                         */
                                                        if ((((cnewhead_18) != 0)
                                                                ? ((((getMEMINT((int) ((cnewhead_18
                                                                        + 0)))) == (getMEMINT((int) ((cpnbr_22
                                                                                + 0))))) ? 1 : 0))
                                                                : 0) != 0) {

                                                            {
                                                                cineighbour_15--;

                                                                /*
                                                                 * file
                                                                 * E:/git/klab-ecology-
                                                                 * component/etc/marxan/
                                                                 * marxan.c line 6604
                                                                 */
                                                                if ((((cnewhead_18) == (chead_17)) ? 1
                                                                        : 0) != 0) {
                                                                    chead_17 = getMEMINT((int) ((cnewhead_18
                                                                            + 4)));

                                                                } else {

                                                                    {

                                                                        /*
                                                                         * file
                                                                         * E:/git/klab-
                                                                         * ecology-
                                                                         * component/etc/
                                                                         * marxan/marxan.c
                                                                         * line 6608
                                                                         */
                                                                        cthead_19 = chead_17;
                                                                        lab_marxan211: for (; (((getMEMINT((int) ((cthead_19
                                                                                + 4)))) != (cnewhead_18)) ? 1
                                                                                        : 0) != 0;) {
                                                                            cthead_19 = getMEMINT((int) ((cthead_19
                                                                                    + 4)));

                                                                        }
                                                                        setMEMINT((int) ((cthead_19
                                                                                + 4)), (int) (getMEMINT((int) ((cnewhead_18
                                                                                        + 4)))));

                                                                    }

                                                                }
                                                                ;

                                                                /*
                                                                 * file
                                                                 * E:/git/klab-ecology-
                                                                 * component/etc/marxan/
                                                                 * marxan.c line 6611
                                                                 */
                                                                cfree(cnewhead_18);

                                                            }

                                                        }
                                                        ;

                                                    }

                                                }
                                                ;

                                            }

                                        }
                                        ;

                                    }
                                    cpnbr_22 = getMEMINT((int) ((cpnbr_22 + 12)));

                                }
                                cclumpcurr_21 = getMEMINT((int) ((cclumpcurr_21 + 4)));

                            }

                        } while (cclumpcurr_21 != 0);
                        ciocc_28 = 0;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 6628
                         */
                        cnewhead_18 = cclumplist_20;
                        lab_marxan212: for (; cnewhead_18 != 0;) {

                            {
                                crAmount_27 =
                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 6625
                                         */
                                        crtnAmountSpecAtPu((int) (cpu), (int) (cSM), getMEMINT((int) ((cnewhead_18
                                                + 0))), cisp);
                                cclumpamount_26 += crAmount_27;
                                ciocc_28 += (int) ((((crAmount_27) > (0)) ? 1 : 0));

                            }
                            cnewhead_18 = getMEMINT((int) ((cnewhead_18 + 4)));

                        }
                        y39 = (int) (ctotalamount);
                        setMEMDOUBLE((int) (y39), (double) ((getMEMDOUBLE((int) (y39)) +
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 6629
                         */
                                marxan.cPartialPen4(cisp, cclumpamount_26, (int) (cspec), cclumptype))));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 6631
                         */
                        if (
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 6630
                         */
                        marxan.cPartialPen4(cisp, cclumpamount_26, (int) (cspec), cclumptype) != 0) {
                            y40 = (int) (ctotalocc);
                            setMEMINT((int) (y40), (int) ((getMEMINT((int) (y40)) + ciocc_28)));

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 6634
                         */
                        if (cimode != 0) {

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 6640
                             */
                            cnewhead_18 = cclumplist_20;
                            lab_marxan213: for (; cnewhead_18 != 0;) {

                                {
                                    cnewpclump_24 = (int) (
                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 6635
                                     */
                                    cmalloc(24));
                                    setMEMINT((int) ((cnewpclump_24
                                            + 0)), (int) (getMEMINT((int) ((cnewhead_18 + 0)))));
                                    setMEMDOUBLE((int) ((cnewpclump_24 + 4)), (double) (cclumpamount_26));
                                    setMEMINT((int) ((cnewpclump_24 + 20)), (int) (cspclump_23));
                                    cspclump_23 = cnewpclump_24;

                                }
                                cnewhead_18 = getMEMINT((int) ((cnewhead_18 + 4)));

                            }

                        }
                        ;
                        lab_marxan214: while ((cclumplist_20) != 0) {

                            {
                                cclumpcurr_21 = cclumplist_20;
                                cclumplist_20 = getMEMINT((int) ((cclumplist_20 + 4)));

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 6646
                                 */
                                cfree(cclumpcurr_21);

                            }

                        }

                    }

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6652 */
                if (cimode != 0) {

                    {
                        setMEMINT((int) (ciseparation), (int) (
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 6653
                         */
                        marxan.cCountSeparation(cisp, cspclump_23, (int) (cpu), (int) (cSM), (int) (cspec), 0)));
                        lab_marxan215: while ((cspclump_23) != 0) {

                            {
                                cnewpclump_24 = cspclump_23;
                                cspclump_23 = getMEMINT((int) ((cspclump_23 + 20)));

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 6658
                                 */
                                cfree(cnewpclump_24);

                            }

                        }

                    }

                } else {
                    setMEMINT((int) (ciseparation), (int) (getMEMINT((int) (((cspec + ((int) (cisp) * 100))
                            + 68)))));

                }
                ;
                lab_marxan216: while ((chead_17) != 0) {

                    {
                        cnewhead_18 = chead_17;
                        chead_17 = getMEMINT((int) ((chead_17 + 4)));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 6668
                         */
                        cfree(cnewhead_18);

                    }

                }
                retval = ciclumps_16;
                if (true) {
                    prevlevel();
                    return retval;
                }
                ;

            }
        }
        ;
        prevlevel();
        return 0;
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6679 */

    public static void cClearClumps(int cspno, int cspec, int cpu, int cSM) {
        nextlevel();
        if (true) {
            int label = 0;
            int ci_6 = 0;
            int cpclump_7 = 0;

            {
                ci_6 = 0;
                cpclump_7 = 0;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6695 */
                ci_6 = 0;
                lab_marxan217: for (; (((ci_6) < (cspno)) ? 1 : 0) != 0;) {

                    {
                        lab_marxan218: while ((getMEMINT((int) (((cspec + ((int) (ci_6) * 100))
                                + 88)))) != 0) {

                            {

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 6687
                                 */
                                cClearClump(ci_6, getMEMINT((int) (((cspec + ((int) (ci_6) * 100))
                                        + 88))), (int) (cpu), (int) (cSM));
                                cpclump_7 = getMEMINT((int) (((cspec + ((int) (ci_6) * 100)) + 88)));
                                setMEMINT((int) (((cspec + ((int) (ci_6) * 100))
                                        + 88)), (int) (getMEMINT((int) ((getMEMINT((int) (((cspec
                                                + ((int) (ci_6) * 100)) + 88))) + 20)))));

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 6690
                                 */
                                cfree(cpclump_7);

                            }

                        }
                        setMEMINT((int) (((cspec + ((int) (ci_6) * 100)) + 76)), (int) (0));

                    }
                    ci_6++;

                }

            }
        }
        ;
        prevlevel();
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6701 */

    public static int cAddNewClump(int cisp, int cipu, int cspec, int cpu, int cSM) {
        nextlevel();
        if (true) {
            int label = 0;
            int retval = 0;
            int ciclumpno_8 = 0;
            int cpclump_9 = 0;
            int cpnewclump_10 = 0;
            int cpnewclumppu_11 = 0;
            double crAmount_12 = 0;

            {
                ciclumpno_8 = 0;
                cpclump_9 = 0;
                cpnewclump_10 = 0;
                cpnewclumppu_11 = 0;
                crAmount_12 = 0;
                cpclump_9 = getMEMINT((int) (((cspec + ((int) (cisp) * 100)) + 88)));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6710 */
                if (((cpclump_9 == 0) ? 1 : 0) != 0) {
                    ciclumpno_8 = 1;

                }
                ;
                lab_marxan219: while ((((ciclumpno_8 == 0) ? 1 : 0)) != 0) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 6714
                         */
                        if (((getMEMINT((int) ((cpclump_9 + 20))) == 0) ? 1 : 0) != 0) {

                            {
                                ciclumpno_8 = (getMEMINT((int) ((cpclump_9 + 0))) + 1);
                                if (true) {
                                    break lab_marxan219;
                                }
                                ;

                            }

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 6719
                         */
                        if (((((getMEMINT((int) ((getMEMINT((int) ((cpclump_9 + 20))) + 0)))
                                - getMEMINT((int) ((cpclump_9 + 0))))) > (1)) ? 1 : 0) != 0) {

                            {
                                ciclumpno_8 = (getMEMINT((int) ((cpclump_9 + 0))) + 1);
                                if (true) {
                                    continue lab_marxan219;
                                }
                                ;

                            }

                        }
                        ;
                        cpclump_9 = getMEMINT((int) ((cpclump_9 + 20)));

                    }

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6726 */
                csetClumpSpecAtPu((int) (cpu), (int) (cSM), cipu, cisp, ciclumpno_8);
                cpnewclump_10 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6727 */
                cmalloc(24));
                setMEMINT((int) ((cpnewclump_10 + 0)), (int) (ciclumpno_8));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6730 */
                if (getMEMINT((int) (((cspec + ((int) (cisp) * 100)) + 88))) != 0) {

                    {
                        setMEMINT((int) ((cpnewclump_10 + 20)), (int) (getMEMINT((int) ((cpclump_9 + 20)))));
                        setMEMINT((int) ((cpclump_9 + 20)), (int) (cpnewclump_10));

                    }

                } else {

                    {
                        setMEMINT((int) (((cspec + ((int) (cisp) * 100)) + 88)), (int) (cpnewclump_10));
                        setMEMINT((int) ((cpnewclump_10 + 20)), (int) ((int) (0)));

                    }

                }
                ;
                cpnewclumppu_11 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6740 */
                cmalloc(8));
                setMEMINT((int) ((cpnewclumppu_11 + 0)), (int) (cipu));
                setMEMINT((int) ((cpnewclumppu_11 + 4)), (int) ((int) (0)));
                setMEMINT((int) ((cpnewclump_10 + 16)), (int) (cpnewclumppu_11));
                crAmount_12 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 6744
                         */
                        crtnAmountSpecAtPu((int) (cpu), (int) (cSM), cipu, cisp);
                setMEMDOUBLE((int) ((cpnewclump_10 + 4)), (double) (crAmount_12));
                setMEMINT((int) ((cpnewclump_10 + 12)), (int) ((int) ((((crAmount_12) > (0)) ? 1 : 0))));
                sincMEMINT((int) (((cspec + ((int) (cisp) * 100)) + 76)), +1);
                retval = cpnewclump_10;
                if (true) {
                    prevlevel();
                    return retval;
                }
                ;

            }
        }
        ;
        prevlevel();
        return 0;
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6759 */

    public static void cAddNewPU(int cipu, int cisp, int cconnections, int cspec, int cpu, int cSM, int cclumptype) {
        nextlevel();
        if (true) {
            int label = 0;
            int cineighbours_9 = 0;
            int ciclumpno_10 = 0;
            int ciClump_11 = 0;
            int cpnbr_12 = 0;
            int cpclump_13 = 0;
            int cpnewclump_14 = 0;
            int cptempclump_15 = 0;
            int cpnewclumppu_16 = 0;
            double cftemp_17 = 0;
            double crAmount_18 = 0;
            int y41 = 0;
            int y42 = 0;
            int y43 = 0;
            int y44 = 0;
            int y45 = 0;
            int y46 = 0;
            int y47 = 0;
            int y48 = 0;
            int y49 = 0;
            int y50 = 0;
            int y51 = 0;
            int y52 = 0;

            {
                cineighbours_9 = 0;
                ciclumpno_10 = 0;
                ciClump_11 = 0;
                cpnbr_12 = 0;
                cpclump_13 = 0;
                cpnewclump_14 = 0;
                cptempclump_15 = 0;
                cpnewclumppu_16 = 0;
                cftemp_17 = 0;
                crAmount_18 = 0;
                cpnbr_12 = getMEMINT((int) (((cconnections + ((int) (cipu) * 16)) + 0)));
                lab_marxan220: while ((cpnbr_12) != 0) {

                    {
                        ciClump_11 =
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 6771
                                 */
                                crtnClumpSpecAtPu((int) (cpu), (int) (cSM), getMEMINT((int) ((cpnbr_12
                                        + 0))), cisp);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 6773
                         */
                        if ((((ciClump_11) > (0)) ? 1 : 0) != 0) {

                            {
                                cineighbours_9++;

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 6776
                                 */
                                if ((((cineighbours_9) == (1)) ? 1 : 0) != 0) {

                                    {
                                        ciclumpno_10 = ciClump_11;

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 6779
                                         */
                                        cpclump_13 = getMEMINT((int) (((cspec + ((int) (cisp) * 100)) + 88)));
                                        lab_marxan221: for (; (((getMEMINT((int) ((cpclump_13
                                                + 0)))) != (ciclumpno_10)) ? 1 : 0) != 0;) {
                                            cpclump_13 = getMEMINT((int) ((cpclump_13 + 20)));

                                        }
                                        cpnewclumppu_16 = (int) (
                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 6780
                                         */
                                        cmalloc(8));
                                        setMEMINT((int) ((cpnewclumppu_16 + 0)), (int) (cipu));
                                        setMEMINT((int) ((cpnewclumppu_16
                                                + 4)), (int) (getMEMINT((int) ((cpclump_13 + 16)))));

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 6783
                                         */
                                        csetClumpSpecAtPu((int) (cpu), (int) (cSM), getMEMINT((int) ((cpnewclumppu_16
                                                + 0))), cisp, ciclumpno_10);
                                        setMEMINT((int) ((cpclump_13 + 16)), (int) (cpnewclumppu_16));
                                        cftemp_17 =
                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 6787
                                                 */
                                                marxan.cPartialPen4(cisp, getMEMDOUBLE((int) ((cpclump_13
                                                        + 4))), (int) (cspec), cclumptype);
                                        y41 = (int) (((cspec + ((int) (cisp) * 100)) + 48));
                                        setMEMDOUBLE((int) (y41), (double) ((getMEMDOUBLE((int) (y41))
                                                - cftemp_17)));
                                        y42 = (int) (((cspec + ((int) (cisp) * 100)) + 56));
                                        setMEMINT((int) (y42), (int) ((getMEMINT((int) (y42))
                                                - (int) ((getMEMINT((int) ((cpclump_13 + 12)))
                                                        * (((cftemp_17) > (0)) ? 1 : 0))))));
                                        crAmount_18 =
                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 6790
                                                 */
                                                crtnAmountSpecAtPu((int) (cpu), (int) (cSM), cipu, cisp);
                                        y43 = (int) ((cpclump_13 + 12));
                                        setMEMINT((int) (y43), (int) ((getMEMINT((int) (y43))
                                                + (int) ((((crAmount_18) > (0)) ? 1 : 0)))));
                                        y44 = (int) ((cpclump_13 + 4));
                                        setMEMDOUBLE((int) (y44), (double) ((getMEMDOUBLE((int) (y44))
                                                + crAmount_18)));

                                    }

                                } else {

                                    {

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 6797
                                         */
                                        if ((((getMEMINT((int) ((cpclump_13 + 0)))) != (ciClump_11)) ? 1
                                                : 0) != 0) {

                                            {

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 6800
                                                 */
                                                cpnewclump_14 = getMEMINT((int) (((cspec
                                                        + ((int) (cisp) * 100)) + 88)));
                                                lab_marxan222: for (; (((getMEMINT((int) ((cpnewclump_14
                                                        + 0)))) != (ciClump_11)) ? 1 : 0) != 0;) {
                                                    cpnewclump_14 = getMEMINT((int) ((cpnewclump_14 + 20)));

                                                }

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 6803
                                                 */
                                                cpnewclumppu_16 = getMEMINT((int) ((cpnewclump_14 + 16)));
                                                lab_marxan223: for (; getMEMINT((int) ((cpnewclumppu_16
                                                        + 4))) != 0;) {

                                                    /*
                                                     * file
                                                     * E:/git/klab-ecology-component/etc/
                                                     * marxan/marxan.c line 6803
                                                     */
                                                    csetClumpSpecAtPu((int) (cpu), (int) (cSM), getMEMINT((int) ((cpnewclumppu_16
                                                            + 0))), cisp, getMEMINT((int) ((cpclump_13
                                                                    + 0))));
                                                    cpnewclumppu_16 = getMEMINT((int) ((cpnewclumppu_16
                                                            + 4)));

                                                }

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 6804
                                                 */
                                                csetClumpSpecAtPu((int) (cpu), (int) (cSM), getMEMINT((int) ((cpnewclumppu_16
                                                        + 0))), cisp, getMEMINT((int) ((cpclump_13 + 0))));
                                                setMEMINT((int) ((cpnewclumppu_16
                                                        + 4)), (int) (getMEMINT((int) ((cpclump_13 + 16)))));
                                                setMEMINT((int) ((cpclump_13
                                                        + 16)), (int) (getMEMINT((int) ((cpnewclump_14
                                                                + 16)))));
                                                y45 = (int) ((cpclump_13 + 4));
                                                setMEMDOUBLE((int) (y45), (double) ((getMEMDOUBLE((int) (y45))
                                                        + getMEMDOUBLE((int) ((cpnewclump_14 + 4))))));
                                                y46 = (int) ((cpclump_13 + 12));
                                                setMEMINT((int) (y46), (int) ((getMEMINT((int) (y46))
                                                        + getMEMINT((int) ((cpnewclump_14 + 12))))));
                                                cftemp_17 =
                                                        /*
                                                         * file
                                                         * E:/git/klab-ecology-component/
                                                         * etc/marxan/marxan.c line 6810
                                                         */
                                                        marxan.cPartialPen4(cisp, getMEMDOUBLE((int) ((cpnewclump_14
                                                                + 4))), (int) (cspec), cclumptype);
                                                y47 = (int) (((cspec + ((int) (cisp) * 100)) + 48));
                                                setMEMDOUBLE((int) (y47), (double) ((getMEMDOUBLE((int) (y47))
                                                        - cftemp_17)));
                                                y48 = (int) (((cspec + ((int) (cisp) * 100)) + 56));
                                                setMEMINT((int) (y48), (int) ((getMEMINT((int) (y48))
                                                        - (int) ((getMEMINT((int) ((cpnewclump_14 + 12)))
                                                                * (((cftemp_17) > (0)) ? 1 : 0))))));

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 6816
                                                 */
                                                if ((((cpnewclump_14) == (getMEMINT((int) (((cspec
                                                        + ((int) (cisp) * 100)) + 88))))) ? 1 : 0) != 0) {
                                                    setMEMINT((int) (((cspec + ((int) (cisp) * 100))
                                                            + 88)), (int) (getMEMINT((int) ((cpnewclump_14
                                                                    + 20)))));

                                                } else {

                                                    {

                                                        /*
                                                         * file
                                                         * E:/git/klab-ecology-component/
                                                         * etc/marxan/marxan.c line 6820
                                                         */
                                                        cptempclump_15 = getMEMINT((int) (((cspec
                                                                + ((int) (cisp) * 100)) + 88)));
                                                        lab_marxan224: for (; (((getMEMINT((int) ((cptempclump_15
                                                                + 20)))) != (cpnewclump_14)) ? 1 : 0) != 0;) {
                                                            cptempclump_15 = getMEMINT((int) ((cptempclump_15
                                                                    + 20)));

                                                        }
                                                        setMEMINT((int) ((cptempclump_15
                                                                + 20)), (int) (getMEMINT((int) ((cpnewclump_14
                                                                        + 20)))));

                                                    }

                                                }
                                                ;

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 6824
                                                 */
                                                cfree(cpnewclump_14);

                                            }

                                        }
                                        ;

                                    }

                                }
                                ;

                            }

                        }
                        ;
                        cpnbr_12 = getMEMINT((int) ((cpnbr_12 + 12)));

                    }

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6835 */
                if (((cineighbours_9 == 0) ? 1 : 0) != 0) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 6836
                         */
                        cAddNewClump(cisp, cipu, (int) (cspec), (int) (cpu), (int) (cSM));
                        cftemp_17 =
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 6837
                                 */
                                marxan.cPartialPen4(cisp, crAmount_18, (int) (cspec), cclumptype);
                        y49 = (int) (((cspec + ((int) (cisp) * 100)) + 48));
                        setMEMDOUBLE((int) (y49), (double) ((getMEMDOUBLE((int) (y49)) + cftemp_17)));
                        y50 = (int) (((cspec + ((int) (cisp) * 100)) + 56));
                        setMEMINT((int) (y50), (int) ((getMEMINT((int) (y50))
                                + (int) ((((cftemp_17) > (0)) ? 1 : 0)))));

                    }

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6844 */
                if (cineighbours_9 != 0) {

                    {
                        cftemp_17 =
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 6845
                                 */
                                marxan.cPartialPen4(cisp, getMEMDOUBLE((int) ((cpclump_13
                                        + 4))), (int) (cspec), cclumptype);
                        y51 = (int) (((cspec + ((int) (cisp) * 100)) + 48));
                        setMEMDOUBLE((int) (y51), (double) ((getMEMDOUBLE((int) (y51)) + cftemp_17)));
                        y52 = (int) (((cspec + ((int) (cisp) * 100)) + 56));
                        setMEMINT((int) (y52), (int) ((getMEMINT((int) (y52))
                                + (int) ((getMEMINT((int) ((cpclump_13 + 12)))
                                        * (((cftemp_17) > (0)) ? 1 : 0))))));

                    }

                }
                ;

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan437 = jtocstr("Serious error in Remove Type 4 species routine\n");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6856 */

    public static void cRemPu(int cipu, int cisp, int cconnections, int cspec, int cpu, int cSM, int cclumptype) {
        nextlevel();
        if (true) {
            int label = 0;
            int cineighbours_9 = 0;
            int chead_10 = 0;
            int cnewhead_11 = 0;
            int cthead_12 = 0;
            int coldclump_13 = 0;
            int cpclump_14 = 0;
            int ccppu_15 = 0;
            int cppu_16 = 0;
            int cclumpcurr_17 = 0;
            int ctppu_18 = 0;
            int cpnbr_19 = 0;
            double coldamount_20 = 0;
            double cnewamount_21 = 0;
            double crAmount_22 = 0;
            int cnewoccs_23 = 0;
            int y53 = 0;
            int y54 = 0;
            int y55 = 0;
            int y56 = 0;
            int y57 = 0;
            int y58 = 0;
            int y59 = 0;
            int y60 = 0;
            int y61 = 0;
            int y62 = 0;

            {
                cineighbours_9 = 0;
                chead_10 = (int) (0);
                cnewhead_11 = 0;
                cthead_12 = 0;
                coldclump_13 = 0;
                cpclump_14 = 0;
                ccppu_15 = 0;
                cppu_16 = 0;
                cclumpcurr_17 = 0;
                ctppu_18 = 0;
                cpnbr_19 = 0;
                coldamount_20 = 0;
                cnewamount_21 = 0.0;
                crAmount_22 = 0;
                cnewoccs_23 = 0;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6866 */
                coldclump_13 = getMEMINT((int) (((cspec + ((int) (cisp) * 100)) + 88)));
                lab_marxan225: for (; (((coldclump_13) != 0) ? ((((getMEMINT((int) ((coldclump_13 + 0)))) != (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6865 */
                crtnClumpSpecAtPu((int) (cpu), (int) (cSM), cipu, cisp))) ? 1 : 0)) : 0) != 0;) {
                    coldclump_13 = getMEMINT((int) ((coldclump_13 + 20)));

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6868 */
                if (((coldclump_13 == 0) ? 1 : 0) != 0) {

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6868 */
                    marxan.cShowErrorMessage((int) (strmarxan437), 0);

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6871 */
                ccppu_15 = getMEMINT((int) ((coldclump_13 + 16)));
                lab_marxan226: for (; (((getMEMINT((int) ((ccppu_15 + 0)))) != (cipu)) ? 1 : 0) != 0;) {
                    ccppu_15 = getMEMINT((int) ((ccppu_15 + 4)));

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6872 */
                csetClumpSpecAtPu((int) (cpu), (int) (cSM), getMEMINT((int) ((ccppu_15 + 0))), cisp, 0);
                coldamount_20 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 6874
                         */
                        marxan.cPartialPen4(cisp, getMEMDOUBLE((int) ((coldclump_13
                                + 4))), (int) (cspec), cclumptype);
                y53 = (int) (((cspec + ((int) (cisp) * 100)) + 48));
                setMEMDOUBLE((int) (y53), (double) ((getMEMDOUBLE((int) (y53)) - coldamount_20)));
                y54 = (int) (((cspec + ((int) (cisp) * 100)) + 56));
                setMEMINT((int) (y54), (int) ((getMEMINT((int) (y54))
                        - (int) ((getMEMINT((int) ((coldclump_13 + 12)))
                                * (((coldamount_20) > (0)) ? 1 : 0))))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6888 */
                cpnbr_19 = getMEMINT((int) (((cconnections + ((int) (getMEMINT((int) ((ccppu_15 + 0)))) * 16))
                        + 0)));
                lab_marxan227: for (; cpnbr_19 != 0;) {

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6880 */
                    if ((((
                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6879 */
                    crtnClumpSpecAtPu((int) (cpu), (int) (cSM), getMEMINT((int) ((cpnbr_19
                            + 0))), cisp)) == (getMEMINT((int) ((coldclump_13 + 0))))) ? 1 : 0) != 0) {

                        {
                            cineighbours_9++;
                            cnewhead_11 = (int) (
                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 6882
                             */
                            cmalloc(8));
                            setMEMINT((int) ((cnewhead_11 + 0)), (int) (getMEMINT((int) ((cpnbr_19 + 0)))));
                            setMEMINT((int) ((cnewhead_11 + 4)), (int) (chead_10));
                            chead_10 = cnewhead_11;

                        }

                    }
                    ;
                    cpnbr_19 = getMEMINT((int) ((cpnbr_19 + 12)));

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6889 */
                if ((((cineighbours_9) <= (1)) ? 1 : 0) != 0) {

                    {
                        crAmount_22 =
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 6890
                                 */
                                crtnAmountSpecAtPu((int) (cpu), (int) (cSM), cipu, cisp);
                        y55 = (int) ((coldclump_13 + 4));
                        setMEMDOUBLE((int) (y55), (double) ((getMEMDOUBLE((int) (y55)) - crAmount_22)));
                        y56 = (int) ((coldclump_13 + 12));
                        setMEMINT((int) (y56), (int) ((getMEMINT((int) (y56))
                                - (int) ((((crAmount_22) > (0)) ? 1 : 0)))));
                        cnewamount_21 =
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 6893
                                 */
                                marxan.cPartialPen4(cisp, getMEMDOUBLE((int) ((coldclump_13
                                        + 4))), (int) (cspec), cclumptype);
                        cnewoccs_23 = (int) ((getMEMINT((int) ((coldclump_13 + 12)))
                                * (((cnewamount_21) > (0)) ? 1 : 0)));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 6897
                         */
                        if ((((ccppu_15) == (getMEMINT((int) ((coldclump_13 + 16))))) ? 1 : 0) != 0) {

                            {
                                setMEMINT((int) ((coldclump_13
                                        + 16)), (int) (getMEMINT((int) ((ccppu_15 + 4)))));

                            }

                        } else {

                            {

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 6903
                                 */
                                cppu_16 = getMEMINT((int) ((coldclump_13 + 16)));
                                lab_marxan228: for (; (((getMEMINT((int) ((cppu_16 + 4)))) != (ccppu_15)) ? 1
                                        : 0) != 0;) {
                                    cppu_16 = getMEMINT((int) ((cppu_16 + 4)));

                                }
                                setMEMINT((int) ((cppu_16 + 4)), (int) (getMEMINT((int) ((ccppu_15 + 4)))));

                            }

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 6906
                         */
                        cfree(ccppu_15);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 6909
                         */
                        if ((((cineighbours_9) < (1)) ? 1 : 0) != 0) {

                            {

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 6911
                                 */
                                if ((((coldclump_13) == (getMEMINT((int) (((cspec + ((int) (cisp) * 100))
                                        + 88))))) ? 1 : 0) != 0) {
                                    setMEMINT((int) (((cspec + ((int) (cisp) * 100))
                                            + 88)), (int) (getMEMINT((int) ((coldclump_13 + 20)))));

                                } else {

                                    {

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 6914
                                         */
                                        cpclump_14 = getMEMINT((int) (((cspec + ((int) (cisp) * 100)) + 88)));
                                        lab_marxan229: for (; (((getMEMINT((int) ((cpclump_14
                                                + 20)))) != (coldclump_13)) ? 1 : 0) != 0;) {
                                            cpclump_14 = getMEMINT((int) ((cpclump_14 + 20)));

                                        }
                                        setMEMINT((int) ((cpclump_14
                                                + 20)), (int) (getMEMINT((int) ((coldclump_13 + 20)))));

                                    }

                                }
                                ;

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 6917
                                 */
                                cfree(coldclump_13);
                                sincMEMINT((int) (((cspec + ((int) (cisp) * 100)) + 76)), -1);

                            }

                        }
                        ;
                        y57 = (int) (((cspec + ((int) (cisp) * 100)) + 48));
                        setMEMDOUBLE((int) (y57), (double) ((getMEMDOUBLE((int) (y57)) + cnewamount_21)));
                        y58 = (int) (((cspec + ((int) (cisp) * 100)) + 56));
                        setMEMINT((int) (y58), (int) ((getMEMINT((int) (y58)) + cnewoccs_23)));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 6924
                         */
                        if (chead_10 != 0) {

                            {

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 6925
                                 */
                                cfree(chead_10);

                            }

                        }
                        ;
                        if (true) {
                            prevlevel();
                            return;
                        }
                        ;

                    }

                }
                ;
                lab_marxan230: while ((chead_10) != 0) {

                    {
                        cpclump_14 =
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 6934
                                 */
                                cAddNewClump(cisp, getMEMINT((int) ((chead_10
                                        + 0))), (int) (cspec), (int) (cpu), (int) (cSM));
                        cclumpcurr_17 = getMEMINT((int) ((cpclump_14 + 16)));

                        lab_marxan231: do {

                            {

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 6978
                                 */
                                cpnbr_19 = getMEMINT((int) (((cconnections
                                        + ((int) (getMEMINT((int) ((cclumpcurr_17 + 0)))) * 16)) + 0)));
                                lab_marxan232: for (; cpnbr_19 != 0;) {

                                    {

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 6939
                                         */
                                        if ((((
                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 6938
                                         */
                                        crtnClumpSpecAtPu((int) (cpu), (int) (cSM), getMEMINT((int) ((cpnbr_19
                                                + 0))), cisp)) == (getMEMINT((int) ((coldclump_13 + 0))))) ? 1
                                                        : 0) != 0) {

                                            {

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 6941
                                                 */
                                                if ((((getMEMINT((int) ((getMEMINT((int) ((coldclump_13
                                                        + 16)))
                                                        + 0)))) == (getMEMINT((int) ((cpnbr_19 + 0))))) ? 1
                                                                : 0) != 0) {

                                                    {
                                                        cppu_16 = getMEMINT((int) ((coldclump_13 + 16)));
                                                        setMEMINT((int) ((coldclump_13
                                                                + 16)), (int) (getMEMINT((int) ((cppu_16
                                                                        + 4)))));

                                                    }

                                                } else {

                                                    {

                                                        /*
                                                         * file
                                                         * E:/git/klab-ecology-component/
                                                         * etc/marxan/marxan.c line 6948
                                                         */
                                                        ctppu_18 = getMEMINT((int) ((coldclump_13 + 16)));
                                                        lab_marxan233: for (; (((getMEMINT((int) ((getMEMINT((int) ((ctppu_18
                                                                + 4))) + 0)))) != (getMEMINT((int) ((cpnbr_19
                                                                        + 0))))) ? 1 : 0) != 0;) {
                                                            ctppu_18 = getMEMINT((int) ((ctppu_18 + 4)));

                                                        }
                                                        cppu_16 = getMEMINT((int) ((ctppu_18 + 4)));
                                                        setMEMINT((int) ((ctppu_18
                                                                + 4)), (int) (getMEMINT((int) ((cppu_16
                                                                        + 4)))));

                                                    }

                                                }
                                                ;
                                                setMEMINT((int) ((cppu_16
                                                        + 4)), (int) (getMEMINT((int) ((cclumpcurr_17
                                                                + 4)))));
                                                setMEMINT((int) ((cclumpcurr_17 + 4)), (int) (cppu_16));

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 6954
                                                 */
                                                csetClumpSpecAtPu((int) (cpu), (int) (cSM), getMEMINT((int) ((cppu_16
                                                        + 0))), cisp, getMEMINT((int) ((cpclump_14 + 0))));
                                                crAmount_22 =
                                                        /*
                                                         * file
                                                         * E:/git/klab-ecology-component/
                                                         * etc/marxan/marxan.c line 6955
                                                         */
                                                        crtnAmountSpecAtPu((int) (cpu), (int) (cSM), getMEMINT((int) ((cppu_16
                                                                + 0))), cisp);
                                                y59 = (int) ((cpclump_14 + 4));
                                                setMEMDOUBLE((int) (y59), (double) ((getMEMDOUBLE((int) (y59))
                                                        + crAmount_22)));
                                                y60 = (int) ((cpclump_14 + 12));
                                                setMEMINT((int) (y60), (int) ((getMEMINT((int) (y60))
                                                        + (int) ((((crAmount_22) > (0)) ? 1 : 0)))));

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 6960
                                                 */
                                                if ((((getMEMINT((int) ((chead_10
                                                        + 0)))) == (getMEMINT((int) ((cppu_16 + 0))))) ? 1
                                                                : 0) != 0) {

                                                    {
                                                        cnewhead_11 = chead_10;
                                                        chead_10 = getMEMINT((int) ((cnewhead_11 + 4)));

                                                        /*
                                                         * file
                                                         * E:/git/klab-ecology-component/
                                                         * etc/marxan/marxan.c line 6963
                                                         */
                                                        cfree(cnewhead_11);

                                                    }

                                                } else {

                                                    {

                                                        /*
                                                         * file
                                                         * E:/git/klab-ecology-component/
                                                         * etc/marxan/marxan.c line 6968
                                                         */
                                                        cnewhead_11 = chead_10;
                                                        lab_marxan234: for (; (((getMEMINT((int) ((cnewhead_11
                                                                + 4)))) != 0)
                                                                        ? ((((getMEMINT((int) ((getMEMINT((int) ((cnewhead_11
                                                                                + 4)))
                                                                                + 0)))) != (getMEMINT((int) ((cppu_16
                                                                                        + 0))))) ? 1 : 0))
                                                                        : 0) != 0;) {
                                                            cnewhead_11 = getMEMINT((int) ((cnewhead_11
                                                                    + 4)));

                                                        }

                                                        /*
                                                         * file
                                                         * E:/git/klab-ecology-component/
                                                         * etc/marxan/marxan.c line 6970
                                                         */
                                                        if ((((getMEMINT((int) ((cnewhead_11 + 4)))) != 0)
                                                                ? ((((getMEMINT((int) ((getMEMINT((int) ((cnewhead_11
                                                                        + 4)))
                                                                        + 0)))) == (getMEMINT((int) ((cppu_16
                                                                                + 0))))) ? 1 : 0))
                                                                : 0) != 0) {

                                                            {
                                                                cthead_12 = getMEMINT((int) ((cnewhead_11
                                                                        + 4)));
                                                                setMEMINT((int) ((cnewhead_11
                                                                        + 4)), (int) (getMEMINT((int) ((cthead_12
                                                                                + 4)))));

                                                                /*
                                                                 * file
                                                                 * E:/git/klab-ecology-
                                                                 * component/etc/marxan/
                                                                 * marxan.c line 6973
                                                                 */
                                                                cfree(cthead_12);

                                                            }

                                                        }
                                                        ;

                                                    }

                                                }
                                                ;

                                            }

                                        }
                                        ;

                                    }
                                    cpnbr_19 = getMEMINT((int) ((cpnbr_19 + 12)));

                                }
                                cclumpcurr_17 = getMEMINT((int) ((cclumpcurr_17 + 4)));

                            }

                        } while (cclumpcurr_17 != 0);
                        y61 = (int) (((cspec + ((int) (cisp) * 100)) + 48));
                        setMEMDOUBLE((int) (y61), (double) ((getMEMDOUBLE((int) (y61)) +
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 6981
                         */
                                marxan.cPartialPen4(cisp, getMEMDOUBLE((int) ((cpclump_14
                                        + 4))), (int) (cspec), cclumptype))));
                        y62 = (int) (((cspec + ((int) (cisp) * 100)) + 56));
                        setMEMINT((int) (y62), (int) ((getMEMINT((int) (y62))
                                + (int) ((getMEMINT((int) ((cpclump_14 + 12))) * (((
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 6982
                                 */
                                marxan.cPartialPen4(cisp, getMEMDOUBLE((int) ((cpclump_14 + 4))), (int) (cspec), cclumptype)) > (0)) ? 1 : 0))))));
                        cnewhead_11 = chead_10;
                        chead_10 = getMEMINT((int) ((cnewhead_11 + 4)));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 6985
                         */
                        cfree(cnewhead_11);

                    }

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 6993 */
                if ((((coldclump_13) == (getMEMINT((int) (((cspec + ((int) (cisp) * 100)) + 88))))) ? 1
                        : 0) != 0) {

                    {
                        setMEMINT((int) (((cspec + ((int) (cisp) * 100))
                                + 88)), (int) (getMEMINT((int) ((coldclump_13 + 20)))));

                    }

                } else {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 6998
                         */
                        cpclump_14 = getMEMINT((int) (((cspec + ((int) (cisp) * 100)) + 88)));
                        lab_marxan235: for (; (((getMEMINT((int) ((cpclump_14 + 20)))) != (coldclump_13)) ? 1
                                : 0) != 0;) {
                            cpclump_14 = getMEMINT((int) ((cpclump_14 + 20)));

                        }
                        setMEMINT((int) ((cpclump_14 + 20)), (int) (getMEMINT((int) ((coldclump_13 + 20)))));

                    }

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7001 */
                cClearClump(cisp, coldclump_13, (int) (cpu), (int) (cSM));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7002 */
                cfree(coldclump_13);

            }
        }
        ;
        prevlevel();
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7014 */

    public static void cSetSpeciesClumps(int cpuno, int cR, int cspec, int cpu, int cSM, int cconnections, int cclumptype) {
        nextlevel();
        if (true) {
            int label = 0;
            int ci_9 = 0;
            int cipu_10 = 0;
            int cisp_11 = 0;
            int cism_12 = 0;

            {
                ci_9 = 0;
                cipu_10 = 0;
                cisp_11 = 0;
                cism_12 = 0;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7034 */
                cipu_10 = 0;
                lab_marxan236: for (; (((cipu_10) < (cpuno)) ? 1 : 0) != 0;) {

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7019 */
                    if (getMEMINT((int) (((cpu + ((int) (cipu_10) * 64)) + 32))) != 0) {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 7032
                         */
                        ci_9 = 0;
                        lab_marxan237: for (; (((ci_9) < (getMEMINT((int) (((cpu + ((int) (cipu_10) * 64))
                                + 32))))) ? 1 : 0) != 0;) {

                            {
                                cism_12 = (getMEMINT((int) (((cpu + ((int) (cipu_10) * 64)) + 36))) + ci_9);
                                cisp_11 = getMEMINT((int) (((cSM + ((int) (cism_12) * 16)) + 12)));

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 7024
                                 */
                                if (getMEMDOUBLE((int) (((cspec + ((int) (cisp_11) * 100)) + 80))) != 0) {

                                    {
                                        setMEMINT((int) (((cspec + ((int) (cisp_11) * 100))
                                                + 76)), (int) (0));

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 7028
                                         */
                                        if (((((((getMEMDOUBLE((int) (((cSM + ((int) (cism_12) * 16))
                                                + 0)))) > (0))
                                                        ? 1
                                                        : 0)) != 0) ? ((((getMEMINT((int) (((cSM
                                                                + ((int) (cism_12) * 16)) + 8)))) == (0)) ? 1
                                                                        : 0))
                                                                : 0) != 0) {

                                            {

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 7029
                                                 */
                                                cAddNewPU(cipu_10, cisp_11, (int) (cconnections), (int) (cspec), (int) (cpu), (int) (cSM), cclumptype);

                                            }

                                        }
                                        ;

                                    }

                                }
                                ;

                            }
                            ci_9++;

                        }

                    }
                    ;
                    cipu_10++;

                }

            }
        }
        ;
        prevlevel();
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7039 */

    public static void cSpeciesAmounts4(int cisp, int cspec, int cclumptype) {
        nextlevel();
        if (true) {
            int label = 0;
            double cftemp_5 = 0;
            int cpclump_6 = 0;
            int y63 = 0;
            int y64 = 0;

            {
                cftemp_5 = 0;
                cpclump_6 = 0;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7048 */
                cpclump_6 = getMEMINT((int) (((cspec + ((int) (cisp) * 100)) + 88)));
                lab_marxan238: for (; cpclump_6 != 0;) {

                    {
                        cftemp_5 =
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 7045
                                 */
                                marxan.cPartialPen4(cisp, getMEMDOUBLE((int) ((cpclump_6
                                        + 4))), (int) (cspec), cclumptype);
                        y63 = (int) (((cspec + ((int) (cisp) * 100)) + 48));
                        setMEMDOUBLE((int) (y63), (double) ((getMEMDOUBLE((int) (y63)) + cftemp_5)));
                        y64 = (int) (((cspec + ((int) (cisp) * 100)) + 56));
                        setMEMINT((int) (y64), (int) ((getMEMINT((int) (y64))
                                + (int) ((getMEMINT((int) ((cpclump_6 + 12)))
                                        * (((cftemp_5) > (0)) ? 1 : 0))))));

                    }
                    cpclump_6 = getMEMINT((int) ((cpclump_6 + 20)));

                }

            }
        }
        ;
        prevlevel();
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7055 */

    public static int cRemClumpCheck(int cpclump, int cpu) {
        nextlevel();
        if (true) {
            int label = 0;
            int retval = 0;
            int cpcpu_5 = 0;

            {
                cpcpu_5 = 0;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7062 */
                cpcpu_5 = getMEMINT((int) ((cpclump + 16)));
                lab_marxan239: for (; cpcpu_5 != 0;) {

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7060 */
                    if ((((getMEMINT((int) (((cpu + ((int) (getMEMINT((int) ((cpcpu_5 + 0)))) * 64))
                            + 4)))) == (2)) ? 1 : 0) != 0) {
                        retval = 0;
                        if (true) {
                            prevlevel();
                            return retval;
                        }
                        ;

                    }
                    ;
                    cpcpu_5 = getMEMINT((int) ((cpcpu_5 + 4)));

                }
                retval = 1;
                if (true) {
                    prevlevel();
                    return retval;
                }
                ;

            }
        }
        ;
        prevlevel();
        return 0;
    }

    static int strmarxan438 = jtocstr("Species %i cannot be fully represented!\n");
    static int strmarxan439 = jtocstr("Species %i can only get %i separate valid clumps where %i are wanted!\n");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7070 */

    public static int cCalcPenaltyType4(int cisp, int cpuno, int cSM, int cconnections, int cspec, int cpu, int cclumptype, int cinputR) {
        nextlevel();
        if (true) {
            int label = 0;
            int retval = 0;
            int ci_11 = 0;
            int cj_12 = alloconstack(0);
            int cipu_13 = 0;
            int ciputotal_14 = 0;
            int ciZone_15 = 0;
            int ciclumpno_16 = 0;
            int cbadspecies_17 = 0;
            int cR_18 = 0;
            double ctotalamount_19 = 0;
            int cdummy_20 = alloconstack(0);
            int cidummy_21 = alloconstack(0);
            double ccost_22 = 0;
            double cconnection_23 = 0;
            double crAmount_24 = 0;
            double crZoneConnectionCost_25 = 0;
            int cplist_26 = 0;
            int cplisthead_27 = 0;
            int cpdiscard_28 = 0;
            int cpnbr_29 = 0;
            int cpclump_30 = 0;
            int cpnewclump_31 = 0;
            int cpnewclumppu_32 = 0;
            int cpcpu_33 = 0;
            int y65 = 0;
            int y66 = 0;

            {
                ci_11 = 0;
                setMEMINT((int) (cj_12), (int) (0));
                cipu_13 = 0;
                ciputotal_14 = 0;
                ciZone_15 = 0;
                ciclumpno_16 = 0;
                cbadspecies_17 = 0;
                cR_18 = 0;
                ctotalamount_19 = 0;
                setMEMINT((int) (cdummy_20), (int) (0));
                setMEMINT((int) (cidummy_21), (int) (0));
                ccost_22 = 0.0;
                cconnection_23 = 0.0;
                crAmount_24 = 0;
                crZoneConnectionCost_25 = 0;
                cplist_26 = 0;
                cplisthead_27 = (int) (0);
                cpdiscard_28 = 0;
                cpnbr_29 = 0;
                cpclump_30 = 0;
                cpnewclump_31 = 0;
                cpnewclumppu_32 = 0;
                cpcpu_33 = 0;
                cR_18 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7083 */
                ccalloc(cpuno, 4));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7085 */
                ci_11 = 0;
                lab_marxan240: for (; (((ci_11) < (cpuno)) ? 1 : 0) != 0;) {
                    setMEMINT((int) ((cR_18
                            + (ci_11 * 4))), (int) (getMEMINT((int) ((cinputR + ((int) (ci_11) * 4))))));
                    ci_11++;

                }
                cplisthead_27 = (int) (0);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7109 */
                ci_11 = 0;
                lab_marxan241: for (; (((ci_11) < (cpuno)) ? 1 : 0) != 0;) {

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7093 */
                    if ((((
                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7092 */
                    crtnAmountSpecAtPu((int) (cpu), (int) (cSM), ci_11, cisp)) > (0)) ? 1 : 0) != 0) {

                        {

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 7095
                             */
                            if ((((getMEMINT((int) ((cR_18 + (ci_11 * 4))))) == (0)) ? 1 : 0) != 0) {
                                ci_11++;
                                if (true) {
                                    continue lab_marxan241;
                                }
                                ;

                            }
                            ;

                            {

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 7098
                                 */
                                cAddNewPU(ci_11, cisp, (int) (cconnections), (int) (cspec), (int) (cpu), (int) (cSM), cclumptype);
                                ci_11++;
                                if (true) {
                                    continue lab_marxan241;
                                }
                                ;

                            }
                            ciputotal_14++;
                            cplist_26 = (int) (
                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 7102
                             */
                            cmalloc(8));
                            setMEMINT((int) ((cplist_26 + 0)), (int) (ci_11));
                            setMEMINT((int) ((cplist_26 + 4)), (int) (cplisthead_27));
                            cplisthead_27 = cplist_26;

                        }

                    }
                    ;
                    ci_11++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7109 */
                cSpeciesAmounts4(cisp, (int) (cspec), cclumptype);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7111 */
                if ((((getMEMINT((int) (((cspec + ((int) (cisp) * 100)) + 68)))) > (0)) ? 1 : 0) != 0) {
                    setMEMINT((int) (((cspec + ((int) (cisp) * 100)) + 72)), (int) (
                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7111 */
                    marxan.cCountSeparation2(cisp, 0, 0, cpuno, (int) (cR_18), (int) (cpu), (int) (cSM), (int) (cspec), 0)));

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7113 */
                if ((((((((((getMEMDOUBLE((int) (((cspec + ((int) (cisp) * 100))
                        + 48)))) >= (getMEMDOUBLE((int) (((cspec + ((int) (cisp) * 100)) + 12))))) ? 1
                                : 0)) != 0)
                                        ? ((((getMEMINT((int) (((cspec + ((int) (cisp) * 100))
                                                + 56)))) >= (getMEMINT((int) (((cspec + ((int) (cisp) * 100))
                                                        + 28))))) ? 1 : 0))
                                        : 0)) != 0) ? ((((getMEMINT((int) (((cspec + ((int) (cisp) * 100))
                                                + 72)))) >= (getMEMINT((int) (((cspec + ((int) (cisp) * 100))
                                                        + 68))))) ? 1 : 0))
                                                : 0) != 0) {

                    {
                        setMEMDOUBLE((int) (((cspec + ((int) (cisp) * 100)) + 48)), (double) (0));
                        setMEMINT((int) (((cspec + ((int) (cisp) * 100)) + 56)), (int) (0));
                        setMEMINT((int) (((cspec + ((int) (cisp) * 100)) + 72)), (int) (0));
                        lab_marxan242: while ((getMEMINT((int) (((cspec + ((int) (cisp) * 100))
                                + 88)))) != 0) {

                            {

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 7120
                                 */
                                cClearClump(cisp, getMEMINT((int) (((cspec + ((int) (cisp) * 100))
                                        + 88))), (int) (cpu), (int) (cSM));
                                cpclump_30 = getMEMINT((int) (((cspec + ((int) (cisp) * 100)) + 88)));
                                setMEMINT((int) (((cspec + ((int) (cisp) * 100))
                                        + 88)), (int) (getMEMINT((int) ((getMEMINT((int) (((cspec
                                                + ((int) (cisp) * 100)) + 88))) + 20)))));

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 7123
                                 */
                                cfree(cpclump_30);
                                setMEMINT((int) (((cspec + ((int) (cisp) * 100)) + 76)), (int) (0));

                            }

                        }

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 7127
                         */
                        cfree(cR_18);
                        retval = (-(1));
                        if (true) {
                            prevlevel();
                            return retval;
                        }
                        ;

                    }

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7133 */
                if (ciputotal_14 != 0) {

                    lab_marxan243: do {

                        {
                            cipu_13 =
                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 7136
                                     */
                                    marxan.cRandNum(ciputotal_14);
                            cplist_26 = cplisthead_27;

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 7141
                             */
                            lab_marxan244: for (; (((cipu_13) > (0)) ? 1 : 0) != 0;) {

                                {
                                    cplist_26 = getMEMINT((int) ((cplist_26 + 4)));

                                }
                                cipu_13--;

                            }
                            ciputotal_14--;
                            ciZone_15 = (
                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 7146
                             */
                            marxan.cRandNum(getMEMINT((int) (marxan.ciZoneCount))) + 1);
                            setMEMINT((int) ((cR_18
                                    + (getMEMINT((int) ((cplist_26 + 0))) * 4))), (int) (ciZone_15));

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 7151
                             */
                            cAddNewPU(getMEMINT((int) ((cplist_26
                                    + 0))), cisp, (int) (cconnections), (int) (cspec), (int) (cpu), (int) (cSM), cclumptype);

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 7155
                             */
                            if ((((cplisthead_27) == (cplist_26)) ? 1 : 0) != 0) {

                                {
                                    cplisthead_27 = getMEMINT((int) ((cplist_26 + 4)));

                                }

                            } else {

                                {

                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 7162
                                     */
                                    cpdiscard_28 = cplisthead_27;
                                    lab_marxan245: for (; (((getMEMINT((int) ((cpdiscard_28
                                            + 4)))) != (cplist_26)) ? 1 : 0) != 0;) {
                                        cpdiscard_28 = getMEMINT((int) ((cpdiscard_28 + 4)));

                                    }
                                    setMEMINT((int) ((cpdiscard_28
                                            + 4)), (int) (getMEMINT((int) ((cplist_26 + 4)))));

                                }

                            }
                            ;

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 7165
                             */
                            cfree(cplist_26);

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 7169
                             */
                            cSpeciesAmounts4(cisp, (int) (cspec), cclumptype);

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 7171
                             */
                            if ((((getMEMINT((int) (((cspec + ((int) (cisp) * 100)) + 68)))) > (0)) ? 1
                                    : 0) != 0) {
                                setMEMINT((int) (((cspec + ((int) (cisp) * 100)) + 72)), (int) (
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 7171
                                 */
                                marxan.cCountSeparation2(cisp, 0, 0, cpuno, (int) (cR_18), (int) (cpu), (int) (cSM), (int) (cspec), 0)));

                            }
                            ;

                        }

                    } while (((((((((((((getMEMDOUBLE((int) (((cspec + ((int) (cisp) * 100))
                            + 48)))) < (getMEMDOUBLE((int) (((cspec + ((int) (cisp) * 100)) + 12))))) ? 1
                                    : 0)) != 0)
                                            ? 1
                                            : ((((getMEMINT((int) (((cspec + ((int) (cisp) * 100))
                                                    + 72)))) < (getMEMINT((int) (((cspec
                                                            + ((int) (cisp) * 100))
                                                            + 68))))) ? 1 : 0)))) != 0)
                                                                    ? 1
                                                                    : ((((getMEMINT((int) (((cspec
                                                                            + ((int) (cisp) * 100))
                                                                            + 56)))) < (getMEMINT((int) (((cspec
                                                                                    + ((int) (cisp) * 100))
                                                                                    + 28))))) ? 1
                                                                                            : 0)))) != 0)
                                                                                                    ? ((((ciputotal_14) >= (1))
                                                                                                            ? 1
                                                                                                            : 0))
                                                                                                    : 0) != 0);

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7179 */
                if (((((((getMEMDOUBLE((int) (((cspec + ((int) (cisp) * 100))
                        + 48)))) < (getMEMDOUBLE((int) (((cspec + ((int) (cisp) * 100)) + 12))))) ? 1
                                : 0)) != 0)
                                        ? 1
                                        : ((((getMEMINT((int) (((cspec + ((int) (cisp) * 100))
                                                + 56)))) < (getMEMINT((int) (((cspec + ((int) (cisp) * 100))
                                                        + 28))))) ? 1 : 0))) != 0) {

                    {
                        cbadspecies_17 = 1;
                        startargs(getMEMINT((int) (((cspec + ((int) (cisp) * 100)) + 0))));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 7181
                         */
                        marxan.cShowGenProg((int) (strmarxan438), endargs());

                    }

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7184 */
                if ((((((((((getMEMINT((int) (((cspec + ((int) (cisp) * 100))
                        + 72)))) < (getMEMINT((int) (((cspec + ((int) (cisp) * 100)) + 68)))))
                                ? 1
                                : 0)) != 0) ? ((((getMEMDOUBLE((int) (((cspec + ((int) (cisp) * 100))
                                        + 48)))) >= (getMEMDOUBLE((int) (((cspec + ((int) (cisp) * 100))
                                                + 12))))) ? 1 : 0))
                                        : 0)) != 0) ? ((((getMEMINT((int) (((cspec + ((int) (cisp) * 100))
                                                + 56)))) >= (getMEMINT((int) (((cspec + ((int) (cisp) * 100))
                                                        + 28))))) ? 1 : 0))
                                                : 0) != 0) {

                    {
                        cbadspecies_17 = 1;
                        startargs(getMEMINT((int) (((cspec + ((int) (cisp) * 100)) + 0))));
                        addarg(getMEMINT((int) (((cspec + ((int) (cisp) * 100)) + 72))));
                        addarg(getMEMINT((int) (((cspec + ((int) (cisp) * 100)) + 68))));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 7187
                         */
                        marxan.cShowGenProg((int) (strmarxan439), endargs());

                    }

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7194 */
                if ((((getMEMINT((int) (((cspec + ((int) (cisp) * 100))
                        + 56)))) >= (getMEMINT((int) (((cspec + ((int) (cisp) * 100)) + 28))))) ? 1
                                : 0) != 0) {

                    {
                        cpclump_30 = getMEMINT((int) (((cspec + ((int) (cisp) * 100)) + 88)));
                        lab_marxan246: while ((cpclump_30) != 0) {

                            {
                                ci_11 = 0;

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 7200
                                 */
                                if (
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 7199
                                 */
                                cRemClumpCheck(cpclump_30, (int) (cpu)) != 0) {
                                    ci_11 = 1;

                                }
                                ;

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 7202
                                 */
                                if (ci_11 != 0) {

                                    {

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 7204
                                         */
                                        if (((((getMEMINT((int) (((cspec + ((int) (cisp) * 100)) + 56)))
                                                - getMEMINT((int) ((cpclump_30
                                                        + 12))))) >= (getMEMINT((int) (((cspec
                                                                + ((int) (cisp) * 100)) + 28))))) ? 1
                                                                        : 0) != 0) {
                                            ci_11 = 1;

                                        } else {
                                            ci_11 = 0;

                                        }
                                        ;

                                    }

                                }
                                ;

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 7209
                                 */
                                if (ci_11 != 0) {

                                    {

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 7211
                                         */
                                        if ((((((((getMEMDOUBLE((int) (((cspec + ((int) (cisp) * 100)) + 48)))
                                                - getMEMDOUBLE((int) ((cpclump_30
                                                        + 4))))) >= (getMEMDOUBLE((int) (((cspec
                                                                + ((int) (cisp) * 100))
                                                                + 12))))) ? 1 : 0)) != 0)
                                                                        ? 1
                                                                        : ((((getMEMDOUBLE((int) ((cpclump_30
                                                                                + 4)))) < (getMEMDOUBLE((int) (((cspec
                                                                                        + ((int) (cisp)
                                                                                                * 100))
                                                                                        + 80))))) ? 1
                                                                                                : 0))) != 0) {
                                            ci_11 = 1;

                                        } else {
                                            ci_11 = 0;

                                        }
                                        ;

                                    }

                                }
                                ;

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 7216
                                 */
                                if ((((ci_11) != 0)
                                        ? (getMEMINT((int) (((cspec + ((int) (cisp) * 100)) + 68))))
                                        : 0) != 0) {

                                    {
                                        setMEMINT((int) (cj_12), (int) (
                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 7217
                                         */
                                        marxan.cCountSeparation2(cisp, 0, cpclump_30, cpuno, (int) (cR_18), (int) (cpu), (int) (cSM), (int) (cspec), (-(1)))));

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 7219
                                         */
                                        if (((((((getMEMINT((int) (cj_12))) < (getMEMINT((int) (((cspec
                                                + ((int) (cisp) * 100)) + 72))))) ? 1 : 0)) != 0)
                                                        ? ((((getMEMINT((int) (cj_12))) < (getMEMINT((int) (((cspec
                                                                + ((int) (cisp) * 100)) + 68))))) ? 1 : 0))
                                                        : 0) != 0) {
                                            ci_11 = 0;

                                        } else {
                                            ci_11 = 1;

                                        }
                                        ;

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 7223
                                         */
                                        if (((getMEMDOUBLE((int) (((cspec + ((int) (cisp) * 100))
                                                + 80))) == 0) ? 1 : 0) != 0) {
                                            ci_11 = 0;

                                        }
                                        ;

                                    }

                                }
                                ;

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 7226
                                 */
                                if (ci_11 != 0) {

                                    {

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 7228
                                         */
                                        if ((((getMEMINT((int) (((cspec + ((int) (cisp) * 100))
                                                + 88)))) == (cpclump_30)) ? 1 : 0) != 0) {

                                            {
                                                setMEMINT((int) (((cspec + ((int) (cisp) * 100))
                                                        + 88)), (int) (getMEMINT((int) ((cpclump_30 + 20)))));

                                            }

                                        } else {

                                            {

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 7234
                                                 */
                                                cpnewclump_31 = getMEMINT((int) (((cspec
                                                        + ((int) (cisp) * 100)) + 88)));
                                                lab_marxan247: for (; (((getMEMINT((int) ((cpnewclump_31
                                                        + 20)))) != (cpclump_30)) ? 1 : 0) != 0;) {
                                                    cpnewclump_31 = getMEMINT((int) ((cpnewclump_31 + 20)));

                                                }
                                                setMEMINT((int) ((cpnewclump_31
                                                        + 20)), (int) (getMEMINT((int) ((cpclump_30 + 20)))));

                                            }

                                        }
                                        ;
                                        lab_marxan248: while ((getMEMINT((int) ((cpclump_30 + 16)))) != 0) {

                                            {
                                                cpnewclumppu_32 = getMEMINT((int) ((cpclump_30 + 16)));
                                                setMEMINT((int) ((cpclump_30
                                                        + 16)), (int) (getMEMINT((int) ((cpnewclumppu_32
                                                                + 4)))));

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 7241
                                                 */
                                                csetClumpSpecAtPu((int) (cpu), (int) (cSM), getMEMINT((int) ((cpnewclumppu_32
                                                        + 0))), cisp, 0);

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 7242
                                                 */
                                                cfree(cpnewclumppu_32);

                                            }

                                        }
                                        ctotalamount_19 -= getMEMDOUBLE((int) ((cpclump_30 + 4)));
                                        cpnewclump_31 = cpclump_30;
                                        cpclump_30 = getMEMINT((int) ((cpclump_30 + 20)));

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 7249
                                         */
                                        cfree(cpnewclump_31);
                                        sincMEMINT((int) (((cspec + ((int) (cisp) * 100)) + 76)), -1);

                                    }

                                } else {
                                    cpclump_30 = getMEMINT((int) ((cpclump_30 + 20)));

                                }
                                ;

                            }

                        }

                    }

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7263 */
                if ((((getMEMINT((int) (((cspec + ((int) (cisp) * 100))
                        + 56)))) >= (getMEMINT((int) (((cspec + ((int) (cisp) * 100)) + 28))))) ? 1
                                : 0) != 0) {

                    {
                        cpclump_30 = getMEMINT((int) (((cspec + ((int) (cisp) * 100)) + 88)));
                        lab_marxan249: while ((cpclump_30) != 0) {

                            {
                                cpcpu_33 = getMEMINT((int) ((cpclump_30 + 16)));
                                lab_marxan250: while ((cpcpu_33) != 0) {

                                    {
                                        ci_11 = 0;

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 7273
                                         */
                                        if (((((((((((((getMEMINT((int) ((cR_18 + (cipu_13 * 4))))) > (0)) ? 1
                                                : 0)) != 0)
                                                        ? ((((getMEMINT((int) (((cpu + ((int) (cipu_13) * 64))
                                                                + 4)))) < (2)) ? 1 : 0))
                                                        : 0)) != 0) ? ((((getMEMINT((int) (((cpu
                                                                + ((int) (cipu_13) * 64)) + 40)))) != (1)) ? 1
                                                                        : 0))
                                                                : 0)) != 0)
                                                                        ? ((((getMEMINT((int) (((cpu
                                                                                + ((int) (cipu_13) * 64))
                                                                                + 48)))) != (1)) ? 1 : 0))
                                                                        : 0) != 0) {
                                            ci_11 = 1;

                                        }
                                        ;

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 7275
                                         */
                                        if (ci_11 != 0) {

                                            {
                                                crAmount_24 =
                                                        /*
                                                         * file
                                                         * E:/git/klab-ecology-component/
                                                         * etc/marxan/marxan.c line 7276
                                                         */
                                                        crtnAmountSpecAtPu((int) (cpu), (int) (cSM), getMEMINT((int) ((cpcpu_33
                                                                + 0))), cisp);

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 7278
                                                 */
                                                if ((((((((getMEMDOUBLE((int) ((cpclump_30 + 4)))
                                                        - crAmount_24)) > (getMEMDOUBLE((int) (((cspec
                                                                + ((int) (cisp) * 100))
                                                                + 80))))) ? 1 : 0)) != 0)
                                                                        ? (((((getMEMDOUBLE((int) (((cspec
                                                                                + ((int) (cisp) * 100))
                                                                                + 48)))
                                                                                - crAmount_24)) > (getMEMDOUBLE((int) (((cspec
                                                                                        + ((int) (cisp)
                                                                                                * 100))
                                                                                        + 12))))) ? 1 : 0))
                                                                        : 0) != 0) {
                                                    ci_11 = 1;

                                                } else {
                                                    ci_11 = 0;

                                                }
                                                ;

                                            }

                                        }
                                        ;

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 7283
                                         */
                                        if (ci_11 != 0) {

                                            {

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 7285
                                                 */
                                                if ((((getMEMINT((int) (((cspec + ((int) (cisp) * 100))
                                                        + 56)))) > (getMEMINT((int) (((cspec
                                                                + ((int) (cisp) * 100)) + 28))))) ? 1
                                                                        : 0) != 0) {
                                                    ci_11 = 1;

                                                } else {
                                                    ci_11 = 0;

                                                }
                                                ;

                                            }

                                        }
                                        ;

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 7290
                                         */
                                        if (ci_11 != 0) {

                                            {
                                                cpnewclump_31 = (int) (
                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 7291
                                                 */
                                                cmalloc(24));
                                                setMEMINT((int) ((cpnewclump_31
                                                        + 0)), (int) (getMEMINT((int) ((cpcpu_33 + 0)))));
                                                setMEMDOUBLE((int) ((cpnewclump_31 + 4)), (double) (0));
                                                setMEMINT((int) ((cpnewclump_31 + 20)), (int) ((int) (0)));
                                                setMEMINT((int) (cj_12), (int) (
                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 7295
                                                 */
                                                marxan.cCountSeparation2(cisp, getMEMINT((int) ((cpcpu_33
                                                        + 0))), cpnewclump_31, cpuno, (int) (cR_18), (int) (cpu), (int) (cSM), (int) (cspec), (-(1)))));

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 7296
                                                 */
                                                cfree(cpnewclump_31);

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 7298
                                                 */
                                                if (((((((getMEMINT((int) (cj_12))) < (getMEMINT((int) (((cspec
                                                        + ((int) (cisp) * 100)) + 72))))) ? 1 : 0)) != 0)
                                                                ? ((((getMEMINT((int) (cj_12))) < (getMEMINT((int) (((cspec
                                                                        + ((int) (cisp) * 100)) + 68))))) ? 1
                                                                                : 0))
                                                                : 0) != 0) {
                                                    ci_11 = 0;

                                                } else {
                                                    ci_11 = 1;

                                                }
                                                ;

                                            }

                                        }
                                        ;

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 7303
                                         */
                                        if (ci_11 != 0) {

                                            {

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 7305
                                                 */
                                                if (
                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 7304
                                                 */
                                                cClumpCut(cisp, (int) (cpu), (int) (cspec), cpclump_30, cpcpu_33, (int) (cconnections), (int) (cSM), cdummy_20, cidummy_21, cj_12, 0, cclumptype) != 0) {
                                                    ci_11 = 0;

                                                } else {
                                                    ci_11 = 1;

                                                }
                                                ;

                                            }

                                        }
                                        ;

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 7311
                                         */
                                        if (ci_11 != 0) {

                                            {

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 7312
                                                 */
                                                csetClumpSpecAtPu((int) (cpu), (int) (cSM), getMEMINT((int) ((cpcpu_33
                                                        + 0))), cisp, 0);
                                                ctotalamount_19 -= crAmount_24;
                                                y65 = (int) ((cpclump_30 + 4));
                                                setMEMDOUBLE((int) (y65), (double) ((getMEMDOUBLE((int) (y65))
                                                        - crAmount_24)));

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 7316
                                                 */
                                                if ((((cpcpu_33) == (getMEMINT((int) ((cpclump_30 + 16)))))
                                                        ? 1 : 0) != 0) {

                                                    {
                                                        setMEMINT((int) ((cpclump_30
                                                                + 16)), (int) (getMEMINT((int) ((cpcpu_33
                                                                        + 4)))));

                                                        /*
                                                         * file
                                                         * E:/git/klab-ecology-component/
                                                         * etc/marxan/marxan.c line 7318
                                                         */
                                                        cfree(cpcpu_33);
                                                        cpcpu_33 = getMEMINT((int) ((cpclump_30 + 16)));

                                                    }

                                                } else {

                                                    {

                                                        /*
                                                         * file
                                                         * E:/git/klab-ecology-component/
                                                         * etc/marxan/marxan.c line 7325
                                                         */
                                                        cpnewclumppu_32 = getMEMINT((int) ((cpclump_30
                                                                + 16)));
                                                        lab_marxan251: for (; (((getMEMINT((int) ((cpnewclumppu_32
                                                                + 4)))) != (cpcpu_33)) ? 1 : 0) != 0;) {
                                                            cpnewclumppu_32 = getMEMINT((int) ((cpnewclumppu_32
                                                                    + 4)));

                                                        }
                                                        setMEMINT((int) ((cpnewclumppu_32
                                                                + 4)), (int) (getMEMINT((int) ((cpcpu_33
                                                                        + 4)))));

                                                        /*
                                                         * file
                                                         * E:/git/klab-ecology-component/
                                                         * etc/marxan/marxan.c line 7327
                                                         */
                                                        cfree(cpcpu_33);
                                                        cpcpu_33 = getMEMINT((int) ((cpnewclumppu_32 + 4)));

                                                    }

                                                }
                                                ;

                                            }

                                        } else {
                                            cpcpu_33 = getMEMINT((int) ((cpcpu_33 + 4)));

                                        }
                                        ;

                                    }

                                }
                                cpclump_30 = getMEMINT((int) ((cpclump_30 + 20)));

                            }

                        }

                    }

                }
                ;
                lab_marxan252: while ((cplisthead_27) != 0) {

                    {
                        cplist_26 = cplisthead_27;
                        cplisthead_27 = getMEMINT((int) ((cplisthead_27 + 4)));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 7343
                         */
                        cfree(cplist_26);

                    }

                }
                cpclump_30 = getMEMINT((int) (((cspec + ((int) (cisp) * 100)) + 88)));
                lab_marxan253: while ((cpclump_30) != 0) {

                    {
                        ciclumpno_16 = getMEMINT((int) ((cpclump_30 + 0)));
                        cpcpu_33 = getMEMINT((int) ((cpclump_30 + 16)));
                        lab_marxan254: while ((cpcpu_33) != 0) {

                            {

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 7358
                                 */
                                if ((((getMEMINT((int) (((cpu
                                        + ((int) (getMEMINT((int) ((cpcpu_33 + 0)))) * 64)) + 4)))) != (2))
                                                ? 1 : 0) != 0) {

                                    {
                                        ccost_22 += getMEMDOUBLE((int) (((cpu
                                                + ((int) (getMEMINT((int) ((cpcpu_33 + 0)))) * 64)) + 24)));
                                        cconnection_23 += getMEMDOUBLE((int) (((cconnections
                                                + ((int) (getMEMINT((int) ((cpcpu_33 + 0)))) * 16)) + 4)));

                                    }

                                }
                                ;

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 7363
                                 */
                                if (getMEMINT((int) (((cconnections
                                        + ((int) (getMEMINT((int) ((cpcpu_33 + 0)))) * 16)) + 12))) != 0) {

                                    {
                                        cpnbr_29 = getMEMINT((int) (((cconnections
                                                + ((int) (getMEMINT((int) ((cpcpu_33 + 0)))) * 16)) + 0)));
                                        lab_marxan255: while ((cpnbr_29) != 0) {

                                            {
                                                crZoneConnectionCost_25 = getMEMDOUBLE((int) ((getMEMINT((int) (marxan.c_RelConnectionCost))
                                                        + ((((getMEMINT((int) ((cR_18
                                                                + (getMEMINT((int) ((cpcpu_33 + 0))) * 4))))
                                                                - 1) * getMEMINT((int) (marxan.ciZoneCount)))
                                                                + (getMEMINT((int) ((cR_18
                                                                        + (getMEMINT((int) ((cpnbr_29 + 0)))
                                                                                * 4))))
                                                                        - 1))
                                                                * 8))));

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 7370
                                                 */
                                                if ((((
                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 7369
                                                 */
                                                crtnClumpSpecAtPu((int) (cpu), (int) (cSM), getMEMINT((int) ((cpnbr_29
                                                        + 0))), cisp)) != (ciclumpno_16)) ? 1 : 0) != 0) {
                                                    cconnection_23 += (getMEMDOUBLE((int) ((cpnbr_29 + 4)))
                                                            * crZoneConnectionCost_25);

                                                }
                                                ;
                                                cpnbr_29 = getMEMINT((int) ((cpnbr_29 + 12)));

                                            }

                                        }

                                    }

                                }
                                ;
                                cpcpu_33 = getMEMINT((int) ((cpcpu_33 + 4)));

                            }

                        }
                        cpclump_30 = getMEMINT((int) ((cpclump_30 + 20)));

                    }

                }
                setMEMDOUBLE((int) (((cspec + ((int) (cisp) * 100)) + 40)), (double) ((ccost_22
                        + cconnection_23)));
                ctotalamount_19 = 0;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7385 */
                if ((((getMEMDOUBLE((int) (((cspec + ((int) (cisp) * 100))
                        + 48)))) < (getMEMDOUBLE((int) (((cspec + ((int) (cisp) * 100)) + 12))))) ? 1
                                : 0) != 0) {
                    ctotalamount_19 = (getMEMDOUBLE((int) (((cspec + ((int) (cisp) * 100)) + 12)))
                            / getMEMDOUBLE((int) (((cspec + ((int) (cisp) * 100)) + 48))));

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7387 */
                if ((((getMEMINT((int) (((cspec + ((int) (cisp) * 100))
                        + 56)))) < (getMEMINT((int) (((cspec + ((int) (cisp) * 100)) + 28))))) ? 1
                                : 0) != 0) {
                    ctotalamount_19 += ((double) (getMEMINT((int) (((cspec + ((int) (cisp) * 100)) + 28))))
                            / (double) (getMEMINT((int) (((cspec + ((int) (cisp) * 100)) + 56)))));

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7389 */
                if (ctotalamount_19 != 0) {
                    y66 = (int) (((cspec + ((int) (cisp) * 100)) + 40));
                    setMEMDOUBLE((int) (y66), (double) ((getMEMDOUBLE((int) (y66)) * ctotalamount_19)));

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7392 */
                if (getMEMDOUBLE((int) (((cspec + ((int) (cisp) * 100)) + 60))) != 0) {
                    setMEMINT((int) (((cspec + ((int) (cisp) * 100)) + 72)), (int) (1));

                }
                ;
                setMEMDOUBLE((int) (((cspec + ((int) (cisp) * 100)) + 48)), (double) (0));
                setMEMINT((int) (((cspec + ((int) (cisp) * 100)) + 56)), (int) (0));
                lab_marxan256: while ((getMEMINT((int) (((cspec + ((int) (cisp) * 100)) + 88)))) != 0) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 7398
                         */
                        cClearClump(cisp, getMEMINT((int) (((cspec + ((int) (cisp) * 100))
                                + 88))), (int) (cpu), (int) (cSM));
                        cpclump_30 = getMEMINT((int) (((cspec + ((int) (cisp) * 100)) + 88)));
                        setMEMINT((int) (((cspec + ((int) (cisp) * 100))
                                + 88)), (int) (getMEMINT((int) ((getMEMINT((int) (((cspec
                                        + ((int) (cisp) * 100)) + 88))) + 20)))));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 7401
                         */
                        cfree(cpclump_30);
                        setMEMINT((int) (((cspec + ((int) (cisp) * 100)) + 76)), (int) (0));

                    }

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7406 */
                cfree(cR_18);
                retval = cbadspecies_17;
                if (true) {
                    prevlevel();
                    return retval;
                }
                ;

            }
        }
        ;
        prevlevel();
        return 0;
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7414 */

    public static double cPartialPen4(int cisp, double camount, int cspec, int cclumptype) {
        nextlevel();
        if (true) {
            int label = 0;
            double retval = 0;

            {

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7416 */
                if ((((camount) >= (getMEMDOUBLE((int) (((cspec + ((int) (cisp) * 100)) + 80))))) ? 1
                        : 0) != 0) {
                    retval = camount;
                    if (true) {
                        prevlevel();
                        return retval;
                    }
                    ;

                } else {
                    lab_marxan257: {
                        switch ((int) (cclumptype))

                        {

                        case 0:
                            retval = 0.0;
                            if (true) {
                                prevlevel();
                                return retval;
                            }
                            ;

                        case 1:
                            retval = (camount / 2.0);
                            if (true) {
                                prevlevel();
                                return retval;
                            }
                            ;

                        case 2:
                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 7423
                             */
                            if (getMEMDOUBLE((int) (((cspec + ((int) (cisp) * 100)) + 80))) != 0) {
                                retval = ((camount
                                        / getMEMDOUBLE((int) (((cspec + ((int) (cisp) * 100)) + 80))))
                                        * camount);
                                if (true) {
                                    prevlevel();
                                    return retval;
                                }
                                ;

                            }
                            ;

                        default:
                            retval = 0.0;
                            if (true) {
                                prevlevel();
                                return retval;
                            }
                            ;

                        }

                    }

                }
                ;

            }
        }
        ;
        prevlevel();
        return 0;
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7431 */

    public static double cValueAdd(int cisp, int cipu, int cpuno, int cR, int cconnections, int cpu, int cSM, int cspec, int cclumptype) {
        nextlevel();
        if (true) {
            int label = 0;
            double retval = 0;
            int ciclumpid_12 = 0;
            int ciseparation_13 = 0;
            int coldoccs_14 = 0;
            int coccs_15 = 0;
            int ciClump_16 = 0;
            int ci_17 = 0;
            int ciArrayIndex_18 = 0;
            int cpnbr_19 = 0;
            int chead_20 = 0;
            int cplink_21 = 0;
            int cpclump_22 = 0;
            int csepclump_23 = 0;
            int cpsclump_24 = 0;
            int cppu_25 = 0;
            double camount_26 = 0;
            double coldamount_27 = 0;
            double cshortfall_28 = 0;
            double czshortfall_29 = 0;

            {
                ciclumpid_12 = 0;
                ciseparation_13 = 0;
                coldoccs_14 = 0;
                coccs_15 = 0;
                ciClump_16 = 0;
                ci_17 = 0;
                ciArrayIndex_18 = 0;
                cpnbr_19 = 0;
                chead_20 = (int) (0);
                cplink_21 = 0;
                cpclump_22 = 0;
                csepclump_23 = (int) (0);
                cpsclump_24 = 0;
                cppu_25 = 0;
                camount_26 = 0;
                coldamount_27 = 0.0;
                cshortfall_28 = 0;
                czshortfall_29 = 0;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7442 */
                if ((((getMEMINT((int) (((cconnections + ((int) (cipu) * 16)) + 12)))) > (0)) ? 1 : 0) != 0) {

                    {
                        cpnbr_19 = getMEMINT((int) (((cconnections + ((int) (cipu) * 16)) + 0)));
                        lab_marxan258: while ((cpnbr_19) != 0) {

                            {
                                ciClump_16 =
                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 7446
                                         */
                                        crtnClumpSpecAtPu((int) (cpu), (int) (cSM), getMEMINT((int) ((cpnbr_19
                                                + 0))), cisp);

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 7448
                                 */
                                if (ciClump_16 != 0) {

                                    {
                                        ciclumpid_12 = 1;

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 7455
                                         */
                                        cplink_21 = chead_20;
                                        lab_marxan259: for (; cplink_21 != 0;) {

                                            /*
                                             * file
                                             * E:/git/klab-ecology-component/etc/marxan/
                                             * marxan.c line 7453
                                             */
                                            if ((((getMEMINT((int) ((cplink_21 + 0)))) == (ciClump_16)) ? 1
                                                    : 0) != 0) {
                                                ciclumpid_12 = 0;

                                            }
                                            ;
                                            cplink_21 = getMEMINT((int) ((cplink_21 + 16)));

                                        }

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 7456
                                         */
                                        if (ciclumpid_12 != 0) {

                                            {
                                                cplink_21 = (int) (
                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 7458
                                                 */
                                                cmalloc(20));
                                                setMEMINT((int) ((cplink_21 + 0)), (int) (ciClump_16));

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 7462
                                                 */
                                                cpclump_22 = getMEMINT((int) (((cspec + ((int) (cisp) * 100))
                                                        + 88)));
                                                lab_marxan260: for (; (((getMEMINT((int) ((cplink_21
                                                        + 0)))) != (getMEMINT((int) ((cpclump_22 + 0))))) ? 1
                                                                : 0) != 0;) {
                                                    cpclump_22 = getMEMINT((int) ((cpclump_22 + 20)));

                                                }
                                                setMEMDOUBLE((int) ((cplink_21
                                                        + 4)), (double) (getMEMDOUBLE((int) ((cpclump_22
                                                                + 4)))));
                                                setMEMINT((int) ((cplink_21
                                                        + 12)), (int) (getMEMINT((int) ((cpclump_22 + 12)))));
                                                setMEMINT((int) ((cplink_21 + 16)), (int) (chead_20));
                                                chead_20 = cplink_21;

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 7468
                                                 */
                                                if (getMEMINT((int) (((cspec + ((int) (cisp) * 100))
                                                        + 68))) != 0) {

                                                    /*
                                                     * file
                                                     * E:/git/klab-ecology-component/etc/
                                                     * marxan/marxan.c line 7474
                                                     */
                                                    cppu_25 = getMEMINT((int) ((cpclump_22 + 16)));
                                                    lab_marxan261: for (; cppu_25 != 0;) {

                                                        {
                                                            cpsclump_24 = (int) (
                                                            /*
                                                             * file E:/git/klab-ecology-
                                                             * component/etc/marxan/marxan
                                                             * .c line 7470
                                                             */
                                                            cmalloc(24));
                                                            setMEMINT((int) ((cpsclump_24
                                                                    + 0)), (int) (getMEMINT((int) ((cppu_25
                                                                            + 0)))));
                                                            setMEMINT((int) ((cpsclump_24
                                                                    + 20)), (int) (csepclump_23));
                                                            csepclump_23 = cpsclump_24;

                                                        }
                                                        cppu_25 = getMEMINT((int) ((cppu_25 + 4)));

                                                    }

                                                }
                                                ;

                                            }

                                        }
                                        ;

                                    }

                                }
                                ;
                                cpnbr_19 = getMEMINT((int) ((cpnbr_19 + 12)));

                            }

                        }

                    }

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7482 */
                if (getMEMINT((int) (((cspec + ((int) (cisp) * 100)) + 68))) != 0) {

                    {
                        cpsclump_24 = (int) (
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 7483
                         */
                        cmalloc(24));
                        setMEMINT((int) ((cpsclump_24 + 0)), (int) (cipu));
                        setMEMINT((int) ((cpsclump_24 + 20)), (int) (csepclump_23));
                        csepclump_23 = cpsclump_24;

                    }

                }
                ;
                camount_26 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 7490
                         */
                        crtnAmountSpecAtPu((int) (cpu), (int) (cSM), cipu, cisp);
                coccs_15 = (int) ((((camount_26) > (0)) ? 1 : 0));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7498 */
                cplink_21 = chead_20;
                lab_marxan262: for (; cplink_21 != 0;) {

                    {
                        camount_26 += getMEMDOUBLE((int) ((cplink_21 + 4)));
                        coccs_15 += getMEMINT((int) ((cplink_21 + 12)));
                        coldamount_27 +=
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 7496
                                 */
                                cPartialPen4(cisp, getMEMDOUBLE((int) ((cplink_21
                                        + 4))), (int) (cspec), cclumptype);
                        coldoccs_14 += (int) ((getMEMINT((int) ((cplink_21 + 12))) * (((
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 7497
                         */
                        cPartialPen4(cisp, getMEMDOUBLE((int) ((cplink_21
                                + 4))), (int) (cspec), cclumptype)) > (0)) ? 1 : 0)));

                    }
                    cplink_21 = getMEMINT((int) ((cplink_21 + 16)));

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7502 */
                if (getMEMINT((int) (((cspec + ((int) (cisp) * 100)) + 68))) != 0) {

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7503 */
                    cpsclump_24 = csepclump_23;
                    lab_marxan263: for (; cpsclump_24 != 0;) {
                        setMEMDOUBLE((int) ((cpsclump_24 + 4)), (double) (camount_26));
                        cpsclump_24 = getMEMINT((int) ((cpsclump_24 + 20)));

                    }

                }
                ;
                camount_26 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 7505
                         */
                        cPartialPen4(cisp, camount_26, (int) (cspec), cclumptype);
                coccs_15 = (int) ((coccs_15 * (((camount_26) > (0)) ? 1 : 0)));
                camount_26 = (camount_26 - coldamount_27);
                coccs_15 = (coccs_15 - coldoccs_14);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7512 */
                if (getMEMINT((int) (((cspec + ((int) (cisp) * 100)) + 68))) != 0) {

                    {
                        ciseparation_13 =
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 7513
                                 */
                                marxan.cCountSeparation2(cisp, 0, csepclump_23, cpuno, (int) (cR), (int) (cpu), (int) (cSM), (int) (cspec), 1);
                        lab_marxan264: while ((csepclump_23) != 0) {

                            {
                                cpsclump_24 = csepclump_23;
                                csepclump_23 = getMEMINT((int) ((csepclump_23 + 20)));

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 7518
                                 */
                                cfree(cpsclump_24);

                            }

                        }

                    }

                }
                ;
                lab_marxan265: while ((chead_20) != 0) {

                    {
                        cplink_21 = chead_20;
                        chead_20 = getMEMINT((int) ((chead_20 + 16)));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 7527
                         */
                        cfree(cplink_21);

                    }

                }
                camount_26 = (getMEMDOUBLE((int) (((cspec + ((int) (cisp) * 100)) + 48))) + camount_26);
                cshortfall_28 = 0;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7537 */
                if (getMEMDOUBLE((int) (((cspec + ((int) (cisp) * 100)) + 12))) != 0) {
                    cshortfall_28 = ((((camount_26) >= (getMEMDOUBLE((int) (((cspec + ((int) (cisp) * 100))
                            + 12))))) ? 1 : 0) != 0
                                    ? 0
                                    : ((getMEMDOUBLE((int) (((cspec + ((int) (cisp) * 100)) + 12)))
                                            - camount_26)
                                            / getMEMDOUBLE((int) (((cspec + ((int) (cisp) * 100)) + 12)))));

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7539 */
                if (getMEMINT((int) (((cspec + ((int) (cisp) * 100)) + 28))) != 0) {

                    {
                        coccs_15 = (coccs_15 + getMEMINT((int) (((cspec + ((int) (cisp) * 100)) + 56))));
                        camount_26 = ((((coccs_15) >= (getMEMINT((int) (((cspec + ((int) (cisp) * 100))
                                + 28))))) ? 1 : 0) != 0
                                        ? 0
                                        : (((double) (getMEMINT((int) (((cspec + ((int) (cisp) * 100))
                                                + 28)))) - (double) (coccs_15))
                                                / (double) (getMEMINT((int) (((cspec + ((int) (cisp) * 100))
                                                        + 28))))));
                        cshortfall_28 += camount_26;

                    }

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7559 */
                ci_17 = 0;
                lab_marxan266: for (; (((ci_17) < (getMEMINT((int) (marxan.ciZoneCount)))) ? 1 : 0) != 0;) {

                    {
                        ciArrayIndex_18 = ((cisp * getMEMINT((int) (marxan.ciZoneCount))) + ci_17);
                        czshortfall_29 = 0;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 7551
                         */
                        if (getMEMDOUBLE((int) (((getMEMINT((int) (marxan.c_ZoneTarget))
                                + (ciArrayIndex_18 * 12)) + 0))) != 0) {

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 7552
                             */
                            if ((((getMEMDOUBLE((int) (((getMEMINT((int) (marxan.cZoneSpec))
                                    + (ciArrayIndex_18 * 12))
                                    + 0)))) < (getMEMDOUBLE((int) (((getMEMINT((int) (marxan.c_ZoneTarget))
                                            + (ciArrayIndex_18 * 12)) + 0))))) ? 1 : 0) != 0) {
                                czshortfall_29 += ((getMEMDOUBLE((int) (((getMEMINT((int) (marxan.c_ZoneTarget))
                                        + (ciArrayIndex_18 * 12)) + 0)))
                                        - getMEMDOUBLE((int) (((getMEMINT((int) (marxan.cZoneSpec))
                                                + (ciArrayIndex_18 * 12)) + 0))))
                                        / getMEMDOUBLE((int) (((getMEMINT((int) (marxan.c_ZoneTarget))
                                                + (ciArrayIndex_18 * 12)) + 0))));

                            }
                            ;

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 7554
                         */
                        if (getMEMINT((int) (((getMEMINT((int) (marxan.c_ZoneTarget))
                                + (ciArrayIndex_18 * 12)) + 8))) != 0) {

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 7555
                             */
                            if ((((getMEMINT((int) (((getMEMINT((int) (marxan.cZoneSpec))
                                    + (ciArrayIndex_18 * 12))
                                    + 8)))) < (getMEMINT((int) (((getMEMINT((int) (marxan.c_ZoneTarget))
                                            + (ciArrayIndex_18 * 12)) + 8))))) ? 1 : 0) != 0) {
                                czshortfall_29 += ((getMEMINT((int) (((getMEMINT((int) (marxan.c_ZoneTarget))
                                        + (ciArrayIndex_18 * 12)) + 8)))
                                        - getMEMINT((int) (((getMEMINT((int) (marxan.cZoneSpec))
                                                + (ciArrayIndex_18 * 12)) + 8))))
                                        / getMEMINT((int) (((getMEMINT((int) (marxan.c_ZoneTarget))
                                                + (ciArrayIndex_18 * 12)) + 8))));

                            }
                            ;

                        }
                        ;
                        cshortfall_28 += czshortfall_29;

                    }
                    ci_17++;

                }
                retval = (cshortfall_28 +
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7560 */
                        marxan.cSepPenalty2(ciseparation_13, getMEMINT((int) (((cspec + ((int) (cisp) * 100))
                                + 68)))));
                if (true) {
                    prevlevel();
                    return retval;
                }
                ;

            }
        }
        ;
        prevlevel();
        return 0;
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7567 */

    public static double cValueRem(int cipu, int cisp, int cspec, int cconnections, int cpu, int cSM, int cclumptype) {
        nextlevel();
        if (true) {
            int label = 0;
            double retval = 0;
            int cnewamount_10 = alloconstack(0);
            double camount_11 = 0;
            double cshortfall_12 = 0;
            double czshortfall_13 = 0;
            int cpclump_14 = 0;
            int cppu_15 = 0;
            int ciseparation_16 = alloconstack(0);
            int cnewocc_17 = alloconstack(0);
            int ci_18 = 0;
            int ciArrayIndex_19 = 0;

            {
                setMEMINT((int) (cnewamount_10), (int) (0));
                camount_11 = 0;
                cshortfall_12 = 0;
                czshortfall_13 = 0;
                cpclump_14 = 0;
                cppu_15 = 0;
                setMEMINT((int) (ciseparation_16), (int) (0));
                setMEMINT((int) (cnewocc_17), (int) (0));
                ci_18 = 0;
                ciArrayIndex_19 = 0;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7575 */
                cpclump_14 = getMEMINT((int) (((cspec + ((int) (cisp) * 100)) + 88)));
                lab_marxan267: for (; (((cpclump_14) != 0) ? ((((getMEMINT((int) ((cpclump_14 + 0)))) != (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7574 */
                crtnClumpSpecAtPu((int) (cpu), (int) (cSM), cipu, cisp))) ? 1 : 0)) : 0) != 0;) {
                    cpclump_14 = getMEMINT((int) ((cpclump_14 + 20)));

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7578 */
                cppu_15 = getMEMINT((int) ((cpclump_14 + 16)));
                lab_marxan268: for (; (((getMEMINT((int) ((cppu_15 + 0)))) != (cipu)) ? 1 : 0) != 0;) {
                    cppu_15 = getMEMINT((int) ((cppu_15 + 4)));

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7581 */
                if (getMEMINT((int) (((cspec + ((int) (cisp) * 100)) + 68))) != 0) {

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7581 */
                    cClumpCut(cisp, (int) (cpu), (int) (cspec), cpclump_14, cppu_15, (int) (cconnections), (int) (cSM), cnewamount_10, cnewocc_17, ciseparation_16, 1, cclumptype);

                } else {

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7583 */
                    cClumpCut(cisp, (int) (cpu), (int) (cspec), cpclump_14, cppu_15, (int) (cconnections), (int) (cSM), cnewamount_10, cnewocc_17, ciseparation_16, 0, cclumptype);

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7586 */
                if (getMEMDOUBLE((int) (((cspec + ((int) (cisp) * 100)) + 12))) != 0) {

                    {
                        camount_11 = ((getMEMDOUBLE((int) (((cspec + ((int) (cisp) * 100)) + 48)))
                                + getMEMDOUBLE((int) (cnewamount_10))) -
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 7587
                         */
                                cPartialPen4(cisp, getMEMDOUBLE((int) ((cpclump_14
                                        + 4))), (int) (cspec), cclumptype));
                        cshortfall_12 = ((((camount_11) > (getMEMDOUBLE((int) (((cspec + ((int) (cisp) * 100))
                                + 12))))) ? 1
                                        : 0) != 0
                                                ? 0
                                                : ((getMEMDOUBLE((int) (((cspec + ((int) (cisp) * 100))
                                                        + 12))) - camount_11)
                                                        / getMEMDOUBLE((int) (((cspec + ((int) (cisp) * 100))
                                                                + 12)))));

                    }

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7592 */
                if (getMEMINT((int) (((cspec + ((int) (cisp) * 100)) + 28))) != 0) {

                    {
                        camount_11 = ((getMEMINT((int) (((cspec + ((int) (cisp) * 100)) + 56)))
                                + getMEMINT((int) (cnewocc_17))) - (getMEMINT((int) ((cpclump_14 + 12))) * (((
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 7593
                         */
                        cPartialPen4(cisp, getMEMDOUBLE((int) ((cpclump_14
                                + 4))), (int) (cspec), cclumptype)) > (0)) ? 1 : 0)));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 7595
                         */
                        if ((((camount_11) < (getMEMINT((int) (((cspec + ((int) (cisp) * 100)) + 28))))) ? 1
                                : 0) != 0) {
                            cshortfall_12 += (((double) (getMEMINT((int) (((cspec + ((int) (cisp) * 100))
                                    + 28)))) - camount_11)
                                    / (double) (getMEMINT((int) (((cspec + ((int) (cisp) * 100)) + 28)))));

                        }
                        ;

                    }

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7612 */
                ci_18 = 0;
                lab_marxan269: for (; (((ci_18) < (getMEMINT((int) (marxan.ciZoneCount)))) ? 1 : 0) != 0;) {

                    {
                        ciArrayIndex_19 = ((cisp * getMEMINT((int) (marxan.ciZoneCount))) + ci_18);
                        czshortfall_13 = 0;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 7604
                         */
                        if (getMEMDOUBLE((int) (((getMEMINT((int) (marxan.c_ZoneTarget))
                                + (ciArrayIndex_19 * 12)) + 0))) != 0) {

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 7605
                             */
                            if ((((getMEMDOUBLE((int) (((getMEMINT((int) (marxan.cZoneSpec))
                                    + (ciArrayIndex_19 * 12))
                                    + 0)))) < (getMEMDOUBLE((int) (((getMEMINT((int) (marxan.c_ZoneTarget))
                                            + (ciArrayIndex_19 * 12)) + 0))))) ? 1 : 0) != 0) {
                                czshortfall_13 += ((getMEMDOUBLE((int) (((getMEMINT((int) (marxan.c_ZoneTarget))
                                        + (ciArrayIndex_19 * 12)) + 0)))
                                        - getMEMDOUBLE((int) (((getMEMINT((int) (marxan.cZoneSpec))
                                                + (ciArrayIndex_19 * 12)) + 0))))
                                        / getMEMDOUBLE((int) (((getMEMINT((int) (marxan.c_ZoneTarget))
                                                + (ciArrayIndex_19 * 12)) + 0))));

                            }
                            ;

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 7607
                         */
                        if (getMEMINT((int) (((getMEMINT((int) (marxan.c_ZoneTarget))
                                + (ciArrayIndex_19 * 12)) + 8))) != 0) {

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 7608
                             */
                            if ((((getMEMINT((int) (((getMEMINT((int) (marxan.cZoneSpec))
                                    + (ciArrayIndex_19 * 12))
                                    + 8)))) < (getMEMINT((int) (((getMEMINT((int) (marxan.c_ZoneTarget))
                                            + (ciArrayIndex_19 * 12)) + 8))))) ? 1 : 0) != 0) {
                                czshortfall_13 += ((getMEMINT((int) (((getMEMINT((int) (marxan.c_ZoneTarget))
                                        + (ciArrayIndex_19 * 12)) + 8)))
                                        - getMEMINT((int) (((getMEMINT((int) (marxan.cZoneSpec))
                                                + (ciArrayIndex_19 * 12)) + 8))))
                                        / getMEMINT((int) (((getMEMINT((int) (marxan.c_ZoneTarget))
                                                + (ciArrayIndex_19 * 12)) + 8))));

                            }
                            ;

                        }
                        ;
                        cshortfall_12 += czshortfall_13;

                    }
                    ci_18++;

                }
                retval = (cshortfall_12 +
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7614 */
                        marxan.cSepPenalty2(getMEMINT((int) (ciseparation_16)), getMEMINT((int) (((cspec
                                + ((int) (cisp) * 100)) + 68)))));
                if (true) {
                    prevlevel();
                    return retval;
                }
                ;

            }
        }
        ;
        prevlevel();
        return 0;
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7625 */

    public static double cNewPenalty4(int cipu, int cisp, int cpuno, int cspec, int cpu, int cSM, int cR, int cconnections, int cimode, int cclumptype) {
        nextlevel();
        if (true) {
            int label = 0;
            double retval = 0;
            double camount_13 = 0;

            {
                camount_13 = 0;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7629 */
                if ((((cimode) == (1)) ? 1 : 0) != 0) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 7631
                         */
                        if ((((getMEMDOUBLE((int) (((cspec + ((int) (cisp) * 100)) + 40)))) == (0)) ? 1
                                : 0) != 0) {
                            retval = 0;
                            if (true) {
                                prevlevel();
                                return retval;
                            }
                            ;

                        }
                        ;
                        camount_13 =
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 7632
                                 */
                                cValueAdd(cisp, cipu, cpuno, (int) (cR), (int) (cconnections), (int) (cpu), (int) (cSM), (int) (cspec), cclumptype);

                    }

                } else {

                    {
                        camount_13 =
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 7637
                                 */
                                cValueRem(cipu, cisp, (int) (cspec), (int) (cconnections), (int) (cpu), (int) (cSM), cclumptype);

                    }

                }
                ;
                retval = camount_13;
                if (true) {
                    prevlevel();
                    return retval;
                }
                ;

            }
        }
        ;
        prevlevel();
        return 0;
    }

    static int strmarxan440 = jtocstr("        %s \n\n   Marine Reserve Design with Zoning and Annealing\n\n");
    static int strmarxan441 = jtocstr("   Marxan with Zones coded by Matthew Watts\n");
    static int strmarxan442 = jtocstr("   Written by Ian Ball, Hugh Possingham and Matthew Watts\n\n");
    static int strmarxan443 = jtocstr("   Based on Marxan coded by Ian Ball, modified by Matthew Watts\n");
    static int strmarxan444 = jtocstr("   Written by Ian Ball and Hugh Possingham\n\n");
    static int strmarxan445 = jtocstr("%s\n%s\n%s\n\n");
    static int strmarxan446 = jtocstr("   Marxan website\n\n");
    static int strmarxan447 = jtocstr("%s\n\n");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7656 */

    public static void cShowStartupScreen() {
        nextlevel();
        if (true) {
            int label = 0;

            {
                startargs(marxan.csVersionString);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7657 */
                cprintf(strmarxan440, endargs());

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7658 */
                cprintf(strmarxan441, 0);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7659 */
                cprintf(strmarxan442, 0);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7660 */
                cprintf(strmarxan443, 0);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7661 */
                cprintf(strmarxan444, 0);
                startargs(marxan.csIanBallEmail);
                addarg(marxan.csHughPossinghamEmail);
                addarg(marxan.csMattWattsEmail);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7662 */
                cprintf(strmarxan445, endargs());

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7663 */
                cprintf(strmarxan446, 0);
                startargs(marxan.csMarxanWebSite);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7664 */
                cprintf(strmarxan447, endargs());

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan448 = jtocstr("\n              The End \n");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7673 */

    public static void cShowShutdownScreen() {
        nextlevel();
        if (true) {
            int label = 0;

            {

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7675 */
                if ((((getMEMINT((int) (marxan.ciVerbosity))) > (0)) ? 1 : 0) != 0) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 7676
                         */
                        cprintf(strmarxan137, 0);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 7677
                         */
                        marxan.cShowTimePassed();

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 7678
                         */
                        cprintf(strmarxan448, 0);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 7680
                         */
                        if (getMEMINT((int) (marxan.csavelog)) != 0) {

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 7680
                             */
                            cfprintf(getMEMINT((int) (marxan.cfsavelog)), strmarxan448, 0);

                        }
                        ;

                    }

                }
                ;

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan449 = jtocstr("stop_error.txt");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7687 */

    public static void cWriteStopErrorFile(int csMess) {
        nextlevel();
        if (true) {
            int label = 0;
            int cfsync_3 = 0;

            {
                cfsync_3 = 0;
                cfsync_3 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 7691
                         */
                        cfopen(strmarxan449, strmarxan198);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7692 */
                cfprintf(cfsync_3, (int) (csMess), 0);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7693 */
                cfclose(cfsync_3);

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan450 = jtocstr("Press return to exit.\n");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7697 */

    public static void cShowPauseExit() {
        nextlevel();
        if (true) {
            int label = 0;

            {

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7698 */
                cprintf(strmarxan450, 0);
                if (((((pincMEMINT((int) (((int) ((c_streamv + ((int) (0) * 48))) + 8)), -1))) >= (0)) ? 1
                        : 0) != 0) {
                    sincMEMINT((int) (((int) ((c_streamv + ((int) (0) * 48))) + 0)), +1);

                } else {
                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7699 */
                    c_fill((int) ((c_streamv + ((int) (0) * 48))));

                }

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan451 = jtocstr("sync%i");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7703 */

    public static void cWriteSlaveSyncFileRun(int ciSyncRun) {
        nextlevel();
        if (true) {
            int label = 0;
            int cfsync_3 = 0;
            int csSyncFileName_4 = 0;

            {
                cfsync_3 = 0;
                csSyncFileName_4 = calloca(80);
                startargs(ciSyncRun);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7707 */
                csprintf((int) (csSyncFileName_4), strmarxan451, endargs());
                cfsync_3 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 7709
                         */
                        cfopen((int) (csSyncFileName_4), strmarxan198);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7710 */
                cfprintf(cfsync_3, (int) (csSyncFileName_4), 0);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7711 */
                cfclose(cfsync_3);

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan452 = jtocstr("sync");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7715 */

    public static void cWriteSlaveSyncFile() {
        nextlevel();
        if (true) {
            int label = 0;
            int cfsync_2 = 0;

            {
                cfsync_2 = 0;
                cfsync_2 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 7718
                         */
                        cfopen(strmarxan452, strmarxan198);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7719 */
                cfprintf(cfsync_2, strmarxan452, 0);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7720 */
                cfclose(cfsync_2);

            }
        }
        ;
        prevlevel();
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7726 */

    public static void cSlaveExit() {
        nextlevel();
        if (true) {
            int label = 0;

            {

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7727 */
                cWriteSlaveSyncFile();

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan453 = jtocstr("Press return to continue.\n");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7731 */

    public static void cShowPauseProg() {
        nextlevel();
        if (true) {
            int label = 0;

            {

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7732 */
                cprintf(strmarxan453, 0);
                if (((((pincMEMINT((int) (((int) ((c_streamv + ((int) (0) * 48))) + 8)), -1))) >= (0)) ? 1
                        : 0) != 0) {
                    sincMEMINT((int) (((int) ((c_streamv + ((int) (0) * 48))) + 0)), +1);

                } else {
                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7733 */
                    c_fill((int) ((c_streamv + ((int) (0) * 48))));

                }

            }
        }
        ;
        prevlevel();
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7741 */

    public static void cSetVerbosity(int cverb) {
        nextlevel();
        if (true) {
            int label = 0;

            {
                setMEMINT((int) (marxan.ciVerbosity), (int) (cverb));

            }
        }
        ;
        prevlevel();
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7751 */

    public static void cShowErrorMessage(int csMess, int cddd) {
        nextlevel();
        if (true) {
            int label = 0;
            int cargs_4 = 0;

            {
                cargs_4 = 0;
                cargs_4 = (int) (cddd);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7756 */
                cvprintf((int) (csMess), cargs_4);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7758 */
                if (getMEMINT((int) (marxan.csavelog)) != 0) {

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7758 */
                    cvfprintf(getMEMINT((int) (marxan.cfsavelog)), (int) (csMess), cargs_4);

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7760 */
                clongjmp((int) (marxan.cjmpbuf), 1);

            }
        }
        ;
        prevlevel();
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7766 */

    public static void cShowWarningMessage(int csMess, int cddd) {
        nextlevel();
        if (true) {
            int label = 0;
            int cargs_4 = 0;

            {
                cargs_4 = 0;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7770 */
                if ((((getMEMINT((int) (marxan.ciVerbosity))) > (0)) ? 1 : 0) != 0) {

                    {
                        cargs_4 = (int) (cddd);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 7772
                         */
                        cvprintf((int) (csMess), cargs_4);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 7774
                         */
                        if (getMEMINT((int) (marxan.csavelog)) != 0) {

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 7774
                             */
                            cvfprintf(getMEMINT((int) (marxan.cfsavelog)), (int) (csMess), cargs_4);

                        }
                        ;

                    }

                }
                ;

            }
        }
        ;
        prevlevel();
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7783 */

    public static void cShowProg(int csMess, int cddd) {
        nextlevel();
        if (true) {
            int label = 0;
            int cargs_4 = 0;

            {
                cargs_4 = 0;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7787 */
                if ((((getMEMINT((int) (marxan.ciVerbosity))) > (0)) ? 1 : 0) != 0) {

                    {
                        cargs_4 = (int) (cddd);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 7789
                         */
                        cvprintf((int) (csMess), cargs_4);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 7791
                         */
                        if (getMEMINT((int) (marxan.csavelog)) != 0) {

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 7791
                             */
                            cvfprintf(getMEMINT((int) (marxan.cfsavelog)), (int) (csMess), cargs_4);

                        }
                        ;

                    }

                }
                ;

            }
        }
        ;
        prevlevel();
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7798 */

    public static void cStartDebugTraceFile() {
        nextlevel();
        if (true) {
            int label = 0;
            int cfdebugtrace_2 = 0;

            {
                cfdebugtrace_2 = 0;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7803 */
                if ((((getMEMINT((int) (marxan.ciVerbosity))) > (2)) ? 1 : 0) != 0) {

                    {
                        cfdebugtrace_2 =
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 7804
                                 */
                                cfopen((int) (marxan.csDebugTraceFileName), strmarxan198);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 7805
                         */
                        cfflush(cfdebugtrace_2);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 7806
                         */
                        cfclose(cfdebugtrace_2);

                    }

                }
                ;

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan454 = jtocstr("a");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7810 */

    public static void cAppendDebugTraceFile(int csMess, int cddd) {
        nextlevel();
        if (true) {
            int label = 0;
            int cfdebugtrace_4 = 0;

            {
                cfdebugtrace_4 = 0;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7814 */
                if ((((getMEMINT((int) (marxan.ciVerbosity))) > (2)) ? 1 : 0) != 0) {

                    {
                        cfdebugtrace_4 =
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 7815
                                 */
                                cfopen((int) (marxan.csDebugTraceFileName), strmarxan454);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 7816
                         */
                        cfprintf(cfdebugtrace_4, (int) (csMess), 0);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 7817
                         */
                        cfflush(cfdebugtrace_4);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 7818
                         */
                        cfclose(cfdebugtrace_4);

                    }

                }
                ;

            }
        }
        ;
        prevlevel();
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7824 */

    public static void cStartDebugFile(int csFileName, int csHeader, int cfnames) {
        nextlevel();
        if (true) {
            int label = 0;
            int cfdebugtrace_5 = 0;
            int cwritename_6 = 0;

            {
                cfdebugtrace_5 = 0;
                cwritename_6 = 0;
                cwritename_6 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7828 */
                ccalloc(((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7828 */
                cstrlen(getMEMINT((int) ((cfnames + 4)))) +
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7828 */
                        cstrlen((int) (csFileName))) + 2), 1));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7829 */
                cstrcpy(cwritename_6, getMEMINT((int) ((cfnames + 4))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7830 */
                cstrcat(cwritename_6, (int) (csFileName));
                cfdebugtrace_5 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 7831
                         */
                        cfopen(cwritename_6, strmarxan198);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7832 */
                cfree(cwritename_6);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7834 */
                cfprintf(cfdebugtrace_5, (int) (csHeader), 0);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7835 */
                cfflush(cfdebugtrace_5);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7836 */
                cfclose(cfdebugtrace_5);

            }
        }
        ;
        prevlevel();
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7840 */

    public static void cAppendDebugFile(int csFileName, int csLine, int cfnames) {
        nextlevel();
        if (true) {
            int label = 0;
            int cfdebugtrace_5 = 0;
            int cwritename_6 = 0;

            {
                cfdebugtrace_5 = 0;
                cwritename_6 = 0;
                cwritename_6 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7844 */
                ccalloc(((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7844 */
                cstrlen(getMEMINT((int) ((cfnames + 4)))) +
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7844 */
                        cstrlen((int) (csFileName))) + 2), 1));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7845 */
                cstrcpy(cwritename_6, getMEMINT((int) ((cfnames + 4))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7846 */
                cstrcat(cwritename_6, (int) (csFileName));
                cfdebugtrace_5 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 7847
                         */
                        cfopen(cwritename_6, strmarxan454);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7848 */
                cfree(cwritename_6);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7850 */
                cfprintf(cfdebugtrace_5, (int) (csLine), 0);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7851 */
                cfclose(cfdebugtrace_5);

            }
        }
        ;
        prevlevel();
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7857 */

    public static void cShowGenProg(int csMess, int cddd) {
        nextlevel();
        if (true) {
            int label = 0;
            int cargs_4 = 0;

            {
                cargs_4 = 0;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7861 */
                if ((((getMEMINT((int) (marxan.ciVerbosity))) > (1)) ? 1 : 0) != 0) {

                    {
                        cargs_4 = (int) (cddd);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 7863
                         */
                        cvprintf((int) (csMess), cargs_4);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 7865
                         */
                        if (getMEMINT((int) (marxan.csavelog)) != 0) {

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 7865
                             */
                            cvfprintf(getMEMINT((int) (marxan.cfsavelog)), (int) (csMess), cargs_4);

                        }
                        ;

                    }

                }
                ;

            }
        }
        ;
        prevlevel();
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7876 */

    public static void cShowGenProgInfo(int csMess, int cddd) {
        nextlevel();
        if (true) {
            int label = 0;
            int cargs_4 = 0;

            {
                cargs_4 = 0;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7880 */
                if ((((getMEMINT((int) (marxan.ciVerbosity))) > (5)) ? 1 : 0) != 0) {

                    {
                        cargs_4 = (int) (cddd);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 7882
                         */
                        cvprintf((int) (csMess), cargs_4);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 7884
                         */
                        if (getMEMINT((int) (marxan.csavelog)) != 0) {

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 7884
                             */
                            cvfprintf(getMEMINT((int) (marxan.cfsavelog)), (int) (csMess), cargs_4);

                        }
                        ;

                    }

                }
                ;

            }
        }
        ;
        prevlevel();
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7894 */

    public static void cShowDetProg(int csMess, int cddd) {
        nextlevel();
        if (true) {
            int label = 0;
            int cargs_4 = 0;

            {
                cargs_4 = 0;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7898 */
                if ((((getMEMINT((int) (marxan.ciVerbosity))) > (5)) ? 1 : 0) != 0) {

                    {
                        cargs_4 = (int) (cddd);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 7900
                         */
                        cvprintf((int) (csMess), cargs_4);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 7902
                         */
                        if (getMEMINT((int) (marxan.csavelog)) != 0) {

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 7902
                             */
                            cvfprintf(getMEMINT((int) (marxan.cfsavelog)), (int) (csMess), cargs_4);

                        }
                        ;

                    }

                }
                ;

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan455 = jtocstr("Time passed so far is ");
    static int strmarxan456 = jtocstr(" %i hour%c,%i min%c and %i secs \n");
    static int strmarxan457 = jtocstr(" %i min%c and %i secs \n");
    static int strmarxan458 = jtocstr("%i secs \n");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7911 */

    public static void cShowTimePassed() {
        nextlevel();
        if (true) {
            int label = 0;
            int citemp_2 = 0;
            int ciClock_3 = 0;
            double crTemp_4 = 0;

            {
                citemp_2 = 0;
                ciClock_3 = 0;
                crTemp_4 = 0;
                ciClock_3 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 7922
                         */
                        cclock();
                crTemp_4 = (ciClock_3 / getMEMDOUBLE((int) (marxan.crClocksPerSec)));
                citemp_2 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7938 */
                cfloor(crTemp_4));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7945 */
                cprintf(strmarxan455, 0);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7947 */
                if ((((citemp_2) >= ((60 * 60))) ? 1 : 0) != 0) {
                    startargs((citemp_2 / 3600));
                    addarg((((((citemp_2 / 3600)) == (1)) ? 1 : 0) != 0 ? 32 : 115));
                    addarg(((citemp_2 / 60) % 60));
                    addarg((((((citemp_2 / 60)) == (1)) ? 1 : 0) != 0 ? 32 : 115));
                    addarg((citemp_2 % 60));

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7949 */
                    cprintf(strmarxan456, endargs());

                } else {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 7953
                         */
                        if ((((citemp_2) >= (60)) ? 1 : 0) != 0) {
                            startargs((citemp_2 / 60));
                            addarg((((((citemp_2 / 60)) == (1)) ? 1 : 0) != 0 ? 32 : 115));
                            addarg((citemp_2 % 60));

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 7953
                             */
                            cprintf(strmarxan457, endargs());

                        } else {
                            startargs(citemp_2);

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 7955
                             */
                            cprintf(strmarxan458, endargs());

                        }
                        ;

                    }

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7959 */
                if (getMEMINT((int) (marxan.csavelog)) != 0) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 7960
                         */
                        cfprintf(getMEMINT((int) (marxan.cfsavelog)), strmarxan455, 0);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 7962
                         */
                        if ((((citemp_2) >= ((60 * 60))) ? 1 : 0) != 0) {
                            startargs((citemp_2 / 3600));
                            addarg((((((citemp_2 / 3600)) == (1)) ? 1 : 0) != 0 ? 32 : 115));
                            addarg(((citemp_2 / 60) % 60));
                            addarg((((((citemp_2 / 60)) == (1)) ? 1 : 0) != 0 ? 32 : 115));
                            addarg((citemp_2 % 60));

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 7964
                             */
                            cfprintf(getMEMINT((int) (marxan.cfsavelog)), strmarxan456, endargs());

                        } else {

                            {

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 7968
                                 */
                                if ((((citemp_2) >= (60)) ? 1 : 0) != 0) {
                                    startargs((citemp_2 / 60));
                                    addarg((((((citemp_2 / 60)) == (1)) ? 1 : 0) != 0 ? 32 : 115));
                                    addarg((citemp_2 % 60));

                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 7968
                                     */
                                    cfprintf(getMEMINT((int) (marxan.cfsavelog)), strmarxan457, endargs());

                                } else {
                                    startargs(citemp_2);

                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 7970
                                     */
                                    cfprintf(getMEMINT((int) (marxan.cfsavelog)), strmarxan458, endargs());

                                }
                                ;

                            }

                        }
                        ;

                    }

                }
                ;

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan459 = jtocstr("Error: Cannot save to log file %s \n");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7983 */

    public static void cSetLogFile(int cmy_savelog, int cmy_savelogname) {
        nextlevel();
        if (true) {
            int label = 0;

            {

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7985 */
                if (getMEMINT((int) (marxan.csavelog)) != 0) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 7986
                         */
                        cfclose(getMEMINT((int) (marxan.cfsavelog)));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 7987
                         */
                        cfree(getMEMINT((int) (marxan.csavelogname)));

                    }

                }
                ;
                setMEMINT((int) (marxan.csavelog), (int) (cmy_savelog));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 7993 */
                if (getMEMINT((int) (marxan.csavelog)) != 0) {

                    {
                        setMEMINT((int) (marxan.csavelogname), (int) (
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 7994
                         */
                        ccalloc((
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 7994
                         */
                        cstrlen(cmy_savelogname) + 1), 1)));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 7995
                         */
                        cstrcpy(getMEMINT((int) (marxan.csavelogname)), cmy_savelogname);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 7998
                         */
                        if (((((setMEMINT((int) (marxan.cfsavelog), (int) (
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 7997
                         */
                        cfopen(getMEMINT((int) (marxan.csavelogname)), strmarxan198))))) == ((int) (0))) ? 1
                                : 0) != 0) {

                            {

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 7999
                                 */
                                cfree(getMEMINT((int) (marxan.csavelogname)));
                                setMEMINT((int) (marxan.csavelog), (int) (0));
                                startargs(getMEMINT((int) (marxan.csavelogname)));

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 8001
                                 */
                                cShowErrorMessage((int) (strmarxan459), endargs());

                            }

                        }
                        ;
                        startargs(marxan.csVersionString);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8004
                         */
                        cfprintf(getMEMINT((int) (marxan.cfsavelog)), strmarxan440, endargs());

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8005
                         */
                        cfprintf(getMEMINT((int) (marxan.cfsavelog)), strmarxan441, 0);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8006
                         */
                        cfprintf(getMEMINT((int) (marxan.cfsavelog)), strmarxan442, 0);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8007
                         */
                        cfprintf(getMEMINT((int) (marxan.cfsavelog)), strmarxan443, 0);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8008
                         */
                        cfprintf(getMEMINT((int) (marxan.cfsavelog)), strmarxan444, 0);
                        startargs(marxan.csIanBallEmail);
                        addarg(marxan.csHughPossinghamEmail);
                        addarg(marxan.csMattWattsEmail);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8009
                         */
                        cfprintf(getMEMINT((int) (marxan.cfsavelog)), strmarxan445, endargs());

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8010
                         */
                        cfprintf(getMEMINT((int) (marxan.cfsavelog)), strmarxan446, 0);
                        startargs(marxan.csMarxanWebSite);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8011
                         */
                        cfprintf(getMEMINT((int) (marxan.cfsavelog)), strmarxan447, endargs());

                    }

                }
                ;

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan460 = jtocstr("ERROR: variable %s has been defined twice in data file %s.\n");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8032 */

    public static int cGetVarNamePU(int cvarlist, int cnumvars, int cCostNames, int ciCostCount, int csVarName, int chead, int cfname) {
        nextlevel();
        if (true) {
            int label = 0;
            int retval = 0;
            int ci_10 = 0;
            int cfoundit_11 = 0;
            int ctemp_12 = 0;
            int cnewlink_13 = 0;

            {
                ci_10 = 0;
                cfoundit_11 = 0;
                ctemp_12 = 0;
                cnewlink_13 = (int) (0);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8040 */
                ci_10 = 0;
                lab_marxan270: for (; ((((((ci_10) < (cnumvars)) ? 1 : 0)) != 0)
                        ? ((((cfoundit_11) == (0)) ? 1 : 0)) : 0) != 0;) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8039
                         */
                        if ((((
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8038
                         */
                        cstrcmp(getMEMINT((int) ((cvarlist + (ci_10 * 4)))), csVarName)) == (0)) ? 1
                                : 0) != 0) {
                            cfoundit_11++;

                        }
                        ;

                    }
                    ci_10++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8045 */
                ci_10 = 0;
                lab_marxan271: for (; ((((((ci_10) < (ciCostCount)) ? 1 : 0)) != 0)
                        ? ((((cfoundit_11) == (0)) ? 1 : 0)) : 0) != 0;) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8044
                         */
                        if ((((
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8043
                         */
                        cstrcmp((int) (((cCostNames + ((int) (ci_10) * 254)) + 4)), csVarName)) == (0)) ? 1
                                : 0) != 0) {
                            cfoundit_11++;

                        }
                        ;

                    }
                    ci_10++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8050 */
                if (chead != 0) {

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8054 */
                    ctemp_12 = chead;
                    lab_marxan272: for (; ctemp_12 != 0;) {

                        {

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 8053
                             */
                            if ((((
                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 8052
                             */
                            cstrcmp(getMEMINT((int) ((ctemp_12 + 0))), csVarName)) == (0)) ? 1 : 0) != 0) {
                                startargs(csVarName);
                                addarg(cfname);

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 8053
                                 */
                                cShowErrorMessage((int) (strmarxan460), endargs());

                            }
                            ;

                        }
                        ctemp_12 = getMEMINT((int) ((ctemp_12 + 4)));

                    }

                }
                ;
                cnewlink_13 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8056 */
                cmalloc(8));
                setMEMINT((int) ((cnewlink_13 + 4)), (int) ((int) (0)));
                setMEMINT((int) ((cnewlink_13 + 0)), (int) ((int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8058 */
                ccalloc((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8058 */
                cstrlen(csVarName) + 1), 1))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8059 */
                cstrcpy(getMEMINT((int) ((cnewlink_13 + 0))), csVarName);
                retval = cnewlink_13;
                if (true) {
                    prevlevel();
                    return retval;
                }
                ;

            }
        }
        ;
        prevlevel();
        return 0;
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8065 */

    public static int cGetVarName(int cvarlist, int cnumvars, int csVarName, int chead, int cfname) {
        nextlevel();
        if (true) {
            int label = 0;
            int retval = 0;
            int ci_8 = 0;
            int cfoundit_9 = 0;
            int ctemp_10 = 0;
            int cnewlink_11 = 0;

            {
                ci_8 = 0;
                cfoundit_9 = 0;
                ctemp_10 = 0;
                cnewlink_11 = (int) (0);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8073 */
                ci_8 = 0;
                lab_marxan273: for (; ((((((ci_8) < (cnumvars)) ? 1 : 0)) != 0)
                        ? ((((cfoundit_9) == (0)) ? 1 : 0)) : 0) != 0;) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8072
                         */
                        if ((((
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8071
                         */
                        cstrcmp(getMEMINT((int) ((cvarlist + (ci_8 * 4)))), csVarName)) == (0)) ? 1
                                : 0) != 0) {
                            cfoundit_9++;

                        }
                        ;

                    }
                    ci_8++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8078 */
                if (chead != 0) {

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8082 */
                    ctemp_10 = chead;
                    lab_marxan274: for (; ctemp_10 != 0;) {

                        {

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 8081
                             */
                            if ((((
                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 8080
                             */
                            cstrcmp(getMEMINT((int) ((ctemp_10 + 0))), csVarName)) == (0)) ? 1 : 0) != 0) {
                                startargs(csVarName);
                                addarg(cfname);

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 8081
                                 */
                                cShowErrorMessage((int) (strmarxan460), endargs());

                            }
                            ;

                        }
                        ctemp_10 = getMEMINT((int) ((ctemp_10 + 4)));

                    }

                }
                ;
                cnewlink_11 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8084 */
                cmalloc(8));
                setMEMINT((int) ((cnewlink_11 + 4)), (int) ((int) (0)));
                setMEMINT((int) ((cnewlink_11 + 0)), (int) ((int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8086 */
                ccalloc((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8086 */
                cstrlen(csVarName) + 1), 1))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8087 */
                cstrcpy(getMEMINT((int) ((cnewlink_11 + 0))), csVarName);
                retval = cnewlink_11;
                if (true) {
                    prevlevel();
                    return retval;
                }
                ;

            }
        }
        ;
        prevlevel();
        return 0;
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8092 */

    public static int cCheckVarName(int cvarlist, int cnumvars, int csVarName) {
        nextlevel();
        if (true) {
            int label = 0;
            int retval = 0;
            int ci_6 = 0;
            int cfoundit_7 = 0;

            {
                ci_6 = 0;
                cfoundit_7 = 0;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8099 */
                ci_6 = 0;
                lab_marxan275: for (; (((ci_6) < (cnumvars)) ? 1 : 0) != 0;) {

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8097 */
                    if ((((
                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8096 */
                    cstrcmp(getMEMINT((int) ((cvarlist + (ci_6 * 4)))), csVarName)) == (0)) ? 1 : 0) != 0) {
                        cfoundit_7++;

                    }
                    ;
                    ++ci_6;

                }
                retval = cfoundit_7;
                if (true) {
                    prevlevel();
                    return retval;
                }
                ;

            }
        }
        ;
        prevlevel();
        return 0;
    }

    static int strmarxan461 = jtocstr("name.dat");
    static int strmarxan462 = jtocstr("file %s not found. Terminating Program\n");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8105 */

    public static int cReadNameList(int cpuno, int cpu, int cindir) {
        nextlevel();
        if (true) {
            int label = 0;
            int retval = 0;
            int cfp_6 = 0;
            int ci_7 = 0;
            int citemp_8 = alloconstack(0);
            int creadname_9 = 0;
            int chead_10 = 0;
            int cnewlink_11 = 0;

            {
                cfp_6 = 0;
                ci_7 = 0;
                setMEMINT((int) (citemp_8), (int) (0));
                creadname_9 = calloca(1000);
                chead_10 = (int) (0);
                cnewlink_11 = 0;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8112 */
                if ((((getMEMBYTE((int) ((cindir + ((int) (0) * 1))))) != (48)) ? 1 : 0) != 0) {

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8112 */
                    cstrcpy((int) (creadname_9), (int) (cindir));

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8113 */
                cstrcat((int) (creadname_9), strmarxan461);
                cfp_6 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8114
                         */
                        cfopen((int) (creadname_9), strmarxan191);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8116 */
                if ((((cfp_6) == ((int) (0))) ? 1 : 0) != 0) {
                    startargs(creadname_9);

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8116 */
                    cShowErrorMessage((int) (strmarxan462), endargs());

                }
                ;
                lab_marxan276: while (true) {
                    startargs(citemp_8);
                    ;
                    if ((((
                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8118 */
                    cfscanf(cfp_6, strmarxan194, endargs())) == (1)) ? 1 : 0) == 0) {
                        break lab_marxan276;
                    }

                    {
                        cnewlink_11 = (int) (
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8120
                         */
                        cmalloc(8));
                        setMEMINT((int) ((cnewlink_11 + 0)), (int) (getMEMINT((int) (citemp_8))));
                        setMEMINT((int) ((cnewlink_11 + 4)), (int) (chead_10));
                        chead_10 = cnewlink_11;
                        ci_7++;

                    }

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8126 */
                cfclose(cfp_6);
                setMEMINT((int) (cpuno), (int) (ci_7));
                setMEMINT((int) (cpu), (int) ((int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8130 */
                ccalloc(getMEMINT((int) (cpuno)), 64))));
                ci_7 = 0;
                lab_marxan277: while ((chead_10) != 0) {

                    {
                        setMEMINT((int) (((getMEMINT((int) (cpu)) + (ci_7 * 64))
                                + 0)), (int) (getMEMINT((int) ((chead_10 + 0)))));
                        setMEMINT((int) (((getMEMINT((int) (cpu)) + (ci_7 * 64)) + 32)), (int) (0));
                        setMEMINT((int) (((getMEMINT((int) (cpu)) + (ci_7 * 64)) + 36)), (int) (0));
                        ci_7++;
                        cnewlink_11 = chead_10;
                        chead_10 = getMEMINT((int) ((chead_10 + 4)));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8141
                         */
                        cfree(cnewlink_11);

                    }

                }
                retval = ci_7;
                if (true) {
                    prevlevel();
                    return retval;
                }
                ;

            }
        }
        ;
        prevlevel();
        return 0;
    }

    static int strmarxan463 = jtocstr(" %lf");
    static int strmarxan464 = jtocstr(" %d");
    static int strmarxan465 = jtocstr(" %ld");
    static int strmarxan466 = jtocstr(" ,");
    static int strmarxan467 = jtocstr("Invalid parameter type request %d: \n");
    static int strmarxan468 = jtocstr("WARNING: found bad value for variable %s. Value ignored\n");
    static int strmarxan469 = jtocstr("Unable to find %s in input file.\n");
    static int strmarxan470 = jtocstr("WARNING variable: %s appears more than once in the input file. Final value taken\n");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8157 */

    public static void crdsvar(int cinfile, int cvarname, int caddress, int cparmtype, int ccrit, int cpresent) {
        nextlevel();
        if (true) {
            int label = 0;
            int cfoundit_8 = 0;
            int cnamelen_9 = 0;
            int ccheck1_10 = 0;
            int ccheck2_11 = 0;
            int cgotit_12 = 0;
            int cbuffer_13 = 0;

            {
                cfoundit_8 = 0;
                cnamelen_9 = 0;
                ccheck1_10 = 0;
                ccheck2_11 = 0;
                cgotit_12 = 0;
                cbuffer_13 = calloca(1000);
                cmemcpy((int) cbuffer_13, (int) ((int) (jtocstr("\0", 1000))), 1000);
                cnamelen_9 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8161
                         */
                        cstrlen((int) (cvarname));
                cfoundit_8 = 0;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8164 */
                crewind(cinfile);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8165 */
                cfgets((int) (cbuffer_13), 999, cinfile);

                lab_marxan278: do {

                    {
                        ccheck1_10 = 0;
                        ccheck2_11 = 0;
                        lab_marxan279: while (((((getMEMBYTE((int) ((cbuffer_13
                                + ((int) (ccheck1_10++) * 1))))) == (getMEMBYTE((int) ((cvarname
                                        + ((int) (ccheck2_11++) * 1)))))) ? 1 : 0)) != 0) {

                        }

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8173
                         */
                        if ((((ccheck1_10) > (cnamelen_9)) ? 1 : 0) != 0) {

                            {
                                cfoundit_8++;
                                lab_marxan280: {
                                    switch ((int) (cparmtype))

                                    {

                                    case 3:
                                        startargs((int) (caddress));
                                        cgotit_12 =
                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 8178
                                                 */
                                                csscanf((cbuffer_13
                                                        + ((int) (ccheck1_10) * 1)), strmarxan463, endargs());
                                        if (true) {
                                            break lab_marxan280;
                                        }
                                        ;

                                    case 4:
                                        startargs((int) (caddress));
                                        cgotit_12 =
                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 8181
                                                 */
                                                csscanf((cbuffer_13
                                                        + ((int) (ccheck1_10) * 1)), strmarxan463, endargs());
                                        if (true) {
                                            break lab_marxan280;
                                        }
                                        ;

                                    case 1:
                                        startargs((int) (caddress));
                                        cgotit_12 =
                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 8184
                                                 */
                                                csscanf((cbuffer_13
                                                        + ((int) (ccheck1_10) * 1)), strmarxan464, endargs());
                                        if (true) {
                                            break lab_marxan280;
                                        }
                                        ;

                                    case 2:
                                        startargs((int) (caddress));
                                        cgotit_12 =
                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 8187
                                                 */
                                                csscanf((cbuffer_13
                                                        + ((int) (ccheck1_10) * 1)), strmarxan465, endargs());
                                        if (true) {
                                            break lab_marxan280;
                                        }
                                        ;

                                    case 5:
                                        ccheck1_10 +=
                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 8194
                                                 */
                                                cstrspn((cbuffer_13
                                                        + ((int) (ccheck1_10) * 1)), strmarxan466);

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 8196
                                         */
                                        ccheck2_11 = (
                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 8195
                                         */
                                        cstrlen((cbuffer_13 + ((int) (ccheck1_10) * 1))) - 1);
                                        lab_marxan281: for (; ((((getMEMINT((int) (((c_ctype + (1 * 4))
                                                + ((int) (getMEMBYTE((int) ((cbuffer_13
                                                        + ((int) ((ccheck1_10 + ccheck2_11)) * 1))))) * 4))))
                                                & 32)) != (0)) ? 1 : 0) != 0;) {
                                            ccheck2_11--;

                                        }

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 8198
                                         */
                                        if ((((
                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 8197
                                         */
                                        cstrlen((cbuffer_13 + ((int) (ccheck1_10) * 1)))) < (2)) ? 1
                                                : 0) != 0) {
                                            setMEMBYTE((int) ((cbuffer_13
                                                    + ((int) (ccheck1_10) * 1))), (byte) ((byte) (0)));

                                        }
                                        ;
                                        setMEMBYTE((int) ((cbuffer_13
                                                + ((int) (((ccheck1_10 + ccheck2_11) + 1))
                                                        * 1))), (byte) ((byte) (0)));

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 8200
                                         */
                                        cstrcpy((int) (caddress), (cbuffer_13 + ((int) (ccheck1_10) * 1)));
                                        cgotit_12 = 1;
                                        if (true) {
                                            break lab_marxan280;
                                        }
                                        ;

                                    default:
                                        startargs(cparmtype);

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 8204
                                         */
                                        cShowErrorMessage((int) (strmarxan467), endargs());

                                    }

                                }

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 8209
                                 */
                                if (((cgotit_12 == 0) ? 1 : 0) != 0) {

                                    {
                                        startargs(cvarname);

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 8210
                                         */
                                        cShowWarningMessage((int) (strmarxan468), endargs());
                                        cfoundit_8--;

                                    }

                                }
                                ;

                            }

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8215
                         */
                        cfgets((int) (cbuffer_13), 999, cinfile);

                    }

                } while (((((getMEMINT((int) ((cinfile + 20))) & 8) != 0 ? 1 : 0) == 0) ? 1 : 0) != 0);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8219 */
                if (((cfoundit_8 == 0) ? 1 : 0) != 0) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8221
                         */
                        if (ccrit != 0) {
                            startargs(cvarname);

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 8221
                             */
                            cShowErrorMessage((int) (strmarxan469), endargs());

                        }
                        ;

                    }

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8225 */
                if ((((cfoundit_8) > (1)) ? 1 : 0) != 0) {

                    {
                        startargs(cvarname);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8226
                         */
                        cShowWarningMessage((int) (strmarxan470), endargs());

                    }

                }
                ;
                setMEMINT((int) (cpresent), (int) (cfoundit_8));
                if (true) {
                    prevlevel();
                    return;
                }
                ;

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan471 = jtocstr("temp");
    static int strmarxan472 = jtocstr("input file %s not found\nAborting Program.\n\n");
    static int strmarxan473 = jtocstr("VERSION");
    static int strmarxan474 = jtocstr("PROP");
    static int strmarxan475 = jtocstr("RANDSEED");
    static int strmarxan476 = jtocstr("NUMITNS");
    static int strmarxan477 = jtocstr("STARTTEMP");
    static int strmarxan478 = jtocstr("COOLFAC");
    static int strmarxan479 = jtocstr("NUMTEMP");
    static int strmarxan480 = jtocstr("NUMREPS");
    static int strmarxan481 = jtocstr("COSTTHRESH");
    static int strmarxan482 = jtocstr("THRESHPEN1");
    static int strmarxan483 = jtocstr("THRESHPEN2");
    static int strmarxan484 = jtocstr("SCENNAME");
    static int strmarxan485 = jtocstr("SAVERUN");
    static int strmarxan486 = jtocstr("SAVEBEST");
    static int strmarxan487 = jtocstr("SAVESUMMARY");
    static int strmarxan488 = jtocstr("SAVESCEN");
    static int strmarxan489 = jtocstr("SAVETARGMET");
    static int strmarxan490 = jtocstr("SAVESUMSOLN");
    static int strmarxan491 = jtocstr("SAVESPECIESDATA");
    static int strmarxan492 = jtocstr("SAVEPENALTY");
    static int strmarxan493 = jtocstr("SAVETOTALAREAS");
    static int strmarxan494 = jtocstr("SAVESOLUTIONSMATRIX");
    static int strmarxan495 = jtocstr("SOLUTIONSMATRIXHEADERS");
    static int strmarxan496 = jtocstr("SAVELOG");
    static int strmarxan497 = jtocstr("SAVESNAPSTEPS");
    static int strmarxan498 = jtocstr("SAVESNAPCHANGES");
    static int strmarxan499 = jtocstr("SAVESNAPFREQUENCY");
    static int strmarxan500 = jtocstr("SAVEANNEALINGTRACE");
    static int strmarxan501 = jtocstr("ANNEALINGTRACEROWS");
    static int strmarxan502 = jtocstr("SUPPRESSANNEALZONES");
    static int strmarxan503 = jtocstr("SAVEITIMPTRACE");
    static int strmarxan504 = jtocstr("SAVEZONECONNECTIVITYSUM");
    static int strmarxan505 = jtocstr("ITIMPTRACEROWS");
    static int strmarxan506 = jtocstr("INPUTDIR");
    static int strmarxan507 = jtocstr("/");
    static int strmarxan508 = jtocstr("OUTPUTDIR");
    static int strmarxan509 = jtocstr("PU.dat");
    static int strmarxan510 = jtocstr("PUNAME");
    static int strmarxan511 = jtocstr("spec.dat");
    static int strmarxan512 = jtocstr("SPECNAME");
    static int strmarxan513 = jtocstr("FEATNAME");
    static int strmarxan514 = jtocstr("PENALTYNAME");
    static int strmarxan515 = jtocstr("puvspr2.dat");
    static int strmarxan516 = jtocstr("PUVSPRNAME");
    static int strmarxan517 = jtocstr("MATRIXSPORDERNAME");
    static int strmarxan518 = jtocstr("BOUNDNAME");
    static int strmarxan519 = jtocstr("CONNECTIONNAME");
    static int strmarxan520 = jtocstr("BLOCKDEFNAME");
    static int strmarxan521 = jtocstr("ZONESNAME");
    static int strmarxan522 = jtocstr("COSTSNAME");
    static int strmarxan523 = jtocstr("ZONECONTRIBNAME");
    static int strmarxan524 = jtocstr("ZONECONTRIB2NAME");
    static int strmarxan525 = jtocstr("ZONECONTRIB3NAME");
    static int strmarxan526 = jtocstr("ZONETARGETNAME");
    static int strmarxan527 = jtocstr("ZONETARGET2NAME");
    static int strmarxan528 = jtocstr("ZONECOSTNAME");
    static int strmarxan529 = jtocstr("PULOCKNAME");
    static int strmarxan530 = jtocstr("PUZONENAME");
    static int strmarxan531 = jtocstr("ZONEBOUNDCOSTNAME");
    static int strmarxan532 = jtocstr("ZONECONNECTIONCOSTNAME");
    static int strmarxan533 = jtocstr("RUNMODE");
    static int strmarxan534 = jtocstr("MISSLEVEL");
    static int strmarxan535 = jtocstr("HEURTYPE");
    static int strmarxan536 = jtocstr("CLUMPTYPE");
    static int strmarxan537 = jtocstr("ITIMPTYPE");
    static int strmarxan538 = jtocstr("VERBOSITY");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8244 */

    public static void cSetOptions(int cprop, int canneal, int ciseed, int crepeats, int csavename, int cfnames, int cfilename, int crunopts, int cmisslevel, int cheurotype, int cverbose, int cclumptype, int citimptype, int ccostthresh, int ctpf1, int ctpf2) {
        nextlevel();
        if (true) {
            int label = 0;
            int cfp_18 = 0;
            int cversion_19 = alloconstack(0);
            int cstemp_20 = 0;
            int cpresent_21 = alloconstack(0);
            int ciFEATNAMEpresent_22 = alloconstack(0);
            int ciSPECNAMEpresent_23 = alloconstack(0);

            {
                cfp_18 = 0;
                setMEMINT((int) (cversion_19), (int) (0));
                cstemp_20 = calloca(1000);
                setMEMINT((int) (cpresent_21), (int) (0));
                setMEMINT((int) (ciFEATNAMEpresent_22), (int) (0));
                setMEMINT((int) (ciSPECNAMEpresent_23), (int) (0));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8249 */
                cSetVerbosity(1);
                setMEMDOUBLE((int) (cversion_19), (double) (0.1));
                setMEMDOUBLE((int) (cprop), (double) (0));
                setMEMINT((int) ((canneal + 44)), (int) (1));
                setMEMINT((int) ((canneal + 4)), (int) (0));
                setMEMDOUBLE((int) ((canneal + 12)), (double) (1));
                setMEMDOUBLE((int) ((canneal + 20)), (double) (0));
                setMEMINT((int) ((canneal + 0)), (int) (1));
                setMEMINT((int) (ciseed), (int) ((-(1))));
                setMEMDOUBLE((int) (ccostthresh), (double) (0));
                setMEMDOUBLE((int) (ctpf1), (double) (0));
                setMEMDOUBLE((int) (ctpf2), (double) (0));
                setMEMINT((int) (crepeats), (int) (0));
                setMEMINT((int) ((cfnames + 88)), (int) (0));
                setMEMINT((int) ((cfnames + 84)), (int) (0));
                setMEMINT((int) ((cfnames + 92)), (int) (0));
                setMEMINT((int) ((cfnames + 96)), (int) (0));
                setMEMINT((int) ((cfnames + 100)), (int) (0));
                setMEMINT((int) ((cfnames + 104)), (int) (0));
                setMEMINT((int) ((cfnames + 124)), (int) (0));
                setMEMINT((int) ((cfnames + 128)), (int) (0));
                setMEMINT((int) ((cfnames + 132)), (int) (0));
                setMEMINT((int) ((cfnames + 136)), (int) (1));
                setMEMINT((int) ((cfnames + 140)), (int) (0));
                setMEMINT((int) ((cfnames + 144)), (int) (0));
                setMEMINT((int) ((cfnames + 148)), (int) (0));
                setMEMINT((int) ((cfnames + 156)), (int) (0));
                setMEMINT((int) ((cfnames + 152)), (int) (0));
                setMEMINT((int) ((cfnames + 160)), (int) (0));
                setMEMINT((int) ((cfnames + 164)), (int) (0));
                setMEMINT((int) ((cfnames + 108)), (int) (0));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8281 */
                cstrcpy((int) (csavename), strmarxan471);
                setMEMDOUBLE((int) (cmisslevel), (double) (1));
                setMEMINT((int) (cheurotype), (int) (1));
                setMEMINT((int) (cclumptype), (int) (0));
                setMEMINT((int) (cverbose), (int) (1));
                cfp_18 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8288
                         */
                        cfopen((int) (cfilename), strmarxan191);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8290 */
                if ((((cfp_18) == ((int) (0))) ? 1 : 0) != 0) {
                    startargs(cfilename);

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8290 */
                    cShowErrorMessage((int) (strmarxan472), endargs());

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8292 */
                crdsvar(cfp_18, (int) (strmarxan473), cversion_19, 4, 0, cpresent_21);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8293 */
                crdsvar(cfp_18, (int) (strmarxan474), cprop, 4, 0, cpresent_21);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8294 */
                crdsvar(cfp_18, (int) (strmarxan475), ciseed, 1, 0, cpresent_21);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8297 */
                crdsvar(cfp_18, (int) (strmarxan476), (canneal + 4), 1, 0, cpresent_21);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8298 */
                crdsvar(cfp_18, (int) (strmarxan477), (canneal + 12), 4, 0, cpresent_21);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8299 */
                crdsvar(cfp_18, (int) (strmarxan478), (canneal + 20), 4, 0, cpresent_21);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8300 */
                crdsvar(cfp_18, (int) (strmarxan479), (canneal + 0), 1, 0, cpresent_21);
                setMEMINT((int) ((canneal + 44)), (int) (1));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8304 */
                if ((((getMEMINT((int) ((canneal + 4)))) < (1)) ? 1 : 0) != 0) {
                    setMEMINT((int) ((canneal + 44)), (int) (0));

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8306 */
                if ((((getMEMDOUBLE((int) ((canneal + 12)))) < (0)) ? 1 : 0) != 0) {
                    setMEMINT((int) ((canneal
                            + 44)), (int) (((int) ((-(getMEMDOUBLE((int) ((canneal + 12)))))) + 1)));

                }
                ;
                startargs(ciseed);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8307 */
                cfscanf(cfp_18, strmarxan234, endargs());

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8310 */
                crdsvar(cfp_18, (int) (strmarxan480), crepeats, 1, 0, cpresent_21);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8311 */
                crdsvar(cfp_18, (int) (strmarxan481), ccostthresh, 4, 0, cpresent_21);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8312 */
                crdsvar(cfp_18, (int) (strmarxan482), ctpf1, 4, 0, cpresent_21);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8313 */
                crdsvar(cfp_18, (int) (strmarxan483), ctpf2, 4, 0, cpresent_21);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8316 */
                crdsvar(cfp_18, (int) (strmarxan484), (int) (csavename), 5, 0, cpresent_21);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8318 */
                crdsvar(cfp_18, (int) (strmarxan485), (cfnames + 88), 1, 0, cpresent_21);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8319 */
                crdsvar(cfp_18, (int) (strmarxan486), (cfnames + 84), 1, 0, cpresent_21);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8320 */
                crdsvar(cfp_18, (int) (strmarxan487), (cfnames + 92), 1, 0, cpresent_21);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8321 */
                crdsvar(cfp_18, (int) (strmarxan488), (cfnames + 96), 1, 0, cpresent_21);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8322 */
                crdsvar(cfp_18, (int) (strmarxan489), (cfnames + 100), 1, 0, cpresent_21);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8323 */
                crdsvar(cfp_18, (int) (strmarxan490), (cfnames + 104), 1, 0, cpresent_21);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8324 */
                crdsvar(cfp_18, (int) (strmarxan491), (cfnames + 160), 1, 0, cpresent_21);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8325 */
                crdsvar(cfp_18, (int) (strmarxan492), (cfnames + 124), 1, 0, cpresent_21);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8326 */
                crdsvar(cfp_18, (int) (strmarxan493), (cfnames + 128), 1, 0, cpresent_21);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8327 */
                crdsvar(cfp_18, (int) (strmarxan494), (cfnames + 132), 1, 0, cpresent_21);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8328 */
                crdsvar(cfp_18, (int) (strmarxan495), (cfnames + 136), 1, 0, cpresent_21);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8329 */
                crdsvar(cfp_18, (int) (strmarxan496), (cfnames + 108), 1, 0, cpresent_21);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8330 */
                crdsvar(cfp_18, (int) (strmarxan497), (cfnames + 112), 1, 0, cpresent_21);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8331 */
                crdsvar(cfp_18, (int) (strmarxan498), (cfnames + 116), 1, 0, cpresent_21);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8332 */
                crdsvar(cfp_18, (int) (strmarxan499), (cfnames + 120), 1, 0, cpresent_21);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8333 */
                crdsvar(cfp_18, (int) (strmarxan500), (cfnames + 140), 1, 0, cpresent_21);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8334 */
                crdsvar(cfp_18, (int) (strmarxan501), (cfnames + 144), 1, 0, cpresent_21);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8335 */
                crdsvar(cfp_18, (int) (strmarxan502), (cfnames + 148), 1, 0, cpresent_21);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8336 */
                crdsvar(cfp_18, (int) (strmarxan503), (cfnames + 152), 1, 0, cpresent_21);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8337 */
                crdsvar(cfp_18, (int) (strmarxan504), (cfnames + 164), 1, 0, cpresent_21);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8338 */
                crdsvar(cfp_18, (int) (strmarxan505), (cfnames + 156), 1, 0, cpresent_21);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8340 */
                if (((getMEMINT((int) ((cfnames + 120))) == 0) ? 1 : 0) != 0) {
                    setMEMINT((int) ((cfnames + 120)), (int) (1));

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8343 */
                crdsvar(cfp_18, (int) (strmarxan506), (int) (cstemp_20), 5, 1, cpresent_21);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8345 */
                if (((((((getMEMBYTE((int) ((cstemp_20 + ((int) ((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8344 */
                cstrlen((int) (cstemp_20)) - 1)) * 1))))) != (47)) ? 1 : 0)) != 0)
                        ? ((((getMEMBYTE((int) ((cstemp_20 + ((int) ((
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8344
                         */
                        cstrlen((int) (cstemp_20)) - 1)) * 1))))) != (92)) ? 1 : 0)) : 0) != 0) {

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8345 */
                    cstrcat((int) (cstemp_20), strmarxan507);

                }
                ;
                setMEMINT((int) ((cfnames + 0)), (int) ((int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8346 */
                ccalloc((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8346 */
                cstrlen((int) (cstemp_20)) + 1), 1))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8347 */
                cstrcpy(getMEMINT((int) ((cfnames + 0))), (int) (cstemp_20));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8349 */
                crdsvar(cfp_18, (int) (strmarxan508), (int) (cstemp_20), 5, 1, cpresent_21);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8351 */
                if (((((((getMEMBYTE((int) ((cstemp_20 + ((int) ((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8350 */
                cstrlen((int) (cstemp_20)) - 1)) * 1))))) != (47)) ? 1 : 0)) != 0)
                        ? ((((getMEMBYTE((int) ((cstemp_20 + ((int) ((
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8350
                         */
                        cstrlen((int) (cstemp_20)) - 1)) * 1))))) != (92)) ? 1 : 0)) : 0) != 0) {

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8351 */
                    cstrcat((int) (cstemp_20), strmarxan507);

                }
                ;
                setMEMINT((int) ((cfnames + 4)), (int) ((int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8352 */
                ccalloc((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8352 */
                cstrlen((int) (cstemp_20)) + 1), 1))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8353 */
                cstrcpy(getMEMINT((int) ((cfnames + 4))), (int) (cstemp_20));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8355 */
                cstrcpy((int) (cstemp_20), strmarxan509);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8356 */
                crdsvar(cfp_18, (int) (strmarxan510), (int) (cstemp_20), 5, 1, cpresent_21);
                setMEMINT((int) ((cfnames + 12)), (int) ((int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8357 */
                ccalloc((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8357 */
                cstrlen((int) (cstemp_20)) + 1), 1))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8358 */
                cstrcpy(getMEMINT((int) ((cfnames + 12))), (int) (cstemp_20));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8360 */
                cstrcpy((int) (cstemp_20), strmarxan511);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8361 */
                crdsvar(cfp_18, (int) (strmarxan512), (int) (cstemp_20), 5, 0, ciSPECNAMEpresent_23);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8363 */
                if ((((getMEMINT((int) (ciSPECNAMEpresent_23))) == (0)) ? 1 : 0) != 0) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8364
                         */
                        crdsvar(cfp_18, (int) (strmarxan513), (int) (cstemp_20), 5, 0, ciFEATNAMEpresent_22);

                    }

                }
                ;
                setMEMINT((int) ((cfnames + 8)), (int) ((int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8368 */
                ccalloc((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8368 */
                cstrlen((int) (cstemp_20)) + 1), 1))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8369 */
                cstrcpy(getMEMINT((int) ((cfnames + 8))), (int) (cstemp_20));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8371 */
                cstrcpy((int) (cstemp_20), strmarxan8);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8372 */
                crdsvar(cfp_18, (int) (strmarxan514), (int) (cstemp_20), 5, 0, cpresent_21);
                setMEMINT((int) ((cfnames + 76)), (int) ((int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8373 */
                ccalloc((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8373 */
                cstrlen((int) (cstemp_20)) + 1), 1))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8374 */
                cstrcpy(getMEMINT((int) ((cfnames + 76))), (int) (cstemp_20));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8376 */
                cstrcpy((int) (cstemp_20), strmarxan515);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8377 */
                crdsvar(cfp_18, (int) (strmarxan516), (int) (cstemp_20), 5, 1, cpresent_21);
                setMEMINT((int) ((cfnames + 16)), (int) ((int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8378 */
                ccalloc((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8378 */
                cstrlen((int) (cstemp_20)) + 1), 1))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8379 */
                cstrcpy(getMEMINT((int) ((cfnames + 16))), (int) (cstemp_20));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8381 */
                cstrcpy((int) (cstemp_20), strmarxan8);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8382 */
                crdsvar(cfp_18, (int) (strmarxan517), (int) (cstemp_20), 5, 0, cpresent_21);
                setMEMINT((int) ((cfnames + 20)), (int) ((int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8383 */
                ccalloc((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8383 */
                cstrlen((int) (cstemp_20)) + 1), 1))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8384 */
                cstrcpy(getMEMINT((int) ((cfnames + 20))), (int) (cstemp_20));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8386 */
                cstrcpy((int) (cstemp_20), strmarxan8);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8387 */
                crdsvar(cfp_18, (int) (strmarxan518), (int) (cstemp_20), 5, 0, cpresent_21);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8389 */
                if ((((getMEMINT((int) (cpresent_21))) == (0)) ? 1 : 0) != 0) {

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8389 */
                    crdsvar(cfp_18, (int) (strmarxan519), (int) (cstemp_20), 5, 0, cpresent_21);

                }
                ;
                setMEMINT((int) ((cfnames + 24)), (int) ((int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8390 */
                ccalloc((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8390 */
                cstrlen((int) (cstemp_20)) + 1), 1))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8391 */
                cstrcpy(getMEMINT((int) ((cfnames + 24))), (int) (cstemp_20));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8393 */
                cstrcpy((int) (cstemp_20), strmarxan8);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8394 */
                crdsvar(cfp_18, (int) (strmarxan520), (int) (cstemp_20), 5, 0, cpresent_21);
                setMEMINT((int) ((cfnames + 28)), (int) ((int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8395 */
                ccalloc((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8395 */
                cstrlen((int) (cstemp_20)) + 1), 1))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8396 */
                cstrcpy(getMEMINT((int) ((cfnames + 28))), (int) (cstemp_20));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8398 */
                cstrcpy((int) (cstemp_20), strmarxan8);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8399 */
                crdsvar(cfp_18, (int) (strmarxan521), (int) (cstemp_20), 5, 0, cpresent_21);
                setMEMINT((int) ((cfnames + 32)), (int) ((int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8400 */
                ccalloc((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8400 */
                cstrlen((int) (cstemp_20)) + 1), 1))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8401 */
                cstrcpy(getMEMINT((int) ((cfnames + 32))), (int) (cstemp_20));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8403 */
                cstrcpy((int) (cstemp_20), strmarxan8);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8404 */
                crdsvar(cfp_18, (int) (strmarxan522), (int) (cstemp_20), 5, 0, cpresent_21);
                setMEMINT((int) ((cfnames + 36)), (int) ((int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8405 */
                ccalloc((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8405 */
                cstrlen((int) (cstemp_20)) + 1), 1))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8406 */
                cstrcpy(getMEMINT((int) ((cfnames + 36))), (int) (cstemp_20));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8408 */
                cstrcpy((int) (cstemp_20), strmarxan8);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8409 */
                crdsvar(cfp_18, (int) (strmarxan523), (int) (cstemp_20), 5, 0, cpresent_21);
                setMEMINT((int) ((cfnames + 40)), (int) ((int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8410 */
                ccalloc((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8410 */
                cstrlen((int) (cstemp_20)) + 1), 1))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8411 */
                cstrcpy(getMEMINT((int) ((cfnames + 40))), (int) (cstemp_20));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8413 */
                cstrcpy((int) (cstemp_20), strmarxan8);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8414 */
                crdsvar(cfp_18, (int) (strmarxan524), (int) (cstemp_20), 5, 0, cpresent_21);
                setMEMINT((int) ((cfnames + 44)), (int) ((int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8415 */
                ccalloc((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8415 */
                cstrlen((int) (cstemp_20)) + 1), 1))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8416 */
                cstrcpy(getMEMINT((int) ((cfnames + 44))), (int) (cstemp_20));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8418 */
                cstrcpy((int) (cstemp_20), strmarxan8);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8419 */
                crdsvar(cfp_18, (int) (strmarxan525), (int) (cstemp_20), 5, 0, cpresent_21);
                setMEMINT((int) ((cfnames + 48)), (int) ((int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8420 */
                ccalloc((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8420 */
                cstrlen((int) (cstemp_20)) + 1), 1))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8421 */
                cstrcpy(getMEMINT((int) ((cfnames + 48))), (int) (cstemp_20));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8423 */
                cstrcpy((int) (cstemp_20), strmarxan8);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8424 */
                crdsvar(cfp_18, (int) (strmarxan526), (int) (cstemp_20), 5, 0, cpresent_21);
                setMEMINT((int) ((cfnames + 52)), (int) ((int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8425 */
                ccalloc((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8425 */
                cstrlen((int) (cstemp_20)) + 1), 1))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8426 */
                cstrcpy(getMEMINT((int) ((cfnames + 52))), (int) (cstemp_20));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8428 */
                cstrcpy((int) (cstemp_20), strmarxan8);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8429 */
                crdsvar(cfp_18, (int) (strmarxan527), (int) (cstemp_20), 5, 0, cpresent_21);
                setMEMINT((int) ((cfnames + 56)), (int) ((int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8430 */
                ccalloc((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8430 */
                cstrlen((int) (cstemp_20)) + 1), 1))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8431 */
                cstrcpy(getMEMINT((int) ((cfnames + 56))), (int) (cstemp_20));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8433 */
                cstrcpy((int) (cstemp_20), strmarxan8);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8434 */
                crdsvar(cfp_18, (int) (strmarxan528), (int) (cstemp_20), 5, 0, cpresent_21);
                setMEMINT((int) ((cfnames + 60)), (int) ((int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8435 */
                ccalloc((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8435 */
                cstrlen((int) (cstemp_20)) + 1), 1))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8436 */
                cstrcpy(getMEMINT((int) ((cfnames + 60))), (int) (cstemp_20));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8438 */
                cstrcpy((int) (cstemp_20), strmarxan8);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8439 */
                crdsvar(cfp_18, (int) (strmarxan529), (int) (cstemp_20), 5, 0, cpresent_21);
                setMEMINT((int) ((cfnames + 64)), (int) ((int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8440 */
                ccalloc((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8440 */
                cstrlen((int) (cstemp_20)) + 1), 1))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8441 */
                cstrcpy(getMEMINT((int) ((cfnames + 64))), (int) (cstemp_20));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8443 */
                cstrcpy((int) (cstemp_20), strmarxan8);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8444 */
                crdsvar(cfp_18, (int) (strmarxan530), (int) (cstemp_20), 5, 0, cpresent_21);
                setMEMINT((int) ((cfnames + 68)), (int) ((int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8445 */
                ccalloc((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8445 */
                cstrlen((int) (cstemp_20)) + 1), 1))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8446 */
                cstrcpy(getMEMINT((int) ((cfnames + 68))), (int) (cstemp_20));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8448 */
                cstrcpy((int) (cstemp_20), strmarxan8);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8449 */
                crdsvar(cfp_18, (int) (strmarxan531), (int) (cstemp_20), 5, 0, cpresent_21);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8451 */
                if ((((getMEMINT((int) (cpresent_21))) == (0)) ? 1 : 0) != 0) {

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8451 */
                    crdsvar(cfp_18, (int) (strmarxan532), (int) (cstemp_20), 5, 0, cpresent_21);

                }
                ;
                setMEMINT((int) ((cfnames + 72)), (int) ((int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8452 */
                ccalloc((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8452 */
                cstrlen((int) (cstemp_20)) + 1), 1))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8453 */
                cstrcpy(getMEMINT((int) ((cfnames + 72))), (int) (cstemp_20));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8456 */
                crdsvar(cfp_18, (int) (strmarxan533), crunopts, 1, 1, cpresent_21);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8457 */
                crdsvar(cfp_18, (int) (strmarxan534), cmisslevel, 4, 0, cpresent_21);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8458 */
                crdsvar(cfp_18, (int) (strmarxan535), cheurotype, 1, 0, cpresent_21);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8459 */
                crdsvar(cfp_18, (int) (strmarxan536), cclumptype, 1, 0, cpresent_21);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8460 */
                crdsvar(cfp_18, (int) (strmarxan537), citimptype, 1, 0, cpresent_21);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8461 */
                crdsvar(cfp_18, (int) (strmarxan538), cverbose, 1, 0, cpresent_21);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8463 */
                if ((((getMEMBYTE((int) ((getMEMINT((int) ((cfnames + 4))) + (0 * 1))))) != (48)) ? 1
                        : 0) != 0) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8464
                         */
                        cstrcpy((int) (cstemp_20), getMEMINT((int) ((cfnames + 4))));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8465
                         */
                        cstrcat((int) (cstemp_20), (int) (csavename));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8466
                         */
                        cstrcpy((int) (csavename), (int) (cstemp_20));

                    }

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8468 */
                cfclose(cfp_18);

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan539 = jtocstr("cost.dat");
    static int strmarxan540 = jtocstr("File %s not found. All P.U.s set to cost of 1\n");
    static int strmarxan541 = jtocstr("%d %lf");
    static int strmarxan542 = jtocstr("Invalid planning unit number %d \n");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8473 */

    public static int cReadPUCosts(int cpuno, int cpu, int cPULookup, int cverbose, int cindir) {
        nextlevel();
        if (true) {
            int label = 0;
            int retval = 0;
            int cfp_8 = 0;
            int ci_9 = 0;
            int cn_10 = alloconstack(0);
            int cftemp_11 = alloconstack(0);
            int creadname_12 = 0;
            int y67 = 0;

            {
                cfp_8 = 0;
                ci_9 = 0;
                setMEMINT((int) (cn_10), (int) (0));
                setMEMINT((int) (cftemp_11), (int) (0));
                creadname_12 = calloca(1000);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8480 */
                if ((((getMEMBYTE((int) ((cindir + ((int) (0) * 1))))) != (48)) ? 1 : 0) != 0) {

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8480 */
                    cstrcpy((int) (creadname_12), (int) (cindir));

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8481 */
                cstrcat((int) (creadname_12), strmarxan539);
                cfp_8 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8483
                         */
                        cfopen((int) (creadname_12), strmarxan191);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8485 */
                if ((((cfp_8) == ((int) (0))) ? 1 : 0) != 0) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8487
                         */
                        if ((((cverbose) > (1)) ? 1 : 0) != 0) {
                            startargs(creadname_12);

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 8487
                             */
                            cShowWarningMessage((int) (strmarxan540), endargs());

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8489
                         */
                        ci_9 = 0;
                        lab_marxan282: for (; (((ci_9) < (cpuno)) ? 1 : 0) != 0;) {
                            setMEMDOUBLE((int) (((cpu + ((int) (ci_9) * 64)) + 24)), (double) (1));
                            ci_9++;

                        }
                        retval = 0;
                        if (true) {
                            prevlevel();
                            return retval;
                        }
                        ;

                    }

                }
                ;
                ci_9 = 0;
                lab_marxan283: while (true) {
                    startargs(cn_10);
                    addarg(cftemp_11);
                    ;
                    if ((((
                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8495 */
                    cfscanf(cfp_8, strmarxan541, endargs())) == (2)) ? 1 : 0) == 0) {
                        break lab_marxan283;
                    }

                    {
                        setMEMINT((int) (cn_10), (int) (
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8497
                         */
                        cFastPUIDtoPUINDEX(cpuno, getMEMINT((int) (cn_10)), (int) (cPULookup))));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8499
                         */
                        if (((((((getMEMINT((int) (cn_10))) < (0)) ? 1 : 0)) != 0) ? 1
                                : ((((getMEMINT((int) (cn_10))) >= (cpuno)) ? 1 : 0))) != 0) {
                            startargs(getMEMINT((int) (cn_10)));

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 8499
                             */
                            cShowErrorMessage((int) (strmarxan542), endargs());

                        }
                        ;
                        y67 = (int) (((cpu + ((int) (getMEMINT((int) (cn_10))) * 64)) + 24));
                        setMEMDOUBLE((int) (y67), (double) ((getMEMDOUBLE((int) (y67))
                                + getMEMDOUBLE((int) (cftemp_11)))));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8502
                         */
                        if ((((getMEMDOUBLE((int) (cftemp_11))) == (0)) ? 1 : 0) != 0) {
                            setMEMDOUBLE((int) (((cpu + ((int) (getMEMINT((int) (cn_10))) * 64))
                                    + 24)), (double) (getMEMDOUBLE((int) (marxan.cdelta))));

                        }
                        ;
                        ci_9++;

                    }

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8505 */
                cfclose(cfp_8);
                retval = ci_9;
                if (true) {
                    prevlevel();
                    return retval;
                }
                ;

            }
        }
        ;
        prevlevel();
        return 0;
    }

    static int strmarxan543 = jtocstr("species.dat");
    static int strmarxan544 = jtocstr("Species file %s has not been found.\nAborting Program.");
    static int strmarxan545 = jtocstr("%d %d %lf %lf %lf %lf %s");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8511 */

    public static int cReadSpeciesData(int cspno, int cspec, int caggexist, int csepexist, int cindir) {
        nextlevel();
        if (true) {
            int label = 0;
            int retval = 0;
            int cfp_8 = 0;
            int ci_9 = alloconstack(0);
            int cn_10 = 0;
            int chead_11 = 0;
            int cnewlink_12 = 0;
            int cspectemp_13 = 0;
            int creadname_14 = 0;
            int cspeciesname_15 = 0;

            {
                cfp_8 = 0;
                setMEMINT((int) (ci_9), (int) (0));
                cn_10 = 0;
                chead_11 = (int) (0);
                cnewlink_12 = 0;
                cspectemp_13 = calloca(100);
                creadname_14 = calloca(1000);
                cspeciesname_15 = calloca(1000);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8520 */
                if ((((getMEMBYTE((int) ((cindir + ((int) (0) * 1))))) != (48)) ? 1 : 0) != 0) {

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8520 */
                    cstrcpy((int) (creadname_14), (int) (cindir));

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8521 */
                cstrcat((int) (creadname_14), strmarxan543);
                cfp_8 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8523
                         */
                        cfopen((int) (creadname_14), strmarxan191);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8525 */
                if ((((cfp_8) == ((int) (0))) ? 1 : 0) != 0) {
                    startargs(creadname_14);

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8525 */
                    cShowErrorMessage((int) (strmarxan544), endargs());

                }
                ;
                lab_marxan284: while (true) {
                    startargs((cspectemp_13 + 0));
                    addarg(ci_9);
                    addarg((cspectemp_13 + 12));
                    addarg((cspectemp_13 + 32));
                    addarg((cspectemp_13 + 80));
                    addarg((cspectemp_13 + 60));
                    addarg(cspeciesname_15);
                    ;
                    if ((((
                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8529 */
                    cfscanf(cfp_8, strmarxan545, endargs())) == (7)) ? 1 : 0) == 0) {
                        break lab_marxan284;
                    }

                    {
                        cnewlink_12 = (int) (
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8531
                         */
                        cmalloc(104));
                        setMEMINT((int) (((cnewlink_12 + 0)
                                + 0)), (int) (getMEMINT((int) ((cspectemp_13 + 0)))));
                        setMEMDOUBLE((int) (((cnewlink_12 + 0)
                                + 12)), (double) (getMEMDOUBLE((int) ((cspectemp_13 + 12)))));
                        setMEMDOUBLE((int) (((cnewlink_12 + 0)
                                + 32)), (double) (getMEMDOUBLE((int) ((cspectemp_13 + 32)))));
                        setMEMDOUBLE((int) (((cnewlink_12 + 0)
                                + 80)), (double) (getMEMDOUBLE((int) ((cspectemp_13 + 80)))));
                        setMEMDOUBLE((int) (((cnewlink_12 + 0)
                                + 60)), (double) (getMEMDOUBLE((int) ((cspectemp_13 + 60)))));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8538
                         */
                        if (getMEMDOUBLE((int) ((cspectemp_13 + 80))) != 0) {
                            setMEMINT((int) (caggexist), (int) (1));

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8540
                         */
                        if (getMEMDOUBLE((int) ((cspectemp_13 + 60))) != 0) {

                            {
                                setMEMINT((int) (csepexist), (int) (1));
                                setMEMINT((int) (((cnewlink_12 + 0) + 72)), (int) (1));

                            }

                        }
                        ;
                        setMEMINT((int) (((cnewlink_12 + 0) + 8)), (int) ((int) (
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8544
                         */
                        ccalloc((
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8544
                         */
                        cstrlen((int) (cspeciesname_15)) + 1), 1))));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8545
                         */
                        cstrcpy(getMEMINT((int) (((cnewlink_12 + 0) + 8))), (int) (cspeciesname_15));
                        cn_10++;
                        setMEMINT((int) ((cnewlink_12 + 100)), (int) (chead_11));
                        chead_11 = cnewlink_12;

                    }

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8550 */
                cfclose(cfp_8);
                setMEMINT((int) (cspno), (int) (cn_10));
                setMEMINT((int) (cspec), (int) ((int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8554 */
                ccalloc(getMEMINT((int) (cspno)), 100))));
                cn_10 = 0;
                lab_marxan285: while ((chead_11) != 0) {

                    {
                        setMEMINT((int) (((getMEMINT((int) (cspec)) + (cn_10 * 100))
                                + 0)), (int) (getMEMINT((int) (((chead_11 + 0) + 0)))));
                        setMEMDOUBLE((int) (((getMEMINT((int) (cspec)) + (cn_10 * 100))
                                + 12)), (double) (getMEMDOUBLE((int) (((chead_11 + 0) + 12)))));
                        setMEMDOUBLE((int) (((getMEMINT((int) (cspec)) + (cn_10 * 100))
                                + 32)), (double) (getMEMDOUBLE((int) (((chead_11 + 0) + 32)))));
                        setMEMDOUBLE((int) (((getMEMINT((int) (cspec)) + (cn_10 * 100))
                                + 80)), (double) (getMEMDOUBLE((int) (((chead_11 + 0) + 80)))));
                        setMEMDOUBLE((int) (((getMEMINT((int) (cspec)) + (cn_10 * 100))
                                + 60)), (double) (getMEMDOUBLE((int) (((chead_11 + 0) + 60)))));
                        setMEMINT((int) (((getMEMINT((int) (cspec)) + (cn_10 * 100))
                                + 72)), (int) (getMEMINT((int) (((chead_11 + 0) + 72)))));
                        setMEMINT((int) (((getMEMINT((int) (cspec)) + (cn_10 * 100)) + 8)), (int) ((int) (
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8565
                         */
                        ccalloc((
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8565
                         */
                        cstrlen(getMEMINT((int) (((chead_11 + 0) + 8)))) + 1), 1))));
                        setMEMINT((int) (((getMEMINT((int) (cspec)) + (cn_10 * 100)) + 92)), (int) (0));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8567
                         */
                        cstrcpy(getMEMINT((int) (((getMEMINT((int) (cspec)) + (cn_10 * 100))
                                + 8))), getMEMINT((int) (((chead_11 + 0) + 8))));
                        setMEMINT((int) (((getMEMINT((int) (cspec)) + (cn_10 * 100)) + 28)), (int) (0));
                        cn_10++;
                        cnewlink_12 = chead_11;
                        chead_11 = getMEMINT((int) ((chead_11 + 100)));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8572
                         */
                        cfree(getMEMINT((int) (((cnewlink_12 + 0) + 8))));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8573
                         */
                        cfree(cnewlink_12);

                    }

                }
                retval = cn_10;
                if (true) {
                    prevlevel();
                    return retval;
                }
                ;

            }
        }
        ;
        prevlevel();
        return 0;
    }

    static int strmarxan546 = jtocstr("pustat.dat");
    static int strmarxan547 = jtocstr("No PU Status file \n");
    static int strmarxan548 = jtocstr("%d %d");
    static int strmarxan549 = jtocstr("planning unit id out of bounds %d \n");
    static int strmarxan550 = jtocstr("Reserve Status:");
    static int strmarxan551 = jtocstr(" initial reserve %i.");
    static int strmarxan552 = jtocstr(" iremovable  %i.");
    static int strmarxan553 = jtocstr(" Not available %i.");
    static int strmarxan554 = jtocstr("There were %i planning units duplicated");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8586 */

    public static int cReadPUFile(int cpuno, int cpu, int cPULookup, int cverbose, int cindir) {
        nextlevel();
        if (true) {
            int label = 0;
            int retval = 0;
            int cfp_8 = 0;
            int ci_9 = 0;
            int cn_10 = alloconstack(0);
            int cireserved_11 = 0;
            int ciproscribed_12 = 0;
            int ciinit_13 = 0;
            int cidup_14 = 0;
            int citemp_15 = alloconstack(0);
            int creadname_16 = 0;

            {
                cfp_8 = 0;
                ci_9 = 0;
                setMEMINT((int) (cn_10), (int) (0));
                cireserved_11 = 0;
                ciproscribed_12 = 0;
                ciinit_13 = 0;
                cidup_14 = 0;
                setMEMINT((int) (citemp_15), (int) (0));
                creadname_16 = calloca(1000);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8593 */
                if ((((getMEMBYTE((int) ((cindir + ((int) (0) * 1))))) != (48)) ? 1 : 0) != 0) {

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8593 */
                    cstrcpy((int) (creadname_16), (int) (cindir));

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8594 */
                cstrcat((int) (creadname_16), strmarxan546);
                cfp_8 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8596
                         */
                        cfopen((int) (creadname_16), strmarxan191);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8598 */
                if ((((cfp_8) == ((int) (0))) ? 1 : 0) != 0) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8599
                         */
                        cShowGenProg((int) (strmarxan547), 0);
                        retval = 0;
                        if (true) {
                            prevlevel();
                            return retval;
                        }
                        ;

                    }

                }
                ;
                lab_marxan286: while (true) {
                    startargs(cn_10);
                    addarg(citemp_15);
                    ;
                    if ((((
                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8603 */
                    cfscanf(cfp_8, strmarxan548, endargs())) == (2)) ? 1 : 0) == 0) {
                        break lab_marxan286;
                    }

                    {
                        ci_9++;
                        setMEMINT((int) (cn_10), (int) (
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8606
                         */
                        cFastPUIDtoPUINDEX(cpuno, getMEMINT((int) (cn_10)), (int) (cPULookup))));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8608
                         */
                        if (((((((getMEMINT((int) (cn_10))) < (0)) ? 1 : 0)) != 0) ? 1
                                : ((((getMEMINT((int) (cn_10))) >= (cpuno)) ? 1 : 0))) != 0) {
                            startargs(getMEMINT((int) (cn_10)));

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 8608
                             */
                            cShowErrorMessage((int) (strmarxan549), endargs());

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8610
                         */
                        if (getMEMINT((int) (((cpu + ((int) (getMEMINT((int) (cn_10))) * 64)) + 4))) != 0) {
                            cidup_14++;

                        }
                        ;
                        setMEMINT((int) (((cpu + ((int) (getMEMINT((int) (cn_10))) * 64))
                                + 4)), (int) (getMEMINT((int) (citemp_15))));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8613
                         */
                        if ((((getMEMINT((int) (citemp_15))) == (1)) ? 1 : 0) != 0) {
                            ciinit_13++;

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8615
                         */
                        if ((((getMEMINT((int) (citemp_15))) == (2)) ? 1 : 0) != 0) {
                            cireserved_11++;

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8617
                         */
                        if ((((getMEMINT((int) (citemp_15))) == (3)) ? 1 : 0) != 0) {
                            ciproscribed_12++;

                        }
                        ;

                    }

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8619 */
                cfclose(cfp_8);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8622 */
                if ((((cverbose) > (1)) ? 1 : 0) != 0) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8624
                         */
                        if (((((((ciinit_13) != 0) ? 1 : (cireserved_11))) != 0) ? 1
                                : (ciproscribed_12)) != 0) {

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 8624
                             */
                            cShowGenProg((int) (strmarxan550), 0);

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8626
                         */
                        if (ciinit_13 != 0) {
                            startargs(ciinit_13);

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 8626
                             */
                            cShowGenProg((int) (strmarxan551), endargs());

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8628
                         */
                        if (cireserved_11 != 0) {
                            startargs(cireserved_11);

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 8628
                             */
                            cShowGenProg((int) (strmarxan552), endargs());

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8630
                         */
                        if (ciproscribed_12 != 0) {
                            startargs(ciproscribed_12);

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 8630
                             */
                            cShowGenProg((int) (strmarxan553), endargs());

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8632
                         */
                        if (cidup_14 != 0) {
                            startargs(cidup_14);

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 8632
                             */
                            cShowGenProg((int) (strmarxan554), endargs());

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8633
                         */
                        cShowGenProg((int) (strmarxan137), 0);

                    }

                }
                ;
                retval = ci_9;
                if (true) {
                    prevlevel();
                    return retval;
                }
                ;

            }
        }
        ;
        prevlevel();
        return 0;
    }

    static int strmarxan555 = jtocstr("puxy.dat");
    static int strmarxan556 = jtocstr("PU x-y data file %s not available but required.");
    static int strmarxan557 = jtocstr("%i%lf%lf");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8639 */

    public static int cReadPUXYfile(int cpuno, int cpu, int cPULookup, int cindir) {
        nextlevel();
        if (true) {
            int label = 0;
            int retval = 0;
            int cfp_7 = 0;
            int ci_8 = 0;
            int cn_9 = alloconstack(0);
            int cx_10 = alloconstack(0);
            int cy_11 = alloconstack(0);
            int creadname_12 = 0;

            {
                cfp_7 = 0;
                ci_8 = 0;
                setMEMINT((int) (cn_9), (int) (0));
                setMEMINT((int) (cx_10), (int) (0));
                setMEMINT((int) (cy_11), (int) (0));
                creadname_12 = calloca(1000);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8646 */
                if ((((getMEMBYTE((int) ((cindir + ((int) (0) * 1))))) != (48)) ? 1 : 0) != 0) {

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8646 */
                    cstrcpy((int) (creadname_12), (int) (cindir));

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8647 */
                cstrcat((int) (creadname_12), strmarxan555);
                cfp_7 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8649
                         */
                        cfopen((int) (creadname_12), strmarxan191);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8651 */
                if ((((cfp_7) == ((int) (0))) ? 1 : 0) != 0) {
                    startargs(creadname_12);

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8651 */
                    cShowErrorMessage((int) (strmarxan556), endargs());

                }
                ;
                lab_marxan287: while (true) {
                    startargs(cn_9);
                    addarg(cx_10);
                    addarg(cy_11);
                    ;
                    if ((((
                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8654 */
                    cfscanf(cfp_7, strmarxan557, endargs())) == (3)) ? 1 : 0) == 0) {
                        break lab_marxan287;
                    }

                    {
                        setMEMINT((int) (cn_9), (int) (
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8656
                         */
                        cFastPUIDtoPUINDEX(cpuno, getMEMINT((int) (cn_9)), (int) (cPULookup))));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8658
                         */
                        if (((((((getMEMINT((int) (cn_9))) < (0)) ? 1 : 0)) != 0) ? 1
                                : ((((getMEMINT((int) (cn_9))) >= (cpuno)) ? 1 : 0))) != 0) {
                            startargs(getMEMINT((int) (cn_9)));

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 8658
                             */
                            cShowErrorMessage((int) (strmarxan549), endargs());

                        }
                        ;
                        setMEMDOUBLE((int) (((cpu + ((int) (ci_8) * 64))
                                + 8)), (double) (getMEMDOUBLE((int) (cx_10))));
                        setMEMDOUBLE((int) (((cpu + ((int) (ci_8) * 64))
                                + 16)), (double) (getMEMDOUBLE((int) (cy_11))));
                        ci_8++;

                    }

                }
                retval = ci_8;
                if (true) {
                    prevlevel();
                    return retval;
                }
                ;

            }
        }
        ;
        prevlevel();
        return 0;
    }

    static int marxaninit61(int size) {
        int initptr = calloca(size);
        int j = 0;
        setMEMINT((int) (initptr + 0), (int) (strmarxan558), strmarxan203);
        setMEMINT((int) (initptr + 8), (int) (strmarxan559), strmarxan560);
        setMEMINT((int) (initptr + 16), (int) (strmarxan561));

        return initptr;
    }

    static int strmarxan558 = jtocstr("id");
    static int strmarxan559 = jtocstr("status");
    static int strmarxan560 = jtocstr("xloc");
    static int strmarxan561 = jtocstr("yloc");
    static int strmarxan562 = jtocstr("Planning Unit file %s has not been found.\nAborting Program.");
    static int strmarxan563 = jtocstr("ERROR: Missing planning unit id for line %d. \n");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8672 */

    public static int cReadPUData(int cpuno, int cpu, int ciCostCount, int cCostNames, int cfnames) {
        nextlevel();
        if (true) {
            int label = 0;
            int retval = 0;
            int cfp_8 = 0;
            int creadname_9 = 0;
            int csLine_10 = 0;
            int cvarlist_11 = 0;
            int cnumvars_12 = 0;
            int ci_13 = 0;
            int csVarName_14 = 0;
            int csVarVal_15 = 0;
            int chead_16 = 0;
            int ctemp_17 = 0;
            int cputemp_18 = 0;
            int cspuhead_19 = 0;
            int cnewspulink_20 = 0;

            {
                cfp_8 = 0;
                creadname_9 = 0;
                csLine_10 = calloca(1000);
                cvarlist_11 = calloca(20);
                cmemcpy((int) cvarlist_11, (int) ((int) (marxaninit61(20))), 20);
                cnumvars_12 = 5;
                ci_13 = 0;
                csVarName_14 = 0;
                csVarVal_15 = 0;
                chead_16 = (int) (0);
                ctemp_17 = (int) (0);
                cputemp_18 = calloca(64);
                cspuhead_19 = (int) (0);
                cnewspulink_20 = 0;
                creadname_9 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8685 */
                ccalloc(((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8685 */
                cstrlen(getMEMINT((int) ((cfnames + 12)))) +
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8685 */
                        cstrlen(getMEMINT((int) ((cfnames + 0))))) + 2), 1));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8692 */
                cstrcpy(creadname_9, getMEMINT((int) ((cfnames + 0))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8693 */
                cstrcat(creadname_9, getMEMINT((int) ((cfnames + 12))));
                cfp_8 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8694
                         */
                        cfopen(creadname_9, strmarxan191);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8696 */
                if ((((cfp_8) == ((int) (0))) ? 1 : 0) != 0) {
                    startargs(creadname_9);

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8696 */
                    cShowErrorMessage((int) (strmarxan562), endargs());

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8697 */
                cfree(creadname_9);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8700 */
                cfgets((int) (csLine_10), 999, cfp_8);
                csVarName_14 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8702
                         */
                        cstrtok((int) (csLine_10), strmarxan193);
                chead_16 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8703
                         */
                        cGetVarNamePU((int) (cvarlist_11), cnumvars_12, (int) (cCostNames), ciCostCount, csVarName_14, chead_16, getMEMINT((int) ((cfnames
                                + 12))));
                ctemp_17 = chead_16;
                lab_marxan288: while (true) {
                    csVarName_14 =
                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 8707
                             */
                            cstrtok((int) (0), strmarxan193);
                    ;
                    if ((((csVarName_14) != ((int) (0))) ? 1 : 0) == 0) {
                        break lab_marxan288;
                    }

                    {
                        setMEMINT((int) ((ctemp_17 + 4)), (int) (
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8709
                         */
                        cGetVarNamePU((int) (cvarlist_11), cnumvars_12, (int) (cCostNames), ciCostCount, csVarName_14, chead_16, getMEMINT((int) ((cfnames
                                + 12))))));
                        ctemp_17 = getMEMINT((int) ((ctemp_17 + 4)));

                    }

                }
                lab_marxan289: while ((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8714 */
                cfgets((int) (csLine_10), 999, cfp_8)) != 0) {

                    {
                        ci_13++;
                        setMEMINT((int) ((cputemp_18 + 0)), (int) ((-(1))));
                        setMEMDOUBLE((int) ((cputemp_18 + 24)), (double) (1));
                        setMEMINT((int) ((cputemp_18 + 4)), (int) (0));
                        setMEMDOUBLE((int) ((cputemp_18 + 8)), (double) ((-(1))));
                        setMEMDOUBLE((int) ((cputemp_18 + 16)), (double) ((-(1))));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8748
                         */
                        ctemp_17 = chead_16;
                        lab_marxan290: for (; ctemp_17 != 0;) {

                            {

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 8725
                                 */
                                if ((((ctemp_17) == (chead_16)) ? 1 : 0) != 0) {
                                    csVarVal_15 =
                                            /*
                                             * file
                                             * E:/git/klab-ecology-component/etc/marxan/
                                             * marxan.c line 8725
                                             */
                                            cstrtok((int) (csLine_10), strmarxan193);

                                } else {
                                    csVarVal_15 =
                                            /*
                                             * file
                                             * E:/git/klab-ecology-component/etc/marxan/
                                             * marxan.c line 8727
                                             */
                                            cstrtok((int) (0), strmarxan193);

                                }
                                ;

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 8729
                                 */
                                if ((((
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 8728
                                 */
                                cstrcmp(strmarxan558, getMEMINT((int) ((ctemp_17 + 0))))) == (0)) ? 1
                                        : 0) != 0) {

                                    {
                                        startargs((cputemp_18 + 0));

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 8730
                                         */
                                        csscanf(csVarVal_15, strmarxan194, endargs());

                                    }

                                } else {

                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 8733
                                     */
                                    if ((((
                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 8732
                                     */
                                    cstrcmp(strmarxan559, getMEMINT((int) ((ctemp_17 + 0))))) == (0)) ? 1
                                            : 0) != 0) {

                                        {
                                            startargs((cputemp_18 + 4));

                                            /*
                                             * file
                                             * E:/git/klab-ecology-component/etc/marxan/
                                             * marxan.c line 8734
                                             */
                                            csscanf(csVarVal_15, strmarxan194, endargs());

                                        }

                                    } else {

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 8737
                                         */
                                        if ((((
                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 8736
                                         */
                                        cstrcmp(strmarxan560, getMEMINT((int) ((ctemp_17 + 0))))) == (0)) ? 1
                                                : 0) != 0) {

                                            {
                                                startargs((cputemp_18 + 8));

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 8738
                                                 */
                                                csscanf(csVarVal_15, strmarxan208, endargs());

                                            }

                                        } else {

                                            /*
                                             * file
                                             * E:/git/klab-ecology-component/etc/marxan/
                                             * marxan.c line 8741
                                             */
                                            if ((((
                                            /*
                                             * file
                                             * E:/git/klab-ecology-component/etc/marxan/
                                             * marxan.c line 8740
                                             */
                                            cstrcmp(strmarxan561, getMEMINT((int) ((ctemp_17 + 0))))) == (0))
                                                    ? 1 : 0) != 0) {

                                                {
                                                    startargs((cputemp_18 + 16));

                                                    /*
                                                     * file
                                                     * E:/git/klab-ecology-component/etc/
                                                     * marxan/marxan.c line 8742
                                                     */
                                                    csscanf(csVarVal_15, strmarxan208, endargs());

                                                }

                                            } else {

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 8745
                                                 */
                                                if ((((
                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 8744
                                                 */
                                                cstrcmp(strmarxan203, getMEMINT((int) ((ctemp_17
                                                        + 0))))) == (0)) ? 1 : 0) != 0) {

                                                    {
                                                        startargs((cputemp_18 + 24));

                                                        /*
                                                         * file
                                                         * E:/git/klab-ecology-component/
                                                         * etc/marxan/marxan.c line 8746
                                                         */
                                                        csscanf(csVarVal_15, strmarxan208, endargs());

                                                    }

                                                }
                                                ;

                                            }
                                            ;

                                        }
                                        ;

                                    }
                                    ;

                                }
                                ;

                            }
                            ctemp_17 = getMEMINT((int) ((ctemp_17 + 4)));

                        }

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8751
                         */
                        if ((((getMEMINT((int) ((cputemp_18 + 0)))) == ((-(1)))) ? 1 : 0) != 0) {
                            startargs(ci_13);

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 8751
                             */
                            cShowErrorMessage((int) (strmarxan563), endargs());

                        }
                        ;
                        cnewspulink_20 = (int) (
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8753
                         */
                        cmalloc(68));
                        setMEMINT((int) (((cnewspulink_20 + 0)
                                + 0)), (int) (getMEMINT((int) ((cputemp_18 + 0)))));
                        setMEMINT((int) (((cnewspulink_20 + 0)
                                + 4)), (int) (getMEMINT((int) ((cputemp_18 + 4)))));
                        setMEMDOUBLE((int) (((cnewspulink_20 + 0)
                                + 24)), (double) (getMEMDOUBLE((int) ((cputemp_18 + 24)))));
                        setMEMDOUBLE((int) (((cnewspulink_20 + 0)
                                + 8)), (double) (getMEMDOUBLE((int) ((cputemp_18 + 8)))));
                        setMEMDOUBLE((int) (((cnewspulink_20 + 0)
                                + 16)), (double) (getMEMDOUBLE((int) ((cputemp_18 + 16)))));
                        setMEMINT((int) ((cnewspulink_20 + 64)), (int) (cspuhead_19));
                        cspuhead_19 = cnewspulink_20;

                    }

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8764 */
                cfclose(cfp_8);
                setMEMINT((int) (cpuno), (int) (ci_13));
                setMEMINT((int) (cpu), (int) ((int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8768 */
                ccalloc(getMEMINT((int) (cpuno)), 64))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8793 */
                ci_13 = 0;
                lab_marxan291: for (; (((ci_13) < (getMEMINT((int) (cpuno)))) ? 1 : 0) != 0;) {

                    {
                        setMEMINT((int) (((getMEMINT((int) (cpu)) + (ci_13 * 64))
                                + 0)), (int) (getMEMINT((int) (((cspuhead_19 + 0) + 0)))));
                        setMEMDOUBLE((int) (((getMEMINT((int) (cpu)) + (ci_13 * 64))
                                + 24)), (double) (getMEMDOUBLE((int) (((cspuhead_19 + 0) + 24)))));
                        setMEMINT((int) (((getMEMINT((int) (cpu)) + (ci_13 * 64))
                                + 4)), (int) (getMEMINT((int) (((cspuhead_19 + 0) + 4)))));
                        setMEMDOUBLE((int) (((getMEMINT((int) (cpu)) + (ci_13 * 64))
                                + 8)), (double) (getMEMDOUBLE((int) (((cspuhead_19 + 0) + 8)))));
                        setMEMDOUBLE((int) (((getMEMINT((int) (cpu)) + (ci_13 * 64))
                                + 16)), (double) (getMEMDOUBLE((int) (((cspuhead_19 + 0) + 16)))));
                        setMEMINT((int) (((getMEMINT((int) (cpu)) + (ci_13 * 64)) + 32)), (int) (0));
                        setMEMINT((int) (((getMEMINT((int) (cpu)) + (ci_13 * 64)) + 36)), (int) (0));
                        setMEMINT((int) (((getMEMINT((int) (cpu)) + (ci_13 * 64)) + 40)), (int) (0));
                        setMEMINT((int) (((getMEMINT((int) (cpu)) + (ci_13 * 64)) + 44)), (int) (0));
                        setMEMINT((int) (((getMEMINT((int) (cpu)) + (ci_13 * 64)) + 48)), (int) (0));
                        setMEMINT((int) (((getMEMINT((int) (cpu)) + (ci_13 * 64)) + 52)), (int) (0));
                        setMEMINT((int) (((getMEMINT((int) (cpu)) + (ci_13 * 64)) + 56)), (int) (0));
                        setMEMINT((int) (((getMEMINT((int) (cpu)) + (ci_13 * 64)) + 60)), (int) (0));
                        cnewspulink_20 = cspuhead_19;
                        cspuhead_19 = getMEMINT((int) ((cspuhead_19 + 64)));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8792
                         */
                        cfree(cnewspulink_20);

                    }
                    ci_13++;

                }
                retval = ci_13;
                if (true) {
                    prevlevel();
                    return retval;
                }
                ;

            }
        }
        ;
        prevlevel();
        return 0;
    }

    static int marxaninit62(int size) {
        int initptr = calloca(size);
        int j = 0;
        setMEMINT((int) (initptr + 0), (int) (strmarxan558), strmarxan564);
        setMEMINT((int) (initptr + 8), (int) (strmarxan565), strmarxan566);
        setMEMINT((int) (initptr + 16), (int) (strmarxan567), strmarxan568);
        setMEMINT((int) (initptr + 24), (int) (strmarxan569), strmarxan570);
        setMEMINT((int) (initptr + 32), (int) (strmarxan571), strmarxan572);

        return initptr;
    }

    static int strmarxan564 = jtocstr("type");
    static int strmarxan565 = jtocstr("target");
    static int strmarxan566 = jtocstr("spf");
    static int strmarxan567 = jtocstr("target2");
    static int strmarxan568 = jtocstr("sepdistance");
    static int strmarxan569 = jtocstr("sepnum");
    static int strmarxan570 = jtocstr("name");
    static int strmarxan571 = jtocstr("targetocc");
    static int strmarxan572 = jtocstr("prop");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8799 */

    public static int cReadSpeciesData2(int cspno, int cspec, int cfnames) {
        nextlevel();
        if (true) {
            int label = 0;
            int retval = 0;
            int cfp_6 = 0;
            int cn_7 = 0;
            int csnhead_8 = 0;
            int ctemp_9 = 0;
            int chead_10 = 0;
            int cnewlink_11 = 0;
            int cspectemp_12 = 0;
            int creadname_13 = 0;
            int cspeciesname_14 = 0;
            int csLine_15 = 0;
            int cvarlist_16 = 0;
            int cnumvars_17 = 0;
            int cnamespecial_18 = 0;
            int csVarName_19 = 0;
            int csVarVal_20 = 0;

            {
                cfp_6 = 0;
                cn_7 = 0;
                csnhead_8 = (int) (0);
                ctemp_9 = 0;
                chead_10 = (int) (0);
                cnewlink_11 = 0;
                cspectemp_12 = calloca(100);
                creadname_13 = 0;
                cspeciesname_14 = calloca(255);
                csLine_15 = calloca(1000);
                cvarlist_16 = calloca(40);
                cmemcpy((int) cvarlist_16, (int) ((int) (marxaninit62(40))), 40);
                cnumvars_17 = 10;
                cnamespecial_18 = 0;
                csVarName_19 = 0;
                csVarVal_20 = 0;
                creadname_13 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8816 */
                ccalloc(((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8816 */
                cstrlen(getMEMINT((int) ((cfnames + 8)))) +
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8816 */
                        cstrlen(getMEMINT((int) ((cfnames + 0))))) + 2), 1));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8817 */
                cstrcpy(creadname_13, getMEMINT((int) ((cfnames + 0))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8818 */
                cstrcat(creadname_13, getMEMINT((int) ((cfnames + 8))));
                cfp_6 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8819
                         */
                        cfopen(creadname_13, strmarxan191);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8821 */
                if ((((cfp_6) == ((int) (0))) ? 1 : 0) != 0) {
                    startargs(creadname_13);

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8821 */
                    cShowErrorMessage((int) (strmarxan544), endargs());

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8822 */
                cfree(creadname_13);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8825 */
                cfgets((int) (csLine_15), 999, cfp_6);
                csVarName_19 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8827
                         */
                        cstrtok((int) (csLine_15), strmarxan193);
                csnhead_8 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8828
                         */
                        cGetVarName((int) (cvarlist_16), cnumvars_17, csVarName_19, csnhead_8, getMEMINT((int) ((cfnames
                                + 8))));
                ctemp_9 = csnhead_8;
                lab_marxan292: while (true) {
                    csVarName_19 =
                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 8831
                             */
                            cstrtok((int) (0), strmarxan193);
                    ;
                    if ((((csVarName_19) != ((int) (0))) ? 1 : 0) == 0) {
                        break lab_marxan292;
                    }

                    {
                        setMEMINT((int) ((ctemp_9 + 4)), (int) (
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8833
                         */
                        cGetVarName((int) (cvarlist_16), cnumvars_17, csVarName_19, csnhead_8, getMEMINT((int) ((cfnames
                                + 8))))));
                        ctemp_9 = getMEMINT((int) ((ctemp_9 + 4)));

                    }

                }
                lab_marxan293: while ((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8838 */
                cfgets((int) (csLine_15), 999, cfp_6)) != 0) {

                    {
                        cn_7++;
                        setMEMINT((int) ((cspectemp_12 + 0)), (int) ((-(1))));
                        setMEMDOUBLE((int) ((cspectemp_12 + 12)), (double) ((-(1))));
                        setMEMINT((int) ((cspectemp_12 + 4)), (int) ((-(1))));
                        setMEMDOUBLE((int) ((cspectemp_12 + 32)), (double) ((-(1))));
                        setMEMDOUBLE((int) ((cspectemp_12 + 80)), (double) ((-(1))));
                        setMEMINT((int) ((cspectemp_12 + 28)), (int) ((-(1))));
                        setMEMDOUBLE((int) ((cspectemp_12 + 60)), (double) ((-(1))));
                        setMEMINT((int) ((cspectemp_12 + 68)), (int) ((-(1))));
                        setMEMDOUBLE((int) ((cspectemp_12 + 20)), (double) ((-(1))));
                        setMEMBYTE((int) ((cspeciesname_14 + ((int) (0) * 1))), (byte) ((byte) (0)));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8936
                         */
                        ctemp_9 = csnhead_8;
                        lab_marxan294: for (; ctemp_9 != 0;) {

                            {

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 8856
                                 */
                                if (cnamespecial_18 != 0) {

                                    {
                                        cnamespecial_18 = 0;

                                    }

                                } else {

                                    {

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 8861
                                         */
                                        if ((((ctemp_9) == (csnhead_8)) ? 1 : 0) != 0) {

                                            {
                                                csVarVal_20 =
                                                        /*
                                                         * file
                                                         * E:/git/klab-ecology-component/
                                                         * etc/marxan/marxan.c line 8862
                                                         */
                                                        cstrtok((int) (csLine_15), strmarxan193);

                                            }

                                        } else {
                                            csVarVal_20 =
                                                    /*
                                                     * file
                                                     * E:/git/klab-ecology-component/etc/
                                                     * marxan/marxan.c line 8865
                                                     */
                                                    cstrtok((int) (0), strmarxan193);

                                        }
                                        ;

                                    }

                                }
                                ;

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 8868
                                 */
                                if ((((
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 8867
                                 */
                                cstrcmp(strmarxan558, getMEMINT((int) ((ctemp_9 + 0))))) == (0)) ? 1
                                        : 0) != 0) {

                                    {
                                        startargs((cspectemp_12 + 0));

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 8869
                                         */
                                        csscanf(csVarVal_20, strmarxan194, endargs());

                                    }

                                } else {

                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 8872
                                     */
                                    if ((((
                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 8871
                                     */
                                    cstrcmp(strmarxan570, getMEMINT((int) ((ctemp_9 + 0))))) == (0)) ? 1
                                            : 0) != 0) {

                                        {

                                            /*
                                             * file
                                             * E:/git/klab-ecology-component/etc/marxan/
                                             * marxan.c line 8874
                                             */
                                            cstrcpy((int) (cspeciesname_14), csVarVal_20);

                                            lab_marxan295: do {

                                                {
                                                    csVarVal_20 =
                                                            /*
                                                             * file E:/git/klab-ecology-
                                                             * component/etc/marxan/marxan
                                                             * .c line 8878
                                                             */
                                                            cstrtok((int) (0), strmarxan193);

                                                    /*
                                                     * file
                                                     * E:/git/klab-ecology-component/etc/
                                                     * marxan/marxan.c line 8880
                                                     */
                                                    if (((csVarVal_20 == 0) ? 1 : 0) != 0) {
                                                        cnamespecial_18 = 2;

                                                    } else {

                                                        {

                                                            /*
                                                             * file E:/git/klab-ecology-
                                                             * component/etc/marxan/marxan
                                                             * .c line 8884
                                                             */
                                                            if ((getMEMINT((int) (((c_ctype + (1 * 4))
                                                                    + ((int) (getMEMBYTE((int) ((csVarVal_20
                                                                            + (0 * 1))))) * 4))))
                                                                    & (1 | 2)) != 0) {

                                                                {

                                                                    /*
                                                                     * file
                                                                     * E:/git/klab-ecology
                                                                     * -component/etc/
                                                                     * marxan/marxan.c
                                                                     * line 8885
                                                                     */
                                                                    cstrcat((int) (cspeciesname_14), strmarxan380);

                                                                    /*
                                                                     * file
                                                                     * E:/git/klab-ecology
                                                                     * -component/etc/
                                                                     * marxan/marxan.c
                                                                     * line 8886
                                                                     */
                                                                    cstrcat((int) (cspeciesname_14), csVarVal_20);

                                                                }

                                                            } else {
                                                                cnamespecial_18 = 1;

                                                            }
                                                            ;

                                                        }

                                                    }
                                                    ;

                                                }

                                            } while (((cnamespecial_18 == 0) ? 1 : 0) != 0);

                                            /*
                                             * file
                                             * E:/git/klab-ecology-component/etc/marxan/
                                             * marxan.c line 8893
                                             */
                                            if ((((cnamespecial_18) == (2)) ? 1 : 0) != 0) {
                                                cnamespecial_18 = 0;

                                            }
                                            ;

                                        }

                                    } else {

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 8897
                                         */
                                        if ((((
                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 8896
                                         */
                                        cstrcmp(strmarxan564, getMEMINT((int) ((ctemp_9 + 0))))) == (0)) ? 1
                                                : 0) != 0) {

                                            {
                                                startargs((cspectemp_12 + 4));

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 8898
                                                 */
                                                csscanf(csVarVal_20, strmarxan194, endargs());

                                            }

                                        } else {

                                            /*
                                             * file
                                             * E:/git/klab-ecology-component/etc/marxan/
                                             * marxan.c line 8901
                                             */
                                            if ((((
                                            /*
                                             * file
                                             * E:/git/klab-ecology-component/etc/marxan/
                                             * marxan.c line 8900
                                             */
                                            cstrcmp(strmarxan565, getMEMINT((int) ((ctemp_9 + 0))))) == (0))
                                                    ? 1 : 0) != 0) {

                                                {
                                                    startargs((cspectemp_12 + 12));

                                                    /*
                                                     * file
                                                     * E:/git/klab-ecology-component/etc/
                                                     * marxan/marxan.c line 8902
                                                     */
                                                    csscanf(csVarVal_20, strmarxan208, endargs());

                                                }

                                            } else {

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 8905
                                                 */
                                                if ((((
                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 8904
                                                 */
                                                cstrcmp(strmarxan572, getMEMINT((int) ((ctemp_9
                                                        + 0))))) == (0)) ? 1 : 0) != 0) {

                                                    {
                                                        startargs((cspectemp_12 + 20));

                                                        /*
                                                         * file
                                                         * E:/git/klab-ecology-component/
                                                         * etc/marxan/marxan.c line 8906
                                                         */
                                                        csscanf(csVarVal_20, strmarxan208, endargs());

                                                        /*
                                                         * file
                                                         * E:/git/klab-ecology-component/
                                                         * etc/marxan/marxan.c line 8908
                                                         */
                                                        if ((((getMEMDOUBLE((int) ((cspectemp_12
                                                                + 20)))) > (0)) ? 1 : 0) != 0) {
                                                            setMEMINT((int) (marxan.cfSpecPROPLoaded), (int) (1));

                                                        }
                                                        ;

                                                    }

                                                } else {

                                                    /*
                                                     * file
                                                     * E:/git/klab-ecology-component/etc/
                                                     * marxan/marxan.c line 8911
                                                     */
                                                    if ((((
                                                    /*
                                                     * file
                                                     * E:/git/klab-ecology-component/etc/
                                                     * marxan/marxan.c line 8910
                                                     */
                                                    cstrcmp(strmarxan566, getMEMINT((int) ((ctemp_9
                                                            + 0))))) == (0)) ? 1 : 0) != 0) {

                                                        {
                                                            startargs((cspectemp_12 + 32));

                                                            /*
                                                             * file E:/git/klab-ecology-
                                                             * component/etc/marxan/marxan
                                                             * .c line 8912
                                                             */
                                                            csscanf(csVarVal_20, strmarxan208, endargs());

                                                        }

                                                    } else {

                                                        /*
                                                         * file
                                                         * E:/git/klab-ecology-component/
                                                         * etc/marxan/marxan.c line 8915
                                                         */
                                                        if ((((
                                                        /*
                                                         * file
                                                         * E:/git/klab-ecology-component/
                                                         * etc/marxan/marxan.c line 8914
                                                         */
                                                        cstrcmp(strmarxan568, getMEMINT((int) ((ctemp_9
                                                                + 0))))) == (0)) ? 1 : 0) != 0) {

                                                            {
                                                                startargs((cspectemp_12 + 60));

                                                                /*
                                                                 * file
                                                                 * E:/git/klab-ecology-
                                                                 * component/etc/marxan/
                                                                 * marxan.c line 8916
                                                                 */
                                                                csscanf(csVarVal_20, strmarxan208, endargs());

                                                            }

                                                        } else {

                                                            /*
                                                             * file E:/git/klab-ecology-
                                                             * component/etc/marxan/marxan
                                                             * .c line 8919
                                                             */
                                                            if ((((
                                                            /*
                                                             * file E:/git/klab-ecology-
                                                             * component/etc/marxan/marxan
                                                             * .c line 8918
                                                             */
                                                            cstrcmp(strmarxan569, getMEMINT((int) ((ctemp_9
                                                                    + 0))))) == (0)) ? 1 : 0) != 0) {

                                                                {
                                                                    startargs((cspectemp_12 + 68));

                                                                    /*
                                                                     * file
                                                                     * E:/git/klab-ecology
                                                                     * -component/etc/
                                                                     * marxan/marxan.c
                                                                     * line 8920
                                                                     */
                                                                    csscanf(csVarVal_20, strmarxan194, endargs());

                                                                }

                                                            } else {

                                                                /*
                                                                 * file
                                                                 * E:/git/klab-ecology-
                                                                 * component/etc/marxan/
                                                                 * marxan.c line 8923
                                                                 */
                                                                if ((((
                                                                /*
                                                                 * file
                                                                 * E:/git/klab-ecology-
                                                                 * component/etc/marxan/
                                                                 * marxan.c line 8922
                                                                 */
                                                                cstrcmp(strmarxan567, getMEMINT((int) ((ctemp_9
                                                                        + 0))))) == (0)) ? 1 : 0) != 0) {

                                                                    {
                                                                        startargs((cspectemp_12 + 80));

                                                                        /*
                                                                         * file
                                                                         * E:/git/klab-
                                                                         * ecology-
                                                                         * component/etc/
                                                                         * marxan/marxan.c
                                                                         * line 8924
                                                                         */
                                                                        csscanf(csVarVal_20, strmarxan208, endargs());

                                                                    }

                                                                } else {

                                                                    /*
                                                                     * file
                                                                     * E:/git/klab-ecology
                                                                     * -component/etc/
                                                                     * marxan/marxan.c
                                                                     * line 8927
                                                                     */
                                                                    if ((((
                                                                    /*
                                                                     * file
                                                                     * E:/git/klab-ecology
                                                                     * -component/etc/
                                                                     * marxan/marxan.c
                                                                     * line 8926
                                                                     */
                                                                    cstrcmp(strmarxan571, getMEMINT((int) ((ctemp_9
                                                                            + 0))))) == (0)) ? 1 : 0) != 0) {

                                                                        {
                                                                            startargs((cspectemp_12 + 28));

                                                                            /*
                                                                             * file
                                                                             * E:/git/klab
                                                                             * -ecology-
                                                                             * component/
                                                                             * etc/marxan/
                                                                             * marxan.c
                                                                             * line 8928
                                                                             */
                                                                            csscanf(csVarVal_20, strmarxan194, endargs());

                                                                        }

                                                                    } else {

                                                                    }
                                                                    ;

                                                                }
                                                                ;

                                                            }
                                                            ;

                                                        }
                                                        ;

                                                    }
                                                    ;

                                                }
                                                ;

                                            }
                                            ;

                                        }
                                        ;

                                    }
                                    ;

                                }
                                ;

                            }
                            ctemp_9 = getMEMINT((int) ((ctemp_9 + 4)));

                        }
                        cnewlink_11 = (int) (
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8937
                         */
                        cmalloc(104));
                        setMEMINT((int) (((cnewlink_11 + 0)
                                + 0)), (int) (getMEMINT((int) ((cspectemp_12 + 0)))));
                        setMEMDOUBLE((int) (((cnewlink_11 + 0)
                                + 12)), (double) (getMEMDOUBLE((int) ((cspectemp_12 + 12)))));
                        setMEMDOUBLE((int) (((cnewlink_11 + 0)
                                + 20)), (double) (getMEMDOUBLE((int) ((cspectemp_12 + 20)))));
                        setMEMDOUBLE((int) (((cnewlink_11 + 0)
                                + 32)), (double) (getMEMDOUBLE((int) ((cspectemp_12 + 32)))));
                        setMEMINT((int) (((cnewlink_11 + 0)
                                + 4)), (int) (getMEMINT((int) ((cspectemp_12 + 4)))));
                        setMEMINT((int) (((cnewlink_11 + 0)
                                + 28)), (int) (getMEMINT((int) ((cspectemp_12 + 28)))));
                        setMEMDOUBLE((int) (((cnewlink_11 + 0)
                                + 80)), (double) (getMEMDOUBLE((int) ((cspectemp_12 + 80)))));
                        setMEMDOUBLE((int) (((cnewlink_11 + 0)
                                + 60)), (double) (getMEMDOUBLE((int) ((cspectemp_12 + 60)))));
                        setMEMINT((int) (((cnewlink_11 + 0)
                                + 68)), (int) (getMEMINT((int) ((cspectemp_12 + 68)))));
                        setMEMINT((int) (((cnewlink_11 + 0) + 8)), (int) ((int) (
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8947
                         */
                        ccalloc((
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8947
                         */
                        cstrlen((int) (cspeciesname_14)) + 1), 1))));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8948
                         */
                        cstrcpy(getMEMINT((int) (((cnewlink_11 + 0) + 8))), (int) (cspeciesname_14));
                        setMEMINT((int) ((cnewlink_11 + 100)), (int) (chead_10));
                        chead_10 = cnewlink_11;

                    }

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8953 */
                cfclose(cfp_6);
                setMEMINT((int) (cspno), (int) (cn_7));
                setMEMINT((int) (cspec), (int) ((int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8957 */
                ccalloc(getMEMINT((int) (cspno)), 100))));
                cn_7 = 0;
                lab_marxan296: while ((chead_10) != 0) {

                    {
                        setMEMINT((int) (((getMEMINT((int) (cspec)) + (cn_7 * 100))
                                + 0)), (int) (getMEMINT((int) (((chead_10 + 0) + 0)))));
                        setMEMINT((int) (((getMEMINT((int) (cspec)) + (cn_7 * 100))
                                + 4)), (int) (getMEMINT((int) (((chead_10 + 0) + 4)))));
                        setMEMDOUBLE((int) (((getMEMINT((int) (cspec)) + (cn_7 * 100))
                                + 12)), (double) (getMEMDOUBLE((int) (((chead_10 + 0) + 12)))));
                        setMEMDOUBLE((int) (((getMEMINT((int) (cspec)) + (cn_7 * 100))
                                + 20)), (double) (getMEMDOUBLE((int) (((chead_10 + 0) + 20)))));
                        setMEMDOUBLE((int) (((getMEMINT((int) (cspec)) + (cn_7 * 100))
                                + 32)), (double) (getMEMDOUBLE((int) (((chead_10 + 0) + 32)))));
                        setMEMDOUBLE((int) (((getMEMINT((int) (cspec)) + (cn_7 * 100))
                                + 80)), (double) (getMEMDOUBLE((int) (((chead_10 + 0) + 80)))));
                        setMEMINT((int) (((getMEMINT((int) (cspec)) + (cn_7 * 100))
                                + 28)), (int) (getMEMINT((int) (((chead_10 + 0) + 28)))));
                        setMEMDOUBLE((int) (((getMEMINT((int) (cspec)) + (cn_7 * 100))
                                + 60)), (double) (getMEMDOUBLE((int) (((chead_10 + 0) + 60)))));
                        setMEMINT((int) (((getMEMINT((int) (cspec)) + (cn_7 * 100))
                                + 68)), (int) (getMEMINT((int) (((chead_10 + 0) + 68)))));
                        setMEMINT((int) (((getMEMINT((int) (cspec)) + (cn_7 * 100)) + 92)), (int) (0));
                        setMEMINT((int) (((getMEMINT((int) (cspec)) + (cn_7 * 100)) + 8)), (int) ((int) (
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8971
                         */
                        ccalloc((
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8971
                         */
                        cstrlen(getMEMINT((int) (((chead_10 + 0) + 8)))) + 1), 1))));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8972
                         */
                        cstrcpy(getMEMINT((int) (((getMEMINT((int) (cspec)) + (cn_7 * 100))
                                + 8))), getMEMINT((int) (((chead_10 + 0) + 8))));
                        cn_7++;
                        cnewlink_11 = chead_10;
                        chead_10 = getMEMINT((int) ((chead_10 + 100)));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8976
                         */
                        cfree(getMEMINT((int) (((cnewlink_11 + 0) + 8))));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 8977
                         */
                        cfree(cnewlink_11);

                    }

                }
                retval = cn_7;
                if (true) {
                    prevlevel();
                    return retval;
                }
                ;

            }
        }
        ;
        prevlevel();
        return 0;
    }

    static int marxaninit63(int size) {
        int initptr = calloca(size);
        int j = 0;
        setMEMINT((int) (initptr + 0), (int) (strmarxan564), strmarxan565);
        setMEMINT((int) (initptr + 8), (int) (strmarxan567), strmarxan571);
        setMEMINT((int) (initptr + 16), (int) (strmarxan569), strmarxan568);
        setMEMINT((int) (initptr + 24), (int) (strmarxan572), strmarxan566);

        return initptr;
    }

    static int strmarxan573 = jtocstr("Warning: Block Definition File %s not found.\n");
    static int strmarxan574 = jtocstr("Cannot find |%s| \n");
    static int strmarxan575 = jtocstr("Serious error in GenSpecies data reading function.\n");
    static int strmarxan576 = jtocstr("ERROR: Missing Gen Species type for line %d. \n");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 8994 */

    public static int cReadGenSpeciesData(int cgspno, int cgspec, int cfnames) {
        nextlevel();
        if (true) {
            int label = 0;
            int retval = 0;
            int cfp_6 = 0;
            int creadname_7 = 0;
            int csLine_8 = 0;
            int cvarlist_9 = 0;
            int cnumvars_10 = 0;
            int ci_11 = 0;
            int csVarName_12 = 0;
            int csVarVal_13 = 0;
            int chead_14 = 0;
            int ctemp_15 = 0;
            int cgstemp_16 = 0;
            int cgshead_17 = 0;
            int cnewgslink_18 = 0;

            {
                cfp_6 = 0;
                creadname_7 = 0;
                csLine_8 = calloca(1000);
                cvarlist_9 = calloca(32);
                cmemcpy((int) cvarlist_9, (int) ((int) (marxaninit63(32))), 32);
                cnumvars_10 = 8;
                ci_11 = 0;
                csVarName_12 = 0;
                csVarVal_13 = 0;
                chead_14 = (int) (0);
                ctemp_15 = (int) (0);
                cgstemp_16 = calloca(52);
                cgshead_17 = (int) (0);
                cnewgslink_18 = 0;
                creadname_7 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9007 */
                ccalloc(((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9007 */
                cstrlen(getMEMINT((int) ((cfnames + 28)))) +
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9007 */
                        cstrlen(getMEMINT((int) ((cfnames + 0))))) + 2), 1));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9008 */
                cstrcpy(creadname_7, getMEMINT((int) ((cfnames + 0))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9009 */
                cstrcat(creadname_7, getMEMINT((int) ((cfnames + 28))));
                cfp_6 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9010
                         */
                        cfopen(creadname_7, strmarxan191);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9012 */
                if ((((cfp_6) == ((int) (0))) ? 1 : 0) != 0) {

                    {
                        startargs(getMEMINT((int) ((cfnames + 28))));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9013
                         */
                        cShowWarningMessage((int) (strmarxan573), endargs());

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9014
                         */
                        cfree(creadname_7);
                        retval = 0;
                        if (true) {
                            prevlevel();
                            return retval;
                        }
                        ;

                    }

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9017 */
                cfree(creadname_7);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9020 */
                cfgets((int) (csLine_8), 999, cfp_6);
                csVarName_12 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9021
                         */
                        cstrtok((int) (csLine_8), strmarxan193);
                chead_14 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9022
                         */
                        cGetVarName((int) (cvarlist_9), cnumvars_10, csVarName_12, chead_14, getMEMINT((int) ((cfnames
                                + 28))));
                ctemp_15 = chead_14;
                lab_marxan297: while (true) {
                    csVarName_12 =
                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 9025
                             */
                            cstrtok((int) (0), strmarxan193);
                    ;
                    if ((((csVarName_12) != ((int) (0))) ? 1 : 0) == 0) {
                        break lab_marxan297;
                    }

                    {
                        setMEMINT((int) ((ctemp_15 + 4)), (int) (
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9027
                         */
                        cGetVarName((int) (cvarlist_9), cnumvars_10, csVarName_12, chead_14, getMEMINT((int) ((cfnames
                                + 28))))));
                        ctemp_15 = getMEMINT((int) ((ctemp_15 + 4)));

                    }

                }
                lab_marxan298: while ((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9031 */
                cfgets((int) (csLine_8), 999, cfp_6)) != 0) {

                    {
                        ci_11++;
                        setMEMINT((int) ((cgstemp_16 + 0)), (int) ((-(1))));
                        setMEMINT((int) ((cgstemp_16 + 4)), (int) ((-(1))));
                        setMEMDOUBLE((int) ((cgstemp_16 + 8)), (double) ((-(1))));
                        setMEMDOUBLE((int) ((cgstemp_16 + 16)), (double) ((-(1))));
                        setMEMINT((int) ((cgstemp_16 + 24)), (int) ((-(1))));
                        setMEMDOUBLE((int) ((cgstemp_16 + 28)), (double) ((-(1))));
                        setMEMDOUBLE((int) ((cgstemp_16 + 36)), (double) ((-(1))));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9086
                         */
                        ctemp_15 = chead_14;
                        lab_marxan299: for (; getMEMINT((int) ((ctemp_15 + 4))) != 0;) {

                            {

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 9044
                                 */
                                if ((((ctemp_15) == (chead_14)) ? 1 : 0) != 0) {
                                    csVarVal_13 =
                                            /*
                                             * file
                                             * E:/git/klab-ecology-component/etc/marxan/
                                             * marxan.c line 9044
                                             */
                                            cstrtok((int) (csLine_8), strmarxan193);

                                } else {
                                    csVarVal_13 =
                                            /*
                                             * file
                                             * E:/git/klab-ecology-component/etc/marxan/
                                             * marxan.c line 9046
                                             */
                                            cstrtok((int) (0), strmarxan193);

                                }
                                ;

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 9049
                                 */
                                if ((((
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 9048
                                 */
                                cstrcmp(strmarxan564, getMEMINT((int) ((ctemp_15 + 0))))) == (0)) ? 1
                                        : 0) != 0) {

                                    {
                                        startargs((cgstemp_16 + 0));

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 9050
                                         */
                                        csscanf(csVarVal_13, strmarxan194, endargs());

                                    }

                                } else {

                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 9053
                                     */
                                    if ((((
                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 9052
                                     */
                                    cstrcmp(strmarxan571, getMEMINT((int) ((ctemp_15 + 0))))) == (0)) ? 1
                                            : 0) != 0) {

                                        {
                                            startargs((cgstemp_16 + 4));

                                            /*
                                             * file
                                             * E:/git/klab-ecology-component/etc/marxan/
                                             * marxan.c line 9054
                                             */
                                            csscanf(csVarVal_13, strmarxan194, endargs());

                                        }

                                    } else {

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 9057
                                         */
                                        if ((((
                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 9056
                                         */
                                        cstrcmp(strmarxan565, getMEMINT((int) ((ctemp_15 + 0))))) == (0)) ? 1
                                                : 0) != 0) {

                                            {
                                                startargs((cgstemp_16 + 8));

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 9058
                                                 */
                                                csscanf(csVarVal_13, strmarxan208, endargs());

                                            }

                                        } else {

                                            /*
                                             * file
                                             * E:/git/klab-ecology-component/etc/marxan/
                                             * marxan.c line 9061
                                             */
                                            if ((((
                                            /*
                                             * file
                                             * E:/git/klab-ecology-component/etc/marxan/
                                             * marxan.c line 9060
                                             */
                                            cstrcmp(strmarxan567, getMEMINT((int) ((ctemp_15 + 0))))) == (0))
                                                    ? 1 : 0) != 0) {

                                                {
                                                    startargs((cgstemp_16 + 16));

                                                    /*
                                                     * file
                                                     * E:/git/klab-ecology-component/etc/
                                                     * marxan/marxan.c line 9062
                                                     */
                                                    csscanf(csVarVal_13, strmarxan208, endargs());

                                                }

                                            } else {

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 9065
                                                 */
                                                if ((((
                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 9064
                                                 */
                                                cstrcmp(strmarxan569, getMEMINT((int) ((ctemp_15
                                                        + 0))))) == (0)) ? 1 : 0) != 0) {

                                                    {
                                                        startargs((cgstemp_16 + 24));

                                                        /*
                                                         * file
                                                         * E:/git/klab-ecology-component/
                                                         * etc/marxan/marxan.c line 9066
                                                         */
                                                        csscanf(csVarVal_13, strmarxan194, endargs());

                                                    }

                                                } else {

                                                    /*
                                                     * file
                                                     * E:/git/klab-ecology-component/etc/
                                                     * marxan/marxan.c line 9069
                                                     */
                                                    if ((((
                                                    /*
                                                     * file
                                                     * E:/git/klab-ecology-component/etc/
                                                     * marxan/marxan.c line 9068
                                                     */
                                                    cstrcmp(strmarxan568, getMEMINT((int) ((ctemp_15
                                                            + 0))))) == (0)) ? 1 : 0) != 0) {

                                                        {
                                                            startargs((cgstemp_16 + 28));

                                                            /*
                                                             * file E:/git/klab-ecology-
                                                             * component/etc/marxan/marxan
                                                             * .c line 9070
                                                             */
                                                            csscanf(csVarVal_13, strmarxan208, endargs());

                                                        }

                                                    } else {

                                                        /*
                                                         * file
                                                         * E:/git/klab-ecology-component/
                                                         * etc/marxan/marxan.c line 9073
                                                         */
                                                        if ((((
                                                        /*
                                                         * file
                                                         * E:/git/klab-ecology-component/
                                                         * etc/marxan/marxan.c line 9072
                                                         */
                                                        cstrcmp(strmarxan572, getMEMINT((int) ((ctemp_15
                                                                + 0))))) == (0)) ? 1 : 0) != 0) {

                                                            {
                                                                startargs((cgstemp_16 + 36));

                                                                /*
                                                                 * file
                                                                 * E:/git/klab-ecology-
                                                                 * component/etc/marxan/
                                                                 * marxan.c line 9074
                                                                 */
                                                                csscanf(csVarVal_13, strmarxan208, endargs());

                                                            }

                                                        } else {

                                                            /*
                                                             * file E:/git/klab-ecology-
                                                             * component/etc/marxan/marxan
                                                             * .c line 9077
                                                             */
                                                            if ((((
                                                            /*
                                                             * file E:/git/klab-ecology-
                                                             * component/etc/marxan/marxan
                                                             * .c line 9076
                                                             */
                                                            cstrcmp(strmarxan566, getMEMINT((int) ((ctemp_15
                                                                    + 0))))) == (0)) ? 1 : 0) != 0) {

                                                                {
                                                                    startargs((cgstemp_16 + 44));

                                                                    /*
                                                                     * file
                                                                     * E:/git/klab-ecology
                                                                     * -component/etc/
                                                                     * marxan/marxan.c
                                                                     * line 9078
                                                                     */
                                                                    csscanf(csVarVal_13, strmarxan208, endargs());

                                                                }

                                                            } else {

                                                                {
                                                                    startargs(getMEMINT((int) ((ctemp_15
                                                                            + 0))));

                                                                    /*
                                                                     * file
                                                                     * E:/git/klab-ecology
                                                                     * -component/etc/
                                                                     * marxan/marxan.c
                                                                     * line 9082
                                                                     */
                                                                    cShowWarningMessage((int) (strmarxan574), endargs());

                                                                    /*
                                                                     * file
                                                                     * E:/git/klab-ecology
                                                                     * -component/etc/
                                                                     * marxan/marxan.c
                                                                     * line 9083
                                                                     */
                                                                    cShowErrorMessage((int) (strmarxan575), 0);

                                                                }

                                                            }
                                                            ;

                                                        }
                                                        ;

                                                    }
                                                    ;

                                                }
                                                ;

                                            }
                                            ;

                                        }
                                        ;

                                    }
                                    ;

                                }
                                ;

                            }
                            ctemp_15 = getMEMINT((int) ((ctemp_15 + 4)));

                        }

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9089
                         */
                        if ((((getMEMINT((int) ((cgstemp_16 + 0)))) == ((-(1)))) ? 1 : 0) != 0) {
                            startargs(ci_11);

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 9089
                             */
                            cShowErrorMessage((int) (strmarxan576), endargs());

                        }
                        ;
                        cnewgslink_18 = (int) (
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9091
                         */
                        cmalloc(56));
                        setMEMINT((int) (((cnewgslink_18 + 0)
                                + 0)), (int) (getMEMINT((int) ((cgstemp_16 + 0)))));
                        setMEMINT((int) (((cnewgslink_18 + 0)
                                + 4)), (int) (getMEMINT((int) ((cgstemp_16 + 4)))));
                        setMEMDOUBLE((int) (((cnewgslink_18 + 0)
                                + 8)), (double) (getMEMDOUBLE((int) ((cgstemp_16 + 8)))));
                        setMEMDOUBLE((int) (((cnewgslink_18 + 0)
                                + 16)), (double) (getMEMDOUBLE((int) ((cgstemp_16 + 16)))));
                        setMEMINT((int) (((cnewgslink_18 + 0)
                                + 24)), (int) (getMEMINT((int) ((cgstemp_16 + 24)))));
                        setMEMDOUBLE((int) (((cnewgslink_18 + 0)
                                + 28)), (double) (getMEMDOUBLE((int) ((cgstemp_16 + 28)))));
                        setMEMDOUBLE((int) (((cnewgslink_18 + 0)
                                + 36)), (double) (getMEMDOUBLE((int) ((cgstemp_16 + 36)))));
                        setMEMINT((int) ((cnewgslink_18 + 52)), (int) (cgshead_17));
                        cgshead_17 = cnewgslink_18;

                    }

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9103 */
                cfclose(cfp_6);
                setMEMINT((int) (cgspno), (int) (ci_11));
                setMEMINT((int) (cgspec), (int) ((int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9107 */
                ccalloc(getMEMINT((int) (cgspno)), 52))));
                ci_11 = 0;
                lab_marxan300: while ((cgshead_17) != 0) {

                    {
                        setMEMINT((int) (((getMEMINT((int) (cgspec)) + (ci_11 * 52))
                                + 0)), (int) (getMEMINT((int) (((cgshead_17 + 0) + 0)))));
                        setMEMINT((int) (((getMEMINT((int) (cgspec)) + (ci_11 * 52))
                                + 4)), (int) (getMEMINT((int) (((cgshead_17 + 0) + 4)))));
                        setMEMDOUBLE((int) (((getMEMINT((int) (cgspec)) + (ci_11 * 52))
                                + 8)), (double) (getMEMDOUBLE((int) (((cgshead_17 + 0) + 8)))));
                        setMEMDOUBLE((int) (((getMEMINT((int) (cgspec)) + (ci_11 * 52))
                                + 16)), (double) (getMEMDOUBLE((int) (((cgshead_17 + 0) + 16)))));
                        setMEMINT((int) (((getMEMINT((int) (cgspec)) + (ci_11 * 52))
                                + 24)), (int) (getMEMINT((int) (((cgshead_17 + 0) + 24)))));
                        setMEMDOUBLE((int) (((getMEMINT((int) (cgspec)) + (ci_11 * 52))
                                + 28)), (double) (getMEMDOUBLE((int) (((cgshead_17 + 0) + 28)))));
                        setMEMDOUBLE((int) (((getMEMINT((int) (cgspec)) + (ci_11 * 52))
                                + 36)), (double) (getMEMDOUBLE((int) (((cgshead_17 + 0) + 36)))));
                        ci_11++;
                        cnewgslink_18 = cgshead_17;
                        cgshead_17 = getMEMINT((int) ((cgshead_17 + 52)));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9122
                         */
                        cfree(cnewgslink_18);

                    }

                }
                retval = ci_11;
                if (true) {
                    prevlevel();
                    return retval;
                }
                ;

            }
        }
        ;
        prevlevel();
        return 0;
    }

    static int strmarxan577 = jtocstr("Warning: Connection File %s not found ");
    static int strmarxan578 = jtocstr("Double connection definition %i %i \n");
    static int strmarxan579 = jtocstr("A connection is out of range %f %i %i \n");
    static int strmarxan580 = jtocstr("There were %i duplicate connection definitions.\n");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9130 */

    public static int cReadConnections(int cpuno, int cconnections, int cverbose, int cpu, int cPULookup, int cfnames) {
        nextlevel();
        if (true) {
            int label = 0;
            int retval = 0;
            int cfp_9 = 0;
            int cid1_10 = alloconstack(0);
            int cid2_11 = alloconstack(0);
            int cfcost_12 = alloconstack(0);
            int cicount_13 = 0;
            int cidup_14 = 0;
            int cbad_15 = 0;
            int cp_16 = 0;
            int creadname_17 = 0;
            int cnumvars_18 = 0;
            int civars_19 = 0;
            int csVarName_20 = 0;
            int csVarVal_21 = 0;
            int csLine_22 = 0;
            int y68 = 0;

            {
                cfp_9 = 0;
                setMEMINT((int) (cid1_10), (int) (0));
                setMEMINT((int) (cid2_11), (int) (0));
                setMEMINT((int) (cfcost_12), (int) (0));
                cicount_13 = 0;
                cidup_14 = 0;
                cbad_15 = 0;
                cp_16 = 0;
                creadname_17 = 0;
                cnumvars_18 = 3;
                civars_19 = 0;
                csVarName_20 = 0;
                csVarVal_21 = 0;
                csLine_22 = calloca(1000);
                creadname_17 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9142 */
                ccalloc(((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9142 */
                cstrlen(getMEMINT((int) ((cfnames + 24)))) +
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9142 */
                        cstrlen(getMEMINT((int) ((cfnames + 0))))) + 2), 1));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9143 */
                cstrcpy(creadname_17, getMEMINT((int) ((cfnames + 0))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9144 */
                cstrcat(creadname_17, getMEMINT((int) ((cfnames + 24))));
                cfp_9 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9145
                         */
                        cfopen(creadname_17, strmarxan191);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9147 */
                if ((((cfp_9) == ((int) (0))) ? 1 : 0) != 0) {

                    {
                        startargs(getMEMINT((int) ((cfnames + 24))));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9148
                         */
                        cShowGenProg((int) (strmarxan577), endargs());

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9149
                         */
                        cfree(creadname_17);
                        retval = 0;
                        if (true) {
                            prevlevel();
                            return retval;
                        }
                        ;

                    }

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9152 */
                cfree(creadname_17);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9154 */
                cfgets((int) (csLine_22), 999, cfp_9);
                lab_marxan301: while ((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9156 */
                cfgets((int) (csLine_22), 999, cfp_9)) != 0) {

                    {
                        cicount_13++;
                        csVarVal_21 =
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 9160
                                 */
                                cstrtok((int) (csLine_22), strmarxan193);
                        startargs(cid1_10);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9161
                         */
                        csscanf(csVarVal_21, strmarxan194, endargs());
                        csVarVal_21 =
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 9162
                                 */
                                cstrtok((int) (0), strmarxan193);
                        startargs(cid2_11);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9163
                         */
                        csscanf(csVarVal_21, strmarxan194, endargs());
                        csVarVal_21 =
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 9164
                                 */
                                cstrtok((int) (0), strmarxan193);
                        startargs(cfcost_12);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9165
                         */
                        csscanf(csVarVal_21, strmarxan208, endargs());
                        setMEMINT((int) (cid1_10), (int) (
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9167
                         */
                        cFastPUIDtoPUINDEX(cpuno, getMEMINT((int) (cid1_10)), (int) (cPULookup))));
                        setMEMINT((int) (cid2_11), (int) (
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9168
                         */
                        cFastPUIDtoPUINDEX(cpuno, getMEMINT((int) (cid2_11)), (int) (cPULookup))));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9171
                         */
                        if ((((getMEMINT((int) (cid1_10))) == (getMEMINT((int) (cid2_11)))) ? 1 : 0) != 0) {

                            {
                                y68 = (int) (((cconnections + ((int) (getMEMINT((int) (cid1_10))) * 16))
                                        + 4));
                                setMEMDOUBLE((int) (y68), (double) ((getMEMDOUBLE((int) (y68))
                                        + getMEMDOUBLE((int) (cfcost_12)))));
                                if (true) {
                                    continue lab_marxan301;
                                }
                                ;

                            }

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9182
                         */
                        if (((((((getMEMINT((int) (cid1_10))) >= (0)) ? 1 : 0)) != 0)
                                ? ((((getMEMINT((int) (cid1_10))) < (cpuno)) ? 1 : 0)) : 0) != 0) {

                            {
                                cp_16 = getMEMINT((int) (((cconnections
                                        + ((int) (getMEMINT((int) (cid1_10))) * 16)) + 0)));
                                cbad_15 = 0;
                                lab_marxan302: while ((cp_16) != 0) {

                                    {

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 9188
                                         */
                                        if ((((getMEMINT((int) ((cp_16
                                                + 0)))) == (getMEMINT((int) (cid2_11)))) ? 1 : 0) != 0) {
                                            cbad_15 = 1;

                                        }
                                        ;
                                        cp_16 = getMEMINT((int) ((cp_16 + 12)));

                                    }

                                }

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 9199
                                 */
                                if (cbad_15 != 0) {
                                    startargs(getMEMINT((int) (((cpu
                                            + ((int) (getMEMINT((int) (cid1_10))) * 64)) + 0))));
                                    addarg(getMEMINT((int) (((cpu + ((int) (getMEMINT((int) (cid2_11))) * 64))
                                            + 0))));

                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 9199
                                     */
                                    cShowDetProg((int) (strmarxan578), endargs());

                                } else {

                                    {
                                        sincMEMINT((int) (((cconnections
                                                + ((int) (getMEMINT((int) (cid1_10))) * 16)) + 12)), +1);
                                        cp_16 = (int) (
                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 9203
                                         */
                                        cmalloc(16));
                                        setMEMDOUBLE((int) ((cp_16
                                                + 4)), (double) (getMEMDOUBLE((int) (cfcost_12))));
                                        setMEMINT((int) ((cp_16 + 0)), (int) (getMEMINT((int) (cid2_11))));
                                        setMEMINT((int) ((cp_16 + 12)), (int) (getMEMINT((int) (((cconnections
                                                + ((int) (getMEMINT((int) (cid1_10))) * 16)) + 0)))));
                                        setMEMINT((int) (((cconnections
                                                + ((int) (getMEMINT((int) (cid1_10))) * 16))
                                                + 0)), (int) (cp_16));

                                    }

                                }
                                ;

                            }

                        } else {
                            startargs(getMEMDOUBLE((int) (cfcost_12)));
                            addarg(getMEMINT((int) (cid1_10)));
                            addarg(getMEMINT((int) (cid2_11)));

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 9226
                             */
                            cShowErrorMessage((int) (strmarxan579), endargs());

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9229
                         */
                        if (((((((getMEMINT((int) (cid2_11))) >= (0)) ? 1 : 0)) != 0)
                                ? ((((getMEMINT((int) (cid2_11))) < (cpuno)) ? 1 : 0)) : 0) != 0) {

                            {
                                cp_16 = getMEMINT((int) (((cconnections
                                        + ((int) (getMEMINT((int) (cid2_11))) * 16)) + 0)));
                                cbad_15 = 0;
                                lab_marxan303: while ((cp_16) != 0) {

                                    {

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 9235
                                         */
                                        if ((((getMEMINT((int) ((cp_16
                                                + 0)))) == (getMEMINT((int) (cid1_10)))) ? 1 : 0) != 0) {
                                            cbad_15 = 1;

                                        }
                                        ;
                                        cp_16 = getMEMINT((int) ((cp_16 + 12)));

                                    }

                                }

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 9245
                                 */
                                if ((((cbad_15) != 0) ? ((((cverbose) > (4)) ? 1 : 0)) : 0) != 0) {
                                    startargs(getMEMINT((int) (cid1_10)));
                                    addarg(getMEMINT((int) (cid2_11)));

                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 9245
                                     */
                                    cShowDetProg((int) (strmarxan578), endargs());

                                }
                                ;

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 9247
                                 */
                                if (cbad_15 != 0) {
                                    cidup_14++;

                                } else {

                                    {
                                        sincMEMINT((int) (((cconnections
                                                + ((int) (getMEMINT((int) (cid2_11))) * 16)) + 12)), +1);
                                        cp_16 = (int) (
                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 9251
                                         */
                                        cmalloc(16));
                                        setMEMDOUBLE((int) ((cp_16
                                                + 4)), (double) (getMEMDOUBLE((int) (cfcost_12))));
                                        setMEMINT((int) ((cp_16 + 0)), (int) (getMEMINT((int) (cid1_10))));
                                        setMEMINT((int) ((cp_16 + 12)), (int) (getMEMINT((int) (((cconnections
                                                + ((int) (getMEMINT((int) (cid2_11))) * 16)) + 0)))));
                                        setMEMINT((int) (((cconnections
                                                + ((int) (getMEMINT((int) (cid2_11))) * 16))
                                                + 0)), (int) (cp_16));

                                    }

                                }
                                ;

                            }

                        } else {
                            startargs(getMEMDOUBLE((int) (cfcost_12)));
                            addarg(getMEMINT((int) (cid1_10)));
                            addarg(getMEMINT((int) (cid2_11)));

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 9271
                             */
                            cShowErrorMessage((int) (strmarxan579), endargs());

                        }
                        ;

                    }

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9274 */
                cfclose(cfp_9);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9277 */
                if (cidup_14 != 0) {
                    startargs(cidup_14);

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9277 */
                    cShowGenProg((int) (strmarxan580), endargs());

                }
                ;
                retval = cicount_13;
                if (true) {
                    prevlevel();
                    return retval;
                }
                ;

            }
        }
        ;
        prevlevel();
        return 0;
    }

    static int strmarxan581 = jtocstr("PU v Species file %s not found\nAborting Program.");
    static int strmarxan582 = jtocstr("Error: PU v Species file %s is not in ascending order for PUID at record %i.\nAborting Program.");
    static int strmarxan583 = jtocstr("%i conservation values counted, %i big matrix size, %g%% density of matrix \n");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9289 */

    public static void cLoadSparseMatrix(int ciSMSize, int cSM, int cpuno, int cspno, int cPU, int cPULookup, int cSPLookup, int cfnames) {
        nextlevel();
        if (true) {
            int label = 0;
            int cfp_10 = 0;
            int creadname_11 = 0;
            int csLine_12 = 0;
            byte csValVal_13 = 0;
            int civars_14 = 0;
            int ciLastPUID_15 = 0;
            int csVarName_16 = 0;
            int csVarVal_17 = 0;
            int ci_18 = 0;
            int c_spid_19 = alloconstack(0);
            int c_puid_20 = alloconstack(0);
            int ciInternalSMSize_21 = 0;
            int ciBigMatrixSize_22 = 0;
            int camount_23 = alloconstack(0);
            double crDensity_24 = 0;
            double crInternalSMSize_25 = 0;
            double crBigMatrixSize_26 = 0;
            int cdebugbuffer_27 = 0;
            int y69 = 0;

            {
                cfp_10 = 0;
                creadname_11 = 0;
                csLine_12 = calloca(1000);
                csValVal_13 = 0;
                civars_14 = 0;
                ciLastPUID_15 = 0;
                csVarName_16 = 0;
                csVarVal_17 = 0;
                ci_18 = 0;
                setMEMINT((int) (c_spid_19), (int) (0));
                setMEMINT((int) (c_puid_20), (int) (0));
                ciInternalSMSize_21 = 0;
                ciBigMatrixSize_22 = 0;
                setMEMINT((int) (camount_23), (int) (0));
                crDensity_24 = 0;
                crInternalSMSize_25 = 0;
                crBigMatrixSize_26 = 0;
                cdebugbuffer_27 = calloca(300);
                creadname_11 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9301 */
                ccalloc(((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9301 */
                cstrlen(getMEMINT((int) ((cfnames + 16)))) +
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9301 */
                        cstrlen(getMEMINT((int) ((cfnames + 0))))) + 2), 1));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9303 */
                cstrcpy(creadname_11, getMEMINT((int) ((cfnames + 0))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9304 */
                cstrcat(creadname_11, getMEMINT((int) ((cfnames + 16))));
                cfp_10 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9305
                         */
                        cfopen(creadname_11, strmarxan191);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9307 */
                if ((((cfp_10) == ((int) (0))) ? 1 : 0) != 0) {
                    startargs(creadname_11);

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9307 */
                    cShowErrorMessage((int) (strmarxan581), endargs());

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9308 */
                cfree(creadname_11);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9311 */
                cfgets((int) (csLine_12), 999, cfp_10);
                lab_marxan304: while ((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9312 */
                cfgets((int) (csLine_12), 999, cfp_10)) != 0) {

                    {
                        ciInternalSMSize_21++;

                    }

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9317 */
                crewind(cfp_10);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9318 */
                cfgets((int) (csLine_12), 999, cfp_10);
                setMEMINT((int) (ciSMSize), (int) (ciInternalSMSize_21));
                setMEMINT((int) (cSM), (int) ((int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9323 */
                ccalloc(ciInternalSMSize_21, 16))));
                ciLastPUID_15 = (-(1));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9367 */
                ci_18 = 0;
                lab_marxan305: for (; (((ci_18) < (ciInternalSMSize_21)) ? 1 : 0) != 0;) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9332
                         */
                        cfgets((int) (csLine_12), 999, cfp_10);
                        csVarVal_17 =
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 9334
                                 */
                                cstrtok((int) (csLine_12), strmarxan193);
                        startargs(c_spid_19);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9335
                         */
                        csscanf(csVarVal_17, strmarxan194, endargs());
                        csVarVal_17 =
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 9336
                                 */
                                cstrtok((int) (0), strmarxan193);
                        startargs(c_puid_20);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9337
                         */
                        csscanf(csVarVal_17, strmarxan194, endargs());
                        csVarVal_17 =
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 9338
                                 */
                                cstrtok((int) (0), strmarxan193);
                        startargs(camount_23);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9339
                         */
                        csscanf(csVarVal_17, strmarxan208, endargs());

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9342
                         */
                        if ((((getMEMINT((int) (c_puid_20))) < (ciLastPUID_15)) ? 1 : 0) != 0) {

                            {
                                startargs(getMEMINT((int) ((cfnames + 16))));
                                addarg((ci_18 + 1));

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 9346
                                 */
                                csprintf((int) (cdebugbuffer_27), strmarxan582, endargs());

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 9347
                                 */
                                cAppendDebugTraceFile((int) (cdebugbuffer_27), 0);
                                startargs(getMEMINT((int) ((cfnames + 16))));
                                addarg((ci_18 + 1));

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 9350
                                 */
                                cShowErrorMessage((int) (strmarxan582), endargs());

                            }

                        }
                        ;
                        ciLastPUID_15 = getMEMINT((int) (c_puid_20));
                        setMEMINT((int) (c_puid_20), (int) (
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9355
                         */
                        cFastPUIDtoPUINDEX(cpuno, getMEMINT((int) (c_puid_20)), (int) (cPULookup))));
                        setMEMINT((int) (c_spid_19), (int) (
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9356
                         */
                        cFastSPIDtoSPINDEX(cspno, getMEMINT((int) (c_spid_19)), (int) (cSPLookup))));
                        y69 = (int) (((cPU + ((int) (getMEMINT((int) (c_puid_20))) * 64)) + 32));
                        setMEMINT((int) (y69), (int) ((getMEMINT((int) (y69)) + 1)));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9362
                         */
                        if ((((getMEMINT((int) (((cPU + ((int) (getMEMINT((int) (c_puid_20))) * 64))
                                + 32)))) == (1)) ? 1 : 0) != 0) {
                            setMEMINT((int) (((cPU + ((int) (getMEMINT((int) (c_puid_20))) * 64))
                                    + 36)), (int) (ci_18));

                        }
                        ;
                        setMEMDOUBLE((int) (((getMEMINT((int) (cSM)) + (ci_18 * 16))
                                + 0)), (double) (getMEMDOUBLE((int) (camount_23))));
                        setMEMINT((int) (((getMEMINT((int) (cSM)) + (ci_18 * 16)) + 8)), (int) (0));
                        setMEMINT((int) (((getMEMINT((int) (cSM)) + (ci_18 * 16))
                                + 12)), (int) (getMEMINT((int) (c_spid_19))));

                    }
                    ci_18++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9369 */
                cfclose(cfp_10);
                ciBigMatrixSize_22 = (cpuno * cspno);
                crInternalSMSize_25 = ciInternalSMSize_21;
                crBigMatrixSize_26 = ciBigMatrixSize_22;
                crDensity_24 = ((crInternalSMSize_25 / crBigMatrixSize_26) * (double) (100));
                startargs(ciInternalSMSize_21);
                addarg(ciBigMatrixSize_22);
                addarg(crDensity_24);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9378 */
                cShowGenProg((int) (strmarxan583), endargs());

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan584 = jtocstr("Error: PU v Species file %s is not in ascending order for SPID at record %i.\nAborting Program.");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9386 */

    public static void cLoadSparseMatrix_sporder(int ciSMSize, int cSM, int cpuno, int cspno, int cPULookup, int cSPLookup, int cfnames) {
        nextlevel();
        if (true) {
            int label = 0;
            int cfp_9 = 0;
            int creadname_10 = 0;
            int csLine_11 = 0;
            int csVarName_12 = 0;
            int csVarVal_13 = 0;
            int ci_14 = 0;
            int c_spid_15 = alloconstack(0);
            int cspid_16 = 0;
            int c_puid_17 = alloconstack(0);
            int ciInternalSMSize_18 = 0;
            int ciBigMatrixSize_19 = 0;
            int ciLastSPID_20 = 0;
            int camount_21 = alloconstack(0);
            double crDensity_22 = 0;
            double crInternalSMSize_23 = 0;
            double crBigMatrixSize_24 = 0;
            int cdebugbuffer_25 = 0;
            int y70 = 0;

            {
                cfp_9 = 0;
                creadname_10 = 0;
                csLine_11 = calloca(500);
                csVarName_12 = 0;
                csVarVal_13 = 0;
                ci_14 = 0;
                setMEMINT((int) (c_spid_15), (int) (0));
                cspid_16 = 0;
                setMEMINT((int) (c_puid_17), (int) (0));
                ciInternalSMSize_18 = 0;
                ciBigMatrixSize_19 = 0;
                ciLastSPID_20 = 0;
                setMEMINT((int) (camount_21), (int) (0));
                crDensity_22 = 0;
                crInternalSMSize_23 = 0;
                crBigMatrixSize_24 = 0;
                cdebugbuffer_25 = calloca(300);
                creadname_10 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9395 */
                ccalloc(((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9395 */
                cstrlen(getMEMINT((int) ((cfnames + 20)))) +
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9395 */
                        cstrlen(getMEMINT((int) ((cfnames + 0))))) + 2), 1));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9397 */
                cstrcpy(creadname_10, getMEMINT((int) ((cfnames + 0))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9398 */
                cstrcat(creadname_10, getMEMINT((int) ((cfnames + 20))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9400 */
                cfp_9 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9399
                         */
                        cfopen(creadname_10, strmarxan191);
                if ((((cfp_9) == ((int) (0))) ? 1 : 0) != 0) {
                    startargs(creadname_10);

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9400 */
                    cShowErrorMessage((int) (strmarxan581), endargs());

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9401 */
                cfree(creadname_10);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9404 */
                cfgets((int) (csLine_11), (500 - 1), cfp_9);
                lab_marxan306: while ((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9405 */
                cfgets((int) (csLine_11), (500 - 1), cfp_9)) != 0) {
                    ciInternalSMSize_18++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9408 */
                crewind(cfp_9);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9409 */
                cfgets((int) (csLine_11), (500 - 1), cfp_9);
                setMEMINT((int) (ciSMSize), (int) (ciInternalSMSize_18));
                setMEMINT((int) (cSM), (int) ((int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9414 */
                ccalloc(ciInternalSMSize_18, 12))));
                ciLastSPID_20 = (-(1));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9457 */
                ci_14 = 0;
                lab_marxan307: for (; (((ci_14) < (ciInternalSMSize_18)) ? 1 : 0) != 0;) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9423
                         */
                        cfgets((int) (csLine_11), (500 - 1), cfp_9);
                        csVarVal_13 =
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 9425
                                 */
                                cstrtok((int) (csLine_11), strmarxan193);
                        startargs(c_spid_15);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9426
                         */
                        csscanf(csVarVal_13, strmarxan194, endargs());
                        csVarVal_13 =
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 9427
                                 */
                                cstrtok((int) (0), strmarxan193);
                        startargs(c_puid_17);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9428
                         */
                        csscanf(csVarVal_13, strmarxan194, endargs());
                        csVarVal_13 =
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 9429
                                 */
                                cstrtok((int) (0), strmarxan193);
                        startargs(camount_21);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9430
                         */
                        csscanf(csVarVal_13, strmarxan208, endargs());

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9433
                         */
                        if ((((getMEMINT((int) (c_spid_15))) < (ciLastSPID_20)) ? 1 : 0) != 0) {

                            {
                                startargs(getMEMINT((int) ((cfnames + 16))));
                                addarg((ci_14 + 1));

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 9437
                                 */
                                csprintf((int) (cdebugbuffer_25), strmarxan584, endargs());

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 9438
                                 */
                                cAppendDebugTraceFile((int) (cdebugbuffer_25), 0);
                                startargs(getMEMINT((int) ((cfnames + 16))));
                                addarg((ci_14 + 1));

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 9441
                                 */
                                cShowErrorMessage((int) (strmarxan584), endargs());

                            }

                        }
                        ;
                        ciLastSPID_20 = getMEMINT((int) (c_spid_15));
                        setMEMINT((int) (c_puid_17), (int) (
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9446
                         */
                        cFastPUIDtoPUINDEX(cpuno, getMEMINT((int) (c_puid_17)), (int) (cPULookup))));
                        cspid_16 =
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 9447
                                 */
                                cFastSPIDtoSPINDEX(cspno, getMEMINT((int) (c_spid_15)), (int) (cSPLookup));
                        y70 = (int) (((getMEMINT((int) (marxan.cspec)) + (cspid_16 * 100)) + 92));
                        setMEMINT((int) (y70), (int) ((getMEMINT((int) (y70)) + 1)));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9453
                         */
                        if ((((getMEMINT((int) (((getMEMINT((int) (marxan.cspec)) + (cspid_16 * 100))
                                + 92)))) == (1)) ? 1 : 0) != 0) {
                            setMEMINT((int) (((getMEMINT((int) (marxan.cspec)) + (cspid_16 * 100))
                                    + 96)), (int) (ci_14));

                        }
                        ;
                        setMEMDOUBLE((int) (((getMEMINT((int) (cSM)) + (ci_14 * 12))
                                + 0)), (double) (getMEMDOUBLE((int) (camount_21))));
                        setMEMINT((int) (((getMEMINT((int) (cSM)) + (ci_14 * 12))
                                + 8)), (int) (getMEMINT((int) (c_puid_17))));

                    }
                    ci_14++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9459 */
                cfclose(cfp_9);
                ciBigMatrixSize_19 = (cpuno * cspno);
                crInternalSMSize_23 = ciInternalSMSize_18;
                crBigMatrixSize_24 = ciBigMatrixSize_19;
                crDensity_22 = ((crInternalSMSize_23 / crBigMatrixSize_24) * (double) (100));
                startargs(ciInternalSMSize_18);
                addarg(ciBigMatrixSize_19);
                addarg(crDensity_22);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9468 */
                cShowGenProg((int) (strmarxan583), endargs());

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan585 = jtocstr("pu_richness_offset.csv");
    static int strmarxan586 = jtocstr("cannot create PU_richness_offset file %s\n");
    static int strmarxan587 = jtocstr("puindex,richness,offset\n");
    static int strmarxan588 = jtocstr("%i,%i,%i\n");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9475 */

    public static void cDumpPU_richness_offset(int cpuno, int cPU, int cfnames) {
        nextlevel();
        if (true) {
            int label = 0;
            int cfp_5 = 0;
            int ci_6 = 0;
            int cwritename_7 = 0;

            {
                cfp_5 = 0;
                ci_6 = 0;
                cwritename_7 = 0;
                cwritename_7 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9480 */
                ccalloc(((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9480 */
                cstrlen(getMEMINT((int) ((cfnames + 4)))) +
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9480 */
                        cstrlen(strmarxan585)) + 2), 1));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9481 */
                cstrcpy(cwritename_7, getMEMINT((int) ((cfnames + 4))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9482 */
                cstrcat(cwritename_7, strmarxan585);
                cfp_5 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9483
                         */
                        cfopen(cwritename_7, strmarxan198);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9485 */
                if ((((cfp_5) == ((int) (0))) ? 1 : 0) != 0) {
                    startargs(cwritename_7);

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9485 */
                    cShowErrorMessage((int) (strmarxan586), endargs());

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9486 */
                cfree(cwritename_7);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9488 */
                cfputs(strmarxan587, cfp_5);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9492 */
                ci_6 = 0;
                lab_marxan308: for (; (((ci_6) < (cpuno)) ? 1 : 0) != 0;) {

                    {
                        startargs(ci_6);
                        addarg(getMEMINT((int) (((cPU + ((int) (ci_6) * 64)) + 32))));
                        addarg(getMEMINT((int) (((cPU + ((int) (ci_6) * 64)) + 36))));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9491
                         */
                        cfprintf(cfp_5, strmarxan588, endargs());

                    }
                    ci_6++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9494 */
                cfclose(cfp_5);

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan589 = jtocstr("sm.csv");
    static int strmarxan590 = jtocstr("cannot create PUvSpecies file %s\n");
    static int strmarxan591 = jtocstr("amount,clump,spid\n");
    static int strmarxan592 = jtocstr("%g,%i,%i\n");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9500 */

    public static void cDumpSparseMatrix(int ciSMno, int cSM, int cfnames) {
        nextlevel();
        if (true) {
            int label = 0;
            int cfp_5 = 0;
            int ci_6 = 0;
            int cwritename_7 = 0;

            {
                cfp_5 = 0;
                ci_6 = 0;
                cwritename_7 = 0;
                cwritename_7 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9505 */
                ccalloc(((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9505 */
                cstrlen(getMEMINT((int) ((cfnames + 4)))) +
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9505 */
                        cstrlen(strmarxan589)) + 2), 1));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9506 */
                cstrcpy(cwritename_7, getMEMINT((int) ((cfnames + 4))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9507 */
                cstrcat(cwritename_7, strmarxan589);
                cfp_5 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9508
                         */
                        cfopen(cwritename_7, strmarxan198);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9510 */
                if ((((cfp_5) == ((int) (0))) ? 1 : 0) != 0) {
                    startargs(cwritename_7);

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9510 */
                    cShowErrorMessage((int) (strmarxan590), endargs());

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9511 */
                cfree(cwritename_7);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9513 */
                cfputs(strmarxan591, cfp_5);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9517 */
                ci_6 = 0;
                lab_marxan309: for (; (((ci_6) < (ciSMno)) ? 1 : 0) != 0;) {

                    {
                        startargs(getMEMDOUBLE((int) (((cSM + ((int) (ci_6) * 16)) + 0))));
                        addarg(getMEMINT((int) (((cSM + ((int) (ci_6) * 16)) + 8))));
                        addarg(getMEMINT((int) (((cSM + ((int) (ci_6) * 16)) + 12))));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9516
                         */
                        cfprintf(cfp_5, strmarxan592, endargs());

                    }
                    ci_6++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9519 */
                cfclose(cfp_5);

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan593 = jtocstr("debug.out");
    static int strmarxan594 = jtocstr("Debugging Output! \n");
    static int strmarxan595 = jtocstr("iseed is %i \n");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9537 */

    public static void cSaveSeed(int ciseed) {
        nextlevel();
        if (true) {
            int label = 0;
            int cfp_3 = 0;

            {
                cfp_3 = 0;
                cfp_3 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9539
                         */
                        cfopen(strmarxan593, strmarxan198);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9540 */
                cfprintf(cfp_3, strmarxan594, 0);
                startargs(ciseed);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9541 */
                cfprintf(cfp_3, strmarxan595, endargs());

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9542 */
                cfclose(cfp_3);

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan596 = jtocstr("   ");
    static int strmarxan597 = jtocstr("\"");
    static int strmarxan598 = jtocstr(" PuCount");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9547 */

    public static void cCountPuZones2(int csNames, int csCounts, int cimode, int cpuno, int cR) {
        nextlevel();
        if (true) {
            int label = 0;
            int ci_7 = 0;
            int cZoneCount_8 = 0;
            int csCount_9 = 0;
            int csDelimiter_10 = 0;
            int y71 = 0;

            {
                ci_7 = 0;
                cZoneCount_8 = 0;
                csCount_9 = calloca(20);
                csDelimiter_10 = calloca(20);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9553 */
                if ((((cimode) > (1)) ? 1 : 0) != 0) {

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9553 */
                    cstrcpy((int) (csDelimiter_10), strmarxan212);

                } else {

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9555 */
                    cstrcpy((int) (csDelimiter_10), strmarxan596);

                }
                ;
                cZoneCount_8 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9557 */
                ccalloc(getMEMINT((int) (marxan.ciZoneCount)), 4));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9559 */
                ci_7 = 0;
                lab_marxan310: for (; (((ci_7) < (getMEMINT((int) (marxan.ciZoneCount)))) ? 1 : 0) != 0;) {
                    setMEMINT((int) ((cZoneCount_8 + (ci_7 * 4))), (int) (0));
                    ci_7++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9565 */
                ci_7 = 0;
                lab_marxan311: for (; (((ci_7) < (cpuno)) ? 1 : 0) != 0;) {

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9563 */
                    if ((((getMEMINT((int) ((cR + ((int) (ci_7) * 4))))) > (0)) ? 1 : 0) != 0) {
                        y71 = (int) ((cZoneCount_8
                                + ((getMEMINT((int) ((cR + ((int) (ci_7) * 4)))) - 1) * 4)));
                        setMEMINT((int) (y71), (int) ((getMEMINT((int) (y71)) + 1)));

                    }
                    ;
                    ci_7++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9565 */
                cstrcpy(csNames, strmarxan379);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9566 */
                cstrcpy(csCounts, strmarxan379);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9580 */
                ci_7 = 0;
                lab_marxan312: for (; (((ci_7) < (getMEMINT((int) (marxan.ciZoneCount)))) ? 1 : 0) != 0;) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9569
                         */
                        cstrcat(csNames, (int) (csDelimiter_10));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9571
                         */
                        if ((((cimode) == (2)) ? 1 : 0) != 0) {

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 9571
                             */
                            cstrcat(csNames, strmarxan597);

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9572
                         */
                        cstrcat(csNames, (int) (((getMEMINT((int) (marxan.cZones)) + (ci_7 * 254)) + 4)));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9573
                         */
                        cstrcat(csNames, strmarxan598);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9575
                         */
                        if ((((cimode) == (2)) ? 1 : 0) != 0) {

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 9575
                             */
                            cstrcat(csNames, strmarxan597);

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9577
                         */
                        cstrcat(csCounts, (int) (csDelimiter_10));
                        startargs(getMEMINT((int) ((cZoneCount_8 + (ci_7 * 4)))));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9578
                         */
                        csprintf((int) (csCount_9), strmarxan234, endargs());

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9579
                         */
                        cstrcat(csCounts, (int) (csCount_9));

                    }
                    ci_7++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9582 */
                cfree(cZoneCount_8);

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan599 = jtocstr("CostPuZones zone %i zonecost %f\n");
    static int strmarxan600 = jtocstr(" Cost");
    static int strmarxan601 = jtocstr("%f");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9586 */

    public static void cCostPuZones(int csNames, int csCounts, int cimode, int cpuno, int cR) {
        nextlevel();
        if (true) {
            int label = 0;
            int ci_7 = 0;
            int cZoneCosts_8 = 0;
            int csCount_9 = 0;
            int csDelimiter_10 = 0;
            double crZoneCost_11 = 0;
            int cdebugbuffer_12 = 0;
            int y72 = 0;

            {
                ci_7 = 0;
                cZoneCosts_8 = 0;
                csCount_9 = calloca(1000);
                csDelimiter_10 = calloca(20);
                crZoneCost_11 = 0;
                cdebugbuffer_12 = calloca(1000);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9597 */
                if ((((cimode) > (1)) ? 1 : 0) != 0) {

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9597 */
                    cstrcpy((int) (csDelimiter_10), strmarxan212);

                } else {

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9599 */
                    cstrcpy((int) (csDelimiter_10), strmarxan596);

                }
                ;
                cZoneCosts_8 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9601 */
                ccalloc(getMEMINT((int) (marxan.ciZoneCount)), 8));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9603 */
                ci_7 = 0;
                lab_marxan313: for (; (((ci_7) < (getMEMINT((int) (marxan.ciZoneCount)))) ? 1 : 0) != 0;) {
                    setMEMDOUBLE((int) ((cZoneCosts_8 + (ci_7 * 8))), (double) (0));
                    ci_7++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9615 */
                ci_7 = 0;
                lab_marxan314: for (; (((ci_7) < (cpuno)) ? 1 : 0) != 0;) {

                    {
                        crZoneCost_11 =
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 9607
                                 */
                                marxan.cReturnPuZoneCost(ci_7, getMEMINT((int) ((cR + ((int) (ci_7) * 4)))));
                        y72 = (int) ((cZoneCosts_8
                                + ((getMEMINT((int) ((cR + ((int) (ci_7) * 4)))) - 1) * 8)));
                        setMEMDOUBLE((int) (y72), (double) ((getMEMDOUBLE((int) (y72)) + crZoneCost_11)));

                    }
                    ci_7++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9617 */
                cstrcpy(csNames, strmarxan379);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9618 */
                cstrcpy(csCounts, strmarxan379);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9637 */
                ci_7 = 0;
                lab_marxan315: for (; (((ci_7) < (getMEMINT((int) (marxan.ciZoneCount)))) ? 1 : 0) != 0;) {

                    {
                        startargs(ci_7);
                        addarg(getMEMDOUBLE((int) ((cZoneCosts_8 + (ci_7 * 8)))));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9622
                         */
                        csprintf((int) (cdebugbuffer_12), strmarxan599, endargs());

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9623
                         */
                        cAppendDebugTraceFile((int) (cdebugbuffer_12), 0);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9626
                         */
                        cstrcat(csNames, (int) (csDelimiter_10));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9628
                         */
                        if ((((cimode) == (2)) ? 1 : 0) != 0) {

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 9628
                             */
                            cstrcat(csNames, strmarxan597);

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9629
                         */
                        cstrcat(csNames, (int) (((getMEMINT((int) (marxan.cZones)) + (ci_7 * 254)) + 4)));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9630
                         */
                        cstrcat(csNames, strmarxan600);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9632
                         */
                        if ((((cimode) == (2)) ? 1 : 0) != 0) {

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 9632
                             */
                            cstrcat(csNames, strmarxan597);

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9634
                         */
                        cstrcat(csCounts, (int) (csDelimiter_10));
                        startargs(getMEMDOUBLE((int) ((cZoneCosts_8 + (ci_7 * 8)))));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9635
                         */
                        csprintf((int) (csCount_9), strmarxan601, endargs());

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9636
                         */
                        cstrcat(csCounts, (int) (csCount_9));

                    }
                    ci_7++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9639 */
                cfree(cZoneCosts_8);

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan602 = jtocstr("Cannot save output to %s \n");
    static int strmarxan603 = jtocstr("\"Run Number\",\"Score\",\"Cost\",\"Planning Units\"%s%s");
    static int strmarxan604 = jtocstr(",\"Connection Strength\",\"Penalty\",\"Shortfall\",\"Missing_Values\",\"MPM\"\n");
    static int strmarxan605 = jtocstr("Run no.    Score      Cost   Planning Units  %s%s");
    static int strmarxan606 = jtocstr("  Connection_Strength   Penalty  Shortfall Missing_Values MPM\n");
    static int strmarxan607 = jtocstr("%i,%f,%f,%i%s%s,%f,%f,%f,%i,%f\n");
    static int strmarxan608 = jtocstr("%-4i    %8.2f  %8.2f  %8i%s%s     %8.2f         %8.2f   %8.2f       %i   %8.2f\n");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9647 */

    public static void cOutputSummary(int cpuno, int cspno, int cR, int cspec, int creserve, int citn, int csavename, double cmisslevel, int cimode) {
        nextlevel();
        if (true) {
            int label = 0;
            int cfp_11 = 0;
            int ci_12 = 0;
            int cino_13 = 0;
            int cisp_14 = 0;
            int cshortfall_15 = alloconstack(0);
            double cconnectiontemp_16 = 0;
            int crMPM_17 = alloconstack(0);
            int csZoneNames_18 = 0;
            int csZonePuCount_19 = 0;
            int csZoneCostNames_20 = 0;
            int csZoneCost_21 = 0;

            {
                cfp_11 = 0;
                ci_12 = 0;
                cino_13 = 0;
                cisp_14 = 0;
                setMEMINT((int) (cshortfall_15), (int) (0));
                cconnectiontemp_16 = 0;
                setMEMINT((int) (crMPM_17), (int) (0));
                csZoneNames_18 = calloca(1000);
                csZonePuCount_19 = calloca(1000);
                csZoneCostNames_20 = calloca(1000);
                csZoneCost_21 = calloca(1000);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9653 */
                cCountPuZones2((int) (csZoneNames_18), (int) (csZonePuCount_19), cimode, cpuno, (int) (cR));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9654 */
                cCostPuZones((int) (csZoneCostNames_20), (int) (csZoneCost_21), cimode, cpuno, (int) (cR));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9657 */
                if ((((citn) == (1)) ? 1 : 0) != 0) {
                    cfp_11 =
                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 9657
                             */
                            cfopen((int) (csavename), strmarxan198);

                } else {
                    cfp_11 =
                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 9659
                             */
                            cfopen((int) (csavename), strmarxan454);

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9661 */
                if (((cfp_11 == 0) ? 1 : 0) != 0) {
                    startargs(csavename);

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9661 */
                    cShowErrorMessage((int) (strmarxan602), endargs());

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9667 */
                ci_12 = 0;
                lab_marxan316: for (; (((ci_12) <= ((cpuno - 1))) ? 1 : 0) != 0;) {

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9666 */
                    if ((((getMEMINT((int) ((cR + ((int) (ci_12) * 4))))) != (0)) ? 1 : 0) != 0) {
                        cino_13++;

                    }
                    ;
                    ci_12++;

                }
                cisp_14 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9667
                         */
                        cCountMissing(cspno, (int) (cspec), cmisslevel, cshortfall_15, crMPM_17);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9671 */
                ci_12 = 0;
                cconnectiontemp_16 = 0;
                lab_marxan317: for (; (((ci_12) < (cpuno)) ? 1 : 0) != 0;) {

                    {
                        cconnectiontemp_16 +=
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 9670
                                 */
                                cConnectionCost2Linear(ci_12, getMEMINT((int) ((cR + ((int) (ci_12)
                                        * 4)))), (int) (getMEMINT((int) (marxan.cpu))), (int) (getMEMINT((int) (marxan.cconnections))), (int) (cR), 1, 0);

                    }
                    ci_12++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9674 */
                if ((((citn) == (1)) ? 1 : 0) != 0) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9676
                         */
                        if ((((cimode) > (1)) ? 1 : 0) != 0) {

                            {
                                startargs(csZoneNames_18);
                                addarg(csZoneCostNames_20);

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 9677
                                 */
                                cfprintf(cfp_11, strmarxan603, endargs());

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 9678
                                 */
                                cfprintf(cfp_11, strmarxan604, 0);

                            }

                        } else {

                            {
                                startargs(csZoneNames_18);
                                addarg(csZoneCostNames_20);

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 9682
                                 */
                                cfprintf(cfp_11, strmarxan605, endargs());

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 9683
                                 */
                                cfprintf(cfp_11, strmarxan606, 0);

                            }

                        }
                        ;

                    }

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9687 */
                if ((((cimode) > (1)) ? 1 : 0) != 0) {
                    startargs(citn);
                    addarg(getMEMDOUBLE((int) ((creserve + 0))));
                    addarg(getMEMDOUBLE((int) ((creserve + 28))));
                    addarg(cino_13);
                    addarg(csZonePuCount_19);
                    addarg(csZoneCost_21);
                    addarg(cconnectiontemp_16);
                    addarg(getMEMDOUBLE((int) ((creserve + 20))));
                    addarg(getMEMDOUBLE((int) (cshortfall_15)));
                    addarg(cisp_14);
                    addarg(getMEMDOUBLE((int) (crMPM_17)));

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9688 */
                    cfprintf(cfp_11, strmarxan607, endargs());

                } else {
                    startargs(citn);
                    addarg(getMEMDOUBLE((int) ((creserve + 0))));
                    addarg(getMEMDOUBLE((int) ((creserve + 28))));
                    addarg(cino_13);
                    addarg(csZonePuCount_19);
                    addarg(csZoneCost_21);
                    addarg(cconnectiontemp_16);
                    addarg(getMEMDOUBLE((int) ((creserve + 20))));
                    addarg(getMEMDOUBLE((int) (cshortfall_15)));
                    addarg(cisp_14);
                    addarg(getMEMDOUBLE((int) (crMPM_17)));

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9691 */
                    cfprintf(cfp_11, strmarxan608, endargs());

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9692 */
                cfclose(cfp_11);
                if (true) {
                    prevlevel();
                    return;
                }
                ;

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan609 = jtocstr("i,name,type,sname,target,prop,targetocc,spf,penalty,amount,occurrence,sepdistance,sepnum,separation,clumps,target2,richness,offset\n");
    static int strmarxan610 = jtocstr("%i,%i,%i,%s,%f,%f,%i,%f,%f,%f,%i,%f,%i,%i,%i,%f,%i,%i");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9698 */

    public static void cOutputSpeciesData(int cspno, int cspec, int csavename) {
        nextlevel();
        if (true) {
            int label = 0;
            int cfp_5 = 0;
            int ci_6 = 0;

            {
                cfp_5 = 0;
                ci_6 = 0;
                cfp_5 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9702
                         */
                        cfopen((int) (csavename), strmarxan198);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9704 */
                if (((cfp_5 == 0) ? 1 : 0) != 0) {
                    startargs(csavename);

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9704 */
                    cShowErrorMessage((int) (strmarxan602), endargs());

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9706 */
                cfprintf(cfp_5, strmarxan609, 0);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9712 */
                ci_6 = 0;
                lab_marxan318: for (; (((ci_6) < (cspno)) ? 1 : 0) != 0;) {
                    startargs(ci_6);
                    addarg(getMEMINT((int) (((cspec + ((int) (ci_6) * 100)) + 0))));
                    addarg(getMEMINT((int) (((cspec + ((int) (ci_6) * 100)) + 4))));
                    addarg(getMEMINT((int) (((cspec + ((int) (ci_6) * 100)) + 8))));
                    addarg(getMEMDOUBLE((int) (((cspec + ((int) (ci_6) * 100)) + 12))));
                    addarg(getMEMDOUBLE((int) (((cspec + ((int) (ci_6) * 100)) + 20))));
                    addarg(getMEMINT((int) (((cspec + ((int) (ci_6) * 100)) + 28))));
                    addarg(getMEMDOUBLE((int) (((cspec + ((int) (ci_6) * 100)) + 32))));
                    addarg(getMEMDOUBLE((int) (((cspec + ((int) (ci_6) * 100)) + 40))));
                    addarg(getMEMDOUBLE((int) (((cspec + ((int) (ci_6) * 100)) + 48))));
                    addarg(getMEMINT((int) (((cspec + ((int) (ci_6) * 100)) + 56))));
                    addarg(getMEMDOUBLE((int) (((cspec + ((int) (ci_6) * 100)) + 60))));
                    addarg(getMEMINT((int) (((cspec + ((int) (ci_6) * 100)) + 68))));
                    addarg(getMEMINT((int) (((cspec + ((int) (ci_6) * 100)) + 72))));
                    addarg(getMEMINT((int) (((cspec + ((int) (ci_6) * 100)) + 76))));
                    addarg(getMEMDOUBLE((int) (((cspec + ((int) (ci_6) * 100)) + 80))));
                    addarg(getMEMINT((int) (((cspec + ((int) (ci_6) * 100)) + 92))));
                    addarg(getMEMINT((int) (((cspec + ((int) (ci_6) * 100)) + 96))));

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9712 */
                    cfprintf(cfp_5, strmarxan610, endargs());
                    ci_6++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9714 */
                cfclose(cfp_5);

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan611 = jtocstr("    ");
    static int strmarxan612 = jtocstr("spid%spenalty\n");
    static int strmarxan613 = jtocstr("%i%s%g\n");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9718 */

    public static void cOutputPenalty(int cspno, int cspec, int csavename, int ciOutputType) {
        nextlevel();
        if (true) {
            int label = 0;
            int cfp_6 = 0;
            int ci_7 = 0;
            int csDelimiter_8 = 0;

            {
                cfp_6 = 0;
                ci_7 = 0;
                csDelimiter_8 = calloca(20);
                cfp_6 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9723
                         */
                        cfopen((int) (csavename), strmarxan198);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9725 */
                if (((cfp_6 == 0) ? 1 : 0) != 0) {
                    startargs(csavename);

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9725 */
                    cShowErrorMessage((int) (strmarxan602), endargs());

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9728 */
                if ((((ciOutputType) == (3)) ? 1 : 0) != 0) {

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9728 */
                    cstrcpy((int) (csDelimiter_8), strmarxan212);

                } else {

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9730 */
                    cstrcpy((int) (csDelimiter_8), strmarxan611);

                }
                ;
                startargs(csDelimiter_8);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9732 */
                cfprintf(cfp_6, strmarxan612, endargs());

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9736 */
                ci_7 = 0;
                lab_marxan319: for (; (((ci_7) < (cspno)) ? 1 : 0) != 0;) {
                    startargs(getMEMINT((int) (((cspec + ((int) (ci_7) * 100)) + 0))));
                    addarg(csDelimiter_8);
                    addarg(getMEMDOUBLE((int) (((cspec + ((int) (ci_7) * 100)) + 40))));

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9736 */
                    cfprintf(cfp_6, strmarxan613, endargs());
                    ci_7++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9738 */
                cfclose(cfp_6);

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan614 = jtocstr("penalty file %s not found\nAborting Program.");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9742 */

    public static void cLoadPenalty(int cspno, int cspec, int cfnames) {
        nextlevel();
        if (true) {
            int label = 0;
            int cfp_5 = 0;
            int ci_6 = 0;
            int c_spid_7 = alloconstack(0);
            int creadname_8 = 0;
            int csLine_9 = 0;
            int csVarName_10 = 0;
            int csVarVal_11 = 0;

            {
                cfp_5 = 0;
                ci_6 = 0;
                setMEMINT((int) (c_spid_7), (int) (0));
                creadname_8 = 0;
                csLine_9 = calloca(500);
                csVarName_10 = 0;
                csVarVal_11 = 0;
                creadname_8 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9747 */
                ccalloc(((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9747 */
                cstrlen(getMEMINT((int) ((cfnames + 76)))) +
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9747 */
                        cstrlen(getMEMINT((int) ((cfnames + 0))))) + 2), 1));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9749 */
                cstrcpy(creadname_8, getMEMINT((int) ((cfnames + 0))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9750 */
                cstrcat(creadname_8, getMEMINT((int) ((cfnames + 76))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9752 */
                cfp_5 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9751
                         */
                        cfopen(creadname_8, strmarxan191);
                if ((((cfp_5) == ((int) (0))) ? 1 : 0) != 0) {
                    startargs(creadname_8);

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9752 */
                    cShowErrorMessage((int) (strmarxan614), endargs());

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9753 */
                cfree(creadname_8);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9756 */
                cfgets((int) (csLine_9), (500 - 1), cfp_5);
                ci_6 = 0;
                lab_marxan320: while ((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9760 */
                cfgets((int) (csLine_9), (500 - 1), cfp_5)) != 0) {

                    {
                        csVarVal_11 =
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 9762
                                 */
                                cstrtok((int) (csLine_9), strmarxan193);
                        startargs(c_spid_7);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9763
                         */
                        csscanf(csVarVal_11, strmarxan194, endargs());
                        csVarVal_11 =
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 9764
                                 */
                                cstrtok((int) (0), strmarxan193);
                        startargs(((cspec + ((int) (ci_6) * 100)) + 40));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9765
                         */
                        csscanf(csVarVal_11, strmarxan208, endargs());
                        ci_6++;

                    }

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9770 */
                cfclose(cfp_5);

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan615 = jtocstr("SolutionsMatrix");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9775 */

    public static void cInitSolutionsMatrix(int cpuno, int cpu, int csavename, int ciOutputType, int ciIncludeHeaders) {
        nextlevel();
        if (true) {
            int label = 0;
            int cfp_7 = 0;
            int ci_8 = 0;
            int csDelimiter_9 = 0;

            {
                cfp_7 = 0;
                ci_8 = 0;
                csDelimiter_9 = calloca(20);
                cfp_7 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9780
                         */
                        cfopen((int) (csavename), strmarxan198);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9782 */
                if (((cfp_7 == 0) ? 1 : 0) != 0) {
                    startargs(csavename);

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9782 */
                    cShowErrorMessage((int) (strmarxan602), endargs());

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9785 */
                if ((((ciIncludeHeaders) == (1)) ? 1 : 0) != 0) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9787
                         */
                        if ((((ciOutputType) == (3)) ? 1 : 0) != 0) {

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 9787
                             */
                            cstrcpy((int) (csDelimiter_9), strmarxan212);

                        } else {

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 9789
                             */
                            cstrcpy((int) (csDelimiter_9), strmarxan611);

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9791
                         */
                        cfprintf(cfp_7, strmarxan615, 0);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9794
                         */
                        ci_8 = 0;
                        lab_marxan321: for (; (((ci_8) < (cpuno)) ? 1 : 0) != 0;) {
                            startargs(csDelimiter_9);
                            addarg(getMEMINT((int) (((cpu + ((int) (ci_8) * 64)) + 0))));

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 9794
                             */
                            cfprintf(cfp_7, strmarxan322, endargs());
                            ci_8++;

                        }

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9796
                         */
                        cfprintf(cfp_7, strmarxan137, 0);

                    }

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9799 */
                cfclose(cfp_7);

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan616 = jtocstr("Z%iS%i%s");
    static int strmarxan617 = jtocstr("1");
    static int strmarxan618 = jtocstr("0");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9803 */

    public static void cAppendSolutionsMatrix(int ciRun, int cpuno, int cR, int csavename, int ciOutputType, int ciIncludeHeaders) {
        nextlevel();
        if (true) {
            int label = 0;
            int cfp_8 = 0;
            int ci_9 = 0;
            int cj_10 = 0;
            int csDelimiter_11 = 0;

            {
                cfp_8 = 0;
                ci_9 = 0;
                cj_10 = 0;
                csDelimiter_11 = calloca(20);
                cfp_8 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9808
                         */
                        cfopen((int) (csavename), strmarxan454);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9810 */
                if (((cfp_8 == 0) ? 1 : 0) != 0) {
                    startargs(csavename);

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9810 */
                    cShowErrorMessage((int) (strmarxan602), endargs());

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9813 */
                if ((((ciOutputType) == (3)) ? 1 : 0) != 0) {

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9813 */
                    cstrcpy((int) (csDelimiter_11), strmarxan212);

                } else {

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9815 */
                    cstrcpy((int) (csDelimiter_11), strmarxan611);

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9836 */
                ci_9 = 1;
                lab_marxan322: for (; (((ci_9) <= (getMEMINT((int) (marxan.ciZoneCount)))) ? 1 : 0) != 0;) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9820
                         */
                        if ((((ciIncludeHeaders) == (1)) ? 1 : 0) != 0) {

                            {
                                startargs(ci_9);
                                addarg(ciRun);
                                addarg(csDelimiter_11);

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 9821
                                 */
                                cfprintf(cfp_8, strmarxan616, endargs());

                            }

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9833
                         */
                        cj_10 = 0;
                        lab_marxan323: for (; (((cj_10) < (cpuno)) ? 1 : 0) != 0;) {

                            {

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 9827
                                 */
                                if ((((cj_10) > (0)) ? 1 : 0) != 0) {
                                    startargs(csDelimiter_11);

                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 9827
                                     */
                                    cfprintf(cfp_8, strmarxan211, endargs());

                                }
                                ;

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 9830
                                 */
                                if ((((getMEMINT((int) ((cR + ((int) (cj_10) * 4))))) == (ci_9)) ? 1
                                        : 0) != 0) {

                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 9830
                                     */
                                    cfprintf(cfp_8, strmarxan617, 0);

                                } else {

                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 9832
                                     */
                                    cfprintf(cfp_8, strmarxan618, 0);

                                }
                                ;

                            }
                            cj_10++;

                        }

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9835
                         */
                        cfprintf(cfp_8, strmarxan137, 0);

                    }
                    ci_9++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9838 */
                cfclose(cfp_8);

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan619 = jtocstr("S%i%s");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9842 */

    public static void cAppendSolutionsMatrixZone(int ciZone, int ciRun, int cpuno, int cR, int csavename, int ciOutputType, int ciIncludeHeaders) {
        nextlevel();
        if (true) {
            int label = 0;
            int cfp_9 = 0;
            int cj_10 = 0;
            int csDelimiter_11 = 0;

            {
                cfp_9 = 0;
                cj_10 = 0;
                csDelimiter_11 = calloca(20);
                cfp_9 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9847
                         */
                        cfopen((int) (csavename), strmarxan454);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9849 */
                if (((cfp_9 == 0) ? 1 : 0) != 0) {
                    startargs(csavename);

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9849 */
                    cShowErrorMessage((int) (strmarxan602), endargs());

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9852 */
                if ((((ciOutputType) == (3)) ? 1 : 0) != 0) {

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9852 */
                    cstrcpy((int) (csDelimiter_11), strmarxan212);

                } else {

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9854 */
                    cstrcpy((int) (csDelimiter_11), strmarxan611);

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9857 */
                if ((((ciIncludeHeaders) == (1)) ? 1 : 0) != 0) {

                    {
                        startargs(ciRun);
                        addarg(csDelimiter_11);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9858
                         */
                        cfprintf(cfp_9, strmarxan619, endargs());

                    }

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9870 */
                cj_10 = 0;
                lab_marxan324: for (; (((cj_10) < (cpuno)) ? 1 : 0) != 0;) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9864
                         */
                        if ((((cj_10) > (0)) ? 1 : 0) != 0) {
                            startargs(csDelimiter_11);

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 9864
                             */
                            cfprintf(cfp_9, strmarxan211, endargs());

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9867
                         */
                        if ((((getMEMINT((int) ((cR + ((int) (cj_10) * 4))))) == (ciZone)) ? 1 : 0) != 0) {

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 9867
                             */
                            cfprintf(cfp_9, strmarxan617, 0);

                        } else {

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 9869
                             */
                            cfprintf(cfp_9, strmarxan618, 0);

                        }
                        ;

                    }
                    cj_10++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9872 */
                cfprintf(cfp_9, strmarxan137, 0);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9874 */
                cfclose(cfp_9);

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan620 = jtocstr("planning_unit,zone\n");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9918 */

    public static void cOutputSolution(int cpuno, int cR, int cpu, int csavename, int cimode) {
        nextlevel();
        if (true) {
            int label = 0;
            int cfp_7 = 0;
            int ci_8 = 0;

            {
                cfp_7 = 0;
                ci_8 = 0;
                cfp_7 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9921
                         */
                        cfopen((int) (csavename), strmarxan198);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9922 */
                if (((cfp_7 == 0) ? 1 : 0) != 0) {
                    startargs(csavename);

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9922 */
                    cShowErrorMessage((int) (strmarxan602), endargs());

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9925 */
                if ((((cimode) > (1)) ? 1 : 0) != 0) {

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9925 */
                    cfprintf(cfp_7, strmarxan620, 0);

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9935 */
                ci_8 = (cpuno - 1);
                lab_marxan325: for (; (((ci_8) > ((-(1)))) ? 1 : 0) != 0;) {

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9929 */
                    if ((((getMEMINT((int) ((cR + ((int) (ci_8) * 4))))) != (0)) ? 1 : 0) != 0) {

                        {
                            startargs(getMEMINT((int) (((cpu + ((int) (ci_8) * 64)) + 0))));

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 9930
                             */
                            cfprintf(cfp_7, strmarxan234, endargs());

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 9932
                             */
                            if ((((cimode) > (1)) ? 1 : 0) != 0) {
                                startargs(getMEMINT((int) ((cR + ((int) (ci_8) * 4)))));

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 9932
                                 */
                                cfprintf(cfp_7, strmarxan240, endargs());

                            }
                            ;

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 9933
                             */
                            cfprintf(cfp_7, strmarxan137, 0);

                        }

                    }
                    ;
                    ci_8--;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9935 */
                cfclose(cfp_7);

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan621 = jtocstr("Number of Planning Units %i\n");
    static int strmarxan622 = jtocstr("Number of Conservation Values %i\n");
    static int strmarxan623 = jtocstr("Number of Zones %i\n");
    static int strmarxan624 = jtocstr("Number of Costs %i\n");
    static int strmarxan625 = jtocstr("Starting proportion %.2f\n");
    static int strmarxan626 = jtocstr("Clumping - default step function");
    static int strmarxan627 = jtocstr("Clumping - two level step function.");
    static int strmarxan628 = jtocstr("Clumping - rising benefit function");
    static int strmarxan629 = jtocstr("%s\n");
    static int strmarxan630 = jtocstr("Annealing and Heuristic");
    static int strmarxan631 = jtocstr("Annealing and Iterative Improvement");
    static int strmarxan632 = jtocstr("Annealing and Both");
    static int strmarxan633 = jtocstr("Heuristic only");
    static int strmarxan634 = jtocstr("Iterative Improvement only");
    static int strmarxan635 = jtocstr("Heuristic and Iterative Improvement");
    static int strmarxan636 = jtocstr("Algorithm Used :%s\n");
    static int strmarxan637 = jtocstr("Richness");
    static int strmarxan638 = jtocstr("Greedy");
    static int strmarxan639 = jtocstr("Maximum Rarity");
    static int strmarxan640 = jtocstr("Best Rarity");
    static int strmarxan641 = jtocstr("Average Rarity");
    static int strmarxan642 = jtocstr("Summation Rarity");
    static int strmarxan643 = jtocstr("Product Irreplaceability");
    static int strmarxan644 = jtocstr("Summation Irreplaceability");
    static int strmarxan645 = jtocstr("Unkown Heuristic Type");
    static int strmarxan646 = jtocstr("Heuristic type : %s\n");
    static int strmarxan647 = jtocstr("No Heuristic used \n");
    static int strmarxan648 = jtocstr("Number of iterations %i\n");
    static int strmarxan649 = jtocstr("Initial temperature %.2f\n");
    static int strmarxan650 = jtocstr("Cooling factor %.6f\n");
    static int strmarxan651 = jtocstr("Initial temperature set adaptively\n");
    static int strmarxan652 = jtocstr("Cooling factor set adaptively\n");
    static int strmarxan653 = jtocstr("Number of temperature decreases %i\n\n");
    static int strmarxan654 = jtocstr("Number of iterations N/A\nInitial temperature N/A\nCooling Factor N/A\n");
    static int strmarxan655 = jtocstr("Number of temperature decreases N/A\n\n");
    static int strmarxan656 = jtocstr("Cost Threshold Enabled: %lf\n");
    static int strmarxan657 = jtocstr("Threshold penalty factor A %.2f\n");
    static int strmarxan658 = jtocstr("Threshold penalty factor B %.2f\n\n");
    static int strmarxan659 = jtocstr("Cost Threshold Disabled\nThreshold penalty factor A N/A\n");
    static int strmarxan660 = jtocstr("Threshold penalty factor B N/A\n\n");
    static int strmarxan661 = jtocstr("Random Seed %i\n");
    static int strmarxan662 = jtocstr("Number of runs %i\n");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9944 */

    public static void cOutputScenario(int cpuno, int cspno, double cprop, int canneal, int cseedinit, int crepeats, int cclumptype, int crunopts, int cheurotype, double ccostthresh, double ctpf1, double ctpf2, int csavename) {
        nextlevel();
        if (true) {
            int label = 0;
            int cfp_15 = 0;
            int ctemp_16 = 0;

            {
                cfp_15 = 0;
                ctemp_16 = calloca(100);
                cfp_15 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9948
                         */
                        cfopen((int) (csavename), strmarxan198);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9950 */
                if (((cfp_15 == 0) ? 1 : 0) != 0) {
                    startargs(csavename);

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9950 */
                    cShowErrorMessage((int) (strmarxan602), endargs());

                }
                ;
                startargs(cpuno);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9952 */
                cfprintf(cfp_15, strmarxan621, endargs());
                startargs(cspno);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9953 */
                cfprintf(cfp_15, strmarxan622, endargs());
                startargs(getMEMINT((int) (marxan.ciZoneCount)));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9954 */
                cfprintf(cfp_15, strmarxan623, endargs());
                startargs(getMEMINT((int) (marxan.ciCostCount)));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9955 */
                cfprintf(cfp_15, strmarxan624, endargs());
                startargs(cprop);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9956 */
                cfprintf(cfp_15, strmarxan625, endargs());
                lab_marxan326: {
                    switch ((int) (cclumptype))

                    {

                    case 0:
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9959
                         */
                        cstrcpy((int) (ctemp_16), strmarxan626);
                        if (true) {
                            break lab_marxan326;
                        }
                        ;

                    case 1:
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9960
                         */
                        cstrcpy((int) (ctemp_16), strmarxan627);
                        if (true) {
                            break lab_marxan326;
                        }
                        ;

                    case 2:
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9961
                         */
                        cstrcpy((int) (ctemp_16), strmarxan628);
                        if (true) {
                            break lab_marxan326;
                        }
                        ;

                    }

                }
                startargs(ctemp_16);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9963 */
                cfprintf(cfp_15, strmarxan629, endargs());
                lab_marxan327: {
                    switch ((int) (crunopts))

                    {

                    case 0:
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9968
                         */
                        cstrcpy((int) (ctemp_16), strmarxan630);
                        if (true) {
                            break lab_marxan327;
                        }
                        ;

                    case 1:
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9969
                         */
                        cstrcpy((int) (ctemp_16), strmarxan631);
                        if (true) {
                            break lab_marxan327;
                        }
                        ;

                    case 2:
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9970
                         */
                        cstrcpy((int) (ctemp_16), strmarxan632);
                        if (true) {
                            break lab_marxan327;
                        }
                        ;

                    case 3:
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9971
                         */
                        cstrcpy((int) (ctemp_16), strmarxan633);
                        if (true) {
                            break lab_marxan327;
                        }
                        ;

                    case 4:
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9972
                         */
                        cstrcpy((int) (ctemp_16), strmarxan634);
                        if (true) {
                            break lab_marxan327;
                        }
                        ;

                    case 5:
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9973
                         */
                        cstrcpy((int) (ctemp_16), strmarxan635);

                    }

                }
                startargs(ctemp_16);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9975 */
                cfprintf(cfp_15, strmarxan636, endargs());

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9977 */
                if ((((((((((crunopts) == (0)) ? 1 : 0)) != 0) ? 1 : ((((crunopts) == (3)) ? 1 : 0)))) != 0)
                        ? 1 : ((((crunopts) == (5)) ? 1 : 0))) != 0) {

                    {
                        lab_marxan328: {
                            switch ((int) (cheurotype))

                            {

                            case 0:
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 9980
                                 */
                                cstrcpy((int) (ctemp_16), strmarxan637);
                                if (true) {
                                    break lab_marxan328;
                                }
                                ;

                            case 1:
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 9981
                                 */
                                cstrcpy((int) (ctemp_16), strmarxan638);
                                if (true) {
                                    break lab_marxan328;
                                }
                                ;

                            case 2:
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 9982
                                 */
                                cstrcpy((int) (ctemp_16), strmarxan639);
                                if (true) {
                                    break lab_marxan328;
                                }
                                ;

                            case 3:
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 9983
                                 */
                                cstrcpy((int) (ctemp_16), strmarxan640);
                                if (true) {
                                    break lab_marxan328;
                                }
                                ;

                            case 4:
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 9984
                                 */
                                cstrcpy((int) (ctemp_16), strmarxan641);
                                if (true) {
                                    break lab_marxan328;
                                }
                                ;

                            case 5:
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 9985
                                 */
                                cstrcpy((int) (ctemp_16), strmarxan642);
                                if (true) {
                                    break lab_marxan328;
                                }
                                ;

                            case 6:
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 9986
                                 */
                                cstrcpy((int) (ctemp_16), strmarxan643);
                                if (true) {
                                    break lab_marxan328;
                                }
                                ;

                            case 7:
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 9987
                                 */
                                cstrcpy((int) (ctemp_16), strmarxan644);
                                if (true) {
                                    break lab_marxan328;
                                }
                                ;

                            default:
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 9988
                                 */
                                cstrcpy((int) (ctemp_16), strmarxan645);

                            }

                        }
                        startargs(ctemp_16);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9990
                         */
                        cfprintf(cfp_15, strmarxan646, endargs());

                    }

                } else {

                    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9993 */
                    cfprintf(cfp_15, strmarxan647, 0);

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 9996 */
                if ((((crunopts) <= (2)) ? 1 : 0) != 0) {

                    {
                        startargs(getMEMINT((int) ((canneal + 4))));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9997
                         */
                        cfprintf(cfp_15, strmarxan648, endargs());

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 9999
                         */
                        if ((((getMEMDOUBLE((int) ((canneal + 12)))) >= (0)) ? 1 : 0) != 0) {

                            {
                                startargs(getMEMDOUBLE((int) ((canneal + 12))));

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 10000
                                 */
                                cfprintf(cfp_15, strmarxan649, endargs());
                                startargs(getMEMDOUBLE((int) ((canneal + 20))));

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 10001
                                 */
                                cfprintf(cfp_15, strmarxan650, endargs());

                            }

                        } else {

                            {

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 10005
                                 */
                                cfprintf(cfp_15, strmarxan651, 0);

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 10006
                                 */
                                cfprintf(cfp_15, strmarxan652, 0);

                            }

                        }
                        ;
                        startargs(getMEMINT((int) ((canneal + 0))));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 10008
                         */
                        cfprintf(cfp_15, strmarxan653, endargs());

                    }

                } else {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 10012
                         */
                        cfprintf(cfp_15, strmarxan654, 0);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 10013
                         */
                        cfprintf(cfp_15, strmarxan655, 0);

                    }

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 10017 */
                if (ccostthresh != 0) {

                    {
                        startargs(ccostthresh);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 10018
                         */
                        cfprintf(cfp_15, strmarxan656, endargs());
                        startargs(ctpf1);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 10019
                         */
                        cfprintf(cfp_15, strmarxan657, endargs());
                        startargs(ctpf2);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 10020
                         */
                        cfprintf(cfp_15, strmarxan658, endargs());

                    }

                } else {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 10024
                         */
                        cfprintf(cfp_15, strmarxan659, 0);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 10025
                         */
                        cfprintf(cfp_15, strmarxan660, 0);

                    }

                }
                ;
                startargs(cseedinit);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 10028 */
                cfprintf(cfp_15, strmarxan661, endargs());
                startargs(crepeats);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 10029 */
                cfprintf(cfp_15, strmarxan662, endargs());

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 10030 */
                cfclose(cfp_15);

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan663 = jtocstr("\"Feature\",\"Feature Name\",\"Target\"");
    static int strmarxan664 = jtocstr(",\"Total Amount\",\"Contributing Amount Held\",\"Occurrence Target \",\"Occurrences Held\"");
    static int strmarxan665 = jtocstr(",\"Target Met\"");
    static int strmarxan666 = jtocstr(",\"Target %s\",\"Amount Held %s\",\"Contributing Amount Held %s\",\"Occurrence Target %s\"");
    static int strmarxan667 = jtocstr(",\"Occurrences Held %s\",\"Target Met %s\"");
    static int strmarxan668 = jtocstr(",MPM\n");
    static int strmarxan669 = jtocstr("Feature\tFeature Name\tTarget");
    static int strmarxan670 = jtocstr("\tAmount Held\tContributing Amount Held\tOccurrence Target \tOccurrences Held");
    static int strmarxan671 = jtocstr("\tTarget Met");
    static int strmarxan672 = jtocstr("\tTarget %s\tAmount Held %s\tContributing Amount Held %s\tOccurrence Target %s");
    static int strmarxan673 = jtocstr("\tOccurrences Held %s\tTarget Met %s");
    static int strmarxan674 = jtocstr("\tMPM\n");
    static int strmarxan675 = jtocstr("%i,%s,%lf");
    static int strmarxan676 = jtocstr(",%lf,%lf,%i,%i");
    static int strmarxan677 = jtocstr("yes");
    static int strmarxan678 = jtocstr("no");
    static int strmarxan679 = jtocstr(",%s");
    static int strmarxan680 = jtocstr(",%lf,%lf,%lf,%lf,%lf");
    static int strmarxan681 = jtocstr(",%lf\n");
    static int strmarxan682 = jtocstr("%i\t%s\t");
    static int strmarxan683 = jtocstr("%lf\t%lf\t%lf\t%i\t%i\t");
    static int strmarxan684 = jtocstr("\t%s");
    static int strmarxan685 = jtocstr("\t%lf\t%lf\t%lf\t%lf\t%lf");
    static int strmarxan686 = jtocstr("\t%lf\n");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 10035 */

    public static void cOutputFeatures(int cspno, int cspec, int csavename, int cimode, double cmisslevel) {
        nextlevel();
        if (true) {
            int label = 0;
            int cfp_7 = 0;
            int ci_8 = 0;
            int cisp_9 = 0;
            int ciZoneArrayIndex_10 = 0;
            int ctemp_11 = 0;
            double crTarget_12 = 0;
            double crAmountHeld_13 = 0;
            double crOccurrenceTarget_14 = 0;
            double crOccurrencesHeld_15 = 0;
            double crMPM_16 = 0;
            double crTestMPM_17 = 0;

            {
                cfp_7 = 0;
                ci_8 = 0;
                cisp_9 = 0;
                ciZoneArrayIndex_10 = 0;
                ctemp_11 = calloca(4);
                crTarget_12 = 0;
                crAmountHeld_13 = 0;
                crOccurrenceTarget_14 = 0;
                crOccurrencesHeld_15 = 0;
                crMPM_16 = 0;
                crTestMPM_17 = 0;
                cfp_7 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 10041
                         */
                        cfopen((int) (csavename), strmarxan198);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 10043 */
                if (((cfp_7 == 0) ? 1 : 0) != 0) {
                    startargs(csavename);

                    /*
                     * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 10043
                     */
                    cShowErrorMessage((int) (strmarxan602), endargs());

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 10046 */
                if ((((cimode) > (1)) ? 1 : 0) != 0) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 10047
                         */
                        cfprintf(cfp_7, strmarxan663, 0);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 10048
                         */
                        cfprintf(cfp_7, strmarxan664, 0);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 10049
                         */
                        cfprintf(cfp_7, strmarxan665, 0);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 10055
                         */
                        ci_8 = 0;
                        lab_marxan329: for (; (((ci_8) < (getMEMINT((int) (marxan.ciZoneCount)))) ? 1
                                : 0) != 0;) {

                            {
                                startargs(((getMEMINT((int) (marxan.cZones)) + (ci_8 * 254)) + 4));
                                addarg(((getMEMINT((int) (marxan.cZones)) + (ci_8 * 254)) + 4));
                                addarg(((getMEMINT((int) (marxan.cZones)) + (ci_8 * 254)) + 4));
                                addarg(((getMEMINT((int) (marxan.cZones)) + (ci_8 * 254)) + 4));

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 10053
                                 */
                                cfprintf(cfp_7, strmarxan666, endargs());
                                startargs(((getMEMINT((int) (marxan.cZones)) + (ci_8 * 254)) + 4));
                                addarg(((getMEMINT((int) (marxan.cZones)) + (ci_8 * 254)) + 4));

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 10054
                                 */
                                cfprintf(cfp_7, strmarxan667, endargs());

                            }
                            ci_8++;

                        }

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 10056
                         */
                        cfprintf(cfp_7, strmarxan668, 0);

                    }

                } else {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 10060
                         */
                        cfprintf(cfp_7, strmarxan669, 0);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 10061
                         */
                        cfprintf(cfp_7, strmarxan670, 0);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 10062
                         */
                        cfprintf(cfp_7, strmarxan671, 0);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 10068
                         */
                        ci_8 = 0;
                        lab_marxan330: for (; (((ci_8) < (getMEMINT((int) (marxan.ciZoneCount)))) ? 1
                                : 0) != 0;) {

                            {
                                startargs(((getMEMINT((int) (marxan.cZones)) + (ci_8 * 254)) + 4));
                                addarg(((getMEMINT((int) (marxan.cZones)) + (ci_8 * 254)) + 4));
                                addarg(((getMEMINT((int) (marxan.cZones)) + (ci_8 * 254)) + 4));
                                addarg(((getMEMINT((int) (marxan.cZones)) + (ci_8 * 254)) + 4));

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 10066
                                 */
                                cfprintf(cfp_7, strmarxan672, endargs());
                                startargs(((getMEMINT((int) (marxan.cZones)) + (ci_8 * 254)) + 4));
                                addarg(((getMEMINT((int) (marxan.cZones)) + (ci_8 * 254)) + 4));

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 10067
                                 */
                                cfprintf(cfp_7, strmarxan673, endargs());

                            }
                            ci_8++;

                        }

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 10069
                         */
                        cfprintf(cfp_7, strmarxan674, 0);

                    }

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 10218 */
                cisp_9 = 0;
                lab_marxan331: for (; (((cisp_9) < (cspno)) ? 1 : 0) != 0;) {

                    {
                        crMPM_16 = 1;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 10077
                         */
                        if ((((cimode) > (1)) ? 1 : 0) != 0) {

                            {
                                startargs(getMEMINT((int) (((cspec + ((int) (cisp_9) * 100)) + 0))));
                                addarg(getMEMINT((int) (((cspec + ((int) (cisp_9) * 100)) + 8))));
                                addarg(getMEMDOUBLE((int) (((cspec + ((int) (cisp_9) * 100)) + 12))));

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 10080
                                 */
                                cfprintf(cfp_7, strmarxan675, endargs());
                                startargs(getMEMDOUBLE((int) ((getMEMINT((int) (marxan.cTotalAreas))
                                        + (cisp_9 * 8)))));
                                addarg(getMEMDOUBLE((int) (((cspec + ((int) (cisp_9) * 100)) + 48))));
                                addarg(getMEMINT((int) (((cspec + ((int) (cisp_9) * 100)) + 28))));
                                addarg(getMEMINT((int) (((cspec + ((int) (cisp_9) * 100)) + 56))));

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 10084
                                 */
                                cfprintf(cfp_7, strmarxan676, endargs());

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 10085
                                 */
                                cstrcpy((int) (ctemp_11), strmarxan379);

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 10087
                                 */
                                if (getMEMDOUBLE((int) (((cspec + ((int) (cisp_9) * 100)) + 12))) != 0) {

                                    {

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 10088
                                         */
                                        cstrcpy((int) (ctemp_11), strmarxan677);

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 10090
                                         */
                                        if (((((getMEMDOUBLE((int) (((cspec + ((int) (cisp_9) * 100)) + 48)))
                                                / getMEMDOUBLE((int) (((cspec + ((int) (cisp_9) * 100))
                                                        + 12))))) < (cmisslevel)) ? 1 : 0) != 0) {

                                            /*
                                             * file
                                             * E:/git/klab-ecology-component/etc/marxan/
                                             * marxan.c line 10090
                                             */
                                            cstrcpy((int) (ctemp_11), strmarxan678);

                                        }
                                        ;
                                        crTestMPM_17 = (getMEMDOUBLE((int) (((cspec + ((int) (cisp_9) * 100))
                                                + 48)))
                                                / getMEMDOUBLE((int) (((cspec + ((int) (cisp_9) * 100))
                                                        + 12))));

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 10094
                                         */
                                        if ((((crTestMPM_17) < (crMPM_16)) ? 1 : 0) != 0) {
                                            crMPM_16 = crTestMPM_17;

                                        }
                                        ;

                                    }

                                }
                                ;

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 10097
                                 */
                                if (getMEMINT((int) (((cspec + ((int) (cisp_9) * 100)) + 28))) != 0) {

                                    {

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 10098
                                         */
                                        cstrcpy((int) (ctemp_11), strmarxan677);

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 10100
                                         */
                                        if (((((getMEMINT((int) (((cspec + ((int) (cisp_9) * 100)) + 56)))
                                                / getMEMINT((int) (((cspec + ((int) (cisp_9) * 100))
                                                        + 28))))) < (cmisslevel)) ? 1 : 0) != 0) {

                                            /*
                                             * file
                                             * E:/git/klab-ecology-component/etc/marxan/
                                             * marxan.c line 10100
                                             */
                                            cstrcpy((int) (ctemp_11), strmarxan678);

                                        }
                                        ;
                                        crTestMPM_17 = (getMEMINT((int) (((cspec + ((int) (cisp_9) * 100))
                                                + 56)))
                                                / getMEMINT((int) (((cspec + ((int) (cisp_9) * 100)) + 28))));

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 10104
                                         */
                                        if ((((crTestMPM_17) < (crMPM_16)) ? 1 : 0) != 0) {
                                            crMPM_16 = crTestMPM_17;

                                        }
                                        ;

                                    }

                                }
                                ;

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 10107
                                 */
                                if (getMEMINT((int) (((cspec + ((int) (cisp_9) * 100)) + 68))) != 0) {

                                    {

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 10108
                                         */
                                        cstrcpy((int) (ctemp_11), strmarxan677);

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 10110
                                         */
                                        if (((((getMEMINT((int) (((cspec + ((int) (cisp_9) * 100)) + 72)))
                                                / getMEMINT((int) (((cspec + ((int) (cisp_9) * 100))
                                                        + 68))))) < (cmisslevel)) ? 1 : 0) != 0) {

                                            /*
                                             * file
                                             * E:/git/klab-ecology-component/etc/marxan/
                                             * marxan.c line 10110
                                             */
                                            cstrcpy((int) (ctemp_11), strmarxan678);

                                        }
                                        ;

                                    }

                                }
                                ;
                                startargs(ctemp_11);

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 10112
                                 */
                                cfprintf(cfp_7, strmarxan679, endargs());

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 10147
                                 */
                                ci_8 = 0;
                                lab_marxan332: for (; (((ci_8) < (getMEMINT((int) (marxan.ciZoneCount)))) ? 1
                                        : 0) != 0;) {

                                    {
                                        ciZoneArrayIndex_10 = ((cisp_9
                                                * getMEMINT((int) (marxan.ciZoneCount))) + ci_8);
                                        crTarget_12 = getMEMDOUBLE((int) (((getMEMINT((int) (marxan.c_ZoneTarget))
                                                + (ciZoneArrayIndex_10 * 12)) + 0)));
                                        crAmountHeld_13 = getMEMDOUBLE((int) (((getMEMINT((int) (marxan.cZoneSpec))
                                                + (ciZoneArrayIndex_10 * 12)) + 0)));
                                        crOccurrenceTarget_14 = getMEMINT((int) (((getMEMINT((int) (marxan.c_ZoneTarget))
                                                + (ciZoneArrayIndex_10 * 12)) + 8)));
                                        crOccurrencesHeld_15 = getMEMINT((int) (((getMEMINT((int) (marxan.cZoneSpec))
                                                + (ciZoneArrayIndex_10 * 12)) + 8)));
                                        startargs(crTarget_12);
                                        addarg(crAmountHeld_13);
                                        addarg((crAmountHeld_13
                                                * getMEMDOUBLE((int) ((getMEMINT((int) (marxan.c_ZoneContrib))
                                                        + (((cisp_9 * getMEMINT((int) (marxan.ciZoneCount)))
                                                                + ci_8) * 8))))));
                                        addarg(crOccurrenceTarget_14);
                                        addarg(crOccurrencesHeld_15);

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 10124
                                         */
                                        cfprintf(cfp_7, strmarxan680, endargs());

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 10125
                                         */
                                        cstrcpy((int) (ctemp_11), strmarxan379);

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 10127
                                         */
                                        if (crTarget_12 != 0) {

                                            {

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 10128
                                                 */
                                                cstrcpy((int) (ctemp_11), strmarxan677);

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 10130
                                                 */
                                                if (((((crAmountHeld_13 / crTarget_12)) < (cmisslevel)) ? 1
                                                        : 0) != 0) {

                                                    /*
                                                     * file
                                                     * E:/git/klab-ecology-component/etc/
                                                     * marxan/marxan.c line 10130
                                                     */
                                                    cstrcpy((int) (ctemp_11), strmarxan678);

                                                }
                                                ;
                                                crTestMPM_17 = (crAmountHeld_13 / crTarget_12);

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 10134
                                                 */
                                                if ((((crTestMPM_17) < (crMPM_16)) ? 1 : 0) != 0) {
                                                    crMPM_16 = crTestMPM_17;

                                                }
                                                ;

                                            }

                                        }
                                        ;

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 10137
                                         */
                                        if (crOccurrenceTarget_14 != 0) {

                                            {

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 10138
                                                 */
                                                cstrcpy((int) (ctemp_11), strmarxan677);

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 10140
                                                 */
                                                if (((((crOccurrencesHeld_15
                                                        / crOccurrenceTarget_14)) < (cmisslevel)) ? 1
                                                                : 0) != 0) {

                                                    /*
                                                     * file
                                                     * E:/git/klab-ecology-component/etc/
                                                     * marxan/marxan.c line 10140
                                                     */
                                                    cstrcpy((int) (ctemp_11), strmarxan678);

                                                }
                                                ;
                                                crTestMPM_17 = (crOccurrencesHeld_15 / crOccurrenceTarget_14);

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 10144
                                                 */
                                                if ((((crTestMPM_17) < (crMPM_16)) ? 1 : 0) != 0) {
                                                    crMPM_16 = crTestMPM_17;

                                                }
                                                ;

                                            }

                                        }
                                        ;
                                        startargs(ctemp_11);

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 10146
                                         */
                                        cfprintf(cfp_7, strmarxan679, endargs());

                                    }
                                    ci_8++;

                                }
                                startargs(crMPM_16);

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 10148
                                 */
                                cfprintf(cfp_7, strmarxan681, endargs());

                            }

                        } else {

                            {
                                startargs(getMEMINT((int) (((cspec + ((int) (cisp_9) * 100)) + 0))));
                                addarg(getMEMINT((int) (((cspec + ((int) (cisp_9) * 100)) + 8))));

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 10153
                                 */
                                cfprintf(cfp_7, strmarxan682, endargs());
                                startargs(getMEMDOUBLE((int) (((cspec + ((int) (cisp_9) * 100)) + 12))));
                                addarg(getMEMDOUBLE((int) (((cspec + ((int) (cisp_9) * 100)) + 48))));
                                addarg(getMEMDOUBLE((int) (((cspec + ((int) (cisp_9) * 100)) + 48))));
                                addarg(getMEMINT((int) (((cspec + ((int) (cisp_9) * 100)) + 28))));
                                addarg(getMEMINT((int) (((cspec + ((int) (cisp_9) * 100)) + 56))));

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 10158
                                 */
                                cfprintf(cfp_7, strmarxan683, endargs());

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 10159
                                 */
                                cstrcpy((int) (ctemp_11), strmarxan379);

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 10161
                                 */
                                if (getMEMDOUBLE((int) (((cspec + ((int) (cisp_9) * 100)) + 12))) != 0) {

                                    {

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 10162
                                         */
                                        cstrcpy((int) (ctemp_11), strmarxan677);

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 10164
                                         */
                                        if (((((getMEMDOUBLE((int) (((cspec + ((int) (cisp_9) * 100)) + 48)))
                                                / getMEMDOUBLE((int) (((cspec + ((int) (cisp_9) * 100))
                                                        + 12))))) < (cmisslevel)) ? 1 : 0) != 0) {

                                            /*
                                             * file
                                             * E:/git/klab-ecology-component/etc/marxan/
                                             * marxan.c line 10164
                                             */
                                            cstrcpy((int) (ctemp_11), strmarxan678);

                                        }
                                        ;
                                        crTestMPM_17 = (getMEMDOUBLE((int) (((cspec + ((int) (cisp_9) * 100))
                                                + 48)))
                                                / getMEMDOUBLE((int) (((cspec + ((int) (cisp_9) * 100))
                                                        + 12))));

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 10168
                                         */
                                        if ((((crTestMPM_17) < (crMPM_16)) ? 1 : 0) != 0) {
                                            crMPM_16 = crTestMPM_17;

                                        }
                                        ;

                                    }

                                }
                                ;

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 10171
                                 */
                                if (getMEMINT((int) (((cspec + ((int) (cisp_9) * 100)) + 28))) != 0) {

                                    {

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 10172
                                         */
                                        cstrcpy((int) (ctemp_11), strmarxan677);

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 10174
                                         */
                                        if (((((getMEMINT((int) (((cspec + ((int) (cisp_9) * 100)) + 56)))
                                                / getMEMINT((int) (((cspec + ((int) (cisp_9) * 100))
                                                        + 28))))) < (cmisslevel)) ? 1 : 0) != 0) {

                                            /*
                                             * file
                                             * E:/git/klab-ecology-component/etc/marxan/
                                             * marxan.c line 10174
                                             */
                                            cstrcpy((int) (ctemp_11), strmarxan678);

                                        }
                                        ;
                                        crTestMPM_17 = (getMEMINT((int) (((cspec + ((int) (cisp_9) * 100))
                                                + 56)))
                                                / getMEMINT((int) (((cspec + ((int) (cisp_9) * 100)) + 28))));

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 10178
                                         */
                                        if ((((crTestMPM_17) < (crMPM_16)) ? 1 : 0) != 0) {
                                            crMPM_16 = crTestMPM_17;

                                        }
                                        ;

                                    }

                                }
                                ;
                                startargs(ctemp_11);

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 10180
                                 */
                                cfprintf(cfp_7, strmarxan684, endargs());

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 10215
                                 */
                                ci_8 = 0;
                                lab_marxan333: for (; (((ci_8) < (getMEMINT((int) (marxan.ciZoneCount)))) ? 1
                                        : 0) != 0;) {

                                    {
                                        ciZoneArrayIndex_10 = ((cisp_9
                                                * getMEMINT((int) (marxan.ciZoneCount))) + ci_8);
                                        crTarget_12 = getMEMDOUBLE((int) (((getMEMINT((int) (marxan.c_ZoneTarget))
                                                + (ciZoneArrayIndex_10 * 12)) + 0)));
                                        crAmountHeld_13 = getMEMDOUBLE((int) (((getMEMINT((int) (marxan.cZoneSpec))
                                                + (ciZoneArrayIndex_10 * 12)) + 0)));
                                        crOccurrenceTarget_14 = getMEMINT((int) (((getMEMINT((int) (marxan.c_ZoneTarget))
                                                + (ciZoneArrayIndex_10 * 12)) + 8)));
                                        crOccurrencesHeld_15 = getMEMINT((int) (((getMEMINT((int) (marxan.cZoneSpec))
                                                + (ciZoneArrayIndex_10 * 12)) + 8)));
                                        startargs(crTarget_12);
                                        addarg(crAmountHeld_13);
                                        addarg(crAmountHeld_13);
                                        addarg(crOccurrenceTarget_14);
                                        addarg(crOccurrencesHeld_15);

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 10192
                                         */
                                        cfprintf(cfp_7, strmarxan685, endargs());

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 10193
                                         */
                                        cstrcpy((int) (ctemp_11), strmarxan379);

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 10195
                                         */
                                        if (crTarget_12 != 0) {

                                            {

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 10196
                                                 */
                                                cstrcpy((int) (ctemp_11), strmarxan677);

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 10198
                                                 */
                                                if (((((crAmountHeld_13 / crTarget_12)) < (cmisslevel)) ? 1
                                                        : 0) != 0) {

                                                    /*
                                                     * file
                                                     * E:/git/klab-ecology-component/etc/
                                                     * marxan/marxan.c line 10198
                                                     */
                                                    cstrcpy((int) (ctemp_11), strmarxan678);

                                                }
                                                ;
                                                crTestMPM_17 = (crAmountHeld_13 / crTarget_12);

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 10202
                                                 */
                                                if ((((crTestMPM_17) < (crMPM_16)) ? 1 : 0) != 0) {
                                                    crMPM_16 = crTestMPM_17;

                                                }
                                                ;

                                            }

                                        }
                                        ;

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 10205
                                         */
                                        if (crOccurrenceTarget_14 != 0) {

                                            {

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 10206
                                                 */
                                                cstrcpy((int) (ctemp_11), strmarxan677);

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 10208
                                                 */
                                                if (((((crOccurrencesHeld_15
                                                        / crOccurrenceTarget_14)) < (cmisslevel)) ? 1
                                                                : 0) != 0) {

                                                    /*
                                                     * file
                                                     * E:/git/klab-ecology-component/etc/
                                                     * marxan/marxan.c line 10208
                                                     */
                                                    cstrcpy((int) (ctemp_11), strmarxan678);

                                                }
                                                ;
                                                crTestMPM_17 = (crOccurrencesHeld_15 / crOccurrenceTarget_14);

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 10212
                                                 */
                                                if ((((crTestMPM_17) < (crMPM_16)) ? 1 : 0) != 0) {
                                                    crMPM_16 = crTestMPM_17;

                                                }
                                                ;

                                            }

                                        }
                                        ;
                                        startargs(ctemp_11);

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 10214
                                         */
                                        cfprintf(cfp_7, strmarxan684, endargs());

                                    }
                                    ci_8++;

                                }
                                startargs(crMPM_16);

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 10216
                                 */
                                cfprintf(cfp_7, strmarxan686, endargs());

                            }

                        }
                        ;

                    }
                    cisp_9++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 10220 */
                cfclose(cfp_7);

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan687 = jtocstr("\"planning unit\",\"number\"");
    static int strmarxan688 = jtocstr(",\"%s\"");
    static int strmarxan689 = jtocstr("%i %i");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 10226 */

    public static void cOutputSumSoln(int cpuno, int csumsoln, int cZoneSumSoln, int cR, int cpu, int csavename, int cimode) {
        nextlevel();
        if (true) {
            int label = 0;
            int cfp_9 = 0;
            int ci_10 = 0;
            int cj_11 = 0;

            {
                cfp_9 = 0;
                ci_10 = 0;
                cj_11 = 0;
                cfp_9 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 10230
                         */
                        cfopen((int) (csavename), strmarxan198);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 10232 */
                if (((cfp_9 == 0) ? 1 : 0) != 0) {
                    startargs(csavename);

                    /*
                     * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 10232
                     */
                    cShowErrorMessage((int) (strmarxan602), endargs());

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 10235 */
                if ((((cimode) > (1)) ? 1 : 0) != 0) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 10236
                         */
                        cfprintf(cfp_9, strmarxan687, 0);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 10238
                         */
                        cj_11 = 0;
                        lab_marxan334: for (; (((cj_11) < (getMEMINT((int) (marxan.ciZoneCount)))) ? 1
                                : 0) != 0;) {
                            startargs(((getMEMINT((int) (marxan.cZones)) + (cj_11 * 254)) + 4));

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 10238
                             */
                            cfprintf(cfp_9, strmarxan688, endargs());
                            cj_11++;

                        }

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 10239
                         */
                        cfprintf(cfp_9, strmarxan137, 0);

                    }

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 10256 */
                ci_10 = 0;
                lab_marxan335: for (; (((ci_10) < (cpuno)) ? 1 : 0) != 0;) {

                    /*
                     * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 10244
                     */
                    if ((((cimode) > (1)) ? 1 : 0) != 0) {

                        {
                            startargs(getMEMINT((int) (((cpu + ((int) (ci_10) * 64)) + 0))));
                            addarg(getMEMINT((int) ((csumsoln + ((int) (ci_10) * 4)))));

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 10245
                             */
                            cfprintf(cfp_9, strmarxan245, endargs());

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 10247
                             */
                            cj_11 = 0;
                            lab_marxan336: for (; (((cj_11) < (getMEMINT((int) (marxan.ciZoneCount)))) ? 1
                                    : 0) != 0;) {
                                startargs(getMEMINT((int) ((cZoneSumSoln
                                        + ((int) (((cpuno * cj_11) + ci_10)) * 4)))));

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 10247
                                 */
                                cfprintf(cfp_9, strmarxan240, endargs());
                                cj_11++;

                            }

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 10248
                             */
                            cfprintf(cfp_9, strmarxan137, 0);

                        }

                    } else {

                        {
                            startargs(getMEMINT((int) (((cpu + ((int) (ci_10) * 64)) + 0))));
                            addarg(getMEMINT((int) ((csumsoln + ((int) (ci_10) * 4)))));

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 10252
                             */
                            cfprintf(cfp_9, strmarxan689, endargs());

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 10254
                             */
                            cj_11 = 0;
                            lab_marxan337: for (; (((cj_11) < (getMEMINT((int) (marxan.ciZoneCount)))) ? 1
                                    : 0) != 0;) {
                                startargs(getMEMINT((int) ((cZoneSumSoln
                                        + ((int) (((cpuno * cj_11) + ci_10)) * 4)))));

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 10254
                                 */
                                cfprintf(cfp_9, strmarxan409, endargs());
                                cj_11++;

                            }

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 10255
                             */
                            cfprintf(cfp_9, strmarxan137, 0);

                        }

                    }
                    ;
                    ci_10++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 10257 */
                cfclose(cfp_9);

            }
        }
        ;
        prevlevel();
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 10276 */

    public static double cGreedyPen(int cipu, int cpuno, int cspno, int cspec, int cR, int cpu, int cSM, int cclumptype) {
        nextlevel();
        if (true) {
            int label = 0;
            double retval = 0;
            int ci_11 = 0;
            double cfamount_12 = 0;
            double cfold_13 = 0;
            double cnewamount_14 = 0;

            {
                ci_11 = 0;
                cfamount_12 = 0.0;
                cfold_13 = 0;
                cnewamount_14 = 0;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 10291 */
                ci_11 = 0;
                lab_marxan338: for (; (((ci_11) < (cspno)) ? 1 : 0) != 0;) {

                    {
                        cfold_13 = (getMEMDOUBLE((int) (((cspec + ((int) (ci_11) * 100)) + 12)))
                                - getMEMDOUBLE((int) (((cspec + ((int) (ci_11) * 100)) + 48))));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 10284
                         */
                        if ((((cfold_13) > (0)) ? 1 : 0) != 0) {

                            {

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 10286
                                 */
                                if (getMEMDOUBLE((int) (((cspec + ((int) (ci_11) * 100)) + 80))) != 0) {
                                    cnewamount_14 =
                                            /*
                                             * file
                                             * E:/git/klab-ecology-component/etc/marxan/
                                             * marxan.c line 10286
                                             */
                                            cNewPenalty4(cipu, ci_11, cpuno, (int) (cspec), (int) (cpu), (int) (cSM), (int) (cR), (int) (getMEMINT((int) (marxan.cconnections))), 1, cclumptype);

                                } else {
                                    cnewamount_14 =
                                            /*
                                             * file
                                             * E:/git/klab-ecology-component/etc/marxan/
                                             * marxan.c line 10288
                                             */
                                            cNewPenalty(cipu, ci_11, (int) (cspec), (int) (cpu), (int) (cSM), 1);

                                }
                                ;
                                cfamount_12 += ((cnewamount_14 - cfold_13)
                                        * getMEMDOUBLE((int) (((cspec + ((int) (ci_11) * 100)) + 32))));

                            }

                        }
                        ;

                    }
                    ci_11++;

                }
                retval = cfamount_12;
                if (true) {
                    prevlevel();
                    return retval;
                }
                ;

            }
        }
        ;
        prevlevel();
        return 0;
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 10298 */

    public static double cGreedyScore(int cipu, int cpuno, int cspno, int cspec, int cSM, int cconnections, int cR, int cpu, int cclumptype) {
        nextlevel();
        if (true) {
            int label = 0;
            double retval = 0;
            double ccurrpen_12 = 0;
            double ccurrcost_13 = 0;
            double ccurrscore_14 = 0;

            {
                ccurrpen_12 = 0;
                ccurrcost_13 = 0;
                ccurrscore_14 = 0;
                ccurrpen_12 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 10301
                         */
                        cGreedyPen(cipu, cpuno, cspno, (int) (cspec), (int) (cR), (int) (cpu), (int) (cSM), cclumptype);
                ccurrcost_13 = (getMEMDOUBLE((int) (((cpu + ((int) (cipu) * 64)) + 24))) +
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 10302 */
                        cConnectionCost2(cipu, getMEMINT((int) ((cR
                                + ((int) (cipu) * 4)))), (int) (cconnections), (int) (cR), 1, 0));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 10304 */
                if ((((ccurrcost_13) <= (0)) ? 1 : 0) != 0) {

                    {
                        ccurrscore_14 = ((-(1.0)) / getMEMDOUBLE((int) (marxan.cdelta)));

                    }

                } else {

                    {
                        ccurrscore_14 = (ccurrpen_12 / ccurrcost_13);

                    }

                }
                ;
                retval = ccurrscore_14;
                if (true) {
                    prevlevel();
                    return retval;
                }
                ;

            }
        }
        ;
        prevlevel();
        return 0;
    }

    static int strmarxan690 = jtocstr("Serious Error in calculating Rarenesses. No species detected.\n");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 10318 */

    public static void cSetRareness(int cpuno, int cspno, int cRare, int cpu, int cSM, int cR) {
        nextlevel();
        if (true) {
            int label = 0;
            double csmallest_8 = 0;
            int cfcount_9 = 0;
            int ci_10 = 0;
            int cism_11 = 0;
            int cisp_12 = 0;
            int cipu_13 = 0;
            int y73 = 0;
            int y74 = 0;

            {
                csmallest_8 = 0;
                cfcount_9 = 0;
                ci_10 = 0;
                cism_11 = 0;
                cisp_12 = 0;
                cipu_13 = 0;
                cfcount_9 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 10323 */
                ccalloc(cspno, 8));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 10326 */
                cisp_12 = 0;
                lab_marxan339: for (; (((cisp_12) < (cspno)) ? 1 : 0) != 0;) {
                    setMEMDOUBLE((int) ((cfcount_9 + (cisp_12 * 8))), (double) (0));
                    cisp_12++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 10339 */
                cipu_13 = 0;
                lab_marxan340: for (; (((cipu_13) < (cpuno)) ? 1 : 0) != 0;) {

                    /*
                     * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 10330
                     */
                    if (getMEMINT((int) (((cpu + ((int) (cipu_13) * 64)) + 32))) != 0) {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 10337
                         */
                        ci_10 = 0;
                        lab_marxan341: for (; (((ci_10) < (getMEMINT((int) (((cpu + ((int) (cipu_13) * 64))
                                + 32))))) ? 1 : 0) != 0;) {

                            {
                                cism_11 = (getMEMINT((int) (((cpu + ((int) (cipu_13) * 64)) + 32))) + ci_10);
                                cisp_12 = getMEMINT((int) (((cSM + ((int) (cism_11) * 16)) + 12)));

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 10336
                                 */
                                if (((((((((((((getMEMINT((int) ((cR + ((int) (cipu_13) * 4))))) > (0)) ? 1
                                        : 0)) != 0)
                                                ? ((((getMEMINT((int) (((cpu + ((int) (cipu_13) * 64))
                                                        + 4)))) < (2)) ? 1 : 0))
                                                : 0)) != 0)
                                                        ? ((((getMEMINT((int) (((cpu + ((int) (cipu_13) * 64))
                                                                + 40)))) != (1)) ? 1 : 0))
                                                        : 0)) != 0) ? ((((getMEMINT((int) (((cpu
                                                                + ((int) (cipu_13) * 64)) + 48)))) != (1)) ? 1
                                                                        : 0))
                                                                : 0) != 0) {
                                    y73 = (int) ((cfcount_9 + (cisp_12 * 8)));
                                    setMEMDOUBLE((int) (y73), (double) ((getMEMDOUBLE((int) (y73)) +
                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 10336
                                     */
                                            crtnAmountSpecAtPu((int) (cpu), (int) (cSM), cipu_13, cisp_12))));

                                }
                                ;

                            }
                            ci_10++;

                        }

                    }
                    ;
                    cipu_13++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 10344 */
                cisp_12 = 0;
                lab_marxan342: for (; (((cisp_12) < (cspno)) ? 1 : 0) != 0;) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 10342
                         */
                        if (((((((csmallest_8) == (0)) ? 1
                                : 0)) != 0)
                                        ? 1
                                        : (((((((getMEMDOUBLE((int) ((cfcount_9
                                                + (cisp_12 * 8))))) < (csmallest_8)) ? 1 : 0)) != 0)
                                                        ? ((((getMEMDOUBLE((int) ((cfcount_9
                                                                + (cisp_12 * 8))))) > (0)) ? 1 : 0))
                                                        : 0))) != 0) {
                            csmallest_8 = getMEMDOUBLE((int) ((cfcount_9 + (cisp_12 * 8))));

                        }
                        ;
                        setMEMDOUBLE((int) ((cRare + ((int) (cisp_12)
                                * 8))), (double) (getMEMDOUBLE((int) ((cfcount_9 + (cisp_12 * 8))))));

                    }
                    cisp_12++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 10347 */
                if ((((csmallest_8) == (0)) ? 1 : 0) != 0) {

                    /*
                     * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 10347
                     */
                    cShowErrorMessage((int) (strmarxan690), 0);

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 10350 */
                cisp_12 = 0;
                lab_marxan343: for (; (((cisp_12) < (cspno)) ? 1 : 0) != 0;) {
                    y74 = (int) ((cRare + ((int) (cisp_12) * 8)));
                    setMEMDOUBLE((int) (y74), (double) ((getMEMDOUBLE((int) (y74)) / csmallest_8)));
                    cisp_12++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 10352 */
                cfree(cfcount_9);

            }
        }
        ;
        prevlevel();
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 10358 */

    public static double cRareScore(int cisp, int cipu, int cpuno, int cspec, int cSM, int cR, int cconnections, int cpu, int cclumptype) {
        nextlevel();
        if (true) {
            int label = 0;
            double retval = 0;
            double ccurrpen_12 = 0;
            double ccurrcost_13 = 0;
            double ccurrscore_14 = 0;
            double cfold_15 = 0;
            double cnewamount_16 = 0;

            {
                ccurrpen_12 = 0;
                ccurrcost_13 = 0;
                ccurrscore_14 = 0;
                cfold_15 = 0;
                cnewamount_16 = 0;
                cfold_15 = (getMEMDOUBLE((int) (((cspec + ((int) (cisp) * 100)) + 12)))
                        - getMEMDOUBLE((int) (((cspec + ((int) (cisp) * 100)) + 48))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 10364 */
                if ((((cfold_15) > (0)) ? 1 : 0) != 0) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 10366
                         */
                        if (getMEMDOUBLE((int) (((cspec + ((int) (cisp) * 100)) + 80))) != 0) {
                            cnewamount_16 =
                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 10366
                                     */
                                    cNewPenalty4(cipu, cisp, cpuno, (int) (cspec), (int) (cpu), (int) (cSM), (int) (cR), (int) (cconnections), 1, cclumptype);

                        } else {
                            cnewamount_16 =
                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 10368
                                     */
                                    cNewPenalty(cipu, cisp, (int) (cspec), (int) (cpu), (int) (cSM), 1);

                        }
                        ;
                        ccurrpen_12 = (cnewamount_16 - cfold_15);

                    }

                }
                ;
                ccurrcost_13 = (getMEMDOUBLE((int) (((cpu + ((int) (cipu) * 64)) + 24))) +
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 10372 */
                        cConnectionCost2(cipu, getMEMINT((int) ((cR
                                + ((int) (cipu) * 4)))), (int) (cconnections), (int) (cR), 1, 0));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 10374 */
                if ((((ccurrcost_13) <= (0)) ? 1 : 0) != 0) {

                    {
                        ccurrscore_14 = ((-(1.0)) / getMEMDOUBLE((int) (marxan.cdelta)));

                    }

                } else {

                    {
                        ccurrscore_14 = (ccurrpen_12 / ccurrcost_13);

                    }

                }
                ;
                retval = ccurrscore_14;
                if (true) {
                    prevlevel();
                    return retval;
                }
                ;

            }
        }
        ;
        prevlevel();
        return 0;
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 10388 */

    public static double cMaxRareScore(int cipu, int cpuno, int cspec, int cSM, int cR, int cconnections, int cpu, int cRare, int cclumptype) {
        nextlevel();
        if (true) {
            int label = 0;
            double retval = 0;
            int ci_12 = 0;
            int cism_13 = 0;
            int cisp_14 = 0;
            int crareno_15 = 0;
            double crarest_16 = 0;
            double crarescore_17 = 0;

            {
                ci_12 = 0;
                cism_13 = 0;
                cisp_14 = 0;
                crareno_15 = (-(1));
                crarest_16 = 0;
                crarescore_17 = 0;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 10402 */
                ci_12 = 0;
                lab_marxan344: for (; (((ci_12) < (getMEMINT((int) (((cpu + ((int) (cipu) * 64)) + 32))))) ? 1
                        : 0) != 0;) {

                    {
                        cism_13 = (getMEMINT((int) (((cpu + ((int) (cipu) * 64)) + 36))) + ci_12);
                        cisp_14 = getMEMINT((int) (((cSM + ((int) (cism_13) * 16)) + 12)));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 10397
                         */
                        if ((((getMEMDOUBLE((int) (((cSM + ((int) (cism_13) * 16)) + 0)))) != 0)
                                ? (((((((getMEMDOUBLE((int) (((cspec + ((int) (cisp_14) * 100))
                                        + 12)))) > (getMEMDOUBLE((int) (((cspec + ((int) (cisp_14) * 100))
                                                + 48))))) ? 1 : 0)) != 0) ? 1
                                                        : ((((getMEMDOUBLE((int) (((cspec
                                                                + ((int) (cisp_14) * 100)) + 60)))) != 0)
                                                                        ? ((((getMEMINT((int) (((cspec
                                                                                + ((int) (cisp_14) * 100))
                                                                                + 72)))) < (3)) ? 1 : 0))
                                                                        : 0))))
                                : 0) != 0) {

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 10398
                             */
                            if ((((((((1.0
                                    / getMEMDOUBLE((int) ((cRare + ((int) (cisp_14) * 8)))))) < (crarest_16))
                                            ? 1 : 0)) != 0) ? 1 : ((((crareno_15) < (0)) ? 1 : 0))) != 0) {

                                {
                                    crareno_15 = cisp_14;
                                    crarest_16 = getMEMDOUBLE((int) ((cRare + ((int) (cisp_14) * 8))));

                                }

                            }
                            ;

                        }
                        ;

                    }
                    ci_12++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 10405 */
                if ((((crareno_15) > ((-(1)))) ? 1 : 0) != 0) {
                    crarescore_17 = (
                    /*
                     * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 10405
                     */
                    cRareScore(crareno_15, cipu, cpuno, (int) (cspec), (int) (cSM), (int) (cR), (int) (cconnections), (int) (cpu), cclumptype)
                            / crarest_16);

                } else {
                    crarescore_17 = (1.0 / getMEMDOUBLE((int) (marxan.cdelta)));

                }
                ;
                retval = crarescore_17;
                if (true) {
                    prevlevel();
                    return retval;
                }
                ;

            }
        }
        ;
        prevlevel();
        return 0;
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 10415 */

    public static double cBestRareScore(int cipu, int cpuno, int cspec, int cSM, int cR, int cconnections, int cpu, int cRare, int cclumptype) {
        nextlevel();
        if (true) {
            int label = 0;
            double retval = 0;
            int ci_12 = 0;
            int cism_13 = 0;
            int cisp_14 = 0;
            int crareno_15 = 0;
            double crarest_16 = 0;
            double crarescore_17 = 0;

            {
                ci_12 = 0;
                cism_13 = 0;
                cisp_14 = 0;
                crareno_15 = (-(1));
                crarest_16 = 0;
                crarescore_17 = 0;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 10420 */
                if (getMEMINT((int) (((cpu + ((int) (cipu) * 64)) + 32))) != 0) {

                    /*
                     * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 10433
                     */
                    ci_12 = 0;
                    lab_marxan345: for (; (((ci_12) < (getMEMINT((int) (((cpu + ((int) (cipu) * 64)) + 32)))))
                            ? 1 : 0) != 0;) {

                        {
                            cism_13 = (getMEMINT((int) (((cpu + ((int) (cipu) * 64)) + 36))) + ci_12);
                            cisp_14 = getMEMINT((int) (((cSM + ((int) (cism_13) * 16)) + 12)));

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 10425
                             */
                            if ((((getMEMDOUBLE((int) (((cSM + ((int) (cism_13) * 16)) + 0)))) != 0)
                                    ? (((((((getMEMDOUBLE((int) (((cspec + ((int) (cisp_14) * 100))
                                            + 12)))) > (getMEMDOUBLE((int) (((cspec + ((int) (cisp_14) * 100))
                                                    + 48))))) ? 1 : 0)) != 0) ? 1
                                                            : ((((getMEMDOUBLE((int) (((cspec
                                                                    + ((int) (cisp_14) * 100)) + 60)))) != 0)
                                                                            ? ((((getMEMINT((int) (((cspec
                                                                                    + ((int) (cisp_14) * 100))
                                                                                    + 72)))) < (3)) ? 1 : 0))
                                                                            : 0))))
                                    : 0) != 0) {

                                {
                                    crarescore_17 = (
                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 10426
                                     */
                                    cRareScore(cisp_14, cipu, cpuno, (int) (cspec), (int) (cSM), (int) (cR), (int) (cconnections), (int) (cpu), cclumptype)
                                            / getMEMDOUBLE((int) ((cRare + ((int) (cisp_14) * 8)))));

                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 10428
                                     */
                                    if (((((((crarescore_17) > (crarest_16)) ? 1 : 0)) != 0) ? 1
                                            : ((((crareno_15) < (0)) ? 1 : 0))) != 0) {

                                        {
                                            crarest_16 = crarescore_17;
                                            crareno_15 = cisp_14;

                                        }

                                    }
                                    ;

                                }

                            }
                            ;

                        }
                        ci_12++;

                    }

                }
                ;
                retval = crarescore_17;
                if (true) {
                    prevlevel();
                    return retval;
                }
                ;

            }
        }
        ;
        prevlevel();
        return 0;
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 10441 */

    public static double cAveRareScore(int cipu, int cpuno, int cspec, int cSM, int cR, int cconnections, int cpu, int cRare, int cclumptype) {
        nextlevel();
        if (true) {
            int label = 0;
            double retval = 0;
            int ci_12 = 0;
            int cism_13 = 0;
            int cisp_14 = 0;
            int crareno_15 = 0;
            double crarescore_16 = 0;

            {
                ci_12 = 0;
                cism_13 = 0;
                cisp_14 = 0;
                crareno_15 = 0;
                crarescore_16 = 0;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 10446 */
                if (getMEMINT((int) (((cpu + ((int) (cipu) * 64)) + 32))) != 0) {

                    /*
                     * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 10455
                     */
                    ci_12 = 0;
                    lab_marxan346: for (; (((ci_12) < (getMEMINT((int) (((cpu + ((int) (cipu) * 64)) + 32)))))
                            ? 1 : 0) != 0;) {

                        {
                            cism_13 = (getMEMINT((int) (((cpu + ((int) (cipu) * 64)) + 36))) + ci_12);
                            cisp_14 = getMEMINT((int) (((cSM + ((int) (cism_13) * 16)) + 12)));

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 10451
                             */
                            if ((((getMEMDOUBLE((int) (((cSM + ((int) (cism_13) * 16)) + 0)))) != 0)
                                    ? (((((((getMEMDOUBLE((int) (((cspec + ((int) (cisp_14) * 100))
                                            + 12)))) > (getMEMDOUBLE((int) (((cspec + ((int) (cisp_14) * 100))
                                                    + 48))))) ? 1 : 0)) != 0) ? 1
                                                            : ((((getMEMDOUBLE((int) (((cspec
                                                                    + ((int) (cisp_14) * 100)) + 60)))) != 0)
                                                                            ? ((((getMEMINT((int) (((cspec
                                                                                    + ((int) (cisp_14) * 100))
                                                                                    + 72)))) < (3)) ? 1 : 0))
                                                                            : 0))))
                                    : 0) != 0) {

                                {
                                    crarescore_16 += (
                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 10452
                                     */
                                    cRareScore(cisp_14, cipu, cpuno, (int) (cspec), (int) (cSM), (int) (cR), (int) (cconnections), (int) (cpu), cclumptype)
                                            / getMEMDOUBLE((int) ((cRare + ((int) (cisp_14) * 8)))));
                                    crareno_15++;

                                }

                            }
                            ;

                        }
                        ci_12++;

                    }

                }
                ;
                retval = (crarescore_16 / (double) (crareno_15));
                if (true) {
                    prevlevel();
                    return retval;
                }
                ;

            }
        }
        ;
        prevlevel();
        return 0;
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 10463 */

    public static double cSumRareScore(int cipu, int cpuno, int cspec, int cSM, int cR, int cconnections, int cpu, int cRare, int cclumptype) {
        nextlevel();
        if (true) {
            int label = 0;
            double retval = 0;
            int ci_12 = 0;
            int cism_13 = 0;
            int cisp_14 = 0;
            double crarescore_15 = 0;

            {
                ci_12 = 0;
                cism_13 = 0;
                cisp_14 = 0;
                crarescore_15 = 0;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 10468 */
                if (getMEMINT((int) (((cpu + ((int) (cipu) * 64)) + 32))) != 0) {

                    /*
                     * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 10474
                     */
                    ci_12 = 0;
                    lab_marxan347: for (; (((ci_12) < (getMEMINT((int) (((cpu + ((int) (cipu) * 64)) + 32)))))
                            ? 1 : 0) != 0;) {

                        {
                            cism_13 = (getMEMINT((int) (((cpu + ((int) (cipu) * 64)) + 36))) + ci_12);
                            cisp_14 = getMEMINT((int) (((cSM + ((int) (cism_13) * 16)) + 12)));

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 10473
                             */
                            if ((((getMEMDOUBLE((int) (((cSM + ((int) (cism_13) * 16)) + 0)))) != 0)
                                    ? (((((((getMEMDOUBLE((int) (((cspec + ((int) (cisp_14) * 100))
                                            + 12)))) > (getMEMDOUBLE((int) (((cspec + ((int) (cisp_14) * 100))
                                                    + 48))))) ? 1 : 0)) != 0) ? 1
                                                            : ((((getMEMDOUBLE((int) (((cspec
                                                                    + ((int) (cisp_14) * 100)) + 60)))) != 0)
                                                                            ? ((((getMEMINT((int) (((cspec
                                                                                    + ((int) (cisp_14) * 100))
                                                                                    + 72)))) < (3)) ? 1 : 0))
                                                                            : 0))))
                                    : 0) != 0) {
                                crarescore_15 += (
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 10473
                                 */
                                cRareScore(cisp_14, cipu, cpuno, (int) (cspec), (int) (cSM), (int) (cR), (int) (cconnections), (int) (cpu), cclumptype)
                                        / getMEMDOUBLE((int) ((cRare + ((int) (cisp_14) * 8)))));

                            }
                            ;

                        }
                        ci_12++;

                    }

                }
                ;
                retval = crarescore_15;
                if (true) {
                    prevlevel();
                    return retval;
                }
                ;

            }
        }
        ;
        prevlevel();
        return 0;
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 10481 */

    public static void cSetAbundance(int cpuno, int cRare, int cpu, int cSM) {
        nextlevel();
        if (true) {
            int label = 0;
            int ci_6 = 0;
            int cj_7 = 0;
            int cism_8 = 0;
            int cisp_9 = 0;
            int y75 = 0;

            {
                ci_6 = 0;
                cj_7 = 0;
                cism_8 = 0;
                cisp_9 = 0;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 10492 */
                ci_6 = 0;
                lab_marxan348: for (; (((ci_6) < (cpuno)) ? 1 : 0) != 0;) {

                    /*
                     * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 10486
                     */
                    if (getMEMINT((int) (((cpu + ((int) (ci_6) * 64)) + 32))) != 0) {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 10491
                         */
                        cj_7 = 0;
                        lab_marxan349: for (; (((cj_7) < (getMEMINT((int) (((cpu + ((int) (ci_6) * 64))
                                + 32))))) ? 1 : 0) != 0;) {

                            {
                                cism_8 = (getMEMINT((int) (((cpu + ((int) (ci_6) * 64)) + 36))) + cj_7);
                                cisp_9 = getMEMINT((int) (((cSM + ((int) (cism_8) * 16)) + 12)));
                                y75 = (int) ((cRare + ((int) (cisp_9) * 8)));
                                setMEMDOUBLE((int) (y75), (double) ((getMEMDOUBLE((int) (y75))
                                        + getMEMDOUBLE((int) (((cSM + ((int) (cism_8) * 16)) + 0))))));

                            }
                            cj_7++;

                        }

                    }
                    ;
                    ci_6++;

                }

            }
        }
        ;
        prevlevel();
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 10496 */

    public static double cIrreplaceability(int cipu, int cisp, int cRare, int cpu, int cSM, int cspec) {
        nextlevel();
        if (true) {
            int label = 0;
            double retval = 0;
            double cbuffer_9 = 0;
            double ceffamount_10 = 0;

            {
                cbuffer_9 = 0;
                ceffamount_10 = 0;
                cbuffer_9 = ((((getMEMDOUBLE((int) ((cRare
                        + ((int) (cisp) * 8))))) < (getMEMDOUBLE((int) (((cspec + (cisp * 100)) + 12))))) ? 1
                                : 0) != 0 ? 0
                                        : (getMEMDOUBLE((int) ((cRare + ((int) (cisp) * 8))))
                                                - getMEMDOUBLE((int) (((cspec + (cisp * 100)) + 12)))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 10501 */
                if ((((getMEMDOUBLE((int) (((cspec + (cisp * 100))
                        + 48)))) > (getMEMDOUBLE((int) (((cspec + (cisp * 100)) + 12))))) ? 1 : 0) != 0) {
                    retval = 0;
                    if (true) {
                        prevlevel();
                        return retval;
                    }
                    ;

                }
                ;
                ceffamount_10 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 10502
                         */
                        crtnAmountSpecAtPu((int) (cpu), (int) (cSM), cipu, cisp);
                retval = ((((cbuffer_9) < (ceffamount_10)) ? 1 : 0) != 0 ? 1 : (ceffamount_10 / cbuffer_9));
                if (true) {
                    prevlevel();
                    return retval;
                }
                ;

            }
        }
        ;
        prevlevel();
        return 0;
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 10508 */

    public static double cProdIrr(int cipu, int cRare, int cpu, int cSM, int cspec) {
        nextlevel();
        if (true) {
            int label = 0;
            double retval = 0;
            int ci_8 = 0;
            int cism_9 = 0;
            int cisp_10 = 0;
            double cproduct_11 = 0;

            {
                ci_8 = 0;
                cism_9 = 0;
                cisp_10 = 0;
                cproduct_11 = 1;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 10513 */
                if (getMEMINT((int) (((cpu + ((int) (cipu) * 64)) + 32))) != 0) {

                    /*
                     * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 10519
                     */
                    ci_8 = 0;
                    lab_marxan350: for (; (((ci_8) < (getMEMINT((int) (((cpu + ((int) (cipu) * 64)) + 32)))))
                            ? 1 : 0) != 0;) {

                        {
                            cism_9 = (getMEMINT((int) (((cpu + ((int) (cipu) * 64)) + 36))) + ci_8);
                            cisp_10 = getMEMINT((int) (((cSM + ((int) (cism_9) * 16)) + 12)));

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 10518
                             */
                            if ((((getMEMDOUBLE((int) (((cSM + ((int) (cism_9) * 16)) + 0)))) != 0)
                                    ? (((((getMEMDOUBLE((int) (((cspec + (cisp_10 * 100)) + 12)))
                                            - getMEMDOUBLE((int) (((cspec + (cisp_10 * 100)) + 48))))) > (0))
                                                    ? 1 : 0))
                                    : 0) != 0) {
                                cproduct_11 *= (1 -
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 10518
                                 */
                                        cIrreplaceability(cipu, cisp_10, (int) (cRare), (int) (cpu), (int) (cSM), cspec));

                            }
                            ;

                        }
                        ci_8++;

                    }

                }
                ;
                retval = (1 - cproduct_11);
                if (true) {
                    prevlevel();
                    return retval;
                }
                ;

            }
        }
        ;
        prevlevel();
        return 0;
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 10526 */

    public static double cSumIrr(int cipu, int cRare, int cpu, int cSM, int cspec) {
        nextlevel();
        if (true) {
            int label = 0;
            double retval = 0;
            int ci_8 = 0;
            int cism_9 = 0;
            int cisp_10 = 0;
            double csum_11 = 0;

            {
                ci_8 = 0;
                cism_9 = 0;
                cisp_10 = 0;
                csum_11 = 0;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 10531 */
                if (getMEMINT((int) (((cpu + ((int) (cipu) * 64)) + 32))) != 0) {

                    /*
                     * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 10537
                     */
                    ci_8 = 0;
                    lab_marxan351: for (; (((ci_8) < (getMEMINT((int) (((cpu + ((int) (cipu) * 64)) + 32)))))
                            ? 1 : 0) != 0;) {

                        {
                            cism_9 = (getMEMINT((int) (((cpu + ((int) (cipu) * 64)) + 36))) + ci_8);
                            cisp_10 = getMEMINT((int) (((cSM + ((int) (cism_9) * 16)) + 12)));

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 10536
                             */
                            if ((((getMEMDOUBLE((int) (((cSM + ((int) (cism_9) * 16)) + 0)))) != 0)
                                    ? (((((getMEMDOUBLE((int) (((cspec + (cisp_10 * 100)) + 12)))
                                            - getMEMDOUBLE((int) (((cspec + (cisp_10 * 100)) + 48))))) > (0))
                                                    ? 1 : 0))
                                    : 0) != 0) {
                                csum_11 +=
                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 10536
                                         */
                                        cIrreplaceability(cipu, cisp_10, (int) (cRare), (int) (cpu), (int) (cSM), cspec);

                            }
                            ;

                        }
                        ci_8++;

                    }

                }
                ;
                retval = csum_11;
                if (true) {
                    prevlevel();
                    return retval;
                }
                ;

            }
        }
        ;
        prevlevel();
        return 0;
    }

    static int strmarxan691 = jtocstr("P.U. %i score %.6f Cost %.1f Connection %.1f Missing %i Amount %.1f \n");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 10548 */

    public static void cHeuristics(int cspno, int cpuno, int cpu, int cconnections, int cR, int cspec, int cSM, int creserve, double ccostthresh, double ctpf1, double ctpf2, int cimode, int cclumptype) {
        nextlevel();
        if (true) {
            int label = 0;
            int ci_15 = 0;
            int cj_16 = 0;
            int cbestpu_17 = 0;
            int ciZone_18 = 0;
            int ciArrayIndex_19 = 0;
            double cbestscore_20 = 0;
            double ccurrscore_21 = 0;
            int cchange_22 = 0;
            int cRare_23 = 0;

            {
                ci_15 = 0;
                cj_16 = 0;
                cbestpu_17 = 0;
                ciZone_18 = 0;
                ciArrayIndex_19 = 0;
                cbestscore_20 = 0;
                ccurrscore_21 = 0;
                cchange_22 = calloca(52);
                cRare_23 = 0;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 10558 */
                if (((((((cimode) >= (6)) ? 1 : 0)) != 0) ? ((((cimode) <= (7)) ? 1 : 0)) : 0) != 0) {

                    {
                        cRare_23 = (int) (
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 10559
                         */
                        ccalloc(cspno, 8));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 10560
                         */
                        cSetAbundance(cpuno, (int) (cRare_23), (int) (cpu), (int) (cSM));

                    }

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 10564 */
                if (((((((cimode) >= (2)) ? 1 : 0)) != 0) ? ((((cimode) <= (5)) ? 1 : 0)) : 0) != 0) {

                    {
                        cRare_23 = (int) (
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 10565
                         */
                        ccalloc(cspno, 8));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 10566
                         */
                        cSetRareness(cpuno, cspno, (int) (cRare_23), (int) (cpu), (int) (cSM), (int) (cR));

                    }

                }
                ;

                lab_marxan352: do {

                    {
                        cbestpu_17 = 0;
                        cbestscore_20 = 0;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 10615
                         */
                        ci_15 = 0;
                        lab_marxan353: for (; (((ci_15) < (cpuno)) ? 1 : 0) != 0;) {

                            {
                                ciZone_18 = (
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 10580
                                 */
                                marxan.cRandNum(getMEMINT((int) (marxan.ciZoneCount))) + 1);
                                ccurrscore_21 = 1;

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 10587
                                 */
                                if ((((cimode) == (0)) ? 1 : 0) != 0) {
                                    ccurrscore_21 =
                                            /*
                                             * file
                                             * E:/git/klab-ecology-component/etc/marxan/
                                             * marxan.c line 10587
                                             */
                                            cGreedyScore(ci_15, cpuno, cspno, cspec, (int) (cSM), (int) (cconnections), (int) (cR), (int) (cpu), cclumptype);

                                }
                                ;

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 10589
                                 */
                                if ((((cimode) == (1)) ? 1 : 0) != 0) {

                                    {

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 10591
                                         */
                                        cCheckChange(ci_15, ci_15, cpuno, (int) (cpu), (int) (cconnections), (int) (cspec), (int) (cSM), (int) (cR), 1, ciZone_18, (int) (cchange_22), creserve, ccostthresh, ctpf1, ctpf2, 1, cclumptype, 0);
                                        ccurrscore_21 = getMEMDOUBLE((int) ((cchange_22 + 0)));

                                    }

                                }
                                ;

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 10595
                                 */
                                if ((((cimode) == (2)) ? 1 : 0) != 0) {
                                    ccurrscore_21 =
                                            /*
                                             * file
                                             * E:/git/klab-ecology-component/etc/marxan/
                                             * marxan.c line 10595
                                             */
                                            cMaxRareScore(ci_15, cpuno, (int) (cspec), (int) (cSM), (int) (cR), (int) (cconnections), (int) (cpu), (int) (cRare_23), cclumptype);

                                }
                                ;

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 10597
                                 */
                                if ((((cimode) == (3)) ? 1 : 0) != 0) {
                                    ccurrscore_21 =
                                            /*
                                             * file
                                             * E:/git/klab-ecology-component/etc/marxan/
                                             * marxan.c line 10597
                                             */
                                            cBestRareScore(ci_15, cpuno, (int) (cspec), (int) (cSM), (int) (cR), (int) (cconnections), (int) (cpu), (int) (cRare_23), cclumptype);

                                }
                                ;

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 10599
                                 */
                                if ((((cimode) == (4)) ? 1 : 0) != 0) {
                                    ccurrscore_21 =
                                            /*
                                             * file
                                             * E:/git/klab-ecology-component/etc/marxan/
                                             * marxan.c line 10599
                                             */
                                            cAveRareScore(ci_15, cpuno, (int) (cspec), (int) (cSM), (int) (cR), (int) (cconnections), (int) (cpu), (int) (cRare_23), cclumptype);

                                }
                                ;

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 10601
                                 */
                                if ((((cimode) == (5)) ? 1 : 0) != 0) {
                                    ccurrscore_21 =
                                            /*
                                             * file
                                             * E:/git/klab-ecology-component/etc/marxan/
                                             * marxan.c line 10601
                                             */
                                            cSumRareScore(ci_15, cpuno, (int) (cspec), (int) (cSM), (int) (cR), (int) (cconnections), (int) (cpu), (int) (cRare_23), cclumptype);

                                }
                                ;

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 10603
                                 */
                                if ((((cimode) == (6)) ? 1 : 0) != 0) {
                                    ccurrscore_21 = (-(
                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 10603
                                     */
                                    cProdIrr(ci_15, (int) (cRare_23), (int) (cpu), (int) (cSM), cspec)));

                                }
                                ;

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 10605
                                 */
                                if ((((cimode) == (7)) ? 1 : 0) != 0) {
                                    ccurrscore_21 = (-(
                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 10605
                                     */
                                    cSumIrr(ci_15, (int) (cRare_23), (int) (cpu), (int) (cSM), cspec)));

                                }
                                ;
                                ccurrscore_21 *= (((double) (
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 10607
                                 */
                                marxan.crand1()) * 0.001) + 1.0);

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 10609
                                 */
                                if ((((((ccostthresh == 0) ? 1 : 0)) != 0) ? 1
                                        : (((((getMEMDOUBLE((int) (((cpu + ((int) (ci_15) * 64)) + 24)))
                                                + getMEMDOUBLE((int) ((creserve + 28))))) <= (ccostthresh))
                                                        ? 1 : 0))) != 0) {

                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 10610
                                     */
                                    if ((((ccurrscore_21) < (cbestscore_20)) ? 1 : 0) != 0) {

                                        {
                                            cbestpu_17 = ci_15;
                                            cbestscore_20 = ccurrscore_21;

                                        }

                                    }
                                    ;

                                }
                                ;

                            }
                            ci_15++;

                        }

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 10618
                         */
                        if (cbestscore_20 != 0) {

                            {

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 10620
                                 */
                                cCheckChange(ci_15, cbestpu_17, cpuno, (int) (cpu), (int) (cconnections), (int) (cspec), (int) (cSM), (int) (cR), 1, ciZone_18, (int) (cchange_22), creserve, ccostthresh, ctpf1, ctpf2, 1, cclumptype, 0);

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 10621
                                 */
                                cDoChange(cbestpu_17, cpuno, (int) (cR), creserve, (int) (cchange_22), (int) (cpu), (int) (cSM), (int) (cspec), (int) (cconnections), 1, ciZone_18, cclumptype);
                                setMEMINT((int) ((creserve + 16)), (int) (0));

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 10641
                                 */
                                ci_15 = 0;
                                lab_marxan354: for (; (((ci_15) < (cspno)) ? 1 : 0) != 0;) {

                                    {

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 10634
                                         */
                                        cj_16 = 0;
                                        lab_marxan355: for (; (((cj_16) < (getMEMINT((int) (marxan.ciZoneCount))))
                                                ? 1 : 0) != 0;) {

                                            {
                                                ciArrayIndex_19 = ((ci_15
                                                        * getMEMINT((int) (marxan.ciZoneCount))) + cj_16);

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 10633
                                                 */
                                                if ((((getMEMDOUBLE((int) (((getMEMINT((int) (marxan.cZoneSpec))
                                                        + (ciArrayIndex_19 * 12))
                                                        + 0)))) < (getMEMDOUBLE((int) (((getMEMINT((int) (marxan.c_ZoneTarget))
                                                                + (ciArrayIndex_19 * 12)) + 0))))) ? 1
                                                                        : 0) != 0) {
                                                    sincMEMINT((int) ((creserve + 16)), +1);

                                                }
                                                ;

                                            }
                                            cj_16++;

                                        }

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 10636
                                         */
                                        if ((((getMEMDOUBLE((int) (((cspec + (ci_15 * 100))
                                                + 48)))) < (getMEMDOUBLE((int) (((cspec + (ci_15 * 100))
                                                        + 12))))) ? 1 : 0) != 0) {
                                            sincMEMINT((int) ((creserve + 16)), +1);

                                        } else {

                                            /*
                                             * file
                                             * E:/git/klab-ecology-component/etc/marxan/
                                             * marxan.c line 10639
                                             */
                                            if ((((getMEMDOUBLE((int) (((cspec + (ci_15 * 100)) + 60)))) != 0)
                                                    ? ((((getMEMINT((int) (((cspec + (ci_15 * 100))
                                                            + 72)))) < (3)) ? 1 : 0))
                                                    : 0) != 0) {
                                                sincMEMINT((int) ((creserve + 16)), +1);

                                            }
                                            ;

                                        }
                                        ;

                                    }
                                    ci_15++;

                                }

                            }

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 10645
                         */
                        if (cbestscore_20 != 0) {
                            startargs(cbestpu_17);
                            addarg(cbestscore_20);
                            addarg(getMEMDOUBLE((int) ((creserve + 28))));
                            addarg(getMEMDOUBLE((int) ((creserve + 8))));
                            addarg(getMEMINT((int) ((creserve + 16))));
                            addarg(getMEMDOUBLE((int) ((creserve + 20))));

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 10647
                             */
                            cShowGenProgInfo((int) (strmarxan691), endargs());

                        }
                        ;

                    }

                } while (cbestscore_20 != 0);
                setMEMDOUBLE((int) ((creserve + 0)), (double) (((getMEMDOUBLE((int) ((creserve + 28)))
                        + getMEMDOUBLE((int) ((creserve + 8)))) + getMEMDOUBLE((int) ((creserve + 20))))));

            }
        }
        ;
        prevlevel();
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 10668 */

    public static int cItImpDiscard(int cichoice, int clist, int cdiscard) {
        nextlevel();
        if (true) {
            int label = 0;
            int retval = 0;
            int ctempp_6 = 0;
            int clp_7 = 0;

            {
                ctempp_6 = 0;
                clp_7 = 0;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 10673 */
                if ((((getMEMINT((int) ((clist + 0)))) == (cichoice)) ? 1 : 0) != 0) {

                    {
                        ctempp_6 = getMEMINT((int) ((clist + 4)));
                        setMEMINT((int) ((clist + 4)), (int) (getMEMINT((int) (cdiscard))));
                        setMEMINT((int) (cdiscard), (int) (clist));
                        clist = ctempp_6;

                    }

                } else {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 10682
                         */
                        clp_7 = clist;
                        lab_marxan356: for (; (((getMEMINT((int) ((clp_7 + 4)))) != 0)
                                ? ((((getMEMINT((int) ((getMEMINT((int) ((clp_7 + 4))) + 0)))) != (cichoice))
                                        ? 1 : 0))
                                : 0) != 0;) {
                            clp_7 = getMEMINT((int) ((clp_7 + 4)));

                        }
                        ctempp_6 = getMEMINT((int) ((getMEMINT((int) ((clp_7 + 4))) + 4)));
                        setMEMINT((int) ((getMEMINT((int) ((clp_7 + 4)))
                                + 4)), (int) (getMEMINT((int) (cdiscard))));
                        setMEMINT((int) (cdiscard), (int) (getMEMINT((int) ((clp_7 + 4)))));
                        setMEMINT((int) ((clp_7 + 4)), (int) (ctempp_6));

                    }

                }
                ;
                retval = clist;
                if (true) {
                    prevlevel();
                    return retval;
                }
                ;

            }
        }
        ;
        prevlevel();
        return 0;
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 10695 */

    public static int cItImpUndiscard(int clist, int cdiscard) {
        nextlevel();
        if (true) {
            int label = 0;
            int retval = 0;
            int ctempp_5 = 0;

            {
                ctempp_5 = 0;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 10699 */
                if (((getMEMINT((int) (cdiscard)) == 0) ? 1 : 0) != 0) {
                    retval = clist;
                    if (true) {
                        prevlevel();
                        return retval;
                    }
                    ;

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 10701 */
                ctempp_5 = getMEMINT((int) (cdiscard));
                lab_marxan357: for (; getMEMINT((int) ((ctempp_5 + 4))) != 0;) {
                    ctempp_5 = getMEMINT((int) ((ctempp_5 + 4)));

                }
                setMEMINT((int) ((ctempp_5 + 4)), (int) (clist));
                clist = getMEMINT((int) (cdiscard));
                setMEMINT((int) (cdiscard), (int) ((int) (0)));
                retval = clist;
                if (true) {
                    prevlevel();
                    return retval;
                }
                ;

            }
        }
        ;
        prevlevel();
        return 0;
    }

    static int strmarxan692 = jtocstr("PuZone endless loop in FindSwap detected\n");
    static int strmarxan693 = jtocstr("\nPuZone endless loop in FindSwap detected\n");
    static int strmarxan694 = jtocstr("It Imp has changed %i and %i with total value %lf \n");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 10718 */

    public static int cFindSwap(int clist, double ctargetval, int citestchoice, int cpuuntried, int cpuno, int cpu, int cconnections, int cspec, int cSM, int cR, int creserve, int cchange, double ccostthresh, double ctpf1, double ctpf2, int cclumptype) {
        nextlevel();
        if (true) {
            int label = 0;
            int retval = 0;
            int cdebugbuffer_19 = 0;
            int cdiscard_20 = alloconstack(0);
            int clp_21 = 0;
            int cimode_22 = 0;
            int ciOriginalZone_23 = 0;
            int ciPreviousR_24 = 0;
            int cichoice_25 = 0;
            int cipu_26 = 0;
            int ciZone_27 = 0;
            int ciLoopCounter_28 = 0;
            int cswapchange_29 = 0;

            {
                cdebugbuffer_19 = calloca(1000);
                setMEMINT((int) (cdiscard_20), (int) ((int) (0)));
                clp_21 = 0;
                cimode_22 = 0;
                ciOriginalZone_23 = 0;
                ciPreviousR_24 = 0;
                cichoice_25 = 0;
                cipu_26 = 0;
                ciZone_27 = 0;
                ciLoopCounter_28 = 0;
                cswapchange_29 = calloca(52);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 10729 */
                if ((((getMEMINT((int) ((cR + ((int) (citestchoice) * 4))))) == (0)) ? 1 : 0) != 0) {
                    retval = 0;
                    if (true) {
                        prevlevel();
                        return retval;
                    }
                    ;

                }
                ;
                ciOriginalZone_23 = getMEMINT((int) ((cR + ((int) (citestchoice) * 4))));
                ciLoopCounter_28 = 0;
                ciPreviousR_24 = getMEMINT((int) ((cR + ((int) (citestchoice) * 4))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 10736 */
                if ((((getMEMINT((int) (((cpu + ((int) (citestchoice) * 64)) + 48)))) == (1)) ? 1 : 0) != 0) {

                    {

                        lab_marxan358: do {

                            {
                                ciZone_27 = (
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 10740
                                 */
                                marxan.cRandNum(getMEMINT((int) (marxan.ciZoneCount))) + 1);
                                ciLoopCounter_28++;

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 10745
                                 */
                                if ((((ciLoopCounter_28) > (5000)) ? 1 : 0) != 0) {

                                    {

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 10747
                                         */
                                        cDumpPuZone_Debug(getMEMINT((int) (marxan.ciPuZoneCount)), (int) (getMEMINT((int) (marxan.cPuZone))), (int) (marxan.cfnames), 999);

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 10748
                                         */
                                        cAppendDebugTraceFile((int) (strmarxan692), 0);
                                        startargs(getMEMINT((int) (((cpu + ((int) (citestchoice) * 64))
                                                + 0))));
                                        addarg(ciZone_27);

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 10749
                                         */
                                        csprintf((int) (cdebugbuffer_19), strmarxan384, endargs());

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 10750
                                         */
                                        cAppendDebugTraceFile((int) (cdebugbuffer_19), 0);

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 10752
                                         */
                                        cShowGenProg((int) (strmarxan693), 0);

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 10753
                                         */
                                        cShowGenProg((int) (strmarxan356), 0);

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 10754
                                         */
                                        cShowPauseExit();

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 10755
                                         */
                                        cexit(1);

                                    }

                                }
                                ;

                            }

                        } while (((((((ciZone_27) == (ciPreviousR_24)) ? 1 : 0)) != 0) ? 1 : (
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 10758
                         */
                        cPuNotInAllowedZone((int) ((cpu + ((int) (citestchoice)
                                * 64))), ciZone_27, (int) (getMEMINT((int) (marxan.cPuZone))), 0, (byte) (102)))) != 0);

                    }

                } else {

                    {

                        lab_marxan359: do {
                            ciZone_27 = (
                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 10764
                             */
                            marxan.cRandNum(getMEMINT((int) (marxan.ciZoneCount))) + 1);

                        } while ((((ciZone_27) == (ciPreviousR_24)) ? 1 : 0) != 0);

                    }

                }
                ;
                cimode_22 = 1;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 10774 */
                cDoChange(citestchoice, cpuno, (int) (cR), creserve, (int) (cchange), (int) (cpu), (int) (cSM), (int) (cspec), (int) (cconnections), cimode_22, ciZone_27, cclumptype);
                setMEMINT((int) (clist), (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 10775 */
                cItImpDiscard(citestchoice, getMEMINT((int) (clist)), cdiscard_20)));
                cpuuntried--;
                lab_marxan360: while (((((cpuuntried) > (0)) ? 1 : 0)) != 0) {

                    {
                        cipu_26 =
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 10781
                                 */
                                marxan.cRandNum(cpuuntried);
                        clp_21 = getMEMINT((int) (clist));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 10784
                         */
                        if ((((cipu_26) == (0)) ? 1 : 0) != 0) {

                            {
                                cichoice_25 = getMEMINT((int) ((getMEMINT((int) (clist)) + 0)));

                            }

                        } else {

                            {
                                lab_marxan361: while (((((getMEMINT((int) ((clp_21 + 4)))) != 0)
                                        ? (((((--cipu_26)) > (0)) ? 1 : 0)) : 0)) != 0) {
                                    clp_21 = getMEMINT((int) ((clp_21 + 4)));

                                }
                                cichoice_25 = getMEMINT((int) ((getMEMINT((int) ((clp_21 + 4))) + 0)));

                            }

                        }
                        ;
                        cimode_22 = 1;
                        ciZone_27 = (
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 10811
                         */
                        marxan.cRandNum(getMEMINT((int) (marxan.ciZoneCount))) + 1);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 10814
                         */
                        cCheckChange(cpuuntried, cichoice_25, cpuno, (int) (cpu), (int) (cconnections), (int) (cspec), (int) (cSM), (int) (cR), cimode_22, ciZone_27, (int) (cswapchange_29), creserve, ccostthresh, ctpf1, ctpf2, 1, cclumptype, 0);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 10817
                         */
                        if (((((getMEMDOUBLE((int) ((cswapchange_29 + 0))) + ctargetval)) < (0)) ? 1
                                : 0) != 0) {

                            {

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 10818
                                 */
                                cDoChange(cichoice_25, cpuno, (int) (cR), creserve, (int) (cswapchange_29), (int) (cpu), (int) (cSM), (int) (cspec), (int) (cconnections), cimode_22, ciZone_27, cclumptype);
                                setMEMINT((int) (clist), (int) (
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 10819
                                 */
                                cItImpUndiscard(getMEMINT((int) (clist)), cdiscard_20)));
                                startargs(citestchoice);
                                addarg(cichoice_25);
                                addarg((getMEMDOUBLE((int) ((cchange + 0))) + ctargetval));

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 10821
                                 */
                                cShowDetProg((int) (strmarxan694), endargs());
                                retval = 1;
                                if (true) {
                                    prevlevel();
                                    return retval;
                                }
                                ;

                            }

                        }
                        ;
                        cpuuntried--;
                        setMEMINT((int) (clist), (int) (
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 10827
                         */
                        cItImpDiscard(cichoice_25, getMEMINT((int) (clist)), cdiscard_20)));

                    }

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 10831 */
                if ((((ciZone_27) != (ciOriginalZone_23)) ? 1 : 0) != 0) {

                    {
                        cimode_22 = 1;

                    }

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 10838 */
                cChangeCost(cchange, (-(1)));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 10839 */
                cDoChange(citestchoice, cpuno, (int) (cR), creserve, (int) (cchange), (int) (cpu), (int) (cSM), (int) (cspec), (int) (cconnections), cimode_22, ciOriginalZone_23, cclumptype);
                setMEMINT((int) (clist), (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 10841 */
                cItImpUndiscard(getMEMINT((int) (clist)), cdiscard_20)));
                retval = 0;
                if (true) {
                    prevlevel();
                    return retval;
                }
                ;

            }
        }
        ;
        prevlevel();
        return 0;
    }

    static int strmarxan695 = jtocstr("\nPuZone endless loop in IterativeImprovement detected\n");
    static int strmarxan696 = jtocstr("IterativeImprovement good change imode %i puid %i\n");
    static int strmarxan697 = jtocstr("It Imp has changed %i with change value %lf \n");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 10852 */

    public static void cIterativeImprovement(int cpuno, int cpu, int cconnections, int cspec, int cSM, int cR, int creserve, int cchange, double ccostthresh, double ctpf1, double ctpf2, int cclumptype, int citimptype) {
        nextlevel();
        if (true) {
            int label = 0;
            int clist_15 = 0;
            int cdiscard_16 = alloconstack(0);
            int clp_17 = 0;
            int cnewp_18 = 0;
            int ctempp_19 = 0;
            int cpuuntried_20 = 0;
            int cpuvalid_21 = 0;
            int ci_22 = 0;
            int cj_23 = 0;
            int cipu_24 = 0;
            int cimode_25 = 0;
            int cichoice_26 = 0;
            int ciZone_27 = 0;
            int ciLoopCounter_28 = 0;
            int cdebugbuffer_29 = 0;

            {
                clist_15 = 0;
                setMEMINT((int) (cdiscard_16), (int) (0));
                clp_17 = 0;
                cnewp_18 = 0;
                ctempp_19 = 0;
                cpuuntried_20 = 0;
                cpuvalid_21 = 0;
                ci_22 = 0;
                cj_23 = 0;
                cipu_24 = 0;
                cimode_25 = 0;
                cichoice_26 = 0;
                ciZone_27 = 0;
                ciLoopCounter_28 = 0;
                cdebugbuffer_29 = calloca(1000);
                clist_15 = (int) (0);
                setMEMINT((int) (cdiscard_16), (int) ((int) (0)));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 10889 */
                cipu_24 = 0;
                lab_marxan362: for (; (((cipu_24) < (cpuno)) ? 1 : 0) != 0;) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 10876
                         */
                        if (((((((((((((getMEMINT((int) ((cR + ((int) (cipu_24) * 4))))) > (0)) ? 1
                                : 0)) != 0)
                                        ? ((((getMEMINT((int) (((cpu + ((int) (cipu_24) * 64)) + 4)))) < (2))
                                                ? 1 : 0))
                                        : 0)) != 0)
                                                ? ((((getMEMINT((int) (((cpu + ((int) (cipu_24) * 64))
                                                        + 40)))) != (1)) ? 1 : 0))
                                                : 0)) != 0)
                                                        ? ((((getMEMINT((int) (((cpu + ((int) (cipu_24) * 64))
                                                                + 48)))) != (1)) ? 1 : 0))
                                                        : 0) != 0) {

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 10888
                             */
                            cj_23 = 0;
                            lab_marxan363: for (; (((cj_23) < ((getMEMINT((int) (marxan.ciZoneCount)) * 2)))
                                    ? 1 : 0) != 0;) {

                                {
                                    cnewp_18 = (int) (
                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 10883
                                     */
                                    cmalloc(8));
                                    setMEMINT((int) ((cnewp_18 + 0)), (int) (cipu_24));
                                    setMEMINT((int) ((cnewp_18 + 4)), (int) (clist_15));
                                    clist_15 = cnewp_18;
                                    cpuvalid_21++;

                                }
                                cj_23++;

                            }

                        }
                        ;

                    }
                    cipu_24++;

                }
                cpuuntried_20 = cpuvalid_21;
                lab_marxan364: while (((((cpuuntried_20) > (0)) ? 1 : 0)) != 0) {

                    {
                        cipu_24 =
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 10901
                                 */
                                marxan.cRandNum(cpuuntried_20);
                        clp_17 = clist_15;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 10904
                         */
                        if ((((cipu_24) == (0)) ? 1 : 0) != 0) {

                            {
                                cichoice_26 = getMEMINT((int) ((clist_15 + 0)));

                            }

                        } else {

                            {
                                lab_marxan365: while (((((getMEMINT((int) ((clp_17 + 4)))) != 0)
                                        ? (((((--cipu_24)) > (0)) ? 1 : 0)) : 0)) != 0) {
                                    clp_17 = getMEMINT((int) ((clp_17 + 4)));

                                }
                                cichoice_26 = getMEMINT((int) ((getMEMINT((int) ((clp_17 + 4))) + 0)));

                            }

                        }
                        ;

                        {
                            cimode_25 = 1;

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 10920
                             */
                            if ((((getMEMINT((int) (((cpu + ((int) (cichoice_26) * 64)) + 48)))) == (1)) ? 1
                                    : 0) != 0) {

                                {
                                    ciLoopCounter_28 = 0;

                                    lab_marxan366: do {

                                        {
                                            ciZone_27 = (
                                            /*
                                             * file
                                             * E:/git/klab-ecology-component/etc/marxan/
                                             * marxan.c line 10927
                                             */
                                            marxan.cRandNum(getMEMINT((int) (marxan.ciZoneCount))) + 1);
                                            ciLoopCounter_28++;

                                            /*
                                             * file
                                             * E:/git/klab-ecology-component/etc/marxan/
                                             * marxan.c line 10932
                                             */
                                            if ((((ciLoopCounter_28) > (5000)) ? 1 : 0) != 0) {

                                                {

                                                    /*
                                                     * file
                                                     * E:/git/klab-ecology-component/etc/
                                                     * marxan/marxan.c line 10939
                                                     */
                                                    cShowGenProg((int) (strmarxan695), 0);

                                                    /*
                                                     * file
                                                     * E:/git/klab-ecology-component/etc/
                                                     * marxan/marxan.c line 10940
                                                     */
                                                    cShowGenProg((int) (strmarxan356), 0);

                                                    /*
                                                     * file
                                                     * E:/git/klab-ecology-component/etc/
                                                     * marxan/marxan.c line 10941
                                                     */
                                                    cShowPauseExit();

                                                    /*
                                                     * file
                                                     * E:/git/klab-ecology-component/etc/
                                                     * marxan/marxan.c line 10942
                                                     */
                                                    cexit(1);

                                                }

                                            }
                                            ;

                                        }

                                    } while (
                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 10946
                                     */
                                    cPuNotInAllowedZone((int) ((cpu + ((int) (cichoice_26)
                                            * 64))), ciZone_27, (int) (getMEMINT((int) (marxan.cPuZone))), 0, (byte) (73)) != 0);

                                }

                            } else {

                                {
                                    ciZone_27 = (
                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 10952
                                     */
                                    marxan.cRandNum(getMEMINT((int) (marxan.ciZoneCount))) + 1);

                                }

                            }
                            ;

                        }

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 10965
                         */
                        cCheckChange(cpuuntried_20, cichoice_26, cpuno, (int) (cpu), (int) (cconnections), (int) (cspec), (int) (cSM), (int) (cR), cimode_25, ciZone_27, cchange, creserve, ccostthresh, ctpf1, ctpf2, 1, cclumptype, 1);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 10967
                         */
                        if ((((getMEMDOUBLE((int) ((cchange + 0)))) < (0)) ? 1 : 0) != 0) {

                            {
                                startargs(cimode_25);
                                addarg(cichoice_26);

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 10969
                                 */
                                csprintf((int) (cdebugbuffer_29), strmarxan696, endargs());

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 10970
                                 */
                                cAppendDebugTraceFile((int) (cdebugbuffer_29), 0);
                                startargs(cichoice_26);
                                addarg(getMEMDOUBLE((int) ((cchange + 0))));

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 10973
                                 */
                                cShowGenProgInfo((int) (strmarxan697), endargs());

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 10974
                                 */
                                cDoChange(cichoice_26, cpuno, (int) (cR), creserve, (int) (cchange), (int) (cpu), (int) (cSM), (int) (cspec), (int) (cconnections), cimode_25, ciZone_27, cclumptype);
                                cpuuntried_20 = (cpuvalid_21 - 1);
                                clist_15 =
                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 10976
                                         */
                                        cItImpUndiscard(clist_15, cdiscard_16);

                            }

                        } else {

                            {
                                cpuuntried_20--;

                            }

                        }
                        ;
                        clist_15 =
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 10983
                                 */
                                cItImpDiscard(cichoice_26, clist_15, cdiscard_16);

                    }

                }
                lab_marxan367: while ((clist_15) != 0) {

                    {
                        ctempp_19 = clist_15;
                        clist_15 = getMEMINT((int) ((clist_15 + 4)));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 10993
                         */
                        cfree(ctempp_19);

                    }

                }
                lab_marxan368: while ((getMEMINT((int) (cdiscard_16))) != 0) {

                    {
                        ctempp_19 = getMEMINT((int) (cdiscard_16));
                        setMEMINT((int) (cdiscard_16), (int) (getMEMINT((int) ((getMEMINT((int) (cdiscard_16))
                                + 4)))));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 11000
                         */
                        cfree(ctempp_19);

                    }

                }

            }
        }
        ;
        prevlevel();
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 11011 */

    public static void csiftDown_ii(int cnumbers, int croot, int cbottom, int carray_size) {
        nextlevel();
        if (true) {
            int label = 0;
            int cdone_6 = 0;
            int cmaxChild_7 = 0;
            int ctemp_8 = 0;

            {
                cdone_6 = 0;
                cmaxChild_7 = 0;
                ctemp_8 = calloca(12);
                cdone_6 = 0;
                lab_marxan369: while (((((((((croot * 2)) <= (cbottom)) ? 1 : 0)) != 0)
                        ? (((cdone_6 == 0) ? 1 : 0)) : 0)) != 0) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 11019
                         */
                        if (((((croot * 2)) < (carray_size)) ? 1 : 0) != 0) {

                            {

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 11021
                                 */
                                if (((((croot * 2)) == (cbottom)) ? 1 : 0) != 0) {
                                    cmaxChild_7 = (croot * 2);

                                } else {

                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 11024
                                     */
                                    if ((((getMEMDOUBLE((int) (((cnumbers + ((int) ((croot * 2)) * 12))
                                            + 0)))) > (getMEMDOUBLE((int) (((cnumbers
                                                    + ((int) (((croot * 2) + 1)) * 12)) + 0))))) ? 1
                                                            : 0) != 0) {
                                        cmaxChild_7 = (croot * 2);

                                    } else {
                                        cmaxChild_7 = ((croot * 2) + 1);

                                    }
                                    ;

                                }
                                ;

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 11030
                                 */
                                if ((((getMEMDOUBLE((int) (((cnumbers + ((int) (croot) * 12))
                                        + 0)))) < (getMEMDOUBLE((int) (((cnumbers
                                                + ((int) (cmaxChild_7) * 12)) + 0))))) ? 1 : 0) != 0) {

                                    {
                                        cmemcpy((int) ctemp_8, (int) ((int) ((cnumbers
                                                + ((int) (croot) * 12)))), 12);
                                        cmemcpy((int) (cnumbers
                                                + ((int) (croot) * 12)), (int) ((int) ((cnumbers
                                                        + ((int) (cmaxChild_7) * 12)))), 12);
                                        cmemcpy((int) (cnumbers
                                                + ((int) (cmaxChild_7) * 12)), (int) ((int) (ctemp_8)), 12);
                                        croot = cmaxChild_7;

                                    }

                                } else {
                                    cdone_6 = 1;

                                }
                                ;

                            }

                        } else {
                            cdone_6 = 1;

                        }
                        ;

                    }

                }

            }
        }
        ;
        prevlevel();
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 11045 */

    public static void cheapSort_ii(int cnumbers, int carray_size) {
        nextlevel();
        if (true) {
            int label = 0;
            int ci_4 = 0;
            int ctemp_5 = 0;

            {
                ci_4 = 0;
                ctemp_5 = calloca(12);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 11060 */
                ci_4 = ((carray_size / 2) - 1);
                lab_marxan370: for (; (((ci_4) >= (0)) ? 1 : 0) != 0;) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 11059
                         */
                        csiftDown_ii((int) (cnumbers), ci_4, carray_size, carray_size);

                    }
                    ci_4--;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 11073 */
                ci_4 = (carray_size - 1);
                lab_marxan371: for (; (((ci_4) >= (1)) ? 1 : 0) != 0;) {

                    {
                        cmemcpy((int) ctemp_5, (int) ((int) ((cnumbers + ((int) (0) * 12)))), 12);
                        cmemcpy((int) (cnumbers
                                + ((int) (0) * 12)), (int) ((int) ((cnumbers + ((int) (ci_4) * 12)))), 12);
                        cmemcpy((int) (cnumbers + ((int) (ci_4) * 12)), (int) ((int) (ctemp_5)), 12);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 11072
                         */
                        csiftDown_ii((int) (cnumbers), 0, (ci_4 - 1), carray_size);

                    }
                    ci_4--;

                }

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan698 = jtocstr("IterativeImprovementOptimise start\n");
    static int strmarxan699 = jtocstr("IterativeImprovementOptimise puvalid %i\n");
    static int strmarxan700 = jtocstr("%s_itimp_objective%05i.csv");
    static int strmarxan701 = jtocstr("%s_itimp_objective%05i.txt");
    static int strmarxan702 = jtocstr("%s_itimp_objective%05i.dat");
    static int strmarxan703 = jtocstr("improvement,total,cost,connection,penalty\n");
    static int strmarxan704 = jtocstr("improvement total cost connection penalty\n");
    static int strmarxan705 = jtocstr("%s_itimp_zones%05i.csv");
    static int strmarxan706 = jtocstr("%s_itimp_zones%05i.txt");
    static int strmarxan707 = jtocstr("%s_itimp_zones%05i.dat");
    static int strmarxan708 = jtocstr("IterativeImprovementOptimise after array init file %s\n");
    static int strmarxan709 = jtocstr("IterativeImprovementOptimise after heapSort_ii\n");
    static int strmarxan710 = jtocstr("PuZone endless loop in IterativeImprovementOptimise detected\n");
    static int strmarxan711 = jtocstr("\nPuZone endless loop in IterativeImprovementOptimise detected\n");
    static int strmarxan712 = jtocstr("%i,%f,%f,%f,%f\n");
    static int strmarxan713 = jtocstr("%i %f %f %f %f\n");
    static int strmarxan714 = jtocstr("IterativeImprovementOptimise end changes %i\n");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 11080 */

    public static void cIterativeImprovementOptimise(int cpuno, int cpu, int cconnections, int cspec, int cSM, int cR, int creserve, int cchange, double ccostthresh, double ctpf1, double ctpf2, int cclumptype, int cirun, int csavename) {
        nextlevel();
        if (true) {
            int label = 0;
            int cpuvalid_16 = 0;
            int ci_17 = 0;
            int cj_18 = 0;
            int cipu_19 = 0;
            int cimode_20 = 0;
            int cichoice_21 = 0;
            int ciZone_22 = 0;
            int ciSamplesForEachPu_23 = 0;
            int ciRowCounter_24 = 0;
            int ciRowLimit_25 = 0;
            int ciLoopCounter_26 = 0;
            int ciPreviousR_27 = 0;
            int cichanges_28 = 0;
            int ciimparray_29 = 0;
            double cdebugfloat_30 = 0;
            int cdebugbuffer_31 = 0;
            int ctempname2_32 = 0;
            int cttfp_33 = 0;
            int czonefp_34 = 0;
            int cwritename_35 = 0;

            {
                cpuvalid_16 = 0;
                ci_17 = 0;
                cj_18 = 0;
                cipu_19 = 0;
                cimode_20 = 0;
                cichoice_21 = 0;
                ciZone_22 = 0;
                ciSamplesForEachPu_23 = 0;
                ciRowCounter_24 = 0;
                ciRowLimit_25 = 0;
                ciLoopCounter_26 = 0;
                ciPreviousR_27 = 0;
                cichanges_28 = 0;
                ciimparray_29 = 0;
                cdebugfloat_30 = 0;
                cdebugbuffer_31 = calloca(1000);
                ctempname2_32 = calloca(100);
                cttfp_33 = 0;
                czonefp_34 = 0;
                cwritename_35 = 0;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 11089 */
                cAppendDebugTraceFile((int) (strmarxan698), 0);
                ciSamplesForEachPu_23 = ((getMEMINT((int) (marxan.ciZoneCount)) - 1) * 2);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 11100 */
                ci_17 = 0;
                lab_marxan372: for (; (((ci_17) < (cpuno)) ? 1 : 0) != 0;) {

                    /*
                     * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 11097
                     */
                    if (((((((((((((getMEMINT((int) ((cR + ((int) (cipu_19) * 4))))) > (0)) ? 1 : 0)) != 0)
                            ? ((((getMEMINT((int) (((cpu + ((int) (cipu_19) * 64)) + 4)))) < (2)) ? 1 : 0))
                            : 0)) != 0)
                                    ? ((((getMEMINT((int) (((cpu + ((int) (cipu_19) * 64)) + 40)))) != (1))
                                            ? 1 : 0))
                                    : 0)) != 0)
                                            ? ((((getMEMINT((int) (((cpu + ((int) (cipu_19) * 64))
                                                    + 48)))) != (1)) ? 1 : 0))
                                            : 0) != 0) {
                        cpuvalid_16 += ciSamplesForEachPu_23;

                    }
                    ;
                    ci_17++;

                }
                startargs(cpuvalid_16);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 11100 */
                csprintf((int) (cdebugbuffer_31), strmarxan699, endargs());

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 11101 */
                cAppendDebugTraceFile((int) (cdebugbuffer_31), 0);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 11105 */
                if (getMEMINT((int) ((marxan.cfnames + 152))) != 0) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 11107
                         */
                        if ((((getMEMINT((int) ((marxan.cfnames + 152)))) == (3)) ? 1 : 0) != 0) {
                            startargs(csavename);
                            addarg((cirun % 10000));

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 11107
                             */
                            csprintf((int) (ctempname2_32), strmarxan700, endargs());

                        } else {

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 11110
                             */
                            if ((((getMEMINT((int) ((marxan.cfnames + 152)))) == (2)) ? 1 : 0) != 0) {
                                startargs(csavename);
                                addarg((cirun % 10000));

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 11110
                                 */
                                csprintf((int) (ctempname2_32), strmarxan701, endargs());

                            } else {
                                startargs(csavename);
                                addarg((cirun % 10000));

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 11112
                                 */
                                csprintf((int) (ctempname2_32), strmarxan702, endargs());

                            }
                            ;

                        }
                        ;
                        cwritename_35 = (int) (
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 11114
                         */
                        ccalloc(((
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 11114
                         */
                        cstrlen(getMEMINT((int) ((marxan.cfnames + 4)))) +
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 11114
                         */
                                cstrlen((int) (ctempname2_32))) + 2), 1));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 11116
                         */
                        cstrcpy(cwritename_35, (int) (ctempname2_32));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 11118
                         */
                        cttfp_33 =
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 11117
                                 */
                                cfopen(cwritename_35, strmarxan198);
                        if ((((cttfp_33) == ((int) (0))) ? 1 : 0) != 0) {
                            startargs(cwritename_35);

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 11118
                             */
                            cShowErrorMessage((int) (strmarxan399), endargs());

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 11119
                         */
                        cfree(cwritename_35);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 11121
                         */
                        if ((((getMEMINT((int) ((marxan.cfnames + 152)))) > (1)) ? 1 : 0) != 0) {

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 11121
                             */
                            cfprintf(cttfp_33, strmarxan703, 0);

                        } else {

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 11123
                             */
                            cfprintf(cttfp_33, strmarxan704, 0);

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 11126
                         */
                        if ((((getMEMINT((int) ((marxan.cfnames + 152)))) == (3)) ? 1 : 0) != 0) {
                            startargs(csavename);
                            addarg((cirun % 10000));

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 11126
                             */
                            csprintf((int) (ctempname2_32), strmarxan705, endargs());

                        } else {

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 11129
                             */
                            if ((((getMEMINT((int) ((marxan.cfnames + 152)))) == (2)) ? 1 : 0) != 0) {
                                startargs(csavename);
                                addarg((cirun % 10000));

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 11129
                                 */
                                csprintf((int) (ctempname2_32), strmarxan706, endargs());

                            } else {
                                startargs(csavename);
                                addarg((cirun % 10000));

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 11131
                                 */
                                csprintf((int) (ctempname2_32), strmarxan707, endargs());

                            }
                            ;

                        }
                        ;
                        cwritename_35 = (int) (
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 11134
                         */
                        ccalloc(((
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 11134
                         */
                        cstrlen(getMEMINT((int) ((marxan.cfnames + 4)))) +
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 11134
                         */
                                cstrlen((int) (ctempname2_32))) + 2), 1));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 11136
                         */
                        cstrcat(cwritename_35, (int) (ctempname2_32));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 11138
                         */
                        czonefp_34 =
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 11137
                                 */
                                cfopen(cwritename_35, strmarxan198);
                        if ((((czonefp_34) == ((int) (0))) ? 1 : 0) != 0) {
                            startargs(cwritename_35);

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 11138
                             */
                            cShowErrorMessage((int) (strmarxan399), endargs());

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 11139
                         */
                        cfree(cwritename_35);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 11140
                         */
                        cfprintf(czonefp_34, strmarxan407, 0);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 11142
                         */
                        if ((((getMEMINT((int) ((marxan.cfnames + 152)))) > (1)) ? 1 : 0) != 0) {

                            {

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 11144
                                 */
                                ci_17 = 0;
                                lab_marxan373: for (; (((ci_17) < (cpuno)) ? 1 : 0) != 0;) {
                                    startargs(getMEMINT((int) (((cpu + ((int) (ci_17) * 64)) + 0))));

                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 11144
                                     */
                                    cfprintf(czonefp_34, strmarxan240, endargs());
                                    ci_17++;

                                }

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 11145
                                 */
                                cfprintf(czonefp_34, strmarxan408, 0);

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 11148
                                 */
                                ci_17 = 0;
                                lab_marxan374: for (; (((ci_17) < (cpuno)) ? 1 : 0) != 0;) {
                                    startargs(getMEMINT((int) ((cR + ((int) (ci_17) * 4)))));

                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 11148
                                     */
                                    cfprintf(czonefp_34, strmarxan240, endargs());
                                    ci_17++;

                                }

                            }

                        } else {

                            {

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 11153
                                 */
                                ci_17 = 0;
                                lab_marxan375: for (; (((ci_17) < (cpuno)) ? 1 : 0) != 0;) {
                                    startargs(getMEMINT((int) (((cpu + ((int) (ci_17) * 64)) + 0))));

                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 11153
                                     */
                                    cfprintf(czonefp_34, strmarxan409, endargs());
                                    ci_17++;

                                }

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 11154
                                 */
                                cfprintf(czonefp_34, strmarxan408, 0);

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 11157
                                 */
                                ci_17 = 0;
                                lab_marxan376: for (; (((ci_17) < (cpuno)) ? 1 : 0) != 0;) {
                                    startargs(getMEMINT((int) ((cR + ((int) (ci_17) * 4)))));

                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 11157
                                     */
                                    cfprintf(czonefp_34, strmarxan409, endargs());
                                    ci_17++;

                                }

                            }

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 11159
                         */
                        cfprintf(czonefp_34, strmarxan137, 0);
                        ciRowCounter_24 = 0;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 11163
                         */
                        if ((((getMEMINT((int) ((marxan.cfnames + 156)))) == (0)) ? 1 : 0) != 0) {
                            ciRowLimit_25 = 0;

                        } else {
                            ciRowLimit_25 = (int) (
                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 11165
                             */
                            cfloor((cpuvalid_16 / getMEMINT((int) ((marxan.cfnames + 156))))));

                        }
                        ;

                    }

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 11169 */
                if ((((cpuvalid_16) > (0)) ? 1 : 0) != 0) {

                    {
                        ciimparray_29 = (int) (
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 11170
                         */
                        ccalloc(cpuvalid_16, 12));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 11182
                         */
                        ci_17 = 0;
                        lab_marxan377: for (; (((ci_17) < (cpuno)) ? 1 : 0) != 0;) {

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 11174
                             */
                            if (((((((((((((getMEMINT((int) ((cR + ((int) (ci_17) * 4))))) > (0)) ? 1
                                    : 0)) != 0)
                                            ? ((((getMEMINT((int) (((cpu + ((int) (ci_17) * 64))
                                                    + 4)))) < (2)) ? 1 : 0))
                                            : 0)) != 0)
                                                    ? ((((getMEMINT((int) (((cpu + ((int) (ci_17) * 64))
                                                            + 40)))) != (1)) ? 1 : 0))
                                                    : 0)) != 0) ? ((((getMEMINT((int) (((cpu
                                                            + ((int) (ci_17) * 64)) + 48)))) != (1)) ? 1 : 0))
                                                            : 0) != 0) {

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 11179
                                 */
                                cj_18 = 0;
                                lab_marxan378: for (; (((cj_18) < (ciSamplesForEachPu_23)) ? 1 : 0) != 0;) {

                                    {
                                        setMEMINT((int) (((ciimparray_29 + (cipu_19 * 12))
                                                + 8)), (int) (ci_17));
                                        setMEMDOUBLE((int) (((ciimparray_29 + (cipu_19 * 12))
                                                + 0)), (double) (
                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 11177
                                         */
                                        marxan.crand1()));
                                        cipu_19++;

                                    }
                                    cj_18++;

                                }

                            }
                            ;
                            ci_17++;

                        }
                        startargs(ctempname2_32);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 11182
                         */
                        csprintf((int) (cdebugbuffer_31), strmarxan708, endargs());

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 11183
                         */
                        cAppendDebugTraceFile((int) (cdebugbuffer_31), 0);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 11187
                         */
                        cheapSort_ii((int) (ciimparray_29), cpuvalid_16);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 11190
                         */
                        cAppendDebugTraceFile((int) (strmarxan709), 0);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 11284
                         */
                        ci_17 = 0;
                        lab_marxan379: for (; (((ci_17) < (cpuvalid_16)) ? 1 : 0) != 0;) {

                            {
                                cichoice_21 = getMEMINT((int) (((ciimparray_29 + (ci_17 * 12)) + 8)));

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 11199
                                 */
                                if (((((((((((((getMEMINT((int) ((cR + ((int) (cichoice_21) * 4))))) > (0))
                                        ? 1 : 0)) != 0)
                                                ? ((((getMEMINT((int) (((cpu + ((int) (cichoice_21) * 64))
                                                        + 4)))) < (2)) ? 1 : 0))
                                                : 0)) != 0)
                                                        ? ((((getMEMINT((int) (((cpu
                                                                + ((int) (cichoice_21) * 64)) + 40)))) != (1))
                                                                        ? 1 : 0))
                                                        : 0)) != 0) ? ((((getMEMINT((int) (((cpu
                                                                + ((int) (cichoice_21) * 64)) + 48)))) != (1))
                                                                        ? 1 : 0))
                                                                : 0) != 0) {

                                    {
                                        ciPreviousR_27 = getMEMINT((int) ((cR + ((int) (cichoice_21) * 4))));

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 11204
                                         */
                                        if ((((getMEMINT((int) (((cpu + ((int) (cichoice_21) * 64))
                                                + 48)))) == (1)) ? 1 : 0) != 0) {

                                            {
                                                ciLoopCounter_26 = 0;

                                                lab_marxan380: do {

                                                    {
                                                        ciZone_22 = (
                                                        /*
                                                         * file
                                                         * E:/git/klab-ecology-component/
                                                         * etc/marxan/marxan.c line 11210
                                                         */
                                                        marxan.cRandNum(getMEMINT((int) (marxan.ciZoneCount)))
                                                                + 1);
                                                        ciLoopCounter_26++;

                                                        /*
                                                         * file
                                                         * E:/git/klab-ecology-component/
                                                         * etc/marxan/marxan.c line 11214
                                                         */
                                                        if ((((ciLoopCounter_26) > (5000)) ? 1 : 0) != 0) {

                                                            {

                                                                /*
                                                                 * file
                                                                 * E:/git/klab-ecology-
                                                                 * component/etc/marxan/
                                                                 * marxan.c line 11216
                                                                 */
                                                                cDumpPuZone_Debug(getMEMINT((int) (marxan.ciPuZoneCount)), (int) (getMEMINT((int) (marxan.cPuZone))), (int) (marxan.cfnames), 999);

                                                                /*
                                                                 * file
                                                                 * E:/git/klab-ecology-
                                                                 * component/etc/marxan/
                                                                 * marxan.c line 11217
                                                                 */
                                                                cAppendDebugTraceFile((int) (strmarxan710), 0);
                                                                startargs(getMEMINT((int) (((cpu
                                                                        + ((int) (cichoice_21) * 64)) + 0))));
                                                                addarg(ciZone_22);

                                                                /*
                                                                 * file
                                                                 * E:/git/klab-ecology-
                                                                 * component/etc/marxan/
                                                                 * marxan.c line 11218
                                                                 */
                                                                csprintf((int) (cdebugbuffer_31), strmarxan384, endargs());

                                                                /*
                                                                 * file
                                                                 * E:/git/klab-ecology-
                                                                 * component/etc/marxan/
                                                                 * marxan.c line 11219
                                                                 */
                                                                cAppendDebugTraceFile((int) (cdebugbuffer_31), 0);

                                                                /*
                                                                 * file
                                                                 * E:/git/klab-ecology-
                                                                 * component/etc/marxan/
                                                                 * marxan.c line 11221
                                                                 */
                                                                cShowGenProg((int) (strmarxan711), 0);

                                                                /*
                                                                 * file
                                                                 * E:/git/klab-ecology-
                                                                 * component/etc/marxan/
                                                                 * marxan.c line 11222
                                                                 */
                                                                cShowGenProg((int) (strmarxan356), 0);

                                                                /*
                                                                 * file
                                                                 * E:/git/klab-ecology-
                                                                 * component/etc/marxan/
                                                                 * marxan.c line 11223
                                                                 */
                                                                cShowPauseExit();

                                                                /*
                                                                 * file
                                                                 * E:/git/klab-ecology-
                                                                 * component/etc/marxan/
                                                                 * marxan.c line 11224
                                                                 */
                                                                cexit(1);

                                                            }

                                                        }
                                                        ;

                                                    }

                                                } while (((((((ciZone_22) == (ciPreviousR_27)) ? 1 : 0)) != 0)
                                                        ? 1 : (
                                                        /*
                                                         * file
                                                         * E:/git/klab-ecology-component/
                                                         * etc/marxan/marxan.c line 11227
                                                         */
                                                        cPuNotInAllowedZone((int) ((cpu + ((int) (cichoice_21) * 64))), ciZone_22, (int) (getMEMINT((int) (marxan.cPuZone))), 0, (byte) (73)))) != 0);

                                            }

                                        } else {

                                            {

                                                lab_marxan381: do {
                                                    ciZone_22 = (
                                                    /*
                                                     * file
                                                     * E:/git/klab-ecology-component/etc/
                                                     * marxan/marxan.c line 11233
                                                     */
                                                    marxan.cRandNum(getMEMINT((int) (marxan.ciZoneCount)))
                                                            + 1);

                                                } while ((((ciZone_22) == (ciPreviousR_27)) ? 1 : 0) != 0);

                                            }

                                        }
                                        ;
                                        cimode_20 = 1;

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 11244
                                         */
                                        cCheckChange(ci_17, cichoice_21, cpuno, (int) (cpu), (int) (cconnections), (int) (cspec), (int) (cSM), (int) (cR), cimode_20, ciZone_22, cchange, creserve, ccostthresh, ctpf1, ctpf2, 1, cclumptype, 1);

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 11246
                                         */
                                        if ((((getMEMDOUBLE((int) ((cchange + 0)))) < (0)) ? 1 : 0) != 0) {

                                            {
                                                cichanges_28++;
                                                startargs(cichoice_21);
                                                addarg(getMEMDOUBLE((int) ((cchange + 0))));

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 11248
                                                 */
                                                cShowGenProgInfo((int) (strmarxan697), endargs());

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 11249
                                                 */
                                                cDoChange(cichoice_21, cpuno, (int) (cR), creserve, (int) (cchange), (int) (cpu), (int) (cSM), (int) (cspec), (int) (cconnections), cimode_20, ciZone_22, cclumptype);

                                            }

                                        }
                                        ;

                                    }

                                }
                                ;

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 11254
                                 */
                                if (getMEMINT((int) ((marxan.cfnames + 152))) != 0) {

                                    {
                                        ciRowCounter_24++;

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 11257
                                         */
                                        if ((((ciRowCounter_24) > (ciRowLimit_25)) ? 1 : 0) != 0) {
                                            ciRowCounter_24 = 1;

                                        }
                                        ;

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 11260
                                         */
                                        if ((((ciRowCounter_24) == (1)) ? 1 : 0) != 0) {

                                            {
                                                startargs(ci_17);

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 11261
                                                 */
                                                cfprintf(czonefp_34, strmarxan234, endargs());

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 11264
                                                 */
                                                if ((((getMEMINT((int) ((marxan.cfnames + 152)))) > (1)) ? 1
                                                        : 0) != 0) {

                                                    {
                                                        startargs(ci_17);
                                                        addarg(getMEMDOUBLE((int) ((creserve + 0))));
                                                        addarg(getMEMDOUBLE((int) ((creserve + 28))));
                                                        addarg(getMEMDOUBLE((int) ((creserve + 8))));
                                                        addarg(getMEMDOUBLE((int) ((creserve + 20))));

                                                        /*
                                                         * file
                                                         * E:/git/klab-ecology-component/
                                                         * etc/marxan/marxan.c line 11267
                                                         */
                                                        cfprintf(cttfp_33, strmarxan712, endargs());

                                                        /*
                                                         * file
                                                         * E:/git/klab-ecology-component/
                                                         * etc/marxan/marxan.c line 11270
                                                         */
                                                        cj_18 = 0;
                                                        lab_marxan382: for (; (((cj_18) < (cpuno)) ? 1
                                                                : 0) != 0;) {
                                                            startargs(getMEMINT((int) ((cR
                                                                    + ((int) (cj_18) * 4)))));

                                                            /*
                                                             * file E:/git/klab-ecology-
                                                             * component/etc/marxan/marxan
                                                             * .c line 11270
                                                             */
                                                            cfprintf(czonefp_34, strmarxan240, endargs());
                                                            cj_18++;

                                                        }

                                                    }

                                                } else {

                                                    {
                                                        startargs(ci_17);
                                                        addarg(getMEMDOUBLE((int) ((creserve + 0))));
                                                        addarg(getMEMDOUBLE((int) ((creserve + 28))));
                                                        addarg(getMEMDOUBLE((int) ((creserve + 8))));
                                                        addarg(getMEMDOUBLE((int) ((creserve + 20))));

                                                        /*
                                                         * file
                                                         * E:/git/klab-ecology-component/
                                                         * etc/marxan/marxan.c line 11275
                                                         */
                                                        cfprintf(cttfp_33, strmarxan713, endargs());

                                                        /*
                                                         * file
                                                         * E:/git/klab-ecology-component/
                                                         * etc/marxan/marxan.c line 11278
                                                         */
                                                        cj_18 = 0;
                                                        lab_marxan383: for (; (((cj_18) < (cpuno)) ? 1
                                                                : 0) != 0;) {
                                                            startargs(getMEMINT((int) ((cR
                                                                    + ((int) (cj_18) * 4)))));

                                                            /*
                                                             * file E:/git/klab-ecology-
                                                             * component/etc/marxan/marxan
                                                             * .c line 11278
                                                             */
                                                            cfprintf(czonefp_34, strmarxan409, endargs());
                                                            cj_18++;

                                                        }

                                                    }

                                                }
                                                ;

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 11281
                                                 */
                                                cfprintf(czonefp_34, strmarxan137, 0);

                                            }

                                        }
                                        ;

                                    }

                                }
                                ;

                            }
                            ci_17++;

                        }

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 11286
                         */
                        cfree(ciimparray_29);

                    }

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 11290 */
                if (getMEMINT((int) ((marxan.cfnames + 152))) != 0) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 11291
                         */
                        cfclose(cttfp_33);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 11292
                         */
                        cfclose(czonefp_34);

                    }

                }
                ;
                startargs(cichanges_28);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 11296 */
                csprintf((int) (cdebugbuffer_31), strmarxan714, endargs());

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 11297 */
                cAppendDebugTraceFile((int) (cdebugbuffer_31), 0);

            }
        }
        ;
        prevlevel();
    }

    public static int cRandomIY = alloconstack(0);
    public static int cRandomIV = calloc_init(128);

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 11330 */

    public static double crand1() {
        nextlevel();
        if (true) {
            int label = 0;
            double retval = 0;
            int cj_3 = 0;
            int ck_4 = 0;
            double ctemp_5 = 0;
            int y76 = 0;
            int y77 = 0;

            {
                cj_3 = 0;
                ck_4 = 0;
                ctemp_5 = 0;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 11336 */
                if (((((((getMEMINT((int) (marxan.cRandSeed1))) <= (0)) ? 1 : 0)) != 0) ? 1
                        : (((getMEMINT((int) (marxan.cRandomIY)) == 0) ? 1 : 0))) != 0) {

                    {
                        setMEMINT((int) (marxan.cRandSeed1), (int) ((-(getMEMINT((int) (marxan.cRandSeed1))))));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 11346
                         */
                        cj_3 = (32 + 7);
                        lab_marxan384: for (; (((cj_3) >= (0)) ? 1 : 0) != 0;) {

                            {
                                ck_4 = (getMEMINT((int) (marxan.cRandSeed1)) / 127773);
                                setMEMINT((int) (marxan.cRandSeed1), (int) (((16807
                                        * (getMEMINT((int) (marxan.cRandSeed1)) - (ck_4 * 127773)))
                                        - (2836 * ck_4))));

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 11343
                                 */
                                if ((((getMEMINT((int) (marxan.cRandSeed1))) < (0)) ? 1 : 0) != 0) {
                                    y76 = (int) (marxan.cRandSeed1);
                                    setMEMINT((int) (y76), (int) ((getMEMINT((int) (y76)) + 2147483647)));

                                }
                                ;

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 11345
                                 */
                                if ((((cj_3) < (32)) ? 1 : 0) != 0) {
                                    setMEMINT((int) ((marxan.cRandomIV + ((int) (cj_3)
                                            * 4))), (int) (getMEMINT((int) (marxan.cRandSeed1))));

                                }
                                ;

                            }
                            cj_3--;

                        }
                        setMEMINT((int) (marxan.cRandomIY), (int) (getMEMINT((int) ((marxan.cRandomIV
                                + ((int) (0) * 4))))));

                    }

                }
                ;
                ck_4 = (getMEMINT((int) (marxan.cRandSeed1)) / 127773);
                setMEMINT((int) (marxan.cRandSeed1), (int) (((16807
                        * (getMEMINT((int) (marxan.cRandSeed1)) - (ck_4 * 127773))) - (2836 * ck_4))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 11352 */
                if ((((getMEMINT((int) (marxan.cRandSeed1))) < (0)) ? 1 : 0) != 0) {
                    y77 = (int) (marxan.cRandSeed1);
                    setMEMINT((int) (y77), (int) ((getMEMINT((int) (y77)) + 2147483647)));

                }
                ;
                cj_3 = (getMEMINT((int) (marxan.cRandomIY)) / (1 + ((2147483647 - 1) / 32)));
                setMEMINT((int) (marxan.cRandomIY), (int) (getMEMINT((int) ((marxan.cRandomIV
                        + ((int) (cj_3) * 4))))));
                setMEMINT((int) ((marxan.cRandomIV
                        + ((int) (cj_3) * 4))), (int) (getMEMINT((int) (marxan.cRandSeed1))));
                ctemp_5 = ((1.0 / (double) (2147483647)) * (double) (getMEMINT((int) (marxan.cRandomIY))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 11358 */
                if ((((ctemp_5) > ((1.0 - 1.2e-7))) ? 1 : 0) != 0) {
                    retval = (1.0 - 1.2e-7);
                    if (true) {
                        prevlevel();
                        return retval;
                    }
                    ;

                } else {
                    retval = ctemp_5;
                    if (true) {
                        prevlevel();
                        return retval;
                    }
                    ;

                }
                ;

            }
        }
        ;
        prevlevel();
        return 0;
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 11364 */

    public static void cInitRandSeed(int ciSeed) {
        nextlevel();
        if (true) {
            int label = 0;

            {

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 11366 */
                if ((((ciSeed) > (0)) ? 1 : 0) != 0) {
                    setMEMINT((int) (marxan.cRandSeed1), (int) (ciSeed));

                } else {
                    setMEMINT((int) (marxan.cRandSeed1), (int) ((int) (
                    /*
                     * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 11368
                     */
                    ctime((int) (0)))));

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 11370 */
                if ((((getMEMINT((int) (marxan.cRandSeed1))) > (0)) ? 1 : 0) != 0) {
                    setMEMINT((int) (marxan.cRandSeed1), (int) ((-(getMEMINT((int) (marxan.cRandSeed1))))));

                }
                ;

            }
        }
        ;
        prevlevel();
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 11375 */

    public static int cRandNum(int cnum) {
        nextlevel();
        if (true) {
            int label = 0;
            int retval = 0;
            int ctemp_4 = 0;

            {
                ctemp_4 = 0;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 11379 */
                if ((((cnum) == (0)) ? 1 : 0) != 0) {
                    retval = 0;
                    if (true) {
                        prevlevel();
                        return retval;
                    }
                    ;

                }
                ;
                ctemp_4 = (int) ((
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 11380 */
                crand1() * (double) (cnum)));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 11382 */
                if ((((ctemp_4) == (cnum)) ? 1 : 0) != 0) {
                    retval = 0;
                    if (true) {
                        prevlevel();
                        return retval;
                    }
                    ;

                } else {
                    retval = (int) (ctemp_4);
                    if (true) {
                        prevlevel();
                        return retval;
                    }
                    ;

                }
                ;

            }
        }
        ;
        prevlevel();
        return 0;
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 11401 */

    public static double cSepPenalty(int cival) {
        nextlevel();
        if (true) {
            int label = 0;
            double retval = 0;

            {
                lab_marxan385: {
                    switch ((int) (cival))

                    {

                    case 1:
                        retval = 0.5;
                        if (true) {
                            prevlevel();
                            return retval;
                        }
                        ;

                    case 2:
                        retval = 0.2;
                        if (true) {
                            prevlevel();
                            return retval;
                        }
                        ;

                    case 3:
                        retval = 0.0;
                        if (true) {
                            prevlevel();
                            return retval;
                        }
                        ;

                    }

                }
                retval = 0;
                if (true) {
                    prevlevel();
                    return retval;
                }
                ;

            }
        }
        ;
        prevlevel();
        return 0;
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 11420 */

    public static double cSepPenalty2(int cival, int citarget) {
        nextlevel();
        if (true) {
            int label = 0;
            double retval = 0;
            double cfval_5 = 0;

            {
                cfval_5 = 0;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 11424 */
                if (((citarget == 0) ? 1 : 0) != 0) {
                    retval = 0;
                    if (true) {
                        prevlevel();
                        return retval;
                    }
                    ;

                }
                ;
                cfval_5 = ((double) (cival) / (double) (citarget));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 11427 */
                if (((cival == 0) ? 1 : 0) != 0) {
                    cfval_5 = (1.0 / (double) (citarget));

                }
                ;
                retval = ((1 / ((7 * cfval_5) + 0.2)) - (1 / 7.2));
                if (true) {
                    prevlevel();
                    return retval;
                }
                ;

            }
        }
        ;
        prevlevel();
        return 0;
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 11436 */

    public static int cValidPU(int cipu, int cisp, int cnewno, int cspec, int cpu, int cSM, int cimode) {
        nextlevel();
        if (true) {
            int label = 0;
            int retval = 0;
            int ci_10 = 0;
            int cpclump_11 = 0;
            int cppu_12 = 0;

            {
                ci_10 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 11438
                         */
                        crtnIdxSpecAtPu((int) (cpu), (int) (cSM), cipu, cisp);
                cpclump_11 = 0;
                cppu_12 = 0;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 11441 */
                if (cnewno != 0) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 11443
                         */
                        if ((((cimode) == ((-(2)))) ? 1 : 0) != 0) {

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 11444
                             */
                            if ((((getMEMINT((int) (((cSM + ((int) (ci_10) * 16))
                                    + 8)))) == (getMEMINT((int) ((cnewno + 0))))) ? 1 : 0) != 0) {
                                retval = 0;
                                if (true) {
                                    prevlevel();
                                    return retval;
                                }
                                ;

                            }
                            ;

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 11454
                         */
                        cppu_12 = cnewno;
                        lab_marxan386: for (; cppu_12 != 0;) {

                            {

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 11448
                                 */
                                if ((((cipu) == (getMEMINT((int) ((cppu_12 + 0))))) ? 1 : 0) != 0) {

                                    {

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 11450
                                         */
                                        if ((((getMEMDOUBLE((int) ((cppu_12
                                                + 4)))) < (getMEMDOUBLE((int) (((cspec + ((int) (cisp) * 100))
                                                        + 80))))) ? 1 : 0) != 0) {
                                            retval = 0;
                                            if (true) {
                                                prevlevel();
                                                return retval;
                                            }
                                            ;

                                        } else {
                                            retval = 1;
                                            if (true) {
                                                prevlevel();
                                                return retval;
                                            }
                                            ;

                                        }
                                        ;

                                    }

                                }
                                ;

                            }
                            cppu_12 = getMEMINT((int) ((cppu_12 + 20)));

                        }

                    }

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 11458 */
                cpclump_11 = getMEMINT((int) (((cspec + ((int) (cisp) * 100)) + 88)));
                lab_marxan387: for (; (((cpclump_11) != 0)
                        ? ((((getMEMINT((int) (((cSM + ((int) (ci_10) * 16))
                                + 8)))) != (getMEMINT((int) ((cpclump_11 + 0))))) ? 1 : 0))
                        : 0) != 0;) {
                    cpclump_11 = getMEMINT((int) ((cpclump_11 + 20)));

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 11460 */
                if (cpclump_11 != 0) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 11462
                         */
                        if ((((getMEMDOUBLE((int) ((cpclump_11
                                + 4)))) < (getMEMDOUBLE((int) (((cspec + ((int) (cisp) * 100)) + 80))))) ? 1
                                        : 0) != 0) {
                            retval = 0;
                            if (true) {
                                prevlevel();
                                return retval;
                            }
                            ;

                        } else {
                            retval = 1;
                            if (true) {
                                prevlevel();
                                return retval;
                            }
                            ;

                        }
                        ;

                    }

                } else {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 11469
                         */
                        if ((((getMEMDOUBLE((int) (((cSM + ((int) (ci_10) * 16))
                                + 0)))) < (getMEMDOUBLE((int) (((cspec + ((int) (cisp) * 100)) + 80))))) ? 1
                                        : 0) != 0) {
                            retval = 0;
                            if (true) {
                                prevlevel();
                                return retval;
                            }
                            ;

                        } else {
                            retval = 1;
                            if (true) {
                                prevlevel();
                                return retval;
                            }
                            ;

                        }
                        ;

                    }

                }
                ;

            }
        }
        ;
        prevlevel();
        return 0;
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 11477 */

    public static int cCheckDistance(int ci, int cj, int cpu, double csquaretarget) {
        nextlevel();
        if (true) {
            int label = 0;
            int retval = 0;

            {

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 11480 */
                if (((((((getMEMDOUBLE((int) (((cpu + ((int) (ci) * 64)) + 8)))
                        - getMEMDOUBLE((int) (((cpu + ((int) (cj) * 64)) + 8))))
                        * (getMEMDOUBLE((int) (((cpu + ((int) (ci) * 64)) + 8)))
                                - getMEMDOUBLE((int) (((cpu + ((int) (cj) * 64)) + 8)))))
                        + ((getMEMDOUBLE((int) (((cpu + ((int) (ci) * 64)) + 16)))
                                - getMEMDOUBLE((int) (((cpu + ((int) (cj) * 64)) + 16))))
                                * (getMEMDOUBLE((int) (((cpu + ((int) (ci) * 64)) + 16)))
                                        - getMEMDOUBLE((int) (((cpu + ((int) (cj) * 64))
                                                + 16))))))) >= (csquaretarget)) ? 1 : 0) != 0) {
                    retval = 1;
                    if (true) {
                        prevlevel();
                        return retval;
                    }
                    ;

                } else {
                    retval = 0;
                    if (true) {
                        prevlevel();
                        return retval;
                    }
                    ;

                }
                ;

            }
        }
        ;
        prevlevel();
        return 0;
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 11487 */

    public static int cCountSeparation(int cisp, int cnewno, int cpu, int cSM, int cspec, int cimode) {
        nextlevel();
        if (true) {
            int label = 0;
            int retval = 0;
            int cfirst_9 = 0;
            int csecond_10 = 0;
            int cptemp_11 = 0;
            int cptest_12 = 0;
            int cpclump_13 = 0;
            int cppu_14 = 0;
            int csepcount_15 = 0;
            int ctest_16 = 0;
            double ctargetdist_17 = 0;

            {
                cfirst_9 = (int) (0);
                csecond_10 = (int) (0);
                cptemp_11 = 0;
                cptest_12 = 0;
                cpclump_13 = 0;
                cppu_14 = 0;
                csepcount_15 = 1;
                ctest_16 = 0;
                ctargetdist_17 = 0;
                ctargetdist_17 = (getMEMDOUBLE((int) (((cspec + ((int) (cisp) * 100)) + 60)))
                        * getMEMDOUBLE((int) (((cspec + ((int) (cisp) * 100)) + 60))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 11501 */
                if ((((ctargetdist_17) == (0)) ? 1 : 0) != 0) {
                    retval = 3;
                    if (true) {
                        prevlevel();
                        return retval;
                    }
                    ;

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 11506 */
                if ((((cimode) == (1)) ? 1 : 0) != 0) {

                    /*
                     * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 11507
                     */
                    if (
                    /*
                     * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 11506
                     */
                    cValidPU(getMEMINT((int) ((cnewno
                            + 0))), cisp, cnewno, (int) (cspec), (int) (cpu), (int) (cSM), cimode) != 0) {

                        {
                            cptemp_11 = (int) (
                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 11508
                             */
                            cmalloc(8));
                            setMEMINT((int) ((cptemp_11 + 0)), (int) (getMEMINT((int) ((cnewno + 0)))));
                            setMEMINT((int) ((cptemp_11 + 4)), (int) (cfirst_9));
                            cfirst_9 = cptemp_11;

                        }

                    }
                    ;

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 11525 */
                cpclump_13 = getMEMINT((int) (((cspec + ((int) (cisp) * 100)) + 88)));
                lab_marxan388: for (; cpclump_13 != 0;) {

                    /*
                     * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 11525
                     */
                    cppu_14 = getMEMINT((int) ((cpclump_13 + 16)));
                    lab_marxan389: for (; cppu_14 != 0;) {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 11516
                         */
                        if (
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 11515
                         */
                        cValidPU(getMEMINT((int) ((cppu_14
                                + 0))), cisp, cnewno, (int) (cspec), (int) (cpu), (int) (cSM), cimode) != 0) {

                            {
                                cptemp_11 = (int) (
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 11517
                                 */
                                cmalloc(8));
                                setMEMINT((int) ((cptemp_11 + 0)), (int) (getMEMINT((int) ((cppu_14 + 0)))));
                                setMEMINT((int) ((cptemp_11 + 4)), (int) (cfirst_9));
                                cfirst_9 = cptemp_11;

                            }

                        }
                        ;
                        cppu_14 = getMEMINT((int) ((cppu_14 + 4)));

                    }
                    cpclump_13 = getMEMINT((int) ((cpclump_13 + 20)));

                }
                lab_marxan390: while ((cfirst_9) != 0) {

                    {
                        ctest_16 = getMEMINT((int) ((cfirst_9 + 0)));
                        cptemp_11 = cfirst_9;
                        cfirst_9 = getMEMINT((int) ((cfirst_9 + 4)));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 11530
                         */
                        cfree(cptemp_11);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 11566
                         */
                        cptemp_11 = cfirst_9;
                        lab_marxan391: for (; cptemp_11 != 0;) {

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 11535
                             */
                            if (
                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 11534
                             */
                            cCheckDistance(getMEMINT((int) ((cptemp_11
                                    + 0))), ctest_16, (int) (cpu), ctargetdist_17) != 0) {

                                {

                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 11557
                                     */
                                    cptest_12 = csecond_10;
                                    lab_marxan392: for (; cptest_12 != 0;) {

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 11538
                                         */
                                        if (
                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 11537
                                         */
                                        cCheckDistance(getMEMINT((int) ((cptemp_11
                                                + 0))), getMEMINT((int) ((cptest_12
                                                        + 0))), (int) (cpu), ctargetdist_17) != 0) {

                                            {
                                                lab_marxan393: while ((cfirst_9) != 0) {

                                                    {
                                                        cptemp_11 = cfirst_9;
                                                        cfirst_9 = getMEMINT((int) ((cptemp_11 + 4)));

                                                        /*
                                                         * file
                                                         * E:/git/klab-ecology-component/
                                                         * etc/marxan/marxan.c line 11544
                                                         */
                                                        cfree(cptemp_11);

                                                    }

                                                }
                                                lab_marxan394: while ((csecond_10) != 0) {

                                                    {
                                                        cptemp_11 = csecond_10;
                                                        csecond_10 = getMEMINT((int) ((cptemp_11 + 4)));

                                                        /*
                                                         * file
                                                         * E:/git/klab-ecology-component/
                                                         * etc/marxan/marxan.c line 11551
                                                         */
                                                        cfree(cptemp_11);

                                                    }

                                                }
                                                retval = 3;
                                                if (true) {
                                                    prevlevel();
                                                    return retval;
                                                }
                                                ;

                                            }

                                        }
                                        ;
                                        cptest_12 = getMEMINT((int) ((cptest_12 + 4)));

                                    }
                                    cptest_12 = (int) (
                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 11557
                                     */
                                    cmalloc(8));
                                    setMEMINT((int) ((cptest_12
                                            + 0)), (int) (getMEMINT((int) ((cptemp_11 + 0)))));
                                    setMEMINT((int) ((cptest_12 + 4)), (int) (csecond_10));
                                    csecond_10 = cptest_12;
                                    csepcount_15 = 2;

                                }

                            }
                            ;
                            cptemp_11 = getMEMINT((int) ((cptemp_11 + 4)));

                        }
                        lab_marxan395: while ((csecond_10) != 0) {

                            {
                                cptemp_11 = csecond_10;
                                csecond_10 = getMEMINT((int) ((cptemp_11 + 4)));

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 11570
                                 */
                                cfree(cptemp_11);

                            }

                        }

                    }

                }
                lab_marxan396: while ((csecond_10) != 0) {

                    {
                        cptemp_11 = csecond_10;
                        csecond_10 = getMEMINT((int) ((cptemp_11 + 4)));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 11579
                         */
                        cfree(cptemp_11);

                    }

                }
                retval = csepcount_15;
                if (true) {
                    prevlevel();
                    return retval;
                }
                ;

            }
        }
        ;
        prevlevel();
        return 0;
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 11595 */

    public static int cmakelist(int cisp, int cipu, int cpuno, int cR, int cnewno, int cspec, int cpu, int cSM, int cimode) {
        nextlevel();
        if (true) {
            int label = 0;
            int retval = 0;
            int cpclump_12 = 0;
            int cppu_13 = 0;
            int cptemp_14 = 0;
            int chead_15 = 0;
            int ci_16 = 0;
            double crAmount_17 = 0;

            {
                cpclump_12 = 0;
                cppu_13 = 0;
                cptemp_14 = 0;
                chead_15 = (int) (0);
                ci_16 = 0;
                crAmount_17 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 11601
                         */
                        crtnAmountSpecAtPu((int) (cpu), (int) (cSM), cipu, cisp);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 11604 */
                if (getMEMDOUBLE((int) (((cspec + ((int) (cisp) * 100)) + 80))) != 0) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 11606
                         */
                        if (((((((cimode) == (1)) ? 1 : 0)) != 0) ? (
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 11605
                         */
                        cValidPU(getMEMINT((int) ((cnewno
                                + 0))), cisp, cnewno, (int) (cspec), (int) (cpu), (int) (cSM), cimode))
                                : 0) != 0) {

                            {
                                cptemp_14 = (int) (
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 11607
                                 */
                                cmalloc(8));
                                setMEMINT((int) ((cptemp_14 + 0)), (int) (getMEMINT((int) ((cnewno + 0)))));
                                setMEMINT((int) ((cptemp_14 + 4)), (int) (chead_15));
                                chead_15 = cptemp_14;

                            }

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 11621
                         */
                        cpclump_12 = getMEMINT((int) (((cspec + ((int) (cisp) * 100)) + 88)));
                        lab_marxan397: for (; cpclump_12 != 0;) {

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 11621
                             */
                            cppu_13 = getMEMINT((int) ((cpclump_12 + 16)));
                            lab_marxan398: for (; cppu_13 != 0;) {

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 11615
                                 */
                                if (
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 11614
                                 */
                                cValidPU(getMEMINT((int) ((cppu_13
                                        + 0))), cisp, cnewno, (int) (cspec), (int) (cpu), (int) (cSM), cimode) != 0) {

                                    {
                                        cptemp_14 = (int) (
                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 11616
                                         */
                                        cmalloc(8));
                                        setMEMINT((int) ((cptemp_14
                                                + 0)), (int) (getMEMINT((int) ((cppu_13 + 0)))));
                                        setMEMINT((int) ((cptemp_14 + 4)), (int) (chead_15));
                                        chead_15 = cptemp_14;

                                    }

                                }
                                ;
                                cppu_13 = getMEMINT((int) ((cppu_13 + 4)));

                            }
                            cpclump_12 = getMEMINT((int) ((cpclump_12 + 20)));

                        }

                    }

                } else {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 11625
                         */
                        if (((((((cimode) == (1)) ? 1 : 0)) != 0) ? (crAmount_17) : 0) != 0) {

                            {
                                cptemp_14 = (int) (
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 11626
                                 */
                                cmalloc(8));
                                setMEMINT((int) ((cptemp_14 + 0)), (int) (cipu));
                                setMEMINT((int) ((cptemp_14 + 4)), (int) (chead_15));
                                chead_15 = cptemp_14;

                            }

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 11641
                         */
                        ci_16 = 0;
                        lab_marxan399: for (; (((ci_16) < (cpuno)) ? 1 : 0) != 0;) {

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 11635
                             */
                            if ((((crAmount_17) != 0)
                                    ? (((((((((cimode) == ((-(1)))) ? 1 : 0)) != 0)
                                            ? ((((cipu) == (ci_16)) ? 1 : 0)) : 0) == 0) ? 1 : 0))
                                    : 0) != 0) {

                                {
                                    cptemp_14 = (int) (
                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 11636
                                     */
                                    cmalloc(8));
                                    setMEMINT((int) ((cptemp_14 + 0)), (int) (ci_16));
                                    setMEMINT((int) ((cptemp_14 + 4)), (int) (chead_15));
                                    chead_15 = cptemp_14;

                                }

                            }
                            ;
                            ci_16++;

                        }

                    }

                }
                ;
                retval = chead_15;
                if (true) {
                    prevlevel();
                    return retval;
                }
                ;

            }
        }
        ;
        prevlevel();
        return 0;
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 11655 */

    public static int cSepDealList(int chead, int cDist, int cpu, int cspec, int cfirst, int csepnum, double ctargetdist, int cisp) {
        nextlevel();
        if (true) {
            int label = 0;
            int retval = 0;
            int cplacefound_11 = 0;
            int ccurrtarget_12 = 0;
            int cbestsep_13 = 0;
            int ccurrsep_14 = 0;
            int ctemp_15 = 0;

            {
                cplacefound_11 = 0;
                ccurrtarget_12 = 0;
                cbestsep_13 = 0;
                ccurrsep_14 = 0;
                ctemp_15 = 0;
                lab_marxan400: while ((chead) != 0) {

                    {
                        cplacefound_11 = 0;
                        ccurrtarget_12 = cfirst;
                        ccurrsep_14 = csepnum;

                        lab_marxan401: do {

                            {

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 11668
                                 */
                                if (
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 11667
                                 */
                                cCheckDistance(getMEMINT((int) ((chead
                                        + 0))), ccurrtarget_12, (int) (cpu), ctargetdist) != 0) {

                                    {
                                        ccurrsep_14++;

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 11671
                                         */
                                        if ((((ccurrsep_14) == ((getMEMINT((int) (((cspec
                                                + ((int) (cisp) * 100)) + 68))) - 1))) ? 1 : 0) != 0) {

                                            {
                                                lab_marxan402: while ((chead) != 0) {

                                                    {
                                                        ctemp_15 = getMEMINT((int) ((chead + 4)));
                                                        setMEMINT((int) ((chead
                                                                + 4)), (int) (getMEMINT((int) (((cDist
                                                                        + (ccurrsep_14 * 12)) + 4)))));
                                                        setMEMINT((int) (((cDist + (ccurrsep_14 * 12))
                                                                + 4)), (int) (chead));
                                                        chead = ctemp_15;

                                                    }

                                                }
                                                retval = ccurrsep_14;
                                                if (true) {
                                                    prevlevel();
                                                    return retval;
                                                }
                                                ;

                                            }

                                        }
                                        ;

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 11682
                                         */
                                        if (getMEMINT((int) (((cDist + (ccurrsep_14 * 12)) + 4))) != 0) {
                                            ccurrtarget_12 = getMEMINT((int) ((getMEMINT((int) (((cDist
                                                    + (ccurrsep_14 * 12)) + 4))) + 0)));

                                        } else {

                                            {
                                                cplacefound_11 = 1;
                                                setMEMINT((int) (((cDist + (ccurrsep_14 * 12))
                                                        + 4)), (int) (chead));
                                                setMEMINT((int) (((cDist + (ccurrsep_14 * 12))
                                                        + 8)), (int) (chead));
                                                sincMEMINT((int) (((cDist + (ccurrsep_14 * 12)) + 0)), +1);
                                                chead = getMEMINT((int) ((chead + 4)));
                                                setMEMINT((int) ((getMEMINT((int) (((cDist
                                                        + (ccurrsep_14 * 12)) + 8)))
                                                        + 4)), (int) ((int) (0)));

                                            }

                                        }
                                        ;

                                    }

                                } else {

                                    {
                                        cplacefound_11 = 1;
                                        setMEMINT((int) ((getMEMINT((int) (((cDist + (ccurrsep_14 * 12))
                                                + 8))) + 4)), (int) (chead));
                                        setMEMINT((int) (((cDist + (ccurrsep_14 * 12)) + 8)), (int) (chead));
                                        sincMEMINT((int) (((cDist + (ccurrsep_14 * 12)) + 0)), +1);
                                        chead = getMEMINT((int) ((chead + 4)));
                                        setMEMINT((int) ((getMEMINT((int) (((cDist + (ccurrsep_14 * 12))
                                                + 8))) + 4)), (int) ((int) (0)));

                                    }

                                }
                                ;

                            }

                        } while (((cplacefound_11 == 0) ? 1 : 0) != 0);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 11704
                         */
                        if ((((ccurrsep_14) > (cbestsep_13)) ? 1 : 0) != 0) {
                            cbestsep_13 = ccurrsep_14;

                        }
                        ;

                    }

                }
                retval = cbestsep_13;
                if (true) {
                    prevlevel();
                    return retval;
                }
                ;

            }
        }
        ;
        prevlevel();
        return 0;
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 11719 */

    public static int cCountSeparation2(int cisp, int cipu, int cnewno, int cpuno, int cR, int cpu, int cSM, int cspec, int cimode) {
        nextlevel();
        if (true) {
            int label = 0;
            int retval = 0;
            int cDist_12 = 0;
            int chead_13 = 0;
            int ctemp_14 = 0;
            int csepcount_15 = 0;
            int cbestsep_16 = 0;
            int ci_17 = 0;
            int ccurrcol_18 = 0;
            double ctargetdist_19 = 0;
            int y78 = 0;

            {
                cDist_12 = 0;
                chead_13 = (int) (0);
                ctemp_14 = 0;
                csepcount_15 = 0;
                cbestsep_16 = 0;
                ci_17 = 0;
                ccurrcol_18 = 0;
                ctargetdist_19 = 0;
                ctargetdist_19 = (getMEMDOUBLE((int) (((cspec + ((int) (cisp) * 100)) + 60)))
                        * getMEMDOUBLE((int) (((cspec + ((int) (cisp) * 100)) + 60))));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 11728 */
                if ((((ctargetdist_19) == (0)) ? 1 : 0) != 0) {
                    retval = getMEMINT((int) (((cspec + ((int) (cisp) * 100)) + 68)));
                    if (true) {
                        prevlevel();
                        return retval;
                    }
                    ;

                }
                ;
                cDist_12 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 11731 */
                ccalloc(getMEMINT((int) (((cspec + ((int) (cisp) * 100)) + 68))), 12));
                chead_13 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 11733
                         */
                        cmakelist(cisp, cipu, cpuno, (int) (cR), cnewno, (int) (cspec), (int) (cpu), (int) (cSM), cimode);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 11736 */
                if (((chead_13 == 0) ? 1 : 0) != 0) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 11737
                         */
                        cfree(cDist_12);
                        retval = 0;
                        if (true) {
                            prevlevel();
                            return retval;
                        }
                        ;

                    }

                }
                ;
                setMEMINT((int) (((cDist_12 + (0 * 12)) + 4)), (int) (chead_13));
                setMEMINT((int) (((cDist_12 + (0 * 12)) + 0)), (int) (1));
                setMEMINT((int) (((cDist_12 + (0 * 12)) + 8)), (int) (chead_13));
                chead_13 = getMEMINT((int) ((chead_13 + 4)));
                setMEMINT((int) ((getMEMINT((int) (((cDist_12 + (0 * 12)) + 8))) + 4)), (int) ((int) (0)));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 11748 */
                if (((chead_13 == 0) ? 1 : 0) != 0) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 11749
                         */
                        cfree(getMEMINT((int) (((cDist_12 + (0 * 12)) + 4))));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 11750
                         */
                        cfree(cDist_12);
                        retval = 1;
                        if (true) {
                            prevlevel();
                            return retval;
                        }
                        ;

                    }

                }
                ;
                csepcount_15 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 11756
                         */
                        cSepDealList(chead_13, cDist_12, (int) (cpu), (int) (cspec), getMEMINT((int) ((getMEMINT((int) (((cDist_12
                                + (0 * 12)) + 4))) + 0))), 0, ctargetdist_19, cisp);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 11758 */
                if ((((csepcount_15) >= ((getMEMINT((int) (((cspec + ((int) (cisp) * 100)) + 68))) - 1))) ? 1
                        : 0) != 0) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 11767
                         */
                        ci_17 = 0;
                        lab_marxan403: for (; (((ci_17) < (getMEMINT((int) (((cspec + ((int) (cisp) * 100))
                                + 68))))) ? 1 : 0) != 0;) {
                            lab_marxan404: while ((getMEMINT((int) (((cDist_12 + (ci_17 * 12)) + 4)))) != 0) {

                                {
                                    ctemp_14 = getMEMINT((int) (((cDist_12 + (ci_17 * 12)) + 4)));
                                    setMEMINT((int) (((cDist_12 + (ci_17 * 12))
                                            + 4)), (int) (getMEMINT((int) ((getMEMINT((int) (((cDist_12
                                                    + (ci_17 * 12)) + 4))) + 4)))));

                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 11766
                                     */
                                    cfree(ctemp_14);

                                }

                            }
                            ci_17++;

                        }

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 11768
                         */
                        cfree(cDist_12);
                        retval = getMEMINT((int) (((cspec + ((int) (cisp) * 100)) + 68)));
                        if (true) {
                            prevlevel();
                            return retval;
                        }
                        ;

                    }

                }
                ;
                cbestsep_16 = csepcount_15;

                lab_marxan405: do {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 11777
                         */
                        ccurrcol_18 = 0;
                        lab_marxan406: for (; (((getMEMINT((int) (((cDist_12 + ((ccurrcol_18 + 1) * 12))
                                + 4)))) != 0)
                                        ? ((((ccurrcol_18) < ((getMEMINT((int) (((cspec
                                                + ((int) (cisp) * 100)) + 68))) - 2))) ? 1 : 0))
                                        : 0) != 0;) {
                            ccurrcol_18++;

                        }

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 11779
                         */
                        if ((((ccurrcol_18) == (0)) ? 1 : 0) != 0) {

                            {

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 11781
                                 */
                                if ((((getMEMINT((int) (((cDist_12 + (0 * 12))
                                        + 0)))) < (getMEMINT((int) (((cspec + ((int) (cisp) * 100)) + 68)))))
                                                ? 1 : 0) != 0) {

                                    {
                                        lab_marxan407: while ((getMEMINT((int) (((cDist_12 + (0 * 12))
                                                + 4)))) != 0) {

                                            {
                                                ctemp_14 = getMEMINT((int) (((cDist_12 + (0 * 12)) + 4)));
                                                setMEMINT((int) (((cDist_12 + (0 * 12))
                                                        + 4)), (int) (getMEMINT((int) ((getMEMINT((int) (((cDist_12
                                                                + (0 * 12)) + 4))) + 4)))));

                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 11786
                                                 */
                                                cfree(ctemp_14);

                                            }

                                        }

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 11788
                                         */
                                        cfree(cDist_12);
                                        retval = (cbestsep_16 + 1);
                                        if (true) {
                                            prevlevel();
                                            return retval;
                                        }
                                        ;

                                    }

                                } else {

                                    {
                                        ctemp_14 = getMEMINT((int) (((cDist_12 + (0 * 12)) + 4)));
                                        setMEMINT((int) (((cDist_12 + (0 * 12))
                                                + 4)), (int) (getMEMINT((int) ((getMEMINT((int) (((cDist_12
                                                        + (0 * 12)) + 4))) + 4)))));
                                        chead_13 = getMEMINT((int) ((getMEMINT((int) (((cDist_12 + (0 * 12))
                                                + 4))) + 4)));
                                        setMEMINT((int) ((getMEMINT((int) (((cDist_12 + (0 * 12)) + 4)))
                                                + 4)), (int) ((int) (0)));
                                        setMEMINT((int) (((cDist_12 + (0 * 12)) + 0)), (int) (1));
                                        setMEMINT((int) (((cDist_12 + (0 * 12))
                                                + 8)), (int) (getMEMINT((int) (((cDist_12 + (0 * 12))
                                                        + 4)))));

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 11799
                                         */
                                        cfree(ctemp_14);
                                        csepcount_15 =
                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 11800
                                                 */
                                                cSepDealList(chead_13, cDist_12, (int) (cpu), (int) (cspec), getMEMINT((int) ((getMEMINT((int) (((cDist_12
                                                        + (0 * 12)) + 4))) + 0))), 0, ctargetdist_19, cisp);

                                    }

                                }
                                ;

                            }

                        } else {

                            {

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 11806
                                 */
                                if (((((getMEMINT((int) (((cDist_12 + (ccurrcol_18 * 12)) + 0)))
                                        + ccurrcol_18)) < (getMEMINT((int) (((cspec + ((int) (cisp) * 100))
                                                + 68))))) ? 1 : 0) != 0) {

                                    {
                                        setMEMINT((int) ((getMEMINT((int) (((cDist_12
                                                + ((ccurrcol_18 - 1) * 12)) + 8)))
                                                + 4)), (int) (getMEMINT((int) (((cDist_12
                                                        + (ccurrcol_18 * 12)) + 4)))));
                                        setMEMINT((int) (((cDist_12 + ((ccurrcol_18 - 1) * 12))
                                                + 8)), (int) (getMEMINT((int) (((cDist_12
                                                        + (ccurrcol_18 * 12)) + 8)))));
                                        setMEMINT((int) ((getMEMINT((int) (((cDist_12
                                                + ((ccurrcol_18 - 1) * 12)) + 8))) + 4)), (int) ((int) (0)));
                                        y78 = (int) (((cDist_12 + ((ccurrcol_18 - 1) * 12)) + 0));
                                        setMEMINT((int) (y78), (int) ((getMEMINT((int) (y78))
                                                + getMEMINT((int) (((cDist_12 + (ccurrcol_18 * 12)) + 0))))));
                                        setMEMINT((int) (((cDist_12 + (ccurrcol_18 * 12))
                                                + 4)), (int) ((int) (0)));
                                        setMEMINT((int) (((cDist_12 + (ccurrcol_18 * 12)) + 0)), (int) (0));
                                        setMEMINT((int) (((cDist_12 + (ccurrcol_18 * 12))
                                                + 8)), (int) ((int) (0)));
                                        csepcount_15 = 0;

                                    }

                                } else {

                                    {
                                        setMEMINT((int) ((getMEMINT((int) (((cDist_12
                                                + ((ccurrcol_18 - 1) * 12)) + 8)))
                                                + 4)), (int) (getMEMINT((int) (((cDist_12
                                                        + (ccurrcol_18 * 12)) + 4)))));
                                        setMEMINT((int) (((cDist_12 + ((ccurrcol_18 - 1) * 12))
                                                + 8)), (int) (getMEMINT((int) (((cDist_12
                                                        + (ccurrcol_18 * 12)) + 4)))));
                                        sincMEMINT((int) (((cDist_12 + ((ccurrcol_18 - 1) * 12)) + 0)), +1);
                                        setMEMINT((int) (((cDist_12 + (ccurrcol_18 * 12))
                                                + 4)), (int) (getMEMINT((int) ((getMEMINT((int) (((cDist_12
                                                        + (ccurrcol_18 * 12)) + 4))) + 4)))));
                                        chead_13 = getMEMINT((int) ((getMEMINT((int) (((cDist_12
                                                + (ccurrcol_18 * 12)) + 4))) + 4)));
                                        setMEMINT((int) ((getMEMINT((int) (((cDist_12 + (ccurrcol_18 * 12))
                                                + 4))) + 4)), (int) ((int) (0)));
                                        setMEMINT((int) ((getMEMINT((int) (((cDist_12
                                                + ((ccurrcol_18 - 1) * 12)) + 8))) + 4)), (int) ((int) (0)));
                                        setMEMINT((int) (((cDist_12 + (ccurrcol_18 * 12))
                                                + 8)), (int) (getMEMINT((int) (((cDist_12
                                                        + (ccurrcol_18 * 12)) + 4)))));
                                        setMEMINT((int) (((cDist_12 + (ccurrcol_18 * 12)) + 0)), (int) (1));
                                        csepcount_15 =
                                                /*
                                                 * file E:/git/klab-ecology-component/etc/
                                                 * marxan/marxan.c line 11827
                                                 */
                                                cSepDealList(chead_13, cDist_12, (int) (cpu), (int) (cspec), getMEMINT((int) ((getMEMINT((int) (((cDist_12
                                                        + (ccurrcol_18 * 12)) + 4)))
                                                        + 0))), ccurrcol_18, ctargetdist_19, cisp);

                                    }

                                }
                                ;

                            }

                        }
                        ;

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 11831
                         */
                        if ((((csepcount_15) > (cbestsep_16)) ? 1 : 0) != 0) {
                            cbestsep_16 = csepcount_15;

                        }
                        ;

                    }

                } while ((((cbestsep_16) < ((getMEMINT((int) (((cspec + ((int) (cisp) * 100)) + 68))) - 1)))
                        ? 1 : 0) != 0);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 11840 */
                ci_17 = 0;
                lab_marxan408: for (; (((ci_17) < (getMEMINT((int) (((cspec + ((int) (cisp) * 100)) + 68)))))
                        ? 1 : 0) != 0;) {
                    lab_marxan409: while ((getMEMINT((int) (((cDist_12 + (ci_17 * 12)) + 4)))) != 0) {

                        {
                            ctemp_14 = getMEMINT((int) (((cDist_12 + (ci_17 * 12)) + 4)));
                            setMEMINT((int) (((cDist_12 + (ci_17 * 12))
                                    + 4)), (int) (getMEMINT((int) ((getMEMINT((int) (((cDist_12
                                            + (ci_17 * 12)) + 4))) + 4)))));

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 11839
                             */
                            cfree(ctemp_14);

                        }

                    }
                    ci_17++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 11841 */
                cfree(cDist_12);
                retval = (cbestsep_16 + 1);
                if (true) {
                    prevlevel();
                    return retval;
                }
                ;

            }
        }
        ;
        prevlevel();
        return 0;
    }

    static int strmarxan715 = jtocstr("%s usage: %s -[o] -[c] [input file name]\n");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 11860 */

    public static void cUsage(int cprogramName) {
        nextlevel();
        if (true) {
            int label = 0;

            {
                startargs(cprogramName);
                addarg(cprogramName);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 11861 */
                cfprintf((int) ((c_streamv + ((int) (2) * 48))), strmarxan715, endargs());

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan716 = jtocstr("unknown option %s\n");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 11867 */

    public static void cHandleOptions(int cargc, int cargv, int csInputFileName, int coldstyle) {
        nextlevel();
        if (true) {
            int label = 0;
            int ci_6 = 0;

            {
                ci_6 = 0;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 11871 */
                if ((((cargc) > (4)) ? 1 : 0) != 0) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 11872
                         */
                        cUsage(getMEMINT((int) ((cargv + ((int) (0) * 4)))));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 11873
                         */
                        cShowPauseExit();

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 11874
                         */
                        cexit(1);

                    }

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 11901 */
                ci_6 = 1;
                lab_marxan410: for (; (((ci_6) < (cargc)) ? 1 : 0) != 0;) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 11880
                         */
                        if (((((((getMEMBYTE((int) ((getMEMINT((int) ((cargv + ((int) (ci_6) * 4))))
                                + (0 * 1))))) == (47)) ? 1 : 0)) != 0)
                                        ? 1
                                        : ((((getMEMBYTE((int) ((getMEMINT((int) ((cargv
                                                + ((int) (ci_6) * 4)))) + (0 * 1))))) == (45)) ? 1
                                                        : 0))) != 0) {

                            {
                                lab_marxan411: {
                                    switch ((int) (getMEMBYTE((int) ((getMEMINT((int) ((cargv
                                            + ((int) (ci_6) * 4)))) + (1 * 1))))))

                                    {

                                    case 48:
                                    case 111:
                                    case 79:
                                        setMEMINT((int) (coldstyle), (int) (1));
                                        if (true) {
                                            break lab_marxan411;
                                        }
                                        ;

                                    case 67:
                                    case 99:
                                    case 83:
                                    case 115:
                                        setMEMINT((int) (marxan.cmarxanisslave), (int) (1));
                                        if (true) {
                                            break lab_marxan411;
                                        }
                                        ;

                                    default:
                                        startargs(getMEMINT((int) ((cargv + ((int) (ci_6) * 4)))));

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 11895
                                         */
                                        cfprintf((int) ((c_streamv
                                                + ((int) (2) * 48))), strmarxan716, endargs());
                                        if (true) {
                                            break lab_marxan411;
                                        }
                                        ;

                                    }

                                }

                            }

                        } else {

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 11900
                             */
                            cstrcpy((int) (csInputFileName), getMEMINT((int) ((cargv + ((int) (ci_6) * 4)))));

                        }
                        ;

                    }
                    ci_6++;

                }

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan717 = jtocstr("input.dat");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 11905 */

    public static int cmain(int cargc, int cargv) {
        nextlevel();
        if (true) {
            int label = 0;
            int retval = 0;
            int csInputFileName_5 = 0;
            int coldstyle_6 = alloconstack(0);

            {
                csInputFileName_5 = calloca(100);
                setMEMINT((int) (coldstyle_6), (int) (0));
                setMEMINT((int) (coldstyle_6), (int) (0));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 11912 */
                cstrcpy((int) (csInputFileName_5), strmarxan717);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 11915 */
                if ((((cargc) == (1)) ? 1 : 0) != 0) {

                    /*
                     * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 11915
                     */
                    cstrcpy((int) (csInputFileName_5), strmarxan717);

                } else {

                    /*
                     * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 11917
                     */
                    cHandleOptions(cargc, (int) (cargv), (int) (csInputFileName_5), coldstyle_6);

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 11920 */
                if (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 11919 */
                cMarZone((int) (csInputFileName_5), getMEMINT((int) (coldstyle_6))) != 0) {

                    {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 11922
                         */
                        if ((((getMEMINT((int) (marxan.cmarxanisslave))) == (1)) ? 1 : 0) != 0) {

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 11922
                             */
                            cSlaveExit();

                        } else {

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 11924
                             */
                            cShowPauseExit();

                        }
                        ;
                        retval = 1;
                        if (true) {
                            prevlevel();
                            return retval;
                        }
                        ;

                    }

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 11928 */
                if ((((getMEMINT((int) (marxan.cmarxanisslave))) == (1)) ? 1 : 0) != 0) {

                    /*
                     * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 11928
                     */
                    cSlaveExit();

                } else {

                    /*
                     * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 11930
                     */
                    cShowPauseExit();

                }
                ;
                retval = 0;
                if (true) {
                    prevlevel();
                    return retval;
                }
                ;

            }
        }
        ;
        prevlevel();
        return 0;
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 11952 */

    public static void cApplySpecProp(int cspno, int cspec, int cpuno, int cpu, int cSM) {
        nextlevel();
        if (true) {
            int label = 0;
            double ctotalamount_7 = 0;
            int cisp_8 = 0;
            int cipu_9 = 0;

            {
                ctotalamount_7 = 0;
                cisp_8 = 0;
                cipu_9 = 0;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 11964 */
                cisp_8 = 0;
                lab_marxan412: for (; (((cisp_8) < (cspno)) ? 1 : 0) != 0;) {

                    /*
                     * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 11959
                     */
                    if ((((getMEMDOUBLE((int) (((cspec + ((int) (cisp_8) * 100)) + 20)))) > (0)) ? 1
                            : 0) != 0) {

                        {

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 11961
                             */
                            cipu_9 = 0;
                            ctotalamount_7 = 0;
                            lab_marxan413: for (; (((cipu_9) < (cpuno)) ? 1 : 0) != 0;) {
                                ctotalamount_7 +=
                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 11961
                                         */
                                        crtnAmountSpecAtPu((int) (cpu), (int) (cSM), cipu_9, cisp_8);
                                cipu_9++;

                            }
                            setMEMDOUBLE((int) (((cspec + ((int) (cisp_8) * 100))
                                    + 12)), (double) ((ctotalamount_7
                                            * getMEMDOUBLE((int) (((cspec + ((int) (cisp_8) * 100))
                                                    + 20))))));

                        }

                    }
                    ;
                    cisp_8++;

                }

            }
        }
        ;
        prevlevel();
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 11969 */

    public static double cReturnPuZoneCost(int cipu, int ciZone) {
        nextlevel();
        if (true) {
            int label = 0;
            double retval = 0;
            int ci_5 = 0;
            double crCost_6 = 0;
            double crAddCost_7 = 0;

            {
                ci_5 = 0;
                crCost_6 = 0;
                crAddCost_7 = 0;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 11978 */
                ci_5 = 0;
                lab_marxan414: for (; (((ci_5) < (getMEMINT((int) (marxan.ciCostCount)))) ? 1 : 0) != 0;) {

                    {
                        crAddCost_7 = (getMEMDOUBLE((int) ((getMEMINT((int) ((getMEMINT((int) (marxan.cCostValues))
                                + (cipu * 4)))) + (ci_5 * 8))))
                                * getMEMDOUBLE((int) ((getMEMINT((int) (marxan.c_ZoneCost))
                                        + (((ci_5 * getMEMINT((int) (marxan.ciZoneCount))) + (ciZone - 1))
                                                * 8)))));
                        crCost_6 += crAddCost_7;

                    }
                    ci_5++;

                }
                retval = crCost_6;
                if (true) {
                    prevlevel();
                    return retval;
                }
                ;

            }
        }
        ;
        prevlevel();
        return 0;
    }

    static int strmarxan718 = jtocstr("MarZoneTotalAreas.csv");
    static int strmarxan719 = jtocstr("spname,spindex,totalarea,reservedarea,excludedarea,targetarea,totalocc,reservedocc,excludedocc,targetocc\n");
    static int strmarxan720 = jtocstr("%i,%i,%g,%g,%g,%g,%i,%i,%i,%i\n");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 11984 */

    public static void cCalcTotalAreas(int cpuno, int cspno, int cpu, int cspec, int cSM) {
        nextlevel();
        if (true) {
            int label = 0;
            int cipu_7 = 0;
            int ci_8 = 0;
            int cism_9 = 0;
            int cisp_10 = 0;
            int cTotalOccurrences_11 = 0;
            int cTO_2_12 = 0;
            int cTO_3_13 = 0;
            int cTA_2_14 = 0;
            int cTA_3_15 = 0;
            int cTotalAreasFile_16 = 0;
            int y79 = 0;
            int y80 = 0;
            int y81 = 0;

            {
                cipu_7 = 0;
                ci_8 = 0;
                cism_9 = 0;
                cisp_10 = 0;
                cTotalOccurrences_11 = 0;
                cTO_2_12 = 0;
                cTO_3_13 = 0;
                cTA_2_14 = 0;
                cTA_3_15 = 0;
                cTotalAreasFile_16 = 0;
                setMEMINT((int) (marxan.cTotalAreas), (int) ((int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 11989 */
                ccalloc(cspno, 8))));
                cTotalOccurrences_11 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 11991 */
                ccalloc(cspno, 4));
                cTO_2_12 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 11992 */
                ccalloc(cspno, 4));
                cTO_3_13 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 11993 */
                ccalloc(cspno, 4));
                cTA_2_14 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 11994 */
                ccalloc(cspno, 8));
                cTA_3_15 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 11995 */
                ccalloc(cspno, 8));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 12005 */
                ci_8 = 0;
                lab_marxan415: for (; (((ci_8) < (cspno)) ? 1 : 0) != 0;) {

                    {
                        setMEMDOUBLE((int) ((getMEMINT((int) (marxan.cTotalAreas))
                                + (ci_8 * 8))), (double) (0));
                        setMEMINT((int) ((cTO_2_12 + (ci_8 * 4))), (int) (0));
                        setMEMINT((int) ((cTO_3_13 + (ci_8 * 4))), (int) (0));
                        setMEMDOUBLE((int) ((cTA_2_14 + (ci_8 * 8))), (double) (0));
                        setMEMDOUBLE((int) ((cTA_3_15 + (ci_8 * 8))), (double) (0));

                    }
                    ci_8++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 12034 */
                cipu_7 = 0;
                lab_marxan416: for (; (((cipu_7) < (cpuno)) ? 1 : 0) != 0;) {

                    /*
                     * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 12009
                     */
                    if (getMEMINT((int) (((cpu + ((int) (cipu_7) * 64)) + 32))) != 0) {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 12032
                         */
                        ci_8 = 0;
                        lab_marxan417: for (; (((ci_8) < (getMEMINT((int) (((cpu + ((int) (cipu_7) * 64))
                                + 32))))) ? 1 : 0) != 0;) {

                            {
                                cism_9 = (getMEMINT((int) (((cpu + ((int) (cipu_7) * 64)) + 36))) + ci_8);
                                cisp_10 = getMEMINT((int) (((cSM + ((int) (cism_9) * 16)) + 12)));
                                y79 = (int) ((getMEMINT((int) (marxan.cTotalAreas)) + (cisp_10 * 8)));
                                setMEMDOUBLE((int) (y79), (double) ((getMEMDOUBLE((int) (y79))
                                        + getMEMDOUBLE((int) (((cSM + ((int) (cism_9) * 16)) + 0))))));

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 12017
                                 */
                                if ((((getMEMINT((int) (marxan.ciVerbosity))) > (1)) ? 1 : 0) != 0) {

                                    {
                                        sincMEMINT((int) ((cTotalOccurrences_11 + (cisp_10 * 4))), +1);

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 12021
                                         */
                                        if ((((getMEMINT((int) (((cpu + ((int) (cipu_7) * 64)) + 4)))) == (2))
                                                ? 1 : 0) != 0) {

                                            {
                                                sincMEMINT((int) ((cTO_2_12 + (cisp_10 * 4))), +1);
                                                y80 = (int) ((cTA_2_14 + (cisp_10 * 8)));
                                                setMEMDOUBLE((int) (y80), (double) ((getMEMDOUBLE((int) (y80))
                                                        + getMEMDOUBLE((int) (((cSM + ((int) (cism_9) * 16))
                                                                + 0))))));

                                            }

                                        }
                                        ;

                                        /*
                                         * file
                                         * E:/git/klab-ecology-component/etc/marxan/marxan
                                         * .c line 12027
                                         */
                                        if ((((getMEMINT((int) (((cpu + ((int) (cipu_7) * 64)) + 4)))) == (3))
                                                ? 1 : 0) != 0) {

                                            {
                                                sincMEMINT((int) ((cTO_3_13 + (cisp_10 * 4))), +1);
                                                y81 = (int) ((cTA_3_15 + (cisp_10 * 8)));
                                                setMEMDOUBLE((int) (y81), (double) ((getMEMDOUBLE((int) (y81))
                                                        + getMEMDOUBLE((int) (((cSM + ((int) (cism_9) * 16))
                                                                + 0))))));

                                            }

                                        }
                                        ;

                                    }

                                }
                                ;

                            }
                            ci_8++;

                        }

                    }
                    ;
                    cipu_7++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 12035 */
                if ((((getMEMINT((int) (marxan.ciVerbosity))) > (3)) ? 1 : 0) != 0) {

                    {
                        cTotalAreasFile_16 =
                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 12036
                                 */
                                cfopen(strmarxan718, strmarxan198);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 12037
                         */
                        cfprintf(cTotalAreasFile_16, strmarxan719, 0);

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 12041
                         */
                        ci_8 = 0;
                        lab_marxan418: for (; (((ci_8) < (cspno)) ? 1 : 0) != 0;) {
                            startargs(getMEMINT((int) (((cspec + ((int) (ci_8) * 100)) + 0))));
                            addarg(ci_8);
                            addarg(getMEMDOUBLE((int) ((getMEMINT((int) (marxan.cTotalAreas))
                                    + (ci_8 * 8)))));
                            addarg(getMEMDOUBLE((int) ((cTA_2_14 + (ci_8 * 8)))));
                            addarg(getMEMDOUBLE((int) ((cTA_3_15 + (ci_8 * 8)))));
                            addarg(getMEMDOUBLE((int) (((cspec + ((int) (ci_8) * 100)) + 12))));
                            addarg(getMEMINT((int) ((cTotalOccurrences_11 + (ci_8 * 4)))));
                            addarg(getMEMINT((int) ((cTO_2_12 + (ci_8 * 4)))));
                            addarg(getMEMINT((int) ((cTO_3_13 + (ci_8 * 4)))));
                            addarg(getMEMINT((int) (((cspec + ((int) (ci_8) * 100)) + 28))));

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 12041
                             */
                            cfprintf(cTotalAreasFile_16, strmarxan720, endargs());
                            ci_8++;

                        }

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 12042
                         */
                        cfclose(cTotalAreasFile_16);

                    }

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 12045 */
                cfree(cTotalOccurrences_11);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 12046 */
                cfree(cTO_2_12);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 12047 */
                cfree(cTO_3_13);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 12048 */
                cfree(cTA_2_14);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 12049 */
                cfree(cTA_3_15);

            }
        }
        ;
        prevlevel();
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 12053 */

    public static void cComputeZoneConnectivitySum(int cZCS, int cpuno, int cR) {
        nextlevel();
        if (true) {
            int label = 0;
            int ci_5 = 0;
            double cfcost_6 = 0;
            double crResult_7 = 0;
            double crZoneConnectionCost_8 = 0;
            int cp_9 = 0;
            int y82 = 0;
            int y83 = 0;
            int y84 = 0;

            {
                ci_5 = 0;
                cfcost_6 = 0;
                crResult_7 = 0;
                crZoneConnectionCost_8 = 0;
                cp_9 = 0;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 12077 */
                ci_5 = 0;
                lab_marxan419: for (; (((ci_5) < (cpuno)) ? 1 : 0) != 0;) {

                    {
                        y82 = (int) ((getMEMINT((int) ((cZCS
                                + ((getMEMINT((int) ((cR + ((int) (ci_5) * 4)))) - 1) * 4))))
                                + ((getMEMINT((int) ((cR + ((int) (ci_5) * 4)))) - 1) * 8)));
                        setMEMDOUBLE((int) (y82), (double) ((getMEMDOUBLE((int) (y82))
                                + getMEMDOUBLE((int) (((getMEMINT((int) (marxan.cconnections)) + (ci_5 * 16))
                                        + 4))))));
                        cp_9 = getMEMINT((int) (((getMEMINT((int) (marxan.cconnections)) + (ci_5 * 16))
                                + 0)));
                        lab_marxan420: while ((cp_9) != 0) {

                            {

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 12068
                                 */
                                if ((((getMEMINT((int) ((cp_9 + 0)))) > (ci_5)) ? 1 : 0) != 0) {

                                    /*
                                     * file
                                     * E:/git/klab-ecology-component/etc/marxan/marxan.c
                                     * line 12069
                                     */
                                    if ((((getMEMINT((int) ((cR
                                            + ((int) (ci_5) * 4))))) != (getMEMINT((int) ((cR
                                                    + ((int) (getMEMINT((int) ((cp_9 + 0)))) * 4)))))) ? 1
                                                            : 0) != 0) {

                                        {
                                            y83 = (int) ((getMEMINT((int) ((cZCS
                                                    + ((getMEMINT((int) ((cR + ((int) (ci_5) * 4)))) - 1)
                                                            * 4))))
                                                    + ((getMEMINT((int) ((cR
                                                            + ((int) (getMEMINT((int) ((cp_9 + 0)))) * 4))))
                                                            - 1) * 8)));
                                            setMEMDOUBLE((int) (y83), (double) ((getMEMDOUBLE((int) (y83))
                                                    + getMEMDOUBLE((int) ((cp_9 + 4))))));
                                            y84 = (int) ((getMEMINT((int) ((cZCS + ((getMEMINT((int) ((cR
                                                    + ((int) (getMEMINT((int) ((cp_9 + 0)))) * 4)))) - 1)
                                                    * 4))))
                                                    + ((getMEMINT((int) ((cR + ((int) (ci_5) * 4)))) - 1)
                                                            * 8)));
                                            setMEMDOUBLE((int) (y84), (double) ((getMEMDOUBLE((int) (y84))
                                                    + getMEMDOUBLE((int) ((cp_9 + 4))))));

                                        }

                                    }
                                    ;

                                }
                                ;
                                cp_9 = getMEMINT((int) ((cp_9 + 12)));

                            }

                        }

                    }
                    ci_5++;

                }

            }
        }
        ;
        prevlevel();
    }

    static int strmarxan721 = jtocstr("\"Zone_Connectivity_Sum\"");
    static int strmarxan722 = jtocstr("\"%s\"");
    static int strmarxan723 = jtocstr(",%f");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 12081 */

    public static void cOutputZoneConnectivitySum(int cpuno, int cR, int csavename, int cimode) {
        nextlevel();
        if (true) {
            int label = 0;
            int cfp_6 = 0;
            int ci_7 = 0;
            int cj_8 = 0;
            int csDelimiter_9 = 0;
            int cZCS_10 = 0;

            {
                cfp_6 = 0;
                ci_7 = 0;
                cj_8 = 0;
                csDelimiter_9 = calloca(20);
                cZCS_10 = 0;
                cZCS_10 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 12087 */
                ccalloc(getMEMINT((int) (marxan.ciZoneCount)), 4));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 12089 */
                ci_7 = 0;
                lab_marxan421: for (; (((ci_7) < (getMEMINT((int) (marxan.ciZoneCount)))) ? 1 : 0) != 0;) {
                    setMEMINT((int) ((cZCS_10 + (ci_7 * 4))), (int) ((int) (
                    /*
                     * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 12089
                     */
                    ccalloc(getMEMINT((int) (marxan.ciZoneCount)), 8))));
                    ci_7++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 12092 */
                ci_7 = 0;
                lab_marxan422: for (; (((ci_7) < (getMEMINT((int) (marxan.ciZoneCount)))) ? 1 : 0) != 0;) {

                    /*
                     * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 12092
                     */
                    cj_8 = 0;
                    lab_marxan423: for (; (((cj_8) < (getMEMINT((int) (marxan.ciZoneCount)))) ? 1
                            : 0) != 0;) {
                        setMEMDOUBLE((int) ((getMEMINT((int) ((cZCS_10 + (ci_7 * 4))))
                                + (cj_8 * 8))), (double) (0));
                        cj_8++;

                    }
                    ci_7++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 12094 */
                cComputeZoneConnectivitySum(cZCS_10, cpuno, (int) (cR));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 12097 */
                if ((((cimode) > (1)) ? 1 : 0) != 0) {

                    /*
                     * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 12097
                     */
                    cstrcpy((int) (csDelimiter_9), strmarxan212);

                } else {

                    /*
                     * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 12099
                     */
                    cstrcpy((int) (csDelimiter_9), strmarxan596);

                }
                ;
                cfp_6 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 12101
                         */
                        cfopen((int) (csavename), strmarxan198);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 12102 */
                if (((cfp_6 == 0) ? 1 : 0) != 0) {
                    startargs(csavename);

                    /*
                     * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 12102
                     */
                    cShowErrorMessage((int) (strmarxan602), endargs());

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 12106 */
                if ((((cimode) > (1)) ? 1 : 0) != 0) {

                    /*
                     * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 12106
                     */
                    cfprintf(cfp_6, strmarxan721, 0);

                }
                ;

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 12108 */
                ci_7 = 0;
                lab_marxan424: for (; (((ci_7) < (getMEMINT((int) (marxan.ciZoneCount)))) ? 1 : 0) != 0;) {
                    startargs(((getMEMINT((int) (marxan.cZones)) + (ci_7 * 254)) + 4));

                    /*
                     * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 12108
                     */
                    cfprintf(cfp_6, strmarxan688, endargs());
                    ci_7++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 12109 */
                cfprintf(cfp_6, strmarxan137, 0);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 12118 */
                ci_7 = 0;
                lab_marxan425: for (; (((ci_7) < (getMEMINT((int) (marxan.ciZoneCount)))) ? 1 : 0) != 0;) {

                    {
                        startargs(((getMEMINT((int) (marxan.cZones)) + (ci_7 * 254)) + 4));

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 12114
                         */
                        cfprintf(cfp_6, strmarxan722, endargs());

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 12116
                         */
                        cj_8 = 0;
                        lab_marxan426: for (; (((cj_8) < (getMEMINT((int) (marxan.ciZoneCount)))) ? 1
                                : 0) != 0;) {
                            startargs(getMEMDOUBLE((int) ((getMEMINT((int) ((cZCS_10 + (ci_7 * 4))))
                                    + (cj_8 * 8)))));

                            /*
                             * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                             * 12116
                             */
                            cfprintf(cfp_6, strmarxan723, endargs());
                            cj_8++;

                        }

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 12117
                         */
                        cfprintf(cfp_6, strmarxan137, 0);

                    }
                    ci_7++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 12120 */
                cfclose(cfp_6);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 12123 */
                ci_7 = 0;
                lab_marxan427: for (; (((ci_7) < (getMEMINT((int) (marxan.ciZoneCount)))) ? 1 : 0) != 0;) {

                    /*
                     * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 12123
                     */
                    cfree(getMEMINT((int) ((cZCS_10 + (ci_7 * 4)))));
                    ci_7++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 12124 */
                cfree(cZCS_10);

            }
        }
        ;
        prevlevel();
    }

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 12128 */

    public static int cDumpAsymmetricConnectionFile(int cpuno, int cconnections, int cpu, int cfnames) {
        nextlevel();
        if (true) {
            int label = 0;
            int retval = 0;
        }
        ;
        prevlevel();
        return 0;
    }

    static int strmarxan724 = jtocstr("spname%stotalarea%sreservedarea%sexcludedarea%stargetarea%stotalocc%sreservedocc%sexcludedocc%stargetocc\n");
    static int strmarxan725 = jtocstr("%i%s%g%s%g%s%g%s%g%s%i%s%i%s%i%s%i\n");

    /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 12158 */

    public static void cOutputTotalAreas(int cpuno, int cspno, int cpu, int cspec, int cSM, int csavename, int ciOutputType) {
        nextlevel();
        if (true) {
            int label = 0;
            int cipu_9 = 0;
            int ci_10 = 0;
            int cism_11 = 0;
            int cisp_12 = 0;
            int cTotalOccurrences_13 = 0;
            int cTO_2_14 = 0;
            int cTO_3_15 = 0;
            int cTotalAreas_16 = 0;
            int cTA_2_17 = 0;
            int cTA_3_18 = 0;
            int cTotalAreasFile_19 = 0;
            int csDelimiter_20 = 0;
            int y85 = 0;
            int y86 = 0;
            int y87 = 0;

            {
                cipu_9 = 0;
                ci_10 = 0;
                cism_11 = 0;
                cisp_12 = 0;
                cTotalOccurrences_13 = 0;
                cTO_2_14 = 0;
                cTO_3_15 = 0;
                cTotalAreas_16 = 0;
                cTA_2_17 = 0;
                cTA_3_18 = 0;
                cTotalAreasFile_19 = 0;
                csDelimiter_20 = calloca(20);
                cTotalOccurrences_13 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 12164 */
                ccalloc(cspno, 4));
                cTO_2_14 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 12165 */
                ccalloc(cspno, 4));
                cTO_3_15 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 12166 */
                ccalloc(cspno, 4));
                cTotalAreas_16 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 12167 */
                ccalloc(cspno, 8));
                cTA_2_17 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 12168 */
                ccalloc(cspno, 8));
                cTA_3_18 = (int) (
                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 12169 */
                ccalloc(cspno, 8));

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 12176 */
                ci_10 = 0;
                lab_marxan428: for (; (((ci_10) < (cspno)) ? 1 : 0) != 0;) {

                    {
                        setMEMDOUBLE((int) ((cTotalAreas_16 + (ci_10 * 8))), (double) (0));
                        setMEMDOUBLE((int) ((cTA_2_17 + (ci_10 * 8))), (double) (0));
                        setMEMDOUBLE((int) ((cTA_3_18 + (ci_10 * 8))), (double) (0));

                    }
                    ci_10++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 12201 */
                cipu_9 = 0;
                lab_marxan429: for (; (((cipu_9) < (cpuno)) ? 1 : 0) != 0;) {

                    /*
                     * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 12180
                     */
                    if (getMEMINT((int) (((cpu + ((int) (cipu_9) * 64)) + 32))) != 0) {

                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 12199
                         */
                        ci_10 = 0;
                        lab_marxan430: for (; (((ci_10) < (getMEMINT((int) (((cpu + ((int) (cipu_9) * 64))
                                + 32))))) ? 1 : 0) != 0;) {

                            {
                                cism_11 = (getMEMINT((int) (((cpu + ((int) (cipu_9) * 64)) + 36))) + ci_10);
                                cisp_12 = getMEMINT((int) (((cSM + ((int) (cism_11) * 16)) + 12)));
                                sincMEMINT((int) ((cTotalOccurrences_13 + (cisp_12 * 4))), +1);
                                y85 = (int) ((cTotalAreas_16 + (cisp_12 * 8)));
                                setMEMDOUBLE((int) (y85), (double) ((getMEMDOUBLE((int) (y85))
                                        + getMEMDOUBLE((int) (((cSM + ((int) (cism_11) * 16)) + 0))))));

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 12189
                                 */
                                if ((((getMEMINT((int) (((cpu + ((int) (cipu_9) * 64)) + 4)))) == (2)) ? 1
                                        : 0) != 0) {

                                    {
                                        sincMEMINT((int) ((cTO_2_14 + (cisp_12 * 4))), +1);
                                        y86 = (int) ((cTA_2_17 + (cisp_12 * 8)));
                                        setMEMDOUBLE((int) (y86), (double) ((getMEMDOUBLE((int) (y86))
                                                + getMEMDOUBLE((int) (((cSM + ((int) (cism_11) * 16))
                                                        + 0))))));

                                    }

                                }
                                ;

                                /*
                                 * file E:/git/klab-ecology-component/etc/marxan/marxan.c
                                 * line 12195
                                 */
                                if ((((getMEMINT((int) (((cpu + ((int) (cipu_9) * 64)) + 4)))) == (3)) ? 1
                                        : 0) != 0) {

                                    {
                                        sincMEMINT((int) ((cTO_3_15 + (cisp_12 * 4))), +1);
                                        y87 = (int) ((cTA_3_18 + (cisp_12 * 8)));
                                        setMEMDOUBLE((int) (y87), (double) ((getMEMDOUBLE((int) (y87))
                                                + getMEMDOUBLE((int) (((cSM + ((int) (cism_11) * 16))
                                                        + 0))))));

                                    }

                                }
                                ;

                            }
                            ci_10++;

                        }

                    }
                    ;
                    cipu_9++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 12202 */
                if ((((ciOutputType) > (1)) ? 1 : 0) != 0) {

                    /*
                     * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 12202
                     */
                    cstrcpy((int) (csDelimiter_20), strmarxan212);

                } else {

                    /*
                     * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 12204
                     */
                    cstrcpy((int) (csDelimiter_20), strmarxan611);

                }
                ;
                cTotalAreasFile_19 =
                        /*
                         * file E:/git/klab-ecology-component/etc/marxan/marxan.c line
                         * 12206
                         */
                        cfopen((int) (csavename), strmarxan198);
                startargs(csDelimiter_20);
                addarg(csDelimiter_20);
                addarg(csDelimiter_20);
                addarg(csDelimiter_20);
                addarg(csDelimiter_20);
                addarg(csDelimiter_20);
                addarg(csDelimiter_20);
                addarg(csDelimiter_20);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 12208 */
                cfprintf(cTotalAreasFile_19, strmarxan724, endargs());

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 12212 */
                ci_10 = 0;
                lab_marxan431: for (; (((ci_10) < (cspno)) ? 1 : 0) != 0;) {
                    startargs(getMEMINT((int) (((cspec + ((int) (ci_10) * 100)) + 0))));
                    addarg(csDelimiter_20);
                    addarg(getMEMDOUBLE((int) ((cTotalAreas_16 + (ci_10 * 8)))));
                    addarg(csDelimiter_20);
                    addarg(getMEMDOUBLE((int) ((cTA_2_17 + (ci_10 * 8)))));
                    addarg(csDelimiter_20);
                    addarg(getMEMDOUBLE((int) ((cTA_3_18 + (ci_10 * 8)))));
                    addarg(csDelimiter_20);
                    addarg(getMEMDOUBLE((int) (((cspec + ((int) (ci_10) * 100)) + 12))));
                    addarg(csDelimiter_20);
                    addarg(getMEMINT((int) ((cTotalOccurrences_13 + (ci_10 * 4)))));
                    addarg(csDelimiter_20);
                    addarg(getMEMINT((int) ((cTO_2_14 + (ci_10 * 4)))));
                    addarg(csDelimiter_20);
                    addarg(getMEMINT((int) ((cTO_3_15 + (ci_10 * 4)))));
                    addarg(csDelimiter_20);
                    addarg(getMEMINT((int) (((cspec + ((int) (ci_10) * 100)) + 28))));

                    /*
                     * file E:/git/klab-ecology-component/etc/marxan/marxan.c line 12212
                     */
                    cfprintf(cTotalAreasFile_19, strmarxan725, endargs());
                    ci_10++;

                }

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 12213 */
                cfclose(cTotalAreasFile_19);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 12215 */
                cfree(cTotalOccurrences_13);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 12216 */
                cfree(cTO_2_14);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 12217 */
                cfree(cTO_3_15);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 12218 */
                cfree(cTotalAreas_16);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 12219 */
                cfree(cTA_2_17);

                /* file E:/git/klab-ecology-component/etc/marxan/marxan.c line 12220 */
                cfree(cTA_3_18);

            }
        }
        ;
        prevlevel();
    }

    public static void main(String[] args)
            throws Exception {
        int argc = args.length;
        int argv;

        nextlevel();
        argv = makeargv(new Object(), args, argc);
        c_c2jstartup();
        {
            cmain(argc + 1, argv);
        }
        c_c2jexit();
        prevlevel();

    }
}
