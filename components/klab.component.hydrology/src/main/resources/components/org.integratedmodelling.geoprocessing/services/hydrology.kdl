/**
 * Interface contextualizers for the morphometry functionalities in JGrasstools / Horton machine.
 */
@klab 0.10.0
@version 0.10.0
@namespace im.hydrology

export number fillsinks
	"Fills any hydrological sink in a DEM observation, producing a hydrologically corrected DEM."
	label 'Fill hydrological sinks'
{
	import number elevation
		"The DEM to correct"

	class org.integratedmodelling.geoprocessing.hydrology.HydrologicallyCorrectedElevationResolver
}

export number flowdirections
	"Import a hydrologically corrected DEM and produce flow directions using configurable methods. For now
	 only D8 is supported."
	 label 'Compute flow direction'
{
	import number hydrologically_corrected_elevation
		"A hydrologically corrected DEM with no areas where water can pool"
		
	optional boolean angles
		"If true, angles are computed as output instead of integer flow direction codes per D8 conventions."
		default false

	class org.integratedmodelling.geoprocessing.hydrology.FlowDirectionsResolver
}

export number flowaccumulation
	"Import a hydrologically corrected DEM and produce flow directions using configurable methods. For now
	 only D8 is supported."
	 label 'Accumulate upstream flow'
{
	import number flow_directions_d8
		"The D8 numeric code for flow direction"

	optional boolean cells
		"If true, number of contributing cells is output instead of actual contributing area."
		default false

	class org.integratedmodelling.geoprocessing.hydrology.FlowAccumulationResolver
}

export boolean streamnetwork
	"Extracts the stream network as a raster indicating presence of a stream, using a cutoff threshold
	 on the percentage of drainage cells."
	 label 'Extract stream network'
{
	import number upstream_cell_count
		"An observation of the number of cells draining into each cell"

	optional parameter number 'tca.threshold'
		"The percent of the total basin drainage that makes a cell part of a stream. A default is chosen
		 adaptively; defaults are unlikely to work in delta areas or any other difficult context."
		default 0.0

	class org.integratedmodelling.geoprocessing.hydrology.StreamNetworkResolver
}

export object tracestreams
	"Extracts the stream network as a set of lines indicating presence of a stream, using a cutoff threshold
	 on the percentage of drainage cells."
	 label 'Extract stream lines'
{
	import number upstream_cell_count
		"An observation of the number of cells draining into each cell"

	import object stream_outlet
		"The stream outlets to start from"

	import number flow_directions_d8
		"The D8 numeric code for flow direction"

	optional parameter number 'tca.threshold'
		"The percent of the total basin drainage that makes a cell part of a stream. A default is chosen
		 adaptively; defaults are unlikely to work in delta areas or any other difficult context."
		default 0.0

	class org.integratedmodelling.geoprocessing.hydrology.StreamInstantiator
}

export object extractoutlets
	"Extracts one or more outlets from a DEM based on flow directions and total contributing area 
	 in order of decreasing drainage area. Number of outlets and a threshold of minimum
	 drainage coverage can be used to only extract the outlets of the major basin(s)."
	 label 'Extract outlets'
{
	import number flow_directions_d8
		"The D8 numeric code for flow direction"
		
	import number upstream_cell_count
		"An observation of the number of cells draining into each cell"

	optional parameter number threshold
		"The minimum percent of basin drainage reuired for an outlet to be created. Default is 0.05."
		default 0.05

	optional parameter number extract
		"Number of outlets to create. Outlets are created in order of decreasing drainage
		 area down to the drainage threshold.  Default is -1, i.e. all outlets down to the
		 minimum drainage threshold will be extracted."
		default -1

	class org.integratedmodelling.geoprocessing.hydrology.StreamOutletInstantiator
}

export object delineatewatersheds
	"Extracts one or more watersheds based on stream outlet locations."
{
	import object stream_outlet
		"Stream outlets. Only the location of the outlets will be used; if the outlet spatial
		 extent is not a point, the centroid cell will be used."

	import number flow_directions_d8
		"The D8 numeric code for flow direction"
		
	import number upstream_cell_count
		"An observation of the number of cells draining into each cell"

	optional parameter boolean whole
		"If whole = true, only entire watersheds will be extracted, rejecting those whose basin
		 crosses the context's outline. Default is false. A warning is emitted in any case."
		default false
		
	class org.integratedmodelling.geoprocessing.hydrology.WatershedInstantiator
}

export number runoff
	"Computes runoff water volume from precipitation in the time unit, using the curve number method."
{

	import number curve_number
		"An observation of the curve number for the region."

	import number precipitation_volume
		"An observation of the precipitation volume for the region in the unit of time."

	import object stream_outlet
		"Stream outlets. Only the location of the outlets will be used; if the outlet's spatial
		 extent is not a point, the centroid cell will be used."

	import number flow_directions_d8
		"The D8 numeric code for flow direction"
		
	geometry S2
		
	class org.integratedmodelling.geoprocessing.hydrology.RunoffResolver
}