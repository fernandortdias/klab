# property file uses key=value notation. The symbol '=' cannot be used for other purposes
# key cannot contain any white spaces. Use camel casing instead
# key uses namespace notation (a '.' between key-parts) to denote a hierarchical relation
# a value can contain white spaces
# in value the symbol ',' is used to separate list elements. It can therefore not be used for other purposes

# Baseline landuse map and year that the map represents
Baseline.filename=D:\\clue\\Mexico\\rob_lu_16a
Baseline.year=2005

# Landuse classes
# code in map file, colour code in hex rgb, ease of change, initial age in years, demand deviation type, demand deviation amount
# colour examples: (red ff0000), (green 00ff00), (blue 0000ff), (yellow ffff00), (white ffffff), (black 000000), (grey aaaaaa), (orange ffaa00), (purple aa00ff)
# see also: http://www.color-hex.com/color-names.html
# ease of change: {'Very easy', 'Easy', 'Hard', 'Very hard', 'Cannot change'}
# demand deviation type: {'AbsoluteDeviation' [cell count], 'PercentageDeviation' [0..100]}.
LanduseClass.Forest=10001,38a800,Hard,100,AbsoluteDeviation,2047
LanduseClass.Urban=10002,38a800,Very easy,22,PercentageDeviation,15

# Administrative units map and list of unit name and unit code
AdministrativeUnits.filename=D:\\clue\\Europe\\masker
AdministrativeUnit.Netherlands=1
AdministrativeUnit.Belgium=2

# Demands
# line with sequence of landuse classes
# line with same sequence of landuse demands per year
LanduseDemands.sequence=Forest,Urban
LanduseDemand.Netherlands.2025=430787,232460
LanduseDemand.Netherlands.2050=530787,132460
LanduseDemand.Belgium.2010=300,200
LanduseDemand.Belgium.2050=400,100

# Drivers
# Can be 'Constant', or 'Dynamic' driver. Dynamic drivers change over time
# For every driver:
# line 1: DataType= {'Qualitative', 'Quantitative'}
# line 2: filename=full path
# line 3 etc: class.className=class code in map file, class colour in hex rgb
# the following 4 examples illustrate: 1. qualitative constant driver, 2. quantitative constant driver, 3. qualitative dynamic driver, 4. quantitative drynamic driver
ParameterMap.Constant.EcoRegions.DataType=Qualitative
ParameterMap.Constant.EcoRegions.filename=D:\\clue\\Mexico\\wwf_ecoregion
ParameterMap.Constant.EcoRegions.class.Boreal=204,ffaa5b
ParameterMap.Constant.EcoRegions.class.Pannonioal=205,22e4ff
ParameterMap.Constant.EcoRegions.class.Tundra=206,ffff00
ParameterMap.Constant.EnergyCropHectare.DataType=Quantitative
ParameterMap.Constant.EnergyCropHectare.filename=D:\\clue\\Mexico\\rk_encrop_ha
ParameterMap.Dynamic.Temperature.DataType=Qualitative
ParameterMap.Dynamic.Temperature.class.Cool=1,0000ff
ParameterMap.Dynamic.Temperature.class.Moderate=2,ffaa00
ParameterMap.Dynamic.Temperature.class.Hot=3,ff0000
ParameterMap.Dynamic.Temperature.filename.2005=D:\\samplePath\\filename_2005
ParameterMap.Dynamic.Temperature.filename.2012=D:\\samplePath\\filename_2012
ParameterMap.Dynamic.Temperature.filename.2020=D:\\samplePath\\filename_2020
ParameterMap.Dynamic.PopulationDensity.DataType=Quantitative
ParameterMap.Dynamic.PopulationDensity.filename.2005=D:\\samplePath\\filename_2005
ParameterMap.Dynamic.PopulationDensity.filename.2010=D:\\samplePath\\filename_2010
ParameterMap.Dynamic.PopulationDensity.filename.2020=D:\\samplePath\\filename_2020

# Suitability calculation
# line 1: Method={StepwiseRegression, FunctionDictionary}
# line 2: depending the method
# line 2: StepwiseRegression.SampleSizePercentage=decimal number between 0..100 (percentage of the number of cells for each land use class that'll be used to do the regression upon)
# line 3: StepwiseRegression.CorrelationThreshold=decimal number between 0..1 (drivers are being correlated for each landuse. If drivers are highly correlated (above threshold), the the driver with the lowest correlation with the landuse class is omitted)
# line 4: StepwiseRegression.ExportFileName=d:\\path\\filename.prop
Suitability.Method=StepwiseRegression
Suitability.StepwiseRegression.SampleSizePercentage=7.5
Suitability.StepwiseRegression.CorrelationThreshold=0.85

# line 2: FunctionDictionary.<adminUnit>.<landuseClass>.<FunctionConstant>= decimal number between -1..1 (constant value in function)
# line 3: FunctionDictionary.<adminUnit>.<landuseClass>.<FunctionCoefficient>.<Driver>= decimal number between -1..1 (coefficient value in function for quantitative driver)
# line 4: FunctionDictionary.<adminUnit>.<landuseClass>.<FunctionCoefficient>.<Driver>.class.<className>= decimal number between -1..1 (coefficient value in function for qualitative driver)
# line 5: etc. for driver and landuse class

# Conversion
# choose from the options: {'always', 'never', 'years, 7', 'location, D:\\samplePath\\conservationAreas.tif'}
# default is 'always' (no need to include a land use conversion that can take place always)
# for 'location': areas with data are NOT allowed to be converted. Areas without data (= nodata) can be converted
Conversion.Urban.Forest=never
Conversion.Forest.Urban=years, 15
Conversion.Forest.Arable=location, D:\\samplePath\\conservationAreas.tif

# Target time
# define until what time land use allocation calculations take place
TargetTime=2050