<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.integratedmodelling</groupId>
		<artifactId>products</artifactId>
		<version>0.10.0-SNAPSHOT</version>
	</parent>
	<artifactId>cli</artifactId>
	<build>
		<plugins>
			<!-- <plugin> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-maven-plugin</artifactId> 
				<version>${spring-boot-version}</version> <configuration> <fork>true</fork> 
				<mainClass>org.integratedmodelling.klab.k.Main</mainClass> </configuration> 
				<executions> <execution> <goals> <goal>repackage</goal> </goals> </execution> 
				</executions> </plugin> -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/lib</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>false</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- build checksums for the control center to reduce necessary downloads. 
				All lines following the first will need a lib/ prefix. -->
			<plugin>
				<groupId>net.nicoulaj.maven.plugins</groupId>
				<artifactId>checksum-maven-plugin</artifactId>
				<version>1.8</version>
				<executions>
					<execution>
						<goals>
							<goal>artifacts</goal>
							<goal>dependencies</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<scopes>
						<scope>compile</scope>
					</scopes>
					<types>
						<type>jar</type>
					</types>
					<algorithms>
						<algorithm>MD5</algorithm>
					</algorithms>
					<!-- <includeRelativePath>true</includeRelativePath> <relativeSubPath>${project.build.directory}</relativeSubPath> -->
					<transitive>true</transitive>
					<!-- <individualFiles>false</individualFiles> --><!-- <csvSummary>true</csvSummary> <csvSummaryFile>filelist.txt</csvSummaryFile> -->
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.gmavenplus</groupId>
				<artifactId>gmavenplus-plugin</artifactId>
				<version>1.8.0</version>
				<executions>
					<execution>
						<phase>verify</phase>
						<goals>
							<goal>execute</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<scripts>
						<script><![CDATA[
			import java.io.File
			println "Building filelist.txt..."
			new File('target/filelist.txt').withWriter { w ->
				["target/${project.artifactId}-${project.version}.jar.md5",  "target/dependencies-checksums.csv"].each { f ->
				    new File(f).readLines().each { r -> 
				      if (!r.startsWith('#'))
					        w << ( f.endsWith('csv') ? "lib/" : "${project.artifactId}-${project.version}.jar.md5,") << r << '\n'
					}
  				}
			}
			println "...done."
          ]]></script>
					</scripts>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.codehaus.groovy</groupId>
						<artifactId>groovy-all</artifactId>
						<!-- any version of Groovy \>= 1.5.0 should work here -->
						<version>2.5.8</version>
						<scope>runtime</scope>
						<type>pom</type>
					</dependency>
				</dependencies>
			</plugin>
			<!-- TODO this is meant to make JAI load its SPI stuff but actually prevents 
				other packages (h2) from initializing. <plugin> <groupId>org.apache.maven.plugins</groupId> 
				<artifactId>maven-jar-plugin</artifactId> <configuration> <archive> <manifestEntries> 
				<Specification-Title>k.LAB software stack</Specification-Title> <Specification-Version>0.10.0</Specification-Version> 
				<Specification-Vendor>integratedmodelling.org</Specification-Vendor> <Implementation-Title>0.10.0</Implementation-Title> 
				<Implementation-Version>0.10.0</Implementation-Version> <Implementation-Vendor>integratedmodelling.org</Implementation-Vendor> 
				</manifestEntries> </archive> </configuration> </plugin> -->
		</plugins>
	</build>

	<dependencies>

		<dependency>
			<groupId>org.integratedmodelling</groupId>
			<artifactId>klab.components.cdm</artifactId>
			<version>${klab.version}</version>
		</dependency>
		<dependency>
			<groupId>org.integratedmodelling</groupId>
			<artifactId>klab.component.mca</artifactId>
			<version>${klab.version}</version>
		</dependency>
		<dependency>
			<groupId>org.integratedmodelling</groupId>
			<artifactId>klab.component.ml</artifactId>
			<version>${klab.version}</version>
		</dependency>
		<dependency>
			<groupId>org.integratedmodelling</groupId>
			<artifactId>klab.component.hydrology</artifactId>
			<version>${klab.version}</version>
		</dependency>
		<dependency>
			<groupId>org.integratedmodelling</groupId>
			<artifactId>klab.tools</artifactId>
			<version>0.10.0-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>org.integratedmodelling</groupId>
			<artifactId>klab.modeler</artifactId>
			<version>0.10.0-SNAPSHOT</version>
		</dependency>
		<!-- Command line tool dependencies -->
		<dependency>
			<groupId>net.sf.jopt-simple</groupId>
			<artifactId>jopt-simple </artifactId>
			<version>4.6</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.xtext</groupId>
			<artifactId>org.eclipse.xtext.testing</artifactId>
			<version>${xtextVersion}</version>
		</dependency>
	</dependencies>
</project>