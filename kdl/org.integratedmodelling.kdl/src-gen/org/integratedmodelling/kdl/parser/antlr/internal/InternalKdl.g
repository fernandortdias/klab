/*
 * generated by Xtext 2.12.0
 */
grammar InternalKdl;

options {
	superClass=AbstractInternalAntlrParser;
	backtrack=true;
}

@lexer::header {
package org.integratedmodelling.kdl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.integratedmodelling.kdl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.IUnorderedGroupHelper.UnorderedGroupState;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.integratedmodelling.kdl.services.KdlGrammarAccess;

}

@parser::members {

/*
  This grammar contains a lot of empty actions to work around a bug in ANTLR.
  Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
*/

 	private KdlGrammarAccess grammarAccess;

    public InternalKdlParser(TokenStream input, KdlGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected KdlGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]@init {
	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
	grammarAccess.getModelAccess().getUnorderedGroup_0()
	);
}:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;
finally {
	myUnorderedGroupState.restore();
}

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
	grammarAccess.getModelAccess().getUnorderedGroup_0()
	);
}
@after {
	leaveRule();
}:
	(
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getModelAccess().getUnorderedGroup_0());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup_0(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup_0(), 0);
					}
								({true}?=>(otherlv_1='@dataflow'
								{
									newLeafNode(otherlv_1, grammarAccess.getModelAccess().getDataflowKeyword_0_0_0());
								}
								(
									(
										(
											{
												newCompositeNode(grammarAccess.getModelAccess().getNamePathParserRuleCall_0_0_1_0_0());
											}
											lv_name_2_1=rulePath
											{
												if ($current==null) {
													$current = createModelElementForParent(grammarAccess.getModelRule());
												}
												set(
													$current,
													"name",
													lv_name_2_1,
													"org.integratedmodelling.kdl.Kdl.Path");
												afterParserOrEnumRuleCall();
											}
											    |
											{
												newCompositeNode(grammarAccess.getModelAccess().getNameUrnIdParserRuleCall_0_0_1_0_1());
											}
											lv_name_2_2=ruleUrnId
											{
												if ($current==null) {
													$current = createModelElementForParent(grammarAccess.getModelRule());
												}
												set(
													$current,
													"name",
													lv_name_2_2,
													"org.integratedmodelling.kdl.Kdl.UrnId");
												afterParserOrEnumRuleCall();
											}
										)
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getModelAccess().getUnorderedGroup_0());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup_0(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup_0(), 1);
					}
								({true}?=>(otherlv_3='@var'
								{
									newLeafNode(otherlv_3, grammarAccess.getModelAccess().getVarKeyword_0_1_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getModelAccess().getVariablesParameterParserRuleCall_0_1_1_0());
										}
										lv_variables_4_0=ruleParameter
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getModelRule());
											}
											add(
												$current,
												"variables",
												lv_variables_4_0,
												"org.integratedmodelling.kdl.Kdl.Parameter");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))+
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getModelAccess().getUnorderedGroup_0());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup_0(), 2)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup_0(), 2);
					}
								({true}?=>(otherlv_5='@val'
								{
									newLeafNode(otherlv_5, grammarAccess.getModelAccess().getValKeyword_0_2_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getModelAccess().getConstantsParameterParserRuleCall_0_2_1_0());
										}
										lv_constants_6_0=ruleParameter
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getModelRule());
											}
											add(
												$current,
												"constants",
												lv_constants_6_0,
												"org.integratedmodelling.kdl.Kdl.Parameter");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))+
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getModelAccess().getUnorderedGroup_0());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup_0(), 3)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup_0(), 3);
					}
								({true}?=>(otherlv_7='@author'
								{
									newLeafNode(otherlv_7, grammarAccess.getModelAccess().getAuthorKeyword_0_3_0());
								}
								(
									(
										lv_authors_8_0=RULE_STRING
										{
											newLeafNode(lv_authors_8_0, grammarAccess.getModelAccess().getAuthorsSTRINGTerminalRuleCall_0_3_1_0());
										}
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getModelRule());
											}
											addWithLastConsumed(
												$current,
												"authors",
												lv_authors_8_0,
												"org.eclipse.xtext.common.Terminals.STRING");
										}
									)
								)
								))+
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getModelAccess().getUnorderedGroup_0());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup_0(), 4)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup_0(), 4);
					}
								({true}?=>(otherlv_9='@version'
								{
									newLeafNode(otherlv_9, grammarAccess.getModelAccess().getVersionKeyword_0_4_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getModelAccess().getVersionVersionNumberParserRuleCall_0_4_1_0());
										}
										lv_version_10_0=ruleVersionNumber
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getModelRule());
											}
											set(
												$current,
												"version",
												lv_version_10_0,
												"org.integratedmodelling.kdl.Kdl.VersionNumber");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getModelAccess().getUnorderedGroup_0());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup_0(), 5)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup_0(), 5);
					}
								({true}?=>(otherlv_11='@klab'
								{
									newLeafNode(otherlv_11, grammarAccess.getModelAccess().getKlabKeyword_0_5_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getModelAccess().getKlabVersionVersionNumberParserRuleCall_0_5_1_0());
										}
										lv_klabVersion_12_0=ruleVersionNumber
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getModelRule());
											}
											set(
												$current,
												"klabVersion",
												lv_klabVersion_12_0,
												"org.integratedmodelling.kdl.Kdl.VersionNumber");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getModelAccess().getUnorderedGroup_0());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup_0(), 6)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup_0(), 6);
					}
								({true}?=>(otherlv_13='@worldview'
								{
									newLeafNode(otherlv_13, grammarAccess.getModelAccess().getWorldviewKeyword_0_6_0());
								}
								(
									(
										lv_worldview_14_0=RULE_LOWERCASE_ID
										{
											newLeafNode(lv_worldview_14_0, grammarAccess.getModelAccess().getWorldviewLOWERCASE_IDTerminalRuleCall_0_6_1_0());
										}
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getModelRule());
											}
											setWithLastConsumed(
												$current,
												"worldview",
												lv_worldview_14_0,
												"org.integratedmodelling.kdl.Kdl.LOWERCASE_ID");
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getModelAccess().getUnorderedGroup_0());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup_0(), 7)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup_0(), 7);
					}
								({true}?=>(otherlv_15='@geometry'
								{
									newLeafNode(otherlv_15, grammarAccess.getModelAccess().getGeometryKeyword_0_7_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getModelAccess().getGeometryGeometryParserRuleCall_0_7_1_0());
										}
										lv_geometry_16_0=ruleGeometry
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getModelRule());
											}
											set(
												$current,
												"geometry",
												lv_geometry_16_0,
												"org.integratedmodelling.kdl.Kdl.Geometry");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getModelAccess().getUnorderedGroup_0());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup_0(), 8)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup_0(), 8);
					}
								({true}?=>(otherlv_17='@endpoint'
								{
									newLeafNode(otherlv_17, grammarAccess.getModelAccess().getEndpointKeyword_0_8_0());
								}
								(
									(
										lv_endpoint_18_0=RULE_STRING
										{
											newLeafNode(lv_endpoint_18_0, grammarAccess.getModelAccess().getEndpointSTRINGTerminalRuleCall_0_8_1_0());
										}
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getModelRule());
											}
											setWithLastConsumed(
												$current,
												"endpoint",
												lv_endpoint_18_0,
												"org.eclipse.xtext.common.Terminals.STRING");
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getModelAccess().getUnorderedGroup_0());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup_0(), 9)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup_0(), 9);
					}
								({true}?=>(otherlv_19='@namespace'
								{
									newLeafNode(otherlv_19, grammarAccess.getModelAccess().getNamespaceKeyword_0_9_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getModelAccess().getPackagePathNameParserRuleCall_0_9_1_0());
										}
										lv_package_20_0=rulePathName
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getModelRule());
											}
											set(
												$current,
												"package",
												lv_package_20_0,
												"org.integratedmodelling.kdl.Kdl.PathName");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getModelAccess().getUnorderedGroup_0());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup_0(), 10)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup_0(), 10);
					}
								({true}?=>(otherlv_21='@coverage'
								{
									newLeafNode(otherlv_21, grammarAccess.getModelAccess().getCoverageKeyword_0_10_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getModelAccess().getScaleFunctionParserRuleCall_0_10_1_0());
										}
										lv_scale_22_0=ruleFunction
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getModelRule());
											}
											add(
												$current,
												"scale",
												lv_scale_22_0,
												"org.integratedmodelling.kdl.Kdl.Function");
											afterParserOrEnumRuleCall();
										}
									)
								)
								(
									otherlv_23=','
									{
										newLeafNode(otherlv_23, grammarAccess.getModelAccess().getCommaKeyword_0_10_2_0());
									}
									(
										(
											{
												newCompositeNode(grammarAccess.getModelAccess().getScaleFunctionParserRuleCall_0_10_2_1_0());
											}
											lv_scale_24_0=ruleFunction
											{
												if ($current==null) {
													$current = createModelElementForParent(grammarAccess.getModelRule());
												}
												add(
													$current,
													"scale",
													lv_scale_24_0,
													"org.integratedmodelling.kdl.Kdl.Function");
												afterParserOrEnumRuleCall();
											}
										)
									)
								)*
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getModelAccess().getUnorderedGroup_0());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup_0(), 11)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup_0(), 11);
					}
								({true}?=>(otherlv_25='@context'
								{
									newLeafNode(otherlv_25, grammarAccess.getModelAccess().getContextKeyword_0_11_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getModelAccess().getContextUrnUrnParserRuleCall_0_11_1_0());
										}
										lv_contextUrn_26_0=ruleUrn
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getModelRule());
											}
											set(
												$current,
												"contextUrn",
												lv_contextUrn_26_0,
												"org.integratedmodelling.kdl.Kdl.Urn");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getModelAccess().getUnorderedGroup_0());
					}
				)
			)
					)*
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getModelAccess().getUnorderedGroup_0());
				}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getActorsActorDefinitionParserRuleCall_1_0());
				}
				lv_actors_27_0=ruleActorDefinition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"actors",
						lv_actors_27_0,
						"org.integratedmodelling.kdl.Kdl.ActorDefinition");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;
finally {
	myUnorderedGroupState.restore();
}

// Entry rule entryRuleActorDefinition
entryRuleActorDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActorDefinitionRule()); }
	iv_ruleActorDefinition=ruleActorDefinition
	{ $current=$iv_ruleActorDefinition.current; }
	EOF;

// Rule ActorDefinition
ruleActorDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					(
						lv_exported_0_0='export'
						{
							newLeafNode(lv_exported_0_0, grammarAccess.getActorDefinitionAccess().getExportedExportKeyword_0_0_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getActorDefinitionRule());
							}
							setWithLastConsumed($current, "exported", true, "export");
						}
					)
				)
				    |
				(
					(
						(
							(
								lv_optional_1_0='optional'
								{
									newLeafNode(lv_optional_1_0, grammarAccess.getActorDefinitionAccess().getOptionalOptionalKeyword_0_0_1_0_0_0());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getActorDefinitionRule());
									}
									setWithLastConsumed($current, "optional", true, "optional");
								}
							)
						)?
						(
							(
								lv_imported_2_0='import'
								{
									newLeafNode(lv_imported_2_0, grammarAccess.getActorDefinitionAccess().getImportedImportKeyword_0_0_1_0_1_0());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getActorDefinitionRule());
									}
									setWithLastConsumed($current, "imported", true, "import");
								}
							)
						)
					)
					(
						(
							(
								lv_multiple_3_0='multiple'
								{
									newLeafNode(lv_multiple_3_0, grammarAccess.getActorDefinitionAccess().getMultipleMultipleKeyword_0_0_1_1_0_0());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getActorDefinitionRule());
									}
									setWithLastConsumed($current, "multiple", true, "multiple");
								}
							)
						)
						    |
						(
							(
								(
									lv_arity_4_0=RULE_INT
									{
										newLeafNode(lv_arity_4_0, grammarAccess.getActorDefinitionAccess().getArityINTTerminalRuleCall_0_0_1_1_1_0_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getActorDefinitionRule());
										}
										setWithLastConsumed(
											$current,
											"arity",
											lv_arity_4_0,
											"org.eclipse.xtext.common.Terminals.INT");
									}
								)
							)
							(
								(
									lv_minimum_5_0='+'
									{
										newLeafNode(lv_minimum_5_0, grammarAccess.getActorDefinitionAccess().getMinimumPlusSignKeyword_0_0_1_1_1_1_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getActorDefinitionRule());
										}
										setWithLastConsumed($current, "minimum", true, "+");
									}
								)
							)?
						)
					)?
				)
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getActorDefinitionAccess().getTypeACTORParserRuleCall_0_1_0());
					}
					lv_type_6_0=ruleACTOR
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getActorDefinitionRule());
						}
						set(
							$current,
							"type",
							lv_type_6_0,
							"org.integratedmodelling.kdl.Kdl.ACTOR");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					(
						lv_name_7_1=RULE_LOWERCASE_ID
						{
							newLeafNode(lv_name_7_1, grammarAccess.getActorDefinitionAccess().getNameLOWERCASE_IDTerminalRuleCall_0_2_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getActorDefinitionRule());
							}
							setWithLastConsumed(
								$current,
								"name",
								lv_name_7_1,
								"org.integratedmodelling.kdl.Kdl.LOWERCASE_ID");
						}
						    |
						lv_name_7_2=RULE_LOWERCASE_DASHID
						{
							newLeafNode(lv_name_7_2, grammarAccess.getActorDefinitionAccess().getNameLOWERCASE_DASHIDTerminalRuleCall_0_2_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getActorDefinitionRule());
							}
							setWithLastConsumed(
								$current,
								"name",
								lv_name_7_2,
								"org.integratedmodelling.kdl.Kdl.LOWERCASE_DASHID");
						}
					)
				)
			)
			(
				otherlv_8='for'
				{
					newLeafNode(otherlv_8, grammarAccess.getActorDefinitionAccess().getForKeyword_0_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getActorDefinitionAccess().getTargetsTARGETParserRuleCall_0_3_1_0());
						}
						lv_targets_9_0=ruleTARGET
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getActorDefinitionRule());
							}
							add(
								$current,
								"targets",
								lv_targets_9_0,
								"org.integratedmodelling.kdl.Kdl.TARGET");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_10=','
					{
						newLeafNode(otherlv_10, grammarAccess.getActorDefinitionAccess().getCommaKeyword_0_3_2_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getActorDefinitionAccess().getTargetsTARGETParserRuleCall_0_3_2_1_0());
							}
							lv_targets_11_0=ruleTARGET
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getActorDefinitionRule());
								}
								add(
									$current,
									"targets",
									lv_targets_11_0,
									"org.integratedmodelling.kdl.Kdl.TARGET");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)?
			(
				(
					lv_docstring_12_0=RULE_STRING
					{
						newLeafNode(lv_docstring_12_0, grammarAccess.getActorDefinitionAccess().getDocstringSTRINGTerminalRuleCall_0_4_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getActorDefinitionRule());
						}
						setWithLastConsumed(
							$current,
							"docstring",
							lv_docstring_12_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)?
			(
				otherlv_13='{'
				{
					newLeafNode(otherlv_13, grammarAccess.getActorDefinitionAccess().getLeftCurlyBracketKeyword_0_5_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getActorDefinitionAccess().getBodyDataflowBodyParserRuleCall_0_5_1_0());
						}
						lv_body_14_0=ruleDataflowBody
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getActorDefinitionRule());
							}
							set(
								$current,
								"body",
								lv_body_14_0,
								"org.integratedmodelling.kdl.Kdl.DataflowBody");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_15='}'
				{
					newLeafNode(otherlv_15, grammarAccess.getActorDefinitionAccess().getRightCurlyBracketKeyword_0_5_2());
				}
			)?
			(
				otherlv_16='as'
				{
					newLeafNode(otherlv_16, grammarAccess.getActorDefinitionAccess().getAsKeyword_0_6_0());
				}
				(
					(
						lv_localName_17_0=RULE_LOWERCASE_ID
						{
							newLeafNode(lv_localName_17_0, grammarAccess.getActorDefinitionAccess().getLocalNameLOWERCASE_IDTerminalRuleCall_0_6_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getActorDefinitionRule());
							}
							setWithLastConsumed(
								$current,
								"localName",
								lv_localName_17_0,
								"org.integratedmodelling.kdl.Kdl.LOWERCASE_ID");
						}
					)
				)
			)?
			(
				otherlv_18='over'
				{
					newLeafNode(otherlv_18, grammarAccess.getActorDefinitionAccess().getOverKeyword_0_7_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getActorDefinitionAccess().getCoverageFunctionParserRuleCall_0_7_1_0());
						}
						lv_coverage_19_0=ruleFunction
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getActorDefinitionRule());
							}
							add(
								$current,
								"coverage",
								lv_coverage_19_0,
								"org.integratedmodelling.kdl.Kdl.Function");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_20=','
					{
						newLeafNode(otherlv_20, grammarAccess.getActorDefinitionAccess().getCommaKeyword_0_7_2_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getActorDefinitionAccess().getCoverageFunctionParserRuleCall_0_7_2_1_0());
							}
							lv_coverage_21_0=ruleFunction
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getActorDefinitionRule());
								}
								add(
									$current,
									"coverage",
									lv_coverage_21_0,
									"org.integratedmodelling.kdl.Kdl.Function");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)?
		)
		    |
		(
			(
				(
					(
						lv_optional_22_0='optional'
						{
							newLeafNode(lv_optional_22_0, grammarAccess.getActorDefinitionAccess().getOptionalOptionalKeyword_1_0_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getActorDefinitionRule());
							}
							setWithLastConsumed($current, "optional", true, "optional");
						}
					)
				)
				    |
				(
					(
						(
							lv_type_23_1='number'
							{
								newLeafNode(lv_type_23_1, grammarAccess.getActorDefinitionAccess().getTypeNumberKeyword_1_0_1_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getActorDefinitionRule());
								}
								setWithLastConsumed($current, "type", lv_type_23_1, null);
							}
							    |
							lv_type_23_2='boolean'
							{
								newLeafNode(lv_type_23_2, grammarAccess.getActorDefinitionAccess().getTypeBooleanKeyword_1_0_1_0_1());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getActorDefinitionRule());
								}
								setWithLastConsumed($current, "type", lv_type_23_2, null);
							}
							    |
							lv_type_23_3='text'
							{
								newLeafNode(lv_type_23_3, grammarAccess.getActorDefinitionAccess().getTypeTextKeyword_1_0_1_0_2());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getActorDefinitionRule());
								}
								setWithLastConsumed($current, "type", lv_type_23_3, null);
							}
							    |
							lv_type_23_4='list'
							{
								newLeafNode(lv_type_23_4, grammarAccess.getActorDefinitionAccess().getTypeListKeyword_1_0_1_0_3());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getActorDefinitionRule());
								}
								setWithLastConsumed($current, "type", lv_type_23_4, null);
							}
							    |
							lv_type_23_5='enum'
							{
								newLeafNode(lv_type_23_5, grammarAccess.getActorDefinitionAccess().getTypeEnumKeyword_1_0_1_0_4());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getActorDefinitionRule());
								}
								setWithLastConsumed($current, "type", lv_type_23_5, null);
							}
						)
					)
				)
			)
			(
				(
					lv_parameter_24_0='input'
					{
						newLeafNode(lv_parameter_24_0, grammarAccess.getActorDefinitionAccess().getParameterInputKeyword_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getActorDefinitionRule());
						}
						setWithLastConsumed($current, "parameter", true, "input");
					}
				)
			)
			(
				(
					lv_name_25_0=RULE_LOWERCASE_ID
					{
						newLeafNode(lv_name_25_0, grammarAccess.getActorDefinitionAccess().getNameLOWERCASE_IDTerminalRuleCall_1_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getActorDefinitionRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_25_0,
							"org.integratedmodelling.kdl.Kdl.LOWERCASE_ID");
					}
				)
			)
			(
				otherlv_26='values'
				{
					newLeafNode(otherlv_26, grammarAccess.getActorDefinitionAccess().getValuesKeyword_1_3_0());
				}
				(
					(
						lv_enumValues_27_0=RULE_UPPERCASE_ID
						{
							newLeafNode(lv_enumValues_27_0, grammarAccess.getActorDefinitionAccess().getEnumValuesUPPERCASE_IDTerminalRuleCall_1_3_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getActorDefinitionRule());
							}
							addWithLastConsumed(
								$current,
								"enumValues",
								lv_enumValues_27_0,
								"org.integratedmodelling.kdl.Kdl.UPPERCASE_ID");
						}
					)
				)
				(
					otherlv_28=','
					{
						newLeafNode(otherlv_28, grammarAccess.getActorDefinitionAccess().getCommaKeyword_1_3_2_0());
					}
					(
						(
							lv_enumValues_29_0=RULE_UPPERCASE_ID
							{
								newLeafNode(lv_enumValues_29_0, grammarAccess.getActorDefinitionAccess().getEnumValuesUPPERCASE_IDTerminalRuleCall_1_3_2_1_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getActorDefinitionRule());
								}
								addWithLastConsumed(
									$current,
									"enumValues",
									lv_enumValues_29_0,
									"org.integratedmodelling.kdl.Kdl.UPPERCASE_ID");
							}
						)
					)
				)*
			)?
			(
				(
					lv_docstring_30_0=RULE_STRING
					{
						newLeafNode(lv_docstring_30_0, grammarAccess.getActorDefinitionAccess().getDocstringSTRINGTerminalRuleCall_1_4_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getActorDefinitionRule());
						}
						setWithLastConsumed(
							$current,
							"docstring",
							lv_docstring_30_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
			(
				otherlv_31='default'
				{
					newLeafNode(otherlv_31, grammarAccess.getActorDefinitionAccess().getDefaultKeyword_1_5_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getActorDefinitionAccess().getDefaultValueParserRuleCall_1_5_1_0());
						}
						lv_default_32_0=ruleValue
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getActorDefinitionRule());
							}
							set(
								$current,
								"default",
								lv_default_32_0,
								"org.integratedmodelling.kdl.Kdl.Value");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)?
			(
				otherlv_33='{'
				{
					newLeafNode(otherlv_33, grammarAccess.getActorDefinitionAccess().getLeftCurlyBracketKeyword_1_6_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getActorDefinitionAccess().getBodyDataflowBodyParserRuleCall_1_6_1_0());
						}
						lv_body_34_0=ruleDataflowBody
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getActorDefinitionRule());
							}
							set(
								$current,
								"body",
								lv_body_34_0,
								"org.integratedmodelling.kdl.Kdl.DataflowBody");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_35='}'
				{
					newLeafNode(otherlv_35, grammarAccess.getActorDefinitionAccess().getRightCurlyBracketKeyword_1_6_2());
				}
			)?
		)
	)
;

// Entry rule entryRuleDataflowBody
entryRuleDataflowBody returns [EObject current=null]@init {
	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
	grammarAccess.getDataflowBodyAccess().getUnorderedGroup_3()
	);
}:
	{ newCompositeNode(grammarAccess.getDataflowBodyRule()); }
	iv_ruleDataflowBody=ruleDataflowBody
	{ $current=$iv_ruleDataflowBody.current; }
	EOF;
finally {
	myUnorderedGroupState.restore();
}

// Rule DataflowBody
ruleDataflowBody returns [EObject current=null]
@init {
	enterRule();
	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
	grammarAccess.getDataflowBodyAccess().getUnorderedGroup_3()
	);
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getDataflowBodyAccess().getDataflowBodyAction_0(),
					$current);
			}
		)
		(
			otherlv_1='observe'
			{
				newLeafNode(otherlv_1, grammarAccess.getDataflowBodyAccess().getObserveKeyword_1_0());
			}
			(
				(
					otherlv_2='new'
					{
						newLeafNode(otherlv_2, grammarAccess.getDataflowBodyAccess().getNewKeyword_1_1_0_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getDataflowBodyAccess().getNewObservationObservableSemanticsParserRuleCall_1_1_0_1_0());
							}
							lv_newObservation_3_0=ruleObservableSemantics
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getDataflowBodyRule());
								}
								set(
									$current,
									"newObservation",
									lv_newObservation_3_0,
									"org.integratedmodelling.kdl.Kdl.ObservableSemantics");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getDataflowBodyAccess().getUrnObservationUrnParserRuleCall_1_1_1_0());
						}
						lv_urnObservation_4_0=ruleUrn
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDataflowBodyRule());
							}
							set(
								$current,
								"urnObservation",
								lv_urnObservation_4_0,
								"org.integratedmodelling.kdl.Kdl.Urn");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getDataflowBodyAccess().getDataflowsActorDefinitionParserRuleCall_2_0());
				}
				lv_dataflows_5_0=ruleActorDefinition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataflowBodyRule());
					}
					add(
						$current,
						"dataflows",
						lv_dataflows_5_0,
						"org.integratedmodelling.kdl.Kdl.ActorDefinition");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getDataflowBodyAccess().getUnorderedGroup_3());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getDataflowBodyAccess().getUnorderedGroup_3(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getDataflowBodyAccess().getUnorderedGroup_3(), 0);
					}
								({true}?=>(otherlv_7='geometry'
								{
									newLeafNode(otherlv_7, grammarAccess.getDataflowBodyAccess().getGeometryKeyword_3_0_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getDataflowBodyAccess().getGeometryGeometryParserRuleCall_3_0_1_0());
										}
										lv_geometry_8_0=ruleGeometry
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getDataflowBodyRule());
											}
											set(
												$current,
												"geometry",
												lv_geometry_8_0,
												"org.integratedmodelling.kdl.Kdl.Geometry");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDataflowBodyAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getDataflowBodyAccess().getUnorderedGroup_3(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getDataflowBodyAccess().getUnorderedGroup_3(), 1);
					}
								({true}?=>(otherlv_9='units'
								{
									newLeafNode(otherlv_9, grammarAccess.getDataflowBodyAccess().getUnitsKeyword_3_1_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getDataflowBodyAccess().getUnitsUnitParserRuleCall_3_1_1_0());
										}
										lv_units_10_0=ruleUnit
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getDataflowBodyRule());
											}
											set(
												$current,
												"units",
												lv_units_10_0,
												"org.integratedmodelling.kdl.Kdl.Unit");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDataflowBodyAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getDataflowBodyAccess().getUnorderedGroup_3(), 2)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getDataflowBodyAccess().getUnorderedGroup_3(), 2);
					}
								({true}?=>((
									{
										newCompositeNode(grammarAccess.getDataflowBodyAccess().getComputationsComputationParserRuleCall_3_2_0());
									}
									lv_computations_11_0=ruleComputation
									{
										if ($current==null) {
											$current = createModelElementForParent(grammarAccess.getDataflowBodyRule());
										}
										add(
											$current,
											"computations",
											lv_computations_11_0,
											"org.integratedmodelling.kdl.Kdl.Computation");
										afterParserOrEnumRuleCall();
									}
								)
								))+
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDataflowBodyAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getDataflowBodyAccess().getUnorderedGroup_3(), 3)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getDataflowBodyAccess().getUnorderedGroup_3(), 3);
					}
								({true}?=>(otherlv_12='semantics'
								{
									newLeafNode(otherlv_12, grammarAccess.getDataflowBodyAccess().getSemanticsKeyword_3_3_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getDataflowBodyAccess().getSemanticsObservableSemanticsParserRuleCall_3_3_1_0());
										}
										lv_semantics_13_0=ruleObservableSemantics
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getDataflowBodyRule());
											}
											set(
												$current,
												"semantics",
												lv_semantics_13_0,
												"org.integratedmodelling.kdl.Kdl.ObservableSemantics");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDataflowBodyAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getDataflowBodyAccess().getUnorderedGroup_3(), 4)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getDataflowBodyAccess().getUnorderedGroup_3(), 4);
					}
								({true}?=>((
									otherlv_14='metadata'
									{
										newLeafNode(otherlv_14, grammarAccess.getDataflowBodyAccess().getMetadataKeyword_3_4_0_0());
									}
									(
										(
											{
												newCompositeNode(grammarAccess.getDataflowBodyAccess().getMetadataMetadataParserRuleCall_3_4_0_1_0());
											}
											lv_metadata_15_0=ruleMetadata
											{
												if ($current==null) {
													$current = createModelElementForParent(grammarAccess.getDataflowBodyRule());
												}
												set(
													$current,
													"metadata",
													lv_metadata_15_0,
													"org.integratedmodelling.kdl.Kdl.Metadata");
												afterParserOrEnumRuleCall();
											}
										)
									)
								)?
								(
									otherlv_16='class'
									{
										newLeafNode(otherlv_16, grammarAccess.getDataflowBodyAccess().getClassKeyword_3_4_1_0());
									}
									(
										(
											{
												newCompositeNode(grammarAccess.getDataflowBodyAccess().getJavaClassJavaClassParserRuleCall_3_4_1_1_0());
											}
											lv_javaClass_17_0=ruleJavaClass
											{
												if ($current==null) {
													$current = createModelElementForParent(grammarAccess.getDataflowBodyRule());
												}
												set(
													$current,
													"javaClass",
													lv_javaClass_17_0,
													"org.integratedmodelling.kdl.Kdl.JavaClass");
												afterParserOrEnumRuleCall();
											}
										)
									)
								)?
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDataflowBodyAccess().getUnorderedGroup_3());
					}
				)
			)
					)+
					{getUnorderedGroupHelper().canLeave(grammarAccess.getDataflowBodyAccess().getUnorderedGroup_3())}?
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getDataflowBodyAccess().getUnorderedGroup_3());
				}
		)
	)
;
finally {
	myUnorderedGroupState.restore();
}

// Entry rule entryRuleComputation
entryRuleComputation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComputationRule()); }
	iv_ruleComputation=ruleComputation
	{ $current=$iv_ruleComputation.current; }
	EOF;

// Rule Computation
ruleComputation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='compute'
		{
			newLeafNode(otherlv_0, grammarAccess.getComputationAccess().getComputeKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getComputationAccess().getFunctionsFunctionParserRuleCall_1_0());
				}
				lv_functions_1_0=ruleFunction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComputationRule());
					}
					add(
						$current,
						"functions",
						lv_functions_1_0,
						"org.integratedmodelling.kdl.Kdl.Function");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getComputationAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getComputationAccess().getFunctionsFunctionParserRuleCall_2_1_0());
					}
					lv_functions_3_0=ruleFunction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getComputationRule());
						}
						add(
							$current,
							"functions",
							lv_functions_3_0,
							"org.integratedmodelling.kdl.Kdl.Function");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleGeometry
entryRuleGeometry returns [String current=null]:
	{ newCompositeNode(grammarAccess.getGeometryRule()); }
	iv_ruleGeometry=ruleGeometry
	{ $current=$iv_ruleGeometry.current.getText(); }
	EOF;

// Rule Geometry
ruleGeometry returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='*'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getGeometryAccess().getAsteriskKeyword_0());
		}
		    |
		(
			this_SHAPE_1=RULE_SHAPE
			{
				$current.merge(this_SHAPE_1);
			}
			{
				newLeafNode(this_SHAPE_1, grammarAccess.getGeometryAccess().getSHAPETerminalRuleCall_1_0());
			}
			(
				kw=','
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getGeometryAccess().getCommaKeyword_1_1_0());
				}
				this_SHAPE_3=RULE_SHAPE
				{
					$current.merge(this_SHAPE_3);
				}
				{
					newLeafNode(this_SHAPE_3, grammarAccess.getGeometryAccess().getSHAPETerminalRuleCall_1_1_1());
				}
			)*
		)
	)
;

// Entry rule entryRuleConceptDeclaration
entryRuleConceptDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConceptDeclarationRule()); }
	iv_ruleConceptDeclaration=ruleConceptDeclaration
	{ $current=$iv_ruleConceptDeclaration.current; }
	EOF;

// Rule ConceptDeclaration
ruleConceptDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_STRING
				{
					newLeafNode(lv_name_0_0, grammarAccess.getConceptDeclarationAccess().getNameSTRINGTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConceptDeclarationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getConceptDeclarationAccess().getMainConceptParserRuleCall_1_0());
				}
				lv_main_1_0=ruleConcept
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
					}
					add(
						$current,
						"main",
						lv_main_1_0,
						"org.integratedmodelling.kdl.Kdl.Concept");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		(
			otherlv_2='of'
			{
				newLeafNode(otherlv_2, grammarAccess.getConceptDeclarationAccess().getOfKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConceptDeclarationAccess().getInherencySimpleConceptDeclarationParserRuleCall_2_1_0());
					}
					lv_inherency_3_0=ruleSimpleConceptDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
						}
						set(
							$current,
							"inherency",
							lv_inherency_3_0,
							"org.integratedmodelling.kdl.Kdl.SimpleConceptDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_4='within'
			{
				newLeafNode(otherlv_4, grammarAccess.getConceptDeclarationAccess().getWithinKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConceptDeclarationAccess().getContextSimpleConceptDeclarationParserRuleCall_3_1_0());
					}
					lv_context_5_0=ruleSimpleConceptDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
						}
						set(
							$current,
							"context",
							lv_context_5_0,
							"org.integratedmodelling.kdl.Kdl.SimpleConceptDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleConceptReference
entryRuleConceptReference returns [String current=null]:
	{ newCompositeNode(grammarAccess.getConceptReferenceRule()); }
	iv_ruleConceptReference=ruleConceptReference
	{ $current=$iv_ruleConceptReference.current.getText(); }
	EOF;

// Rule ConceptReference
ruleConceptReference returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_CAMELCASE_ID_0=RULE_CAMELCASE_ID
		{
			$current.merge(this_CAMELCASE_ID_0);
		}
		{
			newLeafNode(this_CAMELCASE_ID_0, grammarAccess.getConceptReferenceAccess().getCAMELCASE_IDTerminalRuleCall_0());
		}
		    |
		{
			newCompositeNode(grammarAccess.getConceptReferenceAccess().getNamespaceIdParserRuleCall_1());
		}
		this_NamespaceId_1=ruleNamespaceId
		{
			$current.merge(this_NamespaceId_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleConcept
entryRuleConcept returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConceptRule()); }
	iv_ruleConcept=ruleConcept
	{ $current=$iv_ruleConcept.current; }
	EOF;

// Rule Concept
ruleConcept returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_negated_0_0='not'
					{
						newLeafNode(lv_negated_0_0, grammarAccess.getConceptAccess().getNegatedNotKeyword_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConceptRule());
						}
						setWithLastConsumed($current, "negated", true, "not");
					}
				)
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getConceptAccess().getNameConceptReferenceParserRuleCall_0_1_0());
					}
					lv_name_1_0=ruleConceptReference
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConceptRule());
						}
						set(
							$current,
							"name",
							lv_name_1_0,
							"org.integratedmodelling.kdl.Kdl.ConceptReference");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_2='identified'
				{
					newLeafNode(otherlv_2, grammarAccess.getConceptAccess().getIdentifiedKeyword_0_2_0());
				}
				otherlv_3='as'
				{
					newLeafNode(otherlv_3, grammarAccess.getConceptAccess().getAsKeyword_0_2_1());
				}
				(
					(
						(
							(
								lv_stringIdentifier_4_1=RULE_ID
								{
									newLeafNode(lv_stringIdentifier_4_1, grammarAccess.getConceptAccess().getStringIdentifierIDTerminalRuleCall_0_2_2_0_0_0());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getConceptRule());
									}
									setWithLastConsumed(
										$current,
										"stringIdentifier",
										lv_stringIdentifier_4_1,
										"org.eclipse.xtext.common.Terminals.ID");
								}
								    |
								lv_stringIdentifier_4_2=RULE_STRING
								{
									newLeafNode(lv_stringIdentifier_4_2, grammarAccess.getConceptAccess().getStringIdentifierSTRINGTerminalRuleCall_0_2_2_0_0_1());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getConceptRule());
									}
									setWithLastConsumed(
										$current,
										"stringIdentifier",
										lv_stringIdentifier_4_2,
										"org.eclipse.xtext.common.Terminals.STRING");
								}
							)
						)
					)
					    |
					(
						(
							lv_intIdentifier_5_0=RULE_INT
							{
								newLeafNode(lv_intIdentifier_5_0, grammarAccess.getConceptAccess().getIntIdentifierINTTerminalRuleCall_0_2_2_1_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getConceptRule());
								}
								setWithLastConsumed(
									$current,
									"intIdentifier",
									lv_intIdentifier_5_0,
									"org.eclipse.xtext.common.Terminals.INT");
							}
						)
					)
				)
				otherlv_6='by'
				{
					newLeafNode(otherlv_6, grammarAccess.getConceptAccess().getByKeyword_0_2_3());
				}
				(
					(
						(
							lv_authority_7_1=RULE_UPPERCASE_ID
							{
								newLeafNode(lv_authority_7_1, grammarAccess.getConceptAccess().getAuthorityUPPERCASE_IDTerminalRuleCall_0_2_4_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getConceptRule());
								}
								setWithLastConsumed(
									$current,
									"authority",
									lv_authority_7_1,
									"org.integratedmodelling.kdl.Kdl.UPPERCASE_ID");
							}
							    |
							lv_authority_7_2=RULE_UPPERCASE_PATH
							{
								newLeafNode(lv_authority_7_2, grammarAccess.getConceptAccess().getAuthorityUPPERCASE_PATHTerminalRuleCall_0_2_4_0_1());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getConceptRule());
								}
								setWithLastConsumed(
									$current,
									"authority",
									lv_authority_7_2,
									"org.integratedmodelling.kdl.Kdl.UPPERCASE_PATH");
							}
						)
					)
				)
			)?
		)
		    |
		(
			(
				(
					lv_presence_8_0='presence'
					{
						newLeafNode(lv_presence_8_0, grammarAccess.getConceptAccess().getPresencePresenceKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConceptRule());
						}
						setWithLastConsumed($current, "presence", true, "presence");
					}
				)
			)
			otherlv_9='of'
			{
				newLeafNode(otherlv_9, grammarAccess.getConceptAccess().getOfKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_1_2_0());
					}
					lv_concept_10_0=ruleSimpleConceptDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConceptRule());
						}
						set(
							$current,
							"concept",
							lv_concept_10_0,
							"org.integratedmodelling.kdl.Kdl.SimpleConceptDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_count_11_0='count'
					{
						newLeafNode(lv_count_11_0, grammarAccess.getConceptAccess().getCountCountKeyword_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConceptRule());
						}
						setWithLastConsumed($current, "count", true, "count");
					}
				)
			)
			otherlv_12='of'
			{
				newLeafNode(otherlv_12, grammarAccess.getConceptAccess().getOfKeyword_2_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_2_2_0());
					}
					lv_concept_13_0=ruleSimpleConceptDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConceptRule());
						}
						set(
							$current,
							"concept",
							lv_concept_13_0,
							"org.integratedmodelling.kdl.Kdl.SimpleConceptDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_distance_14_0='distance'
					{
						newLeafNode(lv_distance_14_0, grammarAccess.getConceptAccess().getDistanceDistanceKeyword_3_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConceptRule());
						}
						setWithLastConsumed($current, "distance", true, "distance");
					}
				)
			)
			(
				otherlv_15='to'
				{
					newLeafNode(otherlv_15, grammarAccess.getConceptAccess().getToKeyword_3_1_0());
				}
				    |
				otherlv_16='from'
				{
					newLeafNode(otherlv_16, grammarAccess.getConceptAccess().getFromKeyword_3_1_1());
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_3_2_0());
					}
					lv_concept_17_0=ruleSimpleConceptDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConceptRule());
						}
						set(
							$current,
							"concept",
							lv_concept_17_0,
							"org.integratedmodelling.kdl.Kdl.SimpleConceptDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_probability_18_0='probability'
					{
						newLeafNode(lv_probability_18_0, grammarAccess.getConceptAccess().getProbabilityProbabilityKeyword_4_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConceptRule());
						}
						setWithLastConsumed($current, "probability", true, "probability");
					}
				)
			)
			otherlv_19='of'
			{
				newLeafNode(otherlv_19, grammarAccess.getConceptAccess().getOfKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_4_2_0());
					}
					lv_concept_20_0=ruleSimpleConceptDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConceptRule());
						}
						set(
							$current,
							"concept",
							lv_concept_20_0,
							"org.integratedmodelling.kdl.Kdl.SimpleConceptDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_uncertainty_21_0='uncertainty'
					{
						newLeafNode(lv_uncertainty_21_0, grammarAccess.getConceptAccess().getUncertaintyUncertaintyKeyword_5_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConceptRule());
						}
						setWithLastConsumed($current, "uncertainty", true, "uncertainty");
					}
				)
			)
			otherlv_22='of'
			{
				newLeafNode(otherlv_22, grammarAccess.getConceptAccess().getOfKeyword_5_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_5_2_0());
					}
					lv_concept_23_0=ruleSimpleConceptDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConceptRule());
						}
						set(
							$current,
							"concept",
							lv_concept_23_0,
							"org.integratedmodelling.kdl.Kdl.SimpleConceptDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_proportion_24_0='proportion'
					{
						newLeafNode(lv_proportion_24_0, grammarAccess.getConceptAccess().getProportionProportionKeyword_6_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConceptRule());
						}
						setWithLastConsumed($current, "proportion", true, "proportion");
					}
				)
			)
			otherlv_25='of'
			{
				newLeafNode(otherlv_25, grammarAccess.getConceptAccess().getOfKeyword_6_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_6_2_0());
					}
					lv_concept_26_0=ruleSimpleConceptDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConceptRule());
						}
						set(
							$current,
							"concept",
							lv_concept_26_0,
							"org.integratedmodelling.kdl.Kdl.SimpleConceptDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				((
					'in'
					(
						(
							ruleSimpleConceptDeclaration
						)
					)
				)
				)=>
				(
					otherlv_27='in'
					{
						newLeafNode(otherlv_27, grammarAccess.getConceptAccess().getInKeyword_6_3_0_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getConceptAccess().getOtherSimpleConceptDeclarationParserRuleCall_6_3_0_1_0());
							}
							lv_other_28_0=ruleSimpleConceptDeclaration
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getConceptRule());
								}
								set(
									$current,
									"other",
									lv_other_28_0,
									"org.integratedmodelling.kdl.Kdl.SimpleConceptDeclaration");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
			)?
		)
		    |
		(
			(
				(
					lv_ratio_29_0='ratio'
					{
						newLeafNode(lv_ratio_29_0, grammarAccess.getConceptAccess().getRatioRatioKeyword_7_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConceptRule());
						}
						setWithLastConsumed($current, "ratio", true, "ratio");
					}
				)
			)
			otherlv_30='of'
			{
				newLeafNode(otherlv_30, grammarAccess.getConceptAccess().getOfKeyword_7_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_7_2_0());
					}
					lv_concept_31_0=ruleSimpleConceptDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConceptRule());
						}
						set(
							$current,
							"concept",
							lv_concept_31_0,
							"org.integratedmodelling.kdl.Kdl.SimpleConceptDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				('to')=>
				otherlv_32='to'
				{
					newLeafNode(otherlv_32, grammarAccess.getConceptAccess().getToKeyword_7_3());
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getConceptAccess().getOtherSimpleConceptDeclarationParserRuleCall_7_4_0());
					}
					lv_other_33_0=ruleSimpleConceptDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConceptRule());
						}
						set(
							$current,
							"other",
							lv_other_33_0,
							"org.integratedmodelling.kdl.Kdl.SimpleConceptDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_value_34_0='value'
					{
						newLeafNode(lv_value_34_0, grammarAccess.getConceptAccess().getValueValueKeyword_8_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConceptRule());
						}
						setWithLastConsumed($current, "value", true, "value");
					}
				)
			)
			otherlv_35='of'
			{
				newLeafNode(otherlv_35, grammarAccess.getConceptAccess().getOfKeyword_8_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_8_2_0());
					}
					lv_concept_36_0=ruleSimpleConceptDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConceptRule());
						}
						set(
							$current,
							"concept",
							lv_concept_36_0,
							"org.integratedmodelling.kdl.Kdl.SimpleConceptDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				((
					'over'
					(
						(
							ruleSimpleConceptDeclaration
						)
					)
				)
				)=>
				(
					otherlv_37='over'
					{
						newLeafNode(otherlv_37, grammarAccess.getConceptAccess().getOverKeyword_8_3_0_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getConceptAccess().getOtherSimpleConceptDeclarationParserRuleCall_8_3_0_1_0());
							}
							lv_other_38_0=ruleSimpleConceptDeclaration
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getConceptRule());
								}
								set(
									$current,
									"other",
									lv_other_38_0,
									"org.integratedmodelling.kdl.Kdl.SimpleConceptDeclaration");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
			)?
		)
		    |
		(
			(
				(
					lv_occurrence_39_0='occurrence'
					{
						newLeafNode(lv_occurrence_39_0, grammarAccess.getConceptAccess().getOccurrenceOccurrenceKeyword_9_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConceptRule());
						}
						setWithLastConsumed($current, "occurrence", true, "occurrence");
					}
				)
			)
			otherlv_40='of'
			{
				newLeafNode(otherlv_40, grammarAccess.getConceptAccess().getOfKeyword_9_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_9_2_0());
					}
					lv_concept_41_0=ruleSimpleConceptDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConceptRule());
						}
						set(
							$current,
							"concept",
							lv_concept_41_0,
							"org.integratedmodelling.kdl.Kdl.SimpleConceptDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			otherlv_42='('
			{
				newLeafNode(otherlv_42, grammarAccess.getConceptAccess().getLeftParenthesisKeyword_10_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConceptAccess().getDeclarationConceptDeclarationParserRuleCall_10_1_0());
					}
					lv_declaration_43_0=ruleConceptDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConceptRule());
						}
						set(
							$current,
							"declaration",
							lv_declaration_43_0,
							"org.integratedmodelling.kdl.Kdl.ConceptDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_44=')'
			{
				newLeafNode(otherlv_44, grammarAccess.getConceptAccess().getRightParenthesisKeyword_10_2());
			}
		)
	)
;

// Entry rule entryRuleObservableSemantics
entryRuleObservableSemantics returns [EObject current=null]@init {
	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
	grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_1()
	);
}:
	{ newCompositeNode(grammarAccess.getObservableSemanticsRule()); }
	iv_ruleObservableSemantics=ruleObservableSemantics
	{ $current=$iv_ruleObservableSemantics.current; }
	EOF;
finally {
	myUnorderedGroupState.restore();
}

// Rule ObservableSemantics
ruleObservableSemantics returns [EObject current=null]
@init {
	enterRule();
	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
	grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_1()
	);
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getObservableSemanticsAccess().getDeclarationConceptDeclarationParserRuleCall_0_0());
				}
				lv_declaration_0_0=ruleConceptDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
					}
					set(
						$current,
						"declaration",
						lv_declaration_0_0,
						"org.integratedmodelling.kdl.Kdl.ConceptDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_1());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_1(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_1(), 0);
					}
								({true}?=>(otherlv_2='by'
								{
									newLeafNode(otherlv_2, grammarAccess.getObservableSemanticsAccess().getByKeyword_1_0_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getByConceptParserRuleCall_1_0_1_0());
										}
										lv_by_3_0=ruleConcept
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
											}
											set(
												$current,
												"by",
												lv_by_3_0,
												"org.integratedmodelling.kdl.Kdl.Concept");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_1());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_1(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_1(), 1);
					}
								({true}?=>(otherlv_4='down'
								{
									newLeafNode(otherlv_4, grammarAccess.getObservableSemanticsAccess().getDownKeyword_1_1_0());
								}
								otherlv_5='to'
								{
									newLeafNode(otherlv_5, grammarAccess.getObservableSemanticsAccess().getToKeyword_1_1_1());
								}
								(
									(
										(
											lv_downTo_6_1=RULE_CAMELCASE_ID
											{
												newLeafNode(lv_downTo_6_1, grammarAccess.getObservableSemanticsAccess().getDownToCAMELCASE_IDTerminalRuleCall_1_1_2_0_0());
											}
											{
												if ($current==null) {
													$current = createModelElement(grammarAccess.getObservableSemanticsRule());
												}
												setWithLastConsumed(
													$current,
													"downTo",
													lv_downTo_6_1,
													"org.integratedmodelling.kdl.Kdl.CAMELCASE_ID");
											}
											    |
											{
												newCompositeNode(grammarAccess.getObservableSemanticsAccess().getDownToNamespaceIdParserRuleCall_1_1_2_0_1());
											}
											lv_downTo_6_2=ruleNamespaceId
											{
												if ($current==null) {
													$current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
												}
												set(
													$current,
													"downTo",
													lv_downTo_6_2,
													"org.integratedmodelling.kdl.Kdl.NamespaceId");
												afterParserOrEnumRuleCall();
											}
										)
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_1());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_1(), 2)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_1(), 2);
					}
								({true}?=>(otherlv_7='as'
								{
									newLeafNode(otherlv_7, grammarAccess.getObservableSemanticsAccess().getAsKeyword_1_2_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getRoleConceptParserRuleCall_1_2_1_0());
										}
										lv_role_8_0=ruleConcept
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
											}
											set(
												$current,
												"role",
												lv_role_8_0,
												"org.integratedmodelling.kdl.Kdl.Concept");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_1());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_1(), 3)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_1(), 3);
					}
								({true}?=>((
									otherlv_9='in'
									{
										newLeafNode(otherlv_9, grammarAccess.getObservableSemanticsAccess().getInKeyword_1_3_0_0());
									}
									(
										(
											(
												{
													newCompositeNode(grammarAccess.getObservableSemanticsAccess().getUnitUnitParserRuleCall_1_3_0_1_0_0());
												}
												lv_unit_10_0=ruleUnit
												{
													if ($current==null) {
														$current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
													}
													set(
														$current,
														"unit",
														lv_unit_10_0,
														"org.integratedmodelling.kdl.Kdl.Unit");
													afterParserOrEnumRuleCall();
												}
											)
										)
										    |
										(
											(
												{
													newCompositeNode(grammarAccess.getObservableSemanticsAccess().getCurrencyCurrencyParserRuleCall_1_3_0_1_1_0());
												}
												lv_currency_11_0=ruleCurrency
												{
													if ($current==null) {
														$current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
													}
													set(
														$current,
														"currency",
														lv_currency_11_0,
														"org.integratedmodelling.kdl.Kdl.Currency");
													afterParserOrEnumRuleCall();
												}
											)
										)
									)
								)
								    |
								(
									otherlv_12='per'
									{
										newLeafNode(otherlv_12, grammarAccess.getObservableSemanticsAccess().getPerKeyword_1_3_1_0());
									}
									(
										(
											{
												newCompositeNode(grammarAccess.getObservableSemanticsAccess().getUnitUnitParserRuleCall_1_3_1_1_0());
											}
											lv_unit_13_0=ruleUnit
											{
												if ($current==null) {
													$current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
												}
												set(
													$current,
													"unit",
													lv_unit_13_0,
													"org.integratedmodelling.kdl.Kdl.Unit");
												afterParserOrEnumRuleCall();
											}
										)
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_1());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_1(), 4)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_1(), 4);
					}
								({true}?=>((
									(
										{
											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getFromNumberParserRuleCall_1_4_0_0());
										}
										lv_from_14_0=ruleNumber
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
											}
											set(
												$current,
												"from",
												lv_from_14_0,
												"org.integratedmodelling.kdl.Kdl.Number");
											afterParserOrEnumRuleCall();
										}
									)
								)
								otherlv_15='to'
								{
									newLeafNode(otherlv_15, grammarAccess.getObservableSemanticsAccess().getToKeyword_1_4_1());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getToNumberParserRuleCall_1_4_2_0());
										}
										lv_to_16_0=ruleNumber
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
											}
											set(
												$current,
												"to",
												lv_to_16_0,
												"org.integratedmodelling.kdl.Kdl.Number");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_1());
					}
				)
			)
					)*
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_1());
				}
		)
	)
;
finally {
	myUnorderedGroupState.restore();
}

// Entry rule entryRuleSimpleConceptDeclaration
entryRuleSimpleConceptDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimpleConceptDeclarationRule()); }
	iv_ruleSimpleConceptDeclaration=ruleSimpleConceptDeclaration
	{ $current=$iv_ruleSimpleConceptDeclaration.current; }
	EOF;

// Rule SimpleConceptDeclaration
ruleSimpleConceptDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_STRING
				{
					newLeafNode(lv_name_0_0, grammarAccess.getSimpleConceptDeclarationAccess().getNameSTRINGTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSimpleConceptDeclarationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getSimpleConceptDeclarationAccess().getMainConceptParserRuleCall_1_0());
				}
				lv_main_1_0=ruleConcept
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimpleConceptDeclarationRule());
					}
					add(
						$current,
						"main",
						lv_main_1_0,
						"org.integratedmodelling.kdl.Kdl.Concept");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleParameter
entryRuleParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterRule()); }
	iv_ruleParameter=ruleParameter
	{ $current=$iv_ruleParameter.current; }
	EOF;

// Rule Parameter
ruleParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_LOWERCASE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getParameterAccess().getNameLOWERCASE_IDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParameterRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.integratedmodelling.kdl.Kdl.LOWERCASE_ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getParameterAccess().getValueValueParserRuleCall_1_0());
				}
				lv_value_1_0=ruleValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParameterRule());
					}
					set(
						$current,
						"value",
						lv_value_1_0,
						"org.integratedmodelling.kdl.Kdl.Value");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_docstring_2_0=RULE_STRING
				{
					newLeafNode(lv_docstring_2_0, grammarAccess.getParameterAccess().getDocstringSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParameterRule());
					}
					setWithLastConsumed(
						$current,
						"docstring",
						lv_docstring_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)?
	)
;

// Entry rule entryRuleACTOR
entryRuleACTOR returns [String current=null]:
	{ newCompositeNode(grammarAccess.getACTORRule()); }
	iv_ruleACTOR=ruleACTOR
	{ $current=$iv_ruleACTOR.current.getText(); }
	EOF;

// Rule ACTOR
ruleACTOR returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='object'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getACTORAccess().getObjectKeyword_0());
		}
		    |
		kw='process'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getACTORAccess().getProcessKeyword_1());
		}
		    |
		kw='value'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getACTORAccess().getValueKeyword_2());
		}
		    |
		kw='number'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getACTORAccess().getNumberKeyword_3());
		}
		    |
		kw='concept'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getACTORAccess().getConceptKeyword_4());
		}
		    |
		kw='boolean'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getACTORAccess().getBooleanKeyword_5());
		}
		    |
		kw='text'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getACTORAccess().getTextKeyword_6());
		}
		    |
		kw='extent'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getACTORAccess().getExtentKeyword_7());
		}
		    |
		kw='spatialextent'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getACTORAccess().getSpatialextentKeyword_8());
		}
		    |
		kw='temporalextent'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getACTORAccess().getTemporalextentKeyword_9());
		}
		    |
		kw='annotation'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getACTORAccess().getAnnotationKeyword_10());
		}
		    |
		kw='contextualizer'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getACTORAccess().getContextualizerKeyword_11());
		}
		    |
		kw='void'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getACTORAccess().getVoidKeyword_12());
		}
		    |
		kw='partition'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getACTORAccess().getPartitionKeyword_13());
		}
	)
;

// Entry rule entryRuleTARGET
entryRuleTARGET returns [String current=null]:
	{ newCompositeNode(grammarAccess.getTARGETRule()); }
	iv_ruleTARGET=ruleTARGET
	{ $current=$iv_ruleTARGET.current.getText(); }
	EOF;

// Rule TARGET
ruleTARGET returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='models'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTARGETAccess().getModelsKeyword_0());
		}
		    |
		kw='concepts'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTARGETAccess().getConceptsKeyword_1());
		}
		    |
		kw='observers'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTARGETAccess().getObserversKeyword_2());
		}
	)
;

// Entry rule entryRuleClassification
entryRuleClassification returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClassificationRule()); }
	iv_ruleClassification=ruleClassification
	{ $current=$iv_ruleClassification.current; }
	EOF;

// Rule Classification
ruleClassification returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getClassificationAccess().getClassifiersClassifierParserRuleCall_0_0());
				}
				lv_classifiers_0_0=ruleClassifier
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClassificationRule());
					}
					add(
						$current,
						"classifiers",
						lv_classifiers_0_0,
						"org.integratedmodelling.kdl.Kdl.Classifier");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(',')=>
				otherlv_1=','
				{
					newLeafNode(otherlv_1, grammarAccess.getClassificationAccess().getCommaKeyword_1_0());
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getClassificationAccess().getClassifiersClassifierParserRuleCall_1_1_0());
					}
					lv_classifiers_2_0=ruleClassifier
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getClassificationRule());
						}
						add(
							$current,
							"classifiers",
							lv_classifiers_2_0,
							"org.integratedmodelling.kdl.Kdl.Classifier");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleClassifier
entryRuleClassifier returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClassifierRule()); }
	iv_ruleClassifier=ruleClassifier
	{ $current=$iv_ruleClassifier.current; }
	EOF;

// Rule Classifier
ruleClassifier returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getClassifierAccess().getDeclarationConceptDeclarationParserRuleCall_0_0());
				}
				lv_declaration_0_0=ruleConceptDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClassifierRule());
					}
					set(
						$current,
						"declaration",
						lv_declaration_0_0,
						"org.integratedmodelling.kdl.Kdl.ConceptDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					lv_otherwise_1_0='otherwise'
					{
						newLeafNode(lv_otherwise_1_0, grammarAccess.getClassifierAccess().getOtherwiseOtherwiseKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getClassifierRule());
						}
						setWithLastConsumed($current, "otherwise", true, "otherwise");
					}
				)
			)
			    |
			(
				(
					otherlv_2='if'
					{
						newLeafNode(otherlv_2, grammarAccess.getClassifierAccess().getIfKeyword_1_1_0_0());
					}
					    |
					(
						(
							lv_negated_3_0='unless'
							{
								newLeafNode(lv_negated_3_0, grammarAccess.getClassifierAccess().getNegatedUnlessKeyword_1_1_0_1_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getClassifierRule());
								}
								setWithLastConsumed($current, "negated", true, "unless");
							}
						)
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getClassifierAccess().getClassifierClassifierRHSParserRuleCall_1_1_1_0());
						}
						lv_classifier_4_0=ruleClassifierRHS
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getClassifierRule());
							}
							set(
								$current,
								"classifier",
								lv_classifier_4_0,
								"org.integratedmodelling.kdl.Kdl.ClassifierRHS");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)?
	)
;

// Entry rule entryRuleClassifierRHS
entryRuleClassifierRHS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClassifierRHSRule()); }
	iv_ruleClassifierRHS=ruleClassifierRHS
	{ $current=$iv_ruleClassifierRHS.current; }
	EOF;

// Rule ClassifierRHS
ruleClassifierRHS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_boolean_0_0='true'
					{
						newLeafNode(lv_boolean_0_0, grammarAccess.getClassifierRHSAccess().getBooleanTrueKeyword_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getClassifierRHSRule());
						}
						setWithLastConsumed($current, "boolean", lv_boolean_0_0, "true");
					}
				)
			)
			    |
			(
				(
					lv_boolean_1_0='false'
					{
						newLeafNode(lv_boolean_1_0, grammarAccess.getClassifierRHSAccess().getBooleanFalseKeyword_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getClassifierRHSRule());
						}
						setWithLastConsumed($current, "boolean", lv_boolean_1_0, "false");
					}
				)
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getClassifierRHSAccess().getInt0NumberParserRuleCall_1_0_0());
					}
					lv_int0_2_0=ruleNumber
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
						}
						set(
							$current,
							"int0",
							lv_int0_2_0,
							"org.integratedmodelling.kdl.Kdl.Number");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					(
						lv_leftLimit_3_0='inclusive'
						{
							newLeafNode(lv_leftLimit_3_0, grammarAccess.getClassifierRHSAccess().getLeftLimitInclusiveKeyword_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getClassifierRHSRule());
							}
							setWithLastConsumed($current, "leftLimit", lv_leftLimit_3_0, "inclusive");
						}
					)
				)
				    |
				otherlv_4='exclusive'
				{
					newLeafNode(otherlv_4, grammarAccess.getClassifierRHSAccess().getExclusiveKeyword_1_1_1());
				}
			)?
			(
				('to')=>
				otherlv_5='to'
				{
					newLeafNode(otherlv_5, grammarAccess.getClassifierRHSAccess().getToKeyword_1_2());
				}
			)
			(
				((
					ruleNumber
				)
				)=>
				(
					{
						newCompositeNode(grammarAccess.getClassifierRHSAccess().getInt1NumberParserRuleCall_1_3_0());
					}
					lv_int1_6_0=ruleNumber
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
						}
						set(
							$current,
							"int1",
							lv_int1_6_0,
							"org.integratedmodelling.kdl.Kdl.Number");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					(
						lv_rightLimit_7_0='inclusive'
						{
							newLeafNode(lv_rightLimit_7_0, grammarAccess.getClassifierRHSAccess().getRightLimitInclusiveKeyword_1_4_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getClassifierRHSRule());
							}
							setWithLastConsumed($current, "rightLimit", lv_rightLimit_7_0, "inclusive");
						}
					)
				)
				    |
				otherlv_8='exclusive'
				{
					newLeafNode(otherlv_8, grammarAccess.getClassifierRHSAccess().getExclusiveKeyword_1_4_1());
				}
			)?
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getClassifierRHSAccess().getNumNumberParserRuleCall_2_0());
				}
				lv_num_9_0=ruleNumber
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
					}
					set(
						$current,
						"num",
						lv_num_9_0,
						"org.integratedmodelling.kdl.Kdl.Number");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			otherlv_10='in'
			{
				newLeafNode(otherlv_10, grammarAccess.getClassifierRHSAccess().getInKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getClassifierRHSAccess().getSetListParserRuleCall_3_1_0());
					}
					lv_set_11_0=ruleList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
						}
						set(
							$current,
							"set",
							lv_set_11_0,
							"org.integratedmodelling.kdl.Kdl.List");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				lv_string_12_0=RULE_STRING
				{
					newLeafNode(lv_string_12_0, grammarAccess.getClassifierRHSAccess().getStringSTRINGTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getClassifierRHSRule());
					}
					setWithLastConsumed(
						$current,
						"string",
						lv_string_12_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getClassifierRHSAccess().getConceptConceptDeclarationParserRuleCall_5_0());
				}
				lv_concept_13_0=ruleConceptDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
					}
					set(
						$current,
						"concept",
						lv_concept_13_0,
						"org.integratedmodelling.kdl.Kdl.ConceptDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			otherlv_14='('
			{
				newLeafNode(otherlv_14, grammarAccess.getClassifierRHSAccess().getLeftParenthesisKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getClassifierRHSAccess().getToResolveConceptDeclarationParserRuleCall_6_1_0());
					}
					lv_toResolve_15_0=ruleConceptDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
						}
						add(
							$current,
							"toResolve",
							lv_toResolve_15_0,
							"org.integratedmodelling.kdl.Kdl.ConceptDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					(',')=>
					otherlv_16=','
					{
						newLeafNode(otherlv_16, grammarAccess.getClassifierRHSAccess().getCommaKeyword_6_2_0());
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getClassifierRHSAccess().getToResolveConceptDeclarationParserRuleCall_6_2_1_0());
						}
						lv_toResolve_17_0=ruleConceptDeclaration
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
							}
							add(
								$current,
								"toResolve",
								lv_toResolve_17_0,
								"org.integratedmodelling.kdl.Kdl.ConceptDeclaration");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_18=')'
			{
				newLeafNode(otherlv_18, grammarAccess.getClassifierRHSAccess().getRightParenthesisKeyword_6_3());
			}
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getClassifierRHSAccess().getOpREL_OPERATORParserRuleCall_7_0_0());
					}
					lv_op_19_0=ruleREL_OPERATOR
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
						}
						set(
							$current,
							"op",
							lv_op_19_0,
							"org.integratedmodelling.kdl.Kdl.REL_OPERATOR");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getClassifierRHSAccess().getExpressionNumberParserRuleCall_7_1_0());
					}
					lv_expression_20_0=ruleNumber
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
						}
						set(
							$current,
							"expression",
							lv_expression_20_0,
							"org.integratedmodelling.kdl.Kdl.Number");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				lv_nodata_21_0='unknown'
				{
					newLeafNode(lv_nodata_21_0, grammarAccess.getClassifierRHSAccess().getNodataUnknownKeyword_8_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getClassifierRHSRule());
					}
					setWithLastConsumed($current, "nodata", lv_nodata_21_0, "unknown");
				}
			)
		)
		    |
		(
			(
				lv_star_22_0='*'
				{
					newLeafNode(lv_star_22_0, grammarAccess.getClassifierRHSAccess().getStarAsteriskKeyword_9_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getClassifierRHSRule());
					}
					setWithLastConsumed($current, "star", true, "*");
				}
			)
		)
	)
;

// Entry rule entryRuleList
entryRuleList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getListRule()); }
	iv_ruleList=ruleList
	{ $current=$iv_ruleList.current; }
	EOF;

// Rule List
ruleList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getListAccess().getListAction_0(),
					$current);
			}
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getListAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getListAccess().getContentsValueParserRuleCall_2_0());
				}
				lv_contents_2_0=ruleValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getListRule());
					}
					add(
						$current,
						"contents",
						lv_contents_2_0,
						"org.integratedmodelling.kdl.Kdl.Value");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getListAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleLiteral
entryRuleLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLiteralRule()); }
	iv_ruleLiteral=ruleLiteral
	{ $current=$iv_ruleLiteral.current; }
	EOF;

// Rule Literal
ruleLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getLiteralAccess().getNumberNumberParserRuleCall_0_0());
				}
				lv_number_0_0=ruleNumber
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLiteralRule());
					}
					set(
						$current,
						"number",
						lv_number_0_0,
						"org.integratedmodelling.kdl.Kdl.Number");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getLiteralAccess().getFromNumberParserRuleCall_1_0_0());
					}
					lv_from_1_0=ruleNumber
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLiteralRule());
						}
						set(
							$current,
							"from",
							lv_from_1_0,
							"org.integratedmodelling.kdl.Kdl.Number");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_2='to'
			{
				newLeafNode(otherlv_2, grammarAccess.getLiteralAccess().getToKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLiteralAccess().getToNumberParserRuleCall_1_2_0());
					}
					lv_to_3_0=ruleNumber
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLiteralRule());
						}
						set(
							$current,
							"to",
							lv_to_3_0,
							"org.integratedmodelling.kdl.Kdl.Number");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				lv_string_4_0=RULE_STRING
				{
					newLeafNode(lv_string_4_0, grammarAccess.getLiteralAccess().getStringSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLiteralRule());
					}
					setWithLastConsumed(
						$current,
						"string",
						lv_string_4_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		    |
		(
			(
				(
					lv_boolean_5_1='true'
					{
						newLeafNode(lv_boolean_5_1, grammarAccess.getLiteralAccess().getBooleanTrueKeyword_3_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLiteralRule());
						}
						setWithLastConsumed($current, "boolean", lv_boolean_5_1, null);
					}
					    |
					lv_boolean_5_2='false'
					{
						newLeafNode(lv_boolean_5_2, grammarAccess.getLiteralAccess().getBooleanFalseKeyword_3_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLiteralRule());
						}
						setWithLastConsumed($current, "boolean", lv_boolean_5_2, null);
					}
				)
			)
		)
	)
;

// Entry rule entryRuleLiteralOrIdOrComma
entryRuleLiteralOrIdOrComma returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLiteralOrIdOrCommaRule()); }
	iv_ruleLiteralOrIdOrComma=ruleLiteralOrIdOrComma
	{ $current=$iv_ruleLiteralOrIdOrComma.current; }
	EOF;

// Rule LiteralOrIdOrComma
ruleLiteralOrIdOrComma returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getLiteralOrIdOrCommaAccess().getFromNumberParserRuleCall_0_0_0());
					}
					lv_from_0_0=ruleNumber
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLiteralOrIdOrCommaRule());
						}
						set(
							$current,
							"from",
							lv_from_0_0,
							"org.integratedmodelling.kdl.Kdl.Number");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				('to')=>
				otherlv_1='to'
				{
					newLeafNode(otherlv_1, grammarAccess.getLiteralOrIdOrCommaAccess().getToKeyword_0_1());
				}
			)
			(
				((
					ruleNumber
				)
				)=>
				(
					{
						newCompositeNode(grammarAccess.getLiteralOrIdOrCommaAccess().getToNumberParserRuleCall_0_2_0());
					}
					lv_to_2_0=ruleNumber
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLiteralOrIdOrCommaRule());
						}
						set(
							$current,
							"to",
							lv_to_2_0,
							"org.integratedmodelling.kdl.Kdl.Number");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getLiteralOrIdOrCommaAccess().getNumberNumberParserRuleCall_1_0());
				}
				lv_number_3_0=ruleNumber
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLiteralOrIdOrCommaRule());
					}
					set(
						$current,
						"number",
						lv_number_3_0,
						"org.integratedmodelling.kdl.Kdl.Number");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				lv_string_4_0=RULE_STRING
				{
					newLeafNode(lv_string_4_0, grammarAccess.getLiteralOrIdOrCommaAccess().getStringSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLiteralOrIdOrCommaRule());
					}
					setWithLastConsumed(
						$current,
						"string",
						lv_string_4_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		    |
		(
			(
				(
					lv_boolean_5_1='true'
					{
						newLeafNode(lv_boolean_5_1, grammarAccess.getLiteralOrIdOrCommaAccess().getBooleanTrueKeyword_3_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLiteralOrIdOrCommaRule());
						}
						setWithLastConsumed($current, "boolean", lv_boolean_5_1, null);
					}
					    |
					lv_boolean_5_2='false'
					{
						newLeafNode(lv_boolean_5_2, grammarAccess.getLiteralOrIdOrCommaAccess().getBooleanFalseKeyword_3_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLiteralOrIdOrCommaRule());
						}
						setWithLastConsumed($current, "boolean", lv_boolean_5_2, null);
					}
				)
			)
		)
		    |
		(
			(
				lv_id_6_0=RULE_ID
				{
					newLeafNode(lv_id_6_0, grammarAccess.getLiteralOrIdOrCommaAccess().getIdIDTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLiteralOrIdOrCommaRule());
					}
					setWithLastConsumed(
						$current,
						"id",
						lv_id_6_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		    |
		(
			(
				lv_comma_7_0=','
				{
					newLeafNode(lv_comma_7_0, grammarAccess.getLiteralOrIdOrCommaAccess().getCommaCommaKeyword_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLiteralOrIdOrCommaRule());
					}
					setWithLastConsumed($current, "comma", true, ",");
				}
			)
		)
	)
;

// Entry rule entryRuleLiteralOrID
entryRuleLiteralOrID returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLiteralOrIDRule()); }
	iv_ruleLiteralOrID=ruleLiteralOrID
	{ $current=$iv_ruleLiteralOrID.current; }
	EOF;

// Rule LiteralOrID
ruleLiteralOrID returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getLiteralOrIDAccess().getNumberNumberParserRuleCall_0_0());
				}
				lv_number_0_0=ruleNumber
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLiteralOrIDRule());
					}
					set(
						$current,
						"number",
						lv_number_0_0,
						"org.integratedmodelling.kdl.Kdl.Number");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				lv_string_1_0=RULE_STRING
				{
					newLeafNode(lv_string_1_0, grammarAccess.getLiteralOrIDAccess().getStringSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLiteralOrIDRule());
					}
					setWithLastConsumed(
						$current,
						"string",
						lv_string_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		    |
		(
			(
				(
					lv_boolean_2_1='true'
					{
						newLeafNode(lv_boolean_2_1, grammarAccess.getLiteralOrIDAccess().getBooleanTrueKeyword_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLiteralOrIDRule());
						}
						setWithLastConsumed($current, "boolean", lv_boolean_2_1, null);
					}
					    |
					lv_boolean_2_2='false'
					{
						newLeafNode(lv_boolean_2_2, grammarAccess.getLiteralOrIDAccess().getBooleanFalseKeyword_2_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLiteralOrIDRule());
						}
						setWithLastConsumed($current, "boolean", lv_boolean_2_2, null);
					}
				)
			)
		)
		    |
		(
			(
				lv_id_3_0=RULE_ID
				{
					newLeafNode(lv_id_3_0, grammarAccess.getLiteralOrIDAccess().getIdIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLiteralOrIDRule());
					}
					setWithLastConsumed(
						$current,
						"id",
						lv_id_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleMetadata
entryRuleMetadata returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMetadataRule()); }
	iv_ruleMetadata=ruleMetadata
	{ $current=$iv_ruleMetadata.current; }
	EOF;

// Rule Metadata
ruleMetadata returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getMetadataAccess().getMetadataAction_0(),
					$current);
			}
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getMetadataAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				(
					(
						lv_ids_2_1=RULE_LOWERCASE_ID
						{
							newLeafNode(lv_ids_2_1, grammarAccess.getMetadataAccess().getIdsLOWERCASE_IDTerminalRuleCall_2_0_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getMetadataRule());
							}
							addWithLastConsumed(
								$current,
								"ids",
								lv_ids_2_1,
								"org.integratedmodelling.kdl.Kdl.LOWERCASE_ID");
						}
						    |
						{
							newCompositeNode(grammarAccess.getMetadataAccess().getIdsPropertyIdParserRuleCall_2_0_0_1());
						}
						lv_ids_2_2=rulePropertyId
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMetadataRule());
							}
							add(
								$current,
								"ids",
								lv_ids_2_2,
								"org.integratedmodelling.kdl.Kdl.PropertyId");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getMetadataAccess().getValuesLiteralOrIDParserRuleCall_2_1_0_0());
						}
						lv_values_3_1=ruleLiteralOrID
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMetadataRule());
							}
							add(
								$current,
								"values",
								lv_values_3_1,
								"org.integratedmodelling.kdl.Kdl.LiteralOrID");
							afterParserOrEnumRuleCall();
						}
						    |
						{
							newCompositeNode(grammarAccess.getMetadataAccess().getValuesMetadataParserRuleCall_2_1_0_1());
						}
						lv_values_3_2=ruleMetadata
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMetadataRule());
							}
							add(
								$current,
								"values",
								lv_values_3_2,
								"org.integratedmodelling.kdl.Kdl.Metadata");
							afterParserOrEnumRuleCall();
						}
						    |
						{
							newCompositeNode(grammarAccess.getMetadataAccess().getValuesListParserRuleCall_2_1_0_2());
						}
						lv_values_3_3=ruleList
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMetadataRule());
							}
							add(
								$current,
								"values",
								lv_values_3_3,
								"org.integratedmodelling.kdl.Kdl.List");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getMetadataAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleParameterList
entryRuleParameterList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterListRule()); }
	iv_ruleParameterList=ruleParameterList
	{ $current=$iv_ruleParameterList.current; }
	EOF;

// Rule ParameterList
ruleParameterList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getParameterListAccess().getValuesValueParserRuleCall_0_0_0());
					}
					lv_values_0_0=ruleValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getParameterListRule());
						}
						add(
							$current,
							"values",
							lv_values_0_0,
							"org.integratedmodelling.kdl.Kdl.Value");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_1=','
				{
					newLeafNode(otherlv_1, grammarAccess.getParameterListAccess().getCommaKeyword_0_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getParameterListAccess().getValuesValueParserRuleCall_0_1_1_0());
						}
						lv_values_2_0=ruleValue
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getParameterListRule());
							}
							add(
								$current,
								"values",
								lv_values_2_0,
								"org.integratedmodelling.kdl.Kdl.Value");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getParameterListAccess().getPairsKeyValuePairParserRuleCall_1_0_0());
					}
					lv_pairs_3_0=ruleKeyValuePair
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getParameterListRule());
						}
						add(
							$current,
							"pairs",
							lv_pairs_3_0,
							"org.integratedmodelling.kdl.Kdl.KeyValuePair");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					(',')=>
					otherlv_4=','
					{
						newLeafNode(otherlv_4, grammarAccess.getParameterListAccess().getCommaKeyword_1_1_0());
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getParameterListAccess().getPairsKeyValuePairParserRuleCall_1_1_1_0());
						}
						lv_pairs_5_0=ruleKeyValuePair
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getParameterListRule());
							}
							add(
								$current,
								"pairs",
								lv_pairs_5_0,
								"org.integratedmodelling.kdl.Kdl.KeyValuePair");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)
	)
;

// Entry rule entryRuleValue
entryRuleValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getValueRule()); }
	iv_ruleValue=ruleValue
	{ $current=$iv_ruleValue.current; }
	EOF;

// Rule Value
ruleValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getValueAccess().getLiteralLiteralOrIdOrCommaParserRuleCall_0_0());
				}
				lv_literal_0_0=ruleLiteralOrIdOrComma
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getValueRule());
					}
					set(
						$current,
						"literal",
						lv_literal_0_0,
						"org.integratedmodelling.kdl.Kdl.LiteralOrIdOrComma");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getValueAccess().getFunctionFunctionParserRuleCall_1_0());
				}
				lv_function_1_0=ruleFunction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getValueRule());
					}
					set(
						$current,
						"function",
						lv_function_1_0,
						"org.integratedmodelling.kdl.Kdl.Function");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getValueAccess().getUrnUrnParserRuleCall_2_0_0());
					}
					lv_urn_2_0=ruleUrn
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getValueRule());
						}
						set(
							$current,
							"urn",
							lv_urn_2_0,
							"org.integratedmodelling.kdl.Kdl.Urn");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getValueAccess().getUnitUnitParserRuleCall_2_1_0());
					}
					lv_unit_3_0=ruleUnit
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getValueRule());
						}
						set(
							$current,
							"unit",
							lv_unit_3_0,
							"org.integratedmodelling.kdl.Kdl.Unit");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getValueAccess().getCurrencyCurrencyParserRuleCall_3_0());
				}
				lv_currency_4_0=ruleCurrency
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getValueRule());
					}
					set(
						$current,
						"currency",
						lv_currency_4_0,
						"org.integratedmodelling.kdl.Kdl.Currency");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getValueAccess().getListListParserRuleCall_4_0());
				}
				lv_list_5_0=ruleList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getValueRule());
					}
					set(
						$current,
						"list",
						lv_list_5_0,
						"org.integratedmodelling.kdl.Kdl.List");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				lv_enumId_6_0=RULE_UPPERCASE_ID
				{
					newLeafNode(lv_enumId_6_0, grammarAccess.getValueAccess().getEnumIdUPPERCASE_IDTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getValueRule());
					}
					setWithLastConsumed(
						$current,
						"enumId",
						lv_enumId_6_0,
						"org.integratedmodelling.kdl.Kdl.UPPERCASE_ID");
				}
			)
		)
	)
;

// Entry rule entryRuleUrn
entryRuleUrn returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUrnRule()); }
	iv_ruleUrn=ruleUrn
	{ $current=$iv_ruleUrn.current; }
	EOF;

// Rule Urn
ruleUrn returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getUrnAccess().getNameUrnIdParserRuleCall_0_0());
				}
				lv_name_0_1=ruleUrnId
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUrnRule());
					}
					set(
						$current,
						"name",
						lv_name_0_1,
						"org.integratedmodelling.kdl.Kdl.UrnId");
					afterParserOrEnumRuleCall();
				}
				    |
				lv_name_0_2=RULE_STRING
				{
					newLeafNode(lv_name_0_2, grammarAccess.getUrnAccess().getNameSTRINGTerminalRuleCall_0_1());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUrnRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_2,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
				    |
				{
					newCompositeNode(grammarAccess.getUrnAccess().getNameLocalFilePathParserRuleCall_0_2());
				}
				lv_name_0_3=ruleLocalFilePath
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUrnRule());
					}
					set(
						$current,
						"name",
						lv_name_0_3,
						"org.integratedmodelling.kdl.Kdl.LocalFilePath");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleUrnId
entryRuleUrnId returns [String current=null]:
	{ newCompositeNode(grammarAccess.getUrnIdRule()); }
	iv_ruleUrnId=ruleUrnId
	{ $current=$iv_ruleUrnId.current.getText(); }
	EOF;

// Rule UrnId
ruleUrnId returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='urn:klab:'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getUrnIdAccess().getUrnKlabKeyword_0());
			}
		)?
		{
			newCompositeNode(grammarAccess.getUrnIdAccess().getPathNameParserRuleCall_1());
		}
		this_PathName_1=rulePathName
		{
			$current.merge(this_PathName_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
		kw=':'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getUrnIdAccess().getColonKeyword_2());
		}
		{
			newCompositeNode(grammarAccess.getUrnIdAccess().getPathNameParserRuleCall_3());
		}
		this_PathName_3=rulePathName
		{
			$current.merge(this_PathName_3);
		}
		{
			afterParserOrEnumRuleCall();
		}
		kw=':'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getUrnIdAccess().getColonKeyword_4());
		}
		{
			newCompositeNode(grammarAccess.getUrnIdAccess().getPathNameParserRuleCall_5());
		}
		this_PathName_5=rulePathName
		{
			$current.merge(this_PathName_5);
		}
		{
			afterParserOrEnumRuleCall();
		}
		kw=':'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getUrnIdAccess().getColonKeyword_6());
		}
		{
			newCompositeNode(grammarAccess.getUrnIdAccess().getPathParserRuleCall_7());
		}
		this_Path_7=rulePath
		{
			$current.merge(this_Path_7);
		}
		{
			afterParserOrEnumRuleCall();
		}
		(
			kw=':'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getUrnIdAccess().getColonKeyword_8_0());
			}
			{
				newCompositeNode(grammarAccess.getUrnIdAccess().getVersionNumberParserRuleCall_8_1());
			}
			this_VersionNumber_9=ruleVersionNumber
			{
				$current.merge(this_VersionNumber_9);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)?
		(
			kw='#'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getUrnIdAccess().getNumberSignKeyword_9_0());
			}
			this_LOWERCASE_ID_11=RULE_LOWERCASE_ID
			{
				$current.merge(this_LOWERCASE_ID_11);
			}
			{
				newLeafNode(this_LOWERCASE_ID_11, grammarAccess.getUrnIdAccess().getLOWERCASE_IDTerminalRuleCall_9_1());
			}
		)?
	)
;

// Entry rule entryRuleLocalFilePath
entryRuleLocalFilePath returns [String current=null]:
	{ newCompositeNode(grammarAccess.getLocalFilePathRule()); }
	iv_ruleLocalFilePath=ruleLocalFilePath
	{ $current=$iv_ruleLocalFilePath.current.getText(); }
	EOF;

// Rule LocalFilePath
ruleLocalFilePath returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			this_CAMELCASE_ID_0=RULE_CAMELCASE_ID
			{
				$current.merge(this_CAMELCASE_ID_0);
			}
			{
				newLeafNode(this_CAMELCASE_ID_0, grammarAccess.getLocalFilePathAccess().getCAMELCASE_IDTerminalRuleCall_0_0());
			}
			    |
			this_LOWERCASE_ID_1=RULE_LOWERCASE_ID
			{
				$current.merge(this_LOWERCASE_ID_1);
			}
			{
				newLeafNode(this_LOWERCASE_ID_1, grammarAccess.getLocalFilePathAccess().getLOWERCASE_IDTerminalRuleCall_0_1());
			}
			    |
			this_LOWERCASE_DASHID_2=RULE_LOWERCASE_DASHID
			{
				$current.merge(this_LOWERCASE_DASHID_2);
			}
			{
				newLeafNode(this_LOWERCASE_DASHID_2, grammarAccess.getLocalFilePathAccess().getLOWERCASE_DASHIDTerminalRuleCall_0_2());
			}
		)
		(
			kw='/'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getLocalFilePathAccess().getSolidusKeyword_1_0());
			}
			(
				this_CAMELCASE_ID_4=RULE_CAMELCASE_ID
				{
					$current.merge(this_CAMELCASE_ID_4);
				}
				{
					newLeafNode(this_CAMELCASE_ID_4, grammarAccess.getLocalFilePathAccess().getCAMELCASE_IDTerminalRuleCall_1_1_0());
				}
				    |
				this_LOWERCASE_ID_5=RULE_LOWERCASE_ID
				{
					$current.merge(this_LOWERCASE_ID_5);
				}
				{
					newLeafNode(this_LOWERCASE_ID_5, grammarAccess.getLocalFilePathAccess().getLOWERCASE_IDTerminalRuleCall_1_1_1());
				}
				    |
				this_LOWERCASE_DASHID_6=RULE_LOWERCASE_DASHID
				{
					$current.merge(this_LOWERCASE_DASHID_6);
				}
				{
					newLeafNode(this_LOWERCASE_DASHID_6, grammarAccess.getLocalFilePathAccess().getLOWERCASE_DASHIDTerminalRuleCall_1_1_2());
				}
			)
		)*
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getLocalFilePathAccess().getFullStopKeyword_2_0());
			}
			this_LOWERCASE_ID_8=RULE_LOWERCASE_ID
			{
				$current.merge(this_LOWERCASE_ID_8);
			}
			{
				newLeafNode(this_LOWERCASE_ID_8, grammarAccess.getLocalFilePathAccess().getLOWERCASE_IDTerminalRuleCall_2_1());
			}
		)?
		(
			kw='#'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getLocalFilePathAccess().getNumberSignKeyword_3_0());
			}
			this_LOWERCASE_ID_10=RULE_LOWERCASE_ID
			{
				$current.merge(this_LOWERCASE_ID_10);
			}
			{
				newLeafNode(this_LOWERCASE_ID_10, grammarAccess.getLocalFilePathAccess().getLOWERCASE_IDTerminalRuleCall_3_1());
			}
		)?
	)
;

// Entry rule entryRuleKeyValuePair
entryRuleKeyValuePair returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getKeyValuePairRule()); }
	iv_ruleKeyValuePair=ruleKeyValuePair
	{ $current=$iv_ruleKeyValuePair.current; }
	EOF;

// Rule KeyValuePair
ruleKeyValuePair returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_LOWERCASE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getKeyValuePairAccess().getNameLOWERCASE_IDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getKeyValuePairRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.integratedmodelling.kdl.Kdl.LOWERCASE_ID");
				}
			)
		)
		(
			(
				(
					lv_interactive_1_0='=?'
					{
						newLeafNode(lv_interactive_1_0, grammarAccess.getKeyValuePairAccess().getInteractiveEqualsSignQuestionMarkKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getKeyValuePairRule());
						}
						setWithLastConsumed($current, "interactive", true, "=?");
					}
				)
			)
			    |
			otherlv_2='='
			{
				newLeafNode(otherlv_2, grammarAccess.getKeyValuePairAccess().getEqualsSignKeyword_1_1());
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getKeyValuePairAccess().getValueValueParserRuleCall_2_0());
				}
				lv_value_3_0=ruleValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getKeyValuePairRule());
					}
					set(
						$current,
						"value",
						lv_value_3_0,
						"org.integratedmodelling.kdl.Kdl.Value");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFunction
entryRuleFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionRule()); }
	iv_ruleFunction=ruleFunction
	{ $current=$iv_ruleFunction.current; }
	EOF;

// Rule Function
ruleFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					(
						lv_mediated_0_0=RULE_LOWERCASE_ID
						{
							newLeafNode(lv_mediated_0_0, grammarAccess.getFunctionAccess().getMediatedLOWERCASE_IDTerminalRuleCall_0_0_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getFunctionRule());
							}
							setWithLastConsumed(
								$current,
								"mediated",
								lv_mediated_0_0,
								"org.integratedmodelling.kdl.Kdl.LOWERCASE_ID");
						}
					)
				)
				otherlv_1='>>'
				{
					newLeafNode(otherlv_1, grammarAccess.getFunctionAccess().getGreaterThanSignGreaterThanSignKeyword_0_0_1());
				}
			)?
			(
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getFunctionAccess().getNamePathNameParserRuleCall_0_1_0_0_0());
							}
							lv_name_2_0=rulePathName
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getFunctionRule());
								}
								set(
									$current,
									"name",
									lv_name_2_0,
									"org.integratedmodelling.kdl.Kdl.PathName");
								afterParserOrEnumRuleCall();
							}
						)
					)
					otherlv_3='('
					{
						newLeafNode(otherlv_3, grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_0_1_0_1());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getFunctionAccess().getParametersParameterListParserRuleCall_0_1_0_2_0());
							}
							lv_parameters_4_0=ruleParameterList
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getFunctionRule());
								}
								set(
									$current,
									"parameters",
									lv_parameters_4_0,
									"org.integratedmodelling.kdl.Kdl.ParameterList");
								afterParserOrEnumRuleCall();
							}
						)
					)?
					otherlv_5=')'
					{
						newLeafNode(otherlv_5, grammarAccess.getFunctionAccess().getRightParenthesisKeyword_0_1_0_3());
					}
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getFunctionAccess().getUrnUrnParserRuleCall_0_1_1_0());
						}
						lv_urn_6_0=ruleUrn
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFunctionRule());
							}
							set(
								$current,
								"urn",
								lv_urn_6_0,
								"org.integratedmodelling.kdl.Kdl.Urn");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getFunctionAccess().getValueLiteralParserRuleCall_0_1_2_0());
						}
						lv_value_7_0=ruleLiteral
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFunctionRule());
							}
							set(
								$current,
								"value",
								lv_value_7_0,
								"org.integratedmodelling.kdl.Kdl.Literal");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			(
				otherlv_8='as'
				{
					newLeafNode(otherlv_8, grammarAccess.getFunctionAccess().getAsKeyword_0_2_0());
				}
				(
					(
						lv_variable_9_0=RULE_LOWERCASE_ID
						{
							newLeafNode(lv_variable_9_0, grammarAccess.getFunctionAccess().getVariableLOWERCASE_IDTerminalRuleCall_0_2_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getFunctionRule());
							}
							setWithLastConsumed(
								$current,
								"variable",
								lv_variable_9_0,
								"org.integratedmodelling.kdl.Kdl.LOWERCASE_ID");
						}
					)
				)
			)?
		)
		    |
		(
			otherlv_10='classify'
			{
				newLeafNode(otherlv_10, grammarAccess.getFunctionAccess().getClassifyKeyword_1_0());
			}
			otherlv_11='('
			{
				newLeafNode(otherlv_11, grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFunctionAccess().getClassificationClassificationParserRuleCall_1_2_0());
					}
					lv_classification_12_0=ruleClassification
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFunctionRule());
						}
						set(
							$current,
							"classification",
							lv_classification_12_0,
							"org.integratedmodelling.kdl.Kdl.Classification");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_13=')'
			{
				newLeafNode(otherlv_13, grammarAccess.getFunctionAccess().getRightParenthesisKeyword_1_3());
			}
			(
				otherlv_14='as'
				{
					newLeafNode(otherlv_14, grammarAccess.getFunctionAccess().getAsKeyword_1_4_0());
				}
				(
					(
						lv_variable_15_0=RULE_LOWERCASE_ID
						{
							newLeafNode(lv_variable_15_0, grammarAccess.getFunctionAccess().getVariableLOWERCASE_IDTerminalRuleCall_1_4_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getFunctionRule());
							}
							setWithLastConsumed(
								$current,
								"variable",
								lv_variable_15_0,
								"org.integratedmodelling.kdl.Kdl.LOWERCASE_ID");
						}
					)
				)
			)?
		)
		    |
		(
			otherlv_16='('
			{
				newLeafNode(otherlv_16, grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFunctionAccess().getChainFunctionParserRuleCall_2_1_0());
					}
					lv_chain_17_0=ruleFunction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFunctionRule());
						}
						add(
							$current,
							"chain",
							lv_chain_17_0,
							"org.integratedmodelling.kdl.Kdl.Function");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_18=','
				{
					newLeafNode(otherlv_18, grammarAccess.getFunctionAccess().getCommaKeyword_2_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getFunctionAccess().getChainFunctionParserRuleCall_2_2_1_0());
						}
						lv_chain_19_0=ruleFunction
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFunctionRule());
							}
							add(
								$current,
								"chain",
								lv_chain_19_0,
								"org.integratedmodelling.kdl.Kdl.Function");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_20=')'
			{
				newLeafNode(otherlv_20, grammarAccess.getFunctionAccess().getRightParenthesisKeyword_2_3());
			}
			(
				otherlv_21='as'
				{
					newLeafNode(otherlv_21, grammarAccess.getFunctionAccess().getAsKeyword_2_4_0());
				}
				(
					(
						lv_variable_22_0=RULE_LOWERCASE_ID
						{
							newLeafNode(lv_variable_22_0, grammarAccess.getFunctionAccess().getVariableLOWERCASE_IDTerminalRuleCall_2_4_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getFunctionRule());
							}
							setWithLastConsumed(
								$current,
								"variable",
								lv_variable_22_0,
								"org.integratedmodelling.kdl.Kdl.LOWERCASE_ID");
						}
					)
				)
			)?
		)
	)
;

// Entry rule entryRuleUnitElement
entryRuleUnitElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnitElementRule()); }
	iv_ruleUnitElement=ruleUnitElement
	{ $current=$iv_ruleUnitElement.current; }
	EOF;

// Rule UnitElement
ruleUnitElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_id_0_1=RULE_CAMELCASE_ID
					{
						newLeafNode(lv_id_0_1, grammarAccess.getUnitElementAccess().getIdCAMELCASE_IDTerminalRuleCall_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUnitElementRule());
						}
						setWithLastConsumed(
							$current,
							"id",
							lv_id_0_1,
							"org.integratedmodelling.kdl.Kdl.CAMELCASE_ID");
					}
					    |
					lv_id_0_2=RULE_LOWERCASE_ID
					{
						newLeafNode(lv_id_0_2, grammarAccess.getUnitElementAccess().getIdLOWERCASE_IDTerminalRuleCall_0_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUnitElementRule());
						}
						setWithLastConsumed(
							$current,
							"id",
							lv_id_0_2,
							"org.integratedmodelling.kdl.Kdl.LOWERCASE_ID");
					}
				)
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getUnitElementAccess().getNumNumberParserRuleCall_1_0());
				}
				lv_num_1_0=ruleNumber
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUnitElementRule());
					}
					set(
						$current,
						"num",
						lv_num_1_0,
						"org.integratedmodelling.kdl.Kdl.Number");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			otherlv_2='('
			{
				newLeafNode(otherlv_2, grammarAccess.getUnitElementAccess().getLeftParenthesisKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getUnitElementAccess().getUnitUnitParserRuleCall_2_1_0());
					}
					lv_unit_3_0=ruleUnit
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUnitElementRule());
						}
						set(
							$current,
							"unit",
							lv_unit_3_0,
							"org.integratedmodelling.kdl.Kdl.Unit");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_4=')'
			{
				newLeafNode(otherlv_4, grammarAccess.getUnitElementAccess().getRightParenthesisKeyword_2_2());
			}
		)
	)
;

// Entry rule entryRuleREL_OPERATOR
entryRuleREL_OPERATOR returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getREL_OPERATORRule()); }
	iv_ruleREL_OPERATOR=ruleREL_OPERATOR
	{ $current=$iv_ruleREL_OPERATOR.current; }
	EOF;

// Rule REL_OPERATOR
ruleREL_OPERATOR returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_gt_0_0='>'
				{
					newLeafNode(lv_gt_0_0, grammarAccess.getREL_OPERATORAccess().getGtGreaterThanSignKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getREL_OPERATORRule());
					}
					setWithLastConsumed($current, "gt", true, ">");
				}
			)
		)
		    |
		(
			(
				lv_lt_1_0='<'
				{
					newLeafNode(lv_lt_1_0, grammarAccess.getREL_OPERATORAccess().getLtLessThanSignKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getREL_OPERATORRule());
					}
					setWithLastConsumed($current, "lt", true, "<");
				}
			)
		)
		    |
		(
			(
				lv_eq_2_0='='
				{
					newLeafNode(lv_eq_2_0, grammarAccess.getREL_OPERATORAccess().getEqEqualsSignKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getREL_OPERATORRule());
					}
					setWithLastConsumed($current, "eq", true, "=");
				}
			)
		)
		    |
		(
			(
				lv_ne_3_0='!='
				{
					newLeafNode(lv_ne_3_0, grammarAccess.getREL_OPERATORAccess().getNeExclamationMarkEqualsSignKeyword_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getREL_OPERATORRule());
					}
					setWithLastConsumed($current, "ne", true, "!=");
				}
			)
		)
		    |
		(
			(
				lv_le_4_0='<='
				{
					newLeafNode(lv_le_4_0, grammarAccess.getREL_OPERATORAccess().getLeLessThanSignEqualsSignKeyword_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getREL_OPERATORRule());
					}
					setWithLastConsumed($current, "le", true, "<=");
				}
			)
		)
		    |
		(
			(
				lv_ge_5_0='>='
				{
					newLeafNode(lv_ge_5_0, grammarAccess.getREL_OPERATORAccess().getGeGreaterThanSignEqualsSignKeyword_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getREL_OPERATORRule());
					}
					setWithLastConsumed($current, "ge", true, ">=");
				}
			)
		)
	)
;

// Entry rule entryRuleUnit
entryRuleUnit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnitRule()); }
	iv_ruleUnit=ruleUnit
	{ $current=$iv_ruleUnit.current; }
	EOF;

// Rule Unit
ruleUnit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getUnitAccess().getUnitAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getUnitAccess().getRootUnitElementParserRuleCall_1_0());
				}
				lv_root_1_0=ruleUnitElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUnitRule());
					}
					set(
						$current,
						"root",
						lv_root_1_0,
						"org.integratedmodelling.kdl.Kdl.UnitElement");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				((
					(
						ruleUnitOp
					)
				)
				)=>
				(
					(
						{
							newCompositeNode(grammarAccess.getUnitAccess().getConnectorsUnitOpEnumRuleCall_2_0_0_0());
						}
						lv_connectors_2_0=ruleUnitOp
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getUnitRule());
							}
							add(
								$current,
								"connectors",
								lv_connectors_2_0,
								"org.integratedmodelling.kdl.Kdl.UnitOp");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getUnitAccess().getUnitsUnitElementParserRuleCall_2_1_0());
					}
					lv_units_3_0=ruleUnitElement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUnitRule());
						}
						add(
							$current,
							"units",
							lv_units_3_0,
							"org.integratedmodelling.kdl.Kdl.UnitElement");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleCurrency
entryRuleCurrency returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCurrencyRule()); }
	iv_ruleCurrency=ruleCurrency
	{ $current=$iv_ruleCurrency.current; }
	EOF;

// Rule Currency
ruleCurrency returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_id_0_0=RULE_ID
					{
						newLeafNode(lv_id_0_0, grammarAccess.getCurrencyAccess().getIdIDTerminalRuleCall_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCurrencyRule());
						}
						setWithLastConsumed(
							$current,
							"id",
							lv_id_0_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			(
				otherlv_1='@'
				{
					newLeafNode(otherlv_1, grammarAccess.getCurrencyAccess().getCommercialAtKeyword_0_1_0());
				}
				(
					(
						lv_year_2_0=RULE_INT
						{
							newLeafNode(lv_year_2_0, grammarAccess.getCurrencyAccess().getYearINTTerminalRuleCall_0_1_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getCurrencyRule());
							}
							setWithLastConsumed(
								$current,
								"year",
								lv_year_2_0,
								"org.eclipse.xtext.common.Terminals.INT");
						}
					)
				)
			)
		)
		    |
		(
			(
				(
					lv_concept_3_1=RULE_CAMELCASE_ID
					{
						newLeafNode(lv_concept_3_1, grammarAccess.getCurrencyAccess().getConceptCAMELCASE_IDTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCurrencyRule());
						}
						setWithLastConsumed(
							$current,
							"concept",
							lv_concept_3_1,
							"org.integratedmodelling.kdl.Kdl.CAMELCASE_ID");
					}
					    |
					{
						newCompositeNode(grammarAccess.getCurrencyAccess().getConceptNamespaceIdParserRuleCall_1_0_1());
					}
					lv_concept_3_2=ruleNamespaceId
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCurrencyRule());
						}
						set(
							$current,
							"concept",
							lv_concept_3_2,
							"org.integratedmodelling.kdl.Kdl.NamespaceId");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleNumber
entryRuleNumber returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNumberRule()); }
	iv_ruleNumber=ruleNumber
	{ $current=$iv_ruleNumber.current; }
	EOF;

// Rule Number
ruleNumber returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='+'
			{
				newLeafNode(otherlv_0, grammarAccess.getNumberAccess().getPlusSignKeyword_0_0());
			}
			    |
			(
				(
					lv_negative_1_0='-'
					{
						newLeafNode(lv_negative_1_0, grammarAccess.getNumberAccess().getNegativeHyphenMinusKeyword_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNumberRule());
						}
						setWithLastConsumed($current, "negative", true, "-");
					}
				)
			)
		)?
		(
			((
				RULE_INT
			)
			)=>
			(
				lv_real_2_0=RULE_INT
				{
					newLeafNode(lv_real_2_0, grammarAccess.getNumberAccess().getRealINTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNumberRule());
					}
					setWithLastConsumed(
						$current,
						"real",
						lv_real_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		(
			((
				(
					(
						'.'
					)
				)
				(
					(
						RULE_INT
					)
				)
			)
			)=>
			(
				(
					(
						lv_decimal_3_0='.'
						{
							newLeafNode(lv_decimal_3_0, grammarAccess.getNumberAccess().getDecimalFullStopKeyword_2_0_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getNumberRule());
							}
							setWithLastConsumed($current, "decimal", true, ".");
						}
					)
				)
				(
					(
						lv_decimalPart_4_0=RULE_INT
						{
							newLeafNode(lv_decimalPart_4_0, grammarAccess.getNumberAccess().getDecimalPartINTTerminalRuleCall_2_0_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getNumberRule());
							}
							setWithLastConsumed(
								$current,
								"decimalPart",
								lv_decimalPart_4_0,
								"org.eclipse.xtext.common.Terminals.INT");
						}
					)
				)
			)
		)?
		(
			((
				(
					(
						(
							'e'
							    |
							'E'
						)
					)
				)
				(
					'+'
					    |
					(
						(
							'-'
						)
					)
				)?
				(
					(
						RULE_INT
					)
				)
			)
			)=>
			(
				(
					(
						(
							lv_exponential_5_1='e'
							{
								newLeafNode(lv_exponential_5_1, grammarAccess.getNumberAccess().getExponentialEKeyword_3_0_0_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getNumberRule());
								}
								setWithLastConsumed($current, "exponential", true, null);
							}
							    |
							lv_exponential_5_2='E'
							{
								newLeafNode(lv_exponential_5_2, grammarAccess.getNumberAccess().getExponentialEKeyword_3_0_0_0_1());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getNumberRule());
								}
								setWithLastConsumed($current, "exponential", true, null);
							}
						)
					)
				)
				(
					otherlv_6='+'
					{
						newLeafNode(otherlv_6, grammarAccess.getNumberAccess().getPlusSignKeyword_3_0_1_0());
					}
					    |
					(
						(
							lv_expNegative_7_0='-'
							{
								newLeafNode(lv_expNegative_7_0, grammarAccess.getNumberAccess().getExpNegativeHyphenMinusKeyword_3_0_1_1_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getNumberRule());
								}
								setWithLastConsumed($current, "expNegative", true, "-");
							}
						)
					)
				)?
				(
					(
						lv_exp_8_0=RULE_INT
						{
							newLeafNode(lv_exp_8_0, grammarAccess.getNumberAccess().getExpINTTerminalRuleCall_3_0_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getNumberRule());
							}
							setWithLastConsumed(
								$current,
								"exp",
								lv_exp_8_0,
								"org.eclipse.xtext.common.Terminals.INT");
						}
					)
				)
			)
		)?
	)
;

// Entry rule entryRulePathName
entryRulePathName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getPathNameRule()); }
	iv_rulePathName=rulePathName
	{ $current=$iv_rulePathName.current.getText(); }
	EOF;

// Rule PathName
rulePathName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_LOWERCASE_ID_0=RULE_LOWERCASE_ID
		{
			$current.merge(this_LOWERCASE_ID_0);
		}
		{
			newLeafNode(this_LOWERCASE_ID_0, grammarAccess.getPathNameAccess().getLOWERCASE_IDTerminalRuleCall_0());
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getPathNameAccess().getFullStopKeyword_1_0());
			}
			this_LOWERCASE_ID_2=RULE_LOWERCASE_ID
			{
				$current.merge(this_LOWERCASE_ID_2);
			}
			{
				newLeafNode(this_LOWERCASE_ID_2, grammarAccess.getPathNameAccess().getLOWERCASE_IDTerminalRuleCall_1_1());
			}
		)*
	)
;

// Entry rule entryRulePath
entryRulePath returns [String current=null]:
	{ newCompositeNode(grammarAccess.getPathRule()); }
	iv_rulePath=rulePath
	{ $current=$iv_rulePath.current.getText(); }
	EOF;

// Rule Path
rulePath returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_LOWERCASE_ID_0=RULE_LOWERCASE_ID
		{
			$current.merge(this_LOWERCASE_ID_0);
		}
		{
			newLeafNode(this_LOWERCASE_ID_0, grammarAccess.getPathAccess().getLOWERCASE_IDTerminalRuleCall_0());
		}
		(
			(
				kw='.'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getPathAccess().getFullStopKeyword_1_0_0());
				}
				    |
				kw='/'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getPathAccess().getSolidusKeyword_1_0_1());
				}
			)
			this_LOWERCASE_ID_3=RULE_LOWERCASE_ID
			{
				$current.merge(this_LOWERCASE_ID_3);
			}
			{
				newLeafNode(this_LOWERCASE_ID_3, grammarAccess.getPathAccess().getLOWERCASE_IDTerminalRuleCall_1_1());
			}
		)*
	)
;

// Entry rule entryRuleJavaClass
entryRuleJavaClass returns [String current=null]:
	{ newCompositeNode(grammarAccess.getJavaClassRule()); }
	iv_ruleJavaClass=ruleJavaClass
	{ $current=$iv_ruleJavaClass.current.getText(); }
	EOF;

// Rule JavaClass
ruleJavaClass returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getJavaClassAccess().getPathNameParserRuleCall_0());
		}
		this_PathName_0=rulePathName
		{
			$current.merge(this_PathName_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		kw='.'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getJavaClassAccess().getFullStopKeyword_1());
		}
		this_CAMELCASE_ID_2=RULE_CAMELCASE_ID
		{
			$current.merge(this_CAMELCASE_ID_2);
		}
		{
			newLeafNode(this_CAMELCASE_ID_2, grammarAccess.getJavaClassAccess().getCAMELCASE_IDTerminalRuleCall_2());
		}
	)
;

// Entry rule entryRuleNamespaceId
entryRuleNamespaceId returns [String current=null]:
	{ newCompositeNode(grammarAccess.getNamespaceIdRule()); }
	iv_ruleNamespaceId=ruleNamespaceId
	{ $current=$iv_ruleNamespaceId.current.getText(); }
	EOF;

// Rule NamespaceId
ruleNamespaceId returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getNamespaceIdAccess().getPathNameParserRuleCall_0());
		}
		this_PathName_0=rulePathName
		{
			$current.merge(this_PathName_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		kw=':'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getNamespaceIdAccess().getColonKeyword_1());
		}
		this_CAMELCASE_ID_2=RULE_CAMELCASE_ID
		{
			$current.merge(this_CAMELCASE_ID_2);
		}
		{
			newLeafNode(this_CAMELCASE_ID_2, grammarAccess.getNamespaceIdAccess().getCAMELCASE_IDTerminalRuleCall_2());
		}
	)
;

// Entry rule entryRulePropertyId
entryRulePropertyId returns [String current=null]:
	{ newCompositeNode(grammarAccess.getPropertyIdRule()); }
	iv_rulePropertyId=rulePropertyId
	{ $current=$iv_rulePropertyId.current.getText(); }
	EOF;

// Rule PropertyId
rulePropertyId returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPropertyIdAccess().getPathNameParserRuleCall_0());
		}
		this_PathName_0=rulePathName
		{
			$current.merge(this_PathName_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		kw=':'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getPropertyIdAccess().getColonKeyword_1());
		}
		(
			this_LOWERCASE_ID_2=RULE_LOWERCASE_ID
			{
				$current.merge(this_LOWERCASE_ID_2);
			}
			{
				newLeafNode(this_LOWERCASE_ID_2, grammarAccess.getPropertyIdAccess().getLOWERCASE_IDTerminalRuleCall_2_0());
			}
			    |
			this_LOWERCASE_DASHID_3=RULE_LOWERCASE_DASHID
			{
				$current.merge(this_LOWERCASE_DASHID_3);
			}
			{
				newLeafNode(this_LOWERCASE_DASHID_3, grammarAccess.getPropertyIdAccess().getLOWERCASE_DASHIDTerminalRuleCall_2_1());
			}
		)
	)
;

// Entry rule entryRuleVersionNumber
entryRuleVersionNumber returns [String current=null]:
	{ newCompositeNode(grammarAccess.getVersionNumberRule()); }
	iv_ruleVersionNumber=ruleVersionNumber
	{ $current=$iv_ruleVersionNumber.current.getText(); }
	EOF;

// Rule VersionNumber
ruleVersionNumber returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_INT_0=RULE_INT
		{
			$current.merge(this_INT_0);
		}
		{
			newLeafNode(this_INT_0, grammarAccess.getVersionNumberAccess().getINTTerminalRuleCall_0());
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getVersionNumberAccess().getFullStopKeyword_1_0());
			}
			this_INT_2=RULE_INT
			{
				$current.merge(this_INT_2);
			}
			{
				newLeafNode(this_INT_2, grammarAccess.getVersionNumberAccess().getINTTerminalRuleCall_1_1());
			}
			(
				kw='.'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getVersionNumberAccess().getFullStopKeyword_1_2_0());
				}
				this_INT_4=RULE_INT
				{
					$current.merge(this_INT_4);
				}
				{
					newLeafNode(this_INT_4, grammarAccess.getVersionNumberAccess().getINTTerminalRuleCall_1_2_1());
				}
			)?
		)?
		(
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getVersionNumberAccess().getHyphenMinusKeyword_2());
			}
		)?
		(
			this_LOWERCASE_ID_6=RULE_LOWERCASE_ID
			{
				$current.merge(this_LOWERCASE_ID_6);
			}
			{
				newLeafNode(this_LOWERCASE_ID_6, grammarAccess.getVersionNumberAccess().getLOWERCASE_IDTerminalRuleCall_3_0());
			}
			    |
			this_UPPERCASE_ID_7=RULE_UPPERCASE_ID
			{
				$current.merge(this_UPPERCASE_ID_7);
			}
			{
				newLeafNode(this_UPPERCASE_ID_7, grammarAccess.getVersionNumberAccess().getUPPERCASE_IDTerminalRuleCall_3_1());
			}
		)?
	)
;

// Rule UnitOp
ruleUnitOp returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='/'
			{
				$current = grammarAccess.getUnitOpAccess().getOVEREnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getUnitOpAccess().getOVEREnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='^'
			{
				$current = grammarAccess.getUnitOpAccess().getCARETEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getUnitOpAccess().getCARETEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='*'
			{
				$current = grammarAccess.getUnitOpAccess().getSTAREnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getUnitOpAccess().getSTAREnumLiteralDeclaration_2());
			}
		)
	)
;

RULE_LOWERCASE_ID : 'a'..'z' ('a'..'z'|'0'..'9'|'_')*;

RULE_LOWERCASE_DASHID : 'a'..'z' ('a'..'z'|'0'..'9'|'-')*;

RULE_SHAPE : ('#'|'#'? ('A'..'z' ('.'|'0'..'3'))+);

RULE_UPPERCASE_ID : 'A'..'Z' ('A'..'Z')*;

RULE_UPPERCASE_PATH : RULE_UPPERCASE_ID ('.' RULE_UPPERCASE_ID)*;

RULE_CAMELCASE_ID : 'A'..'Z' ('A'..'z'|'0'..'9')*;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
