/*
 * generated by Xtext 2.19.0
 */
grammar InternalKactors;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
}

@lexer::header {
package org.integratedmodelling.kactors.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.integratedmodelling.kactors.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.integratedmodelling.kactors.services.KactorsGrammarAccess;

}
@parser::members {
	private KactorsGrammarAccess grammarAccess;

	public void setGrammarAccess(KactorsGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getGroup()); }
		(rule__Model__Group__0)
		{ after(grammarAccess.getModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePreamble
entryRulePreamble
:
{ before(grammarAccess.getPreambleRule()); }
	 rulePreamble
{ after(grammarAccess.getPreambleRule()); } 
	 EOF 
;

// Rule Preamble
rulePreamble 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPreambleAccess().getGroup()); }
		(rule__Preamble__Group__0)
		{ after(grammarAccess.getPreambleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDefinition
entryRuleDefinition
:
{ before(grammarAccess.getDefinitionRule()); }
	 ruleDefinition
{ after(grammarAccess.getDefinitionRule()); } 
	 EOF 
;

// Rule Definition
ruleDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDefinitionAccess().getGroup()); }
		(rule__Definition__Group__0)
		{ after(grammarAccess.getDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArgumentDeclaration
entryRuleArgumentDeclaration
:
{ before(grammarAccess.getArgumentDeclarationRule()); }
	 ruleArgumentDeclaration
{ after(grammarAccess.getArgumentDeclarationRule()); } 
	 EOF 
;

// Rule ArgumentDeclaration
ruleArgumentDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArgumentDeclarationAccess().getGroup()); }
		(rule__ArgumentDeclaration__Group__0)
		{ after(grammarAccess.getArgumentDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameterList
entryRuleParameterList
:
{ before(grammarAccess.getParameterListRule()); }
	 ruleParameterList
{ after(grammarAccess.getParameterListRule()); } 
	 EOF 
;

// Rule ParameterList
ruleParameterList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterListAccess().getGroup()); }
		(rule__ParameterList__Group__0)
		{ after(grammarAccess.getParameterListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleKeyValuePair
entryRuleKeyValuePair
:
{ before(grammarAccess.getKeyValuePairRule()); }
	 ruleKeyValuePair
{ after(grammarAccess.getKeyValuePairRule()); } 
	 EOF 
;

// Rule KeyValuePair
ruleKeyValuePair 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getKeyValuePairAccess().getGroup()); }
		(rule__KeyValuePair__Group__0)
		{ after(grammarAccess.getKeyValuePairAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValue
entryRuleValue
:
{ before(grammarAccess.getValueRule()); }
	 ruleValue
{ after(grammarAccess.getValueRule()); } 
	 EOF 
;

// Rule Value
ruleValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValueAccess().getAlternatives()); }
		(rule__Value__Alternatives)
		{ after(grammarAccess.getValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAnnotation
entryRuleAnnotation
:
{ before(grammarAccess.getAnnotationRule()); }
	 ruleAnnotation
{ after(grammarAccess.getAnnotationRule()); } 
	 EOF 
;

// Rule Annotation
ruleAnnotation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAnnotationAccess().getGroup()); }
		(rule__Annotation__Group__0)
		{ after(grammarAccess.getAnnotationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUrnId
entryRuleUrnId
:
{ before(grammarAccess.getUrnIdRule()); }
	 ruleUrnId
{ after(grammarAccess.getUrnIdRule()); } 
	 EOF 
;

// Rule UrnId
ruleUrnId 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUrnIdAccess().getGroup()); }
		(rule__UrnId__Group__0)
		{ after(grammarAccess.getUrnIdAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUrnKvp
entryRuleUrnKvp
:
{ before(grammarAccess.getUrnKvpRule()); }
	 ruleUrnKvp
{ after(grammarAccess.getUrnKvpRule()); } 
	 EOF 
;

// Rule UrnKvp
ruleUrnKvp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUrnKvpAccess().getGroup()); }
		(rule__UrnKvp__Group__0)
		{ after(grammarAccess.getUrnKvpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleList
entryRuleList
:
{ before(grammarAccess.getListRule()); }
	 ruleList
{ after(grammarAccess.getListRule()); } 
	 EOF 
;

// Rule List
ruleList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getListAccess().getGroup()); }
		(rule__List__Group__0)
		{ after(grammarAccess.getListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMap
entryRuleMap
:
{ before(grammarAccess.getMapRule()); }
	 ruleMap
{ after(grammarAccess.getMapRule()); } 
	 EOF 
;

// Rule Map
ruleMap 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMapAccess().getGroup()); }
		(rule__Map__Group__0)
		{ after(grammarAccess.getMapAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMapEntry
entryRuleMapEntry
:
{ before(grammarAccess.getMapEntryRule()); }
	 ruleMapEntry
{ after(grammarAccess.getMapEntryRule()); } 
	 EOF 
;

// Rule MapEntry
ruleMapEntry 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMapEntryAccess().getGroup()); }
		(rule__MapEntry__Group__0)
		{ after(grammarAccess.getMapEntryAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClassifier
entryRuleClassifier
:
{ before(grammarAccess.getClassifierRule()); }
	 ruleClassifier
{ after(grammarAccess.getClassifierRule()); } 
	 EOF 
;

// Rule Classifier
ruleClassifier 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClassifierAccess().getAlternatives()); }
		(rule__Classifier__Alternatives)
		{ after(grammarAccess.getClassifierAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLookupTable
entryRuleLookupTable
:
{ before(grammarAccess.getLookupTableRule()); }
	 ruleLookupTable
{ after(grammarAccess.getLookupTableRule()); } 
	 EOF 
;

// Rule LookupTable
ruleLookupTable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLookupTableAccess().getGroup()); }
		(rule__LookupTable__Group__0)
		{ after(grammarAccess.getLookupTableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTable
entryRuleTable
:
{ before(grammarAccess.getTableRule()); }
	 ruleTable
{ after(grammarAccess.getTableRule()); } 
	 EOF 
;

// Rule Table
ruleTable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTableAccess().getGroup()); }
		(rule__Table__Group__0)
		{ after(grammarAccess.getTableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHeaderRow
entryRuleHeaderRow
:
{ before(grammarAccess.getHeaderRowRule()); }
	 ruleHeaderRow
{ after(grammarAccess.getHeaderRowRule()); } 
	 EOF 
;

// Rule HeaderRow
ruleHeaderRow 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHeaderRowAccess().getGroup()); }
		(rule__HeaderRow__Group__0)
		{ after(grammarAccess.getHeaderRowAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTableRow
entryRuleTableRow
:
{ before(grammarAccess.getTableRowRule()); }
	 ruleTableRow
{ after(grammarAccess.getTableRowRule()); } 
	 EOF 
;

// Rule TableRow
ruleTableRow 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTableRowAccess().getGroup()); }
		(rule__TableRow__Group__0)
		{ after(grammarAccess.getTableRowAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTableClassifier
entryRuleTableClassifier
:
{ before(grammarAccess.getTableClassifierRule()); }
	 ruleTableClassifier
{ after(grammarAccess.getTableClassifierRule()); } 
	 EOF 
;

// Rule TableClassifier
ruleTableClassifier 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTableClassifierAccess().getAlternatives()); }
		(rule__TableClassifier__Alternatives)
		{ after(grammarAccess.getTableClassifierAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQuantity
entryRuleQuantity
:
{ before(grammarAccess.getQuantityRule()); }
	 ruleQuantity
{ after(grammarAccess.getQuantityRule()); } 
	 EOF 
;

// Rule Quantity
ruleQuantity 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQuantityAccess().getGroup()); }
		(rule__Quantity__Group__0)
		{ after(grammarAccess.getQuantityAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnitElement
entryRuleUnitElement
:
{ before(grammarAccess.getUnitElementRule()); }
	 ruleUnitElement
{ after(grammarAccess.getUnitElementRule()); } 
	 EOF 
;

// Rule UnitElement
ruleUnitElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnitElementAccess().getAlternatives()); }
		(rule__UnitElement__Alternatives)
		{ after(grammarAccess.getUnitElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnit
entryRuleUnit
:
{ before(grammarAccess.getUnitRule()); }
	 ruleUnit
{ after(grammarAccess.getUnitRule()); } 
	 EOF 
;

// Rule Unit
ruleUnit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnitAccess().getGroup()); }
		(rule__Unit__Group__0)
		{ after(grammarAccess.getUnitAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCurrency
entryRuleCurrency
:
{ before(grammarAccess.getCurrencyRule()); }
	 ruleCurrency
{ after(grammarAccess.getCurrencyRule()); } 
	 EOF 
;

// Rule Currency
ruleCurrency 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCurrencyAccess().getGroup()); }
		(rule__Currency__Group__0)
		{ after(grammarAccess.getCurrencyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleREL_OPERATOR
entryRuleREL_OPERATOR
:
{ before(grammarAccess.getREL_OPERATORRule()); }
	 ruleREL_OPERATOR
{ after(grammarAccess.getREL_OPERATORRule()); } 
	 EOF 
;

// Rule REL_OPERATOR
ruleREL_OPERATOR 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getREL_OPERATORAccess().getAlternatives()); }
		(rule__REL_OPERATOR__Alternatives)
		{ after(grammarAccess.getREL_OPERATORAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLiteral
entryRuleLiteral
:
{ before(grammarAccess.getLiteralRule()); }
	 ruleLiteral
{ after(grammarAccess.getLiteralRule()); } 
	 EOF 
;

// Rule Literal
ruleLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLiteralAccess().getAlternatives()); }
		(rule__Literal__Alternatives)
		{ after(grammarAccess.getLiteralAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBody
entryRuleBody
:
{ before(grammarAccess.getBodyRule()); }
	 ruleBody
{ after(grammarAccess.getBodyRule()); } 
	 EOF 
;

// Rule Body
ruleBody 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBodyAccess().getGroup()); }
		(rule__Body__Group__0)
		{ after(grammarAccess.getBodyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVerb
entryRuleVerb
:
{ before(grammarAccess.getVerbRule()); }
	 ruleVerb
{ after(grammarAccess.getVerbRule()); } 
	 EOF 
;

// Rule Verb
ruleVerb 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVerbAccess().getGroup()); }
		(rule__Verb__Group__0)
		{ after(grammarAccess.getVerbAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGroup
entryRuleGroup
:
{ before(grammarAccess.getGroupRule()); }
	 ruleGroup
{ after(grammarAccess.getGroupRule()); } 
	 EOF 
;

// Rule Group
ruleGroup 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGroupAccess().getGroup()); }
		(rule__Group__Group__0)
		{ after(grammarAccess.getGroupAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStatementList
entryRuleStatementList
:
{ before(grammarAccess.getStatementListRule()); }
	 ruleStatementList
{ after(grammarAccess.getStatementListRule()); } 
	 EOF 
;

// Rule StatementList
ruleStatementList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementListAccess().getGroup()); }
		(rule__StatementList__Group__0)
		{ after(grammarAccess.getStatementListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStatement
entryRuleStatement
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementAccess().getAlternatives()); }
		(rule__Statement__Alternatives)
		{ after(grammarAccess.getStatementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNextStatement
entryRuleNextStatement
:
{ before(grammarAccess.getNextStatementRule()); }
	 ruleNextStatement
{ after(grammarAccess.getNextStatementRule()); } 
	 EOF 
;

// Rule NextStatement
ruleNextStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNextStatementAccess().getGroup()); }
		(rule__NextStatement__Group__0)
		{ after(grammarAccess.getNextStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIfStatement
entryRuleIfStatement
:
{ before(grammarAccess.getIfStatementRule()); }
	 ruleIfStatement
{ after(grammarAccess.getIfStatementRule()); } 
	 EOF 
;

// Rule IfStatement
ruleIfStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIfStatementAccess().getGroup()); }
		(rule__IfStatement__Group__0)
		{ after(grammarAccess.getIfStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIfBody
entryRuleIfBody
:
{ before(grammarAccess.getIfBodyRule()); }
	 ruleIfBody
{ after(grammarAccess.getIfBodyRule()); } 
	 EOF 
;

// Rule IfBody
ruleIfBody 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIfBodyAccess().getAlternatives()); }
		(rule__IfBody__Alternatives)
		{ after(grammarAccess.getIfBodyAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWhileStatement
entryRuleWhileStatement
:
{ before(grammarAccess.getWhileStatementRule()); }
	 ruleWhileStatement
{ after(grammarAccess.getWhileStatementRule()); } 
	 EOF 
;

// Rule WhileStatement
ruleWhileStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWhileStatementAccess().getGroup()); }
		(rule__WhileStatement__Group__0)
		{ after(grammarAccess.getWhileStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDoStatement
entryRuleDoStatement
:
{ before(grammarAccess.getDoStatementRule()); }
	 ruleDoStatement
{ after(grammarAccess.getDoStatementRule()); } 
	 EOF 
;

// Rule DoStatement
ruleDoStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDoStatementAccess().getGroup()); }
		(rule__DoStatement__Group__0)
		{ after(grammarAccess.getDoStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleForStatement
entryRuleForStatement
:
{ before(grammarAccess.getForStatementRule()); }
	 ruleForStatement
{ after(grammarAccess.getForStatementRule()); } 
	 EOF 
;

// Rule ForStatement
ruleForStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getForStatementAccess().getGroup()); }
		(rule__ForStatement__Group__0)
		{ after(grammarAccess.getForStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleActions
entryRuleActions
:
{ before(grammarAccess.getActionsRule()); }
	 ruleActions
{ after(grammarAccess.getActionsRule()); } 
	 EOF 
;

// Rule Actions
ruleActions 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getActionsAccess().getAlternatives()); }
		(rule__Actions__Alternatives)
		{ after(grammarAccess.getActionsAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMatch
entryRuleMatch
:
{ before(grammarAccess.getMatchRule()); }
	 ruleMatch
{ after(grammarAccess.getMatchRule()); } 
	 EOF 
;

// Rule Match
ruleMatch 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMatchAccess().getAlternatives()); }
		(rule__Match__Alternatives)
		{ after(grammarAccess.getMatchAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNumber
entryRuleNumber
:
{ before(grammarAccess.getNumberRule()); }
	 ruleNumber
{ after(grammarAccess.getNumberRule()); } 
	 EOF 
;

// Rule Number
ruleNumber 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumberAccess().getGroup()); }
		(rule__Number__Group__0)
		{ after(grammarAccess.getNumberAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDate
entryRuleDate
:
{ before(grammarAccess.getDateRule()); }
	 ruleDate
{ after(grammarAccess.getDateRule()); } 
	 EOF 
;

// Rule Date
ruleDate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDateAccess().getGroup()); }
		(rule__Date__Group__0)
		{ after(grammarAccess.getDateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePathName
entryRulePathName
:
{ before(grammarAccess.getPathNameRule()); }
	 rulePathName
{ after(grammarAccess.getPathNameRule()); } 
	 EOF 
;

// Rule PathName
rulePathName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPathNameAccess().getGroup()); }
		(rule__PathName__Group__0)
		{ after(grammarAccess.getPathNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePath
entryRulePath
:
{ before(grammarAccess.getPathRule()); }
	 rulePath
{ after(grammarAccess.getPathRule()); } 
	 EOF 
;

// Rule Path
rulePath 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPathAccess().getGroup()); }
		(rule__Path__Group__0)
		{ after(grammarAccess.getPathAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVersionNumber
entryRuleVersionNumber
:
{ before(grammarAccess.getVersionNumberRule()); }
	 ruleVersionNumber
{ after(grammarAccess.getVersionNumberRule()); } 
	 EOF 
;

// Rule VersionNumber
ruleVersionNumber 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVersionNumberAccess().getGroup()); }
		(rule__VersionNumber__Group__0)
		{ after(grammarAccess.getVersionNumberAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule UnitOp
ruleUnitOp
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitOpAccess().getAlternatives()); }
		(rule__UnitOp__Alternatives)
		{ after(grammarAccess.getUnitOpAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__LabelAlternatives_2_2_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPreambleAccess().getLabelLOWERCASE_IDTerminalRuleCall_2_2_1_0_0()); }
		RULE_LOWERCASE_ID
		{ after(grammarAccess.getPreambleAccess().getLabelLOWERCASE_IDTerminalRuleCall_2_2_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getPreambleAccess().getLabelIDTerminalRuleCall_2_2_1_0_1()); }
		RULE_ID
		{ after(grammarAccess.getPreambleAccess().getLabelIDTerminalRuleCall_2_2_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getPreambleAccess().getLabelSTRINGTerminalRuleCall_2_2_1_0_2()); }
		RULE_STRING
		{ after(grammarAccess.getPreambleAccess().getLabelSTRINGTerminalRuleCall_2_2_1_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyValuePair__Alternatives_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getKeyValuePairAccess().getInteractiveAssignment_0_1_0()); }
		(rule__KeyValuePair__InteractiveAssignment_0_1_0)
		{ after(grammarAccess.getKeyValuePairAccess().getInteractiveAssignment_0_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getKeyValuePairAccess().getEqualsSignKeyword_0_1_1()); }
		'='
		{ after(grammarAccess.getKeyValuePairAccess().getEqualsSignKeyword_0_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getArgvalueAssignment_0()); }
		(rule__Value__ArgvalueAssignment_0)
		{ after(grammarAccess.getValueAccess().getArgvalueAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getLiteralAssignment_1()); }
		(rule__Value__LiteralAssignment_1)
		{ after(grammarAccess.getValueAccess().getLiteralAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getIdAssignment_2()); }
		(rule__Value__IdAssignment_2)
		{ after(grammarAccess.getValueAccess().getIdAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getUrnAssignment_3()); }
		(rule__Value__UrnAssignment_3)
		{ after(grammarAccess.getValueAccess().getUrnAssignment_3()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getListAssignment_4()); }
		(rule__Value__ListAssignment_4)
		{ after(grammarAccess.getValueAccess().getListAssignment_4()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getMapAssignment_5()); }
		(rule__Value__MapAssignment_5)
		{ after(grammarAccess.getValueAccess().getMapAssignment_5()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getObservableAssignment_6()); }
		(rule__Value__ObservableAssignment_6)
		{ after(grammarAccess.getValueAccess().getObservableAssignment_6()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getExpressionAssignment_7()); }
		(rule__Value__ExpressionAssignment_7)
		{ after(grammarAccess.getValueAccess().getExpressionAssignment_7()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getTableAssignment_8()); }
		(rule__Value__TableAssignment_8)
		{ after(grammarAccess.getValueAccess().getTableAssignment_8()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UrnId__Alternatives_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUrnIdAccess().getPathParserRuleCall_7_0()); }
		rulePath
		{ after(grammarAccess.getUrnIdAccess().getPathParserRuleCall_7_0()); }
	)
	|
	(
		{ before(grammarAccess.getUrnIdAccess().getINTTerminalRuleCall_7_1()); }
		RULE_INT
		{ after(grammarAccess.getUrnIdAccess().getINTTerminalRuleCall_7_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UrnId__Alternatives_9_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUrnIdAccess().getPathParserRuleCall_9_1_0()); }
		rulePath
		{ after(grammarAccess.getUrnIdAccess().getPathParserRuleCall_9_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getUrnIdAccess().getUrnKvpParserRuleCall_9_1_1()); }
		ruleUrnKvp
		{ after(grammarAccess.getUrnIdAccess().getUrnKvpParserRuleCall_9_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UrnId__Alternatives_9_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUrnIdAccess().getPathParserRuleCall_9_2_1_0()); }
		rulePath
		{ after(grammarAccess.getUrnIdAccess().getPathParserRuleCall_9_2_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getUrnIdAccess().getUrnKvpParserRuleCall_9_2_1_1()); }
		ruleUrnKvp
		{ after(grammarAccess.getUrnIdAccess().getUrnKvpParserRuleCall_9_2_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UrnKvp__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUrnKvpAccess().getPathParserRuleCall_2_0()); }
		rulePath
		{ after(grammarAccess.getUrnKvpAccess().getPathParserRuleCall_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getUrnKvpAccess().getINTTerminalRuleCall_2_1()); }
		RULE_INT
		{ after(grammarAccess.getUrnKvpAccess().getINTTerminalRuleCall_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Classifier__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassifierAccess().getAlternatives_0()); }
		(rule__Classifier__Alternatives_0)
		{ after(grammarAccess.getClassifierAccess().getAlternatives_0()); }
	)
	|
	(
		{ before(grammarAccess.getClassifierAccess().getGroup_1()); }
		(rule__Classifier__Group_1__0)
		{ after(grammarAccess.getClassifierAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getClassifierAccess().getNumAssignment_2()); }
		(rule__Classifier__NumAssignment_2)
		{ after(grammarAccess.getClassifierAccess().getNumAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getClassifierAccess().getGroup_3()); }
		(rule__Classifier__Group_3__0)
		{ after(grammarAccess.getClassifierAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getClassifierAccess().getStringAssignment_4()); }
		(rule__Classifier__StringAssignment_4)
		{ after(grammarAccess.getClassifierAccess().getStringAssignment_4()); }
	)
	|
	(
		{ before(grammarAccess.getClassifierAccess().getObservableAssignment_5()); }
		(rule__Classifier__ObservableAssignment_5)
		{ after(grammarAccess.getClassifierAccess().getObservableAssignment_5()); }
	)
	|
	(
		{ before(grammarAccess.getClassifierAccess().getIdAssignment_6()); }
		(rule__Classifier__IdAssignment_6)
		{ after(grammarAccess.getClassifierAccess().getIdAssignment_6()); }
	)
	|
	(
		{ before(grammarAccess.getClassifierAccess().getGroup_7()); }
		(rule__Classifier__Group_7__0)
		{ after(grammarAccess.getClassifierAccess().getGroup_7()); }
	)
	|
	(
		{ before(grammarAccess.getClassifierAccess().getNodataAssignment_8()); }
		(rule__Classifier__NodataAssignment_8)
		{ after(grammarAccess.getClassifierAccess().getNodataAssignment_8()); }
	)
	|
	(
		{ before(grammarAccess.getClassifierAccess().getStarAssignment_9()); }
		(rule__Classifier__StarAssignment_9)
		{ after(grammarAccess.getClassifierAccess().getStarAssignment_9()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Classifier__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassifierAccess().getBooleanAssignment_0_0()); }
		(rule__Classifier__BooleanAssignment_0_0)
		{ after(grammarAccess.getClassifierAccess().getBooleanAssignment_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getClassifierAccess().getBooleanAssignment_0_1()); }
		(rule__Classifier__BooleanAssignment_0_1)
		{ after(grammarAccess.getClassifierAccess().getBooleanAssignment_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Classifier__Alternatives_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassifierAccess().getLeftLimitAssignment_1_1_0()); }
		(rule__Classifier__LeftLimitAssignment_1_1_0)
		{ after(grammarAccess.getClassifierAccess().getLeftLimitAssignment_1_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getClassifierAccess().getExclusiveKeyword_1_1_1()); }
		'exclusive'
		{ after(grammarAccess.getClassifierAccess().getExclusiveKeyword_1_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Classifier__Alternatives_1_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassifierAccess().getRightLimitAssignment_1_4_0()); }
		(rule__Classifier__RightLimitAssignment_1_4_0)
		{ after(grammarAccess.getClassifierAccess().getRightLimitAssignment_1_4_0()); }
	)
	|
	(
		{ before(grammarAccess.getClassifierAccess().getExclusiveKeyword_1_4_1()); }
		'exclusive'
		{ after(grammarAccess.getClassifierAccess().getExclusiveKeyword_1_4_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HeaderRow__ElementsAlternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHeaderRowAccess().getElementsLOWERCASE_IDTerminalRuleCall_0_0_0()); }
		RULE_LOWERCASE_ID
		{ after(grammarAccess.getHeaderRowAccess().getElementsLOWERCASE_IDTerminalRuleCall_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getHeaderRowAccess().getElementsSTRINGTerminalRuleCall_0_0_1()); }
		RULE_STRING
		{ after(grammarAccess.getHeaderRowAccess().getElementsSTRINGTerminalRuleCall_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HeaderRow__ElementsAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHeaderRowAccess().getElementsLOWERCASE_IDTerminalRuleCall_1_1_0_0()); }
		RULE_LOWERCASE_ID
		{ after(grammarAccess.getHeaderRowAccess().getElementsLOWERCASE_IDTerminalRuleCall_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getHeaderRowAccess().getElementsSTRINGTerminalRuleCall_1_1_0_1()); }
		RULE_STRING
		{ after(grammarAccess.getHeaderRowAccess().getElementsSTRINGTerminalRuleCall_1_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TableClassifier__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableClassifierAccess().getAlternatives_0()); }
		(rule__TableClassifier__Alternatives_0)
		{ after(grammarAccess.getTableClassifierAccess().getAlternatives_0()); }
	)
	|
	(
		{ before(grammarAccess.getTableClassifierAccess().getNumAssignment_1()); }
		(rule__TableClassifier__NumAssignment_1)
		{ after(grammarAccess.getTableClassifierAccess().getNumAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getTableClassifierAccess().getStringAssignment_2()); }
		(rule__TableClassifier__StringAssignment_2)
		{ after(grammarAccess.getTableClassifierAccess().getStringAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getTableClassifierAccess().getObservableAssignment_3()); }
		(rule__TableClassifier__ObservableAssignment_3)
		{ after(grammarAccess.getTableClassifierAccess().getObservableAssignment_3()); }
	)
	|
	(
		{ before(grammarAccess.getTableClassifierAccess().getGroup_4()); }
		(rule__TableClassifier__Group_4__0)
		{ after(grammarAccess.getTableClassifierAccess().getGroup_4()); }
	)
	|
	(
		{ before(grammarAccess.getTableClassifierAccess().getGroup_5()); }
		(rule__TableClassifier__Group_5__0)
		{ after(grammarAccess.getTableClassifierAccess().getGroup_5()); }
	)
	|
	(
		{ before(grammarAccess.getTableClassifierAccess().getGroup_6()); }
		(rule__TableClassifier__Group_6__0)
		{ after(grammarAccess.getTableClassifierAccess().getGroup_6()); }
	)
	|
	(
		{ before(grammarAccess.getTableClassifierAccess().getQuantityAssignment_7()); }
		(rule__TableClassifier__QuantityAssignment_7)
		{ after(grammarAccess.getTableClassifierAccess().getQuantityAssignment_7()); }
	)
	|
	(
		{ before(grammarAccess.getTableClassifierAccess().getDateAssignment_8()); }
		(rule__TableClassifier__DateAssignment_8)
		{ after(grammarAccess.getTableClassifierAccess().getDateAssignment_8()); }
	)
	|
	(
		{ before(grammarAccess.getTableClassifierAccess().getExprAssignment_9()); }
		(rule__TableClassifier__ExprAssignment_9)
		{ after(grammarAccess.getTableClassifierAccess().getExprAssignment_9()); }
	)
	|
	(
		{ before(grammarAccess.getTableClassifierAccess().getNodataAssignment_10()); }
		(rule__TableClassifier__NodataAssignment_10)
		{ after(grammarAccess.getTableClassifierAccess().getNodataAssignment_10()); }
	)
	|
	(
		{ before(grammarAccess.getTableClassifierAccess().getStarAssignment_11()); }
		(rule__TableClassifier__StarAssignment_11)
		{ after(grammarAccess.getTableClassifierAccess().getStarAssignment_11()); }
	)
	|
	(
		{ before(grammarAccess.getTableClassifierAccess().getAnythingAssignment_12()); }
		(rule__TableClassifier__AnythingAssignment_12)
		{ after(grammarAccess.getTableClassifierAccess().getAnythingAssignment_12()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TableClassifier__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableClassifierAccess().getBooleanAssignment_0_0()); }
		(rule__TableClassifier__BooleanAssignment_0_0)
		{ after(grammarAccess.getTableClassifierAccess().getBooleanAssignment_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getTableClassifierAccess().getBooleanAssignment_0_1()); }
		(rule__TableClassifier__BooleanAssignment_0_1)
		{ after(grammarAccess.getTableClassifierAccess().getBooleanAssignment_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TableClassifier__Alternatives_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableClassifierAccess().getLeftLimitAssignment_5_1_0()); }
		(rule__TableClassifier__LeftLimitAssignment_5_1_0)
		{ after(grammarAccess.getTableClassifierAccess().getLeftLimitAssignment_5_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getTableClassifierAccess().getExclusiveKeyword_5_1_1()); }
		'exclusive'
		{ after(grammarAccess.getTableClassifierAccess().getExclusiveKeyword_5_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TableClassifier__Alternatives_5_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableClassifierAccess().getRightLimitAssignment_5_4_0()); }
		(rule__TableClassifier__RightLimitAssignment_5_4_0)
		{ after(grammarAccess.getTableClassifierAccess().getRightLimitAssignment_5_4_0()); }
	)
	|
	(
		{ before(grammarAccess.getTableClassifierAccess().getExclusiveKeyword_5_4_1()); }
		'exclusive'
		{ after(grammarAccess.getTableClassifierAccess().getExclusiveKeyword_5_4_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Quantity__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQuantityAccess().getOverAssignment_1_0()); }
		(rule__Quantity__OverAssignment_1_0)
		{ after(grammarAccess.getQuantityAccess().getOverAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getQuantityAccess().getFullStopKeyword_1_1()); }
		'.'
		{ after(grammarAccess.getQuantityAccess().getFullStopKeyword_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Quantity__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQuantityAccess().getUnitAssignment_2_0()); }
		(rule__Quantity__UnitAssignment_2_0)
		{ after(grammarAccess.getQuantityAccess().getUnitAssignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getQuantityAccess().getCurrencyAssignment_2_1()); }
		(rule__Quantity__CurrencyAssignment_2_1)
		{ after(grammarAccess.getQuantityAccess().getCurrencyAssignment_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitElement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitElementAccess().getIdAssignment_0()); }
		(rule__UnitElement__IdAssignment_0)
		{ after(grammarAccess.getUnitElementAccess().getIdAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnitElementAccess().getGroup_1()); }
		(rule__UnitElement__Group_1__0)
		{ after(grammarAccess.getUnitElementAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitElement__IdAlternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitElementAccess().getIdCAMELCASE_IDTerminalRuleCall_0_0_0()); }
		RULE_CAMELCASE_ID
		{ after(grammarAccess.getUnitElementAccess().getIdCAMELCASE_IDTerminalRuleCall_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnitElementAccess().getIdLOWERCASE_IDTerminalRuleCall_0_0_1()); }
		RULE_LOWERCASE_ID
		{ after(grammarAccess.getUnitElementAccess().getIdLOWERCASE_IDTerminalRuleCall_0_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getUnitElementAccess().getIdUPPERCASE_IDTerminalRuleCall_0_0_2()); }
		RULE_UPPERCASE_ID
		{ after(grammarAccess.getUnitElementAccess().getIdUPPERCASE_IDTerminalRuleCall_0_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__REL_OPERATOR__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getREL_OPERATORAccess().getGtAssignment_0()); }
		(rule__REL_OPERATOR__GtAssignment_0)
		{ after(grammarAccess.getREL_OPERATORAccess().getGtAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getREL_OPERATORAccess().getLtAssignment_1()); }
		(rule__REL_OPERATOR__LtAssignment_1)
		{ after(grammarAccess.getREL_OPERATORAccess().getLtAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getREL_OPERATORAccess().getEqAssignment_2()); }
		(rule__REL_OPERATOR__EqAssignment_2)
		{ after(grammarAccess.getREL_OPERATORAccess().getEqAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getREL_OPERATORAccess().getNeAssignment_3()); }
		(rule__REL_OPERATOR__NeAssignment_3)
		{ after(grammarAccess.getREL_OPERATORAccess().getNeAssignment_3()); }
	)
	|
	(
		{ before(grammarAccess.getREL_OPERATORAccess().getLeAssignment_4()); }
		(rule__REL_OPERATOR__LeAssignment_4)
		{ after(grammarAccess.getREL_OPERATORAccess().getLeAssignment_4()); }
	)
	|
	(
		{ before(grammarAccess.getREL_OPERATORAccess().getGeAssignment_5()); }
		(rule__REL_OPERATOR__GeAssignment_5)
		{ after(grammarAccess.getREL_OPERATORAccess().getGeAssignment_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralAccess().getNumberAssignment_0()); }
		(rule__Literal__NumberAssignment_0)
		{ after(grammarAccess.getLiteralAccess().getNumberAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getGroup_1()); }
		(rule__Literal__Group_1__0)
		{ after(grammarAccess.getLiteralAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getStringAssignment_2()); }
		(rule__Literal__StringAssignment_2)
		{ after(grammarAccess.getLiteralAccess().getStringAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getDateAssignment_3()); }
		(rule__Literal__DateAssignment_3)
		{ after(grammarAccess.getLiteralAccess().getDateAssignment_3()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getBooleanAssignment_4()); }
		(rule__Literal__BooleanAssignment_4)
		{ after(grammarAccess.getLiteralAccess().getBooleanAssignment_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__BooleanAlternatives_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralAccess().getBooleanTrueKeyword_4_0_0()); }
		'true'
		{ after(grammarAccess.getLiteralAccess().getBooleanTrueKeyword_4_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getBooleanFalseKeyword_4_0_1()); }
		'false'
		{ after(grammarAccess.getLiteralAccess().getBooleanFalseKeyword_4_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Verb__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVerbAccess().getGroup_0_0()); }
		(rule__Verb__Group_0_0__0)
		{ after(grammarAccess.getVerbAccess().getGroup_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getVerbAccess().getGroupParserRuleCall_0_1()); }
		ruleGroup
		{ after(grammarAccess.getVerbAccess().getGroupParserRuleCall_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Verb__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVerbAccess().getGroup_1_0()); }
		(rule__Verb__Group_1_0__0)
		{ after(grammarAccess.getVerbAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getVerbAccess().getSemicolonKeyword_1_1()); }
		';'
		{ after(grammarAccess.getVerbAccess().getSemicolonKeyword_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getVerbAssignment_0()); }
		(rule__Statement__VerbAssignment_0)
		{ after(grammarAccess.getStatementAccess().getVerbAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getGroupAssignment_1()); }
		(rule__Statement__GroupAssignment_1)
		{ after(grammarAccess.getStatementAccess().getGroupAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getTextAssignment_2()); }
		(rule__Statement__TextAssignment_2)
		{ after(grammarAccess.getStatementAccess().getTextAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getIfAssignment_3()); }
		(rule__Statement__IfAssignment_3)
		{ after(grammarAccess.getStatementAccess().getIfAssignment_3()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getWhileAssignment_4()); }
		(rule__Statement__WhileAssignment_4)
		{ after(grammarAccess.getStatementAccess().getWhileAssignment_4()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getDoAssignment_5()); }
		(rule__Statement__DoAssignment_5)
		{ after(grammarAccess.getStatementAccess().getDoAssignment_5()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getForAssignment_6()); }
		(rule__Statement__ForAssignment_6)
		{ after(grammarAccess.getStatementAccess().getForAssignment_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NextStatement__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNextStatementAccess().getVerbAssignment_1_0()); }
		(rule__NextStatement__VerbAssignment_1_0)
		{ after(grammarAccess.getNextStatementAccess().getVerbAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getNextStatementAccess().getGroupAssignment_1_1()); }
		(rule__NextStatement__GroupAssignment_1_1)
		{ after(grammarAccess.getNextStatementAccess().getGroupAssignment_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getNextStatementAccess().getTextAssignment_1_2()); }
		(rule__NextStatement__TextAssignment_1_2)
		{ after(grammarAccess.getNextStatementAccess().getTextAssignment_1_2()); }
	)
	|
	(
		{ before(grammarAccess.getNextStatementAccess().getIfAssignment_1_3()); }
		(rule__NextStatement__IfAssignment_1_3)
		{ after(grammarAccess.getNextStatementAccess().getIfAssignment_1_3()); }
	)
	|
	(
		{ before(grammarAccess.getNextStatementAccess().getWhileAssignment_1_4()); }
		(rule__NextStatement__WhileAssignment_1_4)
		{ after(grammarAccess.getNextStatementAccess().getWhileAssignment_1_4()); }
	)
	|
	(
		{ before(grammarAccess.getNextStatementAccess().getDoAssignment_1_5()); }
		(rule__NextStatement__DoAssignment_1_5)
		{ after(grammarAccess.getNextStatementAccess().getDoAssignment_1_5()); }
	)
	|
	(
		{ before(grammarAccess.getNextStatementAccess().getForAssignment_1_6()); }
		(rule__NextStatement__ForAssignment_1_6)
		{ after(grammarAccess.getNextStatementAccess().getForAssignment_1_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfBody__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfBodyAccess().getVerbAssignment_0()); }
		(rule__IfBody__VerbAssignment_0)
		{ after(grammarAccess.getIfBodyAccess().getVerbAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getIfBodyAccess().getGroupAssignment_1()); }
		(rule__IfBody__GroupAssignment_1)
		{ after(grammarAccess.getIfBodyAccess().getGroupAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actions__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionsAccess().getStatementAssignment_0()); }
		(rule__Actions__StatementAssignment_0)
		{ after(grammarAccess.getActionsAccess().getStatementAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getActionsAccess().getGroup_1()); }
		(rule__Actions__Group_1__0)
		{ after(grammarAccess.getActionsAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getActionsAccess().getMatchAssignment_2()); }
		(rule__Actions__MatchAssignment_2)
		{ after(grammarAccess.getActionsAccess().getMatchAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getActionsAccess().getGroup_3()); }
		(rule__Actions__Group_3__0)
		{ after(grammarAccess.getActionsAccess().getGroup_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMatchAccess().getGroup_0()); }
		(rule__Match__Group_0__0)
		{ after(grammarAccess.getMatchAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getMatchAccess().getGroup_1()); }
		(rule__Match__Group_1__0)
		{ after(grammarAccess.getMatchAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getMatchAccess().getGroup_2()); }
		(rule__Match__Group_2__0)
		{ after(grammarAccess.getMatchAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getMatchAccess().getGroup_3()); }
		(rule__Match__Group_3__0)
		{ after(grammarAccess.getMatchAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getMatchAccess().getGroup_4()); }
		(rule__Match__Group_4__0)
		{ after(grammarAccess.getMatchAccess().getGroup_4()); }
	)
	|
	(
		{ before(grammarAccess.getMatchAccess().getGroup_5()); }
		(rule__Match__Group_5__0)
		{ after(grammarAccess.getMatchAccess().getGroup_5()); }
	)
	|
	(
		{ before(grammarAccess.getMatchAccess().getGroup_6()); }
		(rule__Match__Group_6__0)
		{ after(grammarAccess.getMatchAccess().getGroup_6()); }
	)
	|
	(
		{ before(grammarAccess.getMatchAccess().getGroup_7()); }
		(rule__Match__Group_7__0)
		{ after(grammarAccess.getMatchAccess().getGroup_7()); }
	)
	|
	(
		{ before(grammarAccess.getMatchAccess().getGroup_8()); }
		(rule__Match__Group_8__0)
		{ after(grammarAccess.getMatchAccess().getGroup_8()); }
	)
	|
	(
		{ before(grammarAccess.getMatchAccess().getGroup_9()); }
		(rule__Match__Group_9__0)
		{ after(grammarAccess.getMatchAccess().getGroup_9()); }
	)
	|
	(
		{ before(grammarAccess.getMatchAccess().getGroup_10()); }
		(rule__Match__Group_10__0)
		{ after(grammarAccess.getMatchAccess().getGroup_10()); }
	)
	|
	(
		{ before(grammarAccess.getMatchAccess().getGroup_11()); }
		(rule__Match__Group_11__0)
		{ after(grammarAccess.getMatchAccess().getGroup_11()); }
	)
	|
	(
		{ before(grammarAccess.getMatchAccess().getGroup_12()); }
		(rule__Match__Group_12__0)
		{ after(grammarAccess.getMatchAccess().getGroup_12()); }
	)
	|
	(
		{ before(grammarAccess.getMatchAccess().getGroup_13()); }
		(rule__Match__Group_13__0)
		{ after(grammarAccess.getMatchAccess().getGroup_13()); }
	)
	|
	(
		{ before(grammarAccess.getMatchAccess().getGroup_14()); }
		(rule__Match__Group_14__0)
		{ after(grammarAccess.getMatchAccess().getGroup_14()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Alternatives_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMatchAccess().getLeftLimitAssignment_7_1_0()); }
		(rule__Match__LeftLimitAssignment_7_1_0)
		{ after(grammarAccess.getMatchAccess().getLeftLimitAssignment_7_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getMatchAccess().getExclusiveKeyword_7_1_1()); }
		'exclusive'
		{ after(grammarAccess.getMatchAccess().getExclusiveKeyword_7_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Alternatives_7_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMatchAccess().getRightLimitAssignment_7_4_0()); }
		(rule__Match__RightLimitAssignment_7_4_0)
		{ after(grammarAccess.getMatchAccess().getRightLimitAssignment_7_4_0()); }
	)
	|
	(
		{ before(grammarAccess.getMatchAccess().getExclusiveKeyword_7_4_1()); }
		'exclusive'
		{ after(grammarAccess.getMatchAccess().getExclusiveKeyword_7_4_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberAccess().getPlusSignKeyword_0_0()); }
		'+'
		{ after(grammarAccess.getNumberAccess().getPlusSignKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getNumberAccess().getNegativeAssignment_0_1()); }
		(rule__Number__NegativeAssignment_0_1)
		{ after(grammarAccess.getNumberAccess().getNegativeAssignment_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__ExponentialAlternatives_4_0_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberAccess().getExponentialEKeyword_4_0_0_0_0()); }
		'e'
		{ after(grammarAccess.getNumberAccess().getExponentialEKeyword_4_0_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getNumberAccess().getExponentialEKeyword_4_0_0_0_1()); }
		'E'
		{ after(grammarAccess.getNumberAccess().getExponentialEKeyword_4_0_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Alternatives_4_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberAccess().getPlusSignKeyword_4_0_1_0()); }
		'+'
		{ after(grammarAccess.getNumberAccess().getPlusSignKeyword_4_0_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getNumberAccess().getExpNegativeAssignment_4_0_1_1()); }
		(rule__Number__ExpNegativeAssignment_4_0_1_1)
		{ after(grammarAccess.getNumberAccess().getExpNegativeAssignment_4_0_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDateAccess().getADKeyword_1_0()); }
		'AD'
		{ after(grammarAccess.getDateAccess().getADKeyword_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getDateAccess().getCEKeyword_1_1()); }
		'CE'
		{ after(grammarAccess.getDateAccess().getCEKeyword_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getDateAccess().getBcAssignment_1_2()); }
		(rule__Date__BcAssignment_1_2)
		{ after(grammarAccess.getDateAccess().getBcAssignment_1_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Path__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPathAccess().getLOWERCASE_IDTerminalRuleCall_0_0()); }
		RULE_LOWERCASE_ID
		{ after(grammarAccess.getPathAccess().getLOWERCASE_IDTerminalRuleCall_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getPathAccess().getUPPERCASE_IDTerminalRuleCall_0_1()); }
		RULE_UPPERCASE_ID
		{ after(grammarAccess.getPathAccess().getUPPERCASE_IDTerminalRuleCall_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Path__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPathAccess().getFullStopKeyword_1_0_0()); }
		'.'
		{ after(grammarAccess.getPathAccess().getFullStopKeyword_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getPathAccess().getSolidusKeyword_1_0_1()); }
		'/'
		{ after(grammarAccess.getPathAccess().getSolidusKeyword_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Path__Alternatives_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPathAccess().getLOWERCASE_IDTerminalRuleCall_1_1_0()); }
		RULE_LOWERCASE_ID
		{ after(grammarAccess.getPathAccess().getLOWERCASE_IDTerminalRuleCall_1_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getPathAccess().getUPPERCASE_IDTerminalRuleCall_1_1_1()); }
		RULE_UPPERCASE_ID
		{ after(grammarAccess.getPathAccess().getUPPERCASE_IDTerminalRuleCall_1_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VersionNumber__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVersionNumberAccess().getLOWERCASE_IDTerminalRuleCall_3_0()); }
		RULE_LOWERCASE_ID
		{ after(grammarAccess.getVersionNumberAccess().getLOWERCASE_IDTerminalRuleCall_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getVersionNumberAccess().getUPPERCASE_IDTerminalRuleCall_3_1()); }
		RULE_UPPERCASE_ID
		{ after(grammarAccess.getVersionNumberAccess().getUPPERCASE_IDTerminalRuleCall_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitOp__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitOpAccess().getOVEREnumLiteralDeclaration_0()); }
		('/')
		{ after(grammarAccess.getUnitOpAccess().getOVEREnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnitOpAccess().getCARETEnumLiteralDeclaration_1()); }
		('^')
		{ after(grammarAccess.getUnitOpAccess().getCARETEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getUnitOpAccess().getSTAREnumLiteralDeclaration_2()); }
		('*')
		{ after(grammarAccess.getUnitOpAccess().getSTAREnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getModelAction_0()); }
	()
	{ after(grammarAccess.getModelAccess().getModelAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getPreambleAssignment_1()); }
	(rule__Model__PreambleAssignment_1)?
	{ after(grammarAccess.getModelAccess().getPreambleAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getDefinitionsAssignment_2()); }
	(rule__Model__DefinitionsAssignment_2)*
	{ after(grammarAccess.getModelAccess().getDefinitionsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Preamble__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Preamble__Group__0__Impl
	rule__Preamble__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreambleAccess().getPreambleAction_0()); }
	()
	{ after(grammarAccess.getPreambleAccess().getPreambleAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Preamble__Group__1__Impl
	rule__Preamble__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreambleAccess().getGroup_1()); }
	(rule__Preamble__Group_1__0)?
	{ after(grammarAccess.getPreambleAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Preamble__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreambleAccess().getUnorderedGroup_2()); }
	(rule__Preamble__UnorderedGroup_2)
	{ after(grammarAccess.getPreambleAccess().getUnorderedGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Preamble__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Preamble__Group_1__0__Impl
	rule__Preamble__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreambleAccess().getActorKeyword_1_0()); }
	'actor'
	{ after(grammarAccess.getPreambleAccess().getActorKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Preamble__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreambleAccess().getNameAssignment_1_1()); }
	(rule__Preamble__NameAssignment_1_1)
	{ after(grammarAccess.getPreambleAccess().getNameAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Preamble__Group_2_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Preamble__Group_2_0__0__Impl
	rule__Preamble__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__Group_2_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreambleAccess().getImportKeyword_2_0_0()); }
	'import'
	{ after(grammarAccess.getPreambleAccess().getImportKeyword_2_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__Group_2_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Preamble__Group_2_0__1__Impl
	rule__Preamble__Group_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__Group_2_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreambleAccess().getImportsAssignment_2_0_1()); }
	(rule__Preamble__ImportsAssignment_2_0_1)
	{ after(grammarAccess.getPreambleAccess().getImportsAssignment_2_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__Group_2_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Preamble__Group_2_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__Group_2_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreambleAccess().getGroup_2_0_2()); }
	(rule__Preamble__Group_2_0_2__0)*
	{ after(grammarAccess.getPreambleAccess().getGroup_2_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Preamble__Group_2_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Preamble__Group_2_0_2__0__Impl
	rule__Preamble__Group_2_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__Group_2_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreambleAccess().getCommaKeyword_2_0_2_0()); }
	','
	{ after(grammarAccess.getPreambleAccess().getCommaKeyword_2_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__Group_2_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Preamble__Group_2_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__Group_2_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreambleAccess().getImportsAssignment_2_0_2_1()); }
	(rule__Preamble__ImportsAssignment_2_0_2_1)
	{ after(grammarAccess.getPreambleAccess().getImportsAssignment_2_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Preamble__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Preamble__Group_2_1__0__Impl
	rule__Preamble__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreambleAccess().getWorldviewKeyword_2_1_0()); }
	'worldview'
	{ after(grammarAccess.getPreambleAccess().getWorldviewKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Preamble__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreambleAccess().getWorldviewAssignment_2_1_1()); }
	(rule__Preamble__WorldviewAssignment_2_1_1)
	{ after(grammarAccess.getPreambleAccess().getWorldviewAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Preamble__Group_2_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Preamble__Group_2_2__0__Impl
	rule__Preamble__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__Group_2_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreambleAccess().getLabelKeyword_2_2_0()); }
	'label'
	{ after(grammarAccess.getPreambleAccess().getLabelKeyword_2_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__Group_2_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Preamble__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__Group_2_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreambleAccess().getLabelAssignment_2_2_1()); }
	(rule__Preamble__LabelAssignment_2_2_1)
	{ after(grammarAccess.getPreambleAccess().getLabelAssignment_2_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Preamble__Group_2_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Preamble__Group_2_3__0__Impl
	rule__Preamble__Group_2_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__Group_2_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreambleAccess().getDescriptionKeyword_2_3_0()); }
	'description'
	{ after(grammarAccess.getPreambleAccess().getDescriptionKeyword_2_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__Group_2_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Preamble__Group_2_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__Group_2_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreambleAccess().getDescriptionAssignment_2_3_1()); }
	(rule__Preamble__DescriptionAssignment_2_3_1)
	{ after(grammarAccess.getPreambleAccess().getDescriptionAssignment_2_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Preamble__Group_2_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Preamble__Group_2_4__0__Impl
	rule__Preamble__Group_2_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__Group_2_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreambleAccess().getPermissionsKeyword_2_4_0()); }
	'permissions'
	{ after(grammarAccess.getPreambleAccess().getPermissionsKeyword_2_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__Group_2_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Preamble__Group_2_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__Group_2_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreambleAccess().getPermissionsAssignment_2_4_1()); }
	(rule__Preamble__PermissionsAssignment_2_4_1)
	{ after(grammarAccess.getPreambleAccess().getPermissionsAssignment_2_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Preamble__Group_2_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Preamble__Group_2_5__0__Impl
	rule__Preamble__Group_2_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__Group_2_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreambleAccess().getAuthorKeyword_2_5_0()); }
	'author'
	{ after(grammarAccess.getPreambleAccess().getAuthorKeyword_2_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__Group_2_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Preamble__Group_2_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__Group_2_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreambleAccess().getAuthorsAssignment_2_5_1()); }
	(rule__Preamble__AuthorsAssignment_2_5_1)
	{ after(grammarAccess.getPreambleAccess().getAuthorsAssignment_2_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Preamble__Group_2_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Preamble__Group_2_6__0__Impl
	rule__Preamble__Group_2_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__Group_2_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreambleAccess().getVersionKeyword_2_6_0()); }
	'version'
	{ after(grammarAccess.getPreambleAccess().getVersionKeyword_2_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__Group_2_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Preamble__Group_2_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__Group_2_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreambleAccess().getVersionAssignment_2_6_1()); }
	(rule__Preamble__VersionAssignment_2_6_1)
	{ after(grammarAccess.getPreambleAccess().getVersionAssignment_2_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Preamble__Group_2_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Preamble__Group_2_7__0__Impl
	rule__Preamble__Group_2_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__Group_2_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreambleAccess().getCreatedKeyword_2_7_0()); }
	'created'
	{ after(grammarAccess.getPreambleAccess().getCreatedKeyword_2_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__Group_2_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Preamble__Group_2_7__1__Impl
	rule__Preamble__Group_2_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__Group_2_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreambleAccess().getCreatedAssignment_2_7_1()); }
	(rule__Preamble__CreatedAssignment_2_7_1)
	{ after(grammarAccess.getPreambleAccess().getCreatedAssignment_2_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__Group_2_7__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Preamble__Group_2_7__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__Group_2_7__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreambleAccess().getCreatecommentAssignment_2_7_2()); }
	(rule__Preamble__CreatecommentAssignment_2_7_2)?
	{ after(grammarAccess.getPreambleAccess().getCreatecommentAssignment_2_7_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Preamble__Group_2_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Preamble__Group_2_8__0__Impl
	rule__Preamble__Group_2_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__Group_2_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreambleAccess().getModifiedKeyword_2_8_0()); }
	'modified'
	{ after(grammarAccess.getPreambleAccess().getModifiedKeyword_2_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__Group_2_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Preamble__Group_2_8__1__Impl
	rule__Preamble__Group_2_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__Group_2_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreambleAccess().getModifiedAssignment_2_8_1()); }
	(rule__Preamble__ModifiedAssignment_2_8_1)
	{ after(grammarAccess.getPreambleAccess().getModifiedAssignment_2_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__Group_2_8__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Preamble__Group_2_8__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__Group_2_8__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreambleAccess().getModcommentAssignment_2_8_2()); }
	(rule__Preamble__ModcommentAssignment_2_8_2)?
	{ after(grammarAccess.getPreambleAccess().getModcommentAssignment_2_8_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group__0__Impl
	rule__Definition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getAnnotationsAssignment_0()); }
	(rule__Definition__AnnotationsAssignment_0)*
	{ after(grammarAccess.getDefinitionAccess().getAnnotationsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group__1__Impl
	rule__Definition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getMessageKeyword_1()); }
	'message'
	{ after(grammarAccess.getDefinitionAccess().getMessageKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group__2__Impl
	rule__Definition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getNameAssignment_2()); }
	(rule__Definition__NameAssignment_2)
	{ after(grammarAccess.getDefinitionAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group__3__Impl
	rule__Definition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getArgumentsAssignment_3()); }
	(rule__Definition__ArgumentsAssignment_3)?
	{ after(grammarAccess.getDefinitionAccess().getArgumentsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group__4__Impl
	rule__Definition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getColonKeyword_4()); }
	':'
	{ after(grammarAccess.getDefinitionAccess().getColonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getBodyAssignment_5()); }
	(rule__Definition__BodyAssignment_5)
	{ after(grammarAccess.getDefinitionAccess().getBodyAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArgumentDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgumentDeclaration__Group__0__Impl
	rule__ArgumentDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentDeclarationAccess().getArgumentDeclarationAction_0()); }
	()
	{ after(grammarAccess.getArgumentDeclarationAccess().getArgumentDeclarationAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgumentDeclaration__Group__1__Impl
	rule__ArgumentDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentDeclarationAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getArgumentDeclarationAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgumentDeclaration__Group__2__Impl
	rule__ArgumentDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentDeclarationAccess().getGroup_2()); }
	(rule__ArgumentDeclaration__Group_2__0)?
	{ after(grammarAccess.getArgumentDeclarationAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgumentDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentDeclarationAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getArgumentDeclarationAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArgumentDeclaration__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgumentDeclaration__Group_2__0__Impl
	rule__ArgumentDeclaration__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentDeclaration__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentDeclarationAccess().getIdsAssignment_2_0()); }
	(rule__ArgumentDeclaration__IdsAssignment_2_0)
	{ after(grammarAccess.getArgumentDeclarationAccess().getIdsAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentDeclaration__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgumentDeclaration__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentDeclaration__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentDeclarationAccess().getGroup_2_1()); }
	(rule__ArgumentDeclaration__Group_2_1__0)*
	{ after(grammarAccess.getArgumentDeclarationAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArgumentDeclaration__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgumentDeclaration__Group_2_1__0__Impl
	rule__ArgumentDeclaration__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentDeclaration__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentDeclarationAccess().getCommaKeyword_2_1_0()); }
	','
	{ after(grammarAccess.getArgumentDeclarationAccess().getCommaKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentDeclaration__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgumentDeclaration__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentDeclaration__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentDeclarationAccess().getIdsAssignment_2_1_1()); }
	(rule__ArgumentDeclaration__IdsAssignment_2_1_1)
	{ after(grammarAccess.getArgumentDeclarationAccess().getIdsAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group__0__Impl
	rule__ParameterList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getPairsAssignment_0()); }
	(rule__ParameterList__PairsAssignment_0)
	{ after(grammarAccess.getParameterListAccess().getPairsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getGroup_1()); }
	(rule__ParameterList__Group_1__0)*
	{ after(grammarAccess.getParameterListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group_1__0__Impl
	rule__ParameterList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getCommaKeyword_1_0()); }
	(',')
	{ after(grammarAccess.getParameterListAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getPairsAssignment_1_1()); }
	(rule__ParameterList__PairsAssignment_1_1)
	{ after(grammarAccess.getParameterListAccess().getPairsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__KeyValuePair__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__KeyValuePair__Group__0__Impl
	rule__KeyValuePair__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyValuePair__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeyValuePairAccess().getGroup_0()); }
	(rule__KeyValuePair__Group_0__0)?
	{ after(grammarAccess.getKeyValuePairAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyValuePair__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__KeyValuePair__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyValuePair__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeyValuePairAccess().getValueAssignment_1()); }
	(rule__KeyValuePair__ValueAssignment_1)
	{ after(grammarAccess.getKeyValuePairAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__KeyValuePair__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__KeyValuePair__Group_0__0__Impl
	rule__KeyValuePair__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyValuePair__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeyValuePairAccess().getNameAssignment_0_0()); }
	(rule__KeyValuePair__NameAssignment_0_0)
	{ after(grammarAccess.getKeyValuePairAccess().getNameAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyValuePair__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__KeyValuePair__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyValuePair__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeyValuePairAccess().getAlternatives_0_1()); }
	(rule__KeyValuePair__Alternatives_0_1)
	{ after(grammarAccess.getKeyValuePairAccess().getAlternatives_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Annotation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Annotation__Group__0__Impl
	rule__Annotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotationAccess().getNameAssignment_0()); }
	(rule__Annotation__NameAssignment_0)
	{ after(grammarAccess.getAnnotationAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Annotation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotationAccess().getGroup_1()); }
	(rule__Annotation__Group_1__0)?
	{ after(grammarAccess.getAnnotationAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Annotation__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Annotation__Group_1__0__Impl
	rule__Annotation__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotationAccess().getLeftParenthesisKeyword_1_0()); }
	'('
	{ after(grammarAccess.getAnnotationAccess().getLeftParenthesisKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Annotation__Group_1__1__Impl
	rule__Annotation__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotationAccess().getParametersAssignment_1_1()); }
	(rule__Annotation__ParametersAssignment_1_1)?
	{ after(grammarAccess.getAnnotationAccess().getParametersAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Annotation__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotationAccess().getRightParenthesisKeyword_1_2()); }
	')'
	{ after(grammarAccess.getAnnotationAccess().getRightParenthesisKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UrnId__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UrnId__Group__0__Impl
	rule__UrnId__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UrnId__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUrnIdAccess().getUrnKlabKeyword_0()); }
	('urn:klab:')?
	{ after(grammarAccess.getUrnIdAccess().getUrnKlabKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UrnId__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UrnId__Group__1__Impl
	rule__UrnId__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UrnId__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUrnIdAccess().getPathNameParserRuleCall_1()); }
	rulePathName
	{ after(grammarAccess.getUrnIdAccess().getPathNameParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UrnId__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UrnId__Group__2__Impl
	rule__UrnId__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UrnId__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUrnIdAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getUrnIdAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UrnId__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UrnId__Group__3__Impl
	rule__UrnId__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UrnId__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUrnIdAccess().getPathNameParserRuleCall_3()); }
	rulePathName
	{ after(grammarAccess.getUrnIdAccess().getPathNameParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UrnId__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UrnId__Group__4__Impl
	rule__UrnId__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__UrnId__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUrnIdAccess().getColonKeyword_4()); }
	':'
	{ after(grammarAccess.getUrnIdAccess().getColonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UrnId__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UrnId__Group__5__Impl
	rule__UrnId__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__UrnId__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUrnIdAccess().getPathNameParserRuleCall_5()); }
	rulePathName
	{ after(grammarAccess.getUrnIdAccess().getPathNameParserRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UrnId__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UrnId__Group__6__Impl
	rule__UrnId__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__UrnId__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUrnIdAccess().getColonKeyword_6()); }
	':'
	{ after(grammarAccess.getUrnIdAccess().getColonKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UrnId__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UrnId__Group__7__Impl
	rule__UrnId__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__UrnId__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUrnIdAccess().getAlternatives_7()); }
	(rule__UrnId__Alternatives_7)
	{ after(grammarAccess.getUrnIdAccess().getAlternatives_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UrnId__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UrnId__Group__8__Impl
	rule__UrnId__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__UrnId__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUrnIdAccess().getGroup_8()); }
	(rule__UrnId__Group_8__0)?
	{ after(grammarAccess.getUrnIdAccess().getGroup_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UrnId__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UrnId__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UrnId__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUrnIdAccess().getGroup_9()); }
	(rule__UrnId__Group_9__0)?
	{ after(grammarAccess.getUrnIdAccess().getGroup_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UrnId__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UrnId__Group_8__0__Impl
	rule__UrnId__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UrnId__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUrnIdAccess().getColonKeyword_8_0()); }
	':'
	{ after(grammarAccess.getUrnIdAccess().getColonKeyword_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UrnId__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UrnId__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UrnId__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUrnIdAccess().getVersionNumberParserRuleCall_8_1()); }
	ruleVersionNumber
	{ after(grammarAccess.getUrnIdAccess().getVersionNumberParserRuleCall_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UrnId__Group_9__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UrnId__Group_9__0__Impl
	rule__UrnId__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UrnId__Group_9__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUrnIdAccess().getNumberSignKeyword_9_0()); }
	'#'
	{ after(grammarAccess.getUrnIdAccess().getNumberSignKeyword_9_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UrnId__Group_9__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UrnId__Group_9__1__Impl
	rule__UrnId__Group_9__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UrnId__Group_9__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUrnIdAccess().getAlternatives_9_1()); }
	(rule__UrnId__Alternatives_9_1)
	{ after(grammarAccess.getUrnIdAccess().getAlternatives_9_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UrnId__Group_9__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UrnId__Group_9__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UrnId__Group_9__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUrnIdAccess().getGroup_9_2()); }
	(rule__UrnId__Group_9_2__0)*
	{ after(grammarAccess.getUrnIdAccess().getGroup_9_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UrnId__Group_9_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UrnId__Group_9_2__0__Impl
	rule__UrnId__Group_9_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UrnId__Group_9_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUrnIdAccess().getAmpersandKeyword_9_2_0()); }
	'&'
	{ after(grammarAccess.getUrnIdAccess().getAmpersandKeyword_9_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UrnId__Group_9_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UrnId__Group_9_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UrnId__Group_9_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUrnIdAccess().getAlternatives_9_2_1()); }
	(rule__UrnId__Alternatives_9_2_1)
	{ after(grammarAccess.getUrnIdAccess().getAlternatives_9_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UrnKvp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UrnKvp__Group__0__Impl
	rule__UrnKvp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UrnKvp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUrnKvpAccess().getPathNameParserRuleCall_0()); }
	rulePathName
	{ after(grammarAccess.getUrnKvpAccess().getPathNameParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UrnKvp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UrnKvp__Group__1__Impl
	rule__UrnKvp__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UrnKvp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUrnKvpAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getUrnKvpAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UrnKvp__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UrnKvp__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UrnKvp__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUrnKvpAccess().getAlternatives_2()); }
	(rule__UrnKvp__Alternatives_2)
	{ after(grammarAccess.getUrnKvpAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__List__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__List__Group__0__Impl
	rule__List__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__List__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListAccess().getListAction_0()); }
	()
	{ after(grammarAccess.getListAccess().getListAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__List__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__List__Group__1__Impl
	rule__List__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__List__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getListAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__List__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__List__Group__2__Impl
	rule__List__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__List__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListAccess().getContentsAssignment_2()); }
	(rule__List__ContentsAssignment_2)*
	{ after(grammarAccess.getListAccess().getContentsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__List__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__List__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__List__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getListAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Map__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Map__Group__0__Impl
	rule__Map__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Map__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapAccess().getMapAction_0()); }
	()
	{ after(grammarAccess.getMapAccess().getMapAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Map__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Map__Group__1__Impl
	rule__Map__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Map__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getMapAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Map__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Map__Group__2__Impl
	rule__Map__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Map__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapAccess().getGroup_2()); }
	(rule__Map__Group_2__0)?
	{ after(grammarAccess.getMapAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Map__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Map__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Map__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getMapAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Map__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Map__Group_2__0__Impl
	rule__Map__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Map__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapAccess().getEntriesAssignment_2_0()); }
	(rule__Map__EntriesAssignment_2_0)
	{ after(grammarAccess.getMapAccess().getEntriesAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Map__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Map__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Map__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapAccess().getGroup_2_1()); }
	(rule__Map__Group_2_1__0)*
	{ after(grammarAccess.getMapAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Map__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Map__Group_2_1__0__Impl
	rule__Map__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Map__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapAccess().getGroup_2_1_0()); }
	(rule__Map__Group_2_1_0__0)
	{ after(grammarAccess.getMapAccess().getGroup_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Map__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Map__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Map__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapAccess().getEntriesAssignment_2_1_1()); }
	(rule__Map__EntriesAssignment_2_1_1)
	{ after(grammarAccess.getMapAccess().getEntriesAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Map__Group_2_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Map__Group_2_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Map__Group_2_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapAccess().getCommaKeyword_2_1_0_0()); }
	','
	{ after(grammarAccess.getMapAccess().getCommaKeyword_2_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MapEntry__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapEntry__Group__0__Impl
	rule__MapEntry__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MapEntry__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapEntryAccess().getClassifierAssignment_0()); }
	(rule__MapEntry__ClassifierAssignment_0)
	{ after(grammarAccess.getMapEntryAccess().getClassifierAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapEntry__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapEntry__Group__1__Impl
	rule__MapEntry__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MapEntry__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapEntryAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getMapEntryAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapEntry__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapEntry__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MapEntry__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapEntryAccess().getValueAssignment_2()); }
	(rule__MapEntry__ValueAssignment_2)
	{ after(grammarAccess.getMapEntryAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Classifier__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Classifier__Group_1__0__Impl
	rule__Classifier__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Classifier__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassifierAccess().getInt0Assignment_1_0()); }
	(rule__Classifier__Int0Assignment_1_0)
	{ after(grammarAccess.getClassifierAccess().getInt0Assignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Classifier__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Classifier__Group_1__1__Impl
	rule__Classifier__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Classifier__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassifierAccess().getAlternatives_1_1()); }
	(rule__Classifier__Alternatives_1_1)?
	{ after(grammarAccess.getClassifierAccess().getAlternatives_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Classifier__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Classifier__Group_1__2__Impl
	rule__Classifier__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Classifier__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassifierAccess().getToKeyword_1_2()); }
	('to')
	{ after(grammarAccess.getClassifierAccess().getToKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Classifier__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Classifier__Group_1__3__Impl
	rule__Classifier__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Classifier__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassifierAccess().getInt1Assignment_1_3()); }
	(rule__Classifier__Int1Assignment_1_3)
	{ after(grammarAccess.getClassifierAccess().getInt1Assignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Classifier__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Classifier__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Classifier__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassifierAccess().getAlternatives_1_4()); }
	(rule__Classifier__Alternatives_1_4)?
	{ after(grammarAccess.getClassifierAccess().getAlternatives_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Classifier__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Classifier__Group_3__0__Impl
	rule__Classifier__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Classifier__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassifierAccess().getInKeyword_3_0()); }
	'in'
	{ after(grammarAccess.getClassifierAccess().getInKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Classifier__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Classifier__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Classifier__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassifierAccess().getSetAssignment_3_1()); }
	(rule__Classifier__SetAssignment_3_1)
	{ after(grammarAccess.getClassifierAccess().getSetAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Classifier__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Classifier__Group_7__0__Impl
	rule__Classifier__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Classifier__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassifierAccess().getOpAssignment_7_0()); }
	(rule__Classifier__OpAssignment_7_0)
	{ after(grammarAccess.getClassifierAccess().getOpAssignment_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Classifier__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Classifier__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Classifier__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassifierAccess().getExpressionAssignment_7_1()); }
	(rule__Classifier__ExpressionAssignment_7_1)
	{ after(grammarAccess.getClassifierAccess().getExpressionAssignment_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LookupTable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LookupTable__Group__0__Impl
	rule__LookupTable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LookupTable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLookupTableAccess().getLookupTableAction_0()); }
	()
	{ after(grammarAccess.getLookupTableAccess().getLookupTableAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LookupTable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LookupTable__Group__1__Impl
	rule__LookupTable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LookupTable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLookupTableAccess().getLeftCurlyBracketLeftCurlyBracketKeyword_1()); }
	'{{'
	{ after(grammarAccess.getLookupTableAccess().getLeftCurlyBracketLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LookupTable__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LookupTable__Group__2__Impl
	rule__LookupTable__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LookupTable__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLookupTableAccess().getTableAssignment_2()); }
	(rule__LookupTable__TableAssignment_2)?
	{ after(grammarAccess.getLookupTableAccess().getTableAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LookupTable__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LookupTable__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LookupTable__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLookupTableAccess().getRightCurlyBracketRightCurlyBracketKeyword_3()); }
	'}}'
	{ after(grammarAccess.getLookupTableAccess().getRightCurlyBracketRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Table__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__0__Impl
	rule__Table__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getGroup_0()); }
	(rule__Table__Group_0__0)?
	{ after(grammarAccess.getTableAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__1__Impl
	rule__Table__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getRowsAssignment_1()); }
	(rule__Table__RowsAssignment_1)
	{ after(grammarAccess.getTableAccess().getRowsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getGroup_2()); }
	(rule__Table__Group_2__0)*
	{ after(grammarAccess.getTableAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Table__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group_0__0__Impl
	rule__Table__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getHeadersAssignment_0_0()); }
	(rule__Table__HeadersAssignment_0_0)
	{ after(grammarAccess.getTableAccess().getHeadersAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getSEPARATORTerminalRuleCall_0_1()); }
	RULE_SEPARATOR
	{ after(grammarAccess.getTableAccess().getSEPARATORTerminalRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Table__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group_2__0__Impl
	rule__Table__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getCommaKeyword_2_0()); }
	','
	{ after(grammarAccess.getTableAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getRowsAssignment_2_1()); }
	(rule__Table__RowsAssignment_2_1)
	{ after(grammarAccess.getTableAccess().getRowsAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__HeaderRow__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HeaderRow__Group__0__Impl
	rule__HeaderRow__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HeaderRow__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHeaderRowAccess().getElementsAssignment_0()); }
	(rule__HeaderRow__ElementsAssignment_0)
	{ after(grammarAccess.getHeaderRowAccess().getElementsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HeaderRow__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HeaderRow__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HeaderRow__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHeaderRowAccess().getGroup_1()); }
	(rule__HeaderRow__Group_1__0)*
	{ after(grammarAccess.getHeaderRowAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__HeaderRow__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HeaderRow__Group_1__0__Impl
	rule__HeaderRow__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HeaderRow__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHeaderRowAccess().getVerticalLineKeyword_1_0()); }
	'|'
	{ after(grammarAccess.getHeaderRowAccess().getVerticalLineKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HeaderRow__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HeaderRow__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HeaderRow__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHeaderRowAccess().getElementsAssignment_1_1()); }
	(rule__HeaderRow__ElementsAssignment_1_1)
	{ after(grammarAccess.getHeaderRowAccess().getElementsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TableRow__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TableRow__Group__0__Impl
	rule__TableRow__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TableRow__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableRowAccess().getElementsAssignment_0()); }
	(rule__TableRow__ElementsAssignment_0)
	{ after(grammarAccess.getTableRowAccess().getElementsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TableRow__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TableRow__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TableRow__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableRowAccess().getGroup_1()); }
	(rule__TableRow__Group_1__0)*
	{ after(grammarAccess.getTableRowAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TableRow__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TableRow__Group_1__0__Impl
	rule__TableRow__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TableRow__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableRowAccess().getVerticalLineKeyword_1_0()); }
	'|'
	{ after(grammarAccess.getTableRowAccess().getVerticalLineKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TableRow__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TableRow__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TableRow__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableRowAccess().getElementsAssignment_1_1()); }
	(rule__TableRow__ElementsAssignment_1_1)
	{ after(grammarAccess.getTableRowAccess().getElementsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TableClassifier__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TableClassifier__Group_4__0__Impl
	rule__TableClassifier__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TableClassifier__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableClassifierAccess().getOpAssignment_4_0()); }
	(rule__TableClassifier__OpAssignment_4_0)
	{ after(grammarAccess.getTableClassifierAccess().getOpAssignment_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TableClassifier__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TableClassifier__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TableClassifier__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableClassifierAccess().getExpressionAssignment_4_1()); }
	(rule__TableClassifier__ExpressionAssignment_4_1)
	{ after(grammarAccess.getTableClassifierAccess().getExpressionAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TableClassifier__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TableClassifier__Group_5__0__Impl
	rule__TableClassifier__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TableClassifier__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableClassifierAccess().getInt0Assignment_5_0()); }
	(rule__TableClassifier__Int0Assignment_5_0)
	{ after(grammarAccess.getTableClassifierAccess().getInt0Assignment_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TableClassifier__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TableClassifier__Group_5__1__Impl
	rule__TableClassifier__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TableClassifier__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableClassifierAccess().getAlternatives_5_1()); }
	(rule__TableClassifier__Alternatives_5_1)?
	{ after(grammarAccess.getTableClassifierAccess().getAlternatives_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TableClassifier__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TableClassifier__Group_5__2__Impl
	rule__TableClassifier__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TableClassifier__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableClassifierAccess().getToKeyword_5_2()); }
	('to')
	{ after(grammarAccess.getTableClassifierAccess().getToKeyword_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TableClassifier__Group_5__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TableClassifier__Group_5__3__Impl
	rule__TableClassifier__Group_5__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TableClassifier__Group_5__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableClassifierAccess().getInt1Assignment_5_3()); }
	(rule__TableClassifier__Int1Assignment_5_3)
	{ after(grammarAccess.getTableClassifierAccess().getInt1Assignment_5_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TableClassifier__Group_5__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TableClassifier__Group_5__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TableClassifier__Group_5__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableClassifierAccess().getAlternatives_5_4()); }
	(rule__TableClassifier__Alternatives_5_4)?
	{ after(grammarAccess.getTableClassifierAccess().getAlternatives_5_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TableClassifier__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TableClassifier__Group_6__0__Impl
	rule__TableClassifier__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TableClassifier__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableClassifierAccess().getInKeyword_6_0()); }
	'in'
	{ after(grammarAccess.getTableClassifierAccess().getInKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TableClassifier__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TableClassifier__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TableClassifier__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableClassifierAccess().getSetAssignment_6_1()); }
	(rule__TableClassifier__SetAssignment_6_1)
	{ after(grammarAccess.getTableClassifierAccess().getSetAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Quantity__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Quantity__Group__0__Impl
	rule__Quantity__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Quantity__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuantityAccess().getValueAssignment_0()); }
	(rule__Quantity__ValueAssignment_0)
	{ after(grammarAccess.getQuantityAccess().getValueAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Quantity__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Quantity__Group__1__Impl
	rule__Quantity__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Quantity__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuantityAccess().getAlternatives_1()); }
	(rule__Quantity__Alternatives_1)
	{ after(grammarAccess.getQuantityAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Quantity__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Quantity__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Quantity__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuantityAccess().getAlternatives_2()); }
	(rule__Quantity__Alternatives_2)
	{ after(grammarAccess.getQuantityAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnitElement__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitElement__Group_1__0__Impl
	rule__UnitElement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitElement__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitElementAccess().getLeftParenthesisKeyword_1_0()); }
	'('
	{ after(grammarAccess.getUnitElementAccess().getLeftParenthesisKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitElement__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitElement__Group_1__1__Impl
	rule__UnitElement__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitElement__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitElementAccess().getUnitAssignment_1_1()); }
	(rule__UnitElement__UnitAssignment_1_1)
	{ after(grammarAccess.getUnitElementAccess().getUnitAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitElement__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitElement__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitElement__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitElementAccess().getRightParenthesisKeyword_1_2()); }
	')'
	{ after(grammarAccess.getUnitElementAccess().getRightParenthesisKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Unit__Group__0__Impl
	rule__Unit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitAccess().getUnitAction_0()); }
	()
	{ after(grammarAccess.getUnitAccess().getUnitAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Unit__Group__1__Impl
	rule__Unit__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitAccess().getRootAssignment_1()); }
	(rule__Unit__RootAssignment_1)?
	{ after(grammarAccess.getUnitAccess().getRootAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Unit__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitAccess().getGroup_2()); }
	(rule__Unit__Group_2__0)*
	{ after(grammarAccess.getUnitAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Unit__Group_2__0__Impl
	rule__Unit__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitAccess().getGroup_2_0()); }
	(rule__Unit__Group_2_0__0)
	{ after(grammarAccess.getUnitAccess().getGroup_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Unit__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitAccess().getUnitsAssignment_2_1()); }
	(rule__Unit__UnitsAssignment_2_1)
	{ after(grammarAccess.getUnitAccess().getUnitsAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group_2_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Unit__Group_2_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__Group_2_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitAccess().getConnectorsAssignment_2_0_0()); }
	(rule__Unit__ConnectorsAssignment_2_0_0)
	{ after(grammarAccess.getUnitAccess().getConnectorsAssignment_2_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Currency__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Currency__Group__0__Impl
	rule__Currency__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Currency__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCurrencyAccess().getIdAssignment_0()); }
	(rule__Currency__IdAssignment_0)
	{ after(grammarAccess.getCurrencyAccess().getIdAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Currency__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Currency__Group__1__Impl
	rule__Currency__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Currency__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCurrencyAccess().getGroup_1()); }
	(rule__Currency__Group_1__0)
	{ after(grammarAccess.getCurrencyAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Currency__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Currency__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Currency__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCurrencyAccess().getGroup_2()); }
	(rule__Currency__Group_2__0)*
	{ after(grammarAccess.getCurrencyAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Currency__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Currency__Group_1__0__Impl
	rule__Currency__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Currency__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCurrencyAccess().getCommercialAtKeyword_1_0()); }
	'@'
	{ after(grammarAccess.getCurrencyAccess().getCommercialAtKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Currency__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Currency__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Currency__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCurrencyAccess().getYearAssignment_1_1()); }
	(rule__Currency__YearAssignment_1_1)
	{ after(grammarAccess.getCurrencyAccess().getYearAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Currency__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Currency__Group_2__0__Impl
	rule__Currency__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Currency__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCurrencyAccess().getSolidusKeyword_2_0()); }
	('/')
	{ after(grammarAccess.getCurrencyAccess().getSolidusKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Currency__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Currency__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Currency__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCurrencyAccess().getUnitsAssignment_2_1()); }
	(rule__Currency__UnitsAssignment_2_1)
	{ after(grammarAccess.getCurrencyAccess().getUnitsAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Literal__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Literal__Group_1__0__Impl
	rule__Literal__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralAccess().getFromAssignment_1_0()); }
	(rule__Literal__FromAssignment_1_0)
	{ after(grammarAccess.getLiteralAccess().getFromAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Literal__Group_1__1__Impl
	rule__Literal__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralAccess().getToKeyword_1_1()); }
	'to'
	{ after(grammarAccess.getLiteralAccess().getToKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Literal__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralAccess().getToAssignment_1_2()); }
	(rule__Literal__ToAssignment_1_2)
	{ after(grammarAccess.getLiteralAccess().getToAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Body__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Body__Group__0__Impl
	rule__Body__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBodyAccess().getBodyAction_0()); }
	()
	{ after(grammarAccess.getBodyAccess().getBodyAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Body__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBodyAccess().getListsAssignment_1()); }
	(rule__Body__ListsAssignment_1)*
	{ after(grammarAccess.getBodyAccess().getListsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Verb__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Verb__Group__0__Impl
	rule__Verb__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Verb__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVerbAccess().getAlternatives_0()); }
	(rule__Verb__Alternatives_0)
	{ after(grammarAccess.getVerbAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Verb__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Verb__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Verb__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVerbAccess().getAlternatives_1()); }
	(rule__Verb__Alternatives_1)?
	{ after(grammarAccess.getVerbAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Verb__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Verb__Group_0_0__0__Impl
	rule__Verb__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Verb__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVerbAccess().getNameAssignment_0_0_0()); }
	(rule__Verb__NameAssignment_0_0_0)
	{ after(grammarAccess.getVerbAccess().getNameAssignment_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Verb__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Verb__Group_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Verb__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVerbAccess().getGroup_0_0_1()); }
	(rule__Verb__Group_0_0_1__0)?
	{ after(grammarAccess.getVerbAccess().getGroup_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Verb__Group_0_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Verb__Group_0_0_1__0__Impl
	rule__Verb__Group_0_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Verb__Group_0_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVerbAccess().getLeftParenthesisKeyword_0_0_1_0()); }
	'('
	{ after(grammarAccess.getVerbAccess().getLeftParenthesisKeyword_0_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Verb__Group_0_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Verb__Group_0_0_1__1__Impl
	rule__Verb__Group_0_0_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Verb__Group_0_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVerbAccess().getParametersAssignment_0_0_1_1()); }
	(rule__Verb__ParametersAssignment_0_0_1_1)?
	{ after(grammarAccess.getVerbAccess().getParametersAssignment_0_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Verb__Group_0_0_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Verb__Group_0_0_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Verb__Group_0_0_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVerbAccess().getRightParenthesisKeyword_0_0_1_2()); }
	')'
	{ after(grammarAccess.getVerbAccess().getRightParenthesisKeyword_0_0_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Verb__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Verb__Group_1_0__0__Impl
	rule__Verb__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Verb__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVerbAccess().getColonKeyword_1_0_0()); }
	':'
	{ after(grammarAccess.getVerbAccess().getColonKeyword_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Verb__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Verb__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Verb__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVerbAccess().getActionsAssignment_1_0_1()); }
	(rule__Verb__ActionsAssignment_1_0_1)
	{ after(grammarAccess.getVerbAccess().getActionsAssignment_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Group__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Group__Group__0__Impl
	rule__Group__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGroupAccess().getGroupAction_0()); }
	()
	{ after(grammarAccess.getGroupAccess().getGroupAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Group__Group__1__Impl
	rule__Group__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGroupAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getGroupAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Group__Group__2__Impl
	rule__Group__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGroupAccess().getBodyAssignment_2()); }
	(rule__Group__BodyAssignment_2)?
	{ after(grammarAccess.getGroupAccess().getBodyAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Group__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGroupAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getGroupAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StatementList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementList__Group__0__Impl
	rule__StatementList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementListAccess().getFirstAssignment_0()); }
	(rule__StatementList__FirstAssignment_0)
	{ after(grammarAccess.getStatementListAccess().getFirstAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementListAccess().getNextAssignment_1()); }
	(rule__StatementList__NextAssignment_1)*
	{ after(grammarAccess.getStatementListAccess().getNextAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NextStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NextStatement__Group__0__Impl
	rule__NextStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NextStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNextStatementAccess().getCommaKeyword_0()); }
	','
	{ after(grammarAccess.getNextStatementAccess().getCommaKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NextStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NextStatement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NextStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNextStatementAccess().getAlternatives_1()); }
	(rule__NextStatement__Alternatives_1)
	{ after(grammarAccess.getNextStatementAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__0__Impl
	rule__IfStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getIfKeyword_0()); }
	'if'
	{ after(grammarAccess.getIfStatementAccess().getIfKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__1__Impl
	rule__IfStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getExpressionAssignment_1()); }
	(rule__IfStatement__ExpressionAssignment_1)
	{ after(grammarAccess.getIfStatementAccess().getExpressionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__2__Impl
	rule__IfStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getBodyAssignment_2()); }
	(rule__IfStatement__BodyAssignment_2)
	{ after(grammarAccess.getIfStatementAccess().getBodyAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__3__Impl
	rule__IfStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getGroup_3()); }
	(rule__IfStatement__Group_3__0)*
	{ after(grammarAccess.getIfStatementAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getGroup_4()); }
	(rule__IfStatement__Group_4__0)?
	{ after(grammarAccess.getIfStatementAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group_3__0__Impl
	rule__IfStatement__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getElseKeyword_3_0()); }
	'else'
	{ after(grammarAccess.getIfStatementAccess().getElseKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group_3__1__Impl
	rule__IfStatement__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getIfKeyword_3_1()); }
	'if'
	{ after(grammarAccess.getIfStatementAccess().getIfKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group_3__2__Impl
	rule__IfStatement__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getElseIfExpressionAssignment_3_2()); }
	(rule__IfStatement__ElseIfExpressionAssignment_3_2)
	{ after(grammarAccess.getIfStatementAccess().getElseIfExpressionAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getElseIfCallAssignment_3_3()); }
	(rule__IfStatement__ElseIfCallAssignment_3_3)
	{ after(grammarAccess.getIfStatementAccess().getElseIfCallAssignment_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group_4__0__Impl
	rule__IfStatement__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getElseKeyword_4_0()); }
	'else'
	{ after(grammarAccess.getIfStatementAccess().getElseKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getElseCallAssignment_4_1()); }
	(rule__IfStatement__ElseCallAssignment_4_1)
	{ after(grammarAccess.getIfStatementAccess().getElseCallAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__WhileStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileStatement__Group__0__Impl
	rule__WhileStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileStatementAccess().getWhileKeyword_0()); }
	'while'
	{ after(grammarAccess.getWhileStatementAccess().getWhileKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileStatement__Group__1__Impl
	rule__WhileStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileStatementAccess().getExpressionAssignment_1()); }
	(rule__WhileStatement__ExpressionAssignment_1)
	{ after(grammarAccess.getWhileStatementAccess().getExpressionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileStatementAccess().getBodyAssignment_2()); }
	(rule__WhileStatement__BodyAssignment_2)
	{ after(grammarAccess.getWhileStatementAccess().getBodyAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DoStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DoStatement__Group__0__Impl
	rule__DoStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DoStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoStatementAccess().getDoKeyword_0()); }
	'do'
	{ after(grammarAccess.getDoStatementAccess().getDoKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DoStatement__Group__1__Impl
	rule__DoStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DoStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoStatementAccess().getBodyAssignment_1()); }
	(rule__DoStatement__BodyAssignment_1)
	{ after(grammarAccess.getDoStatementAccess().getBodyAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DoStatement__Group__2__Impl
	rule__DoStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DoStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoStatementAccess().getWhileKeyword_2()); }
	'while'
	{ after(grammarAccess.getDoStatementAccess().getWhileKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DoStatement__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DoStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoStatementAccess().getExpressionAssignment_3()); }
	(rule__DoStatement__ExpressionAssignment_3)
	{ after(grammarAccess.getDoStatementAccess().getExpressionAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStatement__Group__0__Impl
	rule__ForStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStatementAccess().getForKeyword_0()); }
	'for'
	{ after(grammarAccess.getForStatementAccess().getForKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStatement__Group__1__Impl
	rule__ForStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStatementAccess().getGroup_1()); }
	(rule__ForStatement__Group_1__0)?
	{ after(grammarAccess.getForStatementAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStatement__Group__2__Impl
	rule__ForStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStatementAccess().getValueAssignment_2()); }
	(rule__ForStatement__ValueAssignment_2)
	{ after(grammarAccess.getForStatementAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStatement__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStatementAccess().getBodyAssignment_3()); }
	(rule__ForStatement__BodyAssignment_3)
	{ after(grammarAccess.getForStatementAccess().getBodyAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStatement__Group_1__0__Impl
	rule__ForStatement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStatementAccess().getIdAssignment_1_0()); }
	(rule__ForStatement__IdAssignment_1_0)
	{ after(grammarAccess.getForStatementAccess().getIdAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStatement__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStatementAccess().getInKeyword_1_1()); }
	'in'
	{ after(grammarAccess.getForStatementAccess().getInKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Actions__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actions__Group_1__0__Impl
	rule__Actions__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Actions__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionsAccess().getLeftParenthesisKeyword_1_0()); }
	'('
	{ after(grammarAccess.getActionsAccess().getLeftParenthesisKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actions__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actions__Group_1__1__Impl
	rule__Actions__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Actions__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionsAccess().getStatementsAssignment_1_1()); }
	(rule__Actions__StatementsAssignment_1_1)
	{ after(grammarAccess.getActionsAccess().getStatementsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actions__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actions__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Actions__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionsAccess().getRightParenthesisKeyword_1_2()); }
	')'
	{ after(grammarAccess.getActionsAccess().getRightParenthesisKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Actions__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actions__Group_3__0__Impl
	rule__Actions__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Actions__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionsAccess().getLeftParenthesisKeyword_3_0()); }
	'('
	{ after(grammarAccess.getActionsAccess().getLeftParenthesisKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actions__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actions__Group_3__1__Impl
	rule__Actions__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Actions__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionsAccess().getMatchesAssignment_3_1()); }
	(rule__Actions__MatchesAssignment_3_1)
	{ after(grammarAccess.getActionsAccess().getMatchesAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actions__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actions__Group_3__2__Impl
	rule__Actions__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Actions__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionsAccess().getMatchesAssignment_3_2()); }
	(rule__Actions__MatchesAssignment_3_2)*
	{ after(grammarAccess.getActionsAccess().getMatchesAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actions__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actions__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Actions__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionsAccess().getRightParenthesisKeyword_3_3()); }
	')'
	{ after(grammarAccess.getActionsAccess().getRightParenthesisKeyword_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Match__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Match__Group_0__0__Impl
	rule__Match__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchAccess().getIdAssignment_0_0()); }
	(rule__Match__IdAssignment_0_0)
	{ after(grammarAccess.getMatchAccess().getIdAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Match__Group_0__1__Impl
	rule__Match__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchAccess().getHyphenMinusGreaterThanSignKeyword_0_1()); }
	'->'
	{ after(grammarAccess.getMatchAccess().getHyphenMinusGreaterThanSignKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Match__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchAccess().getBodyAssignment_0_2()); }
	(rule__Match__BodyAssignment_0_2)
	{ after(grammarAccess.getMatchAccess().getBodyAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Match__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Match__Group_1__0__Impl
	rule__Match__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchAccess().getTypeAssignment_1_0()); }
	(rule__Match__TypeAssignment_1_0)
	{ after(grammarAccess.getMatchAccess().getTypeAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Match__Group_1__1__Impl
	rule__Match__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchAccess().getHyphenMinusGreaterThanSignKeyword_1_1()); }
	'->'
	{ after(grammarAccess.getMatchAccess().getHyphenMinusGreaterThanSignKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Match__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchAccess().getBodyAssignment_1_2()); }
	(rule__Match__BodyAssignment_1_2)
	{ after(grammarAccess.getMatchAccess().getBodyAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Match__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Match__Group_2__0__Impl
	rule__Match__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchAccess().getRegexpAssignment_2_0()); }
	(rule__Match__RegexpAssignment_2_0)
	{ after(grammarAccess.getMatchAccess().getRegexpAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Match__Group_2__1__Impl
	rule__Match__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchAccess().getHyphenMinusGreaterThanSignKeyword_2_1()); }
	'->'
	{ after(grammarAccess.getMatchAccess().getHyphenMinusGreaterThanSignKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Match__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchAccess().getBodyAssignment_2_2()); }
	(rule__Match__BodyAssignment_2_2)
	{ after(grammarAccess.getMatchAccess().getBodyAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Match__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Match__Group_3__0__Impl
	rule__Match__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchAccess().getObservableAssignment_3_0()); }
	(rule__Match__ObservableAssignment_3_0)
	{ after(grammarAccess.getMatchAccess().getObservableAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Match__Group_3__1__Impl
	rule__Match__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchAccess().getHyphenMinusGreaterThanSignKeyword_3_1()); }
	'->'
	{ after(grammarAccess.getMatchAccess().getHyphenMinusGreaterThanSignKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Match__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchAccess().getBodyAssignment_3_2()); }
	(rule__Match__BodyAssignment_3_2)
	{ after(grammarAccess.getMatchAccess().getBodyAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Match__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Match__Group_4__0__Impl
	rule__Match__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchAccess().getLiteralAssignment_4_0()); }
	(rule__Match__LiteralAssignment_4_0)
	{ after(grammarAccess.getMatchAccess().getLiteralAssignment_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Match__Group_4__1__Impl
	rule__Match__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchAccess().getHyphenMinusGreaterThanSignKeyword_4_1()); }
	'->'
	{ after(grammarAccess.getMatchAccess().getHyphenMinusGreaterThanSignKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Match__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchAccess().getBodyAssignment_4_2()); }
	(rule__Match__BodyAssignment_4_2)
	{ after(grammarAccess.getMatchAccess().getBodyAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Match__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Match__Group_5__0__Impl
	rule__Match__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchAccess().getTextAssignment_5_0()); }
	(rule__Match__TextAssignment_5_0)
	{ after(grammarAccess.getMatchAccess().getTextAssignment_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Match__Group_5__1__Impl
	rule__Match__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchAccess().getHyphenMinusGreaterThanSignKeyword_5_1()); }
	'->'
	{ after(grammarAccess.getMatchAccess().getHyphenMinusGreaterThanSignKeyword_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Match__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchAccess().getBodyAssignment_5_2()); }
	(rule__Match__BodyAssignment_5_2)
	{ after(grammarAccess.getMatchAccess().getBodyAssignment_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Match__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Match__Group_6__0__Impl
	rule__Match__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchAccess().getArgumentsAssignment_6_0()); }
	(rule__Match__ArgumentsAssignment_6_0)
	{ after(grammarAccess.getMatchAccess().getArgumentsAssignment_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Match__Group_6__1__Impl
	rule__Match__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchAccess().getHyphenMinusGreaterThanSignKeyword_6_1()); }
	'->'
	{ after(grammarAccess.getMatchAccess().getHyphenMinusGreaterThanSignKeyword_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_6__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Match__Group_6__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_6__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchAccess().getBodyAssignment_6_2()); }
	(rule__Match__BodyAssignment_6_2)
	{ after(grammarAccess.getMatchAccess().getBodyAssignment_6_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Match__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Match__Group_7__0__Impl
	rule__Match__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchAccess().getInt0Assignment_7_0()); }
	(rule__Match__Int0Assignment_7_0)
	{ after(grammarAccess.getMatchAccess().getInt0Assignment_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Match__Group_7__1__Impl
	rule__Match__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchAccess().getAlternatives_7_1()); }
	(rule__Match__Alternatives_7_1)?
	{ after(grammarAccess.getMatchAccess().getAlternatives_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_7__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Match__Group_7__2__Impl
	rule__Match__Group_7__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_7__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchAccess().getToKeyword_7_2()); }
	('to')
	{ after(grammarAccess.getMatchAccess().getToKeyword_7_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_7__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Match__Group_7__3__Impl
	rule__Match__Group_7__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_7__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchAccess().getInt1Assignment_7_3()); }
	(rule__Match__Int1Assignment_7_3)
	{ after(grammarAccess.getMatchAccess().getInt1Assignment_7_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_7__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Match__Group_7__4__Impl
	rule__Match__Group_7__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_7__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchAccess().getAlternatives_7_4()); }
	(rule__Match__Alternatives_7_4)?
	{ after(grammarAccess.getMatchAccess().getAlternatives_7_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_7__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Match__Group_7__5__Impl
	rule__Match__Group_7__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_7__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchAccess().getHyphenMinusGreaterThanSignKeyword_7_5()); }
	'->'
	{ after(grammarAccess.getMatchAccess().getHyphenMinusGreaterThanSignKeyword_7_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_7__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Match__Group_7__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_7__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchAccess().getBodyAssignment_7_6()); }
	(rule__Match__BodyAssignment_7_6)
	{ after(grammarAccess.getMatchAccess().getBodyAssignment_7_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Match__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Match__Group_8__0__Impl
	rule__Match__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchAccess().getInKeyword_8_0()); }
	'in'
	{ after(grammarAccess.getMatchAccess().getInKeyword_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Match__Group_8__1__Impl
	rule__Match__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchAccess().getSetAssignment_8_1()); }
	(rule__Match__SetAssignment_8_1)
	{ after(grammarAccess.getMatchAccess().getSetAssignment_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_8__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Match__Group_8__2__Impl
	rule__Match__Group_8__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_8__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchAccess().getHyphenMinusGreaterThanSignKeyword_8_2()); }
	'->'
	{ after(grammarAccess.getMatchAccess().getHyphenMinusGreaterThanSignKeyword_8_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_8__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Match__Group_8__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_8__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchAccess().getBodyAssignment_8_3()); }
	(rule__Match__BodyAssignment_8_3)
	{ after(grammarAccess.getMatchAccess().getBodyAssignment_8_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Match__Group_9__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Match__Group_9__0__Impl
	rule__Match__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_9__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchAccess().getQuantityAssignment_9_0()); }
	(rule__Match__QuantityAssignment_9_0)
	{ after(grammarAccess.getMatchAccess().getQuantityAssignment_9_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_9__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Match__Group_9__1__Impl
	rule__Match__Group_9__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_9__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchAccess().getHyphenMinusGreaterThanSignKeyword_9_1()); }
	'->'
	{ after(grammarAccess.getMatchAccess().getHyphenMinusGreaterThanSignKeyword_9_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_9__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Match__Group_9__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_9__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchAccess().getBodyAssignment_9_2()); }
	(rule__Match__BodyAssignment_9_2)
	{ after(grammarAccess.getMatchAccess().getBodyAssignment_9_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Match__Group_10__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Match__Group_10__0__Impl
	rule__Match__Group_10__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_10__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchAccess().getDateAssignment_10_0()); }
	(rule__Match__DateAssignment_10_0)
	{ after(grammarAccess.getMatchAccess().getDateAssignment_10_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_10__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Match__Group_10__1__Impl
	rule__Match__Group_10__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_10__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchAccess().getHyphenMinusGreaterThanSignKeyword_10_1()); }
	'->'
	{ after(grammarAccess.getMatchAccess().getHyphenMinusGreaterThanSignKeyword_10_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_10__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Match__Group_10__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_10__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchAccess().getBodyAssignment_10_2()); }
	(rule__Match__BodyAssignment_10_2)
	{ after(grammarAccess.getMatchAccess().getBodyAssignment_10_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Match__Group_11__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Match__Group_11__0__Impl
	rule__Match__Group_11__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_11__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchAccess().getExprAssignment_11_0()); }
	(rule__Match__ExprAssignment_11_0)
	{ after(grammarAccess.getMatchAccess().getExprAssignment_11_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_11__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Match__Group_11__1__Impl
	rule__Match__Group_11__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_11__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchAccess().getHyphenMinusGreaterThanSignKeyword_11_1()); }
	'->'
	{ after(grammarAccess.getMatchAccess().getHyphenMinusGreaterThanSignKeyword_11_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_11__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Match__Group_11__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_11__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchAccess().getBodyAssignment_11_2()); }
	(rule__Match__BodyAssignment_11_2)
	{ after(grammarAccess.getMatchAccess().getBodyAssignment_11_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Match__Group_12__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Match__Group_12__0__Impl
	rule__Match__Group_12__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_12__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchAccess().getNodataAssignment_12_0()); }
	(rule__Match__NodataAssignment_12_0)
	{ after(grammarAccess.getMatchAccess().getNodataAssignment_12_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_12__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Match__Group_12__1__Impl
	rule__Match__Group_12__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_12__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchAccess().getHyphenMinusGreaterThanSignKeyword_12_1()); }
	'->'
	{ after(grammarAccess.getMatchAccess().getHyphenMinusGreaterThanSignKeyword_12_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_12__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Match__Group_12__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_12__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchAccess().getBodyAssignment_12_2()); }
	(rule__Match__BodyAssignment_12_2)
	{ after(grammarAccess.getMatchAccess().getBodyAssignment_12_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Match__Group_13__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Match__Group_13__0__Impl
	rule__Match__Group_13__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_13__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchAccess().getStarAssignment_13_0()); }
	(rule__Match__StarAssignment_13_0)
	{ after(grammarAccess.getMatchAccess().getStarAssignment_13_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_13__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Match__Group_13__1__Impl
	rule__Match__Group_13__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_13__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchAccess().getHyphenMinusGreaterThanSignKeyword_13_1()); }
	'->'
	{ after(grammarAccess.getMatchAccess().getHyphenMinusGreaterThanSignKeyword_13_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_13__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Match__Group_13__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_13__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchAccess().getBodyAssignment_13_2()); }
	(rule__Match__BodyAssignment_13_2)
	{ after(grammarAccess.getMatchAccess().getBodyAssignment_13_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Match__Group_14__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Match__Group_14__0__Impl
	rule__Match__Group_14__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_14__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchAccess().getAnythingAssignment_14_0()); }
	(rule__Match__AnythingAssignment_14_0)
	{ after(grammarAccess.getMatchAccess().getAnythingAssignment_14_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_14__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Match__Group_14__1__Impl
	rule__Match__Group_14__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_14__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchAccess().getHyphenMinusGreaterThanSignKeyword_14_1()); }
	'->'
	{ after(grammarAccess.getMatchAccess().getHyphenMinusGreaterThanSignKeyword_14_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_14__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Match__Group_14__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Group_14__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMatchAccess().getBodyAssignment_14_2()); }
	(rule__Match__BodyAssignment_14_2)
	{ after(grammarAccess.getMatchAccess().getBodyAssignment_14_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Number__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Number__Group__0__Impl
	rule__Number__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberAccess().getAlternatives_0()); }
	(rule__Number__Alternatives_0)?
	{ after(grammarAccess.getNumberAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Number__Group__1__Impl
	rule__Number__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberAccess().getRealAssignment_1()); }
	(rule__Number__RealAssignment_1)
	{ after(grammarAccess.getNumberAccess().getRealAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Number__Group__2__Impl
	rule__Number__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberAccess().getLongAssignment_2()); }
	(rule__Number__LongAssignment_2)?
	{ after(grammarAccess.getNumberAccess().getLongAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Number__Group__3__Impl
	rule__Number__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberAccess().getGroup_3()); }
	(rule__Number__Group_3__0)?
	{ after(grammarAccess.getNumberAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Number__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberAccess().getGroup_4()); }
	(rule__Number__Group_4__0)?
	{ after(grammarAccess.getNumberAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Number__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Number__Group_3__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberAccess().getGroup_3_0()); }
	(rule__Number__Group_3_0__0)
	{ after(grammarAccess.getNumberAccess().getGroup_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Number__Group_3_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Number__Group_3_0__0__Impl
	rule__Number__Group_3_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group_3_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberAccess().getDecimalAssignment_3_0_0()); }
	(rule__Number__DecimalAssignment_3_0_0)
	{ after(grammarAccess.getNumberAccess().getDecimalAssignment_3_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group_3_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Number__Group_3_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group_3_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberAccess().getDecimalPartAssignment_3_0_1()); }
	(rule__Number__DecimalPartAssignment_3_0_1)
	{ after(grammarAccess.getNumberAccess().getDecimalPartAssignment_3_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Number__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Number__Group_4__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberAccess().getGroup_4_0()); }
	(rule__Number__Group_4_0__0)
	{ after(grammarAccess.getNumberAccess().getGroup_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Number__Group_4_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Number__Group_4_0__0__Impl
	rule__Number__Group_4_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group_4_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberAccess().getExponentialAssignment_4_0_0()); }
	(rule__Number__ExponentialAssignment_4_0_0)
	{ after(grammarAccess.getNumberAccess().getExponentialAssignment_4_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group_4_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Number__Group_4_0__1__Impl
	rule__Number__Group_4_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group_4_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberAccess().getAlternatives_4_0_1()); }
	(rule__Number__Alternatives_4_0_1)?
	{ after(grammarAccess.getNumberAccess().getAlternatives_4_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group_4_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Number__Group_4_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group_4_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberAccess().getExpAssignment_4_0_2()); }
	(rule__Number__ExpAssignment_4_0_2)
	{ after(grammarAccess.getNumberAccess().getExpAssignment_4_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Date__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Date__Group__0__Impl
	rule__Date__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateAccess().getYearAssignment_0()); }
	(rule__Date__YearAssignment_0)
	{ after(grammarAccess.getDateAccess().getYearAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Date__Group__1__Impl
	rule__Date__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateAccess().getAlternatives_1()); }
	(rule__Date__Alternatives_1)?
	{ after(grammarAccess.getDateAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Date__Group__2__Impl
	rule__Date__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateAccess().getHyphenMinusKeyword_2()); }
	'-'
	{ after(grammarAccess.getDateAccess().getHyphenMinusKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Date__Group__3__Impl
	rule__Date__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateAccess().getMonthAssignment_3()); }
	(rule__Date__MonthAssignment_3)
	{ after(grammarAccess.getDateAccess().getMonthAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Date__Group__4__Impl
	rule__Date__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateAccess().getHyphenMinusKeyword_4()); }
	'-'
	{ after(grammarAccess.getDateAccess().getHyphenMinusKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Date__Group__5__Impl
	rule__Date__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateAccess().getDayAssignment_5()); }
	(rule__Date__DayAssignment_5)
	{ after(grammarAccess.getDateAccess().getDayAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Date__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateAccess().getGroup_6()); }
	(rule__Date__Group_6__0)?
	{ after(grammarAccess.getDateAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Date__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Date__Group_6__0__Impl
	rule__Date__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateAccess().getHourAssignment_6_0()); }
	(rule__Date__HourAssignment_6_0)
	{ after(grammarAccess.getDateAccess().getHourAssignment_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Date__Group_6__1__Impl
	rule__Date__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateAccess().getColonKeyword_6_1()); }
	':'
	{ after(grammarAccess.getDateAccess().getColonKeyword_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group_6__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Date__Group_6__2__Impl
	rule__Date__Group_6__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group_6__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateAccess().getMinAssignment_6_2()); }
	(rule__Date__MinAssignment_6_2)
	{ after(grammarAccess.getDateAccess().getMinAssignment_6_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group_6__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Date__Group_6__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group_6__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateAccess().getGroup_6_3()); }
	(rule__Date__Group_6_3__0)?
	{ after(grammarAccess.getDateAccess().getGroup_6_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Date__Group_6_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Date__Group_6_3__0__Impl
	rule__Date__Group_6_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group_6_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateAccess().getColonKeyword_6_3_0()); }
	':'
	{ after(grammarAccess.getDateAccess().getColonKeyword_6_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group_6_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Date__Group_6_3__1__Impl
	rule__Date__Group_6_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group_6_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateAccess().getSecAssignment_6_3_1()); }
	(rule__Date__SecAssignment_6_3_1)
	{ after(grammarAccess.getDateAccess().getSecAssignment_6_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group_6_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Date__Group_6_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group_6_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateAccess().getGroup_6_3_2()); }
	(rule__Date__Group_6_3_2__0)?
	{ after(grammarAccess.getDateAccess().getGroup_6_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Date__Group_6_3_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Date__Group_6_3_2__0__Impl
	rule__Date__Group_6_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group_6_3_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateAccess().getFullStopKeyword_6_3_2_0()); }
	'.'
	{ after(grammarAccess.getDateAccess().getFullStopKeyword_6_3_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group_6_3_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Date__Group_6_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group_6_3_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateAccess().getMsAssignment_6_3_2_1()); }
	(rule__Date__MsAssignment_6_3_2_1)
	{ after(grammarAccess.getDateAccess().getMsAssignment_6_3_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PathName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PathName__Group__0__Impl
	rule__PathName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PathName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPathNameAccess().getLOWERCASE_IDTerminalRuleCall_0()); }
	RULE_LOWERCASE_ID
	{ after(grammarAccess.getPathNameAccess().getLOWERCASE_IDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PathName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PathName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PathName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPathNameAccess().getGroup_1()); }
	(rule__PathName__Group_1__0)*
	{ after(grammarAccess.getPathNameAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PathName__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PathName__Group_1__0__Impl
	rule__PathName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PathName__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPathNameAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getPathNameAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PathName__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PathName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PathName__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPathNameAccess().getLOWERCASE_IDTerminalRuleCall_1_1()); }
	RULE_LOWERCASE_ID
	{ after(grammarAccess.getPathNameAccess().getLOWERCASE_IDTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Path__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Path__Group__0__Impl
	rule__Path__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Path__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPathAccess().getAlternatives_0()); }
	(rule__Path__Alternatives_0)
	{ after(grammarAccess.getPathAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Path__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Path__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Path__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPathAccess().getGroup_1()); }
	(rule__Path__Group_1__0)*
	{ after(grammarAccess.getPathAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Path__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Path__Group_1__0__Impl
	rule__Path__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Path__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPathAccess().getAlternatives_1_0()); }
	(rule__Path__Alternatives_1_0)
	{ after(grammarAccess.getPathAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Path__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Path__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Path__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPathAccess().getAlternatives_1_1()); }
	(rule__Path__Alternatives_1_1)
	{ after(grammarAccess.getPathAccess().getAlternatives_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VersionNumber__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VersionNumber__Group__0__Impl
	rule__VersionNumber__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VersionNumber__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVersionNumberAccess().getINTTerminalRuleCall_0()); }
	RULE_INT
	{ after(grammarAccess.getVersionNumberAccess().getINTTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VersionNumber__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VersionNumber__Group__1__Impl
	rule__VersionNumber__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VersionNumber__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVersionNumberAccess().getGroup_1()); }
	(rule__VersionNumber__Group_1__0)?
	{ after(grammarAccess.getVersionNumberAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VersionNumber__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VersionNumber__Group__2__Impl
	rule__VersionNumber__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VersionNumber__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVersionNumberAccess().getHyphenMinusKeyword_2()); }
	('-')?
	{ after(grammarAccess.getVersionNumberAccess().getHyphenMinusKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VersionNumber__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VersionNumber__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VersionNumber__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVersionNumberAccess().getAlternatives_3()); }
	(rule__VersionNumber__Alternatives_3)?
	{ after(grammarAccess.getVersionNumberAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VersionNumber__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VersionNumber__Group_1__0__Impl
	rule__VersionNumber__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VersionNumber__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVersionNumberAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getVersionNumberAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VersionNumber__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VersionNumber__Group_1__1__Impl
	rule__VersionNumber__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VersionNumber__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVersionNumberAccess().getINTTerminalRuleCall_1_1()); }
	RULE_INT
	{ after(grammarAccess.getVersionNumberAccess().getINTTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VersionNumber__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VersionNumber__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VersionNumber__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVersionNumberAccess().getGroup_1_2()); }
	(rule__VersionNumber__Group_1_2__0)?
	{ after(grammarAccess.getVersionNumberAccess().getGroup_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VersionNumber__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VersionNumber__Group_1_2__0__Impl
	rule__VersionNumber__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VersionNumber__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVersionNumberAccess().getFullStopKeyword_1_2_0()); }
	'.'
	{ after(grammarAccess.getVersionNumberAccess().getFullStopKeyword_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VersionNumber__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VersionNumber__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VersionNumber__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVersionNumberAccess().getINTTerminalRuleCall_1_2_1()); }
	RULE_INT
	{ after(grammarAccess.getVersionNumberAccess().getINTTerminalRuleCall_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Preamble__UnorderedGroup_2
	@init {
		int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getPreambleAccess().getUnorderedGroup_2());
	}
:
	rule__Preamble__UnorderedGroup_2__0
	?
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getPreambleAccess().getUnorderedGroup_2());
	restoreStackSize(stackSize);
}

rule__Preamble__UnorderedGroup_2__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
	}
:
		(
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getPreambleAccess().getUnorderedGroup_2(), 0)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getPreambleAccess().getUnorderedGroup_2(), 0);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getPreambleAccess().getGroup_2_0()); }
					(rule__Preamble__Group_2_0__0)
					{ after(grammarAccess.getPreambleAccess().getGroup_2_0()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getPreambleAccess().getUnorderedGroup_2(), 1)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getPreambleAccess().getUnorderedGroup_2(), 1);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getPreambleAccess().getGroup_2_1()); }
					(rule__Preamble__Group_2_1__0)
					{ after(grammarAccess.getPreambleAccess().getGroup_2_1()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getPreambleAccess().getUnorderedGroup_2(), 2)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getPreambleAccess().getUnorderedGroup_2(), 2);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getPreambleAccess().getGroup_2_2()); }
					(rule__Preamble__Group_2_2__0)
					{ after(grammarAccess.getPreambleAccess().getGroup_2_2()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getPreambleAccess().getUnorderedGroup_2(), 3)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getPreambleAccess().getUnorderedGroup_2(), 3);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getPreambleAccess().getGroup_2_3()); }
					(rule__Preamble__Group_2_3__0)
					{ after(grammarAccess.getPreambleAccess().getGroup_2_3()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getPreambleAccess().getUnorderedGroup_2(), 4)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getPreambleAccess().getUnorderedGroup_2(), 4);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getPreambleAccess().getGroup_2_4()); }
					(rule__Preamble__Group_2_4__0)
					{ after(grammarAccess.getPreambleAccess().getGroup_2_4()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getPreambleAccess().getUnorderedGroup_2(), 5)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getPreambleAccess().getUnorderedGroup_2(), 5);
				}
				{
					selected = true;
				}
				(
					(
						{ before(grammarAccess.getPreambleAccess().getGroup_2_5()); }
						(rule__Preamble__Group_2_5__0)
						{ after(grammarAccess.getPreambleAccess().getGroup_2_5()); }
					)
					(
						{ before(grammarAccess.getPreambleAccess().getGroup_2_5()); }
						((rule__Preamble__Group_2_5__0)=>rule__Preamble__Group_2_5__0)*
						{ after(grammarAccess.getPreambleAccess().getGroup_2_5()); }
					)
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getPreambleAccess().getUnorderedGroup_2(), 6)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getPreambleAccess().getUnorderedGroup_2(), 6);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getPreambleAccess().getGroup_2_6()); }
					(rule__Preamble__Group_2_6__0)
					{ after(grammarAccess.getPreambleAccess().getGroup_2_6()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getPreambleAccess().getUnorderedGroup_2(), 7)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getPreambleAccess().getUnorderedGroup_2(), 7);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getPreambleAccess().getGroup_2_7()); }
					(rule__Preamble__Group_2_7__0)
					{ after(grammarAccess.getPreambleAccess().getGroup_2_7()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getPreambleAccess().getUnorderedGroup_2(), 8)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getPreambleAccess().getUnorderedGroup_2(), 8);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getPreambleAccess().getGroup_2_8()); }
					(rule__Preamble__Group_2_8__0)
					{ after(grammarAccess.getPreambleAccess().getGroup_2_8()); }
				)
			)
		)
		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPreambleAccess().getUnorderedGroup_2());
	restoreStackSize(stackSize);
}

rule__Preamble__UnorderedGroup_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Preamble__UnorderedGroup_2__Impl
	rule__Preamble__UnorderedGroup_2__1?
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__UnorderedGroup_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Preamble__UnorderedGroup_2__Impl
	rule__Preamble__UnorderedGroup_2__2?
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__UnorderedGroup_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Preamble__UnorderedGroup_2__Impl
	rule__Preamble__UnorderedGroup_2__3?
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__UnorderedGroup_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Preamble__UnorderedGroup_2__Impl
	rule__Preamble__UnorderedGroup_2__4?
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__UnorderedGroup_2__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Preamble__UnorderedGroup_2__Impl
	rule__Preamble__UnorderedGroup_2__5?
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__UnorderedGroup_2__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Preamble__UnorderedGroup_2__Impl
	rule__Preamble__UnorderedGroup_2__6?
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__UnorderedGroup_2__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Preamble__UnorderedGroup_2__Impl
	rule__Preamble__UnorderedGroup_2__7?
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__UnorderedGroup_2__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Preamble__UnorderedGroup_2__Impl
	rule__Preamble__UnorderedGroup_2__8?
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__UnorderedGroup_2__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Preamble__UnorderedGroup_2__Impl
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__PreambleAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getPreamblePreambleParserRuleCall_1_0()); }
		rulePreamble
		{ after(grammarAccess.getModelAccess().getPreamblePreambleParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__DefinitionsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getDefinitionsDefinitionParserRuleCall_2_0()); }
		ruleDefinition
		{ after(grammarAccess.getModelAccess().getDefinitionsDefinitionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__NameAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPreambleAccess().getNamePathNameParserRuleCall_1_1_0()); }
		rulePathName
		{ after(grammarAccess.getPreambleAccess().getNamePathNameParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__ImportsAssignment_2_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPreambleAccess().getImportsPathNameParserRuleCall_2_0_1_0()); }
		rulePathName
		{ after(grammarAccess.getPreambleAccess().getImportsPathNameParserRuleCall_2_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__ImportsAssignment_2_0_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPreambleAccess().getImportsPathNameParserRuleCall_2_0_2_1_0()); }
		rulePathName
		{ after(grammarAccess.getPreambleAccess().getImportsPathNameParserRuleCall_2_0_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__WorldviewAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPreambleAccess().getWorldviewPathNameParserRuleCall_2_1_1_0()); }
		rulePathName
		{ after(grammarAccess.getPreambleAccess().getWorldviewPathNameParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__LabelAssignment_2_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPreambleAccess().getLabelAlternatives_2_2_1_0()); }
		(rule__Preamble__LabelAlternatives_2_2_1_0)
		{ after(grammarAccess.getPreambleAccess().getLabelAlternatives_2_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__DescriptionAssignment_2_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPreambleAccess().getDescriptionSTRINGTerminalRuleCall_2_3_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getPreambleAccess().getDescriptionSTRINGTerminalRuleCall_2_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__PermissionsAssignment_2_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPreambleAccess().getPermissionsSTRINGTerminalRuleCall_2_4_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getPreambleAccess().getPermissionsSTRINGTerminalRuleCall_2_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__AuthorsAssignment_2_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPreambleAccess().getAuthorsSTRINGTerminalRuleCall_2_5_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getPreambleAccess().getAuthorsSTRINGTerminalRuleCall_2_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__VersionAssignment_2_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPreambleAccess().getVersionVersionNumberParserRuleCall_2_6_1_0()); }
		ruleVersionNumber
		{ after(grammarAccess.getPreambleAccess().getVersionVersionNumberParserRuleCall_2_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__CreatedAssignment_2_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPreambleAccess().getCreatedDateParserRuleCall_2_7_1_0()); }
		ruleDate
		{ after(grammarAccess.getPreambleAccess().getCreatedDateParserRuleCall_2_7_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__CreatecommentAssignment_2_7_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPreambleAccess().getCreatecommentSTRINGTerminalRuleCall_2_7_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getPreambleAccess().getCreatecommentSTRINGTerminalRuleCall_2_7_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__ModifiedAssignment_2_8_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPreambleAccess().getModifiedDateParserRuleCall_2_8_1_0()); }
		ruleDate
		{ after(grammarAccess.getPreambleAccess().getModifiedDateParserRuleCall_2_8_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Preamble__ModcommentAssignment_2_8_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPreambleAccess().getModcommentSTRINGTerminalRuleCall_2_8_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getPreambleAccess().getModcommentSTRINGTerminalRuleCall_2_8_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__AnnotationsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
		ruleAnnotation
		{ after(grammarAccess.getDefinitionAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionAccess().getNameLOWERCASE_IDTerminalRuleCall_2_0()); }
		RULE_LOWERCASE_ID
		{ after(grammarAccess.getDefinitionAccess().getNameLOWERCASE_IDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__ArgumentsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionAccess().getArgumentsArgumentDeclarationParserRuleCall_3_0()); }
		ruleArgumentDeclaration
		{ after(grammarAccess.getDefinitionAccess().getArgumentsArgumentDeclarationParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__BodyAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionAccess().getBodyBodyParserRuleCall_5_0()); }
		ruleBody
		{ after(grammarAccess.getDefinitionAccess().getBodyBodyParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentDeclaration__IdsAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentDeclarationAccess().getIdsLOWERCASE_IDTerminalRuleCall_2_0_0()); }
		RULE_LOWERCASE_ID
		{ after(grammarAccess.getArgumentDeclarationAccess().getIdsLOWERCASE_IDTerminalRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentDeclaration__IdsAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentDeclarationAccess().getIdsLOWERCASE_IDTerminalRuleCall_2_1_1_0()); }
		RULE_LOWERCASE_ID
		{ after(grammarAccess.getArgumentDeclarationAccess().getIdsLOWERCASE_IDTerminalRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__PairsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterListAccess().getPairsKeyValuePairParserRuleCall_0_0()); }
		ruleKeyValuePair
		{ after(grammarAccess.getParameterListAccess().getPairsKeyValuePairParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__PairsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterListAccess().getPairsKeyValuePairParserRuleCall_1_1_0()); }
		ruleKeyValuePair
		{ after(grammarAccess.getParameterListAccess().getPairsKeyValuePairParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyValuePair__NameAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getKeyValuePairAccess().getNameLOWERCASE_IDTerminalRuleCall_0_0_0()); }
		RULE_LOWERCASE_ID
		{ after(grammarAccess.getKeyValuePairAccess().getNameLOWERCASE_IDTerminalRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyValuePair__InteractiveAssignment_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getKeyValuePairAccess().getInteractiveEqualsSignQuestionMarkKeyword_0_1_0_0()); }
		(
			{ before(grammarAccess.getKeyValuePairAccess().getInteractiveEqualsSignQuestionMarkKeyword_0_1_0_0()); }
			'=?'
			{ after(grammarAccess.getKeyValuePairAccess().getInteractiveEqualsSignQuestionMarkKeyword_0_1_0_0()); }
		)
		{ after(grammarAccess.getKeyValuePairAccess().getInteractiveEqualsSignQuestionMarkKeyword_0_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyValuePair__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getKeyValuePairAccess().getValueValueParserRuleCall_1_0()); }
		ruleValue
		{ after(grammarAccess.getKeyValuePairAccess().getValueValueParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__ArgvalueAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getArgvalueARGVALUETerminalRuleCall_0_0()); }
		RULE_ARGVALUE
		{ after(grammarAccess.getValueAccess().getArgvalueARGVALUETerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__LiteralAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getLiteralLiteralParserRuleCall_1_0()); }
		ruleLiteral
		{ after(grammarAccess.getValueAccess().getLiteralLiteralParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__IdAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getIdPathNameParserRuleCall_2_0()); }
		rulePathName
		{ after(grammarAccess.getValueAccess().getIdPathNameParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__UrnAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getUrnUrnIdParserRuleCall_3_0()); }
		ruleUrnId
		{ after(grammarAccess.getValueAccess().getUrnUrnIdParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__ListAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getListListParserRuleCall_4_0()); }
		ruleList
		{ after(grammarAccess.getValueAccess().getListListParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__MapAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getMapMapParserRuleCall_5_0()); }
		ruleMap
		{ after(grammarAccess.getValueAccess().getMapMapParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__ObservableAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getObservableOBSERVABLETerminalRuleCall_6_0()); }
		RULE_OBSERVABLE
		{ after(grammarAccess.getValueAccess().getObservableOBSERVABLETerminalRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__ExpressionAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getExpressionEXPRTerminalRuleCall_7_0()); }
		RULE_EXPR
		{ after(grammarAccess.getValueAccess().getExpressionEXPRTerminalRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__TableAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getTableLookupTableParserRuleCall_8_0()); }
		ruleLookupTable
		{ after(grammarAccess.getValueAccess().getTableLookupTableParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnnotationAccess().getNameANNOTATION_IDTerminalRuleCall_0_0()); }
		RULE_ANNOTATION_ID
		{ after(grammarAccess.getAnnotationAccess().getNameANNOTATION_IDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__ParametersAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnnotationAccess().getParametersParameterListParserRuleCall_1_1_0()); }
		ruleParameterList
		{ after(grammarAccess.getAnnotationAccess().getParametersParameterListParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__List__ContentsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListAccess().getContentsValueParserRuleCall_2_0()); }
		ruleValue
		{ after(grammarAccess.getListAccess().getContentsValueParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Map__EntriesAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMapAccess().getEntriesMapEntryParserRuleCall_2_0_0()); }
		ruleMapEntry
		{ after(grammarAccess.getMapAccess().getEntriesMapEntryParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Map__EntriesAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMapAccess().getEntriesMapEntryParserRuleCall_2_1_1_0()); }
		ruleMapEntry
		{ after(grammarAccess.getMapAccess().getEntriesMapEntryParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapEntry__ClassifierAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMapEntryAccess().getClassifierClassifierParserRuleCall_0_0()); }
		ruleClassifier
		{ after(grammarAccess.getMapEntryAccess().getClassifierClassifierParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapEntry__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMapEntryAccess().getValueValueParserRuleCall_2_0()); }
		ruleValue
		{ after(grammarAccess.getMapEntryAccess().getValueValueParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Classifier__BooleanAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassifierAccess().getBooleanTrueKeyword_0_0_0()); }
		(
			{ before(grammarAccess.getClassifierAccess().getBooleanTrueKeyword_0_0_0()); }
			'true'
			{ after(grammarAccess.getClassifierAccess().getBooleanTrueKeyword_0_0_0()); }
		)
		{ after(grammarAccess.getClassifierAccess().getBooleanTrueKeyword_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Classifier__BooleanAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassifierAccess().getBooleanFalseKeyword_0_1_0()); }
		(
			{ before(grammarAccess.getClassifierAccess().getBooleanFalseKeyword_0_1_0()); }
			'false'
			{ after(grammarAccess.getClassifierAccess().getBooleanFalseKeyword_0_1_0()); }
		)
		{ after(grammarAccess.getClassifierAccess().getBooleanFalseKeyword_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Classifier__Int0Assignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassifierAccess().getInt0NumberParserRuleCall_1_0_0()); }
		ruleNumber
		{ after(grammarAccess.getClassifierAccess().getInt0NumberParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Classifier__LeftLimitAssignment_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassifierAccess().getLeftLimitInclusiveKeyword_1_1_0_0()); }
		(
			{ before(grammarAccess.getClassifierAccess().getLeftLimitInclusiveKeyword_1_1_0_0()); }
			'inclusive'
			{ after(grammarAccess.getClassifierAccess().getLeftLimitInclusiveKeyword_1_1_0_0()); }
		)
		{ after(grammarAccess.getClassifierAccess().getLeftLimitInclusiveKeyword_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Classifier__Int1Assignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassifierAccess().getInt1NumberParserRuleCall_1_3_0()); }
		ruleNumber
		{ after(grammarAccess.getClassifierAccess().getInt1NumberParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Classifier__RightLimitAssignment_1_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassifierAccess().getRightLimitInclusiveKeyword_1_4_0_0()); }
		(
			{ before(grammarAccess.getClassifierAccess().getRightLimitInclusiveKeyword_1_4_0_0()); }
			'inclusive'
			{ after(grammarAccess.getClassifierAccess().getRightLimitInclusiveKeyword_1_4_0_0()); }
		)
		{ after(grammarAccess.getClassifierAccess().getRightLimitInclusiveKeyword_1_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Classifier__NumAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassifierAccess().getNumNumberParserRuleCall_2_0()); }
		ruleNumber
		{ after(grammarAccess.getClassifierAccess().getNumNumberParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Classifier__SetAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassifierAccess().getSetListParserRuleCall_3_1_0()); }
		ruleList
		{ after(grammarAccess.getClassifierAccess().getSetListParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Classifier__StringAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassifierAccess().getStringSTRINGTerminalRuleCall_4_0()); }
		RULE_STRING
		{ after(grammarAccess.getClassifierAccess().getStringSTRINGTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Classifier__ObservableAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassifierAccess().getObservableOBSERVABLETerminalRuleCall_5_0()); }
		RULE_OBSERVABLE
		{ after(grammarAccess.getClassifierAccess().getObservableOBSERVABLETerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Classifier__IdAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassifierAccess().getIdLOWERCASE_IDTerminalRuleCall_6_0()); }
		RULE_LOWERCASE_ID
		{ after(grammarAccess.getClassifierAccess().getIdLOWERCASE_IDTerminalRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Classifier__OpAssignment_7_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassifierAccess().getOpREL_OPERATORParserRuleCall_7_0_0()); }
		ruleREL_OPERATOR
		{ after(grammarAccess.getClassifierAccess().getOpREL_OPERATORParserRuleCall_7_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Classifier__ExpressionAssignment_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassifierAccess().getExpressionNumberParserRuleCall_7_1_0()); }
		ruleNumber
		{ after(grammarAccess.getClassifierAccess().getExpressionNumberParserRuleCall_7_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Classifier__NodataAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassifierAccess().getNodataUnknownKeyword_8_0()); }
		(
			{ before(grammarAccess.getClassifierAccess().getNodataUnknownKeyword_8_0()); }
			'unknown'
			{ after(grammarAccess.getClassifierAccess().getNodataUnknownKeyword_8_0()); }
		)
		{ after(grammarAccess.getClassifierAccess().getNodataUnknownKeyword_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Classifier__StarAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassifierAccess().getStarAsteriskKeyword_9_0()); }
		(
			{ before(grammarAccess.getClassifierAccess().getStarAsteriskKeyword_9_0()); }
			'*'
			{ after(grammarAccess.getClassifierAccess().getStarAsteriskKeyword_9_0()); }
		)
		{ after(grammarAccess.getClassifierAccess().getStarAsteriskKeyword_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LookupTable__TableAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLookupTableAccess().getTableTableParserRuleCall_2_0()); }
		ruleTable
		{ after(grammarAccess.getLookupTableAccess().getTableTableParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__HeadersAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableAccess().getHeadersHeaderRowParserRuleCall_0_0_0()); }
		ruleHeaderRow
		{ after(grammarAccess.getTableAccess().getHeadersHeaderRowParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__RowsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableAccess().getRowsTableRowParserRuleCall_1_0()); }
		ruleTableRow
		{ after(grammarAccess.getTableAccess().getRowsTableRowParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__RowsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableAccess().getRowsTableRowParserRuleCall_2_1_0()); }
		ruleTableRow
		{ after(grammarAccess.getTableAccess().getRowsTableRowParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HeaderRow__ElementsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHeaderRowAccess().getElementsAlternatives_0_0()); }
		(rule__HeaderRow__ElementsAlternatives_0_0)
		{ after(grammarAccess.getHeaderRowAccess().getElementsAlternatives_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HeaderRow__ElementsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHeaderRowAccess().getElementsAlternatives_1_1_0()); }
		(rule__HeaderRow__ElementsAlternatives_1_1_0)
		{ after(grammarAccess.getHeaderRowAccess().getElementsAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TableRow__ElementsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableRowAccess().getElementsTableClassifierParserRuleCall_0_0()); }
		ruleTableClassifier
		{ after(grammarAccess.getTableRowAccess().getElementsTableClassifierParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TableRow__ElementsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableRowAccess().getElementsTableClassifierParserRuleCall_1_1_0()); }
		ruleTableClassifier
		{ after(grammarAccess.getTableRowAccess().getElementsTableClassifierParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TableClassifier__BooleanAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableClassifierAccess().getBooleanTrueKeyword_0_0_0()); }
		(
			{ before(grammarAccess.getTableClassifierAccess().getBooleanTrueKeyword_0_0_0()); }
			'true'
			{ after(grammarAccess.getTableClassifierAccess().getBooleanTrueKeyword_0_0_0()); }
		)
		{ after(grammarAccess.getTableClassifierAccess().getBooleanTrueKeyword_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TableClassifier__BooleanAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableClassifierAccess().getBooleanFalseKeyword_0_1_0()); }
		(
			{ before(grammarAccess.getTableClassifierAccess().getBooleanFalseKeyword_0_1_0()); }
			'false'
			{ after(grammarAccess.getTableClassifierAccess().getBooleanFalseKeyword_0_1_0()); }
		)
		{ after(grammarAccess.getTableClassifierAccess().getBooleanFalseKeyword_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TableClassifier__NumAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableClassifierAccess().getNumNumberParserRuleCall_1_0()); }
		ruleNumber
		{ after(grammarAccess.getTableClassifierAccess().getNumNumberParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TableClassifier__StringAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableClassifierAccess().getStringSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getTableClassifierAccess().getStringSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TableClassifier__ObservableAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableClassifierAccess().getObservableOBSERVABLETerminalRuleCall_3_0()); }
		RULE_OBSERVABLE
		{ after(grammarAccess.getTableClassifierAccess().getObservableOBSERVABLETerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TableClassifier__OpAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableClassifierAccess().getOpREL_OPERATORParserRuleCall_4_0_0()); }
		ruleREL_OPERATOR
		{ after(grammarAccess.getTableClassifierAccess().getOpREL_OPERATORParserRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TableClassifier__ExpressionAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableClassifierAccess().getExpressionNumberParserRuleCall_4_1_0()); }
		ruleNumber
		{ after(grammarAccess.getTableClassifierAccess().getExpressionNumberParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TableClassifier__Int0Assignment_5_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableClassifierAccess().getInt0NumberParserRuleCall_5_0_0()); }
		ruleNumber
		{ after(grammarAccess.getTableClassifierAccess().getInt0NumberParserRuleCall_5_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TableClassifier__LeftLimitAssignment_5_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableClassifierAccess().getLeftLimitInclusiveKeyword_5_1_0_0()); }
		(
			{ before(grammarAccess.getTableClassifierAccess().getLeftLimitInclusiveKeyword_5_1_0_0()); }
			'inclusive'
			{ after(grammarAccess.getTableClassifierAccess().getLeftLimitInclusiveKeyword_5_1_0_0()); }
		)
		{ after(grammarAccess.getTableClassifierAccess().getLeftLimitInclusiveKeyword_5_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TableClassifier__Int1Assignment_5_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableClassifierAccess().getInt1NumberParserRuleCall_5_3_0()); }
		ruleNumber
		{ after(grammarAccess.getTableClassifierAccess().getInt1NumberParserRuleCall_5_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TableClassifier__RightLimitAssignment_5_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableClassifierAccess().getRightLimitInclusiveKeyword_5_4_0_0()); }
		(
			{ before(grammarAccess.getTableClassifierAccess().getRightLimitInclusiveKeyword_5_4_0_0()); }
			'inclusive'
			{ after(grammarAccess.getTableClassifierAccess().getRightLimitInclusiveKeyword_5_4_0_0()); }
		)
		{ after(grammarAccess.getTableClassifierAccess().getRightLimitInclusiveKeyword_5_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TableClassifier__SetAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableClassifierAccess().getSetListParserRuleCall_6_1_0()); }
		ruleList
		{ after(grammarAccess.getTableClassifierAccess().getSetListParserRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TableClassifier__QuantityAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableClassifierAccess().getQuantityQuantityParserRuleCall_7_0()); }
		ruleQuantity
		{ after(grammarAccess.getTableClassifierAccess().getQuantityQuantityParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TableClassifier__DateAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableClassifierAccess().getDateDateParserRuleCall_8_0()); }
		ruleDate
		{ after(grammarAccess.getTableClassifierAccess().getDateDateParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TableClassifier__ExprAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableClassifierAccess().getExprEXPRTerminalRuleCall_9_0()); }
		RULE_EXPR
		{ after(grammarAccess.getTableClassifierAccess().getExprEXPRTerminalRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TableClassifier__NodataAssignment_10
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableClassifierAccess().getNodataUnknownKeyword_10_0()); }
		(
			{ before(grammarAccess.getTableClassifierAccess().getNodataUnknownKeyword_10_0()); }
			'unknown'
			{ after(grammarAccess.getTableClassifierAccess().getNodataUnknownKeyword_10_0()); }
		)
		{ after(grammarAccess.getTableClassifierAccess().getNodataUnknownKeyword_10_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TableClassifier__StarAssignment_11
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableClassifierAccess().getStarAsteriskKeyword_11_0()); }
		(
			{ before(grammarAccess.getTableClassifierAccess().getStarAsteriskKeyword_11_0()); }
			'*'
			{ after(grammarAccess.getTableClassifierAccess().getStarAsteriskKeyword_11_0()); }
		)
		{ after(grammarAccess.getTableClassifierAccess().getStarAsteriskKeyword_11_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TableClassifier__AnythingAssignment_12
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableClassifierAccess().getAnythingNumberSignKeyword_12_0()); }
		(
			{ before(grammarAccess.getTableClassifierAccess().getAnythingNumberSignKeyword_12_0()); }
			'#'
			{ after(grammarAccess.getTableClassifierAccess().getAnythingNumberSignKeyword_12_0()); }
		)
		{ after(grammarAccess.getTableClassifierAccess().getAnythingNumberSignKeyword_12_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Quantity__ValueAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQuantityAccess().getValueNumberParserRuleCall_0_0()); }
		ruleNumber
		{ after(grammarAccess.getQuantityAccess().getValueNumberParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Quantity__OverAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQuantityAccess().getOverSolidusKeyword_1_0_0()); }
		(
			{ before(grammarAccess.getQuantityAccess().getOverSolidusKeyword_1_0_0()); }
			'/'
			{ after(grammarAccess.getQuantityAccess().getOverSolidusKeyword_1_0_0()); }
		)
		{ after(grammarAccess.getQuantityAccess().getOverSolidusKeyword_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Quantity__UnitAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQuantityAccess().getUnitUnitParserRuleCall_2_0_0()); }
		ruleUnit
		{ after(grammarAccess.getQuantityAccess().getUnitUnitParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Quantity__CurrencyAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQuantityAccess().getCurrencyCurrencyParserRuleCall_2_1_0()); }
		ruleCurrency
		{ after(grammarAccess.getQuantityAccess().getCurrencyCurrencyParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitElement__IdAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitElementAccess().getIdAlternatives_0_0()); }
		(rule__UnitElement__IdAlternatives_0_0)
		{ after(grammarAccess.getUnitElementAccess().getIdAlternatives_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitElement__UnitAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitElementAccess().getUnitUnitParserRuleCall_1_1_0()); }
		ruleUnit
		{ after(grammarAccess.getUnitElementAccess().getUnitUnitParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__RootAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitAccess().getRootUnitElementParserRuleCall_1_0()); }
		ruleUnitElement
		{ after(grammarAccess.getUnitAccess().getRootUnitElementParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__ConnectorsAssignment_2_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitAccess().getConnectorsUnitOpEnumRuleCall_2_0_0_0()); }
		ruleUnitOp
		{ after(grammarAccess.getUnitAccess().getConnectorsUnitOpEnumRuleCall_2_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__UnitsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitAccess().getUnitsUnitElementParserRuleCall_2_1_0()); }
		ruleUnitElement
		{ after(grammarAccess.getUnitAccess().getUnitsUnitElementParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Currency__IdAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCurrencyAccess().getIdUPPERCASE_IDTerminalRuleCall_0_0()); }
		RULE_UPPERCASE_ID
		{ after(grammarAccess.getCurrencyAccess().getIdUPPERCASE_IDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Currency__YearAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCurrencyAccess().getYearINTTerminalRuleCall_1_1_0()); }
		RULE_INT
		{ after(grammarAccess.getCurrencyAccess().getYearINTTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Currency__UnitsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCurrencyAccess().getUnitsUnitElementParserRuleCall_2_1_0()); }
		ruleUnitElement
		{ after(grammarAccess.getCurrencyAccess().getUnitsUnitElementParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__REL_OPERATOR__GtAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getREL_OPERATORAccess().getGtGreaterThanSignKeyword_0_0()); }
		(
			{ before(grammarAccess.getREL_OPERATORAccess().getGtGreaterThanSignKeyword_0_0()); }
			'>'
			{ after(grammarAccess.getREL_OPERATORAccess().getGtGreaterThanSignKeyword_0_0()); }
		)
		{ after(grammarAccess.getREL_OPERATORAccess().getGtGreaterThanSignKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__REL_OPERATOR__LtAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getREL_OPERATORAccess().getLtLessThanSignKeyword_1_0()); }
		(
			{ before(grammarAccess.getREL_OPERATORAccess().getLtLessThanSignKeyword_1_0()); }
			'<'
			{ after(grammarAccess.getREL_OPERATORAccess().getLtLessThanSignKeyword_1_0()); }
		)
		{ after(grammarAccess.getREL_OPERATORAccess().getLtLessThanSignKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__REL_OPERATOR__EqAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getREL_OPERATORAccess().getEqEqualsSignKeyword_2_0()); }
		(
			{ before(grammarAccess.getREL_OPERATORAccess().getEqEqualsSignKeyword_2_0()); }
			'='
			{ after(grammarAccess.getREL_OPERATORAccess().getEqEqualsSignKeyword_2_0()); }
		)
		{ after(grammarAccess.getREL_OPERATORAccess().getEqEqualsSignKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__REL_OPERATOR__NeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getREL_OPERATORAccess().getNeExclamationMarkEqualsSignKeyword_3_0()); }
		(
			{ before(grammarAccess.getREL_OPERATORAccess().getNeExclamationMarkEqualsSignKeyword_3_0()); }
			'!='
			{ after(grammarAccess.getREL_OPERATORAccess().getNeExclamationMarkEqualsSignKeyword_3_0()); }
		)
		{ after(grammarAccess.getREL_OPERATORAccess().getNeExclamationMarkEqualsSignKeyword_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__REL_OPERATOR__LeAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getREL_OPERATORAccess().getLeLessThanSignEqualsSignKeyword_4_0()); }
		(
			{ before(grammarAccess.getREL_OPERATORAccess().getLeLessThanSignEqualsSignKeyword_4_0()); }
			'<='
			{ after(grammarAccess.getREL_OPERATORAccess().getLeLessThanSignEqualsSignKeyword_4_0()); }
		)
		{ after(grammarAccess.getREL_OPERATORAccess().getLeLessThanSignEqualsSignKeyword_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__REL_OPERATOR__GeAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getREL_OPERATORAccess().getGeGreaterThanSignEqualsSignKeyword_5_0()); }
		(
			{ before(grammarAccess.getREL_OPERATORAccess().getGeGreaterThanSignEqualsSignKeyword_5_0()); }
			'>='
			{ after(grammarAccess.getREL_OPERATORAccess().getGeGreaterThanSignEqualsSignKeyword_5_0()); }
		)
		{ after(grammarAccess.getREL_OPERATORAccess().getGeGreaterThanSignEqualsSignKeyword_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__NumberAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralAccess().getNumberNumberParserRuleCall_0_0()); }
		ruleNumber
		{ after(grammarAccess.getLiteralAccess().getNumberNumberParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__FromAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralAccess().getFromNumberParserRuleCall_1_0_0()); }
		ruleNumber
		{ after(grammarAccess.getLiteralAccess().getFromNumberParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__ToAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralAccess().getToNumberParserRuleCall_1_2_0()); }
		ruleNumber
		{ after(grammarAccess.getLiteralAccess().getToNumberParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__StringAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralAccess().getStringSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getLiteralAccess().getStringSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__DateAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralAccess().getDateDateParserRuleCall_3_0()); }
		ruleDate
		{ after(grammarAccess.getLiteralAccess().getDateDateParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__BooleanAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralAccess().getBooleanAlternatives_4_0()); }
		(rule__Literal__BooleanAlternatives_4_0)
		{ after(grammarAccess.getLiteralAccess().getBooleanAlternatives_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__ListsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBodyAccess().getListsStatementListParserRuleCall_1_0()); }
		ruleStatementList
		{ after(grammarAccess.getBodyAccess().getListsStatementListParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Verb__NameAssignment_0_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVerbAccess().getNamePathNameParserRuleCall_0_0_0_0()); }
		rulePathName
		{ after(grammarAccess.getVerbAccess().getNamePathNameParserRuleCall_0_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Verb__ParametersAssignment_0_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVerbAccess().getParametersParameterListParserRuleCall_0_0_1_1_0()); }
		ruleParameterList
		{ after(grammarAccess.getVerbAccess().getParametersParameterListParserRuleCall_0_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Verb__ActionsAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVerbAccess().getActionsActionsParserRuleCall_1_0_1_0()); }
		ruleActions
		{ after(grammarAccess.getVerbAccess().getActionsActionsParserRuleCall_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__BodyAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGroupAccess().getBodyBodyParserRuleCall_2_0()); }
		ruleBody
		{ after(grammarAccess.getGroupAccess().getBodyBodyParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementList__FirstAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementListAccess().getFirstStatementParserRuleCall_0_0()); }
		ruleStatement
		{ after(grammarAccess.getStatementListAccess().getFirstStatementParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementList__NextAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementListAccess().getNextNextStatementParserRuleCall_1_0()); }
		ruleNextStatement
		{ after(grammarAccess.getStatementListAccess().getNextNextStatementParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__VerbAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getVerbVerbParserRuleCall_0_0()); }
		ruleVerb
		{ after(grammarAccess.getStatementAccess().getVerbVerbParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__GroupAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getGroupGroupParserRuleCall_1_0()); }
		ruleGroup
		{ after(grammarAccess.getStatementAccess().getGroupGroupParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__TextAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getTextEMBEDDEDTEXTTerminalRuleCall_2_0()); }
		RULE_EMBEDDEDTEXT
		{ after(grammarAccess.getStatementAccess().getTextEMBEDDEDTEXTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__IfAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getIfIfStatementParserRuleCall_3_0()); }
		ruleIfStatement
		{ after(grammarAccess.getStatementAccess().getIfIfStatementParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__WhileAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getWhileWhileStatementParserRuleCall_4_0()); }
		ruleWhileStatement
		{ after(grammarAccess.getStatementAccess().getWhileWhileStatementParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__DoAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getDoDoStatementParserRuleCall_5_0()); }
		ruleDoStatement
		{ after(grammarAccess.getStatementAccess().getDoDoStatementParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__ForAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getForForStatementParserRuleCall_6_0()); }
		ruleForStatement
		{ after(grammarAccess.getStatementAccess().getForForStatementParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NextStatement__VerbAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNextStatementAccess().getVerbVerbParserRuleCall_1_0_0()); }
		ruleVerb
		{ after(grammarAccess.getNextStatementAccess().getVerbVerbParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NextStatement__GroupAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNextStatementAccess().getGroupGroupParserRuleCall_1_1_0()); }
		ruleGroup
		{ after(grammarAccess.getNextStatementAccess().getGroupGroupParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NextStatement__TextAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNextStatementAccess().getTextEMBEDDEDTEXTTerminalRuleCall_1_2_0()); }
		RULE_EMBEDDEDTEXT
		{ after(grammarAccess.getNextStatementAccess().getTextEMBEDDEDTEXTTerminalRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NextStatement__IfAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNextStatementAccess().getIfIfStatementParserRuleCall_1_3_0()); }
		ruleIfStatement
		{ after(grammarAccess.getNextStatementAccess().getIfIfStatementParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NextStatement__WhileAssignment_1_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNextStatementAccess().getWhileWhileStatementParserRuleCall_1_4_0()); }
		ruleWhileStatement
		{ after(grammarAccess.getNextStatementAccess().getWhileWhileStatementParserRuleCall_1_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NextStatement__DoAssignment_1_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNextStatementAccess().getDoDoStatementParserRuleCall_1_5_0()); }
		ruleDoStatement
		{ after(grammarAccess.getNextStatementAccess().getDoDoStatementParserRuleCall_1_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NextStatement__ForAssignment_1_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNextStatementAccess().getForForStatementParserRuleCall_1_6_0()); }
		ruleForStatement
		{ after(grammarAccess.getNextStatementAccess().getForForStatementParserRuleCall_1_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__ExpressionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStatementAccess().getExpressionEXPRTerminalRuleCall_1_0()); }
		RULE_EXPR
		{ after(grammarAccess.getIfStatementAccess().getExpressionEXPRTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__BodyAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStatementAccess().getBodyIfBodyParserRuleCall_2_0()); }
		ruleIfBody
		{ after(grammarAccess.getIfStatementAccess().getBodyIfBodyParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__ElseIfExpressionAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStatementAccess().getElseIfExpressionEXPRTerminalRuleCall_3_2_0()); }
		RULE_EXPR
		{ after(grammarAccess.getIfStatementAccess().getElseIfExpressionEXPRTerminalRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__ElseIfCallAssignment_3_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStatementAccess().getElseIfCallIfBodyParserRuleCall_3_3_0()); }
		ruleIfBody
		{ after(grammarAccess.getIfStatementAccess().getElseIfCallIfBodyParserRuleCall_3_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__ElseCallAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStatementAccess().getElseCallIfBodyParserRuleCall_4_1_0()); }
		ruleIfBody
		{ after(grammarAccess.getIfStatementAccess().getElseCallIfBodyParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfBody__VerbAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfBodyAccess().getVerbVerbParserRuleCall_0_0()); }
		ruleVerb
		{ after(grammarAccess.getIfBodyAccess().getVerbVerbParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfBody__GroupAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfBodyAccess().getGroupGroupParserRuleCall_1_0()); }
		ruleGroup
		{ after(grammarAccess.getIfBodyAccess().getGroupGroupParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__ExpressionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhileStatementAccess().getExpressionEXPRTerminalRuleCall_1_0()); }
		RULE_EXPR
		{ after(grammarAccess.getWhileStatementAccess().getExpressionEXPRTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__BodyAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhileStatementAccess().getBodyIfBodyParserRuleCall_2_0()); }
		ruleIfBody
		{ after(grammarAccess.getWhileStatementAccess().getBodyIfBodyParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoStatement__BodyAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDoStatementAccess().getBodyIfBodyParserRuleCall_1_0()); }
		ruleIfBody
		{ after(grammarAccess.getDoStatementAccess().getBodyIfBodyParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoStatement__ExpressionAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDoStatementAccess().getExpressionEXPRTerminalRuleCall_3_0()); }
		RULE_EXPR
		{ after(grammarAccess.getDoStatementAccess().getExpressionEXPRTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__IdAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStatementAccess().getIdLOWERCASE_IDTerminalRuleCall_1_0_0()); }
		RULE_LOWERCASE_ID
		{ after(grammarAccess.getForStatementAccess().getIdLOWERCASE_IDTerminalRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStatementAccess().getValueValueParserRuleCall_2_0()); }
		ruleValue
		{ after(grammarAccess.getForStatementAccess().getValueValueParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__BodyAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStatementAccess().getBodyIfBodyParserRuleCall_3_0()); }
		ruleIfBody
		{ after(grammarAccess.getForStatementAccess().getBodyIfBodyParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actions__StatementAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionsAccess().getStatementStatementParserRuleCall_0_0()); }
		ruleStatement
		{ after(grammarAccess.getActionsAccess().getStatementStatementParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actions__StatementsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionsAccess().getStatementsStatementListParserRuleCall_1_1_0()); }
		ruleStatementList
		{ after(grammarAccess.getActionsAccess().getStatementsStatementListParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actions__MatchAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionsAccess().getMatchMatchParserRuleCall_2_0()); }
		ruleMatch
		{ after(grammarAccess.getActionsAccess().getMatchMatchParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actions__MatchesAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionsAccess().getMatchesMatchParserRuleCall_3_1_0()); }
		ruleMatch
		{ after(grammarAccess.getActionsAccess().getMatchesMatchParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actions__MatchesAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionsAccess().getMatchesMatchParserRuleCall_3_2_0()); }
		ruleMatch
		{ after(grammarAccess.getActionsAccess().getMatchesMatchParserRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__IdAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMatchAccess().getIdLOWERCASE_IDTerminalRuleCall_0_0_0()); }
		RULE_LOWERCASE_ID
		{ after(grammarAccess.getMatchAccess().getIdLOWERCASE_IDTerminalRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__BodyAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMatchAccess().getBodyStatementListParserRuleCall_0_2_0()); }
		ruleStatementList
		{ after(grammarAccess.getMatchAccess().getBodyStatementListParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__TypeAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMatchAccess().getTypeCAMELCASE_IDTerminalRuleCall_1_0_0()); }
		RULE_CAMELCASE_ID
		{ after(grammarAccess.getMatchAccess().getTypeCAMELCASE_IDTerminalRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__BodyAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMatchAccess().getBodyStatementListParserRuleCall_1_2_0()); }
		ruleStatementList
		{ after(grammarAccess.getMatchAccess().getBodyStatementListParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__RegexpAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMatchAccess().getRegexpREGEXPTerminalRuleCall_2_0_0()); }
		RULE_REGEXP
		{ after(grammarAccess.getMatchAccess().getRegexpREGEXPTerminalRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__BodyAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMatchAccess().getBodyStatementListParserRuleCall_2_2_0()); }
		ruleStatementList
		{ after(grammarAccess.getMatchAccess().getBodyStatementListParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__ObservableAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMatchAccess().getObservableOBSERVABLETerminalRuleCall_3_0_0()); }
		RULE_OBSERVABLE
		{ after(grammarAccess.getMatchAccess().getObservableOBSERVABLETerminalRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__BodyAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMatchAccess().getBodyStatementListParserRuleCall_3_2_0()); }
		ruleStatementList
		{ after(grammarAccess.getMatchAccess().getBodyStatementListParserRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__LiteralAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMatchAccess().getLiteralLiteralParserRuleCall_4_0_0()); }
		ruleLiteral
		{ after(grammarAccess.getMatchAccess().getLiteralLiteralParserRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__BodyAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMatchAccess().getBodyStatementListParserRuleCall_4_2_0()); }
		ruleStatementList
		{ after(grammarAccess.getMatchAccess().getBodyStatementListParserRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__TextAssignment_5_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMatchAccess().getTextSTRINGTerminalRuleCall_5_0_0()); }
		RULE_STRING
		{ after(grammarAccess.getMatchAccess().getTextSTRINGTerminalRuleCall_5_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__BodyAssignment_5_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMatchAccess().getBodyStatementListParserRuleCall_5_2_0()); }
		ruleStatementList
		{ after(grammarAccess.getMatchAccess().getBodyStatementListParserRuleCall_5_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__ArgumentsAssignment_6_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMatchAccess().getArgumentsArgumentDeclarationParserRuleCall_6_0_0()); }
		ruleArgumentDeclaration
		{ after(grammarAccess.getMatchAccess().getArgumentsArgumentDeclarationParserRuleCall_6_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__BodyAssignment_6_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMatchAccess().getBodyStatementListParserRuleCall_6_2_0()); }
		ruleStatementList
		{ after(grammarAccess.getMatchAccess().getBodyStatementListParserRuleCall_6_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Int0Assignment_7_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMatchAccess().getInt0NumberParserRuleCall_7_0_0()); }
		ruleNumber
		{ after(grammarAccess.getMatchAccess().getInt0NumberParserRuleCall_7_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__LeftLimitAssignment_7_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMatchAccess().getLeftLimitInclusiveKeyword_7_1_0_0()); }
		(
			{ before(grammarAccess.getMatchAccess().getLeftLimitInclusiveKeyword_7_1_0_0()); }
			'inclusive'
			{ after(grammarAccess.getMatchAccess().getLeftLimitInclusiveKeyword_7_1_0_0()); }
		)
		{ after(grammarAccess.getMatchAccess().getLeftLimitInclusiveKeyword_7_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__Int1Assignment_7_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMatchAccess().getInt1NumberParserRuleCall_7_3_0()); }
		ruleNumber
		{ after(grammarAccess.getMatchAccess().getInt1NumberParserRuleCall_7_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__RightLimitAssignment_7_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMatchAccess().getRightLimitInclusiveKeyword_7_4_0_0()); }
		(
			{ before(grammarAccess.getMatchAccess().getRightLimitInclusiveKeyword_7_4_0_0()); }
			'inclusive'
			{ after(grammarAccess.getMatchAccess().getRightLimitInclusiveKeyword_7_4_0_0()); }
		)
		{ after(grammarAccess.getMatchAccess().getRightLimitInclusiveKeyword_7_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__BodyAssignment_7_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMatchAccess().getBodyStatementListParserRuleCall_7_6_0()); }
		ruleStatementList
		{ after(grammarAccess.getMatchAccess().getBodyStatementListParserRuleCall_7_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__SetAssignment_8_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMatchAccess().getSetListParserRuleCall_8_1_0()); }
		ruleList
		{ after(grammarAccess.getMatchAccess().getSetListParserRuleCall_8_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__BodyAssignment_8_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMatchAccess().getBodyStatementListParserRuleCall_8_3_0()); }
		ruleStatementList
		{ after(grammarAccess.getMatchAccess().getBodyStatementListParserRuleCall_8_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__QuantityAssignment_9_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMatchAccess().getQuantityQuantityParserRuleCall_9_0_0()); }
		ruleQuantity
		{ after(grammarAccess.getMatchAccess().getQuantityQuantityParserRuleCall_9_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__BodyAssignment_9_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMatchAccess().getBodyStatementListParserRuleCall_9_2_0()); }
		ruleStatementList
		{ after(grammarAccess.getMatchAccess().getBodyStatementListParserRuleCall_9_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__DateAssignment_10_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMatchAccess().getDateDateParserRuleCall_10_0_0()); }
		ruleDate
		{ after(grammarAccess.getMatchAccess().getDateDateParserRuleCall_10_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__BodyAssignment_10_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMatchAccess().getBodyStatementListParserRuleCall_10_2_0()); }
		ruleStatementList
		{ after(grammarAccess.getMatchAccess().getBodyStatementListParserRuleCall_10_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__ExprAssignment_11_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMatchAccess().getExprEXPRTerminalRuleCall_11_0_0()); }
		RULE_EXPR
		{ after(grammarAccess.getMatchAccess().getExprEXPRTerminalRuleCall_11_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__BodyAssignment_11_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMatchAccess().getBodyStatementListParserRuleCall_11_2_0()); }
		ruleStatementList
		{ after(grammarAccess.getMatchAccess().getBodyStatementListParserRuleCall_11_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__NodataAssignment_12_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMatchAccess().getNodataUnknownKeyword_12_0_0()); }
		(
			{ before(grammarAccess.getMatchAccess().getNodataUnknownKeyword_12_0_0()); }
			'unknown'
			{ after(grammarAccess.getMatchAccess().getNodataUnknownKeyword_12_0_0()); }
		)
		{ after(grammarAccess.getMatchAccess().getNodataUnknownKeyword_12_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__BodyAssignment_12_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMatchAccess().getBodyStatementListParserRuleCall_12_2_0()); }
		ruleStatementList
		{ after(grammarAccess.getMatchAccess().getBodyStatementListParserRuleCall_12_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__StarAssignment_13_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMatchAccess().getStarAsteriskKeyword_13_0_0()); }
		(
			{ before(grammarAccess.getMatchAccess().getStarAsteriskKeyword_13_0_0()); }
			'*'
			{ after(grammarAccess.getMatchAccess().getStarAsteriskKeyword_13_0_0()); }
		)
		{ after(grammarAccess.getMatchAccess().getStarAsteriskKeyword_13_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__BodyAssignment_13_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMatchAccess().getBodyStatementListParserRuleCall_13_2_0()); }
		ruleStatementList
		{ after(grammarAccess.getMatchAccess().getBodyStatementListParserRuleCall_13_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__AnythingAssignment_14_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMatchAccess().getAnythingNumberSignKeyword_14_0_0()); }
		(
			{ before(grammarAccess.getMatchAccess().getAnythingNumberSignKeyword_14_0_0()); }
			'#'
			{ after(grammarAccess.getMatchAccess().getAnythingNumberSignKeyword_14_0_0()); }
		)
		{ after(grammarAccess.getMatchAccess().getAnythingNumberSignKeyword_14_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Match__BodyAssignment_14_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMatchAccess().getBodyStatementListParserRuleCall_14_2_0()); }
		ruleStatementList
		{ after(grammarAccess.getMatchAccess().getBodyStatementListParserRuleCall_14_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__NegativeAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberAccess().getNegativeHyphenMinusKeyword_0_1_0()); }
		(
			{ before(grammarAccess.getNumberAccess().getNegativeHyphenMinusKeyword_0_1_0()); }
			'-'
			{ after(grammarAccess.getNumberAccess().getNegativeHyphenMinusKeyword_0_1_0()); }
		)
		{ after(grammarAccess.getNumberAccess().getNegativeHyphenMinusKeyword_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__RealAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberAccess().getRealINTTerminalRuleCall_1_0()); }
		RULE_INT
		{ after(grammarAccess.getNumberAccess().getRealINTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__LongAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberAccess().getLongLKeyword_2_0()); }
		(
			{ before(grammarAccess.getNumberAccess().getLongLKeyword_2_0()); }
			'l'
			{ after(grammarAccess.getNumberAccess().getLongLKeyword_2_0()); }
		)
		{ after(grammarAccess.getNumberAccess().getLongLKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__DecimalAssignment_3_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberAccess().getDecimalFullStopKeyword_3_0_0_0()); }
		(
			{ before(grammarAccess.getNumberAccess().getDecimalFullStopKeyword_3_0_0_0()); }
			'.'
			{ after(grammarAccess.getNumberAccess().getDecimalFullStopKeyword_3_0_0_0()); }
		)
		{ after(grammarAccess.getNumberAccess().getDecimalFullStopKeyword_3_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__DecimalPartAssignment_3_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberAccess().getDecimalPartINTTerminalRuleCall_3_0_1_0()); }
		RULE_INT
		{ after(grammarAccess.getNumberAccess().getDecimalPartINTTerminalRuleCall_3_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__ExponentialAssignment_4_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberAccess().getExponentialAlternatives_4_0_0_0()); }
		(rule__Number__ExponentialAlternatives_4_0_0_0)
		{ after(grammarAccess.getNumberAccess().getExponentialAlternatives_4_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__ExpNegativeAssignment_4_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberAccess().getExpNegativeHyphenMinusKeyword_4_0_1_1_0()); }
		(
			{ before(grammarAccess.getNumberAccess().getExpNegativeHyphenMinusKeyword_4_0_1_1_0()); }
			'-'
			{ after(grammarAccess.getNumberAccess().getExpNegativeHyphenMinusKeyword_4_0_1_1_0()); }
		)
		{ after(grammarAccess.getNumberAccess().getExpNegativeHyphenMinusKeyword_4_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__ExpAssignment_4_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberAccess().getExpINTTerminalRuleCall_4_0_2_0()); }
		RULE_INT
		{ after(grammarAccess.getNumberAccess().getExpINTTerminalRuleCall_4_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__YearAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDateAccess().getYearINTTerminalRuleCall_0_0()); }
		RULE_INT
		{ after(grammarAccess.getDateAccess().getYearINTTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__BcAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDateAccess().getBcBCKeyword_1_2_0()); }
		(
			{ before(grammarAccess.getDateAccess().getBcBCKeyword_1_2_0()); }
			'BC'
			{ after(grammarAccess.getDateAccess().getBcBCKeyword_1_2_0()); }
		)
		{ after(grammarAccess.getDateAccess().getBcBCKeyword_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__MonthAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDateAccess().getMonthINTTerminalRuleCall_3_0()); }
		RULE_INT
		{ after(grammarAccess.getDateAccess().getMonthINTTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__DayAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDateAccess().getDayINTTerminalRuleCall_5_0()); }
		RULE_INT
		{ after(grammarAccess.getDateAccess().getDayINTTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__HourAssignment_6_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDateAccess().getHourINTTerminalRuleCall_6_0_0()); }
		RULE_INT
		{ after(grammarAccess.getDateAccess().getHourINTTerminalRuleCall_6_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__MinAssignment_6_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDateAccess().getMinINTTerminalRuleCall_6_2_0()); }
		RULE_INT
		{ after(grammarAccess.getDateAccess().getMinINTTerminalRuleCall_6_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__SecAssignment_6_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDateAccess().getSecINTTerminalRuleCall_6_3_1_0()); }
		RULE_INT
		{ after(grammarAccess.getDateAccess().getSecINTTerminalRuleCall_6_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__MsAssignment_6_3_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDateAccess().getMsINTTerminalRuleCall_6_3_2_1_0()); }
		RULE_INT
		{ after(grammarAccess.getDateAccess().getMsINTTerminalRuleCall_6_3_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_UPPERCASE_ID : 'A'..'Z' ('A'..'Z'|'_')*;

RULE_UPPERCASE_PATH : RULE_UPPERCASE_ID ('.' RULE_UPPERCASE_ID)*;

RULE_CAMELCASE_ID : 'A'..'Z' ('A'..'z'|'0'..'9')*;

RULE_LOWERCASE_ID : 'a'..'z' ('a'..'z'|'0'..'9'|'_')*;

RULE_ARGVALUE : '$' ('0'..'9')*;

RULE_EXPR : '[' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|']'|'\\')|~(('\\'|']')))* ']';

RULE_EMBEDDEDTEXT : '%%%' (' '* '-')* '\r' ( options {greedy=false;} : . )*'%%%' (' '* '-')*;

RULE_REGEXP : '%' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'%'|'\\')|~(('\\'|'%')))* '%';

RULE_OBSERVABLE : '{' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'\\')|~(('\\'|'}')))* '}';

RULE_SEPARATOR : '---' '-'*;

RULE_ANNOTATION_ID : '@' RULE_LOWERCASE_ID;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
